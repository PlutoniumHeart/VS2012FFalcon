; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\common\oob.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?gPlayerSquadrons@@3PAUSquadPlayerStr@@A	; gPlayerSquadrons
PUBLIC	?TeamNameIDs@@3PAJA				; TeamNameIDs
PUBLIC	?gOOB_Visible@@3PADA				; gOOB_Visible
PUBLIC	?gOOBTree@@3PAVC_TreeList@@A			; gOOBTree
PUBLIC	?gSelectedDivision@@3JA				; gSelectedDivision
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
_BSS	SEGMENT
?gPlayerSquadrons@@3PAUSquadPlayerStr@@A DD 01H DUP (?)	; gPlayerSquadrons
?gOOB_Visible@@3PADA DB 08H DUP (?)			; gOOB_Visible
?gOOBTree@@3PAVC_TreeList@@A DD 01H DUP (?)		; gOOBTree
?gSelectedDivision@@3JA DD 01H DUP (?)			; gSelectedDivision
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
_DATA	SEGMENT
_TeamFlagBtnIDs DD 04787H
	DD	04789H
	DD	0478bH
	DD	0478dH
	DD	0478fH
	DD	04791H
	DD	04793H
	DD	04795H
_TeamColorCtrlIDs DD 04788H
	DD	0478aH
	DD	0478cH
	DD	0478eH
	DD	04790H
	DD	04792H
	DD	04794H
	DD	04796H
_ObjectiveCategoryNames DD 00H
	DD	068H
	DD	067H
	DD	061H
	DD	069H
	DD	06bH
	DD	06cH
	DD	05aH
	DD	06eH
	DD	06aH
	DD	06dH
	DD	06fH
	DD	00H
	DD	00H
_SectionFilterBtns DD 04783H
	DD	04784H
	DD	04785H
	DD	04786H
_OOBCategories DD 010000H
	DD	020000H
	DD	040000H
	DD	080000H
?TeamNameIDs@@3PAJA DD 065H				; TeamNameIDs
	DD	064H
	DD	064H
	DD	076H
	DD	077H
	DD	078H
	DD	066H
	DD	065H
_DATA	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	?GetFlag@TeamClass@@QAEHXZ			; TeamClass::GetFlag
PUBLIC	?GetColor@TeamClass@@QAEHXZ			; TeamClass::GetColor
PUBLIC	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetObjectiveStatus
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	?SetXY@O_Output@@QAEXJJ@Z			; O_Output::SetXY
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?_GetCType_@C_Base@@QAEFXZ			; C_Base::_GetCType_
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetParent@C_Base@@QAEPAVC_Window@@XZ		; C_Base::GetParent
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z		; C_Entity::SetOwner
PUBLIC	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ		; C_Entity::GetOwner
PUBLIC	?SetIconBg@C_Entity@@QAEXFFFF@Z			; C_Entity::SetIconBg
PUBLIC	?SetInfoBg@C_Entity@@QAEXFFFF@Z			; C_Entity::SetInfoBg
PUBLIC	?SetIcon@C_Entity@@QAEXFFJ@Z			; C_Entity::SetIcon
PUBLIC	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z	; C_Entity::SetIcon
PUBLIC	?SetName@C_Entity@@QAEXFFPAD@Z			; C_Entity::SetName
PUBLIC	?SetStatus@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetStatus
PUBLIC	?SetIconBgColor@C_Entity@@QAEXKK@Z		; C_Entity::SetIconBgColor
PUBLIC	?SetInfoBgColor@C_Entity@@QAEXKK@Z		; C_Entity::SetInfoBgColor
PUBLIC	?SetOperational@C_Entity@@QAEXE@Z		; C_Entity::SetOperational
PUBLIC	?GetOperational@C_Entity@@QAEEXZ		; C_Entity::GetOperational
PUBLIC	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z		; C_Entity::SetVUID
PUBLIC	?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ		; C_Entity::GetVUID
PUBLIC	?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z	; C_Squadron::SetOwner
PUBLIC	?GetOwner@C_Squadron@@QAEPAVTREELIST@@XZ	; C_Squadron::GetOwner
PUBLIC	?SetIconBg@C_Squadron@@QAEXFFFF@Z		; C_Squadron::SetIconBg
PUBLIC	?SetInfoBg@C_Squadron@@QAEXFFFF@Z		; C_Squadron::SetInfoBg
PUBLIC	?SetIcon@C_Squadron@@QAEXFFJ@Z			; C_Squadron::SetIcon
PUBLIC	?SetName@C_Squadron@@QAEXFFPAD@Z		; C_Squadron::SetName
PUBLIC	?SetPlanes@C_Squadron@@QAEXFFPAD@Z		; C_Squadron::SetPlanes
PUBLIC	?SetPilots@C_Squadron@@QAEXFFPAD@Z		; C_Squadron::SetPilots
PUBLIC	?SetPlayers@C_Squadron@@QAEXFFPAD@Z		; C_Squadron::SetPlayers
PUBLIC	?SetIconBgColor@C_Squadron@@QAEXKK@Z		; C_Squadron::SetIconBgColor
PUBLIC	?SetInfoBgColor@C_Squadron@@QAEXKK@Z		; C_Squadron::SetInfoBgColor
PUBLIC	?SetBaseID@C_Squadron@@QAEXJ@Z			; C_Squadron::SetBaseID
PUBLIC	?SetNumVehicles@C_Squadron@@QAEXF@Z		; C_Squadron::SetNumVehicles
PUBLIC	?SetNumPilots@C_Squadron@@QAEXF@Z		; C_Squadron::SetNumPilots
PUBLIC	?SetNumPlayers@C_Squadron@@QAEXF@Z		; C_Squadron::SetNumPlayers
PUBLIC	?GetNumVehicles@C_Squadron@@QAEFXZ		; C_Squadron::GetNumVehicles
PUBLIC	?GetNumPilots@C_Squadron@@QAEFXZ		; C_Squadron::GetNumPilots
PUBLIC	?GetNumPlayers@C_Squadron@@QAEFXZ		; C_Squadron::GetNumPlayers
PUBLIC	?SetVUID@C_Squadron@@QAEXVVU_ID@@@Z		; C_Squadron::SetVUID
PUBLIC	?GetVUID@C_Squadron@@QAE?AVVU_ID@@XZ		; C_Squadron::GetVUID
PUBLIC	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ	; UIComms::GetGame
PUBLIC	??0SquadPlayerStr@@QAE@XZ			; SquadPlayerStr::SquadPlayerStr
PUBLIC	?GetDivID@UI_Refresher@@QAEFXZ			; UI_Refresher::GetDivID
PUBLIC	?GetType@UI_Refresher@@QAEEXZ			; UI_Refresher::GetType
PUBLIC	?GetSide@UI_Refresher@@QAEEXZ			; UI_Refresher::GetSide
PUBLIC	?BuildOOBItem@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; BuildOOBItem
PUBLIC	?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z ; BuildSquadronInfo
PUBLIC	?BuildCategory@@YAPAVC_Entity@@J@Z		; BuildCategory
PUBLIC	?UpdateCategory@@YAXPAVC_Entity@@@Z		; UpdateCategory
PUBLIC	?SelectOOBSquadronCB@@YAXJFPAVC_Base@@@Z	; SelectOOBSquadronCB
PUBLIC	?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z		; SelectOOBEntityCB
PUBLIC	?SetupOOBWindow@@YAXXZ				; SetupOOBWindow
PUBLIC	?FindChildren@@YAHPAVTREELIST@@F@Z		; FindChildren
PUBLIC	?FindOtherChildren@@YAHPAVTREELIST@@F@Z		; FindOtherChildren
PUBLIC	?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z		; ToggleOOBTeamCB
PUBLIC	?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z		; ToggleOOBFilterCB
PUBLIC	?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ; BuildObjectiveInfo
PUBLIC	?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z ; BuildDivisionInfo
PUBLIC	?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z	; BuildUnitInfo
PUBLIC	?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z ; BuildNavalUnitInfo
PUBLIC	?TallyPlayerSquadrons@@YAXXZ			; TallyPlayerSquadrons
PUBLIC	?GetPlayerInfo@@YAXVVU_ID@@@Z			; GetPlayerInfo
PUBLIC	?GetSquadronPlayerCount@@YAFVVU_ID@@@Z		; GetSquadronPlayerCount
PUBLIC	?AddDivisionToOOB@@YAPAVC_Entity@@PAVDivisionClass@@@Z ; AddDivisionToOOB
PUBLIC	?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; AddItemToOOB
PUBLIC	?MoveOOBSquadron@@YAXPAVSquadronClass@@PAVC_Squadron@@@Z ; MoveOOBSquadron
PUBLIC	?FindIcon@@YAXPAVUI_Refresher@@@Z		; FindIcon
PUBLIC	?FindMapIcon@@YAXJ@Z				; FindMapIcon
PUBLIC	?OOBFindCB@@YAXJFPAVC_Base@@@Z			; OOBFindCB
PUBLIC	?OOBInfoCB@@YAXJFPAVC_Base@@@Z			; OOBInfoCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?gSelectedAirbase@@3VVU_ID@@A			; gSelectedAirbase
PUBLIC	?gSelectedEntity@@3VVU_ID@@A			; gSelectedEntity
PUBLIC	??_C@_0BB@POPOBFAJ@Bermuda?5Triangle?$AA@	; `string'
PUBLIC	??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_08CKDPOBFH@?$FLWrong?$FN?6?$AA@		; `string'
PUBLIC	??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@		; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_sprintf:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z:PROC ; VuSessionsIterator::VuSessionsIterator
EXTRN	??1VuSessionsIterator@@UAE@XZ:PROC		; VuSessionsIterator::~VuSessionsIterator
EXTRN	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetFirst
EXTRN	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetNext
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	?GetTeam@@YAEE@Z:PROC				; GetTeam
EXTRN	?GetVehicleName@@YAPADF@Z:PROC			; GetVehicleName
EXTRN	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ:PROC ; UnitClass::GetUnitClassData
EXTRN	?GetVehicleID@UnitClass@@QAEFH@Z:PROC		; UnitClass::GetVehicleID
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetFullstrengthVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetFullstrengthVehicles
EXTRN	?GetName@TeamClass@@QAEPADXZ:PROC		; TeamClass::GetName
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?GetCallsign@@YAXHHPAD@Z:PROC			; GetCallsign
EXTRN	?NumActivePilots@SquadronClass@@QAEHXZ:PROC	; SquadronClass::NumActivePilots
EXTRN	?GetName@DivisionClass@@QAEPADPADHH@Z:PROC	; DivisionClass::GetName
EXTRN	?GetFirstUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ:PROC ; DivisionClass::GetFirstUnitElement
EXTRN	?GetNextUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ:PROC ; DivisionClass::GetNextUnitElement
EXTRN	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z:PROC ; GetDivisionByUnit
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z:PROC	; C_Image::GetImage
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?SetInfo@O_Output@@QAEXXZ:PROC			; O_Output::SetInfo
EXTRN	?SetText@O_Output@@QAEXPAD@Z:PROC		; O_Output::SetText
EXTRN	?SetImage@O_Output@@QAEXJ@Z:PROC		; O_Output::SetImage
EXTRN	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z:PROC	; O_Output::SetImage
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetImage@C_Button@@QAEXFJ@Z:PROC		; C_Button::SetImage
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC ; C_TreeList::AddChildItem
EXTRN	?MoveChildItem@C_TreeList@@QAEXPAVTREELIST@@0@Z:PROC ; C_TreeList::MoveChildItem
EXTRN	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z:PROC	; C_TreeList::Find
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	??0C_Text@@QAE@XZ:PROC				; C_Text::C_Text
EXTRN	?SetColor@C_Line@@QAEXK@Z:PROC			; C_Line::SetColor
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0C_Entity@@QAE@XZ:PROC			; C_Entity::C_Entity
EXTRN	?Setup@C_Entity@@QAEXJF@Z:PROC			; C_Entity::Setup
EXTRN	?InitEntity@C_Entity@@QAEXXZ:PROC		; C_Entity::InitEntity
EXTRN	??0C_Squadron@@QAE@XZ:PROC			; C_Squadron::C_Squadron
EXTRN	?Setup@C_Squadron@@QAEXJF@Z:PROC		; C_Squadron::Setup
EXTRN	?InitSquadron@C_Squadron@@QAEXXZ:PROC		; C_Squadron::InitSquadron
EXTRN	?FindTypeIndex@@YAJJQAJH@Z:PROC			; FindTypeIndex
EXTRN	?FindObjectiveIndex@@YAJPAVObjectiveClass@@@Z:PROC ; FindObjectiveIndex
EXTRN	?GetObjectiveType@@YAJPAVCampBaseClass@@@Z:PROC	; GetObjectiveType
EXTRN	?GetObjectiveCategory@@YAJPAVObjectiveClass@@@Z:PROC ; GetObjectiveCategory
EXTRN	?FindUnitCategory@@YAJPAVUnitClass@@@Z:PROC	; FindUnitCategory
EXTRN	?AddToCurIcons@C_Map@@QAEXPAVMAPICONLIST@@@Z:PROC ; C_Map::AddToCurIcons
EXTRN	?CenterOnIcon@C_Map@@QAEXPAVMAPICONLIST@@@Z:PROC ; C_Map::CenterOnIcon
EXTRN	?Find@GlobalPositioningSystem@@QAEPAXJ@Z:PROC	; GlobalPositioningSystem::Find
EXTRN	??0UI_RequestLogbook@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; UI_RequestLogbook::UI_RequestLogbook
EXTRN	?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z:PROC	; SetupSquadronInfoWindow
EXTRN	?SetupUnitInfoWindow@@YAXVVU_ID@@@Z:PROC	; SetupUnitInfoWindow
EXTRN	?SetupDivisionInfoWindow@@YAXJF@Z:PROC		; SetupDivisionInfoWindow
EXTRN	?BuildSpecificTargetList@@YAXVVU_ID@@@Z:PROC	; BuildSpecificTargetList
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?ObjectiveFilters@@3PAUFILTER_TABLE@@A:BYTE	; ObjectiveFilters
EXTRN	?OBJ_TypeList@@3PAJA:BYTE			; OBJ_TypeList
EXTRN	?TeamColorList@@3PAKA:BYTE			; TeamColorList
EXTRN	?TeamColorIconIDs@@3PAY01JA:BYTE		; TeamColorIconIDs
EXTRN	?FlagImageID@@3PAY04JA:BYTE			; FlagImageID
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gGps@@3PAVGlobalPositioningSystem@@A:DWORD	; gGps
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?gSelectedAirbase@@3VVU_ID@@A DQ 01H DUP (?)		; gSelectedAirbase
?gSelectedEntity@@3VVU_ID@@A DQ 01H DUP (?)		; gSelectedEntity
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@ DB '%s : %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@
CONST	SEGMENT
??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@ DB '%1d %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CKDPOBFH@?$FLWrong?$FN?6?$AA@
CONST	SEGMENT
??_C@_08CKDPOBFH@?$FLWrong?$FN?6?$AA@ DB '[Wrong]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
CONST	SEGMENT
??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@ DB '%1d%% %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POPOBFAJ@Bermuda?5Triangle?$AA@
CONST	SEGMENT
??_C@_0BB@POPOBFAJ@Bermuda?5Triangle?$AA@ DB 'Bermuda Triangle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z$0
__unwindtable$?GetPlayerInfo@@YAXVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlayerInfo@@YAXVVU_ID@@@Z$0
__unwindtable$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z$0
__unwindtable$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z$0
__unwindtable$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z$0
__unwindtable$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z$0
__unwindtable$?SetupOOBWindow@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupOOBWindow@@YAXXZ$0
__unwindtable$?BuildCategory@@YAPAVC_Entity@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildCategory@@YAPAVC_Entity@@J@Z$0
__unwindtable$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z$0
__unwindtable$?TallyPlayerSquadrons@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TallyPlayerSquadrons@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TallyPlayerSquadrons@@YAXXZ$1
__ehfuncinfo$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetPlayerInfo@@YAXVVU_ID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlayerInfo@@YAXVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?TallyPlayerSquadrons@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TallyPlayerSquadrons@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupOOBWindow@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupOOBWindow@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildCategory@@YAPAVC_Entity@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildCategory@@YAPAVC_Entity@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gSelectedAirbase$initializer$ DD FLAT:??__EgSelectedAirbase@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gSelectedEntity$initializer$ DD FLAT:??__EgSelectedEntity@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_urec$1 = -8						; size = 4
_ent$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OOBInfoCB@@YAXJFPAVC_Base@@@Z PROC			; OOBInfoCB

; 1506 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1507 : 	CampEntity ent;
; 1508 : 
; 1509 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN13@OOBInfoCB

; 1510 : 		return;

	jmp	$LN14@OOBInfoCB
$LN13@OOBInfoCB:

; 1511 : 
; 1512 : 	if(gSelectedEntity != FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?gSelectedEntity@@3VVU_ID@@A ; gSelectedEntity
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN12@OOBInfoCB

; 1513 : 	{
; 1514 : 		ent=(CampEntity)vuDatabase->Find(gSelectedEntity);

	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1515 : 		if(ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN11@OOBInfoCB

; 1516 : 		{
; 1517 : 			if(ent->IsSquadron())

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN10@OOBInfoCB

; 1518 : 			{
; 1519 : 				SetupSquadronInfoWindow(gSelectedEntity);

	mov	ecx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	edx
	call	?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z	; SetupSquadronInfoWindow
	add	esp, 8
	jmp	$LN11@OOBInfoCB
$LN10@OOBInfoCB:

; 1520 : 			}
; 1521 : 			else if(ent->IsObjective())

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN8@OOBInfoCB

; 1522 : 			{
; 1523 : 				BuildSpecificTargetList(gSelectedEntity);

	mov	ecx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	edx
	call	?BuildSpecificTargetList@@YAXVVU_ID@@@Z	; BuildSpecificTargetList
	add	esp, 8
	jmp	SHORT $LN11@OOBInfoCB
$LN8@OOBInfoCB:

; 1524 : 			}
; 1525 : 			else if(ent->IsTaskForce())

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+264]
	call	eax
	test	eax, eax
	je	SHORT $LN6@OOBInfoCB

; 1526 : 			{
; 1527 : 				BuildSpecificTargetList(gSelectedEntity);

	mov	ecx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	edx
	call	?BuildSpecificTargetList@@YAXVVU_ID@@@Z	; BuildSpecificTargetList
	add	esp, 8
	jmp	SHORT $LN11@OOBInfoCB
$LN6@OOBInfoCB:

; 1528 : 			}
; 1529 : 			else if(ent->IsUnit())

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	SHORT $LN11@OOBInfoCB

; 1530 : 			{
; 1531 : 				SetupUnitInfoWindow(gSelectedEntity);

	mov	ecx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	edx
	call	?SetupUnitInfoWindow@@YAXVVU_ID@@@Z	; SetupUnitInfoWindow
	add	esp, 8
$LN11@OOBInfoCB:

; 1532 : 			}
; 1533 : 		}
; 1534 : 	}

	jmp	SHORT $LN14@OOBInfoCB
$LN12@OOBInfoCB:

; 1535 : 	else if(gSelectedDivision)

	cmp	DWORD PTR ?gSelectedDivision@@3JA, 0	; gSelectedDivision
	je	SHORT $LN14@OOBInfoCB

; 1536 : 	{
; 1537 : 		UI_Refresher *urec;
; 1538 : 		urec=(UI_Refresher *)gGps->Find(gSelectedDivision & 0x00ffffff); // strip off team (incase it is a division)

	mov	eax, DWORD PTR ?gSelectedDivision@@3JA	; gSelectedDivision
	and	eax, 16777215				; 00ffffffH
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$1[ebp], eax

; 1539 : 		if(urec && urec->GetType() == GPS_DIVISION)

	cmp	DWORD PTR _urec$1[ebp], 0
	je	SHORT $LN14@OOBInfoCB
	mov	ecx, DWORD PTR _urec$1[ebp]
	call	?GetType@UI_Refresher@@QAEEXZ		; UI_Refresher::GetType
	movzx	ecx, al
	cmp	ecx, 4
	jne	SHORT $LN14@OOBInfoCB

; 1540 : 			SetupDivisionInfoWindow(urec->GetDivID(),urec->GetSide()); // Map & Tree save team # in top 8 bits (Needed to find division by team)

	mov	ecx, DWORD PTR _urec$1[ebp]
	call	?GetSide@UI_Refresher@@QAEEXZ		; UI_Refresher::GetSide
	movzx	dx, al
	movzx	eax, dx
	push	eax
	mov	ecx, DWORD PTR _urec$1[ebp]
	call	?GetDivID@UI_Refresher@@QAEFXZ		; UI_Refresher::GetDivID
	movsx	ecx, ax
	push	ecx
	call	?SetupDivisionInfoWindow@@YAXJF@Z	; SetupDivisionInfoWindow
	add	esp, 8
$LN14@OOBInfoCB:

; 1541 : 	}
; 1542 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OOBInfoCB@@YAXJFPAVC_Base@@@Z ENDP			; OOBInfoCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_urec$1 = -8						; size = 4
_ent$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OOBFindCB@@YAXJFPAVC_Base@@@Z PROC			; OOBFindCB

; 1468 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1469 : 	CampEntity ent;
; 1470 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN13@OOBFindCB

; 1471 : 		return;

	jmp	$LN14@OOBFindCB
$LN13@OOBFindCB:

; 1472 : 
; 1473 : 	if(gSelectedEntity != FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?gSelectedEntity@@3VVU_ID@@A ; gSelectedEntity
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN12@OOBFindCB

; 1474 : 	{
; 1475 : 		ent=(CampEntity)vuDatabase->Find(gSelectedEntity);

	mov	edx, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gSelectedEntity@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1476 : 		if(ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN11@OOBFindCB

; 1477 : 		{
; 1478 : 			if(ent->IsSquadron())

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN10@OOBFindCB

; 1479 : 			{
; 1480 : 				FindMapIcon(ent->GetCampID());

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	call	?FindMapIcon@@YAXJ@Z			; FindMapIcon
	add	esp, 4
	jmp	$LN11@OOBFindCB
$LN10@OOBFindCB:

; 1481 : 			}
; 1482 : 			else if(ent->IsObjective())

	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN8@OOBFindCB

; 1483 : 			{
; 1484 : 				FindMapIcon(ent->GetCampID());

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	call	?FindMapIcon@@YAXJ@Z			; FindMapIcon
	add	esp, 4
	jmp	SHORT $LN11@OOBFindCB
$LN8@OOBFindCB:

; 1485 : 			}
; 1486 : 			else if(ent->IsTaskForce())

	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+264]
	call	edx
	test	eax, eax
	je	SHORT $LN6@OOBFindCB

; 1487 : 			{
; 1488 : 				FindMapIcon(ent->GetCampID());

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	call	?FindMapIcon@@YAXJ@Z			; FindMapIcon
	add	esp, 4
	jmp	SHORT $LN11@OOBFindCB
$LN6@OOBFindCB:

; 1489 : 			}
; 1490 : 			else if(ent->IsUnit())

	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN11@OOBFindCB

; 1491 : 			{
; 1492 : 				FindMapIcon(ent->GetCampID());

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	call	?FindMapIcon@@YAXJ@Z			; FindMapIcon
	add	esp, 4
$LN11@OOBFindCB:

; 1493 : 			}
; 1494 : 		}
; 1495 : 	}

	jmp	SHORT $LN14@OOBFindCB
$LN12@OOBFindCB:

; 1496 : 	else if(gSelectedDivision)

	cmp	DWORD PTR ?gSelectedDivision@@3JA, 0	; gSelectedDivision
	je	SHORT $LN14@OOBFindCB

; 1497 : 	{
; 1498 : 		UI_Refresher *urec;
; 1499 : 		urec=(UI_Refresher *)gGps->Find(gSelectedDivision & 0x00ffffff); // strip off team (incase it is a division)

	mov	edx, DWORD PTR ?gSelectedDivision@@3JA	; gSelectedDivision
	and	edx, 16777215				; 00ffffffH
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$1[ebp], eax

; 1500 : 		if(urec && urec->GetType() == GPS_DIVISION)

	cmp	DWORD PTR _urec$1[ebp], 0
	je	SHORT $LN14@OOBFindCB
	mov	ecx, DWORD PTR _urec$1[ebp]
	call	?GetType@UI_Refresher@@QAEEXZ		; UI_Refresher::GetType
	movzx	eax, al
	cmp	eax, 4
	jne	SHORT $LN14@OOBFindCB

; 1501 : 			FindIcon(urec); // Map & Tree save team # in top 8 bits (Needed to find division by team)

	mov	ecx, DWORD PTR _urec$1[ebp]
	push	ecx
	call	?FindIcon@@YAXPAVUI_Refresher@@@Z	; FindIcon
	add	esp, 4
$LN14@OOBFindCB:

; 1502 : 	}
; 1503 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OOBFindCB@@YAXJFPAVC_Base@@@Z ENDP			; OOBFindCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_urec$ = -4						; size = 4
_CampID$ = 8						; size = 4
?FindMapIcon@@YAXJ@Z PROC				; FindMapIcon

; 1459 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1460 : 	UI_Refresher *urec;
; 1461 : 
; 1462 : 	urec=(UI_Refresher *)gGps->Find(CampID);

	mov	eax, DWORD PTR _CampID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 1463 : 	if(urec)

	cmp	DWORD PTR _urec$[ebp], 0
	je	SHORT $LN2@FindMapIco

; 1464 : 		FindIcon(urec);

	mov	ecx, DWORD PTR _urec$[ebp]
	push	ecx
	call	?FindIcon@@YAXPAVUI_Refresher@@@Z	; FindIcon
	add	esp, 4
$LN2@FindMapIco:

; 1465 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindMapIcon@@YAXJ@Z ENDP				; FindMapIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_urec$ = 8						; size = 4
?FindIcon@@YAXPAVUI_Refresher@@@Z PROC			; FindIcon

; 1450 : {

	push	ebp
	mov	ebp, esp

; 1451 : 	if(urec->MapItem_)

	mov	eax, DWORD PTR _urec$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN2@FindIcon

; 1452 : 	{
; 1453 : 		gMapMgr->AddToCurIcons(urec->MapItem_);

	mov	ecx, DWORD PTR _urec$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?AddToCurIcons@C_Map@@QAEXPAVMAPICONLIST@@@Z ; C_Map::AddToCurIcons

; 1454 : 		gMapMgr->CenterOnIcon(urec->MapItem_);

	mov	eax, DWORD PTR _urec$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?CenterOnIcon@C_Map@@QAEXPAVMAPICONLIST@@@Z ; C_Map::CenterOnIcon
$LN2@FindIcon:

; 1455 : 	}
; 1456 : }

	pop	ebp
	ret	0
?FindIcon@@YAXPAVUI_Refresher@@@Z ENDP			; FindIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_Leave$ = -20						; size = 4
_item$ = -16						; size = 4
_BaseInfo$ = -12					; size = 4
_Base$ = -8						; size = 4
_newloc$ = -4						; size = 4
_sqd$ = 8						; size = 4
_Squadron$ = 12						; size = 4
?MoveOOBSquadron@@YAXPAVSquadronClass@@PAVC_Squadron@@@Z PROC ; MoveOOBSquadron

; 1408 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1409 : 	TREELIST *item=NULL;

	mov	DWORD PTR _item$[ebp], 0

; 1410 : 	TREELIST *newloc=NULL;

	mov	DWORD PTR _newloc$[ebp], 0

; 1411 : 	CampEntity Base=NULL;

	mov	DWORD PTR _Base$[ebp], 0

; 1412 : 	C_Entity *BaseInfo=NULL;

	mov	DWORD PTR _BaseInfo$[ebp], 0

; 1413 : 	F4CSECTIONHANDLE *Leave;
; 1414 : 
; 1415 : 
; 1416 : 	item=Squadron->GetOwner();

	mov	ecx, DWORD PTR _Squadron$[ebp]
	call	?GetOwner@C_Squadron@@QAEPAVTREELIST@@XZ ; C_Squadron::GetOwner
	mov	DWORD PTR _item$[ebp], eax

; 1417 : 	if(!item)

	cmp	DWORD PTR _item$[ebp], 0
	jne	SHORT $LN9@MoveOOBSqu

; 1418 : 		return;

	jmp	$LN10@MoveOOBSqu
$LN9@MoveOOBSqu:

; 1419 : 
; 1420 : 	Leave=UI_Enter(gOOBTree->GetParent());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1421 : 
; 1422 : 	Base=sqd->GetUnitAirbase();

	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _Base$[ebp], eax

; 1423 : 	if(Base)

	cmp	DWORD PTR _Base$[ebp], 0
	je	SHORT $LN8@MoveOOBSqu

; 1424 : 	{
; 1425 : 		newloc=gOOBTree->Find(Base->GetCampID());

	mov	ecx, DWORD PTR _Base$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Base$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _newloc$[ebp], eax

; 1426 : 		if(!newloc)

	cmp	DWORD PTR _newloc$[ebp], 0
	jne	SHORT $LN7@MoveOOBSqu

; 1427 : 		{
; 1428 : 			BaseInfo=(C_Entity*)AddItemToOOB(Base);

	mov	edx, DWORD PTR _Base$[ebp]
	push	edx
	call	?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; AddItemToOOB
	add	esp, 4
	mov	DWORD PTR _BaseInfo$[ebp], eax

; 1429 : 			if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN6@MoveOOBSqu

; 1430 : 				newloc=BaseInfo->GetOwner();

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _newloc$[ebp], eax

; 1431 : 			else

	jmp	SHORT $LN7@MoveOOBSqu
$LN6@MoveOOBSqu:

; 1432 : 				newloc=gOOBTree->Find((sqd->GetTeam() << 24) | OOB_AIRFORCE);

	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	or	ecx, 65536				; 00010000H
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _newloc$[ebp], eax
$LN7@MoveOOBSqu:

; 1433 : 		}
; 1434 : 	}
; 1435 : 	else

	jmp	SHORT $LN4@MoveOOBSqu
$LN8@MoveOOBSqu:

; 1436 : 		newloc=gOOBTree->Find((sqd->GetTeam() << 24) | OOB_AIRFORCE);

	mov	edx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	shl	eax, 24					; 00000018H
	or	eax, 65536				; 00010000H
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _newloc$[ebp], eax
$LN4@MoveOOBSqu:

; 1437 : 
; 1438 : 	if(newloc && newloc != item->Parent)

	cmp	DWORD PTR _newloc$[ebp], 0
	je	SHORT $LN3@MoveOOBSqu
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR _newloc$[ebp]
	cmp	edx, DWORD PTR [ecx+36]
	je	SHORT $LN3@MoveOOBSqu

; 1439 : 	{
; 1440 : 		gOOBTree->MoveChildItem(newloc,item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newloc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?MoveChildItem@C_TreeList@@QAEXPAVTREELIST@@0@Z ; C_TreeList::MoveChildItem

; 1441 : 		if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN2@MoveOOBSqu

; 1442 : 			Squadron->SetBaseID(BaseInfo->GetID());

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	ecx, DWORD PTR _Squadron$[ebp]
	call	?SetBaseID@C_Squadron@@QAEXJ@Z		; C_Squadron::SetBaseID

; 1443 : 		else

	jmp	SHORT $LN3@MoveOOBSqu
$LN2@MoveOOBSqu:

; 1444 : 			Squadron->SetBaseID(0);

	push	0
	mov	ecx, DWORD PTR _Squadron$[ebp]
	call	?SetBaseID@C_Squadron@@QAEXJ@Z		; C_Squadron::SetBaseID
$LN3@MoveOOBSqu:

; 1445 : 	}
; 1446 : 	UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN10@MoveOOBSqu:

; 1447 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MoveOOBSquadron@@YAXPAVSquadronClass@@PAVC_Squadron@@@Z ENDP ; MoveOOBSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
tv552 = -136						; size = 4
$T2 = -132						; size = 4
$T3 = -128						; size = 4
tv384 = -124						; size = 4
$T4 = -120						; size = 4
tv329 = -116						; size = 4
$T5 = -112						; size = 4
tv283 = -108						; size = 4
$T6 = -104						; size = 4
tv229 = -100						; size = 4
$T7 = -96						; size = 4
tv418 = -92						; size = 4
$T8 = -88						; size = 4
_idx$ = -84						; size = 4
$T9 = -80						; size = 4
$T10 = -76						; size = 4
$T11 = -72						; size = 4
$T12 = -68						; size = 4
$T13 = -64						; size = 4
_TeamID$ = -60						; size = 4
_Type$ = -56						; size = 4
_upar$ = -52						; size = 4
_DivID$ = -48						; size = 4
_Base$ = -44						; size = 4
_Cat$ = -40						; size = 4
_item$ = -36						; size = 4
_txt$ = -32						; size = 4
_Team_Cat$ = -28					; size = 4
_BaseInfo$ = -24					; size = 4
_subcat$ = -20						; size = 4
_oobitem$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z PROC	; AddItemToOOB

; 1231 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1232 : 	TREELIST *Team_Cat,*item,*subcat;
; 1233 : 	CampEntity Base;
; 1234 : 	C_Entity  *BaseInfo;
; 1235 : 	C_Base *oobitem=NULL;

	mov	DWORD PTR _oobitem$[ebp], 0

; 1236 : 	C_Text *txt;
; 1237 : 	Unit upar;
; 1238 : 	long TeamID,Cat,Type,idx,DivID;
; 1239 : 
; 1240 : 	TeamID=(entity->GetTeam() << 24);

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _TeamID$[ebp], ecx

; 1241 : 	if(entity->IsUnit())

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN48@AddItemToO

; 1242 : 		Cat=FindUnitCategory((Unit)entity);

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	call	?FindUnitCategory@@YAJPAVUnitClass@@@Z	; FindUnitCategory
	add	esp, 4
	mov	DWORD PTR _Cat$[ebp], eax
	jmp	SHORT $LN47@AddItemToO
$LN48@AddItemToO:

; 1243 : 	else if(entity->IsObjective())

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN46@AddItemToO

; 1244 : 		Cat=GetObjectiveCategory((Objective)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?GetObjectiveCategory@@YAJPAVObjectiveClass@@@Z ; GetObjectiveCategory
	add	esp, 4
	mov	DWORD PTR _Cat$[ebp], eax

; 1245 : 	else

	jmp	SHORT $LN47@AddItemToO
$LN46@AddItemToO:

; 1246 : 		Cat=0;

	mov	DWORD PTR _Cat$[ebp], 0
$LN47@AddItemToO:

; 1247 : 
; 1248 : 	if(!Cat)

	cmp	DWORD PTR _Cat$[ebp], 0
	jne	SHORT $LN44@AddItemToO

; 1249 : 		return(NULL);

	xor	eax, eax
	jmp	$LN49@AddItemToO
$LN44@AddItemToO:

; 1250 : 
; 1251 : 	TeamID |= Cat;

	mov	edx, DWORD PTR _TeamID$[ebp]
	or	edx, DWORD PTR _Cat$[ebp]
	mov	DWORD PTR _TeamID$[ebp], edx

; 1252 : 	Team_Cat=gOOBTree->Find(TeamID);

	mov	eax, DWORD PTR _TeamID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _Team_Cat$[ebp], eax

; 1253 : 	if(Team_Cat)

	cmp	DWORD PTR _Team_Cat$[ebp], 0
	je	$LN43@AddItemToO

; 1254 : 	{
; 1255 : 		item=gOOBTree->Find(entity->GetCampID());

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _item$[ebp], eax

; 1256 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN42@AddItemToO

; 1257 : 			return(item->Item_);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	jmp	$LN49@AddItemToO
$LN42@AddItemToO:

; 1258 : 		oobitem=BuildOOBItem(entity);

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	call	?BuildOOBItem@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; BuildOOBItem
	add	esp, 4
	mov	DWORD PTR _oobitem$[ebp], eax

; 1259 : 		if(oobitem)

	cmp	DWORD PTR _oobitem$[ebp], 0
	je	$LN43@AddItemToO

; 1260 : 		{
; 1261 : 			if(gOOB_Visible[entity->GetOwner()]) // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	movsx	edx, BYTE PTR ?gOOB_Visible@@3PADA[ecx]
	test	edx, edx
	je	SHORT $LN40@AddItemToO

; 1262 : 				oobitem->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1263 : 			else

	jmp	SHORT $LN39@AddItemToO
$LN40@AddItemToO:

; 1264 : 				oobitem->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN39@AddItemToO:

; 1265 : 
; 1266 : 			if(Cat != OOB_OBJECTIVE)

	cmp	DWORD PTR _Cat$[ebp], 524288		; 00080000H
	je	$LN38@AddItemToO

; 1267 : 			{
; 1268 : 				if(entity->IsSquadron())

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	$LN37@AddItemToO

; 1269 : 				{
; 1270 : 					BaseInfo=NULL;

	mov	DWORD PTR _BaseInfo$[ebp], 0

; 1271 : 					Base=((Squadron)entity)->GetUnitAirbase();

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _Base$[ebp], eax

; 1272 : 					if(Base && Base != entity)

	cmp	DWORD PTR _Base$[ebp], 0
	je	$LN36@AddItemToO
	mov	ecx, DWORD PTR _Base$[ebp]
	cmp	ecx, DWORD PTR _entity$[ebp]
	je	$LN36@AddItemToO

; 1273 : 					{
; 1274 : 						subcat=gOOBTree->Find(Base->GetCampID());

	mov	edx, DWORD PTR _Base$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _Base$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _subcat$[ebp], eax

; 1275 : 						if(!subcat)

	cmp	DWORD PTR _subcat$[ebp], 0
	jne	SHORT $LN35@AddItemToO

; 1276 : 						{
; 1277 : 							BaseInfo=(C_Entity*)AddItemToOOB(Base);

	mov	ecx, DWORD PTR _Base$[ebp]
	push	ecx
	call	?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; AddItemToOOB
	add	esp, 4
	mov	DWORD PTR _BaseInfo$[ebp], eax

; 1278 : 							if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN34@AddItemToO

; 1279 : 								subcat=BaseInfo->GetOwner();

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _subcat$[ebp], eax

; 1280 : 							else

	jmp	SHORT $LN35@AddItemToO
$LN34@AddItemToO:

; 1281 : 							{
; 1282 : 								oobitem->Cleanup();

	mov	edx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax+176]
	call	edx

; 1283 : 								delete oobitem;

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR $T13[ebp], ecx
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN51@AddItemToO
	push	1
	mov	edx, DWORD PTR $T13[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T13[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv229[ebp], eax
	jmp	SHORT $LN52@AddItemToO
$LN51@AddItemToO:
	mov	DWORD PTR tv229[ebp], 0
$LN52@AddItemToO:

; 1284 : 								return(NULL);

	xor	eax, eax
	jmp	$LN49@AddItemToO
$LN35@AddItemToO:

; 1285 : 							}
; 1286 : 						}
; 1287 : 					}
; 1288 : 					else

	jmp	SHORT $LN32@AddItemToO
$LN36@AddItemToO:

; 1289 : 						subcat=Team_Cat;

	mov	eax, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], eax
$LN32@AddItemToO:
	jmp	$LN31@AddItemToO
$LN37@AddItemToO:

; 1290 : 				}
; 1291 : 				else if(entity->IsBattalion())

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	test	eax, eax
	je	$LN30@AddItemToO

; 1292 : 				{
; 1293 : 					upar=((Unit)entity)->GetUnitParent();

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+944]
	call	eax
	mov	DWORD PTR _upar$[ebp], eax

; 1294 : 					if(upar)

	cmp	DWORD PTR _upar$[ebp], 0
	je	$LN29@AddItemToO

; 1295 : 					{
; 1296 : 						subcat=gOOBTree->Find(upar->GetCampID());

	mov	ecx, DWORD PTR _upar$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _upar$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _subcat$[ebp], eax

; 1297 : 						if(!subcat)

	cmp	DWORD PTR _subcat$[ebp], 0
	jne	SHORT $LN28@AddItemToO

; 1298 : 						{
; 1299 : 							BaseInfo=(C_Entity*)AddItemToOOB(upar);

	mov	edx, DWORD PTR _upar$[ebp]
	push	edx
	call	?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z ; AddItemToOOB
	add	esp, 4
	mov	DWORD PTR _BaseInfo$[ebp], eax

; 1300 : 							if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN27@AddItemToO

; 1301 : 								subcat=BaseInfo->GetOwner();

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _subcat$[ebp], eax

; 1302 : 							else

	jmp	SHORT $LN28@AddItemToO
$LN27@AddItemToO:

; 1303 : 							{
; 1304 : 								oobitem->Cleanup();

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 1305 : 								delete oobitem;

	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T12[ebp], edx
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN53@AddItemToO
	push	1
	mov	eax, DWORD PTR $T12[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T12[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv283[ebp], eax
	jmp	SHORT $LN54@AddItemToO
$LN53@AddItemToO:
	mov	DWORD PTR tv283[ebp], 0
$LN54@AddItemToO:

; 1306 : 								return(NULL);

	xor	eax, eax
	jmp	$LN49@AddItemToO
$LN28@AddItemToO:

; 1307 : 							}
; 1308 : 						}
; 1309 : 					}
; 1310 : 					else

	jmp	$LN25@AddItemToO
$LN29@AddItemToO:

; 1311 : 					{
; 1312 : 						DivID=((Unit)entity)->GetUnitDivision();

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+904]
	call	eax
	mov	DWORD PTR _DivID$[ebp], eax

; 1313 : 						if(DivID)

	cmp	DWORD PTR _DivID$[ebp], 0
	je	$LN24@AddItemToO

; 1314 : 						{
; 1315 : 							subcat=gOOBTree->Find((entity->GetTeam() << 24) | DivID | UR_DIVISION);

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	or	ecx, DWORD PTR _DivID$[ebp]
	or	ecx, 65536				; 00010000H
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _subcat$[ebp], eax

; 1316 : 							if(!subcat)

	cmp	DWORD PTR _subcat$[ebp], 0
	jne	SHORT $LN23@AddItemToO

; 1317 : 							{
; 1318 : 								BaseInfo=AddDivisionToOOB(GetDivisionByUnit((Unit)entity));

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	call	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z ; GetDivisionByUnit
	add	esp, 4
	push	eax
	call	?AddDivisionToOOB@@YAPAVC_Entity@@PAVDivisionClass@@@Z ; AddDivisionToOOB
	add	esp, 4
	mov	DWORD PTR _BaseInfo$[ebp], eax

; 1319 : 								if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN22@AddItemToO

; 1320 : 									subcat=BaseInfo->GetOwner();

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _subcat$[ebp], eax

; 1321 : 								else

	jmp	SHORT $LN23@AddItemToO
$LN22@AddItemToO:

; 1322 : 								{
; 1323 : 									oobitem->Cleanup();

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 1324 : 									delete oobitem;

	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T11[ebp], edx
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN55@AddItemToO
	push	1
	mov	eax, DWORD PTR $T11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T11[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv329[ebp], eax
	jmp	SHORT $LN56@AddItemToO
$LN55@AddItemToO:
	mov	DWORD PTR tv329[ebp], 0
$LN56@AddItemToO:

; 1325 : 									return(NULL);

	xor	eax, eax
	jmp	$LN49@AddItemToO
$LN23@AddItemToO:

; 1326 : 								}
; 1327 : 							}
; 1328 : 						}
; 1329 : 						else

	jmp	SHORT $LN25@AddItemToO
$LN24@AddItemToO:

; 1330 : 							subcat=Team_Cat;

	mov	ecx, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], ecx
$LN25@AddItemToO:

; 1331 : 					}

	jmp	$LN31@AddItemToO
$LN30@AddItemToO:

; 1332 : 				}
; 1333 : 				else if(entity->IsBrigade())

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+244]
	call	edx
	test	eax, eax
	je	$LN18@AddItemToO

; 1334 : 				{
; 1335 : 					DivID=((Unit)entity)->GetUnitDivision();

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+904]
	call	eax
	mov	DWORD PTR _DivID$[ebp], eax

; 1336 : 					if(DivID)

	cmp	DWORD PTR _DivID$[ebp], 0
	je	$LN17@AddItemToO

; 1337 : 					{
; 1338 : 						subcat=gOOBTree->Find((entity->GetTeam() << 24) | DivID | UR_DIVISION);

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	or	ecx, DWORD PTR _DivID$[ebp]
	or	ecx, 65536				; 00010000H
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _subcat$[ebp], eax

; 1339 : 						if(!subcat)

	cmp	DWORD PTR _subcat$[ebp], 0
	jne	SHORT $LN16@AddItemToO

; 1340 : 						{
; 1341 : 							BaseInfo=AddDivisionToOOB(GetDivisionByUnit((Unit)entity));

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	call	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z ; GetDivisionByUnit
	add	esp, 4
	push	eax
	call	?AddDivisionToOOB@@YAPAVC_Entity@@PAVDivisionClass@@@Z ; AddDivisionToOOB
	add	esp, 4
	mov	DWORD PTR _BaseInfo$[ebp], eax

; 1342 : 							if(BaseInfo)

	cmp	DWORD PTR _BaseInfo$[ebp], 0
	je	SHORT $LN15@AddItemToO

; 1343 : 								subcat=BaseInfo->GetOwner();

	mov	ecx, DWORD PTR _BaseInfo$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _subcat$[ebp], eax

; 1344 : 							else

	jmp	SHORT $LN16@AddItemToO
$LN15@AddItemToO:

; 1345 : 							{
; 1346 : 								oobitem->Cleanup();

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 1347 : 								delete oobitem;

	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T10[ebp], edx
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN57@AddItemToO
	push	1
	mov	eax, DWORD PTR $T10[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T10[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv384[ebp], eax
	jmp	SHORT $LN58@AddItemToO
$LN57@AddItemToO:
	mov	DWORD PTR tv384[ebp], 0
$LN58@AddItemToO:

; 1348 : 								return(NULL);

	xor	eax, eax
	jmp	$LN49@AddItemToO
$LN16@AddItemToO:

; 1349 : 							}
; 1350 : 						}
; 1351 : 					}
; 1352 : 					else

	jmp	SHORT $LN13@AddItemToO
$LN17@AddItemToO:

; 1353 : 						subcat=Team_Cat;

	mov	ecx, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], ecx
$LN13@AddItemToO:

; 1354 : 				}
; 1355 : 				else

	jmp	SHORT $LN31@AddItemToO
$LN18@AddItemToO:

; 1356 : 					subcat=Team_Cat;

	mov	edx, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], edx
$LN31@AddItemToO:
	jmp	$LN11@AddItemToO
$LN38@AddItemToO:

; 1357 : 			}
; 1358 : 			else if(Cat == OOB_OBJECTIVE)

	cmp	DWORD PTR _Cat$[ebp], 524288		; 00080000H
	jne	$LN10@AddItemToO

; 1359 : 			{
; 1360 : 				idx=FindObjectiveIndex((Objective)entity);

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	call	?FindObjectiveIndex@@YAJPAVObjectiveClass@@@Z ; FindObjectiveIndex
	add	esp, 4
	mov	DWORD PTR _idx$[ebp], eax

; 1361 : 				if(idx >= 0)

	cmp	DWORD PTR _idx$[ebp], 0
	jl	$LN9@AddItemToO

; 1362 : 				{
; 1363 : 					Type=ObjectiveFilters[idx].UIType;

	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR ?ObjectiveFilters@@3PAUFILTER_TABLE@@A[ecx+4]
	mov	DWORD PTR _Type$[ebp], edx

; 1364 : 					subcat=gOOBTree->Find((entity->GetTeam() << 24) | Type);

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	or	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _subcat$[ebp], eax

; 1365 : 					if(!subcat)

	cmp	DWORD PTR _subcat$[ebp], 0
	jne	$LN8@AddItemToO

; 1366 : 					{
; 1367 : 						txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN59@AddItemToO
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv418[ebp], eax
	jmp	SHORT $LN60@AddItemToO
$LN59@AddItemToO:
	mov	DWORD PTR tv418[ebp], 0
$LN60@AddItemToO:
	mov	edx, DWORD PTR tv418[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 1368 : 						txt->Setup(Type,0);

	push	0
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 1369 : 						txt->SetFont(gOOBTree->GetFont());

	mov	eax, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 1370 : 						txt->SetText(ObjectiveCategoryNames[FindTypeIndex(Type,OBJ_TypeList,_MAP_NUM_OBJ_TYPES_)]);

	push	14					; 0000000eH
	push	OFFSET ?OBJ_TypeList@@3PAJA		; OBJ_TypeList
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	call	?FindTypeIndex@@YAJJQAJH@Z		; FindTypeIndex
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _ObjectiveCategoryNames[eax*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1371 : 						subcat=gOOBTree->CreateItem((entity->GetTeam() << 24) | Type,C_TYPE_MENU,txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _Type$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _subcat$[ebp], eax

; 1372 : 						gOOBTree->AddChildItem(Team_Cat,subcat);

	mov	ecx, DWORD PTR _subcat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Team_Cat$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem
$LN8@AddItemToO:

; 1373 : 					}
; 1374 : 				}
; 1375 : 				else

	jmp	SHORT $LN7@AddItemToO
$LN9@AddItemToO:

; 1376 : 					subcat=Team_Cat;

	mov	eax, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], eax
$LN7@AddItemToO:

; 1377 : 			}
; 1378 : 			else

	jmp	SHORT $LN11@AddItemToO
$LN10@AddItemToO:

; 1379 : 				subcat=Team_Cat;

	mov	ecx, DWORD PTR _Team_Cat$[ebp]
	mov	DWORD PTR _subcat$[ebp], ecx
$LN11@AddItemToO:

; 1380 : 
; 1381 : 			item=gOOBTree->CreateItem(oobitem->GetID(),/* oobitem->GetType() */ C_TYPE_ITEM,oobitem);

	mov	edx, DWORD PTR _oobitem$[ebp]
	push	edx
	push	50					; 00000032H
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1382 : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN5@AddItemToO

; 1383 : 			{
; 1384 : 				if(oobitem->_GetCType_() == _CNTL_ENTITY_)

	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16413				; 0000401dH
	jne	SHORT $LN4@AddItemToO

; 1385 : 				{
; 1386 : 					((C_Entity*)oobitem)->SetOwner(item);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z	; C_Entity::SetOwner

; 1387 : 					((C_Entity*)oobitem)->SetFont(gOOBTree->GetFont());

	mov	edx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	edx, DWORD PTR [eax+124]
	call	edx
	push	eax
	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	jmp	SHORT $LN3@AddItemToO
$LN4@AddItemToO:

; 1388 : 				}
; 1389 : 				else if(oobitem->_GetCType_() == _CNTL_SQUAD_)

	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16412				; 0000401cH
	jne	SHORT $LN3@AddItemToO

; 1390 : 				{
; 1391 : 					((C_Squadron*)oobitem)->SetOwner(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z ; C_Squadron::SetOwner

; 1392 : 					((C_Squadron*)oobitem)->SetFont(gOOBTree->GetFont());

	mov	eax, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
$LN3@AddItemToO:

; 1393 : 				}
; 1394 : 				gOOBTree->AddChildItem(subcat,item);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _subcat$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem

; 1395 : 			}
; 1396 : 			else

	jmp	SHORT $LN43@AddItemToO
$LN5@AddItemToO:

; 1397 : 			{
; 1398 : 				oobitem->Cleanup();

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 1399 : 				delete oobitem;

	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T9[ebp], edx
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN61@AddItemToO
	push	1
	mov	eax, DWORD PTR $T9[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T9[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv552[ebp], eax
	jmp	SHORT $LN62@AddItemToO
$LN61@AddItemToO:
	mov	DWORD PTR tv552[ebp], 0
$LN62@AddItemToO:

; 1400 : 				oobitem=NULL;

	mov	DWORD PTR _oobitem$[ebp], 0
$LN43@AddItemToO:

; 1401 : 			}
; 1402 : 		}
; 1403 : 	}
; 1404 : 	return(oobitem);

	mov	eax, DWORD PTR _oobitem$[ebp]
$LN49@AddItemToO:

; 1405 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddItemToOOB@@YAPAVC_Base@@PAVCampBaseClass@@@Z ENDP	; AddItemToOOB
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
tv241 = -36						; size = 4
$T1 = -32						; size = 4
_Cat$ = -28						; size = 4
$T2 = -24						; size = 4
_Team_Cat$ = -20					; size = 4
_TeamID$ = -16						; size = 4
_item$ = -12						; size = 4
_un$ = -8						; size = 4
_oobitem$ = -4						; size = 4
_div$ = 8						; size = 4
?AddDivisionToOOB@@YAPAVC_Entity@@PAVDivisionClass@@@Z PROC ; AddDivisionToOOB

; 1174 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 1175 : 	TREELIST *Team_Cat=NULL,*item=NULL;

	mov	DWORD PTR _Team_Cat$[ebp], 0
	mov	DWORD PTR _item$[ebp], 0

; 1176 : 	Unit un;
; 1177 : 	C_Entity *oobitem=NULL;

	mov	DWORD PTR _oobitem$[ebp], 0

; 1178 : 	long TeamID,Cat;
; 1179 : 
; 1180 : 	if(!div)

	cmp	DWORD PTR _div$[ebp], 0
	jne	SHORT $LN14@AddDivisio

; 1181 : 		return(NULL);

	xor	eax, eax
	jmp	$LN15@AddDivisio
$LN14@AddDivisio:

; 1182 : 
; 1183 : 	un=div->GetFirstUnitElement();

	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetFirstUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ ; DivisionClass::GetFirstUnitElement
	mov	DWORD PTR _un$[ebp], eax

; 1184 : 	if(!un)

	cmp	DWORD PTR _un$[ebp], 0
	jne	SHORT $LN12@AddDivisio

; 1185 : 		return(NULL);

	xor	eax, eax
	jmp	$LN15@AddDivisio
$LN12@AddDivisio:

; 1186 : 
; 1187 : 	while(un && un->GetSType() != div->type)

	cmp	DWORD PTR _un$[ebp], 0
	je	SHORT $LN11@AddDivisio
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	eax, al
	mov	ecx, DWORD PTR _div$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	cmp	eax, edx
	je	SHORT $LN11@AddDivisio

; 1188 : 		un=div->GetNextUnitElement();

	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetNextUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ ; DivisionClass::GetNextUnitElement
	mov	DWORD PTR _un$[ebp], eax
	jmp	SHORT $LN12@AddDivisio
$LN11@AddDivisio:

; 1189 : 
; 1190 : 	if(!un)

	cmp	DWORD PTR _un$[ebp], 0
	jne	SHORT $LN10@AddDivisio

; 1191 : 		un=div->GetFirstUnitElement();

	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetFirstUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ ; DivisionClass::GetFirstUnitElement
	mov	DWORD PTR _un$[ebp], eax
$LN10@AddDivisio:

; 1192 : 
; 1193 : 	TeamID=(un->GetTeam() << 24);

	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _TeamID$[ebp], ecx

; 1194 : 	Cat=FindUnitCategory(un);

	mov	edx, DWORD PTR _un$[ebp]
	push	edx
	call	?FindUnitCategory@@YAJPAVUnitClass@@@Z	; FindUnitCategory
	add	esp, 4
	mov	DWORD PTR _Cat$[ebp], eax

; 1195 : 	if(!Cat)

	cmp	DWORD PTR _Cat$[ebp], 0
	jne	SHORT $LN9@AddDivisio

; 1196 : 		return(NULL);

	xor	eax, eax
	jmp	$LN15@AddDivisio
$LN9@AddDivisio:

; 1197 : 
; 1198 : 	TeamID |= Cat;

	mov	eax, DWORD PTR _TeamID$[ebp]
	or	eax, DWORD PTR _Cat$[ebp]
	mov	DWORD PTR _TeamID$[ebp], eax

; 1199 : 	Team_Cat=gOOBTree->Find(TeamID);

	mov	ecx, DWORD PTR _TeamID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _Team_Cat$[ebp], eax

; 1200 : 	if(Team_Cat)

	cmp	DWORD PTR _Team_Cat$[ebp], 0
	je	$LN8@AddDivisio

; 1201 : 	{
; 1202 : 		item=gOOBTree->Find((un->GetTeam() << 24) | div->nid | UR_DIVISION);

	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _div$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	or	eax, edx
	or	eax, 65536				; 00010000H
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _item$[ebp], eax

; 1203 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN7@AddDivisio

; 1204 : 			return((C_Entity *)item->Item_);

	mov	eax, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [eax+20]
	jmp	$LN15@AddDivisio
$LN7@AddDivisio:

; 1205 : 		oobitem=BuildDivisionInfo(div,un);

	mov	ecx, DWORD PTR _un$[ebp]
	push	ecx
	mov	edx, DWORD PTR _div$[ebp]
	push	edx
	call	?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z ; BuildDivisionInfo
	add	esp, 8
	mov	DWORD PTR _oobitem$[ebp], eax

; 1206 : 		if(oobitem)

	cmp	DWORD PTR _oobitem$[ebp], 0
	je	$LN8@AddDivisio

; 1207 : 		{
; 1208 : 			oobitem->SetCallback(SelectOOBEntityCB);

	push	OFFSET ?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z ; SelectOOBEntityCB
	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1209 : 			item=gOOBTree->CreateItem(oobitem->GetID(),/* oobitem->GetType()*/ C_TYPE_ITEM,oobitem);

	mov	ecx, DWORD PTR _oobitem$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1210 : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN5@AddDivisio

; 1211 : 			{
; 1212 : 				if(oobitem->_GetCType_() == _CNTL_ENTITY_)

	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16413				; 0000401dH
	jne	SHORT $LN4@AddDivisio

; 1213 : 					((C_Entity*)oobitem)->SetOwner(item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z	; C_Entity::SetOwner
	jmp	SHORT $LN3@AddDivisio
$LN4@AddDivisio:

; 1214 : 				else if(oobitem->_GetCType_() == _CNTL_SQUAD_)

	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16412				; 0000401cH
	jne	SHORT $LN3@AddDivisio

; 1215 : 					((C_Squadron*)oobitem)->SetOwner(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _oobitem$[ebp]
	call	?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z ; C_Squadron::SetOwner
$LN3@AddDivisio:

; 1216 : 				oobitem->SetFont(gOOBTree->GetFont());

	mov	eax, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 1217 : 				gOOBTree->AddChildItem(Team_Cat,item);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Team_Cat$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem

; 1218 : 			}
; 1219 : 			else

	jmp	SHORT $LN8@AddDivisio
$LN5@AddDivisio:

; 1220 : 			{
; 1221 : 				oobitem->Cleanup();

	mov	eax, DWORD PTR _oobitem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 1222 : 				delete oobitem;

	mov	ecx, DWORD PTR _oobitem$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN17@AddDivisio
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv241[ebp], eax
	jmp	SHORT $LN18@AddDivisio
$LN17@AddDivisio:
	mov	DWORD PTR tv241[ebp], 0
$LN18@AddDivisio:

; 1223 : 				oobitem=NULL;

	mov	DWORD PTR _oobitem$[ebp], 0
$LN8@AddDivisio:

; 1224 : 			}
; 1225 : 		}
; 1226 : 	}
; 1227 : 	return(oobitem);

	mov	eax, DWORD PTR _oobitem$[ebp]
$LN15@AddDivisio:

; 1228 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddDivisionToOOB@@YAPAVC_Entity@@PAVDivisionClass@@@Z ENDP ; AddDivisionToOOB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_cur$ = -4						; size = 4
_SquadID$ = 8						; size = 8
?GetSquadronPlayerCount@@YAFVVU_ID@@@Z PROC		; GetSquadronPlayerCount

; 939  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 940  : 	SQUADRONPLAYER *cur;
; 941  : 
; 942  : 	cur=gPlayerSquadrons;

	mov	eax, DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A ; gPlayerSquadrons
	mov	DWORD PTR _cur$[ebp], eax
$LN3@GetSquadro:

; 943  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@GetSquadro

; 944  : 	{
; 945  : 		if(cur->SquadronID == SquadID)

	lea	ecx, DWORD PTR _SquadID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cur$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetSquadro

; 946  : 			return(cur->PlayerCount);

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ax, WORD PTR [eax+8]
	jmp	SHORT $LN4@GetSquadro
$LN1@GetSquadro:

; 947  : 		cur=cur->Next;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _cur$[ebp], edx

; 948  : 	}

	jmp	SHORT $LN3@GetSquadro
$LN2@GetSquadro:

; 949  : 	return(0);

	xor	eax, eax
$LN4@GetSquadro:

; 950  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSquadronPlayerCount@@YAFVVU_ID@@@Z ENDP		; GetSquadronPlayerCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_rlb$ = -28						; size = 4
tv93 = -24						; size = 4
$T3 = -20						; size = 4
_session$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 8
?GetPlayerInfo@@YAXVVU_ID@@@Z PROC			; GetPlayerInfo

; 923  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPlayerInfo@@YAXVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 924  : 	UI_RequestLogbook *rlb;
; 925  : 	FalconSessionEntity *session;
; 926  : 
; 927  : 	session=(FalconSessionEntity*)vuDatabase->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 928  : 	if(session && session != FalconLocalSession)

	cmp	DWORD PTR _session$[ebp], 0
	je	$LN2@GetPlayerI
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	DWORD PTR _session$[ebp], eax
	je	SHORT $LN2@GetPlayerI

; 929  : 	{
; 930  : 		rlb=new UI_RequestLogbook(FalconNullId,session);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@GetPlayerI
	push	1
	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0UI_RequestLogbook@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; UI_RequestLogbook::UI_RequestLogbook
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN5@GetPlayerI
$LN4@GetPlayerI:
	mov	DWORD PTR tv93[ebp], 0
$LN5@GetPlayerI:
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _rlb$[ebp], eax

; 931  : 		rlb->dataBlock.fromID=FalconLocalSessionId;

	mov	ecx, DWORD PTR _rlb$[ebp]
	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [ecx+48], edx
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+52], eax

; 932  : 
; 933  : 		FalconSendMessage(rlb,true);

	push	1
	mov	ecx, DWORD PTR _rlb$[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN2@GetPlayerI:

; 934  : 	}
; 935  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPlayerInfo@@YAXVVU_ID@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlayerInfo@@YAXVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPlayerInfo@@YAXVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlayerInfo@@YAXVVU_ID@@@Z ENDP			; GetPlayerInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_sessionWalker$2 = -72					; size = 12
$T3 = -60						; size = 8
$T4 = -52						; size = 8
$T5 = -44						; size = 4
$T6 = -40						; size = 4
tv143 = -36						; size = 4
$T7 = -32						; size = 4
_done$ = -28						; size = 4
_session$ = -24						; size = 4
_prev$ = -20						; size = 4
_cur$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?TallyPlayerSquadrons@@YAXXZ PROC			; TallyPlayerSquadrons

; 868  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TallyPlayerSquadrons@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 869  : 	SQUADRONPLAYER *cur,*prev;
; 870  : 	FalconSessionEntity *session;
; 871  : 	int done;
; 872  : 
; 873  : 	cur=gPlayerSquadrons;

	mov	eax, DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A ; gPlayerSquadrons
	mov	DWORD PTR _cur$[ebp], eax
$LN14@TallyPlaye:

; 874  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN13@TallyPlaye

; 875  : 	{
; 876  : 		prev=cur;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR _prev$[ebp], ecx

; 877  : 		cur=cur->Next;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _cur$[ebp], eax

; 878  : 		delete prev;

	mov	ecx, DWORD PTR _prev$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 879  : 	}

	jmp	SHORT $LN14@TallyPlaye
$LN13@TallyPlaye:

; 880  : 	gPlayerSquadrons=NULL;

	mov	DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A, 0 ; gPlayerSquadrons

; 881  : 
; 882  : 	if (gCommsMgr->GetGame())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetGame
	test	eax, eax
	je	$LN15@TallyPlaye

; 883  : 	{
; 884  : 		VuSessionsIterator sessionWalker(gCommsMgr->GetGame());

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetGame
	push	eax
	lea	ecx, DWORD PTR _sessionWalker$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 885  : 		session = (FalconSessionEntity*)sessionWalker.GetFirst();

	lea	ecx, DWORD PTR _sessionWalker$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$[ebp], eax
$LN11@TallyPlaye:

; 886  : 		while(session)

	cmp	DWORD PTR _session$[ebp], 0
	je	$LN10@TallyPlaye

; 887  : 		{
; 888  : 			done=0;

	mov	DWORD PTR _done$[ebp], 0

; 889  : 			cur=gPlayerSquadrons;

	mov	eax, DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A ; gPlayerSquadrons
	mov	DWORD PTR _cur$[ebp], eax
$LN9@TallyPlaye:

; 890  : 			while(cur && !done)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN8@TallyPlaye
	cmp	DWORD PTR _done$[ebp], 0
	jne	SHORT $LN8@TallyPlaye

; 891  : 			{
; 892  : 				if(cur->SquadronID == session->GetPlayerSquadronID())

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@TallyPlaye

; 893  : 				{
; 894  : 					cur->PlayerCount++;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	cx, WORD PTR [eax+8]
	add	cx, 1
	mov	edx, DWORD PTR _cur$[ebp]
	mov	WORD PTR [edx+8], cx

; 895  : 					done=1;

	mov	DWORD PTR _done$[ebp], 1

; 896  : 				}
; 897  : 				else

	jmp	SHORT $LN6@TallyPlaye
$LN7@TallyPlaye:

; 898  : 					cur=cur->Next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _cur$[ebp], ecx
$LN6@TallyPlaye:

; 899  : 			}

	jmp	SHORT $LN9@TallyPlaye
$LN8@TallyPlaye:

; 900  : 			if(!cur)

	cmp	DWORD PTR _cur$[ebp], 0
	jne	$LN5@TallyPlaye

; 901  : 			{
; 902  : 				prev=new SQUADRONPLAYER;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN17@TallyPlaye
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0SquadPlayerStr@@QAE@XZ
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN18@TallyPlaye
$LN17@TallyPlaye:
	mov	DWORD PTR tv143[ebp], 0
$LN18@TallyPlaye:
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _prev$[ebp], eax

; 903  : 				prev->SquadronID=session->GetPlayerSquadronID();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _prev$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 904  : 				prev->PlayerCount=1;

	mov	edx, 1
	mov	eax, DWORD PTR _prev$[ebp]
	mov	WORD PTR [eax+8], dx

; 905  : 				prev->Next=NULL;

	mov	ecx, DWORD PTR _prev$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 906  : 
; 907  : 				if(!gPlayerSquadrons)

	cmp	DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A, 0 ; gPlayerSquadrons
	jne	SHORT $LN4@TallyPlaye

; 908  : 					gPlayerSquadrons=prev;

	mov	edx, DWORD PTR _prev$[ebp]
	mov	DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A, edx ; gPlayerSquadrons

; 909  : 				else

	jmp	SHORT $LN5@TallyPlaye
$LN4@TallyPlaye:

; 910  : 				{
; 911  : 					cur=gPlayerSquadrons;

	mov	eax, DWORD PTR ?gPlayerSquadrons@@3PAUSquadPlayerStr@@A ; gPlayerSquadrons
	mov	DWORD PTR _cur$[ebp], eax
$LN2@TallyPlaye:

; 912  : 					while(cur->Next)

	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN1@TallyPlaye

; 913  : 						cur=cur->Next;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN2@TallyPlaye
$LN1@TallyPlaye:

; 914  : 					cur->Next=prev;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR _prev$[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN5@TallyPlaye:

; 915  : 				}
; 916  : 			}
; 917  : 			session = (FalconSessionEntity*)sessionWalker.GetNext();

	lea	ecx, DWORD PTR _sessionWalker$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$[ebp], eax

; 918  : 		}

	jmp	$LN11@TallyPlaye
$LN10@TallyPlaye:

; 919  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN15@TallyPlaye:

; 920  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?TallyPlayerSquadrons@@YAXXZ$0:
	lea	ecx, DWORD PTR _sessionWalker$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?TallyPlayerSquadrons@@YAXXZ$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?TallyPlayerSquadrons@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TallyPlayerSquadrons@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?TallyPlayerSquadrons@@YAXXZ ENDP			; TallyPlayerSquadrons
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -268						; size = 8
$T3 = -260						; size = 4
tv77 = -256						; size = 4
$T4 = -252						; size = 4
_curstr$ = -248						; size = 4
_UnitPtr$ = -244					; size = 4
_totalstr$ = -240					; size = 4
_res$ = -236						; size = 4
_perc$ = -232						; size = 4
_rsc$ = -228						; size = 4
_type$ = -224						; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_unit$ = 8						; size = 4
?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z PROC ; BuildNavalUnitInfo

; 789  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 790  : 	C_Resmgr *res=NULL;

	mov	DWORD PTR _res$[ebp], 0

; 791  : 	IMAGE_RSC *rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0

; 792  : 	C_Entity *newinfo=NULL;

	mov	DWORD PTR _newinfo$[ebp], 0

; 793  : 	_TCHAR buffer[200]={0};

	mov	BYTE PTR _buffer$[ebp], 0
	push	199					; 000000c7H
	push	0
	lea	eax, DWORD PTR _buffer$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 794  : 	short type=32;

	mov	ecx, 32					; 00000020H
	mov	WORD PTR _type$[ebp], cx

; 795  : 	long totalstr=0,curstr=0,perc=0;

	mov	DWORD PTR _totalstr$[ebp], 0
	mov	DWORD PTR _curstr$[ebp], 0
	mov	DWORD PTR _perc$[ebp], 0

; 796  : 
; 797  : 	UnitClassDataType *UnitPtr=NULL;

	mov	DWORD PTR _UnitPtr$[ebp], 0

; 798  : 
; 799  : 	UnitPtr=unit->GetUnitClassData();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$[ebp], eax

; 800  : 	if(UnitPtr == NULL)

	cmp	DWORD PTR _UnitPtr$[ebp], 0
	jne	SHORT $LN11@BuildNaval

; 801  : 		return(NULL);

	xor	eax, eax
	jmp	$LN12@BuildNaval
$LN11@BuildNaval:

; 802  : 
; 803  : 	// Create new parent class
; 804  : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN14@BuildNaval
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN15@BuildNaval
$LN14@BuildNaval:
	mov	DWORD PTR tv77[ebp], 0
$LN15@BuildNaval:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _newinfo$[ebp], eax

; 805  : 	newinfo->Setup(unit->GetCampID(),C_TYPE_MENU);

	push	49					; 00000031H
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 806  : 	newinfo->SetWH(270,32);

	push	32					; 00000020H
	push	270					; 0000010eH
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx

; 807  : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 808  : 
; 809  : 	newinfo->SetVUID(unit->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z	; C_Entity::SetVUID

; 810  : 	newinfo->SetUserNumber(0,unit->GetOwner()); // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 811  : 
; 812  : 	curstr=unit->GetTotalVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	DWORD PTR _curstr$[ebp], eax

; 813  : 	totalstr=unit->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	DWORD PTR _totalstr$[ebp], eax

; 814  : 	if(totalstr < 1) totalstr=1;

	cmp	DWORD PTR _totalstr$[ebp], 1
	jge	SHORT $LN10@BuildNaval
	mov	DWORD PTR _totalstr$[ebp], 1
$LN10@BuildNaval:

; 815  : 	perc=(curstr * 100)/totalstr;

	mov	eax, DWORD PTR _curstr$[ebp]
	imul	eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR _totalstr$[ebp]
	mov	DWORD PTR _perc$[ebp], eax

; 816  : 	if(perc > 100) perc=100;

	cmp	DWORD PTR _perc$[ebp], 100		; 00000064H
	jle	SHORT $LN9@BuildNaval
	mov	DWORD PTR _perc$[ebp], 100		; 00000064H
$LN9@BuildNaval:

; 817  : 
; 818  : 	newinfo->SetOperational(static_cast<uchar>(perc));

	movzx	ecx, BYTE PTR _perc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 819  : 
; 820  : 	// FRB - CTD's Here
; 821  : 	// FRB - deleting too many flags (teams) CTD
; 822  : 	if(perc <= 0)

	cmp	DWORD PTR _perc$[ebp], 0
	jg	SHORT $LN8@BuildNaval

; 823  : 	{
; 824  : 		perc=1;

	mov	DWORD PTR _perc$[ebp], 1

; 825  : 		res = 0;

	mov	DWORD PTR _res$[ebp], 0

; 826  : 	}
; 827  : 	else

	jmp	SHORT $LN7@BuildNaval
$LN8@BuildNaval:

; 828  : 		res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[unit->GetTeam()]->GetColor()][0]);

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[ecx+eax*8]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax
$LN7@BuildNaval:

; 829  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN6@BuildNaval

; 830  : 	{
; 831  : 		rsc=(IMAGE_RSC*)res->Find(UnitPtr->IconIndex);

	mov	eax, DWORD PTR _UnitPtr$[ebp]
	movsx	ecx, WORD PTR [eax+332]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 832  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN5@BuildNaval
	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 100			; 00000064H
	jne	SHORT $LN5@BuildNaval

; 833  : 			type=rsc->Header->h;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ax, WORD PTR [edx+46]
	mov	WORD PTR _type$[ebp], ax

; 834  : 		else

	jmp	SHORT $LN4@BuildNaval
$LN5@BuildNaval:

; 835  : 			type=0;

	xor	ecx, ecx
	mov	WORD PTR _type$[ebp], cx
$LN4@BuildNaval:

; 836  : 	}
; 837  : 	else

	jmp	SHORT $LN3@BuildNaval
$LN6@BuildNaval:

; 838  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN3@BuildNaval:

; 839  : 
; 840  : 	if(type > 32)

	movsx	edx, WORD PTR _type$[ebp]
	cmp	edx, 32					; 00000020H
	jle	SHORT $LN2@BuildNaval

; 841  : 		newinfo->SetH(type+2);

	movsx	eax, WORD PTR _type$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 842  : 	else

	jmp	SHORT $LN1@BuildNaval
$LN2@BuildNaval:

; 843  : 		type=32;

	mov	ecx, 32					; 00000020H
	mov	WORD PTR _type$[ebp], cx
$LN1@BuildNaval:

; 844  : 
; 845  : 	// Set BG Area behind Airplane Icon
; 846  : 	newinfo->SetIconBgColor(0x7c5600,0);

	push	0
	push	8148480					; 007c5600H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetIconBgColor

; 847  : 	newinfo->SetIconBg(0,0,80,type);

	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	push	80					; 00000050H
	push	0
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetIconBg

; 848  : 
; 849  : 	// Set BG Area behind rest of Squadron text
; 850  : 	newinfo->SetInfoBgColor(0,0x7c5600);

	push	8148480					; 007c5600H
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetInfoBgColor

; 851  : 	newinfo->SetInfoBg(80,0,190,type);

	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	push	190					; 000000beH
	push	0
	push	80					; 00000050H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetInfoBg

; 852  : 
; 853  : 	// Set Icon Image
; 854  : 	newinfo->SetIcon(40,static_cast<short>(type/2),rsc);

	mov	ecx, DWORD PTR _rsc$[ebp]
	push	ecx
	movsx	eax, WORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	40					; 00000028H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 855  : 
; 856  : 	// Set Name
; 857  : 	unit->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 858  : 	newinfo->SetName(84,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	84					; 00000054H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 859  : 
; 860  : 	// Set # & Airplane type
; 861  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	edx, al
	push	edx
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 862  : 	newinfo->SetStatus(84,15,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	15					; 0000000fH
	push	84					; 00000054H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 863  : 
; 864  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN12@BuildNaval:

; 865  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z ENDP ; BuildNavalUnitInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -268						; size = 8
$T3 = -260						; size = 4
_curstr$ = -256						; size = 4
_UnitPtr$ = -252					; size = 4
tv74 = -248						; size = 4
$T4 = -244						; size = 4
_totalstr$ = -240					; size = 4
_res$ = -236						; size = 4
_perc$ = -232						; size = 4
_rsc$ = -228						; size = 4
_type$ = -224						; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_unit$ = 8						; size = 4
?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z PROC	; BuildUnitInfo

; 706  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 707  : 	C_Resmgr *res;
; 708  : 	IMAGE_RSC *rsc;
; 709  : 	C_Entity *newinfo;
; 710  : 	_TCHAR buffer[200];
; 711  : 	short type=0;

	xor	eax, eax
	mov	WORD PTR _type$[ebp], ax

; 712  : 	long totalstr,curstr,perc;
; 713  : 
; 714  : 	UnitClassDataType *UnitPtr;
; 715  : 
; 716  : 	UnitPtr=unit->GetUnitClassData();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$[ebp], eax

; 717  : 	if(UnitPtr == NULL)

	cmp	DWORD PTR _UnitPtr$[ebp], 0
	jne	SHORT $LN13@BuildUnitI

; 718  : 		return(NULL);

	xor	eax, eax
	jmp	$LN14@BuildUnitI
$LN13@BuildUnitI:

; 719  : 
; 720  : 	//if(!UnitPtr->IconIndex)
; 721  : 	//	return(NULL);
; 722  : 
; 723  : 	// Create new parent class
; 724  : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN16@BuildUnitI
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN17@BuildUnitI
$LN16@BuildUnitI:
	mov	DWORD PTR tv74[ebp], 0
$LN17@BuildUnitI:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _newinfo$[ebp], edx

; 725  : 	newinfo->Setup(unit->GetCampID(),C_TYPE_MENU);

	push	49					; 00000031H
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 726  : 	newinfo->SetWH(286,37);

	push	37					; 00000025H
	push	286					; 0000011eH
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx

; 727  : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 728  : 
; 729  : 	newinfo->SetVUID(unit->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z	; C_Entity::SetVUID

; 730  : 	newinfo->SetUserNumber(0,unit->GetOwner()); // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 731  : 
; 732  : 	curstr=unit->GetTotalVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	DWORD PTR _curstr$[ebp], eax

; 733  : 	totalstr=unit->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	DWORD PTR _totalstr$[ebp], eax

; 734  : 	if(totalstr < 1) totalstr=1;

	cmp	DWORD PTR _totalstr$[ebp], 1
	jge	SHORT $LN12@BuildUnitI
	mov	DWORD PTR _totalstr$[ebp], 1
$LN12@BuildUnitI:

; 735  : 	perc=(curstr * 100)/totalstr;

	mov	eax, DWORD PTR _curstr$[ebp]
	imul	eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR _totalstr$[ebp]
	mov	DWORD PTR _perc$[ebp], eax

; 736  : 	if(perc > 100) perc=100;

	cmp	DWORD PTR _perc$[ebp], 100		; 00000064H
	jle	SHORT $LN11@BuildUnitI
	mov	DWORD PTR _perc$[ebp], 100		; 00000064H
$LN11@BuildUnitI:

; 737  : 	newinfo->SetOperational(static_cast<char>(perc));

	movzx	ecx, BYTE PTR _perc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 738  : 
; 739  : 	// FRB - deleting too many flags (teams) CTD
; 740  : 	if(perc <= 0)

	cmp	DWORD PTR _perc$[ebp], 0
	jg	SHORT $LN10@BuildUnitI

; 741  : 	{
; 742  : 		perc=1;

	mov	DWORD PTR _perc$[ebp], 1

; 743  : 		res = 0;

	mov	DWORD PTR _res$[ebp], 0

; 744  : 	}
; 745  : 	else

	jmp	SHORT $LN9@BuildUnitI
$LN10@BuildUnitI:

; 746  : 		res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[unit->GetTeam()]->GetColor()][0]);

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[ecx+eax*8]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax
$LN9@BuildUnitI:

; 747  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN8@BuildUnitI

; 748  : 	{
; 749  : 		rsc=(IMAGE_RSC*)res->Find(UnitPtr->IconIndex);

	mov	eax, DWORD PTR _UnitPtr$[ebp]
	movsx	ecx, WORD PTR [eax+332]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 750  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN7@BuildUnitI
	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 100			; 00000064H
	jne	SHORT $LN7@BuildUnitI

; 751  : 			type=rsc->Header->h;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ax, WORD PTR [edx+46]
	mov	WORD PTR _type$[ebp], ax

; 752  : 		else

	jmp	SHORT $LN6@BuildUnitI
$LN7@BuildUnitI:

; 753  : 			type=0;

	xor	ecx, ecx
	mov	WORD PTR _type$[ebp], cx
$LN6@BuildUnitI:

; 754  : 	}
; 755  : 	else

	jmp	SHORT $LN5@BuildUnitI
$LN8@BuildUnitI:

; 756  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN5@BuildUnitI:

; 757  : 
; 758  : 	if(type > 35)

	movsx	edx, WORD PTR _type$[ebp]
	cmp	edx, 35					; 00000023H
	jle	SHORT $LN4@BuildUnitI

; 759  : 		newinfo->SetH(type+2);

	movsx	eax, WORD PTR _type$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 760  : 	else

	jmp	SHORT $LN3@BuildUnitI
$LN4@BuildUnitI:

; 761  : 		type=35;

	mov	ecx, 35					; 00000023H
	mov	WORD PTR _type$[ebp], cx
$LN3@BuildUnitI:

; 762  : 
; 763  : 	// Set BG Area behind Airplane Icon
; 764  : 	newinfo->SetIconBgColor(0x7c5600,0);

	push	0
	push	8148480					; 007c5600H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetIconBgColor

; 765  : 	newinfo->SetIconBg(0,0,32,type);

	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	push	32					; 00000020H
	push	0
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetIconBg

; 766  : 
; 767  : 	// Set BG Area behind rest of Squadron text
; 768  : 	newinfo->SetInfoBgColor(0,0x7c5600);

	push	8148480					; 007c5600H
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetInfoBgColor

; 769  : 	newinfo->SetInfoBg(32,0,254,type);

	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	push	254					; 000000feH
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetInfoBg

; 770  : 
; 771  : 	// Set Icon Image
; 772  : 	newinfo->SetIcon(15,static_cast<short>(type/2),rsc);

	mov	ecx, DWORD PTR _rsc$[ebp]
	push	ecx
	movsx	eax, WORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 773  : 
; 774  : 	// Set Name
; 775  : 	if (unit->IsFlight())

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN2@BuildUnitI

; 776  : 		GetCallsign (((Flight)unit)->callsign_id, ((Flight)unit)->callsign_num, buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	movzx	edx, BYTE PTR [ecx+426]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	movzx	ecx, BYTE PTR [eax+425]
	push	ecx
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH

; 777  : 	else

	jmp	SHORT $LN1@BuildUnitI
$LN2@BuildUnitI:

; 778  : 		unit->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN1@BuildUnitI:

; 779  : 	newinfo->SetName(35,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 780  : 
; 781  : 	// Set # & Airplane type
; 782  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	edx, al
	push	edx
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 783  : 	newinfo->SetStatus(35,15,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	15					; 0000000fH
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 784  : 
; 785  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN14@BuildUnitI:

; 786  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z ENDP	; BuildUnitInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_curstr$ = -260						; size = 4
$T2 = -256						; size = 4
_UnitPtr$ = -252					; size = 4
tv74 = -248						; size = 4
_res$ = -244						; size = 4
$T3 = -240						; size = 4
_totalstr$ = -236					; size = 4
_perc$ = -232						; size = 4
_rsc$ = -228						; size = 4
_type$ = -224						; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_div$ = 8						; size = 4
_unit$ = 12						; size = 4
?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z PROC ; BuildDivisionInfo

; 632  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 633  : 	C_Resmgr *res;
; 634  : 	IMAGE_RSC *rsc;
; 635  : 	C_Entity *newinfo;
; 636  : 	_TCHAR buffer[200];
; 637  : 	short type=0;

	xor	eax, eax
	mov	WORD PTR _type$[ebp], ax

; 638  : 	long totalstr,curstr,perc;
; 639  : 
; 640  : 	UnitClassDataType *UnitPtr;
; 641  : 
; 642  : 	UnitPtr=unit->GetUnitClassData();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$[ebp], eax

; 643  : 	if(UnitPtr == NULL)

	cmp	DWORD PTR _UnitPtr$[ebp], 0
	jne	SHORT $LN9@BuildDivis

; 644  : 		return(NULL);

	xor	eax, eax
	jmp	$LN10@BuildDivis
$LN9@BuildDivis:

; 645  : 
; 646  : 	//if(!UnitPtr->IconIndex)
; 647  : 	//	return(NULL);
; 648  : 
; 649  : 	// Create new parent class
; 650  : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@BuildDivis
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN13@BuildDivis
$LN12@BuildDivis:
	mov	DWORD PTR tv74[ebp], 0
$LN13@BuildDivis:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newinfo$[ebp], edx

; 651  : 	newinfo->Setup((unit->GetTeam() << 24) | div->nid | UR_DIVISION,C_TYPE_MENU);

	push	49					; 00000031H
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _div$[ebp]
	movsx	eax, WORD PTR [edx+4]
	or	ecx, eax
	or	ecx, 65536				; 00010000H
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 652  : 	newinfo->SetWH(286,37);

	push	37					; 00000025H
	push	286					; 0000011eH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 653  : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 654  : 
; 655  : 	newinfo->SetUserNumber(0,unit->GetOwner()); // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	push	ecx
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 656  : 
; 657  : 	curstr=unit->GetTotalVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	DWORD PTR _curstr$[ebp], eax

; 658  : 	totalstr=unit->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	DWORD PTR _totalstr$[ebp], eax

; 659  : 	if(totalstr < 1) totalstr=1;

	cmp	DWORD PTR _totalstr$[ebp], 1
	jge	SHORT $LN8@BuildDivis
	mov	DWORD PTR _totalstr$[ebp], 1
$LN8@BuildDivis:

; 660  : 	perc=(curstr * 100)/totalstr;

	mov	eax, DWORD PTR _curstr$[ebp]
	imul	eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR _totalstr$[ebp]
	mov	DWORD PTR _perc$[ebp], eax

; 661  : 	if(perc > 100) perc=100;

	cmp	DWORD PTR _perc$[ebp], 100		; 00000064H
	jle	SHORT $LN7@BuildDivis
	mov	DWORD PTR _perc$[ebp], 100		; 00000064H
$LN7@BuildDivis:

; 662  : 
; 663  : 	newinfo->SetOperational(static_cast<uchar>(perc));

	movzx	edx, BYTE PTR _perc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 664  : 
; 665  : 	res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[unit->GetTeam()]->GetColor()][0]);

	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[edx+eax*8]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 666  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN6@BuildDivis

; 667  : 	{
; 668  : 		rsc=(IMAGE_RSC*)res->Find(UnitPtr->IconIndex);

	mov	ecx, DWORD PTR _UnitPtr$[ebp]
	movsx	edx, WORD PTR [ecx+332]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 669  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN5@BuildDivis
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	jne	SHORT $LN5@BuildDivis

; 670  : 			type=rsc->Header->h;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	cx, WORD PTR [eax+46]
	mov	WORD PTR _type$[ebp], cx

; 671  : 		else

	jmp	SHORT $LN4@BuildDivis
$LN5@BuildDivis:

; 672  : 			type=0;

	xor	edx, edx
	mov	WORD PTR _type$[ebp], dx
$LN4@BuildDivis:

; 673  : 	}
; 674  : 	else

	jmp	SHORT $LN3@BuildDivis
$LN6@BuildDivis:

; 675  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN3@BuildDivis:

; 676  : 
; 677  : 	if(type > 35)

	movsx	eax, WORD PTR _type$[ebp]
	cmp	eax, 35					; 00000023H
	jle	SHORT $LN2@BuildDivis

; 678  : 		newinfo->SetH(type+2);

	movsx	ecx, WORD PTR _type$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 679  : 	else

	jmp	SHORT $LN1@BuildDivis
$LN2@BuildDivis:

; 680  : 		type=35;

	mov	eax, 35					; 00000023H
	mov	WORD PTR _type$[ebp], ax
$LN1@BuildDivis:

; 681  : 
; 682  : 	// Set BG Area behind Airplane Icon
; 683  : 	newinfo->SetIconBgColor(0x7c5600,0);

	push	0
	push	8148480					; 007c5600H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetIconBgColor

; 684  : 	newinfo->SetIconBg(0,0,32,type);

	movzx	ecx, WORD PTR _type$[ebp]
	push	ecx
	push	32					; 00000020H
	push	0
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetIconBg

; 685  : 
; 686  : 	// Set BG Area behind rest of Squadron text
; 687  : 	newinfo->SetInfoBgColor(0,0x7c5600);

	push	8148480					; 007c5600H
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetInfoBgColor

; 688  : 	newinfo->SetInfoBg(32,0,254,type);

	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	push	254					; 000000feH
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetInfoBg

; 689  : 
; 690  : 	// Set Icon Image
; 691  : 	newinfo->SetIcon(15,static_cast<short>(type/2),rsc);

	mov	eax, DWORD PTR _rsc$[ebp]
	push	eax
	movsx	eax, WORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 692  : 
; 693  : 	// Set Name
; 694  : 	div->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetName@DivisionClass@@QAEPADPADHH@Z	; DivisionClass::GetName

; 695  : 	newinfo->SetName(35,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 696  : 
; 697  : 	// Set # & Airplane type
; 698  : 	MonoPrint("[Wrong]\n");

	push	OFFSET ??_C@_08CKDPOBFH@?$FLWrong?$FN?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 699  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 700  : 	newinfo->SetStatus(35,15,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	15					; 0000000fH
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 701  : 
; 702  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN10@BuildDivis:

; 703  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildDivisionInfo@@YAPAVC_Entity@@PAVDivisionClass@@PAVUnitClass@@@Z ENDP ; BuildDivisionInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -264						; size = 8
_ObjType$ = -256					; size = 4
$T3 = -252						; size = 4
_ObjPtr$ = -248						; size = 4
tv85 = -244						; size = 4
$T4 = -240						; size = 4
_TypeID$ = -236						; size = 2
_res$ = -232						; size = 4
_rsc$ = -228						; size = 4
_type$ = -224						; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_obj$ = 8						; size = 4
?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z PROC ; BuildObjectiveInfo

; 563  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 564  : 	C_Resmgr *res = NULL;

	mov	DWORD PTR _res$[ebp], 0

; 565  : 	IMAGE_RSC *rsc;
; 566  : 	C_Entity *newinfo;
; 567  : 	_TCHAR buffer[200];
; 568  : 	ObjClassDataType *ObjPtr;
; 569  : 	short type=0,TypeID;

	xor	eax, eax
	mov	WORD PTR _type$[ebp], ax

; 570  : 	long ObjType;
; 571  : 
; 572  : 	ObjPtr=obj->GetObjectiveClassData();

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _ObjPtr$[ebp], eax

; 573  : 	if(ObjPtr == NULL)

	cmp	DWORD PTR _ObjPtr$[ebp], 0
	jne	SHORT $LN8@BuildObjec

; 574  : 		return(NULL);

	xor	eax, eax
	jmp	$LN9@BuildObjec
$LN8@BuildObjec:

; 575  : 
; 576  : 	ObjType=GetObjectiveType(obj);

	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?GetObjectiveType@@YAJPAVCampBaseClass@@@Z ; GetObjectiveType
	add	esp, 4
	mov	DWORD PTR _ObjType$[ebp], eax

; 577  : 	TypeID=static_cast<short>(FindTypeIndex(ObjType,OBJ_TypeList,_MAP_NUM_OBJ_TYPES_));

	push	14					; 0000000eH
	push	OFFSET ?OBJ_TypeList@@3PAJA		; OBJ_TypeList
	mov	edx, DWORD PTR _ObjType$[ebp]
	push	edx
	call	?FindTypeIndex@@YAJJQAJH@Z		; FindTypeIndex
	add	esp, 12					; 0000000cH
	mov	WORD PTR _TypeID$[ebp], ax

; 578  : 
; 579  : 	// Create new parent class
; 580  : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN11@BuildObjec
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN12@BuildObjec
$LN11@BuildObjec:
	mov	DWORD PTR tv85[ebp], 0
$LN12@BuildObjec:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _newinfo$[ebp], ecx

; 581  : 	newinfo->Setup(obj->GetCampID(),TypeID);

	movzx	edx, WORD PTR _TypeID$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 582  : 	newinfo->SetWH(286,37);

	push	37					; 00000025H
	push	286					; 0000011eH
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx

; 583  : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 584  : 
; 585  : 	newinfo->SetVUID(obj->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z	; C_Entity::SetVUID

; 586  : 	newinfo->SetUserNumber(0,obj->GetOwner()); // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 587  : 
; 588  : 	newinfo->SetOperational(obj->GetObjectiveStatus());

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 589  : 
; 590  : 	if (gImageMgr && TeamInfo[obj->GetTeam()])

	cmp	DWORD PTR ?gImageMgr@@3PAVC_Image@@A, 0	; gImageMgr
	je	SHORT $LN7@BuildObjec
	mov	edx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	je	SHORT $LN7@BuildObjec

; 591  : 		res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[obj->GetTeam()]->GetColor()][0]);

	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[edx+eax*8]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax
$LN7@BuildObjec:

; 592  : 
; 593  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN6@BuildObjec

; 594  : 	{
; 595  : 		rsc=(IMAGE_RSC*)res->Find(ObjPtr->IconIndex);

	mov	ecx, DWORD PTR _ObjPtr$[ebp]
	movsx	edx, WORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 596  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN5@BuildObjec
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	jne	SHORT $LN5@BuildObjec

; 597  : 			type=rsc->Header->h;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	cx, WORD PTR [eax+46]
	mov	WORD PTR _type$[ebp], cx

; 598  : 		else

	jmp	SHORT $LN4@BuildObjec
$LN5@BuildObjec:

; 599  : 			type=0;

	xor	edx, edx
	mov	WORD PTR _type$[ebp], dx
$LN4@BuildObjec:

; 600  : 	}
; 601  : 	else

	jmp	SHORT $LN3@BuildObjec
$LN6@BuildObjec:

; 602  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN3@BuildObjec:

; 603  : 
; 604  : 	if(type > 35)

	movsx	eax, WORD PTR _type$[ebp]
	cmp	eax, 35					; 00000023H
	jle	SHORT $LN2@BuildObjec

; 605  : 		newinfo->SetH(type+2);

	movsx	ecx, WORD PTR _type$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 606  : 	else

	jmp	SHORT $LN1@BuildObjec
$LN2@BuildObjec:

; 607  : 		type=35;

	mov	eax, 35					; 00000023H
	mov	WORD PTR _type$[ebp], ax
$LN1@BuildObjec:

; 608  : 
; 609  : 	// Set BG Area behind Airplane Icon
; 610  : 	newinfo->SetIconBgColor(0x7c5600,0);

	push	0
	push	8148480					; 007c5600H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetIconBgColor

; 611  : 	newinfo->SetIconBg(0,0,32,type);

	movzx	ecx, WORD PTR _type$[ebp]
	push	ecx
	push	32					; 00000020H
	push	0
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetIconBg

; 612  : 
; 613  : 	// Set BG Area behind rest of Squadron text
; 614  : 	newinfo->SetInfoBgColor(0,0x7c5600);

	push	8148480					; 007c5600H
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBgColor@C_Entity@@QAEXKK@Z	; C_Entity::SetInfoBgColor

; 615  : 	newinfo->SetInfoBg(32,0,254,type);

	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	push	254					; 000000feH
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBg@C_Entity@@QAEXFFFF@Z		; C_Entity::SetInfoBg

; 616  : 
; 617  : 	// Set Icon Image
; 618  : 	newinfo->SetIcon(15,static_cast<short>(type/2),rsc);

	mov	eax, DWORD PTR _rsc$[ebp]
	push	eax
	movsx	eax, WORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 619  : 
; 620  : 	// Set Name
; 621  : 	obj->GetName(buffer,40,TRUE);

	push	1
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 622  : 	newinfo->SetName(35,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 623  : 
; 624  : 	// Set # & Airplane type
; 625  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	ecx, al
	push	ecx
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 626  : 	newinfo->SetStatus(35,15,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	15					; 0000000fH
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 627  : 
; 628  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN9@BuildObjec:

; 629  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ENDP ; BuildObjectiveInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_child$ = -36						; size = 4
_j$ = -32						; size = 4
_Leave$ = -28						; size = 4
_Cat$ = -24						; size = 4
_TurnOn$ = -20						; size = 4
_btn$ = -16						; size = 4
_i$ = -12						; size = 4
_root$ = -8						; size = 4
_owner$ = -4						; size = 2
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z PROC		; ToggleOOBFilterCB

; 456  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 457  : 	C_Button *btn=NULL;

	mov	DWORD PTR _btn$[ebp], 0

; 458  : 	long i,Cat=0,j=0;

	mov	DWORD PTR _Cat$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0

; 459  : 	short owner;
; 460  : 	TREELIST *root=NULL,*child=NULL;

	mov	DWORD PTR _root$[ebp], 0
	mov	DWORD PTR _child$[ebp], 0

; 461  : 	BOOL TurnOn=FALSE;

	mov	DWORD PTR _TurnOn$[ebp], 0

; 462  : 
; 463  : 	F4CSECTIONHANDLE *Leave;
; 464  : 
; 465  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN17@ToggleOOBF

; 466  : 		return;

	jmp	$LN18@ToggleOOBF
$LN17@ToggleOOBF:

; 467  : 
; 468  : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 469  : 
; 470  : 	owner=static_cast<short>(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	WORD PTR _owner$[ebp], ax

; 471  : 
; 472  : 	for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@ToggleOOBF
$LN15@ToggleOOBF:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN16@ToggleOOBF:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN14@ToggleOOBF

; 473  : 		if(ID == SectionFilterBtns[i])

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	cmp	edx, DWORD PTR _SectionFilterBtns[ecx*4]
	jne	SHORT $LN13@ToggleOOBF

; 474  : 			Cat=OOBCategories[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _OOBCategories[eax*4]
	mov	DWORD PTR _Cat$[ebp], ecx
$LN13@ToggleOOBF:

; 475  : 
; 476  : 	if(control->GetState())

	jmp	SHORT $LN15@ToggleOOBF
$LN14@ToggleOOBF:
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	je	SHORT $LN12@ToggleOOBF

; 477  : 		TurnOn=TRUE;

	mov	DWORD PTR _TurnOn$[ebp], 1

; 478  : 	else

	jmp	SHORT $LN11@ToggleOOBF
$LN12@ToggleOOBF:

; 479  : 		TurnOn=FALSE;

	mov	DWORD PTR _TurnOn$[ebp], 0
$LN11@ToggleOOBF:

; 480  : 
; 481  : 	if(TurnOn)

	cmp	DWORD PTR _TurnOn$[ebp], 0
	je	$LN10@ToggleOOBF

; 482  : 	{
; 483  : 		for(i=0;i<8;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@ToggleOOBF
$LN8@ToggleOOBF:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@ToggleOOBF:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN7@ToggleOOBF

; 484  : 		{
; 485  : 			btn=(C_Button*)control->GetParent()->FindControl(TeamFlagBtnIDs[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _TeamFlagBtnIDs[edx*4]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 486  : 			if(btn && !(btn->GetFlags() & C_BIT_INVISIBLE) && btn->GetState())

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@ToggleOOBF
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN6@ToggleOOBF
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN6@ToggleOOBF

; 487  : 			{
; 488  : // 2002-01-04 MODIFIED BY S.G. GetTeam is 'based one' and not 'based zero' so I'll add '1' to i.
; 489  : //				root=gOOBTree->Find((GetTeam(static_cast<uchar>(i)) << 24) | Cat);
; 490  : 				root=gOOBTree->Find((GetTeam(static_cast<uchar>(i + 1)) << 24) | Cat);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	eax, al
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _Cat$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _root$[ebp], eax

; 491  : 				if(root && root->Item_->GetFlags() & C_BIT_INVISIBLE)

	cmp	DWORD PTR _root$[ebp], 0
	je	SHORT $LN6@ToggleOOBF
	mov	ecx, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	je	SHORT $LN6@ToggleOOBF

; 492  : 					root->Item_->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN6@ToggleOOBF:

; 493  : 			}
; 494  : 		}

	jmp	$LN8@ToggleOOBF
$LN7@ToggleOOBF:

; 495  : 	}
; 496  : 	else

	jmp	SHORT $LN4@ToggleOOBF
$LN10@ToggleOOBF:

; 497  : 	{
; 498  : 		root=gOOBTree->GetRoot();

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _root$[ebp], eax
$LN3@ToggleOOBF:

; 499  : 		while(root)

	cmp	DWORD PTR _root$[ebp], 0
	je	SHORT $LN4@ToggleOOBF

; 500  : 		{
; 501  : 			if(root->ID_ & Cat)

	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, DWORD PTR _Cat$[ebp]
	je	SHORT $LN1@ToggleOOBF

; 502  : 				root->Item_->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN1@ToggleOOBF:

; 503  : 			root=root->Next;

	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _root$[ebp], ecx

; 504  : 		}

	jmp	SHORT $LN3@ToggleOOBF
$LN4@ToggleOOBF:

; 505  : 	}
; 506  : 
; 507  : // 2002-01-04 REMOVED BY S.G. This section of code seems to do nothing but mess up the Objectives when something else is deselected.
; 508  : //                            The Objective names remains there but without the '+' side beside it.
; 509  : //                            It deals with child root object and only Objectives have child root object (like CCC) and seems to concur to what I'm seeing.
; 510  : //                            I'm seeing not ill effect with this code commented out.
; 511  : /*
; 512  : 	for(i=0;i<4;i++)
; 513  : 	{
; 514  : 		for(j=0;j<8;j++)
; 515  : 		{
; 516  : 			root=gOOBTree->Find((j << 24) | OOBCategories[i]); // Comment by S.G. Here j starting at zero is not going to harm anything since we do it for ALL teams so left as is
; 517  : 			if(root)
; 518  : 			{
; 519  : 				root=root->Child;
; 520  : 				while(root)
; 521  : 				{
; 522  : 					if(TurnOn)
; 523  : 					{
; 524  : 						if(root->Item_->GetUserNumber(0) == owner || FindChildren(root->Child,owner))
; 525  : 						{
; 526  : 							root->Item_->SetFlagBitOff(C_BIT_INVISIBLE);
; 527  : 							child=root->Child;
; 528  : 							while(child)
; 529  : 							{
; 530  : 								if(child->Item_->GetUserNumber(0) == owner)
; 531  : 									child->Item_->SetFlagBitOff(C_BIT_INVISIBLE);
; 532  : 								child=child->Next;
; 533  : 							}
; 534  : 						}
; 535  : 					}
; 536  : 					else
; 537  : 					{
; 538  : 						if(root->Item_->GetUserNumber(0) == owner && !FindOtherChildren(root->Child,owner))
; 539  : 							root->Item_->SetFlagBitOn(C_BIT_INVISIBLE);
; 540  : 						else
; 541  : 						{
; 542  : 							child=root->Child;
; 543  : 							while(child)
; 544  : 							{
; 545  : 								if(child->Item_->GetUserNumber(0) == owner)
; 546  : 									child->Item_->SetFlagBitOn(C_BIT_INVISIBLE);
; 547  : 								child=child->Next;
; 548  : 							}
; 549  : 						}
; 550  : 					}
; 551  : 					root=root->Next;
; 552  : 				}
; 553  : 			}
; 554  : 		}
; 555  : 	}
; 556  : */
; 557  : 	gOOBTree->RecalcSize();

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 558  : 	gOOBTree->Parent_->RefreshClient(gOOBTree->GetClient());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 559  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN18@ToggleOOBF:

; 560  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z ENDP		; ToggleOOBFilterCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_Leave$ = -48						; size = 4
_DontTurnOff$ = -44					; size = 4
$T1 = -40						; size = 4
_TurnOn$ = -36						; size = 4
_TeamID$ = -32						; size = 4
_win$ = -28						; size = 4
_j$ = -24						; size = 4
_btn$ = -20						; size = 4
_child$ = -16						; size = 4
_i$ = -12						; size = 4
_root$ = -8						; size = 4
_owner$ = -4						; size = 2
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z PROC		; ToggleOOBTeamCB

; 339  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 340  : 	C_Window *win;
; 341  : 	C_Button *btn;
; 342  : 	long i,j,TeamID;
; 343  : 	short owner;
; 344  : 	BOOL TurnOn,DontTurnOff;
; 345  : 	TREELIST *root,*child;
; 346  : 	F4CSECTIONHANDLE *Leave;
; 347  : 
; 348  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN42@ToggleOOBT

; 349  : 		return;

	jmp	$LN44@ToggleOOBT
$LN42@ToggleOOBT:

; 350  : 
; 351  : 	win=control->GetParent();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	DWORD PTR _win$[ebp], eax

; 352  : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN41@ToggleOOBT

; 353  : 		return;

	jmp	$LN44@ToggleOOBT
$LN41@ToggleOOBT:

; 354  : 
; 355  : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 356  : 
; 357  : 	owner=static_cast<short>(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	WORD PTR _owner$[ebp], ax

; 358  : 	TeamID=GetTeam(static_cast<uchar>(owner));

	movzx	eax, BYTE PTR _owner$[ebp]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	mov	DWORD PTR _TeamID$[ebp], ecx

; 359  : 
; 360  : 	if(control->GetState())

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	je	SHORT $LN40@ToggleOOBT

; 361  : 	{
; 362  : 		gOOB_Visible[owner]=1;

	movsx	ecx, WORD PTR _owner$[ebp]
	mov	BYTE PTR ?gOOB_Visible@@3PADA[ecx], 1

; 363  : 		TurnOn=TRUE;

	mov	DWORD PTR _TurnOn$[ebp], 1

; 364  : 	}
; 365  : 	else

	jmp	SHORT $LN39@ToggleOOBT
$LN40@ToggleOOBT:

; 366  : 	{
; 367  : 		gOOB_Visible[owner]=0;

	movsx	edx, WORD PTR _owner$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 8
	jae	SHORT $LN45@ToggleOOBT
	jmp	SHORT $LN46@ToggleOOBT
$LN45@ToggleOOBT:
	call	___report_rangecheckfailure
$LN46@ToggleOOBT:
	mov	eax, DWORD PTR $T1[ebp]
	mov	BYTE PTR ?gOOB_Visible@@3PADA[eax], 0

; 368  : 		TurnOn=FALSE;

	mov	DWORD PTR _TurnOn$[ebp], 0
$LN39@ToggleOOBT:

; 369  : 	}
; 370  : 
; 371  : 	if(TurnOn)

	cmp	DWORD PTR _TurnOn$[ebp], 0
	je	$LN38@ToggleOOBT

; 372  : 	{
; 373  : 		for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN37@ToggleOOBT
$LN36@ToggleOOBT:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN37@ToggleOOBT:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN35@ToggleOOBT

; 374  : 		{
; 375  : 			btn=(C_Button*)win->FindControl(SectionFilterBtns[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _SectionFilterBtns[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 376  : 			if(btn && btn->GetState())

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN34@ToggleOOBT
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN34@ToggleOOBT

; 377  : 			{
; 378  : 				root=gOOBTree->Find((TeamID << 24) | OOBCategories[i]);

	mov	edx, DWORD PTR _TeamID$[ebp]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _i$[ebp]
	or	edx, DWORD PTR _OOBCategories[eax*4]
	push	edx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _root$[ebp], eax

; 379  : 				if(root && root->Item_->GetFlags() & C_BIT_INVISIBLE)

	cmp	DWORD PTR _root$[ebp], 0
	je	SHORT $LN34@ToggleOOBT
	mov	ecx, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	je	SHORT $LN34@ToggleOOBT

; 380  : 					root->Item_->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN34@ToggleOOBT:

; 381  : 			}
; 382  : 		}

	jmp	$LN36@ToggleOOBT
$LN35@ToggleOOBT:

; 383  : 	}
; 384  : 	else

	jmp	$LN32@ToggleOOBT
$LN38@ToggleOOBT:

; 385  : 	{
; 386  : 		DontTurnOff=FALSE;

	mov	DWORD PTR _DontTurnOff$[ebp], 0

; 387  : 		for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN31@ToggleOOBT
$LN30@ToggleOOBT:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN31@ToggleOOBT:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN29@ToggleOOBT

; 388  : 		{
; 389  : 			btn=(C_Button *)win->FindControl(TeamFlagBtnIDs[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _TeamFlagBtnIDs[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 390  : 		if(btn && i != owner)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN28@ToggleOOBT
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	DWORD PTR _i$[ebp], ecx
	je	SHORT $LN28@ToggleOOBT

; 391  : 			{
; 392  : 				if((GetTeam(static_cast<uchar>(btn->GetUserNumber(0))) == TeamID) && btn->GetState())

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	cmp	edx, DWORD PTR _TeamID$[ebp]
	jne	SHORT $LN28@ToggleOOBT
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN28@ToggleOOBT

; 393  : 					DontTurnOff=TRUE;

	mov	DWORD PTR _DontTurnOff$[ebp], 1
$LN28@ToggleOOBT:

; 394  : 			}
; 395  : 		}

	jmp	SHORT $LN30@ToggleOOBT
$LN29@ToggleOOBT:

; 396  : 		if(!DontTurnOff)

	cmp	DWORD PTR _DontTurnOff$[ebp], 0
	jne	SHORT $LN32@ToggleOOBT

; 397  : 			for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN25@ToggleOOBT
$LN24@ToggleOOBT:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN25@ToggleOOBT:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN32@ToggleOOBT

; 398  : 			{
; 399  : 				root=gOOBTree->Find((TeamID << 24) | OOBCategories[i]);

	mov	eax, DWORD PTR _TeamID$[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _i$[ebp]
	or	eax, DWORD PTR _OOBCategories[ecx*4]
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _root$[ebp], eax

; 400  : 				if(root)

	cmp	DWORD PTR _root$[ebp], 0
	je	SHORT $LN22@ToggleOOBT

; 401  : 					root->Item_->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN22@ToggleOOBT:

; 402  : 			}

	jmp	SHORT $LN24@ToggleOOBT
$LN32@ToggleOOBT:

; 403  : 	}
; 404  : 
; 405  : 	for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN21@ToggleOOBT
$LN20@ToggleOOBT:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN21@ToggleOOBT:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN19@ToggleOOBT

; 406  : 	{
; 407  : 		for(j=0;j<8;j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN18@ToggleOOBT
$LN17@ToggleOOBT:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN18@ToggleOOBT:
	cmp	DWORD PTR _j$[ebp], 8
	jge	$LN16@ToggleOOBT

; 408  : 		{
; 409  : 			root=gOOBTree->Find((j << 24) | OOBCategories[i]);

	mov	eax, DWORD PTR _j$[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _i$[ebp]
	or	eax, DWORD PTR _OOBCategories[ecx*4]
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _root$[ebp], eax

; 410  : 			if(root)

	cmp	DWORD PTR _root$[ebp], 0
	je	$LN15@ToggleOOBT

; 411  : 			{
; 412  : 				root=root->Child;

	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _root$[ebp], eax
$LN14@ToggleOOBT:

; 413  : 				while(root)

	cmp	DWORD PTR _root$[ebp], 0
	je	$LN15@ToggleOOBT

; 414  : 				{
; 415  : 					if(TurnOn)

	cmp	DWORD PTR _TurnOn$[ebp], 0
	je	$LN12@ToggleOOBT

; 416  : 					{
; 417  : 						if(root->Item_->GetUserNumber(0) == owner || FindChildren(root->Child,owner))

	push	0
	mov	ecx, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	edx, WORD PTR _owner$[ebp]
	cmp	eax, edx
	je	SHORT $LN10@ToggleOOBT
	movzx	eax, WORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	?FindChildren@@YAHPAVTREELIST@@F@Z	; FindChildren
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@ToggleOOBT
$LN10@ToggleOOBT:

; 418  : 						{
; 419  : 							root->Item_->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 420  : 							child=root->Child;

	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _child$[ebp], ecx
$LN9@ToggleOOBT:

; 421  : 							while(child)

	cmp	DWORD PTR _child$[ebp], 0
	je	SHORT $LN11@ToggleOOBT

; 422  : 							{
; 423  : 								if(child->Item_->GetUserNumber(0) == owner)

	push	0
	mov	edx, DWORD PTR _child$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN7@ToggleOOBT

; 424  : 									child->Item_->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _child$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _child$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN7@ToggleOOBT:

; 425  : 								child=child->Next;

	mov	ecx, DWORD PTR _child$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _child$[ebp], edx

; 426  : 							}

	jmp	SHORT $LN9@ToggleOOBT
$LN11@ToggleOOBT:

; 427  : 						}
; 428  : 					}
; 429  : 					else

	jmp	$LN6@ToggleOOBT
$LN12@ToggleOOBT:

; 430  : 					{
; 431  : 						if(root->Item_->GetUserNumber(0) == owner && !FindOtherChildren(root->Child,owner))

	push	0
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN5@ToggleOOBT
	movzx	edx, WORD PTR _owner$[ebp]
	push	edx
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?FindOtherChildren@@YAHPAVTREELIST@@F@Z	; FindOtherChildren
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@ToggleOOBT

; 432  : 							root->Item_->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _root$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 433  : 						else

	jmp	SHORT $LN6@ToggleOOBT
$LN5@ToggleOOBT:

; 434  : 						{
; 435  : 							child=root->Child;

	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _child$[ebp], edx
$LN3@ToggleOOBT:

; 436  : 							while(child)

	cmp	DWORD PTR _child$[ebp], 0
	je	SHORT $LN6@ToggleOOBT

; 437  : 							{
; 438  : 								if(child->Item_->GetUserNumber(0) == owner)

	push	0
	mov	eax, DWORD PTR _child$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@ToggleOOBT

; 439  : 									child->Item_->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _child$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _child$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN1@ToggleOOBT:

; 440  : 								child=child->Next;

	mov	ecx, DWORD PTR _child$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _child$[ebp], edx

; 441  : 							}

	jmp	SHORT $LN3@ToggleOOBT
$LN6@ToggleOOBT:

; 442  : 						}
; 443  : 					}
; 444  : 					root=root->Next;

	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _root$[ebp], ecx

; 445  : 				}

	jmp	$LN14@ToggleOOBT
$LN15@ToggleOOBT:

; 446  : 			}
; 447  : 		}

	jmp	$LN17@ToggleOOBT
$LN16@ToggleOOBT:

; 448  : 	}

	jmp	$LN20@ToggleOOBT
$LN19@ToggleOOBT:

; 449  : 
; 450  : 	gOOBTree->RecalcSize();

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 451  : 	gOOBTree->Parent_->RefreshClient(gOOBTree->GetClient());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 452  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN44@ToggleOOBT:

; 453  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ENDP		; ToggleOOBTeamCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_item$ = -4						; size = 4
_list$ = 8						; size = 4
_owner$ = 12						; size = 2
?FindOtherChildren@@YAHPAVTREELIST@@F@Z PROC		; FindOtherChildren

; 317  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 318  : 	TREELIST *item;
; 319  : 	if(!list || !owner)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN7@FindOtherC
	movsx	eax, WORD PTR _owner$[ebp]
	test	eax, eax
	jne	SHORT $LN8@FindOtherC
$LN7@FindOtherC:

; 320  : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN9@FindOtherC
$LN8@FindOtherC:

; 321  : 
; 322  : 	item=list;

	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR _item$[ebp], ecx
$LN6@FindOtherC:

; 323  : 	while(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN5@FindOtherC

; 324  : 	{
; 325  : 		if(!(item->Item_->GetFlags() & C_BIT_INVISIBLE))

	mov	edx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN4@FindOtherC

; 326  : 		{
; 327  : 			if(item->Item_->GetUserNumber(0) != owner)

	push	0
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	eax, ecx
	je	SHORT $LN3@FindOtherC

; 328  : 				return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN9@FindOtherC
$LN3@FindOtherC:

; 329  : 			if(item->Child)

	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	SHORT $LN4@FindOtherC

; 330  : 				if(FindOtherChildren(item->Child,owner))

	movzx	eax, WORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	?FindOtherChildren@@YAHPAVTREELIST@@F@Z	; FindOtherChildren
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@FindOtherC

; 331  : 					return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN9@FindOtherC
$LN4@FindOtherC:

; 332  : 		}
; 333  : 		item=item->Next;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _item$[ebp], ecx

; 334  : 	}

	jmp	SHORT $LN6@FindOtherC
$LN5@FindOtherC:

; 335  : 	return(FALSE);

	xor	eax, eax
$LN9@FindOtherC:

; 336  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindOtherChildren@@YAHPAVTREELIST@@F@Z ENDP		; FindOtherChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_item$ = -4						; size = 4
_list$ = 8						; size = 4
_owner$ = 12						; size = 2
?FindChildren@@YAHPAVTREELIST@@F@Z PROC			; FindChildren

; 298  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 299  : 	TREELIST *item;
; 300  : 	if(!list || !owner)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN6@FindChildr
	movsx	eax, WORD PTR _owner$[ebp]
	test	eax, eax
	jne	SHORT $LN7@FindChildr
$LN6@FindChildr:

; 301  : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN8@FindChildr
$LN7@FindChildr:

; 302  : 
; 303  : 	item=list;

	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR _item$[ebp], ecx
$LN5@FindChildr:

; 304  : 	while(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@FindChildr

; 305  : 	{
; 306  : 		if(item->Item_->GetUserNumber(0) == owner)

	push	0
	mov	edx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	movsx	ecx, WORD PTR _owner$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN3@FindChildr

; 307  : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN8@FindChildr
$LN3@FindChildr:

; 308  : 		if(item->Child)

	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	SHORT $LN2@FindChildr

; 309  : 			if(FindChildren(item->Child,owner))

	movzx	eax, WORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	?FindChildren@@YAHPAVTREELIST@@F@Z	; FindChildren
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@FindChildr

; 310  : 				return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN8@FindChildr
$LN2@FindChildr:

; 311  : 		item=item->Next;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _item$[ebp], ecx

; 312  : 	}

	jmp	SHORT $LN5@FindChildr
$LN4@FindChildr:

; 313  : 	return(FALSE);

	xor	eax, eax
$LN8@FindChildr:

; 314  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindChildren@@YAHPAVTREELIST@@F@Z ENDP			; FindChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -76						; size = 4
tv392 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 4
_cat$ = -56						; size = 4
_TeamID$ = -52						; size = 4
_j$ = -48						; size = 4
_team$ = -44						; size = 4
_win$ = -40						; size = 4
_category$ = -36					; size = 4
_line$ = -32						; size = 4
_txt$ = -28						; size = 4
_btn$ = -24						; size = 4
_i$ = -20						; size = 4
_idx$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?SetupOOBWindow@@YAXXZ PROC				; SetupOOBWindow

; 183  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupOOBWindow@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 184  : 	C_Window *win;
; 185  : 	long i,j,cat,TeamID;
; 186  : 	C_Button *btn;
; 187  : 	C_Line   *line;
; 188  : 	C_Text *txt;
; 189  : 	TREELIST *team;
; 190  : 	C_Entity *category;
; 191  : 	short idx;
; 192  : 
; 193  : 	win=gMainHandler->FindWindow(OOB_WIN);

	push	17003					; 0000426bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 194  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN38@SetupOOBWi

; 195  : 	{
; 196  : 		idx=0;

	xor	eax, eax
	mov	WORD PTR _idx$[ebp], ax

; 197  : 		for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN35@SetupOOBWi
$LN34@SetupOOBWi:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN35@SetupOOBWi:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN23@SetupOOBWi

; 198  : 		{
; 199  : 			if(TeamInfo[i] && ((TeamInfo[i]->flags & TEAM_ACTIVE) || GetTeam(static_cast<uchar>(i)) != i))

	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4], 0
	je	$LN32@SetupOOBWi
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	movsx	edx, WORD PTR [ecx+350]
	and	edx, 1
	jne	SHORT $LN31@SetupOOBWi
	movzx	eax, BYTE PTR _i$[ebp]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	cmp	ecx, DWORD PTR _i$[ebp]
	je	$LN32@SetupOOBWi
$LN31@SetupOOBWi:

; 200  : 			{
; 201  : 				btn=(C_Button*)win->FindControl(TeamFlagBtnIDs[idx]);

	movsx	edx, WORD PTR _idx$[ebp]
	mov	eax, DWORD PTR _TeamFlagBtnIDs[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 202  : 				if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN30@SetupOOBWi

; 203  : 				{
; 204  : 					btn->SetImage(C_STATE_0,FlagImageID[TeamInfo[i]->GetFlag()][BIG_VERT_DARK]);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	imul	eax, 20					; 00000014H
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?FlagImageID@@3PAY04JA[eax+edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 205  : 					btn->SetImage(C_STATE_1,FlagImageID[TeamInfo[i]->GetFlag()][BIG_VERT]);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	imul	eax, 20					; 00000014H
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?FlagImageID@@3PAY04JA[eax+edx]
	push	eax
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 206  : 					btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 207  : 					btn->SetHelpText(gStringMgr->AddText(TeamInfo[i]->GetName()));

	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+84]
	call	edx

; 208  : 					btn->SetUserNumber(0,i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 209  : 					if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN29@SetupOOBWi

; 210  : 						gOOB_Visible[i]=1;

	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR ?gOOB_Visible@@3PADA[edx], 1

; 211  : 					else

	jmp	SHORT $LN30@SetupOOBWi
$LN29@SetupOOBWi:

; 212  : 						gOOB_Visible[i]=0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 8
	jae	SHORT $LN39@SetupOOBWi
	jmp	SHORT $LN40@SetupOOBWi
$LN39@SetupOOBWi:
	call	___report_rangecheckfailure
$LN40@SetupOOBWi:
	mov	ecx, DWORD PTR $T5[ebp]
	mov	BYTE PTR ?gOOB_Visible@@3PADA[ecx], 0
$LN30@SetupOOBWi:

; 213  : 				}
; 214  : 				line=(C_Line*)win->FindControl(TeamColorCtrlIDs[idx]);

	movsx	edx, WORD PTR _idx$[ebp]
	mov	eax, DWORD PTR _TeamColorCtrlIDs[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 215  : 				if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN27@SetupOOBWi

; 216  : 				{
; 217  : 					if(TeamInfo[GetTeam(static_cast<uchar>(i))] && TeamInfo[GetTeam(static_cast<uchar>(i))]->flags & TEAM_ACTIVE)

	movzx	ecx, BYTE PTR _i$[ebp]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4], 0
	je	SHORT $LN26@SetupOOBWi
	movzx	eax, BYTE PTR _i$[ebp]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movsx	eax, WORD PTR [edx+350]
	and	eax, 1
	je	SHORT $LN26@SetupOOBWi

; 218  : 						line->SetColor(TeamColorList[TeamInfo[GetTeam(static_cast<uchar>(i))]->GetColor()]);

	movzx	ecx, BYTE PTR _i$[ebp]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	eax, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetColor@C_Line@@QAEXK@Z		; C_Line::SetColor

; 219  : 					else

	jmp	SHORT $LN25@SetupOOBWi
$LN26@SetupOOBWi:

; 220  : 						line->SetColor(TeamColorList[TeamInfo[i]->GetColor()]);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	edx
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetColor@C_Line@@QAEXK@Z		; C_Line::SetColor
$LN25@SetupOOBWi:

; 221  : 					line->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN27@SetupOOBWi:

; 222  : 				}
; 223  : 				idx++;

	mov	cx, WORD PTR _idx$[ebp]
	add	cx, 1
	mov	WORD PTR _idx$[ebp], cx

; 224  : 			}
; 225  : 			else

	jmp	SHORT $LN24@SetupOOBWi
$LN32@SetupOOBWi:

; 226  : 				gOOB_Visible[i]=0;

	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR $T4[ebp], edx
	cmp	DWORD PTR $T4[ebp], 8
	jae	SHORT $LN41@SetupOOBWi
	jmp	SHORT $LN42@SetupOOBWi
$LN41@SetupOOBWi:
	call	___report_rangecheckfailure
$LN42@SetupOOBWi:
	mov	eax, DWORD PTR $T4[ebp]
	mov	BYTE PTR ?gOOB_Visible@@3PADA[eax], 0
$LN24@SetupOOBWi:

; 227  : 		}

	jmp	$LN34@SetupOOBWi
$LN23@SetupOOBWi:

; 228  : 		while(idx < NUM_TEAMS)

	movsx	ecx, WORD PTR _idx$[ebp]
	cmp	ecx, 8
	jge	SHORT $LN22@SetupOOBWi

; 229  : 		{
; 230  : 			btn=(C_Button*)win->FindControl(TeamFlagBtnIDs[idx]);

	movsx	edx, WORD PTR _idx$[ebp]
	mov	eax, DWORD PTR _TeamFlagBtnIDs[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 231  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN21@SetupOOBWi

; 232  : 				btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN21@SetupOOBWi:

; 233  : 
; 234  : 			line=(C_Line*)win->FindControl(TeamColorCtrlIDs[idx]);

	movsx	ecx, WORD PTR _idx$[ebp]
	mov	edx, DWORD PTR _TeamColorCtrlIDs[ecx*4]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 235  : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN20@SetupOOBWi

; 236  : 				line->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN20@SetupOOBWi:

; 237  : 			idx++;

	mov	cx, WORD PTR _idx$[ebp]
	add	cx, 1
	mov	WORD PTR _idx$[ebp], cx

; 238  : 		}

	jmp	SHORT $LN23@SetupOOBWi
$LN22@SetupOOBWi:

; 239  : 
; 240  : 		// Setup OOB Team Branches
; 241  : 		if(gOOBTree)

	cmp	DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A, 0 ; gOOBTree
	je	$LN19@SetupOOBWi

; 242  : 		{
; 243  : 			idx=0;

	xor	edx, edx
	mov	WORD PTR _idx$[ebp], dx

; 244  : 			for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN18@SetupOOBWi
$LN17@SetupOOBWi:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN18@SetupOOBWi:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN19@SetupOOBWi

; 245  : 			{
; 246  : 				if(TeamInfo[i] && ((TeamInfo[i]->flags & TEAM_ACTIVE) || GetTeam(static_cast<uchar>(i)) != i))

	mov	ecx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	$LN15@SetupOOBWi
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	movsx	ecx, WORD PTR [eax+350]
	and	ecx, 1
	jne	SHORT $LN14@SetupOOBWi
	movzx	edx, BYTE PTR _i$[ebp]
	push	edx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	eax, al
	cmp	eax, DWORD PTR _i$[ebp]
	je	$LN15@SetupOOBWi
$LN14@SetupOOBWi:

; 247  : 				{
; 248  : 					for(j=0;j<4;j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN13@SetupOOBWi
$LN12@SetupOOBWi:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN13@SetupOOBWi:
	cmp	DWORD PTR _j$[ebp], 4
	jge	$LN11@SetupOOBWi

; 249  : 					{
; 250  : 						btn=(C_Button*)win->FindControl(SectionFilterBtns[j]);

	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _SectionFilterBtns[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 251  : 						if(btn && btn->GetState())

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN10@SetupOOBWi
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN10@SetupOOBWi

; 252  : 							cat=1;

	mov	DWORD PTR _cat$[ebp], 1

; 253  : 						else

	jmp	SHORT $LN9@SetupOOBWi
$LN10@SetupOOBWi:

; 254  : 							cat=0;

	mov	DWORD PTR _cat$[ebp], 0
$LN9@SetupOOBWi:

; 255  : 
; 256  : 						TeamID=(i << 24) | OOBCategories[j];

	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _j$[ebp]
	or	edx, DWORD PTR _OOBCategories[eax*4]
	mov	DWORD PTR _TeamID$[ebp], edx

; 257  : 
; 258  : 						team=gOOBTree->Find(TeamID);

	mov	ecx, DWORD PTR _TeamID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _team$[ebp], eax

; 259  : 						if(!team)

	cmp	DWORD PTR _team$[ebp], 0
	jne	$LN8@SetupOOBWi

; 260  : 						{
; 261  : 							category=BuildCategory(TeamID);

	mov	edx, DWORD PTR _TeamID$[ebp]
	push	edx
	call	?BuildCategory@@YAPAVC_Entity@@J@Z	; BuildCategory
	add	esp, 4
	mov	DWORD PTR _category$[ebp], eax

; 262  : 							if(category)

	cmp	DWORD PTR _category$[ebp], 0
	je	SHORT $LN7@SetupOOBWi

; 263  : 							{
; 264  : 								team=gOOBTree->CreateItem(TeamID,/* category->GetType() */ C_TYPE_MENU,category);

	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _TeamID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _team$[ebp], eax

; 265  : 								category->SetOwner(team);

	mov	edx, DWORD PTR _team$[ebp]
	push	edx
	mov	ecx, DWORD PTR _category$[ebp]
	call	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z	; C_Entity::SetOwner

; 266  : 								category->SetFont(gOOBTree->GetParent()->Font_);

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	eax, DWORD PTR [eax+108]
	push	eax
	mov	ecx, DWORD PTR _category$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _category$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 267  : 								if(gOOB_Visible[i] && cat)

	mov	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR ?gOOB_Visible@@3PADA[ecx]
	test	edx, edx
	je	SHORT $LN6@SetupOOBWi
	cmp	DWORD PTR _cat$[ebp], 0
	je	SHORT $LN6@SetupOOBWi

; 268  : 									category->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _category$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _category$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 269  : 								else

	jmp	SHORT $LN5@SetupOOBWi
$LN6@SetupOOBWi:

; 270  : 									category->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _category$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _category$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN5@SetupOOBWi:

; 271  : 							}
; 272  : 							else

	jmp	$LN4@SetupOOBWi
$LN7@SetupOOBWi:

; 273  : 							{
; 274  : 								txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN43@SetupOOBWi
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv392[ebp], eax
	jmp	SHORT $LN44@SetupOOBWi
$LN43@SetupOOBWi:
	mov	DWORD PTR tv392[ebp], 0
$LN44@SetupOOBWi:
	mov	ecx, DWORD PTR tv392[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], edx

; 275  : 								txt->Setup(TeamID,0);

	push	0
	mov	eax, DWORD PTR _TeamID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 276  : 								txt->SetText(gStringMgr->GetText(gStringMgr->AddText("Bermuda Triangle")));

	push	OFFSET ??_C@_0BB@POPOBFAJ@Bermuda?5Triangle?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 277  : 								txt->SetFont(gOOBTree->GetParent()->Font_);

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 278  : 								team=gOOBTree->CreateItem(TeamID,C_TYPE_MENU,txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _TeamID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _team$[ebp], eax

; 279  : 								if(gOOB_Visible[i] && cat)

	mov	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR ?gOOB_Visible@@3PADA[edx]
	test	eax, eax
	je	SHORT $LN3@SetupOOBWi
	cmp	DWORD PTR _cat$[ebp], 0
	je	SHORT $LN3@SetupOOBWi

; 280  : 									txt->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 281  : 								else

	jmp	SHORT $LN4@SetupOOBWi
$LN3@SetupOOBWi:

; 282  : 									txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN4@SetupOOBWi:

; 283  : 							}
; 284  : 							gOOBTree->AddItem(gOOBTree->GetRoot(),team);

	mov	ecx, DWORD PTR _team$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 285  : 						}
; 286  : 						else

	jmp	SHORT $LN1@SetupOOBWi
$LN8@SetupOOBWi:

; 287  : 							UpdateCategory((C_Entity*)team->Item_);

	mov	edx, DWORD PTR _team$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?UpdateCategory@@YAXPAVC_Entity@@@Z	; UpdateCategory
	add	esp, 4
$LN1@SetupOOBWi:

; 288  : 					}

	jmp	$LN12@SetupOOBWi
$LN11@SetupOOBWi:

; 289  : 					idx++;

	mov	cx, WORD PTR _idx$[ebp]
	add	cx, 1
	mov	WORD PTR _idx$[ebp], cx
$LN15@SetupOOBWi:

; 290  : 				}
; 291  : 			}

	jmp	$LN17@SetupOOBWi
$LN19@SetupOOBWi:

; 292  : 		}
; 293  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN38@SetupOOBWi:

; 294  : 	}
; 295  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupOOBWindow@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupOOBWindow@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupOOBWindow@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupOOBWindow@@YAXXZ ENDP				; SetupOOBWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_ent$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z PROC		; SelectOOBEntityCB

; 159  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 160  : 	C_Entity *ent;
; 161  : 
; 162  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SelectOOBE

; 163  : 		return;

	jmp	$LN4@SelectOOBE
$LN3@SelectOOBE:

; 164  : 
; 165  : 	gOOBTree->SetAllControlStates(0,gOOBTree->GetRoot());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 166  : 	ent=(C_Entity*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _ent$[ebp], ecx

; 167  : 	ent->SetState(1);

	push	1
	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 168  : 	ent->Refresh();

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 169  : 
; 170  : 	if(ent->GetID() & UR_DIVISION)

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	and	eax, 65536				; 00010000H
	je	SHORT $LN2@SelectOOBE

; 171  : 	{
; 172  : 		gSelectedDivision=ent->GetID();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	mov	DWORD PTR ?gSelectedDivision@@3JA, eax	; gSelectedDivision

; 173  : 		gSelectedEntity=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4, edx

; 174  : 	}
; 175  : 	else

	jmp	SHORT $LN4@SelectOOBE
$LN2@SelectOOBE:

; 176  : 	{
; 177  : 		gSelectedEntity=ent->GetVUID();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ	; C_Entity::GetVUID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4, edx

; 178  : 		gSelectedDivision=0;

	mov	DWORD PTR ?gSelectedDivision@@3JA, 0	; gSelectedDivision
$LN4@SelectOOBE:

; 179  : 	}
; 180  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectOOBEntityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_squad$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectOOBSquadronCB@@YAXJFPAVC_Base@@@Z PROC		; SelectOOBSquadronCB

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 145  : 	C_Squadron *squad;
; 146  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SelectOOBS

; 147  : 		return;

	jmp	SHORT $LN2@SelectOOBS
$LN1@SelectOOBS:

; 148  : 
; 149  : 	gOOBTree->SetAllControlStates(0,gOOBTree->GetRoot());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 150  : 	squad=(C_Squadron*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _squad$[ebp], ecx

; 151  : 	squad->SetState(1);

	push	1
	mov	edx, DWORD PTR _squad$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _squad$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 152  : 	squad->Refresh();

	mov	eax, DWORD PTR _squad$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _squad$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 153  : 
; 154  : 	gSelectedEntity=squad->GetVUID();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _squad$[ebp]
	call	?GetVUID@C_Squadron@@QAE?AVVU_ID@@XZ	; C_Squadron::GetVUID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gSelectedEntity@@3VVU_ID@@A+4, eax

; 155  : 	gSelectedDivision=0;

	mov	DWORD PTR ?gSelectedDivision@@3JA, 0	; gSelectedDivision
$LN2@SelectOOBS:

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectOOBSquadronCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectOOBSquadronCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
;	COMDAT ??__EgSelectedEntity@@YAXXZ
text$yc	SEGMENT
??__EgSelectedEntity@@YAXXZ PROC			; `dynamic initializer for 'gSelectedEntity'', COMDAT

; 140  : VU_ID gSelectedEntity;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gSelectedEntity@@3VVU_ID@@A ; gSelectedEntity
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EgSelectedEntity@@YAXXZ ENDP			; `dynamic initializer for 'gSelectedEntity''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_Type$ = -208						; size = 4
_buffer$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_category$ = 8						; size = 4
?UpdateCategory@@YAXPAVC_Entity@@@Z PROC		; UpdateCategory

; 1145 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1146 : 	long Type;
; 1147 : 	_TCHAR buffer[200];
; 1148 : 
; 1149 : 	if(!category)

	cmp	DWORD PTR _category$[ebp], 0
	jne	SHORT $LN8@UpdateCate

; 1150 : 		return;

	jmp	$LN9@UpdateCate
$LN8@UpdateCate:

; 1151 : 
; 1152 : 	Type=category->GetID();

	mov	ecx, DWORD PTR _category$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	mov	DWORD PTR _Type$[ebp], eax

; 1153 : 
; 1154 : 	if(Type & OOB_AIRFORCE)

	mov	eax, DWORD PTR _Type$[ebp]
	and	eax, 65536				; 00010000H
	je	SHORT $LN7@UpdateCate

; 1155 : 	{
; 1156 : 		_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_AIRFORCES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	96					; 00000060H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	$LN6@UpdateCate
$LN7@UpdateCate:

; 1157 : 	}
; 1158 : 	else if(Type & OOB_ARMY)

	mov	eax, DWORD PTR _Type$[ebp]
	and	eax, 131072				; 00020000H
	je	SHORT $LN5@UpdateCate

; 1159 : 	{
; 1160 : 		_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_ARMY),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	97					; 00000061H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	$LN6@UpdateCate
$LN5@UpdateCate:

; 1161 : 	}
; 1162 : 	else if(Type & OOB_NAVY)

	mov	eax, DWORD PTR _Type$[ebp]
	and	eax, 262144				; 00040000H
	je	SHORT $LN3@UpdateCate

; 1163 : 	{
; 1164 : 		_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_NAVALFORCES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	98					; 00000062H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN6@UpdateCate
$LN3@UpdateCate:

; 1165 : 	}
; 1166 : 	else if(Type & OOB_OBJECTIVE)

	mov	eax, DWORD PTR _Type$[ebp]
	and	eax, 524288				; 00080000H
	je	SHORT $LN6@UpdateCate

; 1167 : 	{
; 1168 : 		_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_OBJECTIVES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	99					; 00000063H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN6@UpdateCate:

; 1169 : 	}
; 1170 : 	category->SetName(35,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _category$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName
$LN9@UpdateCate:

; 1171 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCategory@@YAXPAVC_Entity@@@Z ENDP		; UpdateCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -240						; size = 4
tv71 = -236						; size = 4
$T3 = -232						; size = 4
_img$ = -228						; size = 4
_newinfo$ = -224					; size = 4
_i$ = -220						; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_Type$ = 8						; size = 4
?BuildCategory@@YAPAVC_Entity@@J@Z PROC			; BuildCategory

; 1061 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildCategory@@YAPAVC_Entity@@J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1062 : 	C_Entity *newinfo;
; 1063 : 	_TCHAR buffer[200];
; 1064 : 	IMAGE_RSC *img;
; 1065 : 	int i;
; 1066 : 
; 1067 : 	// This type DOESN'T have the BLACK & BLUE Background
; 1068 : 
; 1069 : 	// Create new parent class
; 1070 : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN30@BuildCateg
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN31@BuildCateg
$LN30@BuildCateg:
	mov	DWORD PTR tv71[ebp], 0
$LN31@BuildCateg:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newinfo$[ebp], ecx

; 1071 : 	newinfo->Setup(Type,0);

	push	0
	mov	edx, DWORD PTR _Type$[ebp]
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 1072 : 	newinfo->SetWH(320,22);

	push	22					; 00000016H
	push	320					; 00000140H
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 1073 : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 1074 : 
; 1075 : 	if(Type & OOB_AIRFORCE)

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, 65536				; 00010000H
	je	$LN27@BuildCateg

; 1076 : 	{
; 1077 : 		img=gImageMgr->GetImage(SMALL_AF);

	push	200100					; 00030da4H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _img$[ebp], eax

; 1078 : 		if(img)

	cmp	DWORD PTR _img$[ebp], 0
	je	SHORT $LN26@BuildCateg

; 1079 : 			i=img->Header->h;

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _i$[ebp], ecx

; 1080 : 		else

	jmp	SHORT $LN25@BuildCateg
$LN26@BuildCateg:

; 1081 : 			i=20;

	mov	DWORD PTR _i$[ebp], 20			; 00000014H
$LN25@BuildCateg:

; 1082 : 		if(i > 20)

	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jle	SHORT $LN24@BuildCateg

; 1083 : 			newinfo->SetH(i+2);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN24@BuildCateg:

; 1084 : 		newinfo->SetIcon(15,static_cast<short>(i/2),SMALL_AF);

	push	200100					; 00030da4H
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFJ@Z		; C_Entity::SetIcon

; 1085 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	SHORT $LN23@BuildCateg

; 1086 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_AIRFORCES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	edx, DWORD PTR _Type$[ebp]
	and	edx, -16777216				; ff000000H
	sar	edx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	96					; 00000060H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1087 : 		else

	jmp	SHORT $LN22@BuildCateg
$LN23@BuildCateg:

; 1088 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_AIRFORCES),gStringMgr->GetString(TeamNameIDs[(Type & OOB_TEAM_MASK) >> 24]));

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR ?TeamNameIDs@@3PAJA[ecx*4]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	96					; 00000060H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN22@BuildCateg:
	jmp	$LN21@BuildCateg
$LN27@BuildCateg:

; 1089 : 	}
; 1090 : 	else if(Type & OOB_ARMY)

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, 131072				; 00020000H
	je	$LN20@BuildCateg

; 1091 : 	{
; 1092 : 		img=gImageMgr->GetImage(SMALL_AF);

	push	200100					; 00030da4H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _img$[ebp], eax

; 1093 : 		if(img)

	cmp	DWORD PTR _img$[ebp], 0
	je	SHORT $LN19@BuildCateg

; 1094 : 			i=img->Header->h;

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _i$[ebp], ecx

; 1095 : 		else

	jmp	SHORT $LN18@BuildCateg
$LN19@BuildCateg:

; 1096 : 			i=20;

	mov	DWORD PTR _i$[ebp], 20			; 00000014H
$LN18@BuildCateg:

; 1097 : 		if(i > 20)

	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jle	SHORT $LN17@BuildCateg

; 1098 : 			newinfo->SetH(i+2);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN17@BuildCateg:

; 1099 : 
; 1100 : 		newinfo->SetIcon(15,static_cast<short>(i/2),SMALL_ARMY);

	push	200101					; 00030da5H
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFJ@Z		; C_Entity::SetIcon

; 1101 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	SHORT $LN16@BuildCateg

; 1102 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_ARMY),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	edx, DWORD PTR _Type$[ebp]
	and	edx, -16777216				; ff000000H
	sar	edx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	97					; 00000061H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1103 : 		else

	jmp	SHORT $LN15@BuildCateg
$LN16@BuildCateg:

; 1104 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_ARMY),gStringMgr->GetString(TeamNameIDs[(Type & OOB_TEAM_MASK) >> 24]));

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR ?TeamNameIDs@@3PAJA[ecx*4]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	97					; 00000061H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN15@BuildCateg:
	jmp	$LN21@BuildCateg
$LN20@BuildCateg:

; 1105 : 	}
; 1106 : 	else if(Type & OOB_NAVY)

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, 262144				; 00040000H
	je	$LN13@BuildCateg

; 1107 : 	{
; 1108 : 		img=gImageMgr->GetImage(SMALL_AF);

	push	200100					; 00030da4H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _img$[ebp], eax

; 1109 : 		if(img)

	cmp	DWORD PTR _img$[ebp], 0
	je	SHORT $LN12@BuildCateg

; 1110 : 			i=img->Header->h;

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _i$[ebp], ecx

; 1111 : 		else

	jmp	SHORT $LN11@BuildCateg
$LN12@BuildCateg:

; 1112 : 			i=20;

	mov	DWORD PTR _i$[ebp], 20			; 00000014H
$LN11@BuildCateg:

; 1113 : 		if(i > 20)

	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jle	SHORT $LN10@BuildCateg

; 1114 : 			newinfo->SetH(i+2);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN10@BuildCateg:

; 1115 : 		newinfo->SetIcon(15,static_cast<short>(i/2),SMALL_NAVY);

	push	200102					; 00030da6H
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFJ@Z		; C_Entity::SetIcon

; 1116 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	SHORT $LN9@BuildCateg

; 1117 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_NAVALFORCES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	edx, DWORD PTR _Type$[ebp]
	and	edx, -16777216				; ff000000H
	sar	edx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	98					; 00000062H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1118 : 		else

	jmp	SHORT $LN8@BuildCateg
$LN9@BuildCateg:

; 1119 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_NAVALFORCES),gStringMgr->GetString(TeamNameIDs[(Type & OOB_TEAM_MASK) >> 24]));

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR ?TeamNameIDs@@3PAJA[ecx*4]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	98					; 00000062H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN8@BuildCateg:
	jmp	$LN21@BuildCateg
$LN13@BuildCateg:

; 1120 : 	}
; 1121 : 	else if(Type & OOB_OBJECTIVE)

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, 524288				; 00080000H
	je	$LN21@BuildCateg

; 1122 : 	{
; 1123 : 		img=gImageMgr->GetImage(SMALL_AF);

	push	200100					; 00030da4H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _img$[ebp], eax

; 1124 : 		if(img)

	cmp	DWORD PTR _img$[ebp], 0
	je	SHORT $LN5@BuildCateg

; 1125 : 			i=img->Header->h;

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _i$[ebp], ecx

; 1126 : 		else

	jmp	SHORT $LN4@BuildCateg
$LN5@BuildCateg:

; 1127 : 			i=20;

	mov	DWORD PTR _i$[ebp], 20			; 00000014H
$LN4@BuildCateg:

; 1128 : 		if(i > 20)

	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jle	SHORT $LN3@BuildCateg

; 1129 : 			newinfo->SetH(i+2);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN3@BuildCateg:

; 1130 : 		newinfo->SetIcon(15,static_cast<short>(i/2),SMALL_OBJ);

	push	200103					; 00030da7H
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFJ@Z		; C_Entity::SetIcon

; 1131 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	SHORT $LN2@BuildCateg

; 1132 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_OBJECTIVES),TeamInfo[(Type & OOB_TEAM_MASK) >> 24]->GetName());

	mov	edx, DWORD PTR _Type$[ebp]
	and	edx, -16777216				; ff000000H
	sar	edx, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	99					; 00000063H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1133 : 		else

	jmp	SHORT $LN21@BuildCateg
$LN2@BuildCateg:

; 1134 : 			_stprintf(buffer,"%s : %s",gStringMgr->GetString(TXT_OBJECTIVES),gStringMgr->GetString(TeamNameIDs[(Type & OOB_TEAM_MASK) >> 24]));

	mov	ecx, DWORD PTR _Type$[ebp]
	and	ecx, -16777216				; ff000000H
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR ?TeamNameIDs@@3PAJA[ecx*4]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	99					; 00000063H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN21@BuildCateg:

; 1135 : 	}
; 1136 : 
; 1137 : 	// Set Name
; 1138 : 	newinfo->SetName(35,0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 1139 : 
; 1140 : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]

; 1141 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildCategory@@YAPAVC_Entity@@J@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildCategory@@YAPAVC_Entity@@J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildCategory@@YAPAVC_Entity@@J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildCategory@@YAPAVC_Entity@@J@Z ENDP			; BuildCategory
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
$T2 = -260						; size = 8
$T3 = -252						; size = 8
$T4 = -244						; size = 4
$T5 = -240						; size = 4
_img$ = -236						; size = 4
tv78 = -232						; size = 4
_UnitPtr$ = -228					; size = 4
_type$ = -224						; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sqd$ = 8						; size = 4
?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z PROC ; BuildSquadronInfo

; 953  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 954  : 	C_Squadron *newinfo;
; 955  : 	_TCHAR buffer[200];
; 956  : 	IMAGE_RSC *img;
; 957  : 	short type;
; 958  : 	UnitClassDataType *UnitPtr;
; 959  : 
; 960  : 	UnitPtr=sqd->GetUnitClassData();

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$[ebp], eax

; 961  : 	if(UnitPtr == NULL)

	cmp	DWORD PTR _UnitPtr$[ebp], 0
	jne	SHORT $LN5@BuildSquad

; 962  : 		return(NULL);

	xor	eax, eax
	jmp	$LN6@BuildSquad
$LN5@BuildSquad:

; 963  : 
; 964  : 	// Create new parent class
; 965  : 	newinfo=new C_Squadron;

	push	200					; 000000c8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@BuildSquad
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_Squadron@@QAE@XZ			; C_Squadron::C_Squadron
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN9@BuildSquad
$LN8@BuildSquad:
	mov	DWORD PTR tv78[ebp], 0
$LN9@BuildSquad:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _newinfo$[ebp], ecx

; 966  : 	newinfo->Setup(sqd->GetCampID(),C_TYPE_MENU);

	push	49					; 00000031H
	mov	edx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Squadron@@QAEXJF@Z		; C_Squadron::Setup

; 967  : 	newinfo->SetWH(286,52);

	push	52					; 00000034H
	push	286					; 0000011eH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 968  : 	newinfo->InitSquadron();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitSquadron@C_Squadron@@QAEXXZ	; C_Squadron::InitSquadron

; 969  : 
; 970  : 	newinfo->SetVUID(sqd->Id());

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Squadron@@QAEXVVU_ID@@@Z	; C_Squadron::SetVUID

; 971  : 	newinfo->SetUserNumber(0,sqd->GetOwner()); // MUST be GetOwner not GetTeam

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	push	ecx
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 972  : 
; 973  : 	newinfo->SetNumVehicles(static_cast<short>(sqd->GetTotalVehicles()));

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetNumVehicles@C_Squadron@@QAEXF@Z	; C_Squadron::SetNumVehicles

; 974  : 	newinfo->SetNumPilots(static_cast<short>(sqd->NumActivePilots()));

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?NumActivePilots@SquadronClass@@QAEHXZ	; SquadronClass::NumActivePilots
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetNumPilots@C_Squadron@@QAEXF@Z	; C_Squadron::SetNumPilots

; 975  : 	newinfo->SetNumPlayers(GetSquadronPlayerCount(sqd->Id()));

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?GetSquadronPlayerCount@@YAFVVU_ID@@@Z	; GetSquadronPlayerCount
	add	esp, 8
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetNumPlayers@C_Squadron@@QAEXF@Z	; C_Squadron::SetNumPlayers

; 976  : 
; 977  : 	img=gImageMgr->GetImage(UnitPtr->IconIndex);

	mov	ecx, DWORD PTR _UnitPtr$[ebp]
	movsx	edx, WORD PTR [ecx+332]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _img$[ebp], eax

; 978  : 	if(img)

	cmp	DWORD PTR _img$[ebp], 0
	je	SHORT $LN4@BuildSquad

; 979  : 		type=img->Header->h;

	mov	eax, DWORD PTR _img$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR [ecx+46]
	mov	WORD PTR _type$[ebp], dx

; 980  : 	else

	jmp	SHORT $LN3@BuildSquad
$LN4@BuildSquad:

; 981  : 		type=0;

	xor	eax, eax
	mov	WORD PTR _type$[ebp], ax
$LN3@BuildSquad:

; 982  : 
; 983  : 	if(type > 50)

	movsx	ecx, WORD PTR _type$[ebp]
	cmp	ecx, 50					; 00000032H
	jle	SHORT $LN2@BuildSquad

; 984  : 		newinfo->SetH(type+2);

	movsx	edx, WORD PTR _type$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 985  : 	else

	jmp	SHORT $LN1@BuildSquad
$LN2@BuildSquad:

; 986  : 		type=50;

	mov	ecx, 50					; 00000032H
	mov	WORD PTR _type$[ebp], cx
$LN1@BuildSquad:

; 987  : 
; 988  : 	// Set BG Area behind Airplane Icon
; 989  : 	newinfo->SetIconBgColor(0x7c5600,0);

	push	0
	push	8148480					; 007c5600H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBgColor@C_Squadron@@QAEXKK@Z	; C_Squadron::SetIconBgColor

; 990  : 	newinfo->SetIconBg(0,0,46,type);

	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	push	46					; 0000002eH
	push	0
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIconBg@C_Squadron@@QAEXFFFF@Z	; C_Squadron::SetIconBg

; 991  : 
; 992  : 	// Set BG Area behind rest of Squadron text
; 993  : 	newinfo->SetInfoBgColor(0,0x7c5600);

	push	8148480					; 007c5600H
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBgColor@C_Squadron@@QAEXKK@Z	; C_Squadron::SetInfoBgColor

; 994  : 	newinfo->SetInfoBg(46,0,240,type);

	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	push	240					; 000000f0H
	push	0
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetInfoBg@C_Squadron@@QAEXFFFF@Z	; C_Squadron::SetInfoBg

; 995  : 
; 996  : 	// Set Icon Image
; 997  : 	newinfo->SetIcon(23,static_cast<short>(type/2),UnitPtr->IconIndex);

	mov	ecx, DWORD PTR _UnitPtr$[ebp]
	movsx	edx, WORD PTR [ecx+332]
	push	edx
	movsx	eax, WORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	23					; 00000017H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Squadron@@QAEXFFJ@Z		; C_Squadron::SetIcon

; 998  : 
; 999  : 	// Set Name
; 1000 : 	sqd->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1001 : 	newinfo->SetName(54,5,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	5
	push	54					; 00000036H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Squadron@@QAEXFFPAD@Z	; C_Squadron::SetName

; 1002 : 
; 1003 : 	// Set # & Airplane type
; 1004 : 	_stprintf(buffer,"%1d %s",newinfo->GetNumVehicles(),GetVehicleName(sqd->GetVehicleID(0)));

	push	0
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movzx	edx, ax
	push	edx
	call	?GetVehicleName@@YAPADF@Z		; GetVehicleName
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetNumVehicles@C_Squadron@@QAEFXZ	; C_Squadron::GetNumVehicles
	cwde
	push	eax
	push	OFFSET ??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1005 : 	newinfo->SetPlanes(54,20,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	20					; 00000014H
	push	54					; 00000036H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetPlanes@C_Squadron@@QAEXFFPAD@Z	; C_Squadron::SetPlanes

; 1006 : 
; 1007 : 	// Set Total # of Pilots
; 1008 : 	_stprintf(buffer,"%1d %s",newinfo->GetNumPilots()+newinfo->GetNumPlayers(),gStringMgr->GetString(TXT_PILOTS));

	push	95					; 0000005fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetNumPilots@C_Squadron@@QAEFXZ	; C_Squadron::GetNumPilots
	movsx	esi, ax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetNumPlayers@C_Squadron@@QAEFXZ	; C_Squadron::GetNumPlayers
	cwde
	add	esi, eax
	push	esi
	push	OFFSET ??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1009 : 	newinfo->SetPilots(160,20,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	20					; 00000014H
	push	160					; 000000a0H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetPilots@C_Squadron@@QAEXFFPAD@Z	; C_Squadron::SetPilots

; 1010 : 
; 1011 : 	// Set #  of Human Pilots
; 1012 : 	_stprintf(buffer,"%1d %s",newinfo->GetNumPlayers(),gStringMgr->GetString(TXT_PLAYERS));

	push	93					; 0000005dH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetNumPlayers@C_Squadron@@QAEFXZ	; C_Squadron::GetNumPlayers
	cwde
	push	eax
	push	OFFSET ??_C@_06MGCEDCDP@?$CF1d?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1013 : 	newinfo->SetPlayers(54,35,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	35					; 00000023H
	push	54					; 00000036H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetPlayers@C_Squadron@@QAEXFFPAD@Z	; C_Squadron::SetPlayers

; 1014 : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN6@BuildSquad:

; 1015 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z ENDP ; BuildSquadronInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
;	COMDAT ??__EgSelectedAirbase@@YAXXZ
text$yc	SEGMENT
??__EgSelectedAirbase@@YAXXZ PROC			; `dynamic initializer for 'gSelectedAirbase'', COMDAT

; 51   : VU_ID gSelectedAirbase=FalconNullId;

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gSelectedAirbase@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gSelectedAirbase@@3VVU_ID@@A+4, ecx
	pop	ebp
	ret	0
??__EgSelectedAirbase@@YAXXZ ENDP			; `dynamic initializer for 'gSelectedAirbase''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\oob.cpp
_TEXT	SEGMENT
_builder$ = -4						; size = 4
_entity$ = 8						; size = 4
?BuildOOBItem@@YAPAVC_Base@@PAVCampBaseClass@@@Z PROC	; BuildOOBItem

; 1018 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1019 : 	C_Base *builder;
; 1020 : 
; 1021 : 	if(entity->IsSquadron())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN12@BuildOOBIt

; 1022 : 	{
; 1023 : 		builder=BuildSquadronInfo((Squadron)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?BuildSquadronInfo@@YAPAVC_Squadron@@PAVSquadronClass@@@Z ; BuildSquadronInfo
	add	esp, 4
	mov	DWORD PTR _builder$[ebp], eax

; 1024 : 		if(builder)

	cmp	DWORD PTR _builder$[ebp], 0
	je	SHORT $LN11@BuildOOBIt

; 1025 : 		{
; 1026 : 			((C_Squadron*)builder)->SetCallback(SelectOOBSquadronCB);

	push	OFFSET ?SelectOOBSquadronCB@@YAXJFPAVC_Base@@@Z ; SelectOOBSquadronCB
	mov	edx, DWORD PTR _builder$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _builder$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1027 : 			return(builder);

	mov	eax, DWORD PTR _builder$[ebp]
	jmp	$LN13@BuildOOBIt
$LN11@BuildOOBIt:

; 1028 : 		}
; 1029 : 	}

	jmp	$LN10@BuildOOBIt
$LN12@BuildOOBIt:

; 1030 : 	else if(entity->IsBattalion() || entity->IsBrigade())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	test	eax, eax
	jne	SHORT $LN8@BuildOOBIt
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+244]
	call	eax
	test	eax, eax
	je	SHORT $LN9@BuildOOBIt
$LN8@BuildOOBIt:

; 1031 : 	{
; 1032 : 		builder=BuildUnitInfo((Unit)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?BuildUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z ; BuildUnitInfo
	add	esp, 4
	mov	DWORD PTR _builder$[ebp], eax

; 1033 : 		if(builder)

	cmp	DWORD PTR _builder$[ebp], 0
	je	SHORT $LN7@BuildOOBIt

; 1034 : 		{
; 1035 : 			((C_Entity*)builder)->SetCallback(SelectOOBEntityCB);

	push	OFFSET ?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z ; SelectOOBEntityCB
	mov	edx, DWORD PTR _builder$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _builder$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1036 : 			return(builder);

	mov	eax, DWORD PTR _builder$[ebp]
	jmp	$LN13@BuildOOBIt
$LN7@BuildOOBIt:

; 1037 : 		}
; 1038 : 	}

	jmp	$LN10@BuildOOBIt
$LN9@BuildOOBIt:

; 1039 : 	else if(entity->IsTaskForce())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+264]
	call	eax
	test	eax, eax
	je	SHORT $LN5@BuildOOBIt

; 1040 : 	{
; 1041 : 		builder=BuildNavalUnitInfo((Unit)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?BuildNavalUnitInfo@@YAPAVC_Entity@@PAVUnitClass@@@Z ; BuildNavalUnitInfo
	add	esp, 4
	mov	DWORD PTR _builder$[ebp], eax

; 1042 : 		if(builder)

	cmp	DWORD PTR _builder$[ebp], 0
	je	SHORT $LN4@BuildOOBIt

; 1043 : 		{
; 1044 : 			((C_Entity*)builder)->SetCallback(SelectOOBEntityCB);

	push	OFFSET ?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z ; SelectOOBEntityCB
	mov	edx, DWORD PTR _builder$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _builder$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1045 : 			return(builder);

	mov	eax, DWORD PTR _builder$[ebp]
	jmp	SHORT $LN13@BuildOOBIt
$LN4@BuildOOBIt:

; 1046 : 		}
; 1047 : 	}

	jmp	SHORT $LN10@BuildOOBIt
$LN5@BuildOOBIt:

; 1048 : 	else if(entity->IsObjective())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN10@BuildOOBIt

; 1049 : 	{
; 1050 : 		builder=BuildObjectiveInfo((Objective)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?BuildObjectiveInfo@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ; BuildObjectiveInfo
	add	esp, 4
	mov	DWORD PTR _builder$[ebp], eax

; 1051 : 		if(builder)

	cmp	DWORD PTR _builder$[ebp], 0
	je	SHORT $LN10@BuildOOBIt

; 1052 : 		{
; 1053 : 			((C_Entity*)builder)->SetCallback(SelectOOBEntityCB);

	push	OFFSET ?SelectOOBEntityCB@@YAXJFPAVC_Base@@@Z ; SelectOOBEntityCB
	mov	edx, DWORD PTR _builder$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _builder$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1054 : 			return(builder);

	mov	eax, DWORD PTR _builder$[ebp]
	jmp	SHORT $LN13@BuildOOBIt
$LN10@BuildOOBIt:

; 1055 : 		}
; 1056 : 	}
; 1057 : 	return(NULL);

	xor	eax, eax
$LN13@BuildOOBIt:

; 1058 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BuildOOBItem@@YAPAVC_Base@@PAVCampBaseClass@@@Z ENDP	; BuildOOBItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\urefresh.h
;	COMDAT ?GetSide@UI_Refresher@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSide@UI_Refresher@@QAEEXZ PROC			; UI_Refresher::GetSide, COMDAT
; _this$ = ecx

; 61   : 		uchar GetSide() { return(Side_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSide@UI_Refresher@@QAEEXZ ENDP			; UI_Refresher::GetSide
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\urefresh.h
;	COMDAT ?GetType@UI_Refresher@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@UI_Refresher@@QAEEXZ PROC			; UI_Refresher::GetType, COMDAT
; _this$ = ecx

; 58   : 		uchar GetType() { return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+6]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@UI_Refresher@@QAEEXZ ENDP			; UI_Refresher::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\urefresh.h
;	COMDAT ?GetDivID@UI_Refresher@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDivID@UI_Refresher@@QAEFXZ PROC			; UI_Refresher::GetDivID, COMDAT
; _this$ = ecx

; 55   : 		short GetDivID() { return(DivID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+2]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDivID@UI_Refresher@@QAEFXZ ENDP			; UI_Refresher::GetDivID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0SquadPlayerStr@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SquadPlayerStr@@QAE@XZ PROC				; SquadPlayerStr::SquadPlayerStr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SquadPlayerStr@@QAE@XZ ENDP				; SquadPlayerStr::SquadPlayerStr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv79 = -4						; size = 4
?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ PROC		; UIComms::GetGame, COMDAT
; _this$ = ecx

; 124  : 		VuGameEntity* GetGame()			{ return FalconLocalGame; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@GetGame
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@GetGame
$LN3@GetGame:
	mov	DWORD PTR tv79[ebp], 0
$LN4@GetGame:
	mov	eax, DWORD PTR tv79[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ ENDP		; UIComms::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerSquadronID, COMDAT
; _this$ = ecx

; 133  : 	VU_ID GetPlayerSquadronID(void) const         { return playerSquadron; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	edx, DWORD PTR [eax+456]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?GetVUID@C_Squadron@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Squadron@@QAE?AVVU_ID@@XZ PROC		; C_Squadron::GetVUID, COMDAT
; _this$ = ecx

; 108  : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [eax+196]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Squadron@@QAE?AVVU_ID@@XZ ENDP		; C_Squadron::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetVUID@C_Squadron@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Squadron@@QAEXVVU_ID@@@Z PROC		; C_Squadron::SetVUID, COMDAT
; _this$ = ecx

; 107  : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+192], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+196], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Squadron@@QAEXVVU_ID@@@Z ENDP		; C_Squadron::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?GetNumPlayers@C_Squadron@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumPlayers@C_Squadron@@QAEFXZ PROC			; C_Squadron::GetNumPlayers, COMDAT
; _this$ = ecx

; 83   : 		short GetNumPlayers()			{ return(NumPlayers_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+118]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumPlayers@C_Squadron@@QAEFXZ ENDP			; C_Squadron::GetNumPlayers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?GetNumPilots@C_Squadron@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumPilots@C_Squadron@@QAEFXZ PROC			; C_Squadron::GetNumPilots, COMDAT
; _this$ = ecx

; 82   : 		short GetNumPilots()			{ return(NumPilots_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+116]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumPilots@C_Squadron@@QAEFXZ ENDP			; C_Squadron::GetNumPilots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?GetNumVehicles@C_Squadron@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumVehicles@C_Squadron@@QAEFXZ PROC			; C_Squadron::GetNumVehicles, COMDAT
; _this$ = ecx

; 81   : 		short GetNumVehicles()			{ return(NumVehicles_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+114]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumVehicles@C_Squadron@@QAEFXZ ENDP			; C_Squadron::GetNumVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetNumPlayers@C_Squadron@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 2
?SetNumPlayers@C_Squadron@@QAEXF@Z PROC			; C_Squadron::SetNumPlayers, COMDAT
; _this$ = ecx

; 78   : 		void SetNumPlayers(short i)		{ NumPlayers_=i; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _i$[ebp]
	mov	WORD PTR [eax+118], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumPlayers@C_Squadron@@QAEXF@Z ENDP			; C_Squadron::SetNumPlayers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetNumPilots@C_Squadron@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 2
?SetNumPilots@C_Squadron@@QAEXF@Z PROC			; C_Squadron::SetNumPilots, COMDAT
; _this$ = ecx

; 77   : 		void SetNumPilots(short i)		{ NumPilots_=i; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _i$[ebp]
	mov	WORD PTR [eax+116], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumPilots@C_Squadron@@QAEXF@Z ENDP			; C_Squadron::SetNumPilots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetNumVehicles@C_Squadron@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 2
?SetNumVehicles@C_Squadron@@QAEXF@Z PROC		; C_Squadron::SetNumVehicles, COMDAT
; _this$ = ecx

; 76   : 		void SetNumVehicles(short i)	{ NumVehicles_=i; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _i$[ebp]
	mov	WORD PTR [eax+114], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumVehicles@C_Squadron@@QAEXF@Z ENDP		; C_Squadron::SetNumVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetBaseID@C_Squadron@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CampID$ = 8						; size = 4
?SetBaseID@C_Squadron@@QAEXJ@Z PROC			; C_Squadron::SetBaseID, COMDAT
; _this$ = ecx

; 75   : 		void SetBaseID(long CampID)		{ BaseID_=CampID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CampID$[ebp]
	mov	DWORD PTR [eax+104], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBaseID@C_Squadron@@QAEXJ@Z ENDP			; C_Squadron::SetBaseID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetInfoBgColor@C_Squadron@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Off$ = 8						; size = 4
_On$ = 12						; size = 4
?SetInfoBgColor@C_Squadron@@QAEXKK@Z PROC		; C_Squadron::SetInfoBgColor, COMDAT
; _this$ = ecx

; 70   : 		void SetInfoBgColor(COLORREF Off,COLORREF On) { InfoBgColor_[0]=Off; InfoBgColor_[1]=On; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [ecx+eax+128], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _On$[ebp]
	mov	DWORD PTR [ecx+eax+128], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetInfoBgColor@C_Squadron@@QAEXKK@Z ENDP		; C_Squadron::SetInfoBgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetIconBgColor@C_Squadron@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Off$ = 8						; size = 4
_On$ = 12						; size = 4
?SetIconBgColor@C_Squadron@@QAEXKK@Z PROC		; C_Squadron::SetIconBgColor, COMDAT
; _this$ = ecx

; 69   : 		void SetIconBgColor(COLORREF Off,COLORREF On) { IconBgColor_[0]=Off; IconBgColor_[1]=On; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [ecx+eax+120], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _On$[ebp]
	mov	DWORD PTR [ecx+eax+120], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetIconBgColor@C_Squadron@@QAEXKK@Z ENDP		; C_Squadron::SetIconBgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetPlayers@C_Squadron@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetPlayers@C_Squadron@@QAEXFFPAD@Z PROC		; C_Squadron::SetPlayers, COMDAT
; _this$ = ecx

; 61   : 		void SetPlayers(short x,short y,_TCHAR *str)	{ if(Players_) { Players_->SetXY(x,y); Players_->SetText(str); Players_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN2@SetPlayers
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetPlayers:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetPlayers@C_Squadron@@QAEXFFPAD@Z ENDP		; C_Squadron::SetPlayers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetPilots@C_Squadron@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetPilots@C_Squadron@@QAEXFFPAD@Z PROC			; C_Squadron::SetPilots, COMDAT
; _this$ = ecx

; 60   : 		void SetPilots(short x,short y,_TCHAR *str)		{ if(Pilots_) { Pilots_->SetXY(x,y); Pilots_->SetText(str); Pilots_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+180], 0
	je	SHORT $LN2@SetPilots
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+180]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetPilots:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetPilots@C_Squadron@@QAEXFFPAD@Z ENDP			; C_Squadron::SetPilots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetPlanes@C_Squadron@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetPlanes@C_Squadron@@QAEXFFPAD@Z PROC			; C_Squadron::SetPlanes, COMDAT
; _this$ = ecx

; 59   : 		void SetPlanes(short x,short y,_TCHAR *str)		{ if(Planes_) { Planes_->SetXY(x,y); Planes_->SetText(str); Planes_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+176], 0
	je	SHORT $LN2@SetPlanes
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+176]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetPlanes:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetPlanes@C_Squadron@@QAEXFFPAD@Z ENDP			; C_Squadron::SetPlanes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetName@C_Squadron@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetName@C_Squadron@@QAEXFFPAD@Z PROC			; C_Squadron::SetName, COMDAT
; _this$ = ecx

; 58   : 		void SetName(short x,short y,_TCHAR *str)		{ if(Name_) { Name_->SetXY(x,y); Name_->SetText(str); Name_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+172], 0
	je	SHORT $LN2@SetName
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+172]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetName:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetName@C_Squadron@@QAEXFFPAD@Z ENDP			; C_Squadron::SetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetIcon@C_Squadron@@QAEXFFJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_ImageID$ = 16						; size = 4
?SetIcon@C_Squadron@@QAEXFFJ@Z PROC			; C_Squadron::SetIcon, COMDAT
; _this$ = ecx

; 57   : 		void SetIcon(short x,short y,long ImageID)		{ if(Icon_) { Icon_->SetXY(x,y); Icon_->SetImage(ImageID); Icon_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN2@SetIcon
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+168]
	call	?SetImage@O_Output@@QAEXJ@Z		; O_Output::SetImage
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetIcon:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIcon@C_Squadron@@QAEXFFJ@Z ENDP			; C_Squadron::SetIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetInfoBg@C_Squadron@@QAEXFFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_w$ = 16						; size = 2
_h$ = 20						; size = 2
?SetInfoBg@C_Squadron@@QAEXFFFF@Z PROC			; C_Squadron::SetInfoBg, COMDAT
; _this$ = ecx

; 55   : 		void SetInfoBg(short x,short y,short w,short h)		{ InfoBg_.left=x; InfoBg_.top=y; InfoBg_.right=w; InfoBg_.bottom=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+152], eax
	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], edx
	movsx	ecx, WORD PTR _w$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], ecx
	movsx	eax, WORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetInfoBg@C_Squadron@@QAEXFFFF@Z ENDP			; C_Squadron::SetInfoBg
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetIconBg@C_Squadron@@QAEXFFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_w$ = 16						; size = 2
_h$ = 20						; size = 2
?SetIconBg@C_Squadron@@QAEXFFFF@Z PROC			; C_Squadron::SetIconBg, COMDAT
; _this$ = ecx

; 54   : 		void SetIconBg(short x,short y,short w,short h)		{ IconBg_.left=x; IconBg_.top=y; IconBg_.right=w; IconBg_.bottom=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], eax
	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], edx
	movsx	ecx, WORD PTR _w$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], ecx
	movsx	eax, WORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+148], eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetIconBg@C_Squadron@@QAEXFFFF@Z ENDP			; C_Squadron::SetIconBg
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?GetOwner@C_Squadron@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@C_Squadron@@QAEPAVTREELIST@@XZ PROC		; C_Squadron::GetOwner, COMDAT
; _this$ = ecx

; 52   : 		TREELIST *GetOwner() { return(Owner_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+188]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@C_Squadron@@QAEPAVTREELIST@@XZ ENDP		; C_Squadron::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\csquad.h
;	COMDAT ?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_limb$ = 8						; size = 4
?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z PROC		; C_Squadron::SetOwner, COMDAT
; _this$ = ecx

; 51   : 		void SetOwner(TREELIST *limb) { Owner_=limb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limb$[ebp]
	mov	DWORD PTR [eax+188], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_Squadron@@QAEXPAVTREELIST@@@Z ENDP		; C_Squadron::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ PROC			; C_Entity::GetVUID, COMDAT
; _this$ = ecx

; 86   : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	mov	edx, DWORD PTR [eax+180]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ ENDP			; C_Entity::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetVUID@C_Entity@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Entity@@QAEXVVU_ID@@@Z PROC			; C_Entity::SetVUID, COMDAT
; _this$ = ecx

; 85   : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+176], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+180], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Entity@@QAEXVVU_ID@@@Z ENDP			; C_Entity::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetOperational@C_Entity@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOperational@C_Entity@@QAEEXZ PROC			; C_Entity::GetOperational, COMDAT
; _this$ = ecx

; 67   : 		uchar GetOperational()							{ return(Operational_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+110]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOperational@C_Entity@@QAEEXZ ENDP			; C_Entity::GetOperational
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetOperational@C_Entity@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 1
?SetOperational@C_Entity@@QAEXE@Z PROC			; C_Entity::SetOperational, COMDAT
; _this$ = ecx

; 66   : 		void SetOperational(uchar s)					{ Operational_=s; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _s$[ebp]
	mov	BYTE PTR [eax+110], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOperational@C_Entity@@QAEXE@Z ENDP			; C_Entity::SetOperational
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetInfoBgColor@C_Entity@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Off$ = 8						; size = 4
_On$ = 12						; size = 4
?SetInfoBgColor@C_Entity@@QAEXKK@Z PROC			; C_Entity::SetInfoBgColor, COMDAT
; _this$ = ecx

; 61   : 		void SetInfoBgColor(COLORREF Off,COLORREF On)	{ InfoBgColor_[0]=Off; InfoBgColor_[1]=On; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [ecx+eax+120], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _On$[ebp]
	mov	DWORD PTR [ecx+eax+120], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetInfoBgColor@C_Entity@@QAEXKK@Z ENDP			; C_Entity::SetInfoBgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetIconBgColor@C_Entity@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Off$ = 8						; size = 4
_On$ = 12						; size = 4
?SetIconBgColor@C_Entity@@QAEXKK@Z PROC			; C_Entity::SetIconBgColor, COMDAT
; _this$ = ecx

; 60   : 		void SetIconBgColor(COLORREF Off,COLORREF On)	{ IconBgColor_[0]=Off; IconBgColor_[1]=On; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [ecx+eax+112], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _On$[ebp]
	mov	DWORD PTR [ecx+eax+112], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetIconBgColor@C_Entity@@QAEXKK@Z ENDP			; C_Entity::SetIconBgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetStatus@C_Entity@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetStatus@C_Entity@@QAEXFFPAD@Z PROC			; C_Entity::SetStatus, COMDAT
; _this$ = ecx

; 54   : 		void SetStatus(short x,short y,_TCHAR *str)			{ if(Status_) { Status_->SetXY(x,y); Status_->SetText(str); Status_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN2@SetStatus
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+168]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetStatus:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetStatus@C_Entity@@QAEXFFPAD@Z ENDP			; C_Entity::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetName@C_Entity@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetName@C_Entity@@QAEXFFPAD@Z PROC			; C_Entity::SetName, COMDAT
; _this$ = ecx

; 53   : 		void SetName(short x,short y,_TCHAR *str)			{ if(Name_) { Name_->SetXY(x,y); Name_->SetText(str); Name_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+164], 0
	je	SHORT $LN2@SetName
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+164]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetName:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetName@C_Entity@@QAEXFFPAD@Z ENDP			; C_Entity::SetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_Image$ = 16						; size = 4
?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z PROC		; C_Entity::SetIcon, COMDAT
; _this$ = ecx

; 52   : 		void SetIcon(short x,short y,IMAGE_RSC *Image)		{ if(Icon_) { Icon_->SetXY(x,y); Icon_->SetImage(Image); Icon_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 0
	je	SHORT $LN2@SetIcon
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _Image$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	call	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z ; O_Output::SetImage
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetIcon:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ENDP		; C_Entity::SetIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetIcon@C_Entity@@QAEXFFJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_ImageID$ = 16						; size = 4
?SetIcon@C_Entity@@QAEXFFJ@Z PROC			; C_Entity::SetIcon, COMDAT
; _this$ = ecx

; 51   : 		void SetIcon(short x,short y,long ImageID)			{ if(Icon_) { Icon_->SetXY(x,y); Icon_->SetImage(ImageID); Icon_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 0
	je	SHORT $LN2@SetIcon
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	call	?SetImage@O_Output@@QAEXJ@Z		; O_Output::SetImage
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetIcon:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIcon@C_Entity@@QAEXFFJ@Z ENDP			; C_Entity::SetIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetInfoBg@C_Entity@@QAEXFFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_w$ = 16						; size = 2
_h$ = 20						; size = 2
?SetInfoBg@C_Entity@@QAEXFFFF@Z PROC			; C_Entity::SetInfoBg, COMDAT
; _this$ = ecx

; 49   : 		void SetInfoBg(short x,short y,short w,short h)			{ InfoBg_.left=x; InfoBg_.top=y; InfoBg_.right=w; InfoBg_.bottom=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+144], eax
	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], edx
	movsx	ecx, WORD PTR _w$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx
	movsx	eax, WORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+156], eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetInfoBg@C_Entity@@QAEXFFFF@Z ENDP			; C_Entity::SetInfoBg
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetIconBg@C_Entity@@QAEXFFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_w$ = 16						; size = 2
_h$ = 20						; size = 2
?SetIconBg@C_Entity@@QAEXFFFF@Z PROC			; C_Entity::SetIconBg, COMDAT
; _this$ = ecx

; 48   : 		void SetIconBg(short x,short y,short w,short h)			{ IconBg_.left=x; IconBg_.top=y; IconBg_.right=w; IconBg_.bottom=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], edx
	movsx	ecx, WORD PTR _w$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+136], ecx
	movsx	eax, WORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+140], eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetIconBg@C_Entity@@QAEXFFFF@Z ENDP			; C_Entity::SetIconBg
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ PROC		; C_Entity::GetOwner, COMDAT
; _this$ = ecx

; 46   : 		TREELIST *GetOwner()							{ return(Owner_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+172]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ ENDP		; C_Entity::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_limb$ = 8						; size = 4
?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z PROC		; C_Entity::SetOwner, COMDAT
; _this$ = ecx

; 45   : 		void SetOwner(TREELIST *limb)					{ Owner_=limb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limb$[ebp]
	mov	DWORD PTR [eax+172], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z ENDP		; C_Entity::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetParent@C_Base@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@C_Base@@QAEPAVC_Window@@XZ PROC		; C_Base::GetParent, COMDAT
; _this$ = ecx

; 149  : 		C_Window *GetParent()		{ return(Parent_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParent@C_Base@@QAEPAVC_Window@@XZ ENDP		; C_Base::GetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?_GetCType_@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_GetCType_@C_Base@@QAEFXZ PROC				; C_Base::_GetCType_, COMDAT
; _this$ = ecx

; 136  : 		short _GetCType_()			{ return(_CType_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?_GetCType_@C_Base@@QAEFXZ ENDP				; C_Base::_GetCType_
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetXY@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@O_Output@@QAEXJJ@Z PROC				; O_Output::SetXY, COMDAT
; _this$ = ecx

; 118  : 		void SetXY(long x,long y)				{ origx_ = x; origy_ = y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?GetObjectiveStatus@ObjectiveClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ PROC		; ObjectiveClass::GetObjectiveStatus, COMDAT
; _this$ = ecx

; 270  : 	uchar GetObjectiveStatus (void)							{	return obj_data.status; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+199]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ENDP		; ObjectiveClass::GetObjectiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetColor@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColor@TeamClass@@QAEHXZ PROC			; TeamClass::GetColor, COMDAT
; _this$ = ecx

; 329  : 	int GetColor (void)							{ return (int) teamColor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+889]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColor@TeamClass@@QAEHXZ ENDP			; TeamClass::GetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetFlag@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlag@TeamClass@@QAEHXZ PROC				; TeamClass::GetFlag, COMDAT
; _this$ = ecx

; 327  : 	int GetFlag (void)							{ return (int) teamFlag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+888]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlag@TeamClass@@QAEHXZ ENDP				; TeamClass::GetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
