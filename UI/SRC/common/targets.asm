; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\common\targets.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetHazeMode@RenderOTW@@QAEXH@Z			; RenderOTW::SetHazeMode
PUBLIC	?SetDitheringMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetDitheringMode
PUBLIC	?SetFilteringMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetFilteringMode
PUBLIC	?GetPosition@DrawableObject@@QAEXPAUTpoint@@@Z	; DrawableObject::GetPosition
PUBLIC	?SetTextureSet@DrawableBSP@@QAEXK@Z		; DrawableBSP::SetTextureSet
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?ZPos@VuEntity@@QBEMXZ				; VuEntity::ZPos
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	?GetColor@TeamClass@@QAEHXZ			; TeamClass::GetColor
PUBLIC	?GetType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetType
PUBLIC	?GetIdentified@CampBaseClass@@QAEHE@Z		; CampBaseClass::GetIdentified
PUBLIC	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetObjectiveStatus
PUBLIC	??0SimInitDataClass@@QAE@XZ			; SimInitDataClass::SimInitDataClass
PUBLIC	?GetNumVehicles@UnitClass@@QAEHH@Z		; UnitClass::GetNumVehicles
PUBLIC	?IsHardware@DisplayDevice@@QAEHXZ		; DisplayDevice::IsHardware
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	?SetXY@O_Output@@QAEXJJ@Z			; O_Output::SetXY
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z		; C_Entity::SetOwner
PUBLIC	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ		; C_Entity::GetOwner
PUBLIC	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z	; C_Entity::SetIcon
PUBLIC	?SetName@C_Entity@@QAEXFFPAD@Z			; C_Entity::SetName
PUBLIC	?SetStatus@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetStatus
PUBLIC	?SetOperational@C_Entity@@QAEXE@Z		; C_Entity::SetOperational
PUBLIC	?GetOperational@C_Entity@@QAEEXZ		; C_Entity::GetOperational
PUBLIC	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z		; C_Entity::SetVUID
PUBLIC	?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ		; C_Entity::GetVUID
PUBLIC	?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z	; C_Feature::SetOwner
PUBLIC	?SetName@C_Feature@@QAEXFFPAD@Z			; C_Feature::SetName
PUBLIC	?SetStatus@C_Feature@@QAEXFFJ@Z			; C_Feature::SetStatus
PUBLIC	?SetValue@C_Feature@@QAEXFFJ@Z			; C_Feature::SetValue
PUBLIC	?SetColor@C_Feature@@QAEXKK@Z			; C_Feature::SetColor
PUBLIC	?SetFeatureValue@C_Feature@@QAEXE@Z		; C_Feature::SetFeatureValue
PUBLIC	?SetVUID@C_Feature@@QAEXVVU_ID@@@Z		; C_Feature::SetVUID
PUBLIC	?SetFeatureID@C_Feature@@QAEXJ@Z		; C_Feature::SetFeatureID
PUBLIC	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ	; GlobalPositioningSystem::GetTeamNo
PUBLIC	??0C_3dViewer@@QAE@XZ				; C_3dViewer::C_3dViewer
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ	; C_3dViewer::GetRendOTW
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	?HazingOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::HazingOn
PUBLIC	?FilteringOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::FilteringOn
PUBLIC	?ObjectDetailLevel@PlayerOptionsClass@@QAEMXZ	; PlayerOptionsClass::ObjectDetailLevel
PUBLIC	?PickFirstChildCB@@YAXJFPAVC_Base@@@Z		; PickFirstChildCB
PUBLIC	?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ; BuildObjective
PUBLIC	?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z ; BuildFeature
PUBLIC	?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z ; BuildUnitParent
PUBLIC	?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z ; BuildUnit
PUBLIC	?AddUnitToTargetTree@@YAXPAVUnitClass@@@Z	; AddUnitToTargetTree
PUBLIC	?AddObjectiveToTargetTree@@YAXPAVObjectiveClass@@@Z ; AddObjectiveToTargetTree
PUBLIC	?GetGroundUnitsNear@@YAXMMM@Z			; GetGroundUnitsNear
PUBLIC	?GetObjectivesNear@@YAXMMM@Z			; GetObjectivesNear
PUBLIC	?ReconArea@@YAXMMM@Z				; ReconArea
PUBLIC	?BuildTargetList@@YAXMMM@Z			; BuildTargetList
PUBLIC	?BuildSpecificTargetList@@YAXVVU_ID@@@Z		; BuildSpecificTargetList
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_06OMLMHNAL@Bandit?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@40a00000
PUBLIC	__real@41f00000
PUBLIC	__real@428c0000
PUBLIC	__real@42b40000
PUBLIC	__real@43160000
PUBLIC	__real@437a0000
PUBLIC	__real@44160000
PUBLIC	__real@44480000
PUBLIC	__real@447a0000
PUBLIC	__real@457a0000
PUBLIC	__real@46ea6000
PUBLIC	__real@47001fcd
PUBLIC	__real@bf800000
PUBLIC	__real@c57a0000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_sprintf:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SetObjectDetail@Render3D@@QAEXM@Z:PROC		; Render3D::SetObjectDetail
EXTRN	?SetObjectTextureState@Render3D@@QAEXH@Z:PROC	; Render3D::SetObjectTextureState
EXTRN	?SetupStates@RenderOTW@@IAEXXZ:PROC		; RenderOTW::SetupStates
EXTRN	?SetTextureSet@ObjectInstance@@QAEXH@Z:PROC	; ObjectInstance::SetTextureSet
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z:PROC ; GetVehicleClassData
EXTRN	?GetSpotted@CampBaseClass@@QAEHE@Z:PROC		; CampBaseClass::GetSpotted
EXTRN	?GetRunwayTexture@ATCBrain@@QAEHH@Z:PROC	; ATCBrain::GetRunwayTexture
EXTRN	?GetFeatureStatus@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureStatus
EXTRN	?GetFeatureValue@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureValue
EXTRN	?GetFeatureID@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureID
EXTRN	?GetFeatureOffset@ObjectiveClass@@QAEHHPAM00@Z:PROC ; ObjectiveClass::GetFeatureOffset
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z:PROC ; GetFirstObjective
EXTRN	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z:PROC ; GetNextObjective
EXTRN	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z:PROC ; GetFeatureClassData
EXTRN	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ:PROC ; UnitClass::GetUnitClassData
EXTRN	?GetVehicleID@UnitClass@@QAEFH@Z:PROC		; UnitClass::GetVehicleID
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetFullstrengthVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetFullstrengthVehicles
EXTRN	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetFirstUnit
EXTRN	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetNextUnit
EXTRN	?WaitLoader@Loader@@QAEXXZ:PROC			; Loader::WaitLoader
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?SetInfo@O_Output@@QAEXXZ:PROC			; O_Output::SetInfo
EXTRN	?SetText@O_Output@@QAEXPAD@Z:PROC		; O_Output::SetText
EXTRN	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z:PROC	; O_Output::SetImage
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC ; C_TreeList::AddChildItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?ScanClientAreas@C_Window@@QAEXXZ:PROC		; C_Window::ScanClientAreas
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0C_Entity@@QAE@XZ:PROC			; C_Entity::C_Entity
EXTRN	?Setup@C_Entity@@QAEXJF@Z:PROC			; C_Entity::Setup
EXTRN	?InitEntity@C_Entity@@QAEXXZ:PROC		; C_Entity::InitEntity
EXTRN	??0C_Feature@@QAE@XZ:PROC			; C_Feature::C_Feature
EXTRN	?Setup@C_Feature@@QAEXJF@Z:PROC			; C_Feature::Setup
EXTRN	?InitEntity@C_Feature@@QAEXXZ:PROC		; C_Feature::InitEntity
EXTRN	?Setup@C_3dViewer@@QAEHXZ:PROC			; C_3dViewer::Setup
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z:PROC	; C_3dViewer::Viewport
EXTRN	?SetPosition@C_3dViewer@@QAEXMMM@Z:PROC		; C_3dViewer::SetPosition
EXTRN	?InitOTW@C_3dViewer@@QAEHMH@Z:PROC		; C_3dViewer::InitOTW
EXTRN	?LoadDrawableFeature@C_3dViewer@@QAEPAUUI_BSPList@@JPAVObjectiveClass@@FFPAUFalcon4EntityClassType@@PAUFeatureClassDataType@@PAUTpoint@@PAU2@@Z:PROC ; C_3dViewer::LoadDrawableFeature
EXTRN	?LoadDrawableUnit@C_3dViewer@@QAEPAUUI_BSPList@@JJPAUTpoint@@MEEE@Z:PROC ; C_3dViewer::LoadDrawableUnit
EXTRN	?AddAllToView@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::AddAllToView
EXTRN	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z:PROC	; CenterOnFeatureCB
EXTRN	?SetBullsEye@@YAXPAVC_Window@@@Z:PROC		; SetBullsEye
EXTRN	?SetSlantRange@@YAXPAVC_Window@@@Z:PROC		; SetSlantRange
EXTRN	?SetHeading@@YAXPAVC_Window@@@Z:PROC		; SetHeading
EXTRN	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z:PROC ; PositionCamera
EXTRN	?CloseAllRenderers@@YAXJ@Z:PROC			; CloseAllRenderers
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?IMatrix@@3UTrotation@@B:BYTE			; IMatrix
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?AllRealList@@3PAVVuLinkedList@@A:DWORD		; AllRealList
EXTRN	?AllObjList@@3PAVVuLinkedList@@A:DWORD		; AllObjList
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?TheLoader@@3VLoader@@A:BYTE			; TheLoader
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?gUIViewer@@3PAVC_3dViewer@@A:DWORD		; gUIViewer
EXTRN	?TeamColorIconIDs@@3PAY01JA:BYTE		; TeamColorIconIDs
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?TargetTree@@3PAVC_TreeList@@A:DWORD		; TargetTree
EXTRN	?Recon@@3UOBJECTINFO@@A:BYTE			; Recon
EXTRN	?gGps@@3PAVGlobalPositioningSystem@@A:DWORD	; gGps
EXTRN	?FeatureID@@3VVU_ID@@A:QWORD			; FeatureID
EXTRN	?FeatureNo@@3JA:DWORD				; FeatureNo
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c57a0000
CONST	SEGMENT
__real@c57a0000 DD 0c57a0000r			; -4000
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@47001fcd
CONST	SEGMENT
__real@47001fcd DD 047001fcdr			; 32799.8
CONST	ENDS
;	COMDAT __real@46ea6000
CONST	SEGMENT
__real@46ea6000 DD 046ea6000r			; 30000
CONST	ENDS
;	COMDAT __real@457a0000
CONST	SEGMENT
__real@457a0000 DD 0457a0000r			; 4000
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@428c0000
CONST	SEGMENT
__real@428c0000 DD 0428c0000r			; 70
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06OMLMHNAL@Bandit?$AA@
CONST	SEGMENT
??_C@_06OMLMHNAL@Bandit?$AA@ DB 'Bandit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
CONST	SEGMENT
??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@ DB '%1d%% %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?BuildSpecificTargetList@@YAXVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildSpecificTargetList@@YAXVVU_ID@@@Z$0
__unwindtable$?BuildTargetList@@YAXMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildTargetList@@YAXMMM@Z$0
__unwindtable$?ReconArea@@YAXMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReconArea@@YAXMMM@Z$0
__unwindtable$?GetObjectivesNear@@YAXMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetObjectivesNear@@YAXMMM@Z$0
__unwindtable$?GetGroundUnitsNear@@YAXMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGroundUnitsNear@@YAXMMM@Z$0
__unwindtable$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z$0
__unwindtable$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z$0
__unwindtable$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z$0
__unwindtable$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z$0
__ehfuncinfo$?BuildSpecificTargetList@@YAXVVU_ID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildSpecificTargetList@@YAXVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildTargetList@@YAXMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildTargetList@@YAXMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ReconArea@@YAXMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReconArea@@YAXMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetObjectivesNear@@YAXMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetObjectivesNear@@YAXMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetGroundUnitsNear@@YAXMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGroundUnitsNear@@YAXMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -52						; size = 4
tv88 = -48						; size = 4
$T3 = -44						; size = 4
_item$ = -40						; size = 4
tv128 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
_parent$ = -24						; size = 4
_ent$ = -20						; size = 4
_win$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_targetID$ = 8						; size = 8
?BuildSpecificTargetList@@YAXVVU_ID@@@Z PROC		; BuildSpecificTargetList

; 720  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildSpecificTargetList@@YAXVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 721  : 	C_Window *win;
; 722  : 	CampEntity ent;
; 723  : 	TREELIST *parent,*item;
; 724  : 
; 725  : 	ent=(CampEntity)vuDatabase->Find(targetID);

	mov	eax, DWORD PTR _targetID$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 726  : 	if(!ent)

	cmp	DWORD PTR _ent$[ebp], 0
	jne	SHORT $LN14@BuildSpeci

; 727  : 		return;

	jmp	$LN15@BuildSpeci
$LN14@BuildSpeci:

; 728  : 
; 729  : 	win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 730  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@BuildSpeci

; 731  : 	{
; 732  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 733  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN12@BuildSpeci

; 734  : 			TargetTree->DeleteBranch(TargetTree->GetRoot());

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN12@BuildSpeci:

; 735  : 
; 736  : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN18@BuildSpeci

; 737  : 		{
; 738  : 			gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 739  : 			delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN17@BuildSpeci
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN18@BuildSpeci
$LN17@BuildSpeci:
	mov	DWORD PTR tv88[ebp], 0
$LN18@BuildSpeci:

; 740  : 		}
; 741  : 
; 742  : 		gUIViewer=new C_3dViewer;

	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN19@BuildSpeci
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_3dViewer@@QAE@XZ			; C_3dViewer::C_3dViewer
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN20@BuildSpeci
$LN19@BuildSpeci:
	mov	DWORD PTR tv128[ebp], 0
$LN20@BuildSpeci:
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, edx ; gUIViewer

; 743  : 		gUIViewer->Setup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Setup@C_3dViewer@@QAEHXZ		; C_3dViewer::Setup

; 744  : 		gUIViewer->Viewport(win,0); // use client 0 for this window

	push	0
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 745  : 
; 746  : 		Recon.Heading=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0

; 747  : 		Recon.Pitch=70.0f;

	movss	xmm0, DWORD PTR __real@428c0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0

; 748  : 		Recon.Distance=1000.0f;

	movss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0

; 749  : 		Recon.Direction=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 750  : 
; 751  : 		Recon.MinDistance=150.0f;

	movss	xmm0, DWORD PTR __real@43160000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+40, xmm0

; 752  : 		Recon.MaxDistance=30000.0f;

	movss	xmm0, DWORD PTR __real@46ea6000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+44, xmm0

; 753  : 		Recon.MinPitch=5;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+52, xmm0

; 754  : 		Recon.MaxPitch=90;

	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+56, xmm0

; 755  : 		Recon.CheckPitch=TRUE;

	mov	DWORD PTR ?Recon@@3UOBJECTINFO@@A+48, 1

; 756  : 
; 757  : 		if(ent->IsObjective())

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN10@BuildSpeci

; 758  : 			AddObjectiveToTargetTree((Objective)ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	call	?AddObjectiveToTargetTree@@YAXPAVObjectiveClass@@@Z ; AddObjectiveToTargetTree
	add	esp, 4
$LN10@BuildSpeci:

; 759  : 		if(ent->IsUnit())

	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN9@BuildSpeci

; 760  : 			AddUnitToTargetTree((Unit)ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	call	?AddUnitToTargetTree@@YAXPAVUnitClass@@@Z ; AddUnitToTargetTree
	add	esp, 4
$LN9@BuildSpeci:

; 761  : 
; 762  : 		Recon.PosX=ent->XPos();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR ?Recon@@3UOBJECTINFO@@A+16

; 763  : 		Recon.PosY=ent->YPos();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR ?Recon@@3UOBJECTINFO@@A+20

; 764  : 		Recon.PosZ=-4000;

	movss	xmm0, DWORD PTR __real@c57a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+24, xmm0

; 765  : 
; 766  : 		SetBullsEye(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetBullsEye@@YAXPAVC_Window@@@Z	; SetBullsEye
	add	esp, 4

; 767  : 		SetSlantRange(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SetSlantRange@@YAXPAVC_Window@@@Z	; SetSlantRange
	add	esp, 4

; 768  : 		SetHeading(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?SetHeading@@YAXPAVC_Window@@@Z		; SetHeading

; 769  : 
; 770  : 		gUIViewer->SetPosition(Recon.PosX,Recon.PosY,Recon.PosZ);

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+24
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+20
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+16
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?SetPosition@C_3dViewer@@QAEXMMM@Z	; C_3dViewer::SetPosition

; 771  : 		gUIViewer->InitOTW(30.0f,FALSE);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?InitOTW@C_3dViewer@@QAEHMH@Z		; C_3dViewer::InitOTW

; 772  : 		gUIViewer->AddAllToView();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?AddAllToView@C_3dViewer@@QAEHXZ	; C_3dViewer::AddAllToView

; 773  : 
; 774  : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 775  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 776  : 
; 777  : 		PositionCamera(&Recon,win,0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN13@BuildSpeci:

; 778  : 	}
; 779  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 780  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN8@BuildSpeci

; 781  : 	{
; 782  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN7@BuildSpeci

; 783  : 			TargetTree->RecalcSize();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize
$LN7@BuildSpeci:

; 784  : 		gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 785  : 		gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN8@BuildSpeci:

; 786  : 	}
; 787  : 	if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN1@BuildSpeci

; 788  : 	{
; 789  : 		parent=TargetTree->GetRoot();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _parent$[ebp], eax

; 790  : 		if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN1@BuildSpeci

; 791  : 		{
; 792  : 			if(parent->Type_ == C_TYPE_MENU)

	mov	ecx, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [ecx+4], 49			; 00000031H
	jne	SHORT $LN4@BuildSpeci

; 793  : 			{
; 794  : 				item=parent->Child;

	mov	edx, DWORD PTR _parent$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _item$[ebp], eax

; 795  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN3@BuildSpeci

; 796  : 					CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,item->Item_);

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN3@BuildSpeci:

; 797  : 			}

	jmp	SHORT $LN1@BuildSpeci
$LN4@BuildSpeci:

; 798  : 			else if(parent->Type_ == C_TYPE_ITEM)

	mov	eax, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [eax+4], 50			; 00000032H
	jne	SHORT $LN1@BuildSpeci

; 799  : 				CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,parent->Item_);

	mov	ecx, DWORD PTR _parent$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN1@BuildSpeci:
$LN15@BuildSpeci:

; 800  : 		}
; 801  : 	}
; 802  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildSpecificTargetList@@YAXVVU_ID@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildSpecificTargetList@@YAXVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildSpecificTargetList@@YAXVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildSpecificTargetList@@YAXVVU_ID@@@Z ENDP		; BuildSpecificTargetList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 4
tv80 = -44						; size = 4
$T3 = -40						; size = 4
_item$ = -36						; size = 4
tv88 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
_parent$ = -20						; size = 4
_win$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_range$ = 16						; size = 4
?BuildTargetList@@YAXMMM@Z PROC				; BuildTargetList

; 642  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildTargetList@@YAXMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 643  : 	TREELIST *parent,*item;
; 644  : 	C_Window *win;
; 645  : 
; 646  : 	win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 647  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN11@BuildTarge

; 648  : 	{
; 649  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 650  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN10@BuildTarge

; 651  : 			TargetTree->DeleteBranch(TargetTree->GetRoot());

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN10@BuildTarge:

; 652  : 
; 653  : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN15@BuildTarge

; 654  : 		{
; 655  : 			gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 656  : 			delete gUIViewer;

	mov	eax, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN14@BuildTarge
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN15@BuildTarge
$LN14@BuildTarge:
	mov	DWORD PTR tv80[ebp], 0
$LN15@BuildTarge:

; 657  : 		}
; 658  : 
; 659  : 		gUIViewer=new C_3dViewer;

	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN16@BuildTarge
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_3dViewer@@QAE@XZ			; C_3dViewer::C_3dViewer
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN17@BuildTarge
$LN16@BuildTarge:
	mov	DWORD PTR tv88[ebp], 0
$LN17@BuildTarge:
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, eax ; gUIViewer

; 660  : 		gUIViewer->Setup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Setup@C_3dViewer@@QAEHXZ		; C_3dViewer::Setup

; 661  : 		gUIViewer->Viewport(win,0); // use client 0 for this window

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 662  : 
; 663  : 		Recon.Heading=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0

; 664  : 		Recon.Pitch=70.0f;

	movss	xmm0, DWORD PTR __real@428c0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0

; 665  : 		Recon.Distance=1000.0f;

	movss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0

; 666  : 		Recon.Direction=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 667  : 
; 668  : 		Recon.MinDistance=250.0f;

	movss	xmm0, DWORD PTR __real@437a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+40, xmm0

; 669  : 		Recon.MaxDistance=30000.0f;

	movss	xmm0, DWORD PTR __real@46ea6000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+44, xmm0

; 670  : 		Recon.MinPitch=5;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+52, xmm0

; 671  : 		Recon.MaxPitch=90;

	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+56, xmm0

; 672  : 		Recon.CheckPitch=TRUE;

	mov	DWORD PTR ?Recon@@3UOBJECTINFO@@A+48, 1

; 673  : 
; 674  : 		Recon.PosX=x;

	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+16, xmm0

; 675  : 		Recon.PosY=y;

	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+20, xmm0

; 676  : 		Recon.PosZ=-4000;

	movss	xmm0, DWORD PTR __real@c57a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+24, xmm0

; 677  : 
; 678  : 		GetObjectivesNear(x,y,range);

	push	ecx
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetObjectivesNear@@YAXMMM@Z		; GetObjectivesNear

; 679  : 		GetGroundUnitsNear(x,y,range);

	add	esp, 8
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetGroundUnitsNear@@YAXMMM@Z		; GetGroundUnitsNear
	add	esp, 12					; 0000000cH

; 680  : 
; 681  : 		SetBullsEye(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SetBullsEye@@YAXPAVC_Window@@@Z	; SetBullsEye
	add	esp, 4

; 682  : 		SetSlantRange(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?SetSlantRange@@YAXPAVC_Window@@@Z	; SetSlantRange
	add	esp, 4

; 683  : 		SetHeading(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetHeading@@YAXPAVC_Window@@@Z		; SetHeading

; 684  : 
; 685  : 		gUIViewer->SetPosition(Recon.PosX,Recon.PosY,Recon.PosZ);

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+24
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+20
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+16
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?SetPosition@C_3dViewer@@QAEXMMM@Z	; C_3dViewer::SetPosition

; 686  : 		gUIViewer->InitOTW(30.0f,FALSE);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?InitOTW@C_3dViewer@@QAEHMH@Z		; C_3dViewer::InitOTW

; 687  : 		gUIViewer->AddAllToView();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?AddAllToView@C_3dViewer@@QAEHXZ	; C_3dViewer::AddAllToView

; 688  : 
; 689  : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 690  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 691  : 
; 692  : 		PositionCamera(&Recon,win,0);

	push	0
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN11@BuildTarge:

; 693  : 	}
; 694  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 695  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN8@BuildTarge

; 696  : 	{
; 697  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN7@BuildTarge

; 698  : 			TargetTree->RecalcSize();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize
$LN7@BuildTarge:

; 699  : 		gMainHandler->ShowWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 700  : 		gMainHandler->WindowToFront(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN8@BuildTarge:

; 701  : 	}
; 702  : 	if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN1@BuildTarge

; 703  : 	{
; 704  : 		parent=TargetTree->GetRoot();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _parent$[ebp], eax

; 705  : 		if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN1@BuildTarge

; 706  : 		{
; 707  : 			if(parent->Type_ == C_TYPE_MENU)

	mov	edx, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [edx+4], 49			; 00000031H
	jne	SHORT $LN4@BuildTarge

; 708  : 			{
; 709  : 				item=parent->Child;

	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _item$[ebp], ecx

; 710  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN3@BuildTarge

; 711  : 					CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,item->Item_);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN3@BuildTarge:

; 712  : 			}

	jmp	SHORT $LN1@BuildTarge
$LN4@BuildTarge:

; 713  : 			else if(parent->Type_ == C_TYPE_ITEM)

	mov	ecx, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [ecx+4], 50			; 00000032H
	jne	SHORT $LN1@BuildTarge

; 714  : 				CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,parent->Item_);

	mov	edx, DWORD PTR _parent$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN1@BuildTarge:

; 715  : 		}
; 716  : 	}
; 717  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildTargetList@@YAXMMM@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildTargetList@@YAXMMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildTargetList@@YAXMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildTargetList@@YAXMMM@Z ENDP				; BuildTargetList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 4
tv83 = -44						; size = 4
$T3 = -40						; size = 4
_item$ = -36						; size = 4
tv91 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
_parent$ = -20						; size = 4
_win$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_range$ = 16						; size = 4
?ReconArea@@YAXMMM@Z PROC				; ReconArea

; 528  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReconArea@@YAXMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 529  : 	C_Window *win;
; 530  : 	TREELIST *parent,*item;
; 531  : 
; 532  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 533  : 	win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 534  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@ReconArea

; 535  : 	{
; 536  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 537  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN13@ReconArea

; 538  : 			TargetTree->DeleteBranch(TargetTree->GetRoot());

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN13@ReconArea:

; 539  : 
; 540  : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN18@ReconArea

; 541  : 		{
; 542  : 			gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 543  : 			delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN17@ReconArea
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN18@ReconArea
$LN17@ReconArea:
	mov	DWORD PTR tv83[ebp], 0
$LN18@ReconArea:

; 544  : 		}
; 545  : 
; 546  : 		gUIViewer=new C_3dViewer;

	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN19@ReconArea
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_3dViewer@@QAE@XZ			; C_3dViewer::C_3dViewer
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN20@ReconArea
$LN19@ReconArea:
	mov	DWORD PTR tv91[ebp], 0
$LN20@ReconArea:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, edx ; gUIViewer

; 547  : 		gUIViewer->Setup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Setup@C_3dViewer@@QAEHXZ		; C_3dViewer::Setup

; 548  : 		gUIViewer->Viewport(win,0); // use client 0 for this window

	push	0
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 549  : 
; 550  : 		Recon.Heading=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0

; 551  : 		Recon.Pitch=70.0f;

	movss	xmm0, DWORD PTR __real@428c0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0

; 552  : 		Recon.Distance=4000.0f;

	movss	xmm0, DWORD PTR __real@457a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0

; 553  : 		Recon.Direction=0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 554  : 
; 555  : 		Recon.MinDistance=250.0f;

	movss	xmm0, DWORD PTR __real@437a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+40, xmm0

; 556  : 		Recon.MaxDistance=30000.0f;

	movss	xmm0, DWORD PTR __real@46ea6000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+44, xmm0

; 557  : 		Recon.MinPitch=5;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+52, xmm0

; 558  : 		Recon.MaxPitch=90;

	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+56, xmm0

; 559  : 		Recon.CheckPitch=TRUE;

	mov	DWORD PTR ?Recon@@3UOBJECTINFO@@A+48, 1

; 560  : 
; 561  : 		Recon.PosX=x;

	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+16, xmm0

; 562  : 		Recon.PosY=y;

	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+20, xmm0

; 563  : 		Recon.PosZ=-4000;

	movss	xmm0, DWORD PTR __real@c57a0000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+24, xmm0

; 564  : 
; 565  : 		GetObjectivesNear(x,y,range);

	push	ecx
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetObjectivesNear@@YAXMMM@Z		; GetObjectivesNear

; 566  : 		GetGroundUnitsNear(x,y,range);

	add	esp, 8
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetGroundUnitsNear@@YAXMMM@Z		; GetGroundUnitsNear
	add	esp, 12					; 0000000cH

; 567  : 
; 568  : 		SetBullsEye(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetBullsEye@@YAXPAVC_Window@@@Z	; SetBullsEye
	add	esp, 4

; 569  : 		SetSlantRange(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SetSlantRange@@YAXPAVC_Window@@@Z	; SetSlantRange
	add	esp, 4

; 570  : 		SetHeading(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?SetHeading@@YAXPAVC_Window@@@Z		; SetHeading

; 571  : 
; 572  : 		gUIViewer->SetPosition(Recon.PosX,Recon.PosY,Recon.PosZ);

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+24
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+20
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+16
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?SetPosition@C_3dViewer@@QAEXMMM@Z	; C_3dViewer::SetPosition

; 573  : 		gUIViewer->InitOTW(30.0f,FALSE);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?InitOTW@C_3dViewer@@QAEHMH@Z		; C_3dViewer::InitOTW

; 574  : 
; 575  : 		// OW
; 576  : 		#if 1
; 577  : 		if(gUIViewer->GetRendOTW())

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	test	eax, eax
	je	$LN11@ReconArea

; 578  : 		{
; 579  : //			gUIViewer->GetRendOTW()->SetTerrainTextureLevel( PlayerOptions.TextureLevel() );
; 580  : 
; 581  : 			gUIViewer->GetRendOTW()->SetDitheringMode( PlayerOptions.HazingOn() );

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?HazingOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::HazingOn
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetDitheringMode@RenderOTW@@QAEXH@Z	; RenderOTW::SetDitheringMode

; 582  : 
; 583  : 			if(FalconDisplay.theDisplayDevice.IsHardware())

	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+132
	call	?IsHardware@DisplayDevice@@QAEHXZ	; DisplayDevice::IsHardware
	test	eax, eax
	je	SHORT $LN10@ReconArea

; 584  : 			{
; 585  : 				gUIViewer->GetRendOTW()->SetFilteringMode( PlayerOptions.FilteringOn() );

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?FilteringOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::FilteringOn
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetFilteringMode@RenderOTW@@QAEXH@Z	; RenderOTW::SetFilteringMode

; 586  : //				gUIViewer->GetRendOTW()->SetAlphaMode(PlayerOptions.AlphaOn());
; 587  : 				gUIViewer->GetRendOTW()->SetHazeMode(PlayerOptions.HazingOn());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?HazingOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::HazingOn
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode

; 588  : //				gUIViewer->GetRendOTW()->SetSmoothShadingMode( PlayerOptions.GouraudOn() );
; 589  : 			}
; 590  : 
; 591  : 			else

	jmp	SHORT $LN9@ReconArea
$LN10@ReconArea:

; 592  : 			{
; 593  : 				gUIViewer->GetRendOTW()->SetFilteringMode(false);

	push	0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetFilteringMode@RenderOTW@@QAEXH@Z	; RenderOTW::SetFilteringMode

; 594  : //				gUIViewer->GetRendOTW()->SetAlphaMode(false);
; 595  : 				gUIViewer->GetRendOTW()->SetHazeMode(false);

	push	0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode
$LN9@ReconArea:

; 596  : //				gUIViewer->GetRendOTW()->SetSmoothShadingMode(false);
; 597  : 			}
; 598  : 
; 599  : 			gUIViewer->GetRendOTW()->SetObjectDetail(PlayerOptions.ObjectDetailLevel() );

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ObjectDetailLevel@PlayerOptionsClass@@QAEMXZ ; PlayerOptionsClass::ObjectDetailLevel
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetObjectDetail@Render3D@@QAEXM@Z	; Render3D::SetObjectDetail

; 600  : 			gUIViewer->GetRendOTW()->SetObjectTextureState(TRUE);//PlayerOptions.ObjectTexturesOn());

	push	1
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	ecx, eax
	call	?SetObjectTextureState@Render3D@@QAEXH@Z ; Render3D::SetObjectTextureState
$LN11@ReconArea:

; 601  : 		}
; 602  : 		#endif
; 603  : 
; 604  : 		gUIViewer->AddAllToView();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?AddAllToView@C_3dViewer@@QAEHXZ	; C_3dViewer::AddAllToView

; 605  : 
; 606  : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 607  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 608  : 
; 609  : 		TheLoader.WaitLoader();

	mov	ecx, OFFSET ?TheLoader@@3VLoader@@A	; TheLoader
	call	?WaitLoader@Loader@@QAEXXZ		; Loader::WaitLoader

; 610  : 		PositionCamera(&Recon,win,0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH

; 611  : 
; 612  : 		gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 613  : 		gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN14@ReconArea:

; 614  : 	}
; 615  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 616  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN8@ReconArea

; 617  : 	{
; 618  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN7@ReconArea

; 619  : 			TargetTree->RecalcSize();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize
$LN7@ReconArea:

; 620  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 621  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN8@ReconArea:

; 622  : 	}
; 623  : 	if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN1@ReconArea

; 624  : 	{
; 625  : 		parent=TargetTree->GetRoot();

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _parent$[ebp], eax

; 626  : 		if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN1@ReconArea

; 627  : 		{
; 628  : 			if(parent->Type_ == C_TYPE_MENU)

	mov	eax, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [eax+4], 49			; 00000031H
	jne	SHORT $LN4@ReconArea

; 629  : 			{
; 630  : 				item=parent->Child;

	mov	ecx, DWORD PTR _parent$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _item$[ebp], edx

; 631  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN3@ReconArea

; 632  : 					CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,item->Item_);

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN3@ReconArea:

; 633  : 			}

	jmp	SHORT $LN1@ReconArea
$LN4@ReconArea:

; 634  : 			else if(parent->Type_ == C_TYPE_ITEM)

	mov	edx, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [edx+4], 50			; 00000032H
	jne	SHORT $LN1@ReconArea

; 635  : 				CenterOnFeatureCB(RECON_TREE,C_TYPE_LMOUSEUP,parent->Item_);

	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	52					; 00000034H
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN1@ReconArea:

; 636  : 		}
; 637  : 	}
; 638  : 	SetCursor(gCursors[CRSR_F16]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 639  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReconArea@@YAXMMM@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?ReconArea@@YAXMMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReconArea@@YAXMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReconArea@@YAXMMM@Z ENDP				; ReconArea
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
_myit$ = -44						; size = 12
tv138 = -32						; size = 4
tv133 = -28						; size = 4
_deltay$ = -24						; size = 4
_deltax$ = -20						; size = 4
_Obj$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_range$ = 16						; size = 4
?GetObjectivesNear@@YAXMMM@Z PROC			; GetObjectivesNear

; 505  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetObjectivesNear@@YAXMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 506  : 	VuListIterator myit(AllObjList);

	mov	eax, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 507  : 	Objective Obj;
; 508  : 	float deltax,deltay;
; 509  : 
; 510  :  	Obj=GetFirstObjective(&myit);

	lea	ecx, DWORD PTR _myit$[ebp]
	push	ecx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _Obj$[ebp], eax
$LN5@GetObjecti:

; 511  : 
; 512  : 	while(Obj != NULL)

	cmp	DWORD PTR _Obj$[ebp], 0
	je	$LN4@GetObjecti

; 513  : 	{
; 514  : 		deltax=x-Obj->XPos();

	mov	ecx, DWORD PTR _Obj$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv133[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	subss	xmm0, DWORD PTR tv133[ebp]
	movss	DWORD PTR _deltax$[ebp], xmm0

; 515  : 		deltay=y-Obj->YPos();

	mov	ecx, DWORD PTR _Obj$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv138[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR tv138[ebp]
	movss	DWORD PTR _deltay$[ebp], xmm0

; 516  : 		if(deltax < 0) deltax=-deltax;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _deltax$[ebp]
	jbe	SHORT $LN3@GetObjecti
	movss	xmm0, DWORD PTR _deltax$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _deltax$[ebp], xmm0
$LN3@GetObjecti:

; 517  : 		if(deltay < 0) deltay=-deltay;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _deltay$[ebp]
	jbe	SHORT $LN2@GetObjecti
	movss	xmm0, DWORD PTR _deltay$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _deltay$[ebp], xmm0
$LN2@GetObjecti:

; 518  : 
; 519  : 		// KCK: I made the following change here. Not sure what was intended
; 520  : //		if(deltax < range & deltay < range)
; 521  : 		if(deltax < range && deltay < range)

	movss	xmm0, DWORD PTR _range$[ebp]
	comiss	xmm0, DWORD PTR _deltax$[ebp]
	jbe	SHORT $LN1@GetObjecti
	movss	xmm0, DWORD PTR _range$[ebp]
	comiss	xmm0, DWORD PTR _deltay$[ebp]
	jbe	SHORT $LN1@GetObjecti

; 522  : 			AddObjectiveToTargetTree(Obj);

	mov	edx, DWORD PTR _Obj$[ebp]
	push	edx
	call	?AddObjectiveToTargetTree@@YAXPAVObjectiveClass@@@Z ; AddObjectiveToTargetTree
	add	esp, 4
$LN1@GetObjecti:

; 523  : 		Obj=GetNextObjective(&myit);

	lea	eax, DWORD PTR _myit$[ebp]
	push	eax
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _Obj$[ebp], eax

; 524  : 	}

	jmp	$LN5@GetObjecti
$LN4@GetObjecti:

; 525  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetObjectivesNear@@YAXMMM@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?GetObjectivesNear@@YAXMMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetObjectivesNear@@YAXMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetObjectivesNear@@YAXMMM@Z ENDP			; GetObjectivesNear
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
_myit$ = -44						; size = 12
tv148 = -32						; size = 4
tv143 = -28						; size = 4
_deltay$ = -24						; size = 4
_deltax$ = -20						; size = 4
_un$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_range$ = 16						; size = 4
?GetGroundUnitsNear@@YAXMMM@Z PROC			; GetGroundUnitsNear

; 482  : void GetGroundUnitsNear(float x,float y,float range){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetGroundUnitsNear@@YAXMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 483  : 	VuListIterator myit(AllRealList);

	mov	eax, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 484  : 	Unit un;
; 485  : 	float deltax,deltay;
; 486  : 
; 487  :  	un=GetFirstUnit(&myit);

	lea	ecx, DWORD PTR _myit$[ebp]
	push	ecx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _un$[ebp], eax
$LN5@GetGroundU:

; 488  : 
; 489  : 	while(un != NULL)

	cmp	DWORD PTR _un$[ebp], 0
	je	$LN4@GetGroundU

; 490  : 	{
; 491  : 		deltax=x-un->XPos();

	mov	ecx, DWORD PTR _un$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv143[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	subss	xmm0, DWORD PTR tv143[ebp]
	movss	DWORD PTR _deltax$[ebp], xmm0

; 492  : 		deltay=y-un->YPos();

	mov	ecx, DWORD PTR _un$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv148[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR tv148[ebp]
	movss	DWORD PTR _deltay$[ebp], xmm0

; 493  : 		if(deltax < 0) deltax=-deltax;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _deltax$[ebp]
	jbe	SHORT $LN3@GetGroundU
	movss	xmm0, DWORD PTR _deltax$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _deltax$[ebp], xmm0
$LN3@GetGroundU:

; 494  : 		if(deltay < 0) deltay=-deltay;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _deltay$[ebp]
	jbe	SHORT $LN2@GetGroundU
	movss	xmm0, DWORD PTR _deltay$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _deltay$[ebp], xmm0
$LN2@GetGroundU:

; 495  : 
; 496  : 		// KCK: I made the following change here. Not sure what was intended
; 497  : //		if((deltax < range & deltay < range) && !un->IsSquadron())
; 498  : 		if(deltax < range && deltay < range && !un->IsSquadron())

	movss	xmm0, DWORD PTR _range$[ebp]
	comiss	xmm0, DWORD PTR _deltax$[ebp]
	jbe	SHORT $LN1@GetGroundU
	movss	xmm0, DWORD PTR _range$[ebp]
	comiss	xmm0, DWORD PTR _deltay$[ebp]
	jbe	SHORT $LN1@GetGroundU
	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx
	test	eax, eax
	jne	SHORT $LN1@GetGroundU

; 499  : 			AddUnitToTargetTree(un);

	mov	eax, DWORD PTR _un$[ebp]
	push	eax
	call	?AddUnitToTargetTree@@YAXPAVUnitClass@@@Z ; AddUnitToTargetTree
	add	esp, 4
$LN1@GetGroundU:

; 500  : 		un=GetNextUnit(&myit);

	lea	ecx, DWORD PTR _myit$[ebp]
	push	ecx
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _un$[ebp], eax

; 501  : 	}

	jmp	$LN5@GetGroundU
$LN4@GetGroundU:

; 502  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetGroundUnitsNear@@YAXMMM@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?GetGroundUnitsNear@@YAXMMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetGroundUnitsNear@@YAXMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGroundUnitsNear@@YAXMMM@Z ENDP			; GetGroundUnitsNear
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
tv349 = -92						; size = 4
_y$ = -88						; size = 4
_texIdx$1 = -84						; size = 4
tv354 = -80						; size = 4
_z$ = -76						; size = 4
_x$ = -72						; size = 4
_oc$ = -68						; size = 4
_Parent$ = -64						; size = 4
_classPtr$ = -60					; size = 4
_item$ = -56						; size = 4
_feat$ = -52						; size = 4
_parent$ = -48						; size = 4
_drawptr$ = -44						; size = 4
_classID$ = -40						; size = 2
_ShowAllFeatures$ = -36					; size = 2
_recon_ent$ = -32					; size = 4
_fc$ = -28						; size = 4
_fid$ = -24						; size = 2
_f$ = -20						; size = 2
_objPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_obj$ = 8						; size = 4
?AddObjectiveToTargetTree@@YAXPAVObjectiveClass@@@Z PROC ; AddObjectiveToTargetTree

; 396  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 397  : 	short					f,fid;
; 398  : 	VehicleID				classID;
; 399  : 	Falcon4EntityClassType* classPtr;
; 400  : 	float					x,y,z;
; 401  : 	FeatureClassDataType*	fc;
; 402  : 	ObjClassDataType*		oc;
; 403  : 	BSPLIST					*drawptr;
; 404  : 	Tpoint					objPos;
; 405  : 	TREELIST				*item,*parent;
; 406  : 	C_Entity				*recon_ent;
; 407  : 	C_Feature				*feat;
; 408  : 	BSPLIST					*Parent;
; 409  : 	short					ShowAllFeatures=0;

	xor	eax, eax
	mov	WORD PTR _ShowAllFeatures$[ebp], ax

; 410  : 
; 411  : 	if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	$LN12@AddObjecti

; 412  : 	{
; 413  : 		recon_ent=BuildObjective(obj);

	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ; BuildObjective
	add	esp, 4
	mov	DWORD PTR _recon_ent$[ebp], eax

; 414  : 		if(recon_ent)

	cmp	DWORD PTR _recon_ent$[ebp], 0
	je	SHORT $LN18@AddObjecti

; 415  : 			recon_ent->SetCallback(PickFirstChildCB);

	push	OFFSET ?PickFirstChildCB@@YAXJFPAVC_Base@@@Z ; PickFirstChildCB
	mov	edx, DWORD PTR _recon_ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _recon_ent$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN18@AddObjecti:

; 416  : 
; 417  : 		parent=TargetTree->CreateItem(obj->GetCampID(),C_TYPE_MENU,recon_ent);

	mov	eax, DWORD PTR _recon_ent$[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _parent$[ebp], eax

; 418  : 		if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN17@AddObjecti

; 419  : 		{
; 420  : 			TargetTree->AddItem(TargetTree->GetRoot(),parent);

	mov	edx, DWORD PTR _parent$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 421  : 			recon_ent->SetOwner(parent);

	mov	eax, DWORD PTR _parent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recon_ent$[ebp]
	call	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z	; C_Entity::SetOwner
$LN17@AddObjecti:

; 422  : 		}
; 423  : 
; 424  : 		Parent=NULL;

	mov	DWORD PTR _Parent$[ebp], 0

; 425  : 		if(obj->GetType() == TYPE_CITY || obj->GetType() == TYPE_TOWN || obj->GetType() == TYPE_VILLAGE)

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 8
	je	SHORT $LN15@AddObjecti
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	edx, al
	cmp	edx, 28					; 0000001cH
	je	SHORT $LN15@AddObjecti
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 29					; 0000001dH
	jne	SHORT $LN16@AddObjecti
$LN15@AddObjecti:

; 426  : 			ShowAllFeatures=1;

	mov	ecx, 1
	mov	WORD PTR _ShowAllFeatures$[ebp], cx
$LN16@AddObjecti:

; 427  : 		oc = obj->GetObjectiveClassData();

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _oc$[ebp], eax

; 428  : 		fid = oc->FirstFeature;

	mov	edx, DWORD PTR _oc$[ebp]
	mov	ax, WORD PTR [edx+52]
	mov	WORD PTR _fid$[ebp], ax

; 429  : 		for (f=0; f<oc->Features; f++,fid++)

	xor	ecx, ecx
	mov	WORD PTR _f$[ebp], cx
	jmp	SHORT $LN14@AddObjecti
$LN13@AddObjecti:
	mov	dx, WORD PTR _f$[ebp]
	add	dx, 1
	mov	WORD PTR _f$[ebp], dx
	mov	ax, WORD PTR _fid$[ebp]
	add	ax, 1
	mov	WORD PTR _fid$[ebp], ax
$LN14@AddObjecti:
	movsx	ecx, WORD PTR _f$[ebp]
	mov	edx, DWORD PTR _oc$[ebp]
	movzx	eax, BYTE PTR [edx+50]
	cmp	ecx, eax
	jge	$LN12@AddObjecti

; 430  : 		{
; 431  : 			classID = static_cast<short>(obj->GetFeatureID(f));

	movsx	ecx, WORD PTR _f$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	WORD PTR _classID$[ebp], ax

; 432  : 			if (classID)

	movsx	edx, WORD PTR _classID$[ebp]
	test	edx, edx
	je	$LN1@AddObjecti

; 433  : 			{
; 434  : 				fc = GetFeatureClassData (classID);

	movsx	eax, WORD PTR _classID$[ebp]
	push	eax
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 435  : 				if (!fc || fc->Flags & FEAT_VIRTUAL)

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN9@AddObjecti
	mov	ecx, DWORD PTR _fc$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	and	edx, 2
	je	SHORT $LN10@AddObjecti
$LN9@AddObjecti:

; 436  : 					continue;

	jmp	SHORT $LN13@AddObjecti
$LN10@AddObjecti:

; 437  : 				obj->GetFeatureOffset(f, &y, &x, &z);

	lea	eax, DWORD PTR _z$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	movsx	eax, WORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureOffset@ObjectiveClass@@QAEHHPAM00@Z ; ObjectiveClass::GetFeatureOffset

; 438  : 				objPos.x=x+obj->XPos();

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv349[ebp]
	movss	xmm0, DWORD PTR tv349[ebp]
	addss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR _objPos$[ebp], xmm0

; 439  : 				objPos.y=y+obj->YPos();

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv354[ebp]
	movss	xmm0, DWORD PTR tv354[ebp]
	addss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _objPos$[ebp+4], xmm0

; 440  : 				objPos.z=z;

	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR _objPos$[ebp+8], xmm0

; 441  : 				classPtr = &Falcon4ClassTable[fc->Index];

	mov	ecx, DWORD PTR _fc$[ebp]
	movsx	edx, WORD PTR [ecx]
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	DWORD PTR _classPtr$[ebp], edx

; 442  : 				if(classPtr != NULL)

	je	$LN1@AddObjecti

; 443  : 				{
; 444  : 					drawptr=gUIViewer->LoadDrawableFeature(obj->GetCampID() << 16 | f,obj,f,fid,classPtr,fc,&objPos,Parent);

	mov	eax, DWORD PTR _Parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fc$[ebp]
	push	edx
	mov	eax, DWORD PTR _classPtr$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fid$[ebp]
	push	ecx
	movzx	edx, WORD PTR _f$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	shl	ecx, 16					; 00000010H
	movsx	edx, WORD PTR _f$[ebp]
	or	ecx, edx
	push	ecx
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?LoadDrawableFeature@C_3dViewer@@QAEPAUUI_BSPList@@JPAVObjectiveClass@@FFPAUFalcon4EntityClassType@@PAUFeatureClassDataType@@PAUTpoint@@PAU2@@Z ; C_3dViewer::LoadDrawableFeature
	mov	DWORD PTR _drawptr$[ebp], eax

; 445  : 					if(drawptr != NULL)

	cmp	DWORD PTR _drawptr$[ebp], 0
	je	$LN1@AddObjecti

; 446  : 					{
; 447  : 						// 2002-02-28 ADDED BY S.G. If runway, adjust texture so runway number is accurate
; 448  : 						if(Falcon4ClassTable[fc->Index].vuClassData.classInfo_[VU_TYPE] == TYPE_RUNWAY && Falcon4ClassTable[fc->Index].vuClassData.classInfo_[VU_STYPE] == STYPE_RUNWAY_NUM)

	mov	eax, DWORD PTR _fc$[ebp]
	movsx	ecx, WORD PTR [eax]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [ecx+edx+8]
	cmp	eax, 11					; 0000000bH
	jne	SHORT $LN5@AddObjecti
	mov	ecx, DWORD PTR _fc$[ebp]
	movsx	edx, WORD PTR [ecx]
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	imul	eax, 3
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 41					; 00000029H
	jne	SHORT $LN5@AddObjecti

; 449  : 						{
; 450  : 							ShiAssert(obj->brain);
; 451  : 							if (obj->brain)

	mov	edx, DWORD PTR _obj$[ebp]
	cmp	DWORD PTR [edx+240], 0
	je	SHORT $LN5@AddObjecti

; 452  : 							{
; 453  : //								index = obj->GetComponentIndex(this);
; 454  : 								int texIdx = obj->brain->GetRunwayTexture(f);

	movsx	eax, WORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	ecx, DWORD PTR [ecx+240]
	call	?GetRunwayTexture@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayTexture
	mov	DWORD PTR _texIdx$1[ebp], eax

; 455  : 								((DrawableBSP*)drawptr->object)->SetTextureSet(texIdx);

	mov	edx, DWORD PTR _texIdx$1[ebp]
	push	edx
	mov	eax, DWORD PTR _drawptr$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?SetTextureSet@DrawableBSP@@QAEXK@Z	; DrawableBSP::SetTextureSet
$LN5@AddObjecti:

; 456  : 							}
; 457  : 						}
; 458  : 						// END OF ADDED SECTION 2002-02-28
; 459  : 						Parent=drawptr->owner;

	mov	ecx, DWORD PTR _drawptr$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _Parent$[ebp], edx

; 460  : 						if(obj->GetFeatureValue(f) || ShowAllFeatures)

	movsx	eax, WORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	test	eax, eax
	jne	SHORT $LN3@AddObjecti
	movsx	ecx, WORD PTR _ShowAllFeatures$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@AddObjecti
$LN3@AddObjecti:

; 461  : 						{
; 462  : 							((DrawableObject*)drawptr)->GetPosition(&objPos);

	lea	edx, DWORD PTR _objPos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _drawptr$[ebp]
	call	?GetPosition@DrawableObject@@QAEXPAUTpoint@@@Z ; DrawableObject::GetPosition

; 463  : 
; 464  : 							feat=BuildFeature(obj,f,&objPos);

	lea	eax, DWORD PTR _objPos$[ebp]
	push	eax
	movsx	ecx, WORD PTR _f$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z ; BuildFeature
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _feat$[ebp], eax

; 465  : 							if(feat)

	cmp	DWORD PTR _feat$[ebp], 0
	je	SHORT $LN1@AddObjecti

; 466  : 							{
; 467  : 								item=TargetTree->CreateItem(obj->GetCampID() << 16 | f,C_TYPE_ITEM,feat);

	mov	eax, DWORD PTR _feat$[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	shl	ecx, 16					; 00000010H
	movsx	edx, WORD PTR _f$[ebp]
	or	ecx, edx
	push	ecx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 468  : 								if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN1@AddObjecti

; 469  : 								{
; 470  : 									TargetTree->AddChildItem(parent,item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem

; 471  : 									feat->SetOwner(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z ; C_Feature::SetOwner
$LN1@AddObjecti:

; 472  : 								}
; 473  : 							}
; 474  : 						}
; 475  : 					}
; 476  : 				}
; 477  : 			}
; 478  : 		}

	jmp	$LN13@AddObjecti
$LN12@AddObjecti:

; 479  : 	}
; 480  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?AddObjectiveToTargetTree@@YAXPAVObjectiveClass@@@Z ENDP ; AddObjectiveToTargetTree
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
_motiontype$1 = -228					; size = 4
_vc$2 = -224						; size = 4
_visType$3 = -220					; size = 4
_inslot$4 = -216					; size = 4
_item$ = -212						; size = 4
_veh$ = -208						; size = 4
_parent$ = -204						; size = 4
_recon_ent$ = -200					; size = 4
_vehs$5 = -196						; size = 4
_v$6 = -192						; size = 4
_classID$7 = -188					; size = 2
_simdata$8 = -184					; size = 168
_objPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_unit$ = 8						; size = 4
?AddUnitToTargetTree@@YAXPAVUnitClass@@@Z PROC		; AddUnitToTargetTree

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 313  : 	Tpoint					objPos;
; 314  : 	TREELIST				*item,*parent;
; 315  : 	C_Entity				*recon_ent;
; 316  : 	C_Feature				*veh;
; 317  : 
; 318  : 	if(gGps->GetTeamNo() >= 0 && unit->GetTeam() != gGps->GetTeamNo())

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	test	eax, eax
	jl	SHORT $LN15@AddUnitToT
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	cmp	esi, eax
	je	SHORT $LN15@AddUnitToT

; 319  : 		if(!unit->GetSpotted(static_cast<uchar>(gGps->GetTeamNo())) && !unit->IsFlight())

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetSpotted@CampBaseClass@@QAEHE@Z	; CampBaseClass::GetSpotted
	test	eax, eax
	jne	SHORT $LN15@AddUnitToT
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	jne	SHORT $LN15@AddUnitToT

; 320  : 			return;

	jmp	$LN17@AddUnitToT
$LN15@AddUnitToT:

; 321  : 
; 322  : 	if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	$LN5@AddUnitToT

; 323  : 	{
; 324  : 		SimInitDataClass		simdata;

	lea	ecx, DWORD PTR _simdata$8[ebp]
	call	??0SimInitDataClass@@QAE@XZ

; 325  : 		int						v,vehs,motiontype,inslot,visType;
; 326  : 		VehicleID				classID;
; 327  : 		VehicleClassDataType	*vc;
; 328  : 
; 329  : 		// Check for possible problems
; 330  : 		if (unit->IsFlight() && !unit->ShouldDeaggregate())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN13@AddUnitToT
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+476]
	call	eax
	test	eax, eax
	jne	SHORT $LN13@AddUnitToT

; 331  : 			return;

	jmp	$LN17@AddUnitToT
$LN13@AddUnitToT:

; 332  : 
; 333  : 		// Now add all the vehicles
; 334  : 		recon_ent=BuildUnitParent(unit);

	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	call	?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z ; BuildUnitParent
	add	esp, 4
	mov	DWORD PTR _recon_ent$[ebp], eax

; 335  : 		if(recon_ent)

	cmp	DWORD PTR _recon_ent$[ebp], 0
	je	SHORT $LN12@AddUnitToT

; 336  : 			recon_ent->SetCallback(PickFirstChildCB);

	push	OFFSET ?PickFirstChildCB@@YAXJFPAVC_Base@@@Z ; PickFirstChildCB
	mov	edx, DWORD PTR _recon_ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _recon_ent$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN12@AddUnitToT:

; 337  : 
; 338  : 		parent=TargetTree->CreateItem(unit->GetCampID(),C_TYPE_MENU,recon_ent);

	mov	eax, DWORD PTR _recon_ent$[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _parent$[ebp], eax

; 339  : 		if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN10@AddUnitToT

; 340  : 		{
; 341  : 			TargetTree->AddItem(TargetTree->GetRoot(),parent);

	mov	edx, DWORD PTR _parent$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 342  : 			if(recon_ent)

	cmp	DWORD PTR _recon_ent$[ebp], 0
	je	SHORT $LN10@AddUnitToT

; 343  : 				recon_ent->SetOwner(parent);

	mov	eax, DWORD PTR _parent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recon_ent$[ebp]
	call	?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z	; C_Entity::SetOwner
$LN10@AddUnitToT:

; 344  : 		}
; 345  : 
; 346  : 		// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified and not editing a TE, don't break it down by vehicle so it can't be reconed either NOTE THE '!' IN FRONT OF THE WHOLE STATEMENT TO REVERSE IT
; 347  : 		if (!(!(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && unit->IsFlight() && gGps->GetTeamNo() >= 0 && unit->GetTeam() != gGps->GetTeamNo() && !unit->GetIdentified(static_cast<uchar>(gGps->GetTeamNo())))) {

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	jne	SHORT $LN8@AddUnitToT
	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN8@AddUnitToT
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	test	eax, eax
	jl	SHORT $LN8@AddUnitToT
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	cmp	esi, eax
	je	SHORT $LN8@AddUnitToT
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetIdentified@CampBaseClass@@QAEHE@Z	; CampBaseClass::GetIdentified
	test	eax, eax
	je	$LN5@AddUnitToT
$LN8@AddUnitToT:

; 348  : 		// END OF ADDED DATA 2002-02-21
; 349  : 			simdata.vehicleInUnit = -1;

	or	ecx, -1
	mov	WORD PTR _simdata$8[ebp+42], cx

; 350  : 			for (v=0; v<VEHICLE_GROUPS_PER_UNIT; v++)

	mov	DWORD PTR _v$6[ebp], 0
	jmp	SHORT $LN7@AddUnitToT
$LN6@AddUnitToT:
	mov	edx, DWORD PTR _v$6[ebp]
	add	edx, 1
	mov	DWORD PTR _v$6[ebp], edx
$LN7@AddUnitToT:
	cmp	DWORD PTR _v$6[ebp], 16			; 00000010H
	jge	$LN5@AddUnitToT

; 351  : 			{
; 352  : 				vehs = unit->GetNumVehicles(v);

	mov	eax, DWORD PTR _v$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetNumVehicles@UnitClass@@QAEHH@Z	; UnitClass::GetNumVehicles
	mov	DWORD PTR _vehs$5[ebp], eax

; 353  : 				classID = unit->GetVehicleID(v);

	mov	ecx, DWORD PTR _v$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	mov	WORD PTR _classID$7[ebp], ax

; 354  : 				inslot = 0;

	mov	DWORD PTR _inslot$4[ebp], 0
$LN4@AddUnitToT:

; 355  : 				while (vehs && classID)

	cmp	DWORD PTR _vehs$5[ebp], 0
	je	$LN3@AddUnitToT
	movsx	edx, WORD PTR _classID$7[ebp]
	test	edx, edx
	je	$LN3@AddUnitToT

; 356  : 				{
; 357  : 					vc = GetVehicleClassData(classID);

	movsx	eax, WORD PTR _classID$7[ebp]
	push	eax
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$2[ebp], eax

; 358  : 					simdata.campBase = unit;

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _simdata$8[ebp+12], ecx

; 359  : 					simdata.campSlot = v;

	mov	edx, DWORD PTR _v$6[ebp]
	mov	DWORD PTR _simdata$8[ebp+32], edx

; 360  : 					simdata.inSlot = inslot;

	mov	eax, DWORD PTR _inslot$4[ebp]
	mov	DWORD PTR _simdata$8[ebp+36], eax

; 361  : 					simdata.descriptionIndex = classID + VU_LAST_ENTITY_TYPE;

	movsx	ecx, WORD PTR _classID$7[ebp]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _simdata$8[ebp+28], ecx

; 362  : 					simdata.flags = vc->Flags;

	mov	edx, DWORD PTR _vc$2[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _simdata$8[ebp+76], eax

; 363  : 					// Set the position initially to the unit's real position
; 364  : 					simdata.x = unit->XPos();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR _simdata$8[ebp+56]

; 365  : 					simdata.y = unit->YPos();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR _simdata$8[ebp+60]

; 366  : 					simdata.z = unit->ZPos();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR _simdata$8[ebp+64]

; 367  : 					// Now query for any offsets
; 368  : 					motiontype = unit->GetVehicleDeagData(&simdata,FALSE);

	push	0
	lea	ecx, DWORD PTR _simdata$8[ebp]
	push	ecx
	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+548]
	call	edx
	mov	DWORD PTR _motiontype$1[ebp], eax

; 369  : 					objPos.x = simdata.x;

	movss	xmm0, DWORD PTR _simdata$8[ebp+56]
	movss	DWORD PTR _objPos$[ebp], xmm0

; 370  : 					objPos.y = simdata.y;

	movss	xmm0, DWORD PTR _simdata$8[ebp+60]
	movss	DWORD PTR _objPos$[ebp+4], xmm0

; 371  : 					objPos.z = simdata.z;

	movss	xmm0, DWORD PTR _simdata$8[ebp+64]
	movss	DWORD PTR _objPos$[ebp+8], xmm0

; 372  : 					visType = Falcon4ClassTable[classID].visType[VIS_NORMAL];

	movsx	eax, WORD PTR _classID$7[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 2
	imul	ecx, 0
	movsx	edx, WORD PTR [eax+ecx+60]
	mov	DWORD PTR _visType$3[ebp], edx

; 373  : 					gUIViewer->LoadDrawableUnit(unit->GetCampID() << 16 | (v << 8) | (vehs+1),visType,&objPos,simdata.heading,Falcon4ClassTable[classID].vuClassData.classInfo_[VU_DOMAIN],Falcon4ClassTable[classID].vuClassData.classInfo_[VU_TYPE],Falcon4ClassTable[classID].vuClassData.classInfo_[VU_STYPE]);

	movsx	eax, WORD PTR _classID$7[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	imul	ecx, 3
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	movsx	eax, WORD PTR _classID$7[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	movsx	eax, WORD PTR _classID$7[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _simdata$8[ebp+68]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _objPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visType$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _v$6[ebp]
	shl	ecx, 8
	or	eax, ecx
	mov	edx, DWORD PTR _vehs$5[ebp]
	add	edx, 1
	or	eax, edx
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?LoadDrawableUnit@C_3dViewer@@QAEPAUUI_BSPList@@JJPAUTpoint@@MEEE@Z ; C_3dViewer::LoadDrawableUnit

; 374  : 
; 375  : 					veh=BuildUnit(unit,v,(v << 8) | vehs+1,&objPos);

	lea	eax, DWORD PTR _objPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$6[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _vehs$5[ebp]
	add	edx, 1
	or	ecx, edx
	push	ecx
	mov	eax, DWORD PTR _v$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	call	?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z ; BuildUnit
	add	esp, 16					; 00000010H
	mov	DWORD PTR _veh$[ebp], eax

; 376  : 					if(veh)

	cmp	DWORD PTR _veh$[ebp], 0
	je	SHORT $LN1@AddUnitToT

; 377  : 					{
; 378  : 						item=TargetTree->CreateItem(unit->GetCampID() << 16 | (v << 8) | (vehs+1),C_TYPE_ITEM,veh);

	mov	edx, DWORD PTR _veh$[ebp]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _v$6[ebp]
	shl	edx, 8
	or	ecx, edx
	mov	eax, DWORD PTR _vehs$5[ebp]
	add	eax, 1
	or	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 379  : 						if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN1@AddUnitToT

; 380  : 						{
; 381  : 							TargetTree->AddChildItem(parent,item);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parent$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem

; 382  : 							veh->SetOwner(item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z ; C_Feature::SetOwner
$LN1@AddUnitToT:

; 383  : 						}
; 384  : 					}
; 385  : 					vehs--;

	mov	ecx, DWORD PTR _vehs$5[ebp]
	sub	ecx, 1
	mov	DWORD PTR _vehs$5[ebp], ecx

; 386  : 					inslot++;

	mov	edx, DWORD PTR _inslot$4[ebp]
	add	edx, 1
	mov	DWORD PTR _inslot$4[ebp], edx

; 387  : 				}

	jmp	$LN4@AddUnitToT
$LN3@AddUnitToT:

; 388  : 			}

	jmp	$LN6@AddUnitToT
$LN5@AddUnitToT:
$LN17@AddUnitToT:

; 389  : 		}
; 390  : 	}
; 391  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?AddUnitToTargetTree@@YAXPAVUnitClass@@@Z ENDP		; AddUnitToTargetTree
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 8
_vc$ = -40						; size = 4
$T3 = -36						; size = 4
tv78 = -32						; size = 4
$T4 = -28						; size = 4
_classID$ = -24						; size = 4
_TextID$ = -20						; size = 4
_veh$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_un$ = 8						; size = 4
_vehno$ = 12						; size = 4
_vehid$ = 16						; size = 4
___formal$ = 20						; size = 4
?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z PROC ; BuildUnit

; 277  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 278  : 	C_Feature *veh;
; 279  : 	long TextID;
; 280  : 	VehicleClassDataType *vc;
; 281  : 	long classID;
; 282  : 
; 283  : 	classID = un->GetVehicleID(vehno);

	mov	eax, DWORD PTR _vehno$[ebp]
	push	eax
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movsx	ecx, ax
	mov	DWORD PTR _classID$[ebp], ecx

; 284  : 	if (classID)

	cmp	DWORD PTR _classID$[ebp], 0
	je	$LN3@BuildUnit

; 285  : 	{
; 286  : 		vc = GetVehicleClassData(classID);

	mov	edx, DWORD PTR _classID$[ebp]
	push	edx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 287  : 		veh=new C_Feature;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@BuildUnit
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Feature@@QAE@XZ			; C_Feature::C_Feature
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN7@BuildUnit
$LN6@BuildUnit:
	mov	DWORD PTR tv78[ebp], 0
$LN7@BuildUnit:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _veh$[ebp], ecx

; 288  : 		veh->Setup(un->GetCampID() << 16 | vehid,0);

	push	0
	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _vehid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?Setup@C_Feature@@QAEXJF@Z		; C_Feature::Setup

; 289  : 		veh->SetFlagBitOff(C_BIT_USEBGFILL);

	push	1073741824				; 40000000H
	mov	ecx, DWORD PTR _veh$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _veh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 290  : 		veh->SetColor(0xc0c0c0,0x00ff00);

	push	65280					; 0000ff00H
	push	12632256				; 00c0c0c0H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetColor@C_Feature@@QAEXKK@Z		; C_Feature::SetColor

; 291  : 		veh->InitEntity();

	mov	ecx, DWORD PTR _veh$[ebp]
	call	?InitEntity@C_Feature@@QAEXXZ		; C_Feature::InitEntity

; 292  : 		// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified and not editing a TE, change its label to 'Bandit'
; 293  : 		if (!(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && un->IsFlight() && gGps->GetTeamNo() >= 0 && un->GetTeam() != gGps->GetTeamNo() && !un->GetIdentified(static_cast<uchar>(gGps->GetTeamNo())))

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	jne	SHORT $LN2@BuildUnit
	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN2@BuildUnit
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	test	eax, eax
	jl	SHORT $LN2@BuildUnit
	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	cmp	esi, eax
	je	SHORT $LN2@BuildUnit
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	push	eax
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetIdentified@CampBaseClass@@QAEHE@Z	; CampBaseClass::GetIdentified
	test	eax, eax
	jne	SHORT $LN2@BuildUnit

; 294  : 			veh->SetName(25,0,"Bandit");

	push	OFFSET ??_C@_06OMLMHNAL@Bandit?$AA@
	push	0
	push	25					; 00000019H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetName@C_Feature@@QAEXFFPAD@Z		; C_Feature::SetName

; 295  : 		else

	jmp	SHORT $LN1@BuildUnit
$LN2@BuildUnit:

; 296  : 		// END OF ADDED SECTION 2002-02-21
; 297  : 			veh->SetName(25,0,vc->Name);

	mov	ecx, DWORD PTR _vc$[ebp]
	add	ecx, 8
	push	ecx
	push	0
	push	25					; 00000019H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetName@C_Feature@@QAEXFFPAD@Z		; C_Feature::SetName
$LN1@BuildUnit:

; 298  : 		TextID=TXT_NO_DAMAGE;

	mov	DWORD PTR _TextID$[ebp], 71		; 00000047H

; 299  : 		veh->SetStatus(280,0,TextID);

	mov	edx, DWORD PTR _TextID$[ebp]
	push	edx
	push	0
	push	280					; 00000118H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetStatus@C_Feature@@QAEXFFJ@Z		; C_Feature::SetStatus

; 300  : 		TextID=TXT_VERYHIGH;

	mov	DWORD PTR _TextID$[ebp], 79		; 0000004fH

; 301  : 		veh->SetValue(390,0,TextID);

	mov	eax, DWORD PTR _TextID$[ebp]
	push	eax
	push	0
	push	390					; 00000186H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetValue@C_Feature@@QAEXFFJ@Z		; C_Feature::SetValue

; 302  : 		veh->SetCallback(CenterOnFeatureCB);

	push	OFFSET ?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z ; CenterOnFeatureCB
	mov	ecx, DWORD PTR _veh$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _veh$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 303  : 		veh->SetVUID(un->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _un$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetVUID@C_Feature@@QAEXVVU_ID@@@Z	; C_Feature::SetVUID

; 304  : 		veh->SetFeatureID(vehno);

	mov	ecx, DWORD PTR _vehno$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetFeatureID@C_Feature@@QAEXJ@Z	; C_Feature::SetFeatureID

; 305  : 		veh->SetFeatureValue(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR _veh$[ebp]
	call	?SetFeatureValue@C_Feature@@QAEXE@Z	; C_Feature::SetFeatureValue

; 306  : 		return(veh);

	mov	eax, DWORD PTR _veh$[ebp]
	jmp	SHORT $LN4@BuildUnit
$LN3@BuildUnit:

; 307  : 	}
; 308  : 	return(NULL);

	xor	eax, eax
$LN4@BuildUnit:

; 309  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildUnit@@YAPAVC_Feature@@PAVUnitClass@@JJPAUTpoint@@@Z ENDP ; BuildUnit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -264						; size = 8
_flt$3 = -256						; size = 4
$T4 = -252						; size = 4
_UnitPtr$ = -248					; size = 4
$T5 = -244						; size = 4
_res$ = -240						; size = 4
tv74 = -236						; size = 4
_rsc$ = -232						; size = 4
_type$ = -228						; size = 4
_planecount$6 = -224					; size = 2
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_unit$ = 8						; size = 4
?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z PROC	; BuildUnitParent

; 197  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 198  : 	C_Resmgr *res;
; 199  : 	IMAGE_RSC *rsc;
; 200  : 	C_Entity *newinfo;
; 201  : 	_TCHAR buffer[200];
; 202  : 	UnitClassDataType *UnitPtr;
; 203  : 	long type=0;

	mov	DWORD PTR _type$[ebp], 0

; 204  : 
; 205  : 	UnitPtr=unit->GetUnitClassData();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$[ebp], eax

; 206  : 	if(UnitPtr == NULL)

	cmp	DWORD PTR _UnitPtr$[ebp], 0
	jne	SHORT $LN17@BuildUnitP

; 207  : 		return(NULL);

	xor	eax, eax
	jmp	$LN18@BuildUnitP
$LN17@BuildUnitP:

; 208  : 
; 209  : 	// Create new parent class
; 210  : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN20@BuildUnitP
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN21@BuildUnitP
$LN20@BuildUnitP:
	mov	DWORD PTR tv74[ebp], 0
$LN21@BuildUnitP:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _newinfo$[ebp], ecx

; 211  : 	newinfo->Setup(unit->GetCampID(),C_TYPE_ITEM);

	push	50					; 00000032H
	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 212  : 	newinfo->SetWH(500,37);

	push	37					; 00000025H
	push	500					; 000001f4H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 213  : 	newinfo->SetFlagBitOff(C_BIT_USEBGFILL);

	push	1073741824				; 40000000H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 214  : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 215  : 
; 216  : 	newinfo->SetVUID(unit->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z	; C_Entity::SetVUID

; 217  : 	newinfo->SetUserNumber(0,unit->GetTeam());

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 218  : 
; 219  : 	if(unit->GetFullstrengthVehicles())

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	test	eax, eax
	je	$LN16@BuildUnitP

; 220  : 	{
; 221  : 		if(unit->IsFlight())

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	$LN15@BuildUnitP

; 222  : 		{
; 223  : 			short planecount;
; 224  : 			Flight flt=(Flight)unit;

	mov	eax, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _flt$3[ebp], eax

; 225  : 			planecount=0;

	xor	ecx, ecx
	mov	WORD PTR _planecount$6[ebp], cx
$LN14@BuildUnitP:

; 226  : 			while(flt->plane_stats[planecount] != AIRCRAFT_NOT_ASSIGNED && planecount < PILOTS_PER_FLIGHT)

	movsx	edx, WORD PTR _planecount$6[ebp]
	mov	eax, DWORD PTR _flt$3[ebp]
	movzx	ecx, BYTE PTR [eax+edx+416]
	test	ecx, ecx
	je	SHORT $LN13@BuildUnitP
	movsx	edx, WORD PTR _planecount$6[ebp]
	cmp	edx, 4
	jge	SHORT $LN13@BuildUnitP

; 227  : 				planecount++;

	mov	ax, WORD PTR _planecount$6[ebp]
	add	ax, 1
	mov	WORD PTR _planecount$6[ebp], ax
	jmp	SHORT $LN14@BuildUnitP
$LN13@BuildUnitP:

; 228  : 
; 229  : 			if(planecount)

	movsx	ecx, WORD PTR _planecount$6[ebp]
	test	ecx, ecx
	je	SHORT $LN12@BuildUnitP

; 230  : 				newinfo->SetOperational(static_cast<uchar>(unit->GetTotalVehicles()*100/planecount));

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	imul	eax, 100				; 00000064H
	movsx	ecx, WORD PTR _planecount$6[ebp]
	cdq
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 231  : 			else

	jmp	SHORT $LN11@BuildUnitP
$LN12@BuildUnitP:

; 232  : 				newinfo->SetOperational(0);

	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational
$LN11@BuildUnitP:

; 233  : 		}
; 234  : 		else

	jmp	SHORT $LN10@BuildUnitP
$LN15@BuildUnitP:

; 235  : 			newinfo->SetOperational(static_cast<uchar>(unit->GetTotalVehicles()*100/unit->GetFullstrengthVehicles()));

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	esi, eax
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational
$LN10@BuildUnitP:

; 236  : 	}
; 237  : 	else

	jmp	SHORT $LN9@BuildUnitP
$LN16@BuildUnitP:

; 238  : 		newinfo->SetOperational(0);

	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational
$LN9@BuildUnitP:

; 239  : 
; 240  : 	res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[unit->GetTeam()]->GetColor()][0]);

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[ecx+eax*8]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 241  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN8@BuildUnitP

; 242  : 	{
; 243  : 		rsc=(IMAGE_RSC*)res->Find(UnitPtr->IconIndex);

	mov	eax, DWORD PTR _UnitPtr$[ebp]
	movsx	ecx, WORD PTR [eax+332]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 244  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN7@BuildUnitP
	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 100			; 00000064H
	jne	SHORT $LN7@BuildUnitP

; 245  : 			type=rsc->Header->h;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+46]
	mov	DWORD PTR _type$[ebp], eax

; 246  : 		else

	jmp	SHORT $LN6@BuildUnitP
$LN7@BuildUnitP:

; 247  : 			type=0;

	mov	DWORD PTR _type$[ebp], 0
$LN6@BuildUnitP:

; 248  : 	}
; 249  : 	else

	jmp	SHORT $LN5@BuildUnitP
$LN8@BuildUnitP:

; 250  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN5@BuildUnitP:

; 251  : 
; 252  : 	if(type > 35)

	cmp	DWORD PTR _type$[ebp], 35		; 00000023H
	jle	SHORT $LN4@BuildUnitP

; 253  : 		newinfo->SetH(type+2);

	mov	ecx, DWORD PTR _type$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 254  : 	else

	jmp	SHORT $LN3@BuildUnitP
$LN4@BuildUnitP:

; 255  : 		type=35;

	mov	DWORD PTR _type$[ebp], 35		; 00000023H
$LN3@BuildUnitP:

; 256  : 
; 257  : 	// Set Icon Image
; 258  : 	newinfo->SetIcon(15,static_cast<short>(type/2),rsc);

	mov	eax, DWORD PTR _rsc$[ebp]
	push	eax
	mov	eax, DWORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 259  : 
; 260  : 	// Set Name
; 261  : 	// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified and not editing a TE, change its label to 'Bandit'
; 262  : 	if (!(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && unit->IsFlight() && gGps->GetTeamNo() >= 0 && unit->GetTeam() != gGps->GetTeamNo() && !unit->GetIdentified(static_cast<uchar>(gGps->GetTeamNo())))

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	jne	SHORT $LN2@BuildUnitP
	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN2@BuildUnitP
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	test	eax, eax
	jl	SHORT $LN2@BuildUnitP
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	cmp	esi, eax
	je	SHORT $LN2@BuildUnitP
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetTeamNo
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetIdentified@CampBaseClass@@QAEHE@Z	; CampBaseClass::GetIdentified
	test	eax, eax
	jne	SHORT $LN2@BuildUnitP

; 263  : 		_stprintf(buffer,"Bandit");

	push	OFFSET ??_C@_06OMLMHNAL@Bandit?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 264  : 	else

	jmp	SHORT $LN1@BuildUnitP
$LN2@BuildUnitP:

; 265  : 	// END OF ADDED SECTION 2002-02-21
; 266  : 		unit->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN1@BuildUnitP:

; 267  : 
; 268  : 	newinfo->SetName(35,10,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	10					; 0000000aH
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 269  : 
; 270  : 	// Set # & Airplane type
; 271  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	edx, al
	push	edx
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 272  : 	newinfo->SetStatus(300,10,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	10					; 0000000aH
	push	300					; 0000012cH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 273  : 
; 274  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN18@BuildUnitP:

; 275  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildUnitParent@@YAPAVC_Entity@@PAVUnitClass@@@Z ENDP	; BuildUnitParent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -52						; size = 8
$T3 = -44						; size = 4
tv152 = -40						; size = 4
tv86 = -36						; size = 4
$T4 = -32						; size = 4
_classID$ = -28						; size = 4
_fc$ = -24						; size = 4
_TextID$ = -20						; size = 4
_feat$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_obj$ = 8						; size = 4
_featureID$ = 12					; size = 4
___formal$ = 16						; size = 4
?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z PROC ; BuildFeature

; 137  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 138  : 	C_Feature *feat;
; 139  : 	long TextID;
; 140  : 	FeatureClassDataType*	fc;
; 141  : 	long classID;
; 142  : 
; 143  : 	classID = obj->GetFeatureID(featureID);

	mov	eax, DWORD PTR _featureID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	DWORD PTR _classID$[ebp], eax

; 144  : 	if (classID)

	cmp	DWORD PTR _classID$[ebp], 0
	je	$LN18@BuildFeatu

; 145  : 	{
; 146  : 		fc = GetFeatureClassData (classID);

	mov	ecx, DWORD PTR _classID$[ebp]
	push	ecx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 147  : 		// RV - Biker - Don't add trees to target list 
; 148  : 		if (!fc || fc->Flags & FEAT_VIRTUAL || fc->Flags & FEAT_NO_HITEVAL)

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN16@BuildFeatu
	mov	edx, DWORD PTR _fc$[ebp]
	movzx	eax, WORD PTR [edx+6]
	and	eax, 2
	jne	SHORT $LN16@BuildFeatu
	mov	ecx, DWORD PTR _fc$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	and	edx, 16					; 00000010H
	je	SHORT $LN17@BuildFeatu
$LN16@BuildFeatu:

; 149  : 			return(NULL);

	xor	eax, eax
	jmp	$LN19@BuildFeatu
$LN17@BuildFeatu:

; 150  : 
; 151  : 		feat=new C_Feature;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN21@BuildFeatu
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Feature@@QAE@XZ			; C_Feature::C_Feature
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN22@BuildFeatu
$LN21@BuildFeatu:
	mov	DWORD PTR tv86[ebp], 0
$LN22@BuildFeatu:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _feat$[ebp], ecx

; 152  : 		feat->Setup(obj->GetCampID() << 16 | featureID,0);

	push	0
	mov	edx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _featureID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?Setup@C_Feature@@QAEXJF@Z		; C_Feature::Setup

; 153  : 		feat->SetFlagBitOff(C_BIT_USEBGFILL);

	push	1073741824				; 40000000H
	mov	ecx, DWORD PTR _feat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _feat$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 154  : 		feat->SetColor(0xc0c0c0,0x00ff00);

	push	65280					; 0000ff00H
	push	12632256				; 00c0c0c0H
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetColor@C_Feature@@QAEXKK@Z		; C_Feature::SetColor

; 155  : 		feat->InitEntity();

	mov	ecx, DWORD PTR _feat$[ebp]
	call	?InitEntity@C_Feature@@QAEXXZ		; C_Feature::InitEntity

; 156  : 		feat->SetName(25,0,fc->Name);

	mov	ecx, DWORD PTR _fc$[ebp]
	add	ecx, 8
	push	ecx
	push	0
	push	25					; 00000019H
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetName@C_Feature@@QAEXFFPAD@Z		; C_Feature::SetName

; 157  : 		switch(obj->GetFeatureStatus(featureID))

	mov	edx, DWORD PTR _featureID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureStatus@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureStatus
	mov	DWORD PTR tv152[ebp], eax
	cmp	DWORD PTR tv152[ebp], 3
	ja	SHORT $LN9@BuildFeatu
	mov	eax, DWORD PTR tv152[ebp]
	jmp	DWORD PTR $LN25@BuildFeatu[eax*4]
$LN13@BuildFeatu:

; 158  : 		{
; 159  : 			case 0:
; 160  : 				TextID=TXT_NO_DAMAGE;

	mov	DWORD PTR _TextID$[ebp], 71		; 00000047H

; 161  : 				break;

	jmp	SHORT $LN14@BuildFeatu
$LN12@BuildFeatu:

; 162  : 			case 1:
; 163  : 				TextID=TXT_REPAIRED;

	mov	DWORD PTR _TextID$[ebp], 73		; 00000049H

; 164  : 				break;

	jmp	SHORT $LN14@BuildFeatu
$LN11@BuildFeatu:

; 165  : 			case 2:
; 166  : 				TextID=TXT_DAMAGED;

	mov	DWORD PTR _TextID$[ebp], 72		; 00000048H

; 167  : 				break;

	jmp	SHORT $LN14@BuildFeatu
$LN10@BuildFeatu:

; 168  : 			case 3:	
; 169  : 				TextID=TXT_DESTROYED;

	mov	DWORD PTR _TextID$[ebp], 74		; 0000004aH

; 170  : 				break;

	jmp	SHORT $LN14@BuildFeatu
$LN9@BuildFeatu:

; 171  : 			default:
; 172  : 				TextID=TXT_NO_DAMAGE;

	mov	DWORD PTR _TextID$[ebp], 71		; 00000047H
$LN14@BuildFeatu:

; 173  : 				break;
; 174  : 		}
; 175  : 		feat->SetStatus(280,0,TextID);

	mov	ecx, DWORD PTR _TextID$[ebp]
	push	ecx
	push	0
	push	280					; 00000118H
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetStatus@C_Feature@@QAEXFFJ@Z		; C_Feature::SetStatus

; 176  : 		if(obj->GetFeatureValue(featureID) < 10)

	mov	edx, DWORD PTR _featureID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN8@BuildFeatu

; 177  : 			TextID=TXT_VERYLOW;

	mov	DWORD PTR _TextID$[ebp], 75		; 0000004bH
	jmp	SHORT $LN7@BuildFeatu
$LN8@BuildFeatu:

; 178  : 		else if(obj->GetFeatureValue(featureID) < 25)

	mov	eax, DWORD PTR _featureID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	cmp	eax, 25					; 00000019H
	jge	SHORT $LN6@BuildFeatu

; 179  : 			TextID=TXT_LOW;

	mov	DWORD PTR _TextID$[ebp], 76		; 0000004cH
	jmp	SHORT $LN7@BuildFeatu
$LN6@BuildFeatu:

; 180  : 		else if(obj->GetFeatureValue(featureID) < 40)

	mov	ecx, DWORD PTR _featureID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	cmp	eax, 40					; 00000028H
	jge	SHORT $LN4@BuildFeatu

; 181  : 			TextID=TXT_MEDIUM;

	mov	DWORD PTR _TextID$[ebp], 77		; 0000004dH
	jmp	SHORT $LN7@BuildFeatu
$LN4@BuildFeatu:

; 182  : 		else if(obj->GetFeatureValue(featureID) < 50)

	mov	edx, DWORD PTR _featureID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	cmp	eax, 50					; 00000032H
	jge	SHORT $LN2@BuildFeatu

; 183  : 			TextID=TXT_HIGH;

	mov	DWORD PTR _TextID$[ebp], 78		; 0000004eH

; 184  : 		else

	jmp	SHORT $LN7@BuildFeatu
$LN2@BuildFeatu:

; 185  : 			TextID=TXT_VERYHIGH;

	mov	DWORD PTR _TextID$[ebp], 79		; 0000004fH
$LN7@BuildFeatu:

; 186  : 		feat->SetValue(390,0,TextID);

	mov	eax, DWORD PTR _TextID$[ebp]
	push	eax
	push	0
	push	390					; 00000186H
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetValue@C_Feature@@QAEXFFJ@Z		; C_Feature::SetValue

; 187  : 		feat->SetCallback(CenterOnFeatureCB);

	push	OFFSET ?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z ; CenterOnFeatureCB
	mov	ecx, DWORD PTR _feat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _feat$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 188  : 		feat->SetVUID(obj->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetVUID@C_Feature@@QAEXVVU_ID@@@Z	; C_Feature::SetVUID

; 189  : 		feat->SetFeatureID(featureID);

	mov	ecx, DWORD PTR _featureID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetFeatureID@C_Feature@@QAEXJ@Z	; C_Feature::SetFeatureID

; 190  : 		feat->SetFeatureValue(static_cast<uchar>(obj->GetFeatureValue(featureID)));

	mov	edx, DWORD PTR _featureID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	push	eax
	mov	ecx, DWORD PTR _feat$[ebp]
	call	?SetFeatureValue@C_Feature@@QAEXE@Z	; C_Feature::SetFeatureValue

; 191  : 		return(feat);

	mov	eax, DWORD PTR _feat$[ebp]
	jmp	SHORT $LN19@BuildFeatu
$LN18@BuildFeatu:

; 192  : 	}
; 193  : 	return(NULL);

	xor	eax, eax
$LN19@BuildFeatu:

; 194  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@BuildFeatu:
	DD	$LN13@BuildFeatu
	DD	$LN12@BuildFeatu
	DD	$LN11@BuildFeatu
	DD	$LN10@BuildFeatu
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildFeature@@YAPAVC_Feature@@PAVObjectiveClass@@JPAUTpoint@@@Z ENDP ; BuildFeature
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T2 = -256						; size = 8
$T3 = -248						; size = 4
_ObjPtr$ = -244						; size = 4
$T4 = -240						; size = 4
_res$ = -236						; size = 4
tv74 = -232						; size = 4
_rsc$ = -228						; size = 4
_type$ = -224						; size = 4
_newinfo$ = -220					; size = 4
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_obj$ = 8						; size = 4
?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z PROC ; BuildObjective

; 81   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 82   : 	C_Resmgr *res;
; 83   : 	IMAGE_RSC *rsc;
; 84   : 	C_Entity *newinfo;
; 85   : 	_TCHAR buffer[200];
; 86   : 	ObjClassDataType *ObjPtr;
; 87   : 	int type=0;

	mov	DWORD PTR _type$[ebp], 0

; 88   : 
; 89   : 	ObjPtr=obj->GetObjectiveClassData();

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _ObjPtr$[ebp], eax

; 90   : 	if(ObjPtr == NULL)

	cmp	DWORD PTR _ObjPtr$[ebp], 0
	jne	SHORT $LN7@BuildObjec

; 91   : 		return(NULL);

	xor	eax, eax
	jmp	$LN8@BuildObjec
$LN7@BuildObjec:

; 92   : 
; 93   : 	// Create new parent class
; 94   : 	newinfo=new C_Entity;

	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN10@BuildObjec
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Entity@@QAE@XZ			; C_Entity::C_Entity
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN11@BuildObjec
$LN10@BuildObjec:
	mov	DWORD PTR tv74[ebp], 0
$LN11@BuildObjec:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _newinfo$[ebp], ecx

; 95   : 	newinfo->Setup(obj->GetCampID(),C_TYPE_ITEM);

	push	50					; 00000032H
	mov	edx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?Setup@C_Entity@@QAEXJF@Z		; C_Entity::Setup

; 96   : 	newinfo->SetWH(500,37);

	push	37					; 00000025H
	push	500					; 000001f4H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 97   : 	newinfo->SetFlagBitOff(C_BIT_USEBGFILL);

	push	1073741824				; 40000000H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 98   : 	newinfo->InitEntity();

	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?InitEntity@C_Entity@@QAEXXZ		; C_Entity::InitEntity

; 99   : 
; 100  : 	newinfo->SetVUID(obj->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetVUID@C_Entity@@QAEXVVU_ID@@@Z	; C_Entity::SetVUID

; 101  : 	newinfo->SetUserNumber(0,obj->GetTeam());

	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	push	0
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 102  : 
; 103  : 	newinfo->SetOperational(obj->GetObjectiveStatus());

	mov	ecx, DWORD PTR _obj$[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetOperational@C_Entity@@QAEXE@Z	; C_Entity::SetOperational

; 104  : 
; 105  : 	res=gImageMgr->GetImageRes(TeamColorIconIDs[TeamInfo[obj->GetTeam()]->GetColor()][0]);

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[edx+eax*8]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 106  : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN6@BuildObjec

; 107  : 	{
; 108  : 		rsc=(IMAGE_RSC*)res->Find(ObjPtr->IconIndex);

	mov	ecx, DWORD PTR _ObjPtr$[ebp]
	movsx	edx, WORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 109  : 		if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN5@BuildObjec
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	jne	SHORT $LN5@BuildObjec

; 110  : 			type=rsc->Header->h;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _type$[ebp], ecx

; 111  : 		else

	jmp	SHORT $LN4@BuildObjec
$LN5@BuildObjec:

; 112  : 			type=0;

	mov	DWORD PTR _type$[ebp], 0
$LN4@BuildObjec:

; 113  : 	}
; 114  : 	else

	jmp	SHORT $LN3@BuildObjec
$LN6@BuildObjec:

; 115  : 		rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0
$LN3@BuildObjec:

; 116  : 
; 117  : 	if(type > 35)

	cmp	DWORD PTR _type$[ebp], 35		; 00000023H
	jle	SHORT $LN2@BuildObjec

; 118  : 		newinfo->SetH(type+2);

	mov	edx, DWORD PTR _type$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _newinfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newinfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 119  : 	else

	jmp	SHORT $LN1@BuildObjec
$LN2@BuildObjec:

; 120  : 		type=35;

	mov	DWORD PTR _type$[ebp], 35		; 00000023H
$LN1@BuildObjec:

; 121  : 
; 122  : 	// Set Icon Image
; 123  : 	newinfo->SetIcon(15,static_cast<short>(type/2),rsc);

	mov	ecx, DWORD PTR _rsc$[ebp]
	push	ecx
	mov	eax, DWORD PTR _type$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ; C_Entity::SetIcon

; 124  : 
; 125  : 	// Set Name
; 126  : 	obj->GetName(buffer,40,TRUE);

	push	1
	push	40					; 00000028H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 127  : 	newinfo->SetName(35,10,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	10					; 0000000aH
	push	35					; 00000023H
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetName@C_Entity@@QAEXFFPAD@Z		; C_Entity::SetName

; 128  : 
; 129  : 	// Set # & Airplane type
; 130  : 	_stprintf(buffer,"%1d%% %s",newinfo->GetOperational(),gStringMgr->GetString(TXT_OPERATIONAL));

	push	92					; 0000005cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?GetOperational@C_Entity@@QAEEXZ	; C_Entity::GetOperational
	movzx	edx, al
	push	edx
	push	OFFSET ??_C@_08CDOICCFJ@?$CF1d?$CF?$CF?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 131  : 	newinfo->SetStatus(300,10,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	10					; 0000000aH
	push	300					; 0000012cH
	mov	ecx, DWORD PTR _newinfo$[ebp]
	call	?SetStatus@C_Entity@@QAEXFFPAD@Z	; C_Entity::SetStatus

; 132  : 
; 133  : 	return(newinfo);

	mov	eax, DWORD PTR _newinfo$[ebp]
$LN8@BuildObjec:

; 134  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildObjective@@YAPAVC_Entity@@PAVObjectiveClass@@@Z ENDP ; BuildObjective
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\targets.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
_item$ = -12						; size = 4
_parent$ = -8						; size = 4
_cent$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PickFirstChildCB@@YAXJFPAVC_Base@@@Z PROC		; PickFirstChildCB

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 58   : 	TREELIST *parent,*item;
; 59   : 	C_Entity *cent;
; 60   : 
; 61   : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@PickFirstC

; 62   : 		return;

	jmp	SHORT $LN5@PickFirstC
$LN4@PickFirstC:

; 63   : 
; 64   : 	cent=(C_Entity*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _cent$[ebp], ecx

; 65   : 	if(!cent)

	cmp	DWORD PTR _cent$[ebp], 0
	jne	SHORT $LN3@PickFirstC

; 66   : 		return;

	jmp	SHORT $LN5@PickFirstC
$LN3@PickFirstC:

; 67   : 
; 68   : 	parent=cent->GetOwner();

	mov	ecx, DWORD PTR _cent$[ebp]
	call	?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ	; C_Entity::GetOwner
	mov	DWORD PTR _parent$[ebp], eax

; 69   : 	if(parent)

	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN2@PickFirstC

; 70   : 		return;

	jmp	SHORT $LN5@PickFirstC
$LN2@PickFirstC:

; 71   : 
; 72   : 	FeatureID=cent->GetVUID();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _cent$[ebp]
	call	?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ	; C_Entity::GetVUID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?FeatureID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?FeatureID@@3VVU_ID@@A+4, edx

; 73   : 	FeatureNo=0;

	mov	DWORD PTR ?FeatureNo@@3JA, 0		; FeatureNo

; 74   : 
; 75   : 	item=parent->Child;

	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _item$[ebp], ecx

; 76   : 	if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN5@PickFirstC

; 77   : 		CenterOnFeatureCB(RECON_TREE,hittype,item->Item_);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	push	18346					; 000047aaH
	call	?CenterOnFeatureCB@@YAXJFPAVC_Base@@@Z	; CenterOnFeatureCB
	add	esp, 12					; 0000000cH
$LN5@PickFirstC:

; 78   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickFirstChildCB@@YAXJFPAVC_Base@@@Z ENDP		; PickFirstChildCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ObjectDetailLevel@PlayerOptionsClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectDetailLevel@PlayerOptionsClass@@QAEMXZ PROC	; PlayerOptionsClass::ObjectDetailLevel, COMDAT
; _this$ = ecx

; 132  : 	float ObjectDetailLevel (void)							{ return ObjDetailLevel; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectDetailLevel@PlayerOptionsClass@@QAEMXZ ENDP	; PlayerOptionsClass::ObjectDetailLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?FilteringOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?FilteringOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::FilteringOn, COMDAT
; _this$ = ecx

; 116  : 	int FilteringOn (void)									{ return (DispFlags & DISP_BILINEAR) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16					; 00000010H
	je	SHORT $LN3@FilteringO
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@FilteringO
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@FilteringO
$LN3@FilteringO:
	mov	DWORD PTR tv68[ebp], 0
$LN4@FilteringO:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FilteringOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::FilteringOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?HazingOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?HazingOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::HazingOn, COMDAT
; _this$ = ecx

; 115  : 	int HazingOn (void)										{ return (DispFlags & DISP_HAZING) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	je	SHORT $LN3@HazingOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@HazingOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@HazingOn
$LN3@HazingOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@HazingOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?HazingOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::HazingOn
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ PROC	; C_3dViewer::GetRendOTW, COMDAT
; _this$ = ecx

; 92   : 		RenderOTW *GetRendOTW() { return(rendOTW_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ENDP	; C_3dViewer::GetRendOTW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??0C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0C_3dViewer@@QAE@XZ PROC				; C_3dViewer::C_3dViewer, COMDAT
; _this$ = ecx

; 37   : 		C_3dViewer()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		{
; 39   : 			rend3d_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 			rendOTW_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 41   : 			viewPoint_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 42   : 			objects_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 43   : 			l=-1.0f; t=1.0f;r=1.0f;b=-1.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+132], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+136], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+140], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+144], xmm0

; 44   : 			viewPos_.x=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+24], xmm0

; 45   : 			viewPos_.y=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0

; 46   : 			viewPos_.z=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+32], xmm0

; 47   : 			zeroPos_=viewPos_;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 48   : 			currentPos_=viewPos_;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 49   : 			CameraPos_=viewPos_;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx

; 50   : 			currentRot_=IMatrix;

	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 60					; 0000003cH
	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	rep movsd

; 51   : 			CameraHeading_=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+104], xmm0

; 52   : 			CameraPitch_=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+108], xmm0

; 53   : 			CameraRoll_=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+112], xmm0

; 54   : 			ViewDistance_=10.0f * FEET_PER_KM;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@47001fcd
	movss	DWORD PTR [edx+116], xmm0

; 55   : 			Time_=12l * 60l * 60l * 1000l;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 43200000		; 02932e00H

; 56   : 			MinTexture_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 57   : 			MaxTexture_=1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 1

; 58   : 			Weather_=0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+156], xmm0

; 59   : //			TextureLevel_=2;
; 60   : //			SmoothShading_=TRUE;
; 61   : 			sw=800; sh=600;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [ecx+148], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [edx+152], xmm0

; 62   : 			LockOnView_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0

; 63   : 			m_pImgGray = NULL;	// OW

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 0

; 64   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?GetTeamNo@GlobalPositioningSystem@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTeamNo@GlobalPositioningSystem@@QAEJXZ PROC		; GlobalPositioningSystem::GetTeamNo, COMDAT
; _this$ = ecx

; 77   : 		long GetTeamNo()						{ return(TeamNo_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeamNo@GlobalPositioningSystem@@QAEJXZ ENDP		; GlobalPositioningSystem::GetTeamNo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetFeatureID@C_Feature@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetFeatureID@C_Feature@@QAEXJ@Z PROC			; C_Feature::SetFeatureID, COMDAT
; _this$ = ecx

; 88   : 		void SetFeatureID(long id) { featureID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+108], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFeatureID@C_Feature@@QAEXJ@Z ENDP			; C_Feature::SetFeatureID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetVUID@C_Feature@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Feature@@QAEXVVU_ID@@@Z PROC			; C_Feature::SetVUID, COMDAT
; _this$ = ecx

; 86   : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+136], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+140], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Feature@@QAEXVVU_ID@@@Z ENDP			; C_Feature::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetFeatureValue@C_Feature@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 1
?SetFeatureValue@C_Feature@@QAEXE@Z PROC		; C_Feature::SetFeatureValue, COMDAT
; _this$ = ecx

; 68   : 		void SetFeatureValue(uchar s)					{ FeatureValue_=s; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _s$[ebp]
	mov	BYTE PTR [eax+107], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFeatureValue@C_Feature@@QAEXE@Z ENDP		; C_Feature::SetFeatureValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetColor@C_Feature@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_off$ = 8						; size = 4
_on$ = 12						; size = 4
?SetColor@C_Feature@@QAEXKK@Z PROC			; C_Feature::SetColor, COMDAT
; _this$ = ecx

; 63   : 		void SetColor(COLORREF off,COLORREF on)			{ Color_[0]=off; Color_[1]=on; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _off$[ebp]
	mov	DWORD PTR [ecx+eax+124], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _on$[ebp]
	mov	DWORD PTR [ecx+eax+124], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetColor@C_Feature@@QAEXKK@Z ENDP			; C_Feature::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetValue@C_Feature@@QAEXFFJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_ID$ = 16						; size = 4
?SetValue@C_Feature@@QAEXFFJ@Z PROC			; C_Feature::SetValue, COMDAT
; _this$ = ecx

; 50   : 		void SetValue(short x,short y,long ID)			{ if(Value_ && gStringMgr) { Value_->SetXY(x,y); Value_->SetText(gStringMgr->GetString(ID)); Value_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN2@SetValue
	cmp	DWORD PTR ?gStringMgr@@3PAVC_String@@A, 0 ; gStringMgr
	je	SHORT $LN2@SetValue
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetValue:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetValue@C_Feature@@QAEXFFJ@Z ENDP			; C_Feature::SetValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetStatus@C_Feature@@QAEXFFJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_ID$ = 16						; size = 4
?SetStatus@C_Feature@@QAEXFFJ@Z PROC			; C_Feature::SetStatus, COMDAT
; _this$ = ecx

; 48   : 		void SetStatus(short x,short y,long ID)			{ if(Status_ && gStringMgr) { Status_->SetXY(x,y); Status_->SetText(gStringMgr->GetString(ID)); Status_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN2@SetStatus
	cmp	DWORD PTR ?gStringMgr@@3PAVC_String@@A, 0 ; gStringMgr
	je	SHORT $LN2@SetStatus
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetStatus:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetStatus@C_Feature@@QAEXFFJ@Z ENDP			; C_Feature::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetName@C_Feature@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetName@C_Feature@@QAEXFFPAD@Z PROC			; C_Feature::SetName, COMDAT
; _this$ = ecx

; 47   : 		void SetName(short x,short y,_TCHAR *str)		{ if(Name_) { Name_->SetXY(x,y); Name_->SetText(str); Name_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN2@SetName
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetName:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetName@C_Feature@@QAEXFFPAD@Z ENDP			; C_Feature::SetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cfeature.h
;	COMDAT ?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_limb$ = 8						; size = 4
?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z PROC		; C_Feature::SetOwner, COMDAT
; _this$ = ecx

; 43   : 		void SetOwner(TREELIST *limb)					{ Owner_=limb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limb$[ebp]
	mov	DWORD PTR [eax+132], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_Feature@@QAEXPAVTREELIST@@@Z ENDP		; C_Feature::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ PROC			; C_Entity::GetVUID, COMDAT
; _this$ = ecx

; 86   : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	mov	edx, DWORD PTR [eax+180]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Entity@@QAE?AVVU_ID@@XZ ENDP			; C_Entity::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetVUID@C_Entity@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Entity@@QAEXVVU_ID@@@Z PROC			; C_Entity::SetVUID, COMDAT
; _this$ = ecx

; 85   : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+176], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+180], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Entity@@QAEXVVU_ID@@@Z ENDP			; C_Entity::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetOperational@C_Entity@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOperational@C_Entity@@QAEEXZ PROC			; C_Entity::GetOperational, COMDAT
; _this$ = ecx

; 67   : 		uchar GetOperational()							{ return(Operational_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+110]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOperational@C_Entity@@QAEEXZ ENDP			; C_Entity::GetOperational
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetOperational@C_Entity@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 1
?SetOperational@C_Entity@@QAEXE@Z PROC			; C_Entity::SetOperational, COMDAT
; _this$ = ecx

; 66   : 		void SetOperational(uchar s)					{ Operational_=s; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _s$[ebp]
	mov	BYTE PTR [eax+110], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOperational@C_Entity@@QAEXE@Z ENDP			; C_Entity::SetOperational
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetStatus@C_Entity@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetStatus@C_Entity@@QAEXFFPAD@Z PROC			; C_Entity::SetStatus, COMDAT
; _this$ = ecx

; 54   : 		void SetStatus(short x,short y,_TCHAR *str)			{ if(Status_) { Status_->SetXY(x,y); Status_->SetText(str); Status_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN2@SetStatus
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+168]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetStatus:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetStatus@C_Entity@@QAEXFFPAD@Z ENDP			; C_Entity::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetName@C_Entity@@QAEXFFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_str$ = 16						; size = 4
?SetName@C_Entity@@QAEXFFPAD@Z PROC			; C_Entity::SetName, COMDAT
; _this$ = ecx

; 53   : 		void SetName(short x,short y,_TCHAR *str)			{ if(Name_) { Name_->SetXY(x,y); Name_->SetText(str); Name_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+164], 0
	je	SHORT $LN2@SetName
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+164]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetName:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetName@C_Entity@@QAEXFFPAD@Z ENDP			; C_Entity::SetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_Image$ = 16						; size = 4
?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z PROC		; C_Entity::SetIcon, COMDAT
; _this$ = ecx

; 52   : 		void SetIcon(short x,short y,IMAGE_RSC *Image)		{ if(Icon_) { Icon_->SetXY(x,y); Icon_->SetImage(Image); Icon_->SetInfo(); } }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 0
	je	SHORT $LN2@SetIcon
	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movsx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
	mov	ecx, DWORD PTR _Image$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	call	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z ; O_Output::SetImage
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@SetIcon:
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIcon@C_Entity@@QAEXFFPAVIMAGE_RSC@@@Z ENDP		; C_Entity::SetIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ PROC		; C_Entity::GetOwner, COMDAT
; _this$ = ecx

; 46   : 		TREELIST *GetOwner()							{ return(Owner_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+172]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@C_Entity@@QAEPAVTREELIST@@XZ ENDP		; C_Entity::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\centity.h
;	COMDAT ?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_limb$ = 8						; size = 4
?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z PROC		; C_Entity::SetOwner, COMDAT
; _this$ = ecx

; 45   : 		void SetOwner(TREELIST *limb)					{ Owner_=limb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limb$[ebp]
	mov	DWORD PTR [eax+172], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_Entity@@QAEXPAVTREELIST@@@Z ENDP		; C_Entity::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetXY@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@O_Output@@QAEXJJ@Z PROC				; O_Output::SetXY, COMDAT
; _this$ = ecx

; 118  : 		void SetXY(long x,long y)				{ origx_ = x; origy_ = y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\device.h
;	COMDAT ?IsHardware@DisplayDevice@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsHardware@DisplayDevice@@QAEHXZ PROC			; DisplayDevice::IsHardware, COMDAT
; _this$ = ecx

; 24   : 	BOOL			IsHardware( void )				{ ShiAssert(IsReady());  return m_DXCtx->m_eDeviceCategory > DXContext::D3DDeviceCategory_Software; };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+60], 1
	jle	SHORT $LN3@IsHardware
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsHardware
$LN3@IsHardware:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsHardware:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsHardware@DisplayDevice@@QAEHXZ ENDP			; DisplayDevice::IsHardware
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNumVehicles@UnitClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vg$ = 8						; size = 4
?GetNumVehicles@UnitClass@@QAEHH@Z PROC			; UnitClass::GetNumVehicles, COMDAT
; _this$ = ecx

; 365  : 	int GetNumVehicles (int vg)						{ return (int)((roster >> (vg*2)) & 0x03); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _vg$[ebp]
	shl	ecx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	sar	eax, cl
	and	eax, 3
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumVehicles@UnitClass@@QAEHH@Z ENDP			; UnitClass::GetNumVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0SimInitDataClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SimInitDataClass@@QAE@XZ PROC			; SimInitDataClass::SimInitDataClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SimInitDataClass@@QAE@XZ ENDP			; SimInitDataClass::SimInitDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?GetObjectiveStatus@ObjectiveClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ PROC		; ObjectiveClass::GetObjectiveStatus, COMDAT
; _this$ = ecx

; 270  : 	uchar GetObjectiveStatus (void)							{	return obj_data.status; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+199]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ENDP		; ObjectiveClass::GetObjectiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetIdentified@CampBaseClass@@QAEHE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?GetIdentified@CampBaseClass@@QAEHE@Z PROC		; CampBaseClass::GetIdentified, COMDAT
; _this$ = ecx

; 294  : 	int GetIdentified (Team t)					{   return (spotted >> (t + 8)) & 0x01; } // 2002-02-11 ADDED BY S.G. Getter to know if the target is identified or not.

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+148]
	movzx	ecx, BYTE PTR _t$[ebp]
	add	ecx, 8
	sar	eax, cl
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?GetIdentified@CampBaseClass@@QAEHE@Z ENDP		; CampBaseClass::GetIdentified
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetType, COMDAT
; _this$ = ecx

; 289  : 	uchar GetType()	const						{	return (EntityType())->classInfo_[VU_TYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetColor@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColor@TeamClass@@QAEHXZ PROC			; TeamClass::GetColor, COMDAT
; _this$ = ecx

; 329  : 	int GetColor (void)							{ return (int) teamColor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+889]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColor@TeamClass@@QAEHXZ ENDP			; TeamClass::GetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZPos@VuEntity@@QBEMXZ PROC				; VuEntity::ZPos, COMDAT
; _this$ = ecx

; 160  : 	BIG_SCALAR ZPos()	const { return pos_.z_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZPos@VuEntity@@QBEMXZ ENDP				; VuEntity::ZPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawbsp.h
;	COMDAT ?SetTextureSet@DrawableBSP@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set$ = 8						; size = 4
?SetTextureSet@DrawableBSP@@QAEXK@Z PROC		; DrawableBSP::SetTextureSet, COMDAT
; _this$ = ecx

; 49   : 	void SetTextureSet( UInt32 set )	{ instance.SetTextureSet( set ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?SetTextureSet@ObjectInstance@@QAEXH@Z	; ObjectInstance::SetTextureSet
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTextureSet@DrawableBSP@@QAEXK@Z ENDP		; DrawableBSP::SetTextureSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?GetPosition@DrawableObject@@QAEXPAUTpoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?GetPosition@DrawableObject@@QAEXPAUTpoint@@@Z PROC	; DrawableObject::GetPosition, COMDAT
; _this$ = ecx

; 28   : 	void GetPosition(Tpoint* pos){ *pos = position; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPosition@DrawableObject@@QAEXPAUTpoint@@@Z ENDP	; DrawableObject::GetPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ?SetFilteringMode@RenderOTW@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetFilteringMode@RenderOTW@@QAEXH@Z PROC		; RenderOTW::SetFilteringMode, COMDAT
; _this$ = ecx

; 140  : 	void SetFilteringMode( BOOL state )			{ filtering = state; SetupStates(); };	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+263104], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupStates@RenderOTW@@IAEXXZ		; RenderOTW::SetupStates
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFilteringMode@RenderOTW@@QAEXH@Z ENDP		; RenderOTW::SetFilteringMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ?SetDitheringMode@RenderOTW@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetDitheringMode@RenderOTW@@QAEXH@Z PROC		; RenderOTW::SetDitheringMode, COMDAT
; _this$ = ecx

; 137  : 	void SetDitheringMode( BOOL state )			{ dithered = state; SetupStates(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+263092], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupStates@RenderOTW@@IAEXXZ		; RenderOTW::SetupStates
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDitheringMode@RenderOTW@@QAEXH@Z ENDP		; RenderOTW::SetDitheringMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ?SetHazeMode@RenderOTW@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetHazeMode@RenderOTW@@QAEXH@Z PROC			; RenderOTW::SetHazeMode, COMDAT
; _this$ = ecx

; 122  : 	void SetHazeMode( BOOL state )				{ hazed = state; SetupStates(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+263096], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupStates@RenderOTW@@IAEXXZ		; RenderOTW::SetupStates
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHazeMode@RenderOTW@@QAEXH@Z ENDP			; RenderOTW::SetHazeMode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
