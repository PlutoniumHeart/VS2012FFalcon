; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\common\units.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?gDragWPNum@@3HA				; gDragWPNum
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?ratingstr@@3PAJA				; ratingstr
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
_BSS	SEGMENT
?gDragWPNum@@3HA DD 01H DUP (?)				; gDragWPNum
_priorpilot DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
_DATA	SEGMENT
?ratingstr@@3PAJA DD 0126H				; ratingstr
	DD	0127H
	DD	0128H
	DD	0129H
	DD	012aH
_DATA	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	?SetYPR@VuEntity@@QAEXMMM@Z			; VuEntity::SetYPR
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	__tcschr
PUBLIC	__tcsicmp
PUBLIC	__tcsncicmp
PUBLIC	__tcsclen
PUBLIC	?_tcschr@@YAPADPADI@Z				; _tcschr
PUBLIC	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
PUBLIC	?GetPictureResource@LogBookData@@QAEJXZ		; LogBookData::GetPictureResource
PUBLIC	?Commissioned@LogBookData@@QAEPADXZ		; LogBookData::Commissioned
PUBLIC	?FlightHours@LogBookData@@QAEMXZ		; LogBookData::FlightHours
PUBLIC	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
PUBLIC	?GetPlayerName@FalconSessionEntity@@QAEPADXZ	; FalconSessionEntity::GetPlayerName
PUBLIC	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
PUBLIC	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
PUBLIC	?GetCountry@FalconSessionEntity@@QBEEXZ		; FalconSessionEntity::GetCountry
PUBLIC	?GetKill@FalconSessionEntity@@QBEGG@Z		; FalconSessionEntity::GetKill
PUBLIC	?GetMissions@FalconSessionEntity@@QBEGXZ	; FalconSessionEntity::GetMissions
PUBLIC	?GetRating@FalconSessionEntity@@QBEEXZ		; FalconSessionEntity::GetRating
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?SetWPFlags@WayPointClass@@QAEXK@Z		; WayPointClass::SetWPFlags
PUBLIC	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetWPFlags@WayPointClass@@QAEKXZ		; WayPointClass::GetWPFlags
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetPrevWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetPrevWP
PUBLIC	?SetWPSpeed@WayPointClass@@QAEXM@Z		; WayPointClass::SetWPSpeed
PUBLIC	?GetWPSpeed@WayPointClass@@QAEMXZ		; WayPointClass::GetWPSpeed
PUBLIC	?GetWPAltitude@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAltitude
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	?GetWPDepartureTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPDepartureTime
PUBLIC	?GetWPLocation@WayPointClass@@QBEXPAF0@Z	; WayPointClass::GetWPLocation
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?SetUnitAltitude@UnitClass@@QAEXH@Z		; UnitClass::SetUnitAltitude
PUBLIC	?SetUnitDestination@UnitClass@@QAEXFF@Z		; UnitClass::SetUnitDestination
PUBLIC	?GetNumVehicles@UnitClass@@QAEHH@Z		; UnitClass::GetNumVehicles
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?GetFlag@TeamClass@@QAEHXZ			; TeamClass::GetFlag
PUBLIC	?GetPilotSkill@PilotClass@@QAEHXZ		; PilotClass::GetPilotSkill
PUBLIC	?GetPilotRating@PilotClass@@QAEHXZ		; PilotClass::GetPilotRating
PUBLIC	?GetRating@SquadronClass@@QAEEH@Z		; SquadronClass::GetRating
PUBLIC	?GetAAKills@SquadronClass@@QAEFXZ		; SquadronClass::GetAAKills
PUBLIC	?GetAGKills@SquadronClass@@QAEFXZ		; SquadronClass::GetAGKills
PUBLIC	?GetASKills@SquadronClass@@QAEFXZ		; SquadronClass::GetASKills
PUBLIC	?GetANKills@SquadronClass@@QAEFXZ		; SquadronClass::GetANKills
PUBLIC	?GetMissionsFlown@SquadronClass@@QAEFXZ		; SquadronClass::GetMissionsFlown
PUBLIC	?GetTotalLosses@SquadronClass@@QAEEXZ		; SquadronClass::GetTotalLosses
PUBLIC	?GetPilotLosses@SquadronClass@@QAEEXZ		; SquadronClass::GetPilotLosses
PUBLIC	?GetPatchID@SquadronClass@@QAEEXZ		; SquadronClass::GetPatchID
PUBLIC	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetXY@O_Output@@QAEXJJ@Z			; O_Output::SetXY
PUBLIC	?SetFlags@O_Output@@QAEXJ@Z			; O_Output::SetFlags
PUBLIC	?SetFont@O_Output@@QAEXJ@Z			; O_Output::SetFont
PUBLIC	?SetFgColor@O_Output@@QAEXK@Z			; O_Output::SetFgColor
PUBLIC	?GetFlags@O_Output@@QAEJXZ			; O_Output::GetFlags
PUBLIC	?GetText@O_Output@@QAEPADXZ			; O_Output::GetText
PUBLIC	?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ		; O_Output::GetImage
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetText@C_ListBox@@QAEPADXZ			; C_ListBox::GetText
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ		; C_Map::GetCurWP
PUBLIC	?GetMaxY@C_Map@@QAEMXZ				; C_Map::GetMaxY
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z	; AddVehiclesToWindow
PUBLIC	?SetupUnitInfoWindow@@YAXVVU_ID@@@Z		; SetupUnitInfoWindow
PUBLIC	?SetupDivisionInfoWindow@@YAXJF@Z		; SetupDivisionInfoWindow
PUBLIC	?PickPilotCB@@YAXJFPAVC_Base@@@Z		; PickPilotCB
PUBLIC	?GetRank@@YAJPAD@Z				; GetRank
PUBLIC	?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z ; BuildPilotList
PUBLIC	?PickSquadronStatsCB@@YAXJFPAVC_Base@@@Z	; PickSquadronStatsCB
PUBLIC	?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z		; SquadronAirUnitCB
PUBLIC	?PilotAirUnitCB@@YAXJFPAVC_Base@@@Z		; PilotAirUnitCB
PUBLIC	?SquadronFindCB@@YAXJFPAVC_Base@@@Z		; SquadronFindCB
PUBLIC	?SortPilotByNameCB@@YAHPAVTREELIST@@0@Z		; SortPilotByNameCB
PUBLIC	?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z		; SetupSquadronInfoWindow
PUBLIC	?UpdateSierraHotel@@YAXXZ			; UpdateSierraHotel
PUBLIC	?GetWayPointUnder@@YAPAVWayPointClass@@PAVUnitClass@@@Z ; GetWayPointUnder
PUBLIC	?UnitCB@@YAXJFPAVC_Base@@@Z			; UnitCB
PUBLIC	?fixup_unit@@YAXPAVUnitClass@@@Z		; fixup_unit
PUBLIC	?fixup_unit_starting_positions@@YAXXZ		; fixup_unit_starting_positions
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?gLastSquadron@@3VVU_ID@@A			; gLastSquadron
PUBLIC	??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_03NLJIHOMM@?5?9?5?$AA@			; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_03GNGPFOOL@?$CF1d?$AA@			; `string'
PUBLIC	??_C@_07LMLJGMAE@Area?551?$AA@			; `string'
PUBLIC	??_C@_04DIDHKLLF@?$CF1ld?$AA@			; `string'
PUBLIC	??_C@_04GGBPDDBN@?$CF?41f?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@41c80000
PUBLIC	__real@bf800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_sprintf:PROC
EXTRN	?SetPosition@VuEntity@@QAEXMMM@Z:PROC		; VuEntity::SetPosition
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z:PROC ; VuSessionsIterator::VuSessionsIterator
EXTRN	??1VuSessionsIterator@@UAE@XZ:PROC		; VuSessionsIterator::~VuSessionsIterator
EXTRN	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetFirst
EXTRN	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetNext
EXTRN	__mbschr:PROC
EXTRN	__mbsicmp:PROC
EXTRN	__mbslen:PROC
EXTRN	__mbsnicmp:PROC
EXTRN	?GetTeam@@YAEE@Z:PROC				; GetTeam
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	??0WayPointClass@@QAE@FFHHKKEH@Z:PROC		; WayPointClass::WayPointClass
EXTRN	?InsertWP@WayPointClass@@QAEXPAV1@@Z:PROC	; WayPointClass::InsertWP
EXTRN	?SetWPLocation@WayPointClass@@QAEXFF@Z:PROC	; WayPointClass::SetWPLocation
EXTRN	?MakeCampBaseDirty@CampBaseClass@@QAEXW4Dirty_Campaign_Base@@W4Dirtyness@@@Z:PROC ; CampBaseClass::MakeCampBaseDirty
EXTRN	?SetLocation@CampBaseClass@@QAEXFF@Z:PROC	; CampBaseClass::SetLocation
EXTRN	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z:PROC ; GetVehicleClassData
EXTRN	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z:PROC	; UnitClass::SetCargoId
EXTRN	?SetInactive@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetInactive
EXTRN	?GetVehicleID@UnitClass@@QAEFH@Z:PROC		; UnitClass::GetVehicleID
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetFullstrengthVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetFullstrengthVehicles
EXTRN	?GetRClass@UnitClass@@QAEHXZ:PROC		; UnitClass::GetRClass
EXTRN	?GetUnitFormation@UnitClass@@QBEHXZ:PROC	; UnitClass::GetUnitFormation
EXTRN	?LoadUnit@UnitClass@@QAEXPAV1@@Z:PROC		; UnitClass::LoadUnit
EXTRN	?UnloadUnit@UnitClass@@QAEXXZ:PROC		; UnitClass::UnloadUnit
EXTRN	?GetUnitSupplyTime@UnitClass@@QAEKXZ:PROC	; UnitClass::GetUnitSupplyTime
EXTRN	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ:PROC ; UnitClass::GetCurrentUnitWP
EXTRN	?SetCurrentUnitWP@UnitClass@@QAEXPAVWayPointClass@@@Z:PROC ; UnitClass::SetCurrentUnitWP
EXTRN	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetFirstUnit
EXTRN	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetNextUnit
EXTRN	?GetName@TeamClass@@QAEPADXZ:PROC		; TeamClass::GetName
EXTRN	?GetTimeString@@YAPADKQADH@Z:PROC		; GetTimeString
EXTRN	?AngleTo@@YAMFFFF@Z:PROC			; AngleTo
EXTRN	?DirectionTo@@YAEFFFF@Z:PROC			; DirectionTo
EXTRN	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z:PROC ; GetEntityByCampID
EXTRN	?SimToGrid@@YAFM@Z:PROC				; SimToGrid
EXTRN	?GetPilotName@@YAXHPADH@Z:PROC			; GetPilotName
EXTRN	?SetLastDirection@FlightClass@@QAEXE@Z:PROC	; FlightClass::SetLastDirection
EXTRN	?NumActivePilots@SquadronClass@@QAEHXZ:PROC	; SquadronClass::NumActivePilots
EXTRN	?GetName@DivisionClass@@QAEPADPADHH@Z:PROC	; DivisionClass::GetName
EXTRN	?GetFirstUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ:PROC ; DivisionClass::GetFirstUnitElement
EXTRN	?GetNextUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ:PROC ; DivisionClass::GetNextUnitElement
EXTRN	?GetFirstDivisionByCountry@@YAPAVDivisionClass@@H@Z:PROC ; GetFirstDivisionByCountry
EXTRN	?GetNextDivisionByCountry@@YAPAVDivisionClass@@PAV1@H@Z:PROC ; GetNextDivisionByCountry
EXTRN	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z:PROC ; GetDivisionByUnit
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?SetInfo@O_Output@@QAEXXZ:PROC			; O_Output::SetInfo
EXTRN	?SetText@O_Output@@QAEXPAD@Z:PROC		; O_Output::SetText
EXTRN	?SetTextWidth@O_Output@@QAEXJ@Z:PROC		; O_Output::SetTextWidth
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetImage@C_Bitmap@@QAEXJ@Z:PROC		; C_Bitmap::SetImage
EXTRN	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z:PROC	; C_Bitmap::SetImage
EXTRN	??0C_Button@@QAE@XZ:PROC			; C_Button::C_Button
EXTRN	?Setup@C_Button@@QAEXJFJJ@Z:PROC		; C_Button::Setup
EXTRN	?SetColor@C_Button@@QAEXFK@Z:PROC		; C_Button::SetColor
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?GetText@C_Button@@QAEPADF@Z:PROC		; C_Button::GetText
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	??0C_Text@@QAE@XZ:PROC				; C_Text::C_Text
EXTRN	?SetFixedWidth@C_Text@@QAEXJ@Z:PROC		; C_Text::SetFixedWidth
EXTRN	??0C_Custom@@QAE@XZ:PROC			; C_Custom::C_Custom
EXTRN	?Setup@C_Custom@@QAEXJFF@Z:PROC			; C_Custom::Setup
EXTRN	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z:PROC	; C_Custom::GetItem
EXTRN	?SetValue@C_Custom@@QAEXJJ@Z:PROC		; C_Custom::SetValue
EXTRN	?GetValue@C_Custom@@QAEJJ@Z:PROC		; C_Custom::GetValue
EXTRN	?ScanClientArea@C_Window@@QAEXJ@Z:PROC		; C_Window::ScanClientArea
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?EnableCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::EnableCluster
EXTRN	?DisableCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::DisableCluster
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z:PROC	; C_MapIcon::FindID
EXTRN	?UpdateInfo@C_Waypoint@@QAEHJMM@Z:PROC		; C_Waypoint::UpdateInfo
EXTRN	?get_first_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ:PROC ; tactical_mission::get_first_unfiltered_victory_condition
EXTRN	?get_next_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ:PROC ; tactical_mission::get_next_unfiltered_victory_condition
EXTRN	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z:PROC ; C_Map::SetCurrentWaypointList
EXTRN	?UpdateVC@C_Map@@QAEXPAVvictory_condition@@@Z:PROC ; C_Map::UpdateVC
EXTRN	?Find@GlobalPositioningSystem@@QAEPAXJ@Z:PROC	; GlobalPositioningSystem::Find
EXTRN	?GetRemoteLB@UIComms@@QAEPAXJ@Z:PROC		; UIComms::GetRemoteLB
EXTRN	?DeleteGroupList@@YAXJ@Z:PROC			; DeleteGroupList
EXTRN	?AddCommas@@YAPADPAD@Z:PROC			; AddCommas
EXTRN	?SetupFlightSpecificControls@@YAXPAVFlightClass@@@Z:PROC ; SetupFlightSpecificControls
EXTRN	?recalculate_waypoints@@YAXPAVWayPointClass@@@Z:PROC ; recalculate_waypoints
EXTRN	?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z:PROC ; tactical_set_orders
EXTRN	?FindMapIcon@@YAXJ@Z:PROC			; FindMapIcon
EXTRN	?ForeignToUpper@@YAXPAD@Z:PROC			; ForeignToUpper
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?DDP@@3PAUDirtyDataClassType@@A:DWORD		; DDP
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AllRealList@@3PAVVuLinkedList@@A:DWORD		; AllRealList
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?PilotInfo@@3PAVPilotInfoClass@@A:DWORD		; PilotInfo
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?PilotImageIDs@@3PAJA:BYTE			; PilotImageIDs
EXTRN	?FlagImageID@@3PAY04JA:BYTE			; FlagImageID
EXTRN	?SquadronMatchIDs@@3PAY01JA:BYTE		; SquadronMatchIDs
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?current_tactical_mission@@3PAVtactical_mission@@A:DWORD ; current_tactical_mission
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	?gGps@@3PAVGlobalPositioningSystem@@A:DWORD	; gGps
EXTRN	?gActiveFlightID@@3VVU_ID@@A:QWORD		; gActiveFlightID
EXTRN	?gLoadoutFlightID@@3VVU_ID@@A:QWORD		; gLoadoutFlightID
EXTRN	?gSelectedFlightID@@3VVU_ID@@A:QWORD		; gSelectedFlightID
EXTRN	?gRanksTxt@@3PAJA:BYTE				; gRanksTxt
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_VehList DD	0200H DUP (?)
_Count	DW	01H DUP (?)
	ALIGN	8

?gLastSquadron@@3VVU_ID@@A DQ 01H DUP (?)		; gLastSquadron
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGBPDDBN@?$CF?41f?$AA@
CONST	SEGMENT
??_C@_04GGBPDDBN@?$CF?41f?$AA@ DB '%.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DIDHKLLF@?$CF1ld?$AA@
CONST	SEGMENT
??_C@_04DIDHKLLF@?$CF1ld?$AA@ DB '%1ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LMLJGMAE@Area?551?$AA@
CONST	SEGMENT
??_C@_07LMLJGMAE@Area?551?$AA@ DB 'Area 51', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GNGPFOOL@?$CF1d?$AA@
CONST	SEGMENT
??_C@_03GNGPFOOL@?$CF1d?$AA@ DB '%1d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLJIHOMM@?5?9?5?$AA@
CONST	SEGMENT
??_C@_03NLJIHOMM@?5?9?5?$AA@ DB ' - ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@ DB '%1ld %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?fixup_unit_starting_positions@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fixup_unit_starting_positions@@YAXXZ$0
__unwindtable$?UnitCB@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnitCB@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z$0
__unwindtable$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z$1
__unwindtable$?UpdateSierraHotel@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateSierraHotel@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateSierraHotel@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateSierraHotel@@YAXXZ$2
__unwindtable$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$2
__ehfuncinfo$?fixup_unit_starting_positions@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?fixup_unit_starting_positions@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UnitCB@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnitCB@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UpdateSierraHotel@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UpdateSierraHotel@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gLastSquadron$initializer$ DD FLAT:??__EgLastSquadron@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_iter$ = -32						; size = 12
_vc$ = -20						; size = 4
_unit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?fixup_unit_starting_positions@@YAXXZ PROC		; fixup_unit_starting_positions

; 1992 : void fixup_unit_starting_positions (void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fixup_unit_starting_positions@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1993 : 	VuListIterator		iter (AllRealList);

	mov	eax, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1994 : 	UnitClass			*unit;
; 1995 : 	victory_condition	*vc;
; 1996 : 
; 1997 : 	unit = GetFirstUnit (&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax
$LN5@fixup_unit:

; 1998 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	SHORT $LN4@fixup_unit

; 1999 : 	{
; 2000 : 		fixup_unit(unit);

	mov	edx, DWORD PTR _unit$[ebp]
	push	edx
	call	?fixup_unit@@YAXPAVUnitClass@@@Z	; fixup_unit
	add	esp, 4

; 2001 : 		unit = GetNextUnit (&iter);

	lea	eax, DWORD PTR _iter$[ebp]
	push	eax
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2002 : 	}

	jmp	SHORT $LN5@fixup_unit
$LN4@fixup_unit:

; 2003 : 
; 2004 : 	if (gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN3@fixup_unit

; 2005 : 	{
; 2006 : 		vc = current_tactical_mission->get_first_unfiltered_victory_condition ();

	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?get_first_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_first_unfiltered_victory_condition
	mov	DWORD PTR _vc$[ebp], eax
$LN2@fixup_unit:

; 2007 : 
; 2008 : 		while (vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN3@fixup_unit

; 2009 : 		{
; 2010 : 			gMapMgr->UpdateVC (vc);

	mov	ecx, DWORD PTR _vc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?UpdateVC@C_Map@@QAEXPAVvictory_condition@@@Z ; C_Map::UpdateVC

; 2011 : 			vc = current_tactical_mission->get_next_unfiltered_victory_condition ();

	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?get_next_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_next_unfiltered_victory_condition
	mov	DWORD PTR _vc$[ebp], eax

; 2012 : 		}

	jmp	SHORT $LN2@fixup_unit
$LN3@fixup_unit:

; 2013 : 	}
; 2014 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?fixup_unit_starting_positions@@YAXXZ$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?fixup_unit_starting_positions@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fixup_unit_starting_positions@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?fixup_unit_starting_positions@@YAXXZ ENDP		; fixup_unit_starting_positions
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T1 = -108						; size = 8
$T2 = -100						; size = 8
$T3 = -92						; size = 8
$T4 = -84						; size = 8
_z$ = -76						; size = 4
_heading$ = -72						; size = 4
_current_time$ = -68					; size = 4
_dt$ = -64						; size = 4
_ndt$ = -60						; size = 4
_cargo$5 = -56						; size = 4
_cargo$6 = -52						; size = 4
_cargo$7 = -48						; size = 4
_pwp$ = -44						; size = 4
_wp$ = -40						; size = 4
_dx$ = -36						; size = 2
_dy$ = -32						; size = 2
_pwx$ = -28						; size = 2
_pwy$ = -24						; size = 2
_wx$ = -20						; size = 2
_wy$ = -16						; size = 2
_x$ = -12						; size = 2
_y$ = -8						; size = 2
_h$ = -1						; size = 1
_unit$ = 8						; size = 4
?fixup_unit@@YAXPAVUnitClass@@@Z PROC			; fixup_unit

; 1882 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	esi

; 1883 : 	WayPointClass		*wp,*pwp;
; 1884 : 	CampaignHeading		h;
; 1885 : 	GridIndex			x,y,dx,dy,wx,wy,pwx,pwy;
; 1886 : 	int					z,ndt,dt;
; 1887 : 	CampaignTime		current_time;
; 1888 : 	float				heading;
; 1889 : 
; 1890 : 	current_time = TheCampaign.CurrentTime;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR _current_time$[ebp], eax

; 1891 : 
; 1892 : 	wp = unit->GetFirstUnitWP();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax
$LN20@fixup_unit:

; 1893 : 	while (wp && (wp->GetWPDepartureTime() < current_time) && wp->GetWPAction() != WP_LAND)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN19@fixup_unit
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	cmp	eax, DWORD PTR _current_time$[ebp]
	jae	$LN19@fixup_unit
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 7
	je	$LN19@fixup_unit

; 1894 : 		{
; 1895 : 		// Some special case stuff for air mobile
; 1896 : 		if (wp->GetWPAction() == WP_PICKUP)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 6
	jne	SHORT $LN18@fixup_unit

; 1897 : 			{
; 1898 : 			// Load the airborne battalion.
; 1899 : 			Unit	cargo = (Unit) wp->GetWPTarget();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	mov	DWORD PTR _cargo$7[ebp], eax

; 1900 : 			if (cargo)

	cmp	DWORD PTR _cargo$7[ebp], 0
	je	SHORT $LN17@fixup_unit

; 1901 : 				{
; 1902 : 				unit->SetCargoId(cargo->Id());

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cargo$7[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z	; UnitClass::SetCargoId

; 1903 : 				cargo->SetCargoId(unit->Id());

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _cargo$7[ebp]
	call	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z	; UnitClass::SetCargoId

; 1904 : 				cargo->SetInactive(1);

	push	1
	mov	ecx, DWORD PTR _cargo$7[ebp]
	call	?SetInactive@UnitClass@@QAEXH@Z		; UnitClass::SetInactive
$LN17@fixup_unit:

; 1905 : 				}
; 1906 : 			unit->LoadUnit(cargo);

	mov	ecx, DWORD PTR _cargo$7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?LoadUnit@UnitClass@@QAEXPAV1@@Z	; UnitClass::LoadUnit
	jmp	SHORT $LN14@fixup_unit
$LN18@fixup_unit:

; 1907 : 			}
; 1908 : 		else if (wp->GetWPAction() == WP_AIRDROP)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 25					; 00000019H
	jne	SHORT $LN14@fixup_unit

; 1909 : 			{
; 1910 : 			// Unload the airborne battalion.
; 1911 : 			Unit	cargo = (Unit) wp->GetWPTarget();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	mov	DWORD PTR _cargo$5[ebp], eax

; 1912 : 			unit->UnloadUnit();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?UnloadUnit@UnitClass@@QAEXXZ		; UnitClass::UnloadUnit

; 1913 : 			if (cargo)

	cmp	DWORD PTR _cargo$5[ebp], 0
	je	SHORT $LN14@fixup_unit

; 1914 : 				{
; 1915 : 				cargo->SetCargoId(FalconNullId);

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR _cargo$5[ebp]
	call	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z	; UnitClass::SetCargoId

; 1916 : 				cargo->SetInactive(0);

	push	0
	mov	ecx, DWORD PTR _cargo$5[ebp]
	call	?SetInactive@UnitClass@@QAEXH@Z		; UnitClass::SetInactive

; 1917 : 				wp->GetWPLocation(&x,&y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1918 : 				cargo->SetLocation(x,y);

	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cargo$5[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation
$LN14@fixup_unit:

; 1919 : 				}
; 1920 : 			}
; 1921 : 		wp = wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 1922 : 		}

	jmp	$LN20@fixup_unit
$LN19@fixup_unit:

; 1923 : 
; 1924 : 	if (wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN5@fixup_unit

; 1925 : 		{
; 1926 : 		unit->SetCurrentUnitWP(wp);

	mov	edx, DWORD PTR _wp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetCurrentUnitWP@UnitClass@@QAEXPAVWayPointClass@@@Z ; UnitClass::SetCurrentUnitWP

; 1927 : 		pwp = wp->GetPrevWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetPrevWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetPrevWP
	mov	DWORD PTR _pwp$[ebp], eax

; 1928 : 		if (pwp)

	cmp	DWORD PTR _pwp$[ebp], 0
	je	$LN12@fixup_unit

; 1929 : 			{
; 1930 : 			wp->GetWPLocation(&wx,&wy);

	lea	eax, DWORD PTR _wy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1931 : 			if (wp->GetWPFlags() & WPF_HOLDCURRENT)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN11@fixup_unit

; 1932 : 				z = pwp->GetWPAltitude ();

	mov	ecx, DWORD PTR _pwp$[ebp]
	call	?GetWPAltitude@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAltitude
	mov	DWORD PTR _z$[ebp], eax

; 1933 : 			else

	jmp	SHORT $LN10@fixup_unit
$LN11@fixup_unit:

; 1934 : 				z = wp->GetWPAltitude ();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAltitude@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAltitude
	mov	DWORD PTR _z$[ebp], eax
$LN10@fixup_unit:

; 1935 : 			pwp->GetWPLocation(&pwx,&pwy);

	lea	edx, DWORD PTR _pwy$[ebp]
	push	edx
	lea	eax, DWORD PTR _pwx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pwp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1936 : 
; 1937 : 			// KCK NOTE: We may want to find grid paths for battalions... 
; 1938 : 			// But for now, just move in a staight line.
; 1939 : 			dx	= static_cast<short>(wx - pwx);

	movsx	ecx, WORD PTR _wx$[ebp]
	movsx	edx, WORD PTR _pwx$[ebp]
	sub	ecx, edx
	mov	WORD PTR _dx$[ebp], cx

; 1940 : 			dy	= static_cast<short>(wy - pwy);

	movsx	eax, WORD PTR _wy$[ebp]
	movsx	ecx, WORD PTR _pwy$[ebp]
	sub	eax, ecx
	mov	WORD PTR _dy$[ebp], ax

; 1941 : 			ndt = current_time - pwp->GetWPDepartureTime ();

	mov	ecx, DWORD PTR _pwp$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	edx, DWORD PTR _current_time$[ebp]
	sub	edx, eax
	mov	DWORD PTR _ndt$[ebp], edx

; 1942 : 			dt	= wp->GetWPDepartureTime () - pwp->GetWPDepartureTime ();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	esi, eax
	mov	ecx, DWORD PTR _pwp$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	sub	esi, eax
	mov	DWORD PTR _dt$[ebp], esi

; 1943 : 			if (ndt > dt)

	mov	eax, DWORD PTR _ndt$[ebp]
	cmp	eax, DWORD PTR _dt$[ebp]
	jle	SHORT $LN9@fixup_unit

; 1944 : 				ndt = dt;

	mov	ecx, DWORD PTR _dt$[ebp]
	mov	DWORD PTR _ndt$[ebp], ecx
$LN9@fixup_unit:

; 1945 : 			dx = static_cast<short>(FloatToInt32(dx * ((float)ndt / (float)dt)));

	movsx	edx, WORD PTR _dx$[ebp]
	cvtsi2ss xmm0, edx
	cvtsi2ss xmm1, DWORD PTR _ndt$[ebp]
	cvtsi2ss xmm2, DWORD PTR _dt$[ebp]
	divss	xmm1, xmm2
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR _dx$[ebp], ax

; 1946 : 			dy = static_cast<short>(FloatToInt32(dy * ((float)ndt / (float)dt)));

	movsx	eax, WORD PTR _dy$[ebp]
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _ndt$[ebp]
	cvtsi2ss xmm2, DWORD PTR _dt$[ebp]
	divss	xmm1, xmm2
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR _dy$[ebp], ax

; 1947 : 			heading = AngleTo (pwx,pwy,wx,wy);

	movzx	ecx, WORD PTR _wy$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wx$[ebp]
	push	edx
	movzx	eax, WORD PTR _pwy$[ebp]
	push	eax
	movzx	ecx, WORD PTR _pwx$[ebp]
	push	ecx
	call	?AngleTo@@YAMFFFF@Z			; AngleTo
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _heading$[ebp]

; 1948 : 			h = DirectionTo(pwx,pwy,wx,wy);

	movzx	edx, WORD PTR _wy$[ebp]
	push	edx
	movzx	eax, WORD PTR _wx$[ebp]
	push	eax
	movzx	ecx, WORD PTR _pwy$[ebp]
	push	ecx
	movzx	edx, WORD PTR _pwx$[ebp]
	push	edx
	call	?DirectionTo@@YAEFFFF@Z			; DirectionTo
	add	esp, 16					; 00000010H
	mov	BYTE PTR _h$[ebp], al

; 1949 : 
; 1950 : 			unit->SetYPR(heading,0.0F,0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _heading$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetYPR@VuEntity@@QAEXMMM@Z		; VuEntity::SetYPR

; 1951 : 			if (unit->IsFlight())

	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN8@fixup_unit

; 1952 : 				((Flight)unit)->SetLastDirection(h);

	movzx	ecx, BYTE PTR _h$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetLastDirection@FlightClass@@QAEXE@Z	; FlightClass::SetLastDirection
$LN8@fixup_unit:

; 1953 : 			unit->SetUnitLastMove(current_time);

	mov	edx, DWORD PTR _current_time$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+592]
	call	eax

; 1954 : 			unit->SetLocation(static_cast<short>(pwx + dx), static_cast<short>(pwy + dy));

	movsx	ecx, WORD PTR _pwy$[ebp]
	movsx	edx, WORD PTR _dy$[ebp]
	add	ecx, edx
	push	ecx
	movsx	eax, WORD PTR _pwx$[ebp]
	movsx	ecx, WORD PTR _dx$[ebp]
	add	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1955 : 			unit->SetUnitAltitude(z);

	mov	edx, DWORD PTR _z$[ebp]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetUnitAltitude@UnitClass@@QAEXH@Z	; UnitClass::SetUnitAltitude

; 1956 : 			}
; 1957 : 		else

	jmp	$LN5@fixup_unit
$LN12@fixup_unit:

; 1958 : 			{
; 1959 : 			wp->GetWPLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1960 : 			unit->SetLocation(x,y);

	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1961 : 			if (unit->IsFlight())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN6@fixup_unit

; 1962 : 				unit->SetUnitDestination(x,y);

	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination
$LN6@fixup_unit:

; 1963 : 			pwp = wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _pwp$[ebp], eax

; 1964 : 			if (pwp)

	cmp	DWORD PTR _pwp$[ebp], 0
	je	SHORT $LN5@fixup_unit

; 1965 : 				{
; 1966 : 				pwp->GetWPLocation(&wx,&wy);

	lea	eax, DWORD PTR _wy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pwp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1967 : 				heading = AngleTo(x,y,wx,wy);

	movzx	edx, WORD PTR _wy$[ebp]
	push	edx
	movzx	eax, WORD PTR _wx$[ebp]
	push	eax
	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	call	?AngleTo@@YAMFFFF@Z			; AngleTo
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _heading$[ebp]

; 1968 : 				unit->SetYPR(heading,0.0F,0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _heading$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetYPR@VuEntity@@QAEXMMM@Z		; VuEntity::SetYPR
$LN5@fixup_unit:

; 1969 : 				}
; 1970 : 			}
; 1971 : 		}
; 1972 : 	while (wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN3@fixup_unit

; 1973 : 		{
; 1974 : 		// Some special case stuff for air mobile
; 1975 : 		if (wp->GetWPAction() == WP_PICKUP)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 6
	jne	SHORT $LN1@fixup_unit

; 1976 : 			{
; 1977 : 			Unit	cargo = (Unit) wp->GetWPTarget();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	mov	DWORD PTR _cargo$6[ebp], eax

; 1978 : 			if (cargo)

	cmp	DWORD PTR _cargo$6[ebp], 0
	je	SHORT $LN1@fixup_unit

; 1979 : 				{
; 1980 : 				// Put airborne battalion at the pickup point.
; 1981 : 				unit->SetCargoId(cargo->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _cargo$6[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z	; UnitClass::SetCargoId

; 1982 : 				cargo->SetCargoId(unit->Id());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _cargo$6[ebp]
	call	?SetCargoId@UnitClass@@QAEXVVU_ID@@@Z	; UnitClass::SetCargoId

; 1983 : 				wp->GetWPLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1984 : 				cargo->SetLocation(x,y);

	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cargo$6[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1985 : 				cargo->SetInactive(0);

	push	0
	mov	ecx, DWORD PTR _cargo$6[ebp]
	call	?SetInactive@UnitClass@@QAEXH@Z		; UnitClass::SetInactive
$LN1@fixup_unit:

; 1986 : 				}
; 1987 : 			}
; 1988 : 		wp = wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 1989 : 		}

	jmp	$LN5@fixup_unit
$LN3@fixup_unit:

; 1990 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?fixup_unit@@YAXPAVUnitClass@@@Z ENDP			; fixup_unit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T2 = -156						; size = 8
$T3 = -148						; size = 8
$T4 = -140						; size = 8
$T5 = -132						; size = 8
$T6 = -124						; size = 8
$T7 = -116						; size = 8
$T8 = -108						; size = 8
$T9 = -100						; size = 8
$T10 = -92						; size = 8
$T11 = -84						; size = 8
$T12 = -76						; size = 4
tv577 = -72						; size = 4
tv465 = -68						; size = 4
tv390 = -64						; size = 4
_pw$ = -60						; size = 4
$T13 = -56						; size = 4
tv435 = -52						; size = 4
_nw$ = -48						; size = 4
_wx$ = -44						; size = 4
_wy$ = -40						; size = 4
_item$ = -36						; size = 4
_by$ = -32						; size = 2
_bx$ = -28						; size = 2
_wp$ = -24						; size = 4
_entity$ = -20						; size = 4
_unit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?UnitCB@@YAXJFPAVC_Base@@@Z PROC			; UnitCB

; 1747 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UnitCB@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1748 : 	CampEntity	entity;
; 1749 : 	Unit		unit;
; 1750 : 	float		wx,wy;
; 1751 : 	short		bx,by;
; 1752 : 	MAPICONLIST *item;
; 1753 : 	WayPointClass	*wp,*pw=NULL,*nw;

	mov	DWORD PTR _pw$[ebp], 0

; 1754 : 
; 1755 : 	if (hittype == C_TYPE_LDROP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 73					; 00000049H
	jne	$LN23@UnitCB

; 1756 : 	{
; 1757 : 		entity = GetEntityByCampID (ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax

; 1758 : 
; 1759 : 		if (entity && entity->IsUnit())

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN18@UnitCB
	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	$LN18@UnitCB

; 1760 : 		{
; 1761 : 			unit = (UnitClass *) entity;

	mov	eax, DWORD PTR _entity$[ebp]
	mov	DWORD PTR _unit$[ebp], eax

; 1762 : 
; 1763 : 			item =((C_MapIcon*)ctrl)->FindID(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z ; C_MapIcon::FindID
	mov	DWORD PTR _item$[ebp], eax

; 1764 : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN18@UnitCB

; 1765 : 			{
; 1766 : 				wx = item->worldx;

	mov	edx, DWORD PTR _item$[ebp]
	movss	xmm0, DWORD PTR [edx+20]
	movss	DWORD PTR _wx$[ebp], xmm0

; 1767 : 				wy = gMapMgr->GetMaxY () - item->worldy;

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR tv465[ebp]
	movss	xmm0, DWORD PTR tv465[ebp]
	mov	eax, DWORD PTR _item$[ebp]
	subss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR _wy$[ebp], xmm0

; 1768 : 				bx = SimToGrid(wx);

	push	ecx
	movss	xmm0, DWORD PTR _wx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR _bx$[ebp], ax

; 1769 : 				by = SimToGrid(wy);

	push	ecx
	movss	xmm0, DWORD PTR _wy$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR _by$[ebp], ax

; 1770 : 
; 1771 : 				// Find any waypoints we may be sitting on
; 1772 : 				wp = GetWayPointUnder(unit);

	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	call	?GetWayPointUnder@@YAPAVWayPointClass@@PAVUnitClass@@@Z ; GetWayPointUnder
	add	esp, 4
	mov	DWORD PTR _wp$[ebp], eax

; 1773 : 
; 1774 : 				// Change our location and our waypoint's
; 1775 : 				unit->SetLocation(bx,by);

	movzx	edx, WORD PTR _by$[ebp]
	push	edx
	movzx	eax, WORD PTR _bx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1776 : 				if (unit->IsBattalion())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	test	eax, eax
	je	SHORT $LN20@UnitCB

; 1777 : 					tactical_set_orders((Battalion)unit, unit->GetUnitObjectiveID(), bx, by);

	movzx	ecx, WORD PTR _by$[ebp]
	push	ecx
	movzx	edx, WORD PTR _bx$[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+876]
	call	eax
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	call	?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z ; tactical_set_orders
	add	esp, 20					; 00000014H
	jmp	SHORT $LN18@UnitCB
$LN20@UnitCB:

; 1778 : 				else if (wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN18@UnitCB

; 1779 : 				{
; 1780 : 					wp->SetWPLocation(bx,by);

	movzx	ecx, WORD PTR _by$[ebp]
	push	ecx
	movzx	edx, WORD PTR _bx$[ebp]
	push	edx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?SetWPLocation@WayPointClass@@QAEXFF@Z	; WayPointClass::SetWPLocation

; 1781 : 					recalculate_waypoints(wp);

	mov	eax, DWORD PTR _wp$[ebp]
	push	eax
	call	?recalculate_waypoints@@YAXPAVWayPointClass@@@Z ; recalculate_waypoints
	add	esp, 4

; 1782 : 					gMapMgr->SetCurrentWaypointList(unit->Id());

	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList
$LN18@UnitCB:

; 1783 : 				}
; 1784 : 			}
; 1785 : 		}
; 1786 : 	}

	jmp	$LN7@UnitCB
$LN23@UnitCB:

; 1787 : 	else if(hittype == C_TYPE_LMOUSEUP)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 52					; 00000034H
	jne	$LN16@UnitCB

; 1788 : 	{
; 1789 : 		entity = GetEntityByCampID (ID);

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax

; 1790 : 
; 1791 : 		if (entity && entity->IsUnit())

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN12@UnitCB
	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	$LN12@UnitCB

; 1792 : 		{
; 1793 : 			unit = (UnitClass *) entity;

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	DWORD PTR _unit$[ebp], ecx

; 1794 : 
; 1795 : 			if((TheCampaign.Flags & CAMP_TACTICAL_EDIT) || (GetTeam(unit->GetOwner()) == FalconLocalSession->GetTeam()))

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	jne	SHORT $LN13@UnitCB
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	esi, al
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	cmp	esi, ecx
	jne	$LN12@UnitCB
$LN13@UnitCB:

; 1796 : 			{
; 1797 : 				gMapMgr->SetCurrentWaypointList (unit->Id ());

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList

; 1798 : 				if (entity->IsFlight())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN12@UnitCB

; 1799 : 				{
; 1800 : 					gActiveFlightID=unit->Id();

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4, eax

; 1801 : 					gLoadoutFlightID=unit->Id();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4, eax

; 1802 : // 2001-10-25 ADDED by M.N. gSelectedFlightID is used for munition, flight plan and steer point info
; 1803 : 					gSelectedFlightID=unit->Id();

	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4, eax

; 1804 : // END of added section
; 1805 : 					SetupFlightSpecificControls((Flight)entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	call	?SetupFlightSpecificControls@@YAXPAVFlightClass@@@Z ; SetupFlightSpecificControls
	add	esp, 4
$LN12@UnitCB:

; 1806 : 				}
; 1807 : 			}
; 1808 : 		}
; 1809 : 	}

	jmp	$LN7@UnitCB
$LN16@UnitCB:

; 1810 : 	else if(hittype == C_TYPE_MOUSEMOVE)

	movsx	edx, WORD PTR _hittype$[ebp]
	cmp	edx, 61					; 0000003dH
	jne	$LN7@UnitCB

; 1811 : 	{
; 1812 : 		entity = GetEntityByCampID (ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax

; 1813 : 
; 1814 : 		if (entity && entity->IsUnit())

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN7@UnitCB
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	$LN7@UnitCB

; 1815 : 		{
; 1816 : 			unit = (UnitClass *) entity;

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	DWORD PTR _unit$[ebp], ecx

; 1817 : 
; 1818 : 			if (entity->IsFlight())

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN8@UnitCB

; 1819 : 			{
; 1820 : 				gActiveFlightID=unit->Id();

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4, edx

; 1821 : 				gLoadoutFlightID=unit->Id();

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4, edx

; 1822 : // 2001-10-25 ADDED by M.N. gSelectedFlightID is used for munition, flight plan and steer point info
; 1823 : 				gSelectedFlightID=unit->Id();

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4, edx

; 1824 : // END of added section
; 1825 : 				SetupFlightSpecificControls((Flight)entity);

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	call	?SetupFlightSpecificControls@@YAXPAVFlightClass@@@Z ; SetupFlightSpecificControls
	add	esp, 4
$LN8@UnitCB:

; 1826 : 			}
; 1827 : 
; 1828 : 			item =((C_MapIcon*)ctrl)->FindID(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z ; C_MapIcon::FindID
	mov	DWORD PTR _item$[ebp], eax

; 1829 : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN7@UnitCB

; 1830 : 			{
; 1831 : 				wx = item->worldx;

	mov	edx, DWORD PTR _item$[ebp]
	movss	xmm0, DWORD PTR [edx+20]
	movss	DWORD PTR _wx$[ebp], xmm0

; 1832 : 				wy = gMapMgr->GetMaxY() - item->worldy;

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR tv577[ebp]
	movss	xmm0, DWORD PTR tv577[ebp]
	mov	eax, DWORD PTR _item$[ebp]
	subss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR _wy$[ebp], xmm0

; 1833 : 				bx = SimToGrid(wx);

	push	ecx
	movss	xmm0, DWORD PTR _wx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR _bx$[ebp], ax

; 1834 : 				by = SimToGrid(wy);

	push	ecx
	movss	xmm0, DWORD PTR _wy$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR _by$[ebp], ax

; 1835 : 
; 1836 : 				wp = GetWayPointUnder(unit);				

	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	call	?GetWayPointUnder@@YAPAVWayPointClass@@PAVUnitClass@@@Z ; GetWayPointUnder
	add	esp, 4
	mov	DWORD PTR _wp$[ebp], eax

; 1837 : 
; 1838 : 				// Change our location
; 1839 : 				unit->SetLocation(bx,by);

	movzx	edx, WORD PTR _by$[ebp]
	push	edx
	movzx	eax, WORD PTR _bx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1840 : 				if (!unit->IsFlight())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	jne	SHORT $LN6@UnitCB

; 1841 : 					return;

	jmp	$LN24@UnitCB
$LN6@UnitCB:

; 1842 : 
; 1843 : 				// Add a new waypoint at current location or move the one we were sitting on
; 1844 : 				if (wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN5@UnitCB

; 1845 : 					wp->SetWPLocation(bx,by);

	movzx	ecx, WORD PTR _by$[ebp]
	push	ecx
	movzx	edx, WORD PTR _bx$[ebp]
	push	edx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?SetWPLocation@WayPointClass@@QAEXFF@Z	; WayPointClass::SetWPLocation

; 1846 : 				else

	jmp	$LN4@UnitCB
$LN5@UnitCB:

; 1847 : 					{
; 1848 : 					gDragWPNum = 1;

	mov	DWORD PTR ?gDragWPNum@@3HA, 1		; gDragWPNum

; 1849 : 					wp = unit->GetFirstUnitWP();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax
$LN3@UnitCB:

; 1850 : 					while (wp && wp != unit->GetCurrentUnitWP())

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN2@UnitCB
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ ; UnitClass::GetCurrentUnitWP
	cmp	DWORD PTR _wp$[ebp], eax
	je	SHORT $LN2@UnitCB

; 1851 : 						{
; 1852 : 						gDragWPNum++;

	mov	eax, DWORD PTR ?gDragWPNum@@3HA		; gDragWPNum
	add	eax, 1
	mov	DWORD PTR ?gDragWPNum@@3HA, eax		; gDragWPNum

; 1853 : 						wp = wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 1854 : 						}

	jmp	SHORT $LN3@UnitCB
$LN2@UnitCB:

; 1855 : 					if (wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN1@UnitCB

; 1856 : 						{
; 1857 : 						pw = wp->GetPrevWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetPrevWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetPrevWP
	mov	DWORD PTR _pw$[ebp], eax

; 1858 : 						ShiAssert(pw);
; 1859 : 						nw = new WayPointClass (bx, by, wp->GetWPAltitude(), static_cast<int>(wp->GetWPSpeed()), TheCampaign.CurrentTime, 0, WP_NOTHING, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN26@UnitCB
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPSpeed@WayPointClass@@QAEMXZ	; WayPointClass::GetWPSpeed
	call	__ftol2_sse
	push	eax
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAltitude@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAltitude
	push	eax
	movzx	edx, WORD PTR _by$[ebp]
	push	edx
	movzx	eax, WORD PTR _bx$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv390[ebp], eax
	jmp	SHORT $LN27@UnitCB
$LN26@UnitCB:
	mov	DWORD PTR tv390[ebp], 0
$LN27@UnitCB:
	mov	ecx, DWORD PTR tv390[ebp]
	mov	DWORD PTR $T12[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T12[ebp]
	mov	DWORD PTR _nw$[ebp], edx

; 1860 : 						nw->SetWPSpeed(wp->GetWPSpeed());

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPSpeed@WayPointClass@@QAEMXZ	; WayPointClass::GetWPSpeed
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _nw$[ebp]
	call	?SetWPSpeed@WayPointClass@@QAEXM@Z	; WayPointClass::SetWPSpeed

; 1861 : 						// Lock time? basically we're saying we want the flight here at this time, so I'd guess yes
; 1862 : 						nw->SetWPFlags(WPF_TIME_LOCKED);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _nw$[ebp]
	call	?SetWPFlags@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPFlags

; 1863 : 						pw->InsertWP(nw);

	mov	eax, DWORD PTR _nw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pw$[ebp]
	call	?InsertWP@WayPointClass@@QAEXPAV1@@Z	; WayPointClass::InsertWP
$LN1@UnitCB:

; 1864 : 						}
; 1865 : 					// Rebuild the waypoint list upon this addition
; 1866 : 					recalculate_waypoints(wp);

	mov	ecx, DWORD PTR _wp$[ebp]
	push	ecx
	call	?recalculate_waypoints@@YAXPAVWayPointClass@@@Z ; recalculate_waypoints
	add	esp, 4

; 1867 : 					gMapMgr->SetCurrentWaypointList (unit->Id ());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList
$LN4@UnitCB:

; 1868 : 					}
; 1869 : 				recalculate_waypoints(wp);

	mov	eax, DWORD PTR _wp$[ebp]
	push	eax
	call	?recalculate_waypoints@@YAXPAVWayPointClass@@@Z ; recalculate_waypoints
	add	esp, 4

; 1870 : 				gMapMgr->GetCurWP()->UpdateInfo((unit->GetCampID()*256) + gDragWPNum,item->worldx,item->worldy);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+24]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _item$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+20]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	shl	ecx, 8
	add	ecx, DWORD PTR ?gDragWPNum@@3HA		; gDragWPNum
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ	; C_Map::GetCurWP
	mov	ecx, eax
	call	?UpdateInfo@C_Waypoint@@QAEHJMM@Z	; C_Waypoint::UpdateInfo

; 1871 : 				gMapMgr->GetCurWP()->Refresh();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ	; C_Map::GetCurWP
	mov	DWORD PTR tv435[ebp], eax
	mov	edx, DWORD PTR tv435[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv435[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN7@UnitCB:
$LN24@UnitCB:

; 1872 : 			}
; 1873 : 		}
; 1874 : 	}
; 1875 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnitCB@@YAXJFPAVC_Base@@@Z$0:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?UnitCB@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UnitCB@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UnitCB@@YAXJFPAVC_Base@@@Z ENDP			; UnitCB
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_w$ = -20						; size = 4
_y$ = -16						; size = 2
_wy$ = -12						; size = 2
_x$ = -8						; size = 2
_wx$ = -4						; size = 2
_unit$ = 8						; size = 4
?GetWayPointUnder@@YAPAVWayPointClass@@PAVUnitClass@@@Z PROC ; GetWayPointUnder

; 1723 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1724 : 	WayPoint	w = unit->GetFirstUnitWP();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax

; 1725 : 	GridIndex	x,y,wx,wy;
; 1726 : 
; 1727 : 	unit->GetLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1728 : 	gDragWPNum = 0;

	mov	DWORD PTR ?gDragWPNum@@3HA, 0		; gDragWPNum

; 1729 : 	if (!w)

	cmp	DWORD PTR _w$[ebp], 0
	jne	SHORT $LN3@GetWayPoin

; 1730 : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN5@GetWayPoin
$LN3@GetWayPoin:

; 1731 : 	while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN2@GetWayPoin

; 1732 : 		{
; 1733 : 		gDragWPNum++;

	mov	edx, DWORD PTR ?gDragWPNum@@3HA		; gDragWPNum
	add	edx, 1
	mov	DWORD PTR ?gDragWPNum@@3HA, edx		; gDragWPNum

; 1734 : 		w->GetWPLocation(&wx,&wy);

	lea	eax, DWORD PTR _wy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1735 : 		if (wx == x && wy == y)

	movsx	edx, WORD PTR _wx$[ebp]
	movsx	eax, WORD PTR _x$[ebp]
	cmp	edx, eax
	jne	SHORT $LN1@GetWayPoin
	movsx	ecx, WORD PTR _wy$[ebp]
	movsx	edx, WORD PTR _y$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@GetWayPoin

; 1736 : 			return w;

	mov	eax, DWORD PTR _w$[ebp]
	jmp	SHORT $LN5@GetWayPoin
$LN1@GetWayPoin:

; 1737 : 		w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 1738 : 		}

	jmp	SHORT $LN3@GetWayPoin
$LN2@GetWayPoin:

; 1739 : 	return NULL;

	xor	eax, eax
$LN5@GetWayPoin:

; 1740 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWayPointUnder@@YAPAVWayPointClass@@PAVUnitClass@@@Z ENDP ; GetWayPointUnder
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T2 = -172						; size = 8
$T3 = -164						; size = 8
$T4 = -156						; size = 8
_sessionWalker$5 = -148					; size = 12
$T6 = -136						; size = 4
_Leave$ = -132						; size = 4
$T7 = -128						; size = 4
tv181 = -124						; size = 4
$T8 = -120						; size = 4
tv667 = -116						; size = 4
$T9 = -112						; size = 4
tv433 = -108						; size = 4
tv144 = -104						; size = 4
_lbptr$ = -100						; size = 4
_ItemID$ = -96						; size = 4
_kills$ = -92						; size = 4
_item$ = -88						; size = 4
_bmp$ = -84						; size = 4
_session$10 = -80					; size = 4
_sqd$ = -76						; size = 4
_tree$ = -72						; size = 4
_output$ = -68						; size = 4
_i$ = -64						; size = 2
_win$ = -60						; size = 4
_ctrl$ = -56						; size = 4
_txt$ = -52						; size = 4
_buffer$ = -48						; size = 30
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?UpdateSierraHotel@@YAXXZ PROC				; UpdateSierraHotel

; 1374 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateSierraHotel@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1375 : 	C_Window *win;
; 1376 : 	C_TreeList *tree;
; 1377 : 	C_Text *txt;
; 1378 : 	C_Bitmap *bmp;
; 1379 : 	_TCHAR buffer[30];
; 1380 : 	C_Custom *ctrl;
; 1381 : 	O_Output *output;
; 1382 : 	TREELIST *item;
; 1383 : 	Squadron sqd;
; 1384 : 	short i;
; 1385 : 	long ItemID=1;

	mov	DWORD PTR _ItemID$[ebp], 1

; 1386 : 	long kills;
; 1387 : 	RemoteLB *lbptr;
; 1388 : 	F4CSECTIONHANDLE *Leave;
; 1389 : 
; 1390 : 	win=gMainHandler->FindWindow(CAMP_SH);

	push	6319					; 000018afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1391 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN47@UpdateSier

; 1392 : 	{
; 1393 : 		sqd=FalconLocalSession->GetPlayerSquadron();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
	mov	DWORD PTR _sqd$[ebp], eax

; 1394 : 		if(!sqd)

	cmp	DWORD PTR _sqd$[ebp], 0
	jne	SHORT $LN46@UpdateSier

; 1395 : 			return;

	jmp	$LN48@UpdateSier
$LN46@UpdateSier:

; 1396 : 
; 1397 : 		Leave=UI_Enter(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1398 : 
; 1399 : 		tree=(C_TreeList*)win->FindControl(SH_PILOT_LIST);

	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1400 : 		if(!tree)

	cmp	DWORD PTR _tree$[ebp], 0
	jne	SHORT $LN45@UpdateSier

; 1401 : 			return;

	jmp	$LN48@UpdateSier
$LN45@UpdateSier:

; 1402 : 		tree->SetSortCallback(CampHotelSortCB);

	push	OFFSET ?CampHotelSortCB@@YAHPAVTREELIST@@0@Z ; CampHotelSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 1403 : 		tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 1404 : 
; 1405 : 		tree->DeleteBranch(tree->GetRoot()); // Clear it

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1406 : 		//if(gCommsMgr->Online())
; 1407 : 		{
; 1408 : 			VuSessionsIterator sessionWalker(FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN50@UpdateSier
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN51@UpdateSier
$LN50@UpdateSier:
	mov	DWORD PTR tv144[ebp], 0
$LN51@UpdateSier:
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	lea	ecx, DWORD PTR _sessionWalker$5[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1409 : 			FalconSessionEntity *session;
; 1410 : 
; 1411 : 			session = (FalconSessionEntity*)sessionWalker.GetFirst();

	lea	ecx, DWORD PTR _sessionWalker$5[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$10[ebp], eax
$LN44@UpdateSier:

; 1412 : 			while(session)

	cmp	DWORD PTR _session$10[ebp], 0
	je	$LN43@UpdateSier

; 1413 : 			{
; 1414 : 				if(session->GetPlayerSquadronID() == sqd->Id())

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN35@UpdateSier

; 1415 : 				{
; 1416 : 					kills = 0;

	mov	DWORD PTR _kills$[ebp], 0

; 1417 : 					kills=session->GetKill(FalconSessionEntity::_AIR_KILLS_);

	push	0
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	mov	DWORD PTR _kills$[ebp], eax

; 1418 : //					if(kills || 1)
; 1419 : 					{
; 1420 : 						ctrl=new C_Custom;

	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN52@UpdateSier
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0C_Custom@@QAE@XZ			; C_Custom::C_Custom
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN53@UpdateSier
$LN52@UpdateSier:
	mov	DWORD PTR tv181[ebp], 0
$LN53@UpdateSier:
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _ctrl$[ebp], edx

; 1421 : 						ctrl->Setup(C_DONT_CARE,FalconSessionEntity::_VS_HUMAN_,2);

	push	2
	push	2
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?Setup@C_Custom@@QAEXJFF@Z		; C_Custom::Setup

; 1422 : 						if(session == FalconLocalSession)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	DWORD PTR _session$10[ebp], eax
	jne	SHORT $LN41@UpdateSier

; 1423 : 						{
; 1424 : 							if(LogBook.GetPictureResource()) // Temporary

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	test	eax, eax
	je	SHORT $LN40@UpdateSier

; 1425 : 								ctrl->SetUserNumber(C_STATE_0,LogBook.GetPictureResource()); // Image ID goes here

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	push	eax
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1426 : 							else

	jmp	SHORT $LN39@UpdateSier
$LN40@UpdateSier:

; 1427 : 							{ // Need to load a file
; 1428 : 								ctrl->SetUserNumber(C_STATE_0,NOFACE); // Image ID goes here

	push	60000					; 0000ea60H
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN39@UpdateSier:

; 1429 : 							}
; 1430 : 						}
; 1431 : 						else

	jmp	SHORT $LN36@UpdateSier
$LN41@UpdateSier:

; 1432 : 						{
; 1433 : 							lbptr=(RemoteLB*)gCommsMgr->GetRemoteLB(session->Id().creator_);

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	add	eax, 4
	mov	ecx, eax
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetRemoteLB@UIComms@@QAEPAXJ@Z		; UIComms::GetRemoteLB
	mov	DWORD PTR _lbptr$[ebp], eax

; 1434 : 							if(lbptr && lbptr->Pilot_.PictureResource)

	cmp	DWORD PTR _lbptr$[ebp], 0
	je	SHORT $LN37@UpdateSier
	mov	ecx, DWORD PTR _lbptr$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	SHORT $LN37@UpdateSier

; 1435 : 							{
; 1436 : 								ctrl->SetUserNumber(C_STATE_0,lbptr->Pilot_.PictureResource); // Image ID goes here

	mov	edx, DWORD PTR _lbptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1437 : 							}
; 1438 : 							else

	jmp	SHORT $LN36@UpdateSier
$LN37@UpdateSier:

; 1439 : 								ctrl->SetUserNumber(C_STATE_0,NOFACE); // Image ID goes here

	push	60000					; 0000ea60H
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN36@UpdateSier:

; 1440 : 						}
; 1441 : 						ctrl->SetUserNumber(C_STATE_2,session->GetMissions()); // Num Missions

	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	ecx, ax
	push	ecx
	push	2
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1442 : 						ctrl->SetUserNumber(C_STATE_3,session->GetRating()); // Mission Rating

	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetRating@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetRating
	movzx	edx, al
	push	edx
	push	3
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1443 : 						ctrl->SetUserNumber(C_STATE_4,session->GetKill(FalconSessionEntity::_AIR_KILLS_));

	push	0
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	push	eax
	push	4
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1444 : 						ctrl->SetUserNumber(C_STATE_5,session->GetKill(FalconSessionEntity::_GROUND_KILLS_));

	push	1
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	push	ecx
	push	5
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1445 : 						ctrl->SetUserNumber(C_STATE_6,session->GetKill(FalconSessionEntity::_NAVAL_KILLS_));

	push	2
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	push	edx
	push	6
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1446 : 						ctrl->SetUserNumber(C_STATE_7,session->GetKill(FalconSessionEntity::_STATIC_KILLS_));

	push	3
	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	push	eax
	push	7
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1447 : 
; 1448 : 						// Set pilot name
; 1449 : 						output=ctrl->GetItem(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	DWORD PTR _output$[ebp], eax

; 1450 : 						output->SetTextWidth(20);

	push	20					; 00000014H
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1451 : 						output->SetText(session->GetPlayerName());

	mov	ecx, DWORD PTR _session$10[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1452 : 						output->SetFont(tree->GetFont());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1453 : 						output->SetXY(tree->GetUserNumber(C_STATE_0),0);

	push	0
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1454 : 						output->SetFgColor(0xeeeeee);

	push	15658734				; 00eeeeeeH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 1455 : 						output->SetInfo();

	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo

; 1456 : 
; 1457 : 						// set pilot score (with commas)
; 1458 : 						ctrl->SetValue(1,kills); // used for sorting

	mov	ecx, DWORD PTR _kills$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetValue@C_Custom@@QAEXJJ@Z		; C_Custom::SetValue

; 1459 : 						_stprintf(buffer,"%1ld",kills);

	mov	edx, DWORD PTR _kills$[ebp]
	push	edx
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1460 : 						AddCommas(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?AddCommas@@YAPADPAD@Z			; AddCommas
	add	esp, 4

; 1461 : 
; 1462 : 						output=ctrl->GetItem(1);

	push	1
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	DWORD PTR _output$[ebp], eax

; 1463 : 						output->SetTextWidth(15);

	push	15					; 0000000fH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1464 : 						output->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1465 : 						output->SetXY(tree->GetUserNumber(C_STATE_1),0);

	push	0
	push	1
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1466 : 						output->SetFgColor(0xeeeeee);

	push	15658734				; 00eeeeeeH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 1467 : 						output->SetFlags(output->GetFlags() | C_BIT_RIGHT);

	mov	ecx, DWORD PTR _output$[ebp]
	call	?GetFlags@O_Output@@QAEJXZ		; O_Output::GetFlags
	or	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 1468 : 						output->SetInfo();

	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo

; 1469 : 
; 1470 : 						item=tree->CreateItem(ItemID,C_TYPE_ITEM,ctrl);

	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _ItemID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1471 : 						if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN35@UpdateSier

; 1472 : 						{
; 1473 : 							tree->AddItem(tree->GetRoot(),item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 1474 : 							ItemID++;

	mov	eax, DWORD PTR _ItemID$[ebp]
	add	eax, 1
	mov	DWORD PTR _ItemID$[ebp], eax
$LN35@UpdateSier:

; 1475 : 						}
; 1476 : 					}
; 1477 : 				}
; 1478 : 				session = (FalconSessionEntity*)sessionWalker.GetNext();

	lea	ecx, DWORD PTR _sessionWalker$5[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$10[ebp], eax

; 1479 : 			}

	jmp	$LN44@UpdateSier
$LN43@UpdateSier:

; 1480 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$5[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator

; 1481 : 
; 1482 : 		for(i=0;i<PILOTS_PER_SQUADRON;i++)

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN34@UpdateSier
$LN33@UpdateSier:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN34@UpdateSier:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 48					; 00000030H
	jge	$LN32@UpdateSier

; 1483 : 		{
; 1484 : 			if(sqd->GetPilotData(i)->pilot_status == PILOT_IN_USE || sqd->GetPilotData(i)->pilot_status == PILOT_AVAILABLE)

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	edx, BYTE PTR [eax+3]
	cmp	edx, 4
	je	SHORT $LN30@UpdateSier
	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	ecx, BYTE PTR [eax+3]
	test	ecx, ecx
	jne	$LN27@UpdateSier
$LN30@UpdateSier:

; 1485 : 			{
; 1486 : 				kills=sqd->GetPilotData(i)->aa_kills;

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	eax, BYTE PTR [eax+4]
	mov	DWORD PTR _kills$[ebp], eax

; 1487 : 
; 1488 : //				if(kills || 1)
; 1489 : 				{
; 1490 : 					GetPilotName(sqd->GetPilotData(i)->pilot_id,buffer,25);

	push	25					; 00000019H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	eax, WORD PTR [eax]
	push	eax
	call	?GetPilotName@@YAXHPADH@Z		; GetPilotName
	add	esp, 12					; 0000000cH

; 1491 : 					ctrl=new C_Custom;

	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN54@UpdateSier
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0C_Custom@@QAE@XZ			; C_Custom::C_Custom
	mov	DWORD PTR tv433[ebp], eax
	jmp	SHORT $LN55@UpdateSier
$LN54@UpdateSier:
	mov	DWORD PTR tv433[ebp], 0
$LN55@UpdateSier:
	mov	ecx, DWORD PTR tv433[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _ctrl$[ebp], edx

; 1492 : 					ctrl->Setup(C_DONT_CARE,FalconSessionEntity::_VS_AI_,2);

	push	2
	push	1
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?Setup@C_Custom@@QAEXJFF@Z		; C_Custom::Setup

; 1493 : 					if(sqd->GetOwner() == FalconLocalSession->GetCountry())

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	esi, al
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetCountry@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetCountry
	movzx	eax, al
	cmp	esi, eax
	jne	SHORT $LN29@UpdateSier

; 1494 : 						ctrl->SetUserNumber(C_STATE_0,PilotImageIDs[PilotInfo[sqd->GetPilotData(i)->pilot_id].photo_id]); // Image ID goes here

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	edx, WORD PTR [eax]
	mov	eax, DWORD PTR ?PilotInfo@@3PAVPilotInfoClass@@A ; PilotInfo
	movzx	ecx, BYTE PTR [eax+edx*4+3]
	mov	edx, DWORD PTR ?PilotImageIDs@@3PAJA[ecx*4]
	push	edx
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1495 : 					else

	jmp	SHORT $LN28@UpdateSier
$LN29@UpdateSier:

; 1496 : 						ctrl->SetUserNumber(C_STATE_0,FlagImageID[TeamInfo[sqd->GetOwner()]->GetFlag()][BIG_HORIZ]); // Image ID goes here

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	imul	eax, 20					; 00000014H
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR ?FlagImageID@@3PAY04JA[eax+ecx]
	push	edx
	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN28@UpdateSier:

; 1497 : 					ctrl->SetUserNumber(C_STATE_2,sqd->GetPilotData(i)->missions_flown); // Num Missions

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	ecx, WORD PTR [eax+8]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1498 : 					ctrl->SetUserNumber(C_STATE_3,sqd->GetPilotData(i)->GetPilotRating()*25); // Mission Rating

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	mov	ecx, eax
	call	?GetPilotRating@PilotClass@@QAEHXZ	; PilotClass::GetPilotRating
	imul	eax, 25					; 00000019H
	push	eax
	push	3
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1499 : 					ctrl->SetUserNumber(C_STATE_4,sqd->GetPilotData(i)->aa_kills);

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	push	4
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1500 : 					ctrl->SetUserNumber(C_STATE_5,sqd->GetPilotData(i)->ag_kills);

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	eax, BYTE PTR [eax+5]
	push	eax
	push	5
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1501 : 					ctrl->SetUserNumber(C_STATE_6,sqd->GetPilotData(i)->an_kills);

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	edx, BYTE PTR [eax+7]
	push	edx
	push	6
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1502 : 					ctrl->SetUserNumber(C_STATE_7,sqd->GetPilotData(i)->as_kills);

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	ecx, BYTE PTR [eax+6]
	push	ecx
	push	7
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1503 : 
; 1504 : 					// Set pilot name
; 1505 : 					output=ctrl->GetItem(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	DWORD PTR _output$[ebp], eax

; 1506 : 					output->SetTextWidth(20);

	push	20					; 00000014H
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1507 : 					output->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1508 : 					output->SetFont(tree->GetFont());

	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1509 : 					output->SetXY(tree->GetUserNumber(C_STATE_0),0);

	push	0
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1510 : 					output->SetFgColor(0xeeeeee);

	push	15658734				; 00eeeeeeH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 1511 : 					output->SetInfo();

	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo

; 1512 : 
; 1513 : 					// set pilot score (with commas)
; 1514 : 					ctrl->SetValue(1,kills); // used for sorting

	mov	ecx, DWORD PTR _kills$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?SetValue@C_Custom@@QAEXJJ@Z		; C_Custom::SetValue

; 1515 : 					_stprintf(buffer,"%1ld",kills);

	mov	edx, DWORD PTR _kills$[ebp]
	push	edx
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1516 : 					AddCommas(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?AddCommas@@YAPADPAD@Z			; AddCommas
	add	esp, 4

; 1517 : 
; 1518 : 					output=ctrl->GetItem(1);

	push	1
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	DWORD PTR _output$[ebp], eax

; 1519 : 					output->SetTextWidth(15);

	push	15					; 0000000fH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1520 : 					output->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1521 : 					output->SetXY(tree->GetUserNumber(C_STATE_1),0);

	push	0
	push	1
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1522 : 					output->SetFgColor(0xeeeeee);

	push	15658734				; 00eeeeeeH
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 1523 : 					output->SetFlags(output->GetFlags() | C_BIT_RIGHT);

	mov	ecx, DWORD PTR _output$[ebp]
	call	?GetFlags@O_Output@@QAEJXZ		; O_Output::GetFlags
	or	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 1524 : 					output->SetInfo();

	mov	ecx, DWORD PTR _output$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo

; 1525 : 
; 1526 : 					item=tree->CreateItem(ItemID,C_TYPE_ITEM,ctrl);

	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _ItemID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1527 : 					if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN27@UpdateSier

; 1528 : 					{
; 1529 : 						tree->AddItem(tree->GetRoot(),item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 1530 : 						ItemID++;

	mov	eax, DWORD PTR _ItemID$[ebp]
	add	eax, 1
	mov	DWORD PTR _ItemID$[ebp], eax
$LN27@UpdateSier:

; 1531 : 					}
; 1532 : 				}
; 1533 : 			}
; 1534 : 		}

	jmp	$LN33@UpdateSier
$LN32@UpdateSier:

; 1535 : 		// Set ACE of the base
; 1536 : 		item=tree->GetRoot();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _item$[ebp], eax

; 1537 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN26@UpdateSier

; 1538 : 		{
; 1539 : 			ctrl=(C_Custom*)item->Item_;

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _ctrl$[ebp], edx

; 1540 : 			switch(ctrl->GetType())

	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	mov	DWORD PTR tv667[ebp], eax
	cmp	DWORD PTR tv667[ebp], 1
	je	SHORT $LN23@UpdateSier
	cmp	DWORD PTR tv667[ebp], 2
	je	$LN15@UpdateSier
	jmp	$LN24@UpdateSier
$LN23@UpdateSier:

; 1541 : 			{
; 1542 : 				case FalconSessionEntity::_VS_AI_:
; 1543 : 					bmp=(C_Bitmap*)win->FindControl(PILOT_PIC);

	push	50060					; 0000c38cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1544 : 					if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN22@UpdateSier

; 1545 : 					{
; 1546 : 						bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1547 : 						bmp->SetImage(ctrl->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage

; 1548 : 						bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN22@UpdateSier:

; 1549 : 					}
; 1550 : 					txt=(C_Text*)win->FindControl(AI_MISS_FIELD);

	push	6313					; 000018a9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1551 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN21@UpdateSier

; 1552 : 					{
; 1553 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_2));

	push	2
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1554 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1555 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1556 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN21@UpdateSier:

; 1557 : 					}
; 1558 : 					txt=(C_Text*)win->FindControl(AI_RATING_FIELD);

	push	6314					; 000018aaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1559 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN20@UpdateSier

; 1560 : 					{
; 1561 : 						//_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_3));
; 1562 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1563 : 						txt->SetText(ratingstr[(short)(((float)ctrl->GetUserNumber(C_STATE_3)/25.0f + 0.5f))%5]);

	push	3
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@41c80000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si ecx, xmm0
	movsx	eax, cx
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR ?ratingstr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1564 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@UpdateSier:

; 1565 : 					}
; 1566 : 					txt=(C_Text*)win->FindControl(AI_AA_KILLS_FIELD);

	push	6315					; 000018abH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1567 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN19@UpdateSier

; 1568 : 					{
; 1569 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_4));

	push	4
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1570 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1571 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1572 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN19@UpdateSier:

; 1573 : 					}
; 1574 : 					txt=(C_Text*)win->FindControl(AI_AG_KILLS_FIELD);

	push	6316					; 000018acH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1575 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN18@UpdateSier

; 1576 : 					{
; 1577 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_5));

	push	5
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1578 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1579 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1580 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN18@UpdateSier:

; 1581 : 					}
; 1582 : 					txt=(C_Text*)win->FindControl(AI_NAVAL_KILLS_FIELD);

	push	6318					; 000018aeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1583 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN17@UpdateSier

; 1584 : 					{
; 1585 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_6));

	push	6
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1586 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1587 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1588 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN17@UpdateSier:

; 1589 : 					}
; 1590 : 					txt=(C_Text*)win->FindControl(AI_STATIC_KILLS_FIELD);

	push	6317					; 000018adH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1591 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN16@UpdateSier

; 1592 : 					{
; 1593 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_7));

	push	7
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1594 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1595 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1596 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@UpdateSier:

; 1597 : 					}
; 1598 : 					win->HideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1599 : 					win->UnHideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1600 : 					break;

	jmp	$LN24@UpdateSier
$LN15@UpdateSier:

; 1601 : 				case FalconSessionEntity::_VS_HUMAN_:
; 1602 : 					bmp=(C_Bitmap*)win->FindControl(PILOT_PIC);

	push	50060					; 0000c38cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1603 : 					if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN14@UpdateSier

; 1604 : 					{
; 1605 : 						bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1606 : 						bmp->SetImage(ctrl->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage

; 1607 : 						bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@UpdateSier:

; 1608 : 					}
; 1609 : 					txt=(C_Text*)win->FindControl(COMMISSIONED_FIELD);

	push	50045					; 0000c37dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1610 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN13@UpdateSier

; 1611 : 					{
; 1612 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1613 : 						txt->SetText(LogBook.Commissioned());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Commissioned@LogBookData@@QAEPADXZ	; LogBookData::Commissioned
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1614 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN13@UpdateSier:

; 1615 : 					}
; 1616 : 					txt=(C_Text*)win->FindControl(CAMP_CAMPAIGNS_FIELD);

	push	50062					; 0000c38eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1617 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN12@UpdateSier

; 1618 : 					{
; 1619 : 						kills=LogBook.GetCampaign()->GamesWon;

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _kills$[ebp], ecx

; 1620 : 						kills+=LogBook.GetCampaign()->GamesLost;

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
	movsx	edx, WORD PTR [eax+2]
	add	edx, DWORD PTR _kills$[ebp]
	mov	DWORD PTR _kills$[ebp], edx

; 1621 : 						kills+=LogBook.GetCampaign()->GamesTied;

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
	movsx	eax, WORD PTR [eax+4]
	add	eax, DWORD PTR _kills$[ebp]
	mov	DWORD PTR _kills$[ebp], eax

; 1622 : 
; 1623 : 						_stprintf(buffer,"%1ld",kills);

	mov	ecx, DWORD PTR _kills$[ebp]
	push	ecx
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1624 : 						txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1625 : 						txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1626 : 						txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@UpdateSier:

; 1627 : 					}
; 1628 : 					txt=(C_Text*)win->FindControl(HOURS_FIELD);

	push	50015					; 0000c35fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1629 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN11@UpdateSier

; 1630 : 					{
; 1631 : 						_stprintf(buffer,"%.1f",LogBook.FlightHours());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?FlightHours@LogBookData@@QAEMXZ	; LogBookData::FlightHours
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_04GGBPDDBN@?$CF?41f?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1632 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1633 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1634 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@UpdateSier:

; 1635 : 					}
; 1636 : 					txt=(C_Text*)win->FindControl(CAMP_MISS_FIELD);

	push	50027					; 0000c36bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1637 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN10@UpdateSier

; 1638 : 					{
; 1639 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_2));

	push	2
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1640 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1641 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1642 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@UpdateSier:

; 1643 : 					}
; 1644 : 					txt=(C_Text*)win->FindControl(CAMP_RATING_FIELD);

	push	50028					; 0000c36cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1645 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN9@UpdateSier

; 1646 : 					{
; 1647 : 						//_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_3));
; 1648 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1649 : 						txt->SetText(ratingstr[(short)(((float)ctrl->GetUserNumber(C_STATE_3)/25.0f + 0.5f))%5]);

	push	3
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@41c80000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si ecx, xmm0
	movsx	eax, cx
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR ?ratingstr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1650 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@UpdateSier:

; 1651 : 					}
; 1652 : 					txt=(C_Text*)win->FindControl(CAMP_AA_KILLS_FIELD);

	push	50063					; 0000c38fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1653 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN8@UpdateSier

; 1654 : 					{
; 1655 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_4));

	push	4
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1656 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1657 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1658 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@UpdateSier:

; 1659 : 					}
; 1660 : 					txt=(C_Text*)win->FindControl(CAMP_AG_KILLS_FIELD);

	push	50064					; 0000c390H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1661 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@UpdateSier

; 1662 : 					{
; 1663 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_5));

	push	5
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1664 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1665 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1666 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@UpdateSier:

; 1667 : 					}
; 1668 : 					txt=(C_Text*)win->FindControl(CAMP_NAVAL_KILLS_FIELD);

	push	50066					; 0000c392H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1669 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN6@UpdateSier

; 1670 : 					{
; 1671 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_6));

	push	6
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1672 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1673 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1674 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@UpdateSier:

; 1675 : 					}
; 1676 : 					txt=(C_Text*)win->FindControl(CAMP_STATIC_KILLS_FIELD);

	push	50065					; 0000c391H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1677 : 					if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN5@UpdateSier

; 1678 : 					{
; 1679 : 						_stprintf(buffer,"%1ld",ctrl->GetUserNumber(C_STATE_7));

	push	7
	mov	ecx, DWORD PTR _ctrl$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1680 : 						txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1681 : 						txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1682 : 						txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@UpdateSier:

; 1683 : 					}
; 1684 : 					win->HideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1685 : 					win->UnHideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN24@UpdateSier:

; 1686 : 					break;
; 1687 : 			}
; 1688 : 			item->Item_->SetFlagBitOn(C_BIT_INVISIBLE); // Hide ACE... since we show name at top

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1689 : 			txt=(C_Text*)win->FindControl(TOP_JOCK);

	push	6301					; 0000189dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1690 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@UpdateSier

; 1691 : 			{
; 1692 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1693 : 				txt->SetText(((C_Custom*)item->Item_)->GetItem(0)->GetText());

	push	0
	mov	ecx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	ecx, eax
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1694 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@UpdateSier:

; 1695 : 			}
; 1696 : 			txt=(C_Text*)win->FindControl(TOP_SCORE);

	push	6300					; 0000189cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1697 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@UpdateSier

; 1698 : 			{
; 1699 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1700 : 				txt->SetText(((C_Custom*)item->Item_)->GetItem(1)->GetText());

	push	1
	mov	ecx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetItem@C_Custom@@QAEPAVO_Output@@J@Z	; C_Custom::GetItem
	mov	ecx, eax
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1701 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@UpdateSier:

; 1702 : 			}
; 1703 : 		}
; 1704 : 		else

	jmp	SHORT $LN2@UpdateSier
$LN26@UpdateSier:

; 1705 : 		{
; 1706 : 			win->HideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1707 : 			win->HideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN2@UpdateSier:

; 1708 : 		}
; 1709 : 		tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1710 : 		if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN1@UpdateSier

; 1711 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@UpdateSier:

; 1712 : 		win->ScanClientArea(0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientArea@C_Window@@QAEXJ@Z	; C_Window::ScanClientArea

; 1713 : 		win->RefreshClient(0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 1714 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN47@UpdateSier:
$LN48@UpdateSier:

; 1715 : 	}
; 1716 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateSierraHotel@@YAXXZ$0:
	lea	ecx, DWORD PTR _sessionWalker$5[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?UpdateSierraHotel@@YAXXZ$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UpdateSierraHotel@@YAXXZ$2:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?UpdateSierraHotel@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateSierraHotel@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateSierraHotel@@YAXXZ ENDP				; UpdateSierraHotel
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_list$ = 8						; size = 4
_newitem$ = 12						; size = 4
?CampHotelSortCB@@YAHPAVTREELIST@@0@Z PROC		; CampHotelSortCB

; 1364 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 1365 : 	if(!list || !newitem)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN2@CampHotelS
	cmp	DWORD PTR _newitem$[ebp], 0
	jne	SHORT $LN3@CampHotelS
$LN2@CampHotelS:

; 1366 : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN4@CampHotelS
$LN3@CampHotelS:

; 1367 : 
; 1368 : 	if(((C_Custom*)newitem->Item_)->GetValue(1) > ((C_Custom*)list->Item_)->GetValue(1))

	push	1
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetValue@C_Custom@@QAEJJ@Z		; C_Custom::GetValue
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetValue@C_Custom@@QAEJJ@Z		; C_Custom::GetValue
	cmp	esi, eax
	jle	SHORT $LN1@CampHotelS

; 1369 : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN4@CampHotelS
$LN1@CampHotelS:

; 1370 : 	return(FALSE);

	xor	eax, eax
$LN4@CampHotelS:

; 1371 : }

	pop	esi
	pop	ebp
	ret	0
?CampHotelSortCB@@YAHPAVTREELIST@@0@Z ENDP		; CampHotelSortCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T2 = -496						; size = 8
$T3 = -488						; size = 8
$T4 = -480						; size = 8
$T5 = -472						; size = 8
$T6 = -464						; size = 8
$T7 = -456						; size = 8
$T8 = -448						; size = 8
_sessionWalker$9 = -440					; size = 12
_sptr$10 = -428						; size = 4
_Leave$ = -424						; size = 4
_sqdID$ = -420						; size = 8
_sessionWalker$ = -412					; size = 12
tv82 = -400						; size = 4
tv428 = -396						; size = 4
tv543 = -392						; size = 4
_need$11 = -388						; size = 4
_flt$ = -384						; size = 4
_session$12 = -380					; size = 4
_time$13 = -376						; size = 4
_urec$ = -372						; size = 4
_pilots$ = -368						; size = 4
_tree$ = -364						; size = 4
_supply$14 = -360					; size = 4
_session$ = -356					; size = 4
_lbox$ = -352						; size = 4
_bmp$ = -348						; size = 4
_ent$ = -344						; size = 4
_total$ = -340						; size = 4
_count$ = -336						; size = 2
_i$ = -332						; size = 2
_win$ = -328						; size = 4
_btn$ = -324						; size = 4
_sqd$ = -320						; size = 4
_txt$ = -316						; size = 4
_kills$ = -312						; size = 16
_tmp$15 = -296						; size = 80
_buffer$ = -216						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_TheID$ = 8						; size = 8
?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z PROC		; SetupSquadronInfoWindow

; 1038 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 484				; 000001e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1039 : 	C_Window *win;
; 1040 : 	C_Text *txt;
; 1041 : 	C_ListBox *lbox;
; 1042 : 	C_Button *btn;
; 1043 : 	C_TreeList *tree;
; 1044 : 	C_Bitmap *bmp;
; 1045 : 	UI_Refresher *urec;
; 1046 : 	Squadron sqd;
; 1047 : 	CampEntity ent;
; 1048 : 	VU_ID sqdID;

	lea	ecx, DWORD PTR _sqdID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1049 : 	Flight flt;
; 1050 : 	long kills[4];
; 1051 : 	_TCHAR buffer[200];
; 1052 : 	short count,i;
; 1053 : 	long total;
; 1054 : 	int	pilots;
; 1055 : 	F4CSECTIONHANDLE *Leave;
; 1056 : 
; 1057 : 	VuSessionsIterator sessionWalker(FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN76@SetupSquad
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN77@SetupSquad
$LN76@SetupSquad:
	mov	DWORD PTR tv82[ebp], 0
$LN77@SetupSquad:
	mov	ecx, DWORD PTR tv82[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1058 : 	FalconSessionEntity *session;
; 1059 : 
; 1060 : 	ent=(CampEntity)vuDatabase->Find(TheID);

	mov	edx, DWORD PTR _TheID$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _TheID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1061 : 	if(!ent)

	cmp	DWORD PTR _ent$[ebp], 0
	jne	SHORT $LN73@SetupSquad

; 1062 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	$LN74@SetupSquad
$LN73@SetupSquad:

; 1063 : 
; 1064 : 	gLastSquadron=TheID;

	mov	ecx, DWORD PTR _TheID$[ebp]
	mov	DWORD PTR ?gLastSquadron@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR _TheID$[ebp+4]
	mov	DWORD PTR ?gLastSquadron@@3VVU_ID@@A+4, edx

; 1065 : 
; 1066 : 	if(ent->IsFlight())

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	$LN72@SetupSquad

; 1067 : 	{
; 1068 : 		flt=(Flight)ent;

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	DWORD PTR _flt$[ebp], ecx

; 1069 : 		sqdID=flt->GetUnitSquadronID();

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR _flt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flt$[ebp]
	mov	eax, DWORD PTR [edx+700]
	call	eax
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _sqdID$[ebp], ecx
	mov	DWORD PTR _sqdID$[ebp+4], edx

; 1070 : 		sqd=(Squadron)vuDatabase->Find(sqdID);

	mov	eax, DWORD PTR _sqdID$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _sqdID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sqd$[ebp], eax

; 1071 : 		if(!sqd)

	cmp	DWORD PTR _sqd$[ebp], 0
	jne	SHORT $LN71@SetupSquad

; 1072 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	$LN74@SetupSquad
$LN71@SetupSquad:

; 1073 : 		pilots = sqd->NumActivePilots();

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?NumActivePilots@SquadronClass@@QAEHXZ	; SquadronClass::NumActivePilots
	mov	DWORD PTR _pilots$[ebp], eax
	jmp	SHORT $LN68@SetupSquad
$LN72@SetupSquad:

; 1074 : 	}
; 1075 : 	else if(ent->IsSquadron())

	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx
	test	eax, eax
	je	SHORT $LN69@SetupSquad

; 1076 : 	{
; 1077 : 		sqd=(Squadron)ent;

	mov	eax, DWORD PTR _ent$[ebp]
	mov	DWORD PTR _sqd$[ebp], eax

; 1078 : 		pilots = sqd->NumActivePilots();

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?NumActivePilots@SquadronClass@@QAEHXZ	; SquadronClass::NumActivePilots
	mov	DWORD PTR _pilots$[ebp], eax

; 1079 : 	}
; 1080 : 	else

	jmp	SHORT $LN68@SetupSquad
$LN69@SetupSquad:

; 1081 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	$LN74@SetupSquad
$LN68@SetupSquad:

; 1082 : 
; 1083 : 	urec=(UI_Refresher *)gGps->Find(sqd->GetCampID());

	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 1084 : 	if(!urec)

	cmp	DWORD PTR _urec$[ebp], 0
	jne	SHORT $LN67@SetupSquad

; 1085 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	$LN74@SetupSquad
$LN67@SetupSquad:

; 1086 : 
; 1087 : 	win=gMainHandler->FindWindow(AIR_UNIT_WIN);

	push	13600					; 00003520H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1088 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN66@SetupSquad

; 1089 : 	{
; 1090 : 		Leave=UI_Enter(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1091 : 
; 1092 : 		btn=(C_Button*)win->FindControl(UNIT_SQUADRON_TAB);

	push	13613					; 0000352dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1093 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN65@SetupSquad

; 1094 : 		{
; 1095 : 			btn->SetState(1);

	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1096 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN65@SetupSquad:

; 1097 : 		}
; 1098 : 
; 1099 : 		btn=(C_Button*)win->FindControl(UNIT_PILOT_TAB);

	push	13614					; 0000352eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1100 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN64@SetupSquad

; 1101 : 		{
; 1102 : 			btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1103 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN64@SetupSquad:

; 1104 : 		}
; 1105 : 
; 1106 : 		bmp=(C_Bitmap*)win->FindControl(UNIT_ICON);

	push	13548					; 000034ecH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1107 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN63@SetupSquad

; 1108 : 		{
; 1109 : 			bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1110 : 			if(urec->MapItem_ && urec->MapItem_->Icon)

	mov	ecx, DWORD PTR _urec$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN62@SetupSquad
	mov	edx, DWORD PTR _urec$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN62@SetupSquad

; 1111 : 			{
; 1112 : 				bmp->SetImage(urec->MapItem_->Icon->GetImage());

	mov	ecx, DWORD PTR _urec$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ	; O_Output::GetImage
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 1113 : 				bmp->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1114 : 			}
; 1115 : 			else

	jmp	SHORT $LN61@SetupSquad
$LN62@SetupSquad:

; 1116 : 				bmp->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN61@SetupSquad:

; 1117 : 			bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN63@SetupSquad:

; 1118 : 		}
; 1119 : 
; 1120 : 		bmp=(C_Bitmap*)win->FindControl(UNIT_PATCH);

	push	13619					; 00003533H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1121 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN60@SetupSquad

; 1122 : 		{
; 1123 : 			bmp->SetImage(SquadronMatchIDs[sqd->GetPatchID()][0]);

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPatchID@SquadronClass@@QAEEXZ	; SquadronClass::GetPatchID
	movzx	ecx, al
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?SquadronMatchIDs@@3PAY01JA[edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage

; 1124 : 			bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN60@SetupSquad:

; 1125 : 		}
; 1126 : 
; 1127 : 		btn=(C_Button*)win->FindControl(UNIT_SQUADRON_TAB);

	push	13613					; 0000352dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1128 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN59@SetupSquad

; 1129 : 		{
; 1130 : 			win->DisableCluster(btn->GetUserNumber(C_STATE_1));

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?DisableCluster@C_Window@@QAEXJ@Z	; C_Window::DisableCluster

; 1131 : 			win->EnableCluster(btn->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?EnableCluster@C_Window@@QAEXJ@Z	; C_Window::EnableCluster
$LN59@SetupSquad:

; 1132 : 		}
; 1133 : 		txt=(C_Text*)win->FindControl(UNIT_TITLE);

	push	13501					; 000034bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1134 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN58@SetupSquad

; 1135 : 		{
; 1136 : 			_TCHAR		tmp[80],*sptr;
; 1137 : 			// KCK: This is a better way of doing this, when taking into account localization
; 1138 : 			sqd->GetName(tmp,79,FALSE);

	push	0
	push	79					; 0000004fH
	lea	ecx, DWORD PTR _tmp$15[ebp]
	push	ecx
	mov	edx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 1139 : 			sptr = _tcschr(tmp,' ') + 1;

	push	32					; 00000020H
	lea	eax, DWORD PTR _tmp$15[ebp]
	push	eax
	call	?_tcschr@@YAPADPADI@Z			; _tcschr
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _sptr$10[ebp], eax

; 1140 : 			_tcscpy(buffer, sptr);

	mov	ecx, DWORD PTR _sptr$10[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1141 : //			_tcscpy(buffer,sqd->GetUnitClassName());
; 1142 : //			_tcscat(buffer," ");
; 1143 : //			_tcscat(buffer,gStringMgr->GetString(TXT_SQUADRON));
; 1144 : 			ForeignToUpper(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?ForeignToUpper@@YAXPAD@Z		; ForeignToUpper
	add	esp, 4

; 1145 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN58@SetupSquad:

; 1146 : 		}
; 1147 : 		txt=(C_Text*)win->FindControl(UNIT_NAME);

	push	13544					; 000034e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1148 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN57@SetupSquad

; 1149 : 		{
; 1150 : 			sqd->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1151 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN57@SetupSquad:

; 1152 : 		}
; 1153 : 		txt=(C_Text*)win->FindControl(UNIT_OWNER);

	push	13502					; 000034beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1154 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN56@SetupSquad

; 1155 : 		{
; 1156 : 			txt->SetText(TeamInfo[sqd->GetOwner()]->GetName());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN56@SetupSquad:

; 1157 : 		}
; 1158 : 		txt=(C_Text*)win->FindControl(UNIT_ROLE);

	push	13604					; 00003524H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1159 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN53@SetupSquad

; 1160 : 		{
; 1161 : 			switch(sqd->GetUnitSpecialty())

	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+772]
	call	eax
	mov	DWORD PTR tv428[ebp], eax
	cmp	DWORD PTR tv428[ebp], 1
	je	SHORT $LN52@SetupSquad
	cmp	DWORD PTR tv428[ebp], 2
	je	SHORT $LN51@SetupSquad
	jmp	SHORT $LN50@SetupSquad
$LN52@SetupSquad:

; 1162 : 			{
; 1163 : 				case SQUADRON_SPECIALTY_AA:
; 1164 : 					txt->SetText(TXT_AIR_TO_AIR);

	push	128					; 00000080H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1165 : 					break;

	jmp	SHORT $LN53@SetupSquad
$LN51@SetupSquad:

; 1166 : 				case SQUADRON_SPECIALTY_AG:
; 1167 : 					txt->SetText(TXT_AIR_TO_GROUND);

	push	129					; 00000081H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1168 : 					break;

	jmp	SHORT $LN53@SetupSquad
$LN50@SetupSquad:

; 1169 : 				default:
; 1170 : 					txt->SetText(TXT_GENERAL);

	push	130					; 00000082H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN53@SetupSquad:

; 1171 : 					break;
; 1172 : 			}
; 1173 : 		}
; 1174 : 		txt=(C_Text*)win->FindControl(UNIT_NUM_AIRCRAFT);

	push	13603					; 00003523H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1175 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN49@SetupSquad

; 1176 : 		{
; 1177 : 			_stprintf(buffer,"%1d",sqd->GetTotalVehicles());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1178 : 			txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN49@SetupSquad:

; 1179 : 		}
; 1180 : 		txt=(C_Text*)win->FindControl(UNIT_NUM_PILOTS);

	push	13617					; 00003531H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1181 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN48@SetupSquad

; 1182 : 		{
; 1183 : 			_stprintf(buffer,"%1d",pilots);

	mov	ecx, DWORD PTR _pilots$[ebp]
	push	ecx
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1184 : 			txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN48@SetupSquad:

; 1185 : 		}
; 1186 : 		txt=(C_Text*)win->FindControl(UNIT_AIRCRAFT_LOSSES);

	push	13615					; 0000352fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1187 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN47@SetupSquad

; 1188 : 		{
; 1189 : 			_stprintf(buffer,"%1d",sqd->GetTotalLosses());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetTotalLosses@SquadronClass@@QAEEXZ	; SquadronClass::GetTotalLosses
	movzx	ecx, al
	push	ecx
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1190 : 			txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN47@SetupSquad:

; 1191 : 		}
; 1192 : 		txt=(C_Text*)win->FindControl(UNIT_PILOT_LOSSES);

	push	13616					; 00003530H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1193 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN46@SetupSquad

; 1194 : 		{
; 1195 : 			_stprintf(buffer,"%1d",sqd->GetPilotLosses());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotLosses@SquadronClass@@QAEEXZ	; SquadronClass::GetPilotLosses
	movzx	ecx, al
	push	ecx
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1196 : 			txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN46@SetupSquad:

; 1197 : 		}
; 1198 : 		txt=(C_Text*)win->FindControl(UNIT_PLAYERS);

	push	13611					; 0000352bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1199 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN45@SetupSquad

; 1200 : 		{
; 1201 : 			count=0;

	xor	ecx, ecx
	mov	WORD PTR _count$[ebp], cx

; 1202 : 			if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	$LN44@SetupSquad

; 1203 : 			{
; 1204 : 				VuSessionsIterator sessionWalker(FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN78@SetupSquad
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv543[ebp], eax
	jmp	SHORT $LN79@SetupSquad
$LN78@SetupSquad:
	mov	DWORD PTR tv543[ebp], 0
$LN79@SetupSquad:
	mov	eax, DWORD PTR tv543[ebp]
	push	eax
	lea	ecx, DWORD PTR _sessionWalker$9[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1205 : 				FalconSessionEntity *session;
; 1206 : 
; 1207 : 				session = (FalconSessionEntity*)sessionWalker.GetFirst();

	lea	ecx, DWORD PTR _sessionWalker$9[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$12[ebp], eax
$LN43@SetupSquad:

; 1208 : 				while(session)

	cmp	DWORD PTR _session$12[ebp], 0
	je	SHORT $LN42@SetupSquad

; 1209 : 				{
; 1210 : 					if(session->GetPlayerSquadronID() == sqd->Id())

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _session$12[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN41@SetupSquad

; 1211 : 						count++;

	mov	cx, WORD PTR _count$[ebp]
	add	cx, 1
	mov	WORD PTR _count$[ebp], cx
$LN41@SetupSquad:

; 1212 : 					session = (FalconSessionEntity*)sessionWalker.GetNext();

	lea	ecx, DWORD PTR _sessionWalker$9[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$12[ebp], eax

; 1213 : 				}

	jmp	SHORT $LN43@SetupSquad
$LN42@SetupSquad:

; 1214 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sessionWalker$9[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator

; 1215 : 			else

	jmp	SHORT $LN39@SetupSquad
$LN44@SetupSquad:

; 1216 : 			{
; 1217 : 				if(FalconLocalSession->GetPlayerSquadronID() == sqd->Id())

	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@SetupSquad

; 1218 : 					count++;

	mov	dx, WORD PTR _count$[ebp]
	add	dx, 1
	mov	WORD PTR _count$[ebp], dx
$LN39@SetupSquad:

; 1219 : 			}
; 1220 : 			_stprintf(buffer,"%1d",count);

	movsx	eax, WORD PTR _count$[ebp]
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1221 : 			txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN45@SetupSquad:

; 1222 : 		}
; 1223 : 		lbox=(C_ListBox*)win->FindControl(UNIT_EXPERIENCE);

	push	13535					; 000034dfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1224 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN38@SetupSquad

; 1225 : 		{
; 1226 : 			count=0;

	xor	ecx, ecx
	mov	WORD PTR _count$[ebp], cx

; 1227 : 			total=0;

	mov	DWORD PTR _total$[ebp], 0

; 1228 : 			for(i=0;i<PILOTS_PER_SQUADRON;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN37@SetupSquad
$LN36@SetupSquad:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN37@SetupSquad:
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 48					; 00000030H
	jge	SHORT $LN35@SetupSquad

; 1229 : 			{
; 1230 : 				if(sqd->GetPilotData(i)->pilot_status == PILOT_IN_USE || sqd->GetPilotData(i)->pilot_status == PILOT_AVAILABLE)

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	eax, BYTE PTR [eax+3]
	cmp	eax, 4
	je	SHORT $LN33@SetupSquad
	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	edx, BYTE PTR [eax+3]
	test	edx, edx
	jne	SHORT $LN34@SetupSquad
$LN33@SetupSquad:

; 1231 : 				{
; 1232 : 					total+=sqd->GetPilotData(i)->GetPilotSkill();

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	mov	ecx, eax
	call	?GetPilotSkill@PilotClass@@QAEHXZ	; PilotClass::GetPilotSkill
	add	eax, DWORD PTR _total$[ebp]
	mov	DWORD PTR _total$[ebp], eax

; 1233 : 					count++;

	mov	cx, WORD PTR _count$[ebp]
	add	cx, 1
	mov	WORD PTR _count$[ebp], cx
$LN34@SetupSquad:

; 1234 : 				}
; 1235 : 			}

	jmp	$LN36@SetupSquad
$LN35@SetupSquad:

; 1236 : 			if(count)

	movsx	edx, WORD PTR _count$[ebp]
	test	edx, edx
	je	SHORT $LN32@SetupSquad

; 1237 : // 2000-11-17 MODIFIED BY S.G. SO WE TAKE AN *AVERAGE* OF THE SKILL
; 1238 : //				total/=count;
; 1239 : 				total = (long)((float)total / (float)count + 0.5F);

	cvtsi2ss xmm0, DWORD PTR _total$[ebp]
	movsx	eax, WORD PTR _count$[ebp]
	cvtsi2ss xmm1, eax
	divss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si ecx, xmm0
	mov	DWORD PTR _total$[ebp], ecx
$LN32@SetupSquad:

; 1240 : 
; 1241 : 			lbox->SetValue(total+1);

	mov	edx, DWORD PTR _total$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN38@SetupSquad:

; 1242 : 		}
; 1243 : 		lbox=(C_ListBox*)win->FindControl(UNIT_MORALE);

	push	13508					; 000034c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1244 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN27@SetupSquad

; 1245 : 		{
; 1246 : 			// KCK: Base moral off pilot losses/active pilots..
; 1247 : 			if (pilots > (PILOTS_PER_SQUADRON * 3) / 4)

	cmp	DWORD PTR _pilots$[ebp], 36		; 00000024H
	jle	SHORT $LN30@SetupSquad

; 1248 : 				lbox->SetValue(MORALE_HIGH);

	push	13522					; 000034d2H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN27@SetupSquad
$LN30@SetupSquad:

; 1249 : 			else if (pilots > PILOTS_PER_SQUADRON / 2)

	cmp	DWORD PTR _pilots$[ebp], 24		; 00000018H
	jle	SHORT $LN28@SetupSquad

; 1250 : 				lbox->SetValue(MORALE_NORMAL);

	push	13523					; 000034d3H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1251 : 			else

	jmp	SHORT $LN27@SetupSquad
$LN28@SetupSquad:

; 1252 : 				lbox->SetValue(MORALE_LOW);

	push	13524					; 000034d4H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN27@SetupSquad:

; 1253 : 		}
; 1254 : 		txt=(C_Text*)win->FindControl(UNIT_RESUPPLY_DATE);

	push	18344					; 000047a8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1255 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN26@SetupSquad

; 1256 : 		{
; 1257 : 			CampaignTime	time = (sqd->GetLastResupplyTime() + sqd->GetUnitSupplyTime());

	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+792]
	call	eax
	mov	esi, eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetUnitSupplyTime@UnitClass@@QAEKXZ	; UnitClass::GetUnitSupplyTime
	add	esi, eax
	mov	DWORD PTR _time$13[ebp], esi

; 1258 : 			// Round to nearest hour
; 1259 : 			time = (time / CampaignHours) * CampaignHours;

	mov	eax, DWORD PTR _time$13[ebp]
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	imul	eax, 3600000				; 0036ee80H
	mov	DWORD PTR _time$13[ebp], eax

; 1260 : 			GetTimeString(time, buffer, FALSE);

	push	0
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _time$13[ebp]
	push	eax
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 1261 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN26@SetupSquad:

; 1262 : 		}
; 1263 : 		txt=(C_Text*)win->FindControl(UNIT_LAST_AIRCRAFT_RECEIVED);

	push	18343					; 000047a7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1264 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN25@SetupSquad

; 1265 : 		{
; 1266 : 			_stprintf(buffer,"%d",sqd->GetLastResupply());

	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+796]
	call	eax
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1267 : 			txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN25@SetupSquad:

; 1268 : 		}
; 1269 : 		lbox=(C_ListBox*)win->FindControl(UNIT_SUPPLY);

	push	13503					; 000034bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1270 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN17@SetupSquad

; 1271 : 		{
; 1272 : 			int supply=100,need = sqd->GetUnitSupplyNeed(FALSE);

	mov	DWORD PTR _supply$14[ebp], 100		; 00000064H
	push	0
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+536]
	call	eax
	mov	DWORD PTR _need$11[ebp], eax

; 1273 : 			if (need)

	cmp	DWORD PTR _need$11[ebp], 0
	je	SHORT $LN23@SetupSquad

; 1274 : 				supply = (sqd->GetUnitSupplyNeed(TRUE)*100)/need;

	push	1
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+536]
	call	eax
	imul	eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR _need$11[ebp]
	mov	DWORD PTR _supply$14[ebp], eax
$LN23@SetupSquad:

; 1275 : 			if(supply < 20)

	cmp	DWORD PTR _supply$14[ebp], 20		; 00000014H
	jge	SHORT $LN22@SetupSquad

; 1276 : 				lbox->SetValue(SUPPLY_CRITICAL);

	push	13507					; 000034c3H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN17@SetupSquad
$LN22@SetupSquad:

; 1277 : 			else if(supply < 45)

	cmp	DWORD PTR _supply$14[ebp], 45		; 0000002dH
	jge	SHORT $LN20@SetupSquad

; 1278 : 				lbox->SetValue(SUPPLY_LOW);

	push	13506					; 000034c2H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN17@SetupSquad
$LN20@SetupSquad:

; 1279 : 			else if(supply < 65)

	cmp	DWORD PTR _supply$14[ebp], 65		; 00000041H
	jge	SHORT $LN18@SetupSquad

; 1280 : 				lbox->SetValue(SUPPLY_NORMAL);

	push	13505					; 000034c1H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1281 : 			else

	jmp	SHORT $LN17@SetupSquad
$LN18@SetupSquad:

; 1282 : 				lbox->SetValue(SUPPLY_FULL);

	push	13504					; 000034c0H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN17@SetupSquad:

; 1283 : 		}
; 1284 : 		btn=(C_Button*)win->FindControl(UNIT_AIRBASE);

	push	13602					; 00003522H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1285 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN16@SetupSquad

; 1286 : 		{
; 1287 : 			ent=sqd->GetUnitAirbase();

	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _ent$[ebp], eax

; 1288 : 			if(ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN15@SetupSquad

; 1289 : 				{
; 1290 : 				if (ent->IsObjective())

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN14@SetupSquad

; 1291 : 					ent->GetName(buffer,40,TRUE);

	push	1
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 1292 : 				else

	jmp	SHORT $LN13@SetupSquad
$LN14@SetupSquad:

; 1293 : 					ent->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN13@SetupSquad:

; 1294 : 				}
; 1295 : 			else

	jmp	SHORT $LN12@SetupSquad
$LN15@SetupSquad:

; 1296 : 				_tcscpy(buffer,"Area 51");

	push	OFFSET ??_C@_07LMLJGMAE@Area?551?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN12@SetupSquad:

; 1297 : 			btn->SetText(C_STATE_0,buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText
$LN16@SetupSquad:

; 1298 : 		}
; 1299 : 
; 1300 : 		btn=(C_Button*)win->FindControl(UNIT_SQUADRON_TAB);

	push	13613					; 0000352dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1301 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN11@SetupSquad

; 1302 : 		{
; 1303 : 			total=0;

	mov	DWORD PTR _total$[ebp], 0

; 1304 : 			for(i=0;i<ARO_OTHER;i++)

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN10@SetupSquad
$LN9@SetupSquad:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN10@SetupSquad:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 16					; 00000010H
	jge	SHORT $LN8@SetupSquad

; 1305 : 				total+=sqd->GetRating(i);

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetRating@SquadronClass@@QAEEH@Z	; SquadronClass::GetRating
	movzx	ecx, al
	add	ecx, DWORD PTR _total$[ebp]
	mov	DWORD PTR _total$[ebp], ecx
	jmp	SHORT $LN9@SetupSquad
$LN8@SetupSquad:

; 1306 : 			total/=ARO_OTHER;

	mov	eax, DWORD PTR _total$[ebp]
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	sar	eax, 4
	mov	DWORD PTR _total$[ebp], eax

; 1307 : 			if(total < 0)

	cmp	DWORD PTR _total$[ebp], 0
	jge	SHORT $LN7@SetupSquad

; 1308 : 				total=0;

	mov	DWORD PTR _total$[ebp], 0
$LN7@SetupSquad:

; 1309 : 			if(total > 4)

	cmp	DWORD PTR _total$[ebp], 4
	jle	SHORT $LN6@SetupSquad

; 1310 : 				total=4;

	mov	DWORD PTR _total$[ebp], 4
$LN6@SetupSquad:

; 1311 : 
; 1312 : 			kills[0]=0;

	mov	edx, 4
	imul	edx, 0
	mov	DWORD PTR _kills$[ebp+edx], 0

; 1313 : 			kills[1]=0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR _kills$[ebp+eax], 0

; 1314 : 			kills[2]=0;

	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR _kills$[ebp+ecx], 0

; 1315 : 			kills[3]=0;

	mov	edx, 4
	imul	edx, 3
	mov	DWORD PTR _kills$[ebp+edx], 0

; 1316 : 			session = (FalconSessionEntity*)sessionWalker.GetFirst();

	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$[ebp], eax
$LN5@SetupSquad:

; 1317 : 			while(session)

	cmp	DWORD PTR _session$[ebp], 0
	je	$LN4@SetupSquad

; 1318 : 			{
; 1319 : 				if(session->GetPlayerSquadronID() == sqd->Id())

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN3@SetupSquad

; 1320 : 				{
; 1321 : 					kills[0]+=session->GetKill(FalconSessionEntity::_AIR_KILLS_);

	mov	esi, 4
	imul	esi, 0
	push	0
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	add	eax, DWORD PTR _kills$[ebp+esi]
	mov	ecx, 4
	imul	ecx, 0
	mov	DWORD PTR _kills$[ebp+ecx], eax

; 1322 : 					kills[1]+=session->GetKill(FalconSessionEntity::_GROUND_KILLS_);

	mov	esi, 4
	shl	esi, 0
	push	1
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	add	edx, DWORD PTR _kills$[ebp+esi]
	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR _kills$[ebp+eax], edx

; 1323 : 					kills[2]+=session->GetKill(FalconSessionEntity::_NAVAL_KILLS_);

	mov	esi, 4
	shl	esi, 1
	push	2
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	add	ecx, DWORD PTR _kills$[ebp+esi]
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR _kills$[ebp+edx], ecx

; 1324 : 					kills[3]+=session->GetKill(FalconSessionEntity::_STATIC_KILLS_);

	mov	esi, 4
	imul	esi, 3
	push	3
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	add	eax, DWORD PTR _kills$[ebp+esi]
	mov	ecx, 4
	imul	ecx, 3
	mov	DWORD PTR _kills$[ebp+ecx], eax
$LN3@SetupSquad:

; 1325 : 				}
; 1326 : 				session = (FalconSessionEntity*)sessionWalker.GetNext();

	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$[ebp], eax

; 1327 : 			}

	jmp	$LN5@SetupSquad
$LN4@SetupSquad:

; 1328 : 
; 1329 : 
; 1330 : 			btn->SetUserNumber(C_STATE_2,sqd->GetMissionsFlown());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetMissionsFlown@SquadronClass@@QAEFXZ	; SquadronClass::GetMissionsFlown
	movsx	edx, ax
	push	edx
	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1331 : 			btn->SetUserNumber(C_STATE_3,total*25);

	mov	eax, DWORD PTR _total$[ebp]
	imul	eax, 25					; 00000019H
	push	eax
	push	3
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1332 : 			btn->SetUserNumber(C_STATE_4,sqd->GetAAKills()+kills[0]);

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetAAKills@SquadronClass@@QAEFXZ	; SquadronClass::GetAAKills
	movsx	ecx, ax
	mov	edx, 4
	imul	edx, 0
	add	ecx, DWORD PTR _kills$[ebp+edx]
	push	ecx
	push	4
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1333 : 			btn->SetUserNumber(C_STATE_5,sqd->GetAGKills()+kills[1]);

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetAGKills@SquadronClass@@QAEFXZ	; SquadronClass::GetAGKills
	cwde
	mov	ecx, 4
	shl	ecx, 0
	add	eax, DWORD PTR _kills$[ebp+ecx]
	push	eax
	push	5
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1334 : 			btn->SetUserNumber(C_STATE_6,sqd->GetANKills()+kills[2]);

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetANKills@SquadronClass@@QAEFXZ	; SquadronClass::GetANKills
	movsx	edx, ax
	mov	eax, 4
	shl	eax, 1
	add	edx, DWORD PTR _kills$[ebp+eax]
	push	edx
	push	6
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1335 : 			btn->SetUserNumber(C_STATE_7,sqd->GetASKills()+kills[3]);

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetASKills@SquadronClass@@QAEFXZ	; SquadronClass::GetASKills
	movsx	ecx, ax
	mov	edx, 4
	imul	edx, 3
	add	ecx, DWORD PTR _kills$[ebp+edx]
	push	ecx
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1336 : 			btn->SetUserNumber(10,sqd->GetPatchID());

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPatchID@SquadronClass@@QAEEXZ	; SquadronClass::GetPatchID
	movzx	eax, al
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1337 : 			SquadronAirUnitCB(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z	; SquadronAirUnitCB
	add	esp, 12					; 0000000cH
$LN11@SetupSquad:

; 1338 : 		}
; 1339 : 		tree=(C_TreeList*)win->FindControl(UNIT_PILOTLIST);

	push	13118					; 0000333eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1340 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN2@SetupSquad

; 1341 : 		{
; 1342 : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 1343 : 			tree->SetSortCallback(SortPilotByNameCB);

	push	OFFSET ?SortPilotByNameCB@@YAHPAVTREELIST@@0@Z ; SortPilotByNameCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 1344 : 			BuildPilotList(tree,sqd);

	mov	edx, DWORD PTR _sqd$[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z ; BuildPilotList
	add	esp, 8
$LN2@SetupSquad:

; 1345 : 		}
; 1346 : 
; 1347 : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1348 : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 1349 : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 1350 : //dpc SquadronInfoFix for other squadrons 
; 1351 : //somehow this updates the squad info correctly, while the first call above doesn't....weird
; 1352 :         if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN1@SetupSquad

; 1353 :         {
; 1354 :             SquadronAirUnitCB(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z	; SquadronAirUnitCB
	add	esp, 12					; 0000000cH
$LN1@SetupSquad:

; 1355 :         }
; 1356 : //end SquadronInfoFix
; 1357 :                 
; 1358 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN66@SetupSquad:

; 1359 : 	}
; 1360 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN74@SetupSquad:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z$0:
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z$1:
	lea	ecx, DWORD PTR _sessionWalker$9[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-492]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z ENDP		; SetupSquadronInfoWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_btn2$ = -8						; size = 4
_btn1$ = -4						; size = 4
_list$ = 8						; size = 4
_newitem$ = 12						; size = 4
?SortPilotByNameCB@@YAHPAVTREELIST@@0@Z PROC		; SortPilotByNameCB

; 1015 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 1016 : 	C_Button *btn1,*btn2;
; 1017 : 
; 1018 : 	if(!list || !newitem)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN7@SortPilotB
	cmp	DWORD PTR _newitem$[ebp], 0
	jne	SHORT $LN8@SortPilotB
$LN7@SortPilotB:

; 1019 : 		return(FALSE);

	xor	eax, eax
	jmp	$LN9@SortPilotB
$LN8@SortPilotB:

; 1020 : 
; 1021 : 	if(!list->Item_ || !newitem->Item_)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN5@SortPilotB
	mov	ecx, DWORD PTR _newitem$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	jne	SHORT $LN6@SortPilotB
$LN5@SortPilotB:

; 1022 : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN9@SortPilotB
$LN6@SortPilotB:

; 1023 : 
; 1024 : 	btn1=(C_Button *)list->Item_;

	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn1$[ebp], eax

; 1025 : 	btn2=(C_Button *)newitem->Item_;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _btn2$[ebp], edx

; 1026 : 
; 1027 : 	if(btn2->GetUserNumber(20) > btn1->GetUserNumber(20))

	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn2$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn1$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	esi, eax
	jle	SHORT $LN4@SortPilotB

; 1028 : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN9@SortPilotB
	jmp	SHORT $LN3@SortPilotB
$LN4@SortPilotB:

; 1029 : 	else if(btn2->GetUserNumber(20) == btn1->GetUserNumber(20))

	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn2$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn1$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	esi, eax
	jne	SHORT $LN3@SortPilotB

; 1030 : 	{
; 1031 : 		if(_tcsicmp(btn2->GetText(0),btn1->GetText(0)) < 0)

	push	0
	mov	ecx, DWORD PTR _btn1$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn2$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN3@SortPilotB

; 1032 : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN9@SortPilotB
$LN3@SortPilotB:

; 1033 : 	}
; 1034 : 	return(FALSE);

	xor	eax, eax
$LN9@SortPilotB:

; 1035 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SortPilotByNameCB@@YAHPAVTREELIST@@0@Z ENDP		; SortPilotByNameCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_sqd$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?SquadronFindCB@@YAXJFPAVC_Base@@@Z PROC		; SquadronFindCB

; 1002 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1003 : 	Squadron sqd;
; 1004 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SquadronFi

; 1005 : 		return;

	jmp	SHORT $LN3@SquadronFi
$LN2@SquadronFi:

; 1006 : 
; 1007 : 	sqd=(Squadron)vuDatabase->Find(gLastSquadron);

	mov	ecx, DWORD PTR ?gLastSquadron@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gLastSquadron@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sqd$[ebp], eax

; 1008 : 	if(sqd && sqd->IsSquadron())

	cmp	DWORD PTR _sqd$[ebp], 0
	je	SHORT $LN3@SquadronFi
	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN3@SquadronFi

; 1009 : 	{
; 1010 : 		FindMapIcon(sqd->GetCampID());

	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	call	?FindMapIcon@@YAXJ@Z			; FindMapIcon
	add	esp, 4
$LN3@SquadronFi:

; 1011 : 	}
; 1012 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SquadronFindCB@@YAXJFPAVC_Base@@@Z ENDP		; SquadronFindCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_btn$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PilotAirUnitCB@@YAXJFPAVC_Base@@@Z PROC		; PilotAirUnitCB

; 976  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 977  : 	C_TreeList *tree=NULL;

	mov	DWORD PTR _tree$[ebp], 0

; 978  : 	C_Button *btn=NULL;

	mov	DWORD PTR _btn$[ebp], 0

; 979  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@PilotAirUn

; 980  : 		return;

	jmp	$LN7@PilotAirUn
$LN6@PilotAirUn:

; 981  : 
; 982  : 	if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	$LN7@PilotAirUn

; 983  : 	{
; 984  : 		control->Parent_->DisableCluster(control->GetUserNumber(C_STATE_1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?DisableCluster@C_Window@@QAEXJ@Z	; C_Window::DisableCluster

; 985  : 		tree=(C_TreeList*)control->Parent_->FindControl(UNIT_PILOTLIST);

	push	13118					; 0000333eH
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 986  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@PilotAirUn

; 987  : 		{
; 988  : 			if(tree->GetRoot())

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	test	eax, eax
	je	SHORT $LN3@PilotAirUn

; 989  : 				btn=(C_Button*)tree->GetRoot()->Item_;

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], eax
$LN3@PilotAirUn:

; 990  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@PilotAirUn

; 991  : 				PickPilotCB(btn->GetID(),hittype,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?PickPilotCB@@YAXJFPAVC_Base@@@Z	; PickPilotCB
	add	esp, 12					; 0000000cH
$LN2@PilotAirUn:

; 992  : 			control->Parent_->EnableCluster(control->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?EnableCluster@C_Window@@QAEXJ@Z	; C_Window::EnableCluster

; 993  : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 994  : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN4@PilotAirUn

; 995  : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@PilotAirUn:

; 996  : 		}
; 997  : 		control->Parent_->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN7@PilotAirUn:

; 998  : 	}
; 999  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PilotAirUnitCB@@YAXJFPAVC_Base@@@Z ENDP		; PilotAirUnitCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z PROC		; SquadronAirUnitCB

; 962  : {

	push	ebp
	mov	ebp, esp

; 963  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SquadronAi

; 964  : 		return;

	jmp	SHORT $LN3@SquadronAi
$LN2@SquadronAi:

; 965  : 
; 966  : 	if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	SHORT $LN3@SquadronAi

; 967  : 	{
; 968  : 		control->Parent_->DisableCluster(control->GetUserNumber(C_STATE_1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?DisableCluster@C_Window@@QAEXJ@Z	; C_Window::DisableCluster

; 969  : 		PickSquadronStatsCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?PickSquadronStatsCB@@YAXJFPAVC_Base@@@Z ; PickSquadronStatsCB
	add	esp, 12					; 0000000cH

; 970  : 		control->Parent_->EnableCluster(control->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?EnableCluster@C_Window@@QAEXJ@Z	; C_Window::EnableCluster

; 971  : 		control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN3@SquadronAi:

; 972  : 	}
; 973  : }

	pop	ebp
	ret	0
?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z ENDP		; SquadronAirUnitCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_Leave$ = -28						; size = 4
_bmp$ = -24						; size = 4
_txt$ = -20						; size = 4
_buffer$ = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PickSquadronStatsCB@@YAXJFPAVC_Base@@@Z PROC		; PickSquadronStatsCB

; 897  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 898  : 	C_Text *txt;
; 899  : 	C_Bitmap *bmp;
; 900  : 	_TCHAR buffer[10];
; 901  : 
; 902  : 	F4CSECTIONHANDLE *Leave;
; 903  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@PickSquadr

; 904  : 		return;

	jmp	$LN11@PickSquadr
$LN10@PickSquadr:

; 905  : 
; 906  : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 907  : 
; 908  : 	bmp=(C_Bitmap*)control->Parent_->FindControl(UNIT_PICTURE);

	push	13612					; 0000352cH
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 909  : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN9@PickSquadr

; 910  : 	{
; 911  : 		bmp->SetImage(SquadronMatchIDs[control->GetUserNumber(10)][0]);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR ?SquadronMatchIDs@@3PAY01JA[ecx+eax*8]
	push	edx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage

; 912  : 		bmp->Refresh();

	mov	eax, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@PickSquadr:

; 913  : 	}
; 914  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_NUM_MISSIONS);

	push	13605					; 00003525H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 915  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN8@PickSquadr

; 916  : 	{
; 917  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 918  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 919  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@PickSquadr:

; 920  : 	}
; 921  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_AVG_RATING);

	push	13606					; 00003526H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 922  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@PickSquadr

; 923  : 	{
; 924  : 		if(control->GetUserNumber(C_STATE_2))

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN6@PickSquadr

; 925  : 			txt->SetText(ratingstr[(short)(((float)control->GetUserNumber(C_STATE_3)/25.0f + 0.5f))%5]);

	push	3
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@41c80000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si edx, xmm0
	movsx	eax, dx
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR ?ratingstr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 926  : 		else

	jmp	SHORT $LN5@PickSquadr
$LN6@PickSquadr:

; 927  : 			txt->SetText(TXT_NO_RATING);

	push	299					; 0000012bH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN5@PickSquadr:

; 928  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@PickSquadr:

; 929  : 	}
; 930  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_A_A_KILLS);

	push	13607					; 00003527H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 931  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@PickSquadr

; 932  : 	{
; 933  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_4));

	push	4
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 934  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 935  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@PickSquadr:

; 936  : 	}
; 937  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_A_G_KILLS);

	push	13608					; 00003528H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 938  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@PickSquadr

; 939  : 	{
; 940  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_5));

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 941  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 942  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@PickSquadr:

; 943  : 	}
; 944  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_NAVAL_KILLS);

	push	13609					; 00003529H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 945  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@PickSquadr

; 946  : 	{
; 947  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_6));

	push	6
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 948  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 949  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@PickSquadr:

; 950  : 	}
; 951  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_STATIC_KILLS);

	push	13610					; 0000352aH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 952  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN1@PickSquadr

; 953  : 	{
; 954  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_7));

	push	7
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 955  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 956  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@PickSquadr:

; 957  : 	}
; 958  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN11@PickSquadr:

; 959  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PickSquadronStatsCB@@YAXJFPAVC_Base@@@Z ENDP		; PickSquadronStatsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T2 = -136						; size = 8
$T3 = -128						; size = 8
$T4 = -120						; size = 8
_sessionWalker$ = -112					; size = 12
$T5 = -100						; size = 4
$T6 = -96						; size = 4
tv85 = -92						; size = 4
$T7 = -88						; size = 4
tv374 = -84						; size = 4
$T8 = -80						; size = 4
tv150 = -76						; size = 4
_lbptr$ = -72						; size = 4
_item$ = -68						; size = 4
_ID$ = -64						; size = 4
_session$ = -60						; size = 4
_i$ = -56						; size = 2
_btn$ = -52						; size = 4
_buffer$ = -48						; size = 30
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_tree$ = 8						; size = 4
_sqd$ = 12						; size = 4
?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z PROC ; BuildPilotList

; 792  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 793  : 	C_Button *btn;
; 794  : 	_TCHAR buffer[30];
; 795  : 	short i;
; 796  : 	long ID=1;

	mov	DWORD PTR _ID$[ebp], 1

; 797  : 	TREELIST *item;
; 798  : 	RemoteLB *lbptr;
; 799  : 
; 800  : 	tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 801  : 	priorpilot=NULL;

	mov	DWORD PTR _priorpilot, 0

; 802  : 
; 803  : 	VuSessionsIterator sessionWalker(FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@BuildPilot
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN25@BuildPilot
$LN24@BuildPilot:
	mov	DWORD PTR tv85[ebp], 0
$LN25@BuildPilot:
	mov	ecx, DWORD PTR tv85[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 804  : 	FalconSessionEntity *session;
; 805  : 
; 806  : 	session = (FalconSessionEntity*)sessionWalker.GetFirst();

	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$[ebp], eax
$LN21@BuildPilot:

; 807  : 	while(session)

	cmp	DWORD PTR _session$[ebp], 0
	je	$LN20@BuildPilot

; 808  : 	{
; 809  : 		if(session->GetPlayerSquadronID() == sqd->Id())

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	$LN19@BuildPilot

; 810  : 		{
; 811  : 			btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN26@BuildPilot
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN27@BuildPilot
$LN26@BuildPilot:
	mov	DWORD PTR tv150[ebp], 0
$LN27@BuildPilot:
	mov	edx, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _btn$[ebp], eax

; 812  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN19@BuildPilot

; 813  : 			{
; 814  : 				btn->Setup(ID,C_TYPE_CUSTOM,0,0);

	push	0
	push	0
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 815  : 				btn->SetText(C_STATE_0,gStringMgr->GetText(gStringMgr->AddText(session->GetPlayerName())));

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 816  : 				btn->SetText(C_STATE_1,gStringMgr->GetText(gStringMgr->AddText(session->GetPlayerName())));

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 817  : 				btn->SetColor(C_STATE_0,0xeeeeee);

	push	15658734				; 00eeeeeeH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 818  : 				btn->SetColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 819  : 				btn->SetCallback(PickPilotCB);

	push	OFFSET ?PickPilotCB@@YAXJFPAVC_Base@@@Z	; PickPilotCB
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 820  : 				if(session == FalconLocalSession)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	DWORD PTR _session$[ebp], eax
	jne	SHORT $LN17@BuildPilot

; 821  : 				{
; 822  : 					if(LogBook.GetPictureResource()) // Temporary

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	test	eax, eax
	je	SHORT $LN16@BuildPilot

; 823  : 						btn->SetUserNumber(C_STATE_0,LogBook.GetPictureResource()); // Image ID goes here

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 824  : 					else

	jmp	SHORT $LN15@BuildPilot
$LN16@BuildPilot:

; 825  : 					{ // Need to load a file
; 826  : 						btn->SetUserNumber(C_STATE_0,NOFACE); // Image ID goes here

	push	60000					; 0000ea60H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN15@BuildPilot:

; 827  : 					}
; 828  : 				}
; 829  : 				else

	jmp	SHORT $LN14@BuildPilot
$LN17@BuildPilot:

; 830  : 				{
; 831  : 					lbptr=(RemoteLB*)gCommsMgr->GetRemoteLB(session->Id().creator_);

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	add	eax, 4
	mov	ecx, eax
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetRemoteLB@UIComms@@QAEPAXJ@Z		; UIComms::GetRemoteLB
	mov	DWORD PTR _lbptr$[ebp], eax

; 832  : 					if(lbptr && lbptr->Pilot_.PictureResource)

	cmp	DWORD PTR _lbptr$[ebp], 0
	je	SHORT $LN13@BuildPilot
	mov	ecx, DWORD PTR _lbptr$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	SHORT $LN13@BuildPilot

; 833  : 					{
; 834  : 						btn->SetUserNumber(C_STATE_0,lbptr->Pilot_.PictureResource); // Image ID goes here

	mov	edx, DWORD PTR _lbptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 835  : 					}
; 836  : 					else

	jmp	SHORT $LN14@BuildPilot
$LN13@BuildPilot:

; 837  : 						btn->SetUserNumber(C_STATE_0,NOFACE); // Image ID goes here

	push	60000					; 0000ea60H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN14@BuildPilot:

; 838  : 				}
; 839  : 				btn->SetUserNumber(C_STATE_2,session->GetMissions()); // Num Missions

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	ecx, ax
	push	ecx
	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 840  : 				btn->SetUserNumber(C_STATE_3,session->GetRating()); // Mission Rating

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetRating@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetRating
	movzx	edx, al
	push	edx
	push	3
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 841  : 				btn->SetUserNumber(C_STATE_4,session->GetKill(FalconSessionEntity::_AIR_KILLS_));

	push	0
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	push	eax
	push	4
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 842  : 				btn->SetUserNumber(C_STATE_5,session->GetKill(FalconSessionEntity::_GROUND_KILLS_));

	push	1
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	push	ecx
	push	5
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 843  : 				btn->SetUserNumber(C_STATE_6,session->GetKill(FalconSessionEntity::_NAVAL_KILLS_));

	push	2
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	push	edx
	push	6
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 844  : 				btn->SetUserNumber(C_STATE_7,session->GetKill(FalconSessionEntity::_STATIC_KILLS_));

	push	3
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	push	eax
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 845  : 				btn->SetUserNumber(20,GetRank(session->GetPlayerName()));

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	call	?GetRank@@YAJPAD@Z			; GetRank
	add	esp, 4
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 846  : 				item=tree->CreateItem(ID,C_TYPE_ITEM,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 847  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN11@BuildPilot

; 848  : 					tree->AddItem(tree->GetRoot(),item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN11@BuildPilot:

; 849  : 				ID++;

	mov	ecx, DWORD PTR _ID$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ID$[ebp], ecx
$LN19@BuildPilot:

; 850  : 			}
; 851  : 		}
; 852  : 		session = (FalconSessionEntity*)sessionWalker.GetNext();

	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$[ebp], eax

; 853  : 	}

	jmp	$LN21@BuildPilot
$LN20@BuildPilot:

; 854  : 
; 855  : 	for(i=0;i<PILOTS_PER_SQUADRON;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN10@BuildPilot
$LN9@BuildPilot:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN10@BuildPilot:
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 48					; 00000030H
	jge	$LN8@BuildPilot

; 856  : 	{
; 857  : //		if(sqd->GetPilotData(i)->pilot_status == PILOT_IN_USE || sqd->GetPilotData(i)->pilot_status == PILOT_AVAILABLE)
; 858  : 		if(sqd->GetPilotData(i)->pilot_status != PILOT_KIA)

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	eax, BYTE PTR [eax+3]
	cmp	eax, 1
	je	$LN7@BuildPilot

; 859  : 		{
; 860  : 			GetPilotName(sqd->GetPilotData(i)->pilot_id,buffer,25);

	push	25					; 00000019H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	eax, WORD PTR [eax]
	push	eax
	call	?GetPilotName@@YAXHPADH@Z		; GetPilotName
	add	esp, 12					; 0000000cH

; 861  : 			btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN28@BuildPilot
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv374[ebp], eax
	jmp	SHORT $LN29@BuildPilot
$LN28@BuildPilot:
	mov	DWORD PTR tv374[ebp], 0
$LN29@BuildPilot:
	mov	ecx, DWORD PTR tv374[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _btn$[ebp], edx

; 862  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN7@BuildPilot

; 863  : 			{
; 864  : 				btn->Setup(ID,C_TYPE_CUSTOM,0,0);

	push	0
	push	0
	push	29					; 0000001dH
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 865  : 
; 866  : 				btn->SetText(C_STATE_0,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 867  : 				btn->SetText(C_STATE_1,gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 868  : 				btn->SetColor(C_STATE_0,0xeeeeee);

	push	15658734				; 00eeeeeeH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 869  : 				btn->SetColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 870  : 				btn->SetCallback(PickPilotCB);

	push	OFFSET ?PickPilotCB@@YAXJFPAVC_Base@@@Z	; PickPilotCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 871  : 				if(sqd->GetOwner() == FalconLocalSession->GetCountry())

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	esi, al
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetCountry@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetCountry
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN5@BuildPilot

; 872  : 					btn->SetUserNumber(C_STATE_0,PilotImageIDs[PilotInfo[sqd->GetPilotData(i)->pilot_id].photo_id]); // Image ID goes here

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	eax, WORD PTR [eax]
	mov	ecx, DWORD PTR ?PilotInfo@@3PAVPilotInfoClass@@A ; PilotInfo
	movzx	edx, BYTE PTR [ecx+eax*4+3]
	mov	eax, DWORD PTR ?PilotImageIDs@@3PAJA[edx*4]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 873  : 				else

	jmp	SHORT $LN4@BuildPilot
$LN5@BuildPilot:

; 874  : 					btn->SetUserNumber(C_STATE_0,FlagImageID[TeamInfo[sqd->GetOwner()]->GetFlag()][BIG_HORIZ]); // Image ID goes here

	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	imul	eax, 20					; 00000014H
	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR ?FlagImageID@@3PAY04JA[eax+edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN4@BuildPilot:

; 875  : 				btn->SetUserNumber(C_STATE_2,sqd->GetPilotData(i)->missions_flown); // Num Missions

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movsx	edx, WORD PTR [eax+8]
	push	edx
	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 876  : 				btn->SetUserNumber(C_STATE_3,sqd->GetPilotData(i)->GetPilotRating()*25); // Mission Rating

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	mov	ecx, eax
	call	?GetPilotRating@PilotClass@@QAEHXZ	; PilotClass::GetPilotRating
	imul	eax, 25					; 00000019H
	push	eax
	push	3
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 877  : 				btn->SetUserNumber(C_STATE_4,sqd->GetPilotData(i)->aa_kills);

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	edx, BYTE PTR [eax+4]
	push	edx
	push	4
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 878  : 				btn->SetUserNumber(C_STATE_5,sqd->GetPilotData(i)->ag_kills);

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	ecx, BYTE PTR [eax+5]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 879  : 				btn->SetUserNumber(C_STATE_6,sqd->GetPilotData(i)->an_kills);

	movsx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	eax, BYTE PTR [eax+7]
	push	eax
	push	6
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 880  : 				btn->SetUserNumber(C_STATE_7,sqd->GetPilotData(i)->as_kills);

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sqd$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	movzx	edx, BYTE PTR [eax+6]
	push	edx
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 881  : 				btn->SetUserNumber(20,GetRank(buffer));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?GetRank@@YAJPAD@Z			; GetRank
	add	esp, 4
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 882  : 				item=tree->CreateItem(ID,C_TYPE_ITEM,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 883  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN3@BuildPilot

; 884  : 					tree->AddItem(tree->GetRoot(),item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN3@BuildPilot:

; 885  : 				if(ID == 1)

	cmp	DWORD PTR _ID$[ebp], 1
	jne	SHORT $LN2@BuildPilot

; 886  : 					PickPilotCB(ID,C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?PickPilotCB@@YAXJFPAVC_Base@@@Z	; PickPilotCB
	add	esp, 12					; 0000000cH
$LN2@BuildPilot:

; 887  : 				ID++;

	mov	eax, DWORD PTR _ID$[ebp]
	add	eax, 1
	mov	DWORD PTR _ID$[ebp], eax
$LN7@BuildPilot:

; 888  : 			}
; 889  : 		}
; 890  : 	}

	jmp	$LN9@BuildPilot
$LN8@BuildPilot:

; 891  : 	tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 892  : 	if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN1@BuildPilot

; 893  : 		tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@BuildPilot:

; 894  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$0:
	lea	ecx, DWORD PTR _sessionWalker$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z$2:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildPilotList@@YAXPAVC_TreeList@@PAVSquadronClass@@@Z ENDP ; BuildPilotList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_rnk$ = -8						; size = 4
_i$ = -4						; size = 4
_str$ = 8						; size = 4
?GetRank@@YAJPAD@Z PROC					; GetRank

; 773  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 774  : 	_TCHAR *rnk;
; 775  : 	long i;
; 776  : 
; 777  : 	i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN4@GetRank:

; 778  : 	while(i < NUM_RANKS)

	cmp	DWORD PTR _i$[ebp], 7
	jge	SHORT $LN3@GetRank

; 779  : 	{
; 780  : 		rnk=gStringMgr->GetString(gRanksTxt[i]);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?gRanksTxt@@3PAJA[eax*4]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	mov	DWORD PTR _rnk$[ebp], eax

; 781  : 		if(rnk)

	cmp	DWORD PTR _rnk$[ebp], 0
	je	SHORT $LN2@GetRank

; 782  : 		{
; 783  : 			if(!_tcsncicmp(rnk,str,_tcsclen(rnk)))

	mov	edx, DWORD PTR _rnk$[ebp]
	push	edx
	call	__tcsclen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rnk$[ebp]
	push	ecx
	call	__tcsncicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@GetRank

; 784  : 				return(i);

	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN5@GetRank
$LN2@GetRank:

; 785  : 		}
; 786  : 		i++;

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 787  : 	}

	jmp	SHORT $LN4@GetRank
$LN3@GetRank:

; 788  : 	return(0);

	xor	eax, eax
$LN5@GetRank:

; 789  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetRank@@YAJPAD@Z ENDP					; GetRank
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_Leave$ = -28						; size = 4
_bmp$ = -24						; size = 4
_txt$ = -20						; size = 4
_buffer$ = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PickPilotCB@@YAXJFPAVC_Base@@@Z PROC			; PickPilotCB

; 692  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 693  : 	C_Bitmap *bmp;
; 694  : 	C_Text *txt;
; 695  : 	_TCHAR buffer[10];
; 696  : 	F4CSECTIONHANDLE *Leave;
; 697  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN13@PickPilotC

; 698  : 		return;

	jmp	$LN14@PickPilotC
$LN13@PickPilotC:

; 699  : 
; 700  : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 701  : 	bmp=(C_Bitmap*)control->Parent_->FindControl(UNIT_PICTURE);

	push	13612					; 0000352cH
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 702  : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN12@PickPilotC

; 703  : 	{
; 704  : 		if(priorpilot)

	cmp	DWORD PTR _priorpilot, 0
	je	SHORT $LN11@PickPilotC

; 705  : 		{
; 706  : 			priorpilot->SetState(0);

	push	0
	mov	ecx, DWORD PTR _priorpilot
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _priorpilot
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 707  : 			priorpilot->Refresh();

	mov	ecx, DWORD PTR _priorpilot
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _priorpilot
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@PickPilotC:

; 708  : 		}
; 709  : 		control->SetState(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 710  : 		control->Refresh();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 711  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 712  : 		if(control->GetUserNumber(C_STATE_0))

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN10@PickPilotC

; 713  : 			bmp->SetImage(control->GetUserNumber(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage
$LN10@PickPilotC:

; 714  : 		else
; 715  : 		{ // Need to load a file
; 716  : 		}
; 717  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@PickPilotC:

; 718  : 	}
; 719  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_NUM_MISSIONS);

	push	13605					; 00003525H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 720  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN8@PickPilotC

; 721  : 	{
; 722  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 723  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 724  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@PickPilotC:

; 725  : 	}
; 726  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_AVG_RATING);

	push	13606					; 00003526H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 727  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@PickPilotC

; 728  : 	{
; 729  : 		if(control->GetUserNumber(C_STATE_3))

	push	3
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN6@PickPilotC

; 730  : 			txt->SetText(ratingstr[(short)(((float)control->GetUserNumber(C_STATE_3)/25.0f + 0.5f))%5]);

	push	3
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@41c80000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si edx, xmm0
	movsx	eax, dx
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR ?ratingstr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 731  : 		else

	jmp	SHORT $LN5@PickPilotC
$LN6@PickPilotC:

; 732  : 			txt->SetText(TXT_NO_RATING);

	push	299					; 0000012bH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN5@PickPilotC:

; 733  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@PickPilotC:

; 734  : 	}
; 735  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_A_A_KILLS);

	push	13607					; 00003527H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 736  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@PickPilotC

; 737  : 	{
; 738  : 		txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 739  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_4));

	push	4
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 740  : 		txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 741  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@PickPilotC:

; 742  : 	}
; 743  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_A_G_KILLS);

	push	13608					; 00003528H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 744  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@PickPilotC

; 745  : 	{
; 746  : 		txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 747  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_5));

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 748  : 		txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 749  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@PickPilotC:

; 750  : 	}
; 751  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_NAVAL_KILLS);

	push	13609					; 00003529H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 752  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@PickPilotC

; 753  : 	{
; 754  : 		txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 755  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_6));

	push	6
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 756  : 		txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 757  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@PickPilotC:

; 758  : 	}
; 759  : 	txt=(C_Text*)control->Parent_->FindControl(UNIT_STATIC_KILLS);

	push	13610					; 0000352aH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 760  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN1@PickPilotC

; 761  : 	{
; 762  : 		txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 763  : 		_stprintf(buffer,"%1d",control->GetUserNumber(C_STATE_7));

	push	7
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_03GNGPFOOL@?$CF1d?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 764  : 		txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 765  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@PickPilotC:

; 766  : 	}
; 767  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 768  : 	priorpilot=control;

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _priorpilot, edx
$LN14@PickPilotC:

; 769  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PickPilotCB@@YAXJFPAVC_Base@@@Z ENDP			; PickPilotCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_Leave$ = -452						; size = 4
_sptr$1 = -448						; size = 4
_y$ = -444						; size = 4
_orders$2 = -440					; size = 4
_h$ = -436						; size = 4
_obj$3 = -432						; size = 4
_urec$ = -428						; size = 4
_ebox$ = -424						; size = 4
_Strength$ = -420					; size = 4
_Morale$ = -416						; size = 4
_Supply$ = -412						; size = 4
_Fatigue$ = -408					; size = 4
_NumUnits$ = -404					; size = 4
_par$ = -400						; size = 4
_un$ = -396						; size = 4
_bmp$ = -392						; size = 4
_div$ = -388						; size = 4
_tmpun$ = -384						; size = 4
_line$ = -380						; size = 4
_win$ = -376						; size = 4
_txt$ = -372						; size = 4
_lbox$ = -368						; size = 4
_tmp$4 = -364						; size = 80
_tmp$5 = -284						; size = 80
_buffer$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_DivID$ = 8						; size = 4
_owner$ = 12						; size = 2
?SetupDivisionInfoWindow@@YAXJF@Z PROC			; SetupDivisionInfoWindow

; 428  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 429  : 	C_Window *win;
; 430  : 	C_ListBox *lbox;
; 431  : 	C_EditBox *ebox;
; 432  : 	C_Text *txt;
; 433  : 	C_Line *line;
; 434  : 	C_Bitmap *bmp;
; 435  : 	UI_Refresher *urec;
; 436  : 	long Morale=0;

	mov	DWORD PTR _Morale$[ebp], 0

; 437  : 	long Fatigue=0;

	mov	DWORD PTR _Fatigue$[ebp], 0

; 438  : 	long Supply=0;

	mov	DWORD PTR _Supply$[ebp], 0

; 439  : 	long Strength=0;//,MaxStrength=0;

	mov	DWORD PTR _Strength$[ebp], 0

; 440  : 	long NumUnits=0;

	mov	DWORD PTR _NumUnits$[ebp], 0

; 441  : 	long y,h;
; 442  : 	Unit un,tmpun;
; 443  : 	Unit par;
; 444  : 	Division div;
; 445  : 	_TCHAR buffer[200];
; 446  : 	F4CSECTIONHANDLE *Leave;
; 447  : 
; 448  : 	win=gMainHandler->FindWindow(UNIT_WIN);

	push	13500					; 000034bcH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 449  : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN34@SetupDivis

; 450  : 		return;

	jmp	$LN35@SetupDivis
$LN34@SetupDivis:

; 451  : 
; 452  : 	div=GetFirstDivisionByCountry(owner);

	movsx	eax, WORD PTR _owner$[ebp]
	push	eax
	call	?GetFirstDivisionByCountry@@YAPAVDivisionClass@@H@Z ; GetFirstDivisionByCountry
	add	esp, 4
	mov	DWORD PTR _div$[ebp], eax
$LN33@SetupDivis:

; 453  : 	while(div && div->nid != (DivID))

	cmp	DWORD PTR _div$[ebp], 0
	je	SHORT $LN32@SetupDivis
	mov	ecx, DWORD PTR _div$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	cmp	edx, DWORD PTR _DivID$[ebp]
	je	SHORT $LN32@SetupDivis

; 454  : 		div=GetNextDivisionByCountry(div,owner);

	movsx	eax, WORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _div$[ebp]
	push	ecx
	call	?GetNextDivisionByCountry@@YAPAVDivisionClass@@PAV1@H@Z ; GetNextDivisionByCountry
	add	esp, 8
	mov	DWORD PTR _div$[ebp], eax
	jmp	SHORT $LN33@SetupDivis
$LN32@SetupDivis:

; 455  : 
; 456  : 	if(!div)

	cmp	DWORD PTR _div$[ebp], 0
	jne	SHORT $LN31@SetupDivis

; 457  : 		return;

	jmp	$LN35@SetupDivis
$LN31@SetupDivis:

; 458  : 
; 459  : 	urec=(UI_Refresher*)gGps->Find(div->nid| UR_DIVISION);

	mov	edx, DWORD PTR _div$[ebp]
	movsx	eax, WORD PTR [edx+4]
	or	eax, 65536				; 00010000H
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 460  : 	if(!urec)

	cmp	DWORD PTR _urec$[ebp], 0
	jne	SHORT $LN30@SetupDivis

; 461  : 		return;

	jmp	$LN35@SetupDivis
$LN30@SetupDivis:

; 462  : 
; 463  : 	Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 464  : 	DeleteGroupList(UNIT_WIN);

	push	13500					; 000034bcH
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 465  : 
; 466  : 	ClearUnitVehicles();

	call	?ClearUnitVehicles@@YAXXZ		; ClearUnitVehicles

; 467  : 	un=div->GetFirstUnitElement();

	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetFirstUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ ; DivisionClass::GetFirstUnitElement
	mov	DWORD PTR _un$[ebp], eax

; 468  : 	par=un;

	mov	edx, DWORD PTR _un$[ebp]
	mov	DWORD PTR _par$[ebp], edx
$LN29@SetupDivis:

; 469  : 	while(par)

	cmp	DWORD PTR _par$[ebp], 0
	je	$LN28@SetupDivis

; 470  : 	{
; 471  : 		tmpun=par->GetFirstUnitElement();

	mov	eax, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx+956]
	call	eax
	mov	DWORD PTR _tmpun$[ebp], eax
$LN27@SetupDivis:

; 472  : 		while(tmpun)

	cmp	DWORD PTR _tmpun$[ebp], 0
	je	$LN26@SetupDivis

; 473  : 		{
; 474  : 			Morale+=tmpun->GetUnitMorale();

	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	eax, DWORD PTR [edx+780]
	call	eax
	add	eax, DWORD PTR _Morale$[ebp]
	mov	DWORD PTR _Morale$[ebp], eax

; 475  : 			Fatigue+=tmpun->GetUnitFatigue();

	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	eax, DWORD PTR [edx+884]
	call	eax
	add	eax, DWORD PTR _Fatigue$[ebp]
	mov	DWORD PTR _Fatigue$[ebp], eax

; 476  : 			Supply+=tmpun->GetUnitSupply();

	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmpun$[ebp]
	mov	eax, DWORD PTR [edx+776]
	call	eax
	add	eax, DWORD PTR _Supply$[ebp]
	mov	DWORD PTR _Supply$[ebp], eax

; 477  : 			Strength+=(tmpun->GetTotalVehicles()*100)/tmpun->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _tmpun$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	esi, eax
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR _tmpun$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, DWORD PTR _Strength$[ebp]
	mov	DWORD PTR _Strength$[ebp], eax

; 478  : 			NumUnits++;

	mov	edx, DWORD PTR _NumUnits$[ebp]
	add	edx, 1
	mov	DWORD PTR _NumUnits$[ebp], edx

; 479  : 			TallyUnitVehicles(tmpun);

	mov	eax, DWORD PTR _tmpun$[ebp]
	push	eax
	call	?TallyUnitVehicles@@YAXPAVUnitClass@@@Z	; TallyUnitVehicles
	add	esp, 4

; 480  : 			tmpun=par->GetNextUnitElement();

	mov	ecx, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx+960]
	call	eax
	mov	DWORD PTR _tmpun$[ebp], eax

; 481  : 		}

	jmp	$LN27@SetupDivis
$LN26@SetupDivis:

; 482  : 		par=div->GetNextUnitElement();

	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetNextUnitElement@DivisionClass@@QAEPAVUnitClass@@XZ ; DivisionClass::GetNextUnitElement
	mov	DWORD PTR _par$[ebp], eax

; 483  : 	}

	jmp	$LN29@SetupDivis
$LN28@SetupDivis:

; 484  : 
; 485  : 	if(NumUnits)

	cmp	DWORD PTR _NumUnits$[ebp], 0
	je	SHORT $LN25@SetupDivis

; 486  : 	{
; 487  : 		Morale/=NumUnits;

	mov	eax, DWORD PTR _Morale$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Morale$[ebp], eax

; 488  : 		Fatigue/=NumUnits;

	mov	eax, DWORD PTR _Fatigue$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Fatigue$[ebp], eax

; 489  : 		Supply/=NumUnits;

	mov	eax, DWORD PTR _Supply$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Supply$[ebp], eax

; 490  : 		Strength/=NumUnits;

	mov	eax, DWORD PTR _Strength$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Strength$[ebp], eax
$LN25@SetupDivis:

; 491  : 	}
; 492  : 
; 493  : 	txt=(C_Text*)win->FindControl(UNIT_TITLE);

	push	13501					; 000034bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 494  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN24@SetupDivis

; 495  : 	{
; 496  : 		_TCHAR		tmp[80],*sptr;
; 497  : 		// KCK: This is a better way of doing this, when taking into account localization
; 498  : 		div->GetName(tmp,79,FALSE);

	push	0
	push	79					; 0000004fH
	lea	ecx, DWORD PTR _tmp$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetName@DivisionClass@@QAEPADPADHH@Z	; DivisionClass::GetName

; 499  : 		sptr = _tcschr(tmp,' ') + 1;

	push	32					; 00000020H
	lea	edx, DWORD PTR _tmp$4[ebp]
	push	edx
	call	?_tcschr@@YAPADPADI@Z			; _tcschr
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _sptr$1[ebp], eax

; 500  : 		_tcscpy(buffer, sptr);

	mov	eax, DWORD PTR _sptr$1[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 501  : //		_tcscpy(buffer, un->GetUnitClassName());
; 502  : //		_tcscat(buffer,_T(" "));
; 503  : //		ReadIndexedString(613, tmp, 79);
; 504  : //		_tcscat(buffer,tmp);
; 505  : 		ForeignToUpper(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	?ForeignToUpper@@YAXPAD@Z		; ForeignToUpper
	add	esp, 4

; 506  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 507  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN24@SetupDivis:

; 508  : 	}
; 509  : 
; 510  : 	bmp=(C_Bitmap*)win->FindControl(UNIT_ICON);

	push	13548					; 000034ecH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 511  : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN23@SetupDivis

; 512  : 	{
; 513  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 514  : 		if(urec->MapItem_ && urec->MapItem_->Icon)

	mov	ecx, DWORD PTR _urec$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN22@SetupDivis
	mov	edx, DWORD PTR _urec$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN22@SetupDivis

; 515  : 		{
; 516  : 			bmp->SetImage(urec->MapItem_->Icon->GetImage());

	mov	ecx, DWORD PTR _urec$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ	; O_Output::GetImage
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 517  : 			bmp->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 518  : 		}
; 519  : 		else

	jmp	SHORT $LN21@SetupDivis
$LN22@SetupDivis:

; 520  : 			bmp->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN21@SetupDivis:

; 521  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN23@SetupDivis:

; 522  : 	}
; 523  : 
; 524  : 
; 525  : 	txt=(C_Text*)win->FindControl(UNIT_NAME);

	push	13544					; 000034e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 526  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN20@SetupDivis

; 527  : 	{
; 528  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 529  : 		div->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _div$[ebp]
	call	?GetName@DivisionClass@@QAEPADPADHH@Z	; DivisionClass::GetName

; 530  : 		txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 531  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@SetupDivis:

; 532  : 	}
; 533  : 
; 534  : 	par=un->GetUnitParent();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+944]
	call	eax
	mov	DWORD PTR _par$[ebp], eax

; 535  : 
; 536  : 	txt=(C_Text*)win->FindControl(UNIT_PARENT);

	push	13545					; 000034e9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 537  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN19@SetupDivis

; 538  : 	{
; 539  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 540  : 		txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN19@SetupDivis:

; 541  : 	}
; 542  : 
; 543  : 	txt=(C_Text*)win->FindControl(UNIT_GRANDPARENT);

	push	13546					; 000034eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 544  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN18@SetupDivis

; 545  : 	{
; 546  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 547  : 		txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN18@SetupDivis:

; 548  : 	}
; 549  : 
; 550  : /*	KCK: Changed to text box
; 551  : 	lbox=(C_ListBox*)win->FindControl(UNIT_OWNER);
; 552  : 	if(lbox)
; 553  : 	{
; 554  : 		// Use flag to determine owner name to choose.
; 555  : 		// This way TE works. Ideally, this would be a
; 556  : 		// text box and we'd set it to the team name string
; 557  : 		lbox->SetValue(TeamInfo[owner]->GetFlag()+1);
; 558  : 		lbox->Refresh();
; 559  : 	}
; 560  : */
; 561  : 
; 562  : 	txt=(C_Text*)win->FindControl(UNIT_OWNER);

	push	13502					; 000034beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 563  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN17@SetupDivis

; 564  : 	{
; 565  : 		txt->SetText(TeamInfo[owner]->GetName());

	movsx	ecx, WORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN17@SetupDivis:

; 566  : 	}
; 567  : 	
; 568  : 	lbox=(C_ListBox*)win->FindControl(UNIT_EXPERIENCE);

	push	13535					; 000034dfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 569  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN16@SetupDivis

; 570  : 	{
; 571  : 		lbox->SetValue(CVTRange(TeamInfo[(DivID >> 24)]->groundExperience,100,5));

	push	5
	push	100					; 00000064H
	mov	eax, DWORD PTR _DivID$[ebp]
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	movzx	edx, BYTE PTR [ecx+614]
	push	edx
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 572  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@SetupDivis:

; 573  : 	}
; 574  : 	
; 575  : 	lbox=(C_ListBox*)win->FindControl(UNIT_SUPPLY);

	push	13503					; 000034bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 576  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN15@SetupDivis

; 577  : 	{
; 578  : 		lbox->SetValue(CVTRange(Supply,100,4));

	push	4
	push	100					; 00000064H
	mov	ecx, DWORD PTR _Supply$[ebp]
	push	ecx
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 579  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN15@SetupDivis:

; 580  : 	}
; 581  : 	
; 582  : 	lbox=(C_ListBox*)win->FindControl(UNIT_MORALE);

	push	13508					; 000034c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 583  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN14@SetupDivis

; 584  : 	{
; 585  : 		lbox->SetValue(CVTRange(Morale,100,4));

	push	4
	push	100					; 00000064H
	mov	eax, DWORD PTR _Morale$[ebp]
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 586  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@SetupDivis:

; 587  : 	}
; 588  : 	
; 589  : 	lbox=(C_ListBox*)win->FindControl(UNIT_FATIGUE);

	push	13509					; 000034c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 590  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN13@SetupDivis

; 591  : 	{
; 592  : 		lbox->SetValue(CVTRange(Fatigue,100,4));

	push	4
	push	100					; 00000064H
	mov	ecx, DWORD PTR _Fatigue$[ebp]
	push	ecx
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 593  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN13@SetupDivis:

; 594  : 	}
; 595  : 	
; 596  : 	txt=(C_Text*)win->FindControl(UNIT_ETA);

	push	13511					; 000034c7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 597  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN12@SetupDivis

; 598  : 	{
; 599  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 600  : 		txt->SetText(gStringMgr->GetString(TXT_NONE));

	push	115					; 00000073H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 601  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@SetupDivis:

; 602  : 	}
; 603  : 
; 604  : 	lbox=(C_ListBox*)win->FindControl(UNIT_ORDERS);

	push	13512					; 000034c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 605  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN11@SetupDivis

; 606  : 	{
; 607  : 		lbox->SetValue(0);

	push	0
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 608  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@SetupDivis:

; 609  : 	}
; 610  : 	
; 611  : 	lbox=(C_ListBox*)win->FindControl(UNIT_FORMATION);

	push	13518					; 000034ceH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 612  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN10@SetupDivis

; 613  : 	{
; 614  : 		lbox->SetValue(0);

	push	0
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 615  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@SetupDivis:

; 616  : 	}
; 617  : 	
; 618  : 	lbox=(C_ListBox*)win->FindControl(UNIT_TOE);

	push	13536					; 000034e0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 619  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN9@SetupDivis

; 620  : 	{
; 621  : 		lbox->SetValue(un->GetTeam()+1);

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 622  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN9@SetupDivis:

; 623  : 	}
; 624  : 
; 625  : 	ebox=(C_EditBox*)win->FindControl(UNIT_OBJECTIVE);

	push	13510					; 000034c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 626  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN8@SetupDivis

; 627  : 	{
; 628  : 		// Orders part (Get from the old list box)
; 629  : 		int orders = un->GetUnitOrders();

	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+880]
	call	eax
	mov	DWORD PTR _orders$2[ebp], eax

; 630  : 		lbox=(C_ListBox*)win->FindControl(UNIT_ORDERS);

	push	13512					; 000034c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 631  : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN7@SetupDivis

; 632  : 			{
; 633  : 			lbox->SetValue(orders+1);

	mov	ecx, DWORD PTR _orders$2[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 634  : 			_tcscpy(buffer,lbox->GetText());

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN7@SetupDivis:

; 635  : 			}
; 636  : 		// Objective name part
; 637  : 		Objective obj=un->GetUnitObjective();

	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+864]
	call	eax
	mov	DWORD PTR _obj$3[ebp], eax

; 638  : 		if(obj)

	cmp	DWORD PTR _obj$3[ebp], 0
	je	$LN6@SetupDivis

; 639  : 		{
; 640  : 			_TCHAR		tmp[80];
; 641  : 			obj->GetName(tmp,20,FALSE);

	push	0
	push	20					; 00000014H
	lea	ecx, DWORD PTR _tmp$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$3[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 642  : 			if (gLangIDNum >= F4LANG_SPANISH)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 5		; gLangIDNum
	jl	SHORT $LN5@SetupDivis

; 643  : 			{
; 644  : 				_tcscat(buffer,_T(" - "));

	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 645  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$5[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN6@SetupDivis
$LN5@SetupDivis:

; 646  : 			}
; 647  : 			else if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN3@SetupDivis

; 648  : 			{
; 649  : 				_tcscat(buffer,_T(": "));

	push	OFFSET ??_C@_02LMMGGCAJ@?3?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 650  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$5[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 651  : 			}
; 652  : 			else

	jmp	SHORT $LN6@SetupDivis
$LN3@SetupDivis:

; 653  : 			{
; 654  : 				_tcscat(buffer,_T(" "));

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 655  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$5[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
$LN6@SetupDivis:

; 656  : 			}
; 657  : 		}
; 658  : 		ebox->SetText(gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 659  : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@SetupDivis:

; 660  : 	}
; 661  : 
; 662  : 	line=(C_Line*)win->FindControl(UNIT_STRENGTH);

	push	13542					; 000034e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 663  : 	if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN1@SetupDivis

; 664  : 	{// Strength
; 665  : 		line->Refresh();

	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 666  : 		h=line->GetUserNumber(C_STATE_1)*Strength/100;

	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	imul	eax, DWORD PTR _Strength$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _h$[ebp], eax

; 667  : 		y=line->GetUserNumber(C_STATE_0) + line->GetUserNumber(C_STATE_1)-h;

	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	add	esi, eax
	sub	esi, DWORD PTR _h$[ebp]
	mov	DWORD PTR _y$[ebp], esi

; 668  : 		line->SetY(y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 669  : 		line->SetH(h);

	mov	ecx, DWORD PTR _h$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 670  : 		line->Refresh();

	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@SetupDivis:

; 671  : 	}
; 672  : 
; 673  : 	AddVehiclesToWindow(win,0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z ; AddVehiclesToWindow
	add	esp, 8

; 674  : 
; 675  : 	gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 676  : 	gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 677  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN35@SetupDivis:

; 678  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetupDivisionInfoWindow@@YAXJF@Z ENDP			; SetupDivisionInfoWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_i$ = -456						; size = 4
_Leave$ = -452						; size = 4
_sptr$1 = -448						; size = 4
_orders$2 = -444					; size = 4
_y$ = -440						; size = 4
_h$ = -436						; size = 4
_wp$ = -432						; size = 4
_divpar$ = -428						; size = 4
_obj$ = -424						; size = 4
_ebox$ = -420						; size = 4
_urec$ = -416						; size = 4
_Fatigue$ = -412					; size = 4
_Strength$ = -408					; size = 4
_Morale$ = -404						; size = 4
_Supply$ = -400						; size = 4
_NumUnits$ = -396					; size = 4
_bmp$ = -392						; size = 4
_line$ = -388						; size = 4
_par$ = -384						; size = 4
_win$ = -380						; size = 4
_lbox$ = -376						; size = 4
_un$ = -372						; size = 4
_txt$ = -368						; size = 4
_tmp$3 = -364						; size = 80
_tmp$4 = -284						; size = 80
_buffer$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_unitID$ = 8						; size = 8
?SetupUnitInfoWindow@@YAXVVU_ID@@@Z PROC		; SetupUnitInfoWindow

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 456				; 000001c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 144  : 	C_Window *win;
; 145  : 	C_ListBox *lbox;
; 146  : 	C_EditBox *ebox;
; 147  : 	C_Text *txt;
; 148  : 	C_Line *line;
; 149  : 	C_Bitmap *bmp;
; 150  : 	UI_Refresher *urec;
; 151  : 	Objective obj;
; 152  : 	long Morale=0;

	mov	DWORD PTR _Morale$[ebp], 0

; 153  : 	long Fatigue=0;

	mov	DWORD PTR _Fatigue$[ebp], 0

; 154  : 	long Supply=0;

	mov	DWORD PTR _Supply$[ebp], 0

; 155  : 	long Strength=0;//,MaxStrength=0;

	mov	DWORD PTR _Strength$[ebp], 0

; 156  : 	long NumUnits=0;

	mov	DWORD PTR _NumUnits$[ebp], 0

; 157  : 	long y,h;
; 158  : 	Unit un;
; 159  : 	Unit par;
; 160  : 	Division divpar;
; 161  : 	WayPoint wp;
; 162  : 	_TCHAR buffer[200];
; 163  : 	int i;
; 164  : 	F4CSECTIONHANDLE *Leave;
; 165  : 
; 166  : 	win=gMainHandler->FindWindow(UNIT_WIN);

	push	13500					; 000034bcH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 167  : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN47@SetupUnitI

; 168  : 		return;

	jmp	$LN48@SetupUnitI
$LN47@SetupUnitI:

; 169  : 
; 170  : 	un=(Unit)vuDatabase->Find(unitID);

	mov	eax, DWORD PTR _unitID$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _unitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _un$[ebp], eax

; 171  : 	if(!un)

	cmp	DWORD PTR _un$[ebp], 0
	jne	SHORT $LN46@SetupUnitI

; 172  : 		return;

	jmp	$LN48@SetupUnitI
$LN46@SetupUnitI:

; 173  : 
; 174  : 	if(!un->IsBattalion() && !un->IsBrigade())

	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+240]
	call	edx
	test	eax, eax
	jne	SHORT $LN45@SetupUnitI
	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+244]
	call	eax
	test	eax, eax
	jne	SHORT $LN45@SetupUnitI

; 175  : 		return;

	jmp	$LN48@SetupUnitI
$LN45@SetupUnitI:

; 176  : 
; 177  : 	urec=(UI_Refresher*)gGps->Find(un->GetCampID());

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 178  : 	if(!urec)

	cmp	DWORD PTR _urec$[ebp], 0
	jne	SHORT $LN44@SetupUnitI

; 179  : 		return;

	jmp	$LN48@SetupUnitI
$LN44@SetupUnitI:

; 180  : 
; 181  : 	Leave=UI_Enter(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 182  : 	DeleteGroupList(UNIT_WIN);

	push	13500					; 000034bcH
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 183  : 
; 184  : 	ClearUnitVehicles();

	call	?ClearUnitVehicles@@YAXXZ		; ClearUnitVehicles

; 185  : 	if(un->IsBrigade())

	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+244]
	call	eax
	test	eax, eax
	je	$LN43@SetupUnitI

; 186  : 	{
; 187  : 		par=un->GetFirstUnitElement();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+956]
	call	eax
	mov	DWORD PTR _par$[ebp], eax
$LN42@SetupUnitI:

; 188  : 		while(par)

	cmp	DWORD PTR _par$[ebp], 0
	je	$LN41@SetupUnitI

; 189  : 		{
; 190  : 			Morale+=par->GetUnitMorale();

	mov	ecx, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx+780]
	call	eax
	add	eax, DWORD PTR _Morale$[ebp]
	mov	DWORD PTR _Morale$[ebp], eax

; 191  : 			Fatigue+=par->GetUnitFatigue();

	mov	ecx, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx+884]
	call	eax
	add	eax, DWORD PTR _Fatigue$[ebp]
	mov	DWORD PTR _Fatigue$[ebp], eax

; 192  : 			Supply+=par->GetUnitSupply();

	mov	ecx, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx+776]
	call	eax
	add	eax, DWORD PTR _Supply$[ebp]
	mov	DWORD PTR _Supply$[ebp], eax

; 193  : 			Strength+=(par->GetTotalVehicles()*100)/par->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _par$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	esi, eax
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR _par$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, DWORD PTR _Strength$[ebp]
	mov	DWORD PTR _Strength$[ebp], eax

; 194  : 			NumUnits++;

	mov	edx, DWORD PTR _NumUnits$[ebp]
	add	edx, 1
	mov	DWORD PTR _NumUnits$[ebp], edx

; 195  : 			TallyUnitVehicles(par);

	mov	eax, DWORD PTR _par$[ebp]
	push	eax
	call	?TallyUnitVehicles@@YAXPAVUnitClass@@@Z	; TallyUnitVehicles
	add	esp, 4

; 196  : 			par=un->GetNextUnitElement();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+960]
	call	eax
	mov	DWORD PTR _par$[ebp], eax

; 197  : 		}

	jmp	$LN42@SetupUnitI
$LN41@SetupUnitI:

; 198  : 		if(NumUnits)

	cmp	DWORD PTR _NumUnits$[ebp], 0
	je	SHORT $LN40@SetupUnitI

; 199  : 		{
; 200  : 			Morale/=NumUnits;

	mov	eax, DWORD PTR _Morale$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Morale$[ebp], eax

; 201  : 			Fatigue/=NumUnits;

	mov	eax, DWORD PTR _Fatigue$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Fatigue$[ebp], eax

; 202  : 			Supply/=NumUnits;

	mov	eax, DWORD PTR _Supply$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Supply$[ebp], eax

; 203  : 			Strength/=NumUnits;

	mov	eax, DWORD PTR _Strength$[ebp]
	cdq
	idiv	DWORD PTR _NumUnits$[ebp]
	mov	DWORD PTR _Strength$[ebp], eax
$LN40@SetupUnitI:

; 204  : 		};
; 205  : 	}
; 206  : 	else

	jmp	$LN39@SetupUnitI
$LN43@SetupUnitI:

; 207  : 	{
; 208  : 		Morale=un->GetUnitMorale();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+780]
	call	eax
	mov	DWORD PTR _Morale$[ebp], eax

; 209  : 		Fatigue=un->GetUnitFatigue();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+884]
	call	eax
	mov	DWORD PTR _Fatigue$[ebp], eax

; 210  : 		Supply=un->GetUnitSupply();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+776]
	call	eax
	mov	DWORD PTR _Supply$[ebp], eax

; 211  : 		Strength=(un->GetTotalVehicles()*100)/un->GetFullstrengthVehicles();

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	esi, eax
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _Strength$[ebp], eax

; 212  : 		TallyUnitVehicles(un);

	mov	edx, DWORD PTR _un$[ebp]
	push	edx
	call	?TallyUnitVehicles@@YAXPAVUnitClass@@@Z	; TallyUnitVehicles
	add	esp, 4
$LN39@SetupUnitI:

; 213  : 	}
; 214  : 	txt=(C_Text*)win->FindControl(UNIT_TITLE);

	push	13501					; 000034bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 215  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN38@SetupUnitI

; 216  : 	{
; 217  : 		_TCHAR		tmp[80],*sptr;
; 218  : 		// KCK: This is a better way of doing this, when taking into account localization
; 219  : 		un->GetName(tmp,79,FALSE);

	push	0
	push	79					; 0000004fH
	lea	eax, DWORD PTR _tmp$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 220  : 		sptr = _tcschr(tmp,' ') + 1;

	push	32					; 00000020H
	lea	ecx, DWORD PTR _tmp$3[ebp]
	push	ecx
	call	?_tcschr@@YAPADPADI@Z			; _tcschr
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _sptr$1[ebp], eax

; 221  : 		_tcscpy(buffer, sptr);

	mov	edx, DWORD PTR _sptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 222  : //		txt->Refresh();
; 223  : //		_tcscpy(buffer, un->GetUnitClassName());
; 224  : //		_tcscat(buffer,_T(" "));
; 225  : //		GetSizeName(un->GetDomain(),un->GetType(),tmp);
; 226  : //		_tcscat(buffer,tmp);
; 227  : 		ForeignToUpper(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?ForeignToUpper@@YAXPAD@Z		; ForeignToUpper
	add	esp, 4

; 228  : 		txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 229  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN38@SetupUnitI:

; 230  : 	}
; 231  : 
; 232  : 	bmp=(C_Bitmap*)win->FindControl(UNIT_ICON);

	push	13548					; 000034ecH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 233  : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN37@SetupUnitI

; 234  : 	{
; 235  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 236  : 		if(urec->MapItem_ && urec->MapItem_->Icon)

	mov	ecx, DWORD PTR _urec$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN36@SetupUnitI
	mov	edx, DWORD PTR _urec$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN36@SetupUnitI

; 237  : 		{
; 238  : 			bmp->SetImage(urec->MapItem_->Icon->GetImage());

	mov	ecx, DWORD PTR _urec$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ	; O_Output::GetImage
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 239  : 			bmp->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 240  : 		}
; 241  : 		else

	jmp	SHORT $LN35@SetupUnitI
$LN36@SetupUnitI:

; 242  : 			bmp->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN35@SetupUnitI:

; 243  : 		bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN37@SetupUnitI:

; 244  : 	}
; 245  : 
; 246  : 	txt=(C_Text*)win->FindControl(UNIT_NAME);

	push	13544					; 000034e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 247  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN34@SetupUnitI

; 248  : 	{
; 249  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 250  : 		un->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 251  : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 252  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN34@SetupUnitI:

; 253  : 	}
; 254  : 
; 255  : 	par=un->GetUnitParent();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+944]
	call	eax
	mov	DWORD PTR _par$[ebp], eax

; 256  : 
; 257  : 	txt=(C_Text*)win->FindControl(UNIT_PARENT);

	push	13545					; 000034e9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 258  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN33@SetupUnitI

; 259  : 	{
; 260  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 261  : 		if(un->IsBattalion())

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	test	eax, eax
	je	$LN32@SetupUnitI

; 262  : 		{
; 263  : 			par=un->GetUnitParent();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+944]
	call	eax
	mov	DWORD PTR _par$[ebp], eax

; 264  : 			if(par)

	cmp	DWORD PTR _par$[ebp], 0
	je	SHORT $LN31@SetupUnitI

; 265  : 			{
; 266  : 				par->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _par$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _par$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 267  : 				txt->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 268  : 				txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 269  : 			}
; 270  : 			else

	jmp	SHORT $LN30@SetupUnitI
$LN31@SetupUnitI:

; 271  : 				txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN30@SetupUnitI:

; 272  : 		}
; 273  : 		else

	jmp	SHORT $LN33@SetupUnitI
$LN32@SetupUnitI:

; 274  : 			txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN33@SetupUnitI:

; 275  : 	}
; 276  : 
; 277  : 	txt=(C_Text*)win->FindControl(UNIT_GRANDPARENT);

	push	13546					; 000034eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 278  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN28@SetupUnitI

; 279  : 	{
; 280  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 281  : 		if(par)

	cmp	DWORD PTR _par$[ebp], 0
	je	SHORT $LN27@SetupUnitI

; 282  : 			divpar=GetDivisionByUnit(par);

	mov	ecx, DWORD PTR _par$[ebp]
	push	ecx
	call	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z ; GetDivisionByUnit
	add	esp, 4
	mov	DWORD PTR _divpar$[ebp], eax

; 283  : 		else

	jmp	SHORT $LN26@SetupUnitI
$LN27@SetupUnitI:

; 284  : 			divpar=GetDivisionByUnit(un);

	mov	edx, DWORD PTR _un$[ebp]
	push	edx
	call	?GetDivisionByUnit@@YAPAVDivisionClass@@PAVUnitClass@@@Z ; GetDivisionByUnit
	add	esp, 4
	mov	DWORD PTR _divpar$[ebp], eax
$LN26@SetupUnitI:

; 285  : 		if(divpar)

	cmp	DWORD PTR _divpar$[ebp], 0
	je	SHORT $LN25@SetupUnitI

; 286  : 		{
; 287  : 			divpar->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _divpar$[ebp]
	call	?GetName@DivisionClass@@QAEPADPADHH@Z	; DivisionClass::GetName

; 288  : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 289  : 			txt->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 290  : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 291  : 		}
; 292  : 		else

	jmp	SHORT $LN28@SetupUnitI
$LN25@SetupUnitI:

; 293  : 			txt->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN28@SetupUnitI:

; 294  : 	}
; 295  : 
; 296  : /*	KCK: Changed to text box
; 297  : 	lbox=(C_ListBox*)win->FindControl(UNIT_OWNER);
; 298  : 	if(lbox)
; 299  : 	{
; 300  : 		// Use flag to determine owner name to choose.
; 301  : 		// This way TE works. Ideally, this would be a
; 302  : 		// text box and we'd set it to the team name string
; 303  : 		lbox->SetValue(TeamInfo[un->GetOwner()]->GetFlag()+1);
; 304  : 		lbox->Refresh();
; 305  : 	}
; 306  : */
; 307  : 	txt=(C_Text*)win->FindControl(UNIT_OWNER);

	push	13502					; 000034beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 308  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN23@SetupUnitI

; 309  : 	{
; 310  : 		txt->SetText(TeamInfo[un->GetOwner()]->GetName());

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN23@SetupUnitI:

; 311  : 	}
; 312  : 	
; 313  : 	lbox=(C_ListBox*)win->FindControl(UNIT_EXPERIENCE);

	push	13535					; 000034dfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 314  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN22@SetupUnitI

; 315  : 	{
; 316  : 		if (un->GetRClass() == RCLASS_AIR)

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetRClass@UnitClass@@QAEHXZ		; UnitClass::GetRClass
	test	eax, eax
	jne	SHORT $LN21@SetupUnitI

; 317  : 			lbox->SetValue(CVTRange(TeamInfo[un->GetTeam()]->airExperience-60,40,5));

	push	5
	push	40					; 00000028H
	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movzx	eax, BYTE PTR [edx+612]
	sub	eax, 60					; 0000003cH
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	$LN20@SetupUnitI
$LN21@SetupUnitI:

; 318  : 		else if (un->GetRClass() == RCLASS_NAVAL)

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetRClass@UnitClass@@QAEHXZ		; UnitClass::GetRClass
	cmp	eax, 3
	jne	SHORT $LN19@SetupUnitI

; 319  : 			lbox->SetValue(CVTRange(TeamInfo[un->GetTeam()]->navalExperience-60,40,5));

	push	5
	push	40					; 00000028H
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movzx	eax, BYTE PTR [edx+615]
	sub	eax, 60					; 0000003cH
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	$LN20@SetupUnitI
$LN19@SetupUnitI:

; 320  : 		else if (un->GetRClass() == RCLASS_AIRDEFENSE)

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetRClass@UnitClass@@QAEHXZ		; UnitClass::GetRClass
	cmp	eax, 2
	jne	SHORT $LN17@SetupUnitI

; 321  : 			lbox->SetValue(CVTRange(TeamInfo[un->GetTeam()]->airDefenseExperience-60,40,5));

	push	5
	push	40					; 00000028H
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movzx	eax, BYTE PTR [edx+613]
	sub	eax, 60					; 0000003cH
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 322  : 		else

	jmp	SHORT $LN20@SetupUnitI
$LN17@SetupUnitI:

; 323  : 			lbox->SetValue(CVTRange(TeamInfo[un->GetTeam()]->groundExperience-60,40,5));

	push	5
	push	40					; 00000028H
	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movzx	eax, BYTE PTR [edx+614]
	sub	eax, 60					; 0000003cH
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN20@SetupUnitI:

; 324  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN22@SetupUnitI:

; 325  : 	}
; 326  : 	
; 327  : 	lbox=(C_ListBox*)win->FindControl(UNIT_SUPPLY);

	push	13503					; 000034bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 328  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN15@SetupUnitI

; 329  : 	{
; 330  : 		lbox->SetValue(CVTRange(Supply,100,4));

	push	4
	push	100					; 00000064H
	mov	ecx, DWORD PTR _Supply$[ebp]
	push	ecx
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 331  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN15@SetupUnitI:

; 332  : 	}
; 333  : 	
; 334  : 	lbox=(C_ListBox*)win->FindControl(UNIT_MORALE);

	push	13508					; 000034c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 335  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN14@SetupUnitI

; 336  : 	{
; 337  : 		lbox->SetValue(CVTRange(Morale,100,4));

	push	4
	push	100					; 00000064H
	mov	eax, DWORD PTR _Morale$[ebp]
	push	eax
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 338  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@SetupUnitI:

; 339  : 	}
; 340  : 	
; 341  : 	lbox=(C_ListBox*)win->FindControl(UNIT_FATIGUE);

	push	13509					; 000034c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 342  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN13@SetupUnitI

; 343  : 	{
; 344  : 		lbox->SetValue(CVTRange(Fatigue,100,4));

	push	4
	push	100					; 00000064H
	mov	ecx, DWORD PTR _Fatigue$[ebp]
	push	ecx
	call	?CVTRange@@YAJJJJ@Z			; CVTRange
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 345  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN13@SetupUnitI:

; 346  : 	}
; 347  : 	
; 348  : 	txt=(C_Text*)win->FindControl(UNIT_ETA);

	push	13511					; 000034c7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 349  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN12@SetupUnitI

; 350  : 	{
; 351  : 		txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 352  : 		i=1;

	mov	DWORD PTR _i$[ebp], 1

; 353  : 		wp=un->GetCurrentUnitWP();

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ ; UnitClass::GetCurrentUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 354  : 		if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN11@SetupUnitI

; 355  : 		{
; 356  : 			GetTimeString(wp->GetWPArrivalTime(),buffer);

	push	1
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	push	eax
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 357  : 			txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 358  : 		}
; 359  : 		else

	jmp	SHORT $LN10@SetupUnitI
$LN11@SetupUnitI:

; 360  : 			txt->SetText(gStringMgr->GetString(TXT_NONE));

	push	115					; 00000073H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN10@SetupUnitI:

; 361  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@SetupUnitI:

; 362  : 	}
; 363  : 
; 364  : 	lbox=(C_ListBox*)win->FindControl(UNIT_FORMATION);

	push	13518					; 000034ceH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 365  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN9@SetupUnitI

; 366  : 	{
; 367  : 		lbox->SetValue(un->GetUnitFormation()+1);

	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetUnitFormation@UnitClass@@QBEHXZ	; UnitClass::GetUnitFormation
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 368  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@SetupUnitI:

; 369  : 	}
; 370  : 	
; 371  : 	ebox=(C_EditBox*)win->FindControl(UNIT_OBJECTIVE);

	push	13510					; 000034c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 372  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN8@SetupUnitI

; 373  : 	{
; 374  : 		// Orders part (Get from the old list box)
; 375  : 		int orders = un->GetUnitOrders();

	mov	ecx, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+880]
	call	eax
	mov	DWORD PTR _orders$2[ebp], eax

; 376  : 		lbox=(C_ListBox*)win->FindControl(UNIT_ORDERS);

	push	13512					; 000034c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 377  : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN7@SetupUnitI

; 378  : 			{
; 379  : 			lbox->SetValue(orders+1);

	mov	ecx, DWORD PTR _orders$2[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 380  : 			_tcscpy(buffer,lbox->GetText());

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN7@SetupUnitI:

; 381  : 			}
; 382  : 
; 383  : 		// Objective name part
; 384  : 		obj=un->GetUnitObjective();

	mov	eax, DWORD PTR _un$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _un$[ebp]
	mov	eax, DWORD PTR [edx+864]
	call	eax
	mov	DWORD PTR _obj$[ebp], eax

; 385  : 		if(obj)

	cmp	DWORD PTR _obj$[ebp], 0
	je	$LN6@SetupUnitI

; 386  : 		{
; 387  : 			_TCHAR		tmp[80];
; 388  : 			obj->GetName(tmp,20,FALSE);

	push	0
	push	20					; 00000014H
	lea	ecx, DWORD PTR _tmp$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 389  : 			if (gLangIDNum >= F4LANG_SPANISH)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 5		; gLangIDNum
	jl	SHORT $LN5@SetupUnitI

; 390  : 			{
; 391  : 				_tcscat(buffer,_T(" - "));

	push	OFFSET ??_C@_03NLJIHOMM@?5?9?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 392  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN6@SetupUnitI
$LN5@SetupUnitI:

; 393  : 			}
; 394  : 			else if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN3@SetupUnitI

; 395  : 			{
; 396  : 				_tcscat(buffer,_T(": "));

	push	OFFSET ??_C@_02LMMGGCAJ@?3?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 397  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 398  : 			}
; 399  : 			else

	jmp	SHORT $LN6@SetupUnitI
$LN3@SetupUnitI:

; 400  : 			{
; 401  : 				_tcscat(buffer,_T(" "));

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 402  : 				_tcscat(buffer,tmp);

	lea	ecx, DWORD PTR _tmp$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
$LN6@SetupUnitI:

; 403  : 			}
; 404  : 		}
; 405  : 		ebox->SetText(gStringMgr->GetText(gStringMgr->AddText(buffer)));

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 406  : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@SetupUnitI:

; 407  : 	}
; 408  : 
; 409  : 	line=(C_Line*)win->FindControl(UNIT_STRENGTH);

	push	13542					; 000034e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 410  : 	if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN1@SetupUnitI

; 411  : 	{// Strength
; 412  : 		line->Refresh();

	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 413  : 		h=line->GetUserNumber(C_STATE_1)*Strength/100;

	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	imul	eax, DWORD PTR _Strength$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _h$[ebp], eax

; 414  : 		y=line->GetUserNumber(C_STATE_0) + line->GetUserNumber(C_STATE_1)-h;

	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	add	esi, eax
	sub	esi, DWORD PTR _h$[ebp]
	mov	DWORD PTR _y$[ebp], esi

; 415  : 		line->SetY(y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 416  : 		line->SetH(h);

	mov	ecx, DWORD PTR _h$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 417  : 		line->Refresh();

	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@SetupUnitI:

; 418  : 	}
; 419  : 
; 420  : 	AddVehiclesToWindow(win,0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z ; AddVehiclesToWindow
	add	esp, 8

; 421  : 
; 422  : 	gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 423  : 	gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 424  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN48@SetupUnitI:

; 425  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetupUnitInfoWindow@@YAXVVU_ID@@@Z ENDP		; SetupUnitInfoWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_step$ = -4						; size = 4
_Value$ = 8						; size = 4
_MaxVal$ = 12						; size = 4
_NumSteps$ = 16						; size = 4
?CVTRange@@YAJJJJ@Z PROC				; CVTRange

; 126  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 127  : 	long step;
; 128  : 
; 129  : 	if(NumSteps < 1)

	cmp	DWORD PTR _NumSteps$[ebp], 1
	jge	SHORT $LN2@CVTRange

; 130  : 		return(1);

	mov	eax, 1
	jmp	SHORT $LN3@CVTRange
$LN2@CVTRange:

; 131  : 
; 132  : 	step=MaxVal/NumSteps;

	mov	eax, DWORD PTR _MaxVal$[ebp]
	cdq
	idiv	DWORD PTR _NumSteps$[ebp]
	mov	DWORD PTR _step$[ebp], eax

; 133  : 
; 134  : 	Value/=step;

	mov	eax, DWORD PTR _Value$[ebp]
	cdq
	idiv	DWORD PTR _step$[ebp]
	mov	DWORD PTR _Value$[ebp], eax

; 135  : 	Value++;

	mov	eax, DWORD PTR _Value$[ebp]
	add	eax, 1
	mov	DWORD PTR _Value$[ebp], eax

; 136  : 	if(Value > NumSteps)

	mov	ecx, DWORD PTR _Value$[ebp]
	cmp	ecx, DWORD PTR _NumSteps$[ebp]
	jle	SHORT $LN1@CVTRange

; 137  : 		Value=NumSteps;

	mov	edx, DWORD PTR _NumSteps$[ebp]
	mov	DWORD PTR _Value$[ebp], edx
$LN1@CVTRange:

; 138  : 
; 139  : 	return(Value);

	mov	eax, DWORD PTR _Value$[ebp]
$LN3@CVTRange:

; 140  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CVTRange@@YAJJJJ@Z ENDP				; CVTRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
$T2 = -96						; size = 4
_vc$ = -92						; size = 4
tv90 = -88						; size = 4
$T3 = -84						; size = 4
_y$ = -80						; size = 4
_i$ = -76						; size = 4
_txt$ = -72						; size = 4
_buffer$ = -68						; size = 50
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_client$ = 12						; size = 4
?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z PROC		; AddVehiclesToWindow

; 93   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 94   : 	C_Text *txt;
; 95   : 	int i,y=4;

	mov	DWORD PTR _y$[ebp], 4

; 96   : 	_TCHAR buffer[50];
; 97   : 	VehicleClassDataType *vc;
; 98   : 
; 99   : 	for(i=0;i<16;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@AddVehicle
$LN4@AddVehicle:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@AddVehicle:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	$LN3@AddVehicle

; 100  : 	{
; 101  : 		if(VehList[i][0] && VehList[i][1])

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _VehList[ecx+edx*8], 0
	je	$LN2@AddVehicle
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _VehList[eax+ecx*8], 0
	je	$LN2@AddVehicle

; 102  : 		{
; 103  : 			vc = GetVehicleClassData (VehList[i][0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _VehList[edx+eax*8]
	push	ecx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 104  : 			if(vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	$LN2@AddVehicle

; 105  : 			{
; 106  : 				txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN8@AddVehicle
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@AddVehicle
$LN8@AddVehicle:
	mov	DWORD PTR tv90[ebp], 0
$LN9@AddVehicle:
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 107  : 				txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 108  : 				txt->SetXY(15,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	push	15					; 0000000fH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 109  : 				txt->SetClient(static_cast<short>(client));

	movzx	eax, WORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 110  : 				txt->SetFont(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 111  : 				txt->SetFixedWidth(50);

	push	50					; 00000032H
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFixedWidth@C_Text@@QAEXJ@Z		; C_Text::SetFixedWidth

; 112  : 				_stprintf(buffer,"%1ld %s",VehList[i][1],vc->Name);

	mov	ecx, DWORD PTR _vc$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _VehList[edx+eax*8]
	push	ecx
	push	OFFSET ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 113  : 				txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 114  : 				txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 115  : 				win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 116  : 				y+=txt->GetH()+2;

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	mov	edx, DWORD PTR _y$[ebp]
	lea	eax, DWORD PTR [edx+eax+2]
	mov	DWORD PTR _y$[ebp], eax
$LN2@AddVehicle:

; 117  : 			}
; 118  : 		}
; 119  : 	}

	jmp	$LN4@AddVehicle
$LN3@AddVehicle:

; 120  : 	win->ScanClientArea(client);

	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientArea@C_Window@@QAEXJ@Z	; C_Window::ScanClientArea

; 121  : 	win->RefreshClient(client);

	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 122  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddVehiclesToWindow@@YAXPAVC_Window@@J@Z ENDP		; AddVehiclesToWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_ID$ = -12						; size = 4
_i$ = -8						; size = 4
_j$ = -4						; size = 4
_un$ = 8						; size = 4
?TallyUnitVehicles@@YAXPAVUnitClass@@@Z PROC		; TallyUnitVehicles

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi

; 67   : 	int i,j,ID;
; 68   : 
; 69   : 	if(!un)

	cmp	DWORD PTR _un$[ebp], 0
	jne	SHORT $LN10@TallyUnitV

; 70   : 		return;

	jmp	$LN11@TallyUnitV
$LN10@TallyUnitV:

; 71   : 
; 72   : 	for(i=0;i<16;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@TallyUnitV
$LN8@TallyUnitV:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@TallyUnitV:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	$LN11@TallyUnitV

; 73   : 	{
; 74   : 		ID=un->GetVehicleID(i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movsx	edx, ax
	mov	DWORD PTR _ID$[ebp], edx

; 75   : 		if(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	$LN6@TallyUnitV

; 76   : 		{
; 77   : 			for(j=0;j<Count && Count < 256;j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN5@TallyUnitV
$LN4@TallyUnitV:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN5@TallyUnitV:
	movsx	ecx, WORD PTR _Count
	cmp	DWORD PTR _j$[ebp], ecx
	jge	SHORT $LN3@TallyUnitV
	movsx	edx, WORD PTR _Count
	cmp	edx, 256				; 00000100H
	jge	SHORT $LN3@TallyUnitV

; 78   : 				if(VehList[j][0] == ID)

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _VehList[eax+ecx*8]
	cmp	edx, DWORD PTR _ID$[ebp]
	jne	SHORT $LN2@TallyUnitV

; 79   : 				{
; 80   : 					VehList[j][1]+=un->GetNumVehicles(i);

	mov	esi, 4
	shl	esi, 0
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetNumVehicles@UnitClass@@QAEHH@Z	; UnitClass::GetNumVehicles
	mov	ecx, DWORD PTR _j$[ebp]
	add	eax, DWORD PTR _VehList[esi+ecx*8]
	mov	edx, 4
	shl	edx, 0
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _VehList[edx+ecx*8], eax

; 81   : 					ID=0;

	mov	DWORD PTR _ID$[ebp], 0
$LN2@TallyUnitV:

; 82   : 				}

	jmp	SHORT $LN4@TallyUnitV
$LN3@TallyUnitV:

; 83   : 			if(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN6@TallyUnitV

; 84   : 			{
; 85   : 				VehList[Count][0]=ID;

	movsx	edx, WORD PTR _Count
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _VehList[eax+edx*8], ecx

; 86   : 				VehList[Count++][1]=un->GetNumVehicles(i);

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _un$[ebp]
	call	?GetNumVehicles@UnitClass@@QAEHH@Z	; UnitClass::GetNumVehicles
	movsx	ecx, WORD PTR _Count
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR _VehList[edx+ecx*8], eax
	mov	ax, WORD PTR _Count
	add	ax, 1
	mov	WORD PTR _Count, ax
$LN6@TallyUnitV:

; 87   : 			}
; 88   : 		}
; 89   : 	}

	jmp	$LN8@TallyUnitV
$LN11@TallyUnitV:

; 90   : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?TallyUnitVehicles@@YAXPAVUnitClass@@@Z ENDP		; TallyUnitVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 4
?ClearUnitVehicles@@YAXXZ PROC				; ClearUnitVehicles

; 55   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 56   : 	int i;
; 57   : 	for(i=0;i<256;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ClearUnitV
$LN2@ClearUnitV:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ClearUnitV:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN1@ClearUnitV

; 58   : 	{
; 59   : 		VehList[i][0]=0;

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _VehList[ecx+edx*8], 0

; 60   : 		VehList[i][1]=0;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _VehList[eax+ecx*8], 0

; 61   : 	}

	jmp	SHORT $LN2@ClearUnitV
$LN1@ClearUnitV:

; 62   : 	Count=0;

	xor	edx, edx
	mov	WORD PTR _Count, dx

; 63   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearUnitVehicles@@YAXXZ ENDP				; ClearUnitVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\common\units.cpp
;	COMDAT ??__EgLastSquadron@@YAXXZ
text$yc	SEGMENT
??__EgLastSquadron@@YAXXZ PROC				; `dynamic initializer for 'gLastSquadron'', COMDAT

; 49   : VU_ID gLastSquadron=FalconNullId;

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gLastSquadron@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLastSquadron@@3VVU_ID@@A+4, ecx
	pop	ebp
	ret	0
??__EgLastSquadron@@YAXXZ ENDP				; `dynamic initializer for 'gLastSquadron''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMaxY@C_Map@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetMaxY@C_Map@@QAEMXZ PROC				; C_Map::GetMaxY, COMDAT
; _this$ = ecx

; 202  : 		float GetMaxY() { return(maxy); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+732]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxY@C_Map@@QAEMXZ ENDP				; C_Map::GetMaxY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ PROC		; C_Map::GetCurWP, COMDAT
; _this$ = ecx

; 169  : 		C_Waypoint *GetCurWP() { return(CurWP_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1092]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurWP@C_Map@@QAEPAVC_Waypoint@@XZ ENDP		; C_Map::GetCurWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetText@C_ListBox@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@C_ListBox@@QAEPADXZ PROC			; C_ListBox::GetText, COMDAT
; _this$ = ecx

; 108  : 		_TCHAR *GetText() { if (Label_ != NULL) return(Label_->GetText()); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+172], 0
	je	SHORT $LN1@GetText
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+172]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	jmp	SHORT $LN2@GetText
$LN1@GetText:
	xor	eax, eax
$LN2@GetText:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@C_ListBox@@QAEPADXZ ENDP			; C_ListBox::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ PROC		; O_Output::GetImage, COMDAT
; _this$ = ecx

; 153  : 		IMAGE_RSC *GetImage()			{ return(Image_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+132]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ ENDP		; O_Output::GetImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@O_Output@@QAEPADXZ PROC			; O_Output::GetText, COMDAT
; _this$ = ecx

; 151  : 		_TCHAR *GetText()				{ return(Label_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@O_Output@@QAEPADXZ ENDP			; O_Output::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetFlags@O_Output@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@O_Output@@QAEJXZ PROC				; O_Output::GetFlags, COMDAT
; _this$ = ecx

; 150  : 		long GetFlags()					{ return(flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@O_Output@@QAEJXZ ENDP				; O_Output::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFgColor@O_Output@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetFgColor@O_Output@@QAEXK@Z PROC			; O_Output::SetFgColor, COMDAT
; _this$ = ecx

; 128  : 		void SetFgColor(COLORREF color)			{ FgColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFgColor@O_Output@@QAEXK@Z ENDP			; O_Output::SetFgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFont@O_Output@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FID$ = 8						; size = 4
?SetFont@O_Output@@QAEXJ@Z PROC				; O_Output::SetFont, COMDAT
; _this$ = ecx

; 127  : 		void SetFont(long FID)					{ Font_=FID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _FID$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@O_Output@@QAEXJ@Z ENDP				; O_Output::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFlags@O_Output@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetFlags@O_Output@@QAEXJ@Z PROC			; O_Output::SetFlags, COMDAT
; _this$ = ecx

; 126  : 		void SetFlags(long flags)				{ flags_=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlags@O_Output@@QAEXJ@Z ENDP			; O_Output::SetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetXY@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@O_Output@@QAEXJJ@Z PROC				; O_Output::SetXY, COMDAT
; _this$ = ecx

; 118  : 		void SetXY(long x,long y)				{ origx_ = x; origy_ = y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pilot$ = 8						; size = 4
?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z PROC	; SquadronClass::GetPilotData, COMDAT
; _this$ = ecx

; 146  : 	PilotClass* GetPilotData (int pilot)			{ return &pilot_data[pilot]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pilot$[ebp]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+866]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ENDP	; SquadronClass::GetPilotData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetPatchID@SquadronClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPatchID@SquadronClass@@QAEEXZ PROC			; SquadronClass::GetPatchID, COMDAT
; _this$ = ecx

; 81   : 	uchar GetPatchID (void) { return squadron_patch; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1459]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPatchID@SquadronClass@@QAEEXZ ENDP			; SquadronClass::GetPatchID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetPilotLosses@SquadronClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotLosses@SquadronClass@@QAEEXZ PROC		; SquadronClass::GetPilotLosses, COMDAT
; _this$ = ecx

; 79   : 	uchar GetPilotLosses(void) { return pilot_losses; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1457]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotLosses@SquadronClass@@QAEEXZ ENDP		; SquadronClass::GetPilotLosses
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetTotalLosses@SquadronClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalLosses@SquadronClass@@QAEEXZ PROC		; SquadronClass::GetTotalLosses, COMDAT
; _this$ = ecx

; 78   : 	uchar GetTotalLosses(void) { return total_losses; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1456]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalLosses@SquadronClass@@QAEEXZ ENDP		; SquadronClass::GetTotalLosses
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetMissionsFlown@SquadronClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionsFlown@SquadronClass@@QAEFXZ PROC		; SquadronClass::GetMissionsFlown, COMDAT
; _this$ = ecx

; 76   : 	short GetMissionsFlown(void) { return missions_flown; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+1452]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionsFlown@SquadronClass@@QAEFXZ ENDP		; SquadronClass::GetMissionsFlown
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetANKills@SquadronClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetANKills@SquadronClass@@QAEFXZ PROC			; SquadronClass::GetANKills, COMDAT
; _this$ = ecx

; 75   : 	short GetANKills(void) { return an_kills; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+1450]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetANKills@SquadronClass@@QAEFXZ ENDP			; SquadronClass::GetANKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetASKills@SquadronClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetASKills@SquadronClass@@QAEFXZ PROC			; SquadronClass::GetASKills, COMDAT
; _this$ = ecx

; 74   : 	short GetASKills(void) { return as_kills; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+1448]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetASKills@SquadronClass@@QAEFXZ ENDP			; SquadronClass::GetASKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetAGKills@SquadronClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAGKills@SquadronClass@@QAEFXZ PROC			; SquadronClass::GetAGKills, COMDAT
; _this$ = ecx

; 73   : 	short GetAGKills(void) { return ag_kills; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+1446]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAGKills@SquadronClass@@QAEFXZ ENDP			; SquadronClass::GetAGKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetAAKills@SquadronClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAAKills@SquadronClass@@QAEFXZ PROC			; SquadronClass::GetAAKills, COMDAT
; _this$ = ecx

; 72   : 	short GetAAKills(void) { return aa_kills; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+1444]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAAKills@SquadronClass@@QAEFXZ ENDP			; SquadronClass::GetAAKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetRating@SquadronClass@@QAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetRating@SquadronClass@@QAEEH@Z PROC			; SquadronClass::GetRating, COMDAT
; _this$ = ecx

; 71   : 	uchar GetRating(int i) { return rating[i]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [eax+1428]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRating@SquadronClass@@QAEEH@Z ENDP			; SquadronClass::GetRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\pilot.h
;	COMDAT ?GetPilotRating@PilotClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotRating@PilotClass@@QAEHXZ PROC			; PilotClass::GetPilotRating, COMDAT
; _this$ = ecx

; 52   : 		int GetPilotRating(void)	{ return ((uchar)((pilot_skill_and_rating & 0xF0) >> 4)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	and	ecx, 240				; 000000f0H
	sar	ecx, 4
	movzx	eax, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotRating@PilotClass@@QAEHXZ ENDP			; PilotClass::GetPilotRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\pilot.h
;	COMDAT ?GetPilotSkill@PilotClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotSkill@PilotClass@@QAEHXZ PROC			; PilotClass::GetPilotSkill, COMDAT
; _this$ = ecx

; 51   : 		int GetPilotSkill(void)		{ return (pilot_skill_and_rating & 0xF); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+2]
	and	eax, 15					; 0000000fH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotSkill@PilotClass@@QAEHXZ ENDP			; PilotClass::GetPilotSkill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetFlag@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlag@TeamClass@@QAEHXZ PROC				; TeamClass::GetFlag, COMDAT
; _this$ = ecx

; 327  : 	int GetFlag (void)							{ return (int) teamFlag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+888]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlag@TeamClass@@QAEHXZ ENDP				; TeamClass::GetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNumVehicles@UnitClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vg$ = 8						; size = 4
?GetNumVehicles@UnitClass@@QAEHH@Z PROC			; UnitClass::GetNumVehicles, COMDAT
; _this$ = ecx

; 365  : 	int GetNumVehicles (int vg)						{ return (int)((roster >> (vg*2)) & 0x03); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _vg$[ebp]
	shl	ecx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	sar	eax, cl
	and	eax, 3
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumVehicles@UnitClass@@QAEHH@Z ENDP			; UnitClass::GetNumVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitDestination@UnitClass@@QAEXFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
?SetUnitDestination@UnitClass@@QAEXFF@Z PROC		; UnitClass::SetUnitDestination, COMDAT
; _this$ = ecx

; 356  : 	void SetUnitDestination (GridIndex x, GridIndex y)	{ 	dest_x = (GridIndex)(x+1); dest_y = (GridIndex)(y+1); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+200], ax
	movsx	edx, WORD PTR _y$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+202], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitDestination@UnitClass@@QAEXFF@Z ENDP		; UnitClass::SetUnitDestination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitAltitude@UnitClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_alt$ = 8						; size = 4
?SetUnitAltitude@UnitClass@@QAEXH@Z PROC		; UnitClass::SetUnitAltitude, COMDAT
; _this$ = ecx

; 341  : 	void SetUnitAltitude (int alt)					{ SetPosition(XPos(),YPos(),-1.0F * (float)alt); MakeCampBaseDirty (DIRTY_ALTITUDE, DDP[181].priority); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cvtsi2ss xmm0, DWORD PTR _alt$[ebp]
	mulss	xmm0, DWORD PTR __real@bf800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPosition@VuEntity@@QAEXMMM@Z	; VuEntity::SetPosition
	mov	eax, 4
	imul	eax, 181				; 000000b5H
	mov	ecx, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeCampBaseDirty@CampBaseClass@@QAEXW4Dirty_Campaign_Base@@W4Dirtyness@@@Z ; CampBaseClass::MakeCampBaseDirty
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitAltitude@UnitClass@@QAEXH@Z ENDP		; UnitClass::SetUnitAltitude
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPLocation@WayPointClass@@QBEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetWPLocation@WayPointClass@@QBEXPAF0@Z PROC		; WayPointClass::GetWPLocation, COMDAT
; _this$ = ecx

; 205  : 	void GetWPLocation (GridIndex* x, GridIndex* y) const { *x = GridX; *y = GridY; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWPLocation@WayPointClass@@QBEXPAF0@Z ENDP		; WayPointClass::GetWPLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPDepartureTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPDepartureTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPDepartureTime, COMDAT
; _this$ = ecx

; 203  : 	CampaignTime GetWPDepartureTime()				{ return Depart; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPDepartureTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPDepartureTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAltitude@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAltitude@WayPointClass@@QAEHXZ PROC		; WayPointClass::GetWPAltitude, COMDAT
; _this$ = ecx

; 199  : 	int GetWPAltitude()								{ return (int)(GridZ*GRIDZ_SCALE_FACTOR); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	imul	eax, 10					; 0000000aH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAltitude@WayPointClass@@QAEHXZ ENDP		; WayPointClass::GetWPAltitude
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPSpeed@WayPointClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPSpeed@WayPointClass@@QAEMXZ PROC			; WayPointClass::GetWPSpeed, COMDAT
; _this$ = ecx

; 197  : 	float GetWPSpeed (void)							{ return Speed; }	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPSpeed@WayPointClass@@QAEMXZ ENDP			; WayPointClass::GetWPSpeed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPSpeed@WayPointClass@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?SetWPSpeed@WayPointClass@@QAEXM@Z PROC			; WayPointClass::SetWPSpeed, COMDAT
; _this$ = ecx

; 196  : 	void SetWPSpeed (float s)						{ Speed = s; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [eax+36], xmm0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPSpeed@WayPointClass@@QAEXM@Z ENDP			; WayPointClass::SetWPSpeed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetPrevWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPrevWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetPrevWP, COMDAT
; _this$ = ecx

; 176  : 	WayPoint GetPrevWP (void)						{ return PrevWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPrevWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetPrevWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPFlags@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPFlags@WayPointClass@@QAEKXZ PROC			; WayPointClass::GetWPFlags, COMDAT
; _this$ = ecx

; 173  : 	ulong GetWPFlags (void)							{ return (ulong)Flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPFlags@WayPointClass@@QAEKXZ ENDP			; WayPointClass::GetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ PROC ; WayPointClass::GetWPTarget, COMDAT
; _this$ = ecx

; 168  : 	CampEntity GetWPTarget (void)					{ return (CampEntity)vuDatabase->Find(TargetID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ENDP ; WayPointClass::GetWPTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPFlags@WayPointClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
?SetWPFlags@WayPointClass@@QAEXK@Z PROC			; WayPointClass::SetWPFlags, COMDAT
; _this$ = ecx

; 163  : 	void SetWPFlags (ulong f)						{ Flags = (ulong) f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPFlags@WayPointClass@@QAEXK@Z ENDP			; WayPointClass::SetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetRating@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRating@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetRating, COMDAT
; _this$ = ecx

; 152  : 	uchar GetRating() const                       { return rating; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+521]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRating@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetMissions@FalconSessionEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissions@FalconSessionEntity@@QBEGXZ PROC		; FalconSessionEntity::GetMissions, COMDAT
; _this$ = ecx

; 151  : 	ushort GetMissions() const                    { return missions; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+508]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissions@FalconSessionEntity@@QBEGXZ ENDP		; FalconSessionEntity::GetMissions
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetKill@FalconSessionEntity@@QBEGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CAT$ = 8						; size = 2
?GetKill@FalconSessionEntity@@QBEGG@Z PROC		; FalconSessionEntity::GetKill, COMDAT
; _this$ = ecx

; 150  : 	ushort GetKill(ushort CAT) const              { if(CAT < _KILL_CATS_) return(kills[CAT]); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _CAT$[ebp]
	cmp	eax, 4
	jge	SHORT $LN1@GetKill
	movzx	ecx, WORD PTR _CAT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2+500]
	jmp	SHORT $LN2@GetKill
$LN1@GetKill:
	xor	eax, eax
$LN2@GetKill:
	mov	esp, ebp
	pop	ebp
	ret	4
?GetKill@FalconSessionEntity@@QBEGG@Z ENDP		; FalconSessionEntity::GetKill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetCountry@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCountry@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetCountry, COMDAT
; _this$ = ecx

; 144  : 	uchar GetCountry (void) const                 { return country; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+510]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCountry@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetCountry
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ PROC ; FalconSessionEntity::GetPlayerSquadron, COMDAT
; _this$ = ecx

; 140  : 	SquadronClass* GetPlayerSquadron(void)	const { return playerSquadronPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerSquadronID, COMDAT
; _this$ = ecx

; 133  : 	VU_ID GetPlayerSquadronID(void) const         { return playerSquadron; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	edx, DWORD PTR [eax+456]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerName@FalconSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerName@FalconSessionEntity@@QAEPADXZ PROC	; FalconSessionEntity::GetPlayerName, COMDAT
; _this$ = ecx

; 131  : 	_TCHAR* GetPlayerName(void)                   { return name; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerName@FalconSessionEntity@@QAEPADXZ ENDP	; FalconSessionEntity::GetPlayerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ PROC ; VuBin<SquadronClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ENDP ; VuBin<SquadronClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?FlightHours@LogBookData@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FlightHours@LogBookData@@QAEMXZ PROC			; LogBookData::FlightHours, COMDAT
; _this$ = ecx

; 193  : 	float	FlightHours(void)						{return Pilot.FlightHours;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?FlightHours@LogBookData@@QAEMXZ ENDP			; LogBookData::FlightHours
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Commissioned@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Commissioned@LogBookData@@QAEPADXZ PROC		; LogBookData::Commissioned, COMDAT
; _this$ = ecx

; 191  : 	_TCHAR *Commissioned(void)						{return Pilot.Commissioned;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 45					; 0000002dH
	mov	esp, ebp
	pop	ebp
	ret	0
?Commissioned@LogBookData@@QAEPADXZ ENDP		; LogBookData::Commissioned
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetPictureResource@LogBookData@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPictureResource@LogBookData@@QAEJXZ PROC		; LogBookData::GetPictureResource, COMDAT
; _this$ = ecx

; 158  : 	long	GetPictureResource(void)				{return Pilot.PictureResource;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPictureResource@LogBookData@@QAEJXZ ENDP		; LogBookData::GetPictureResource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ PROC	; LogBookData::GetCampaign, COMDAT
; _this$ = ecx

; 145  : 	CAMP_STATS *GetCampaign(void)					{return &Pilot.Campaign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ENDP	; LogBookData::GetCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT ?_tcschr@@YAPADPADI@Z
_TEXT	SEGMENT
__S$ = 8						; size = 4
__C$ = 12						; size = 4
?_tcschr@@YAPADPADI@Z PROC				; _tcschr, COMDAT

; 2005 :         {return ((char *)_tcschr((const char *)_S, _C)); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __C$[ebp]
	push	eax
	mov	ecx, DWORD PTR __S$[ebp]
	push	ecx
	call	__tcschr
	add	esp, 8
	pop	ebp
	ret	0
?_tcschr@@YAPADPADI@Z ENDP				; _tcschr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsclen
_TEXT	SEGMENT
__String$ = 8						; size = 4
__tcsclen PROC						; COMDAT

; 1748 : {

	push	ebp
	mov	ebp, esp

; 1749 :     return _mbslen((const unsigned char *)_String);

	mov	eax, DWORD PTR __String$[ebp]
	push	eax
	call	__mbslen
	add	esp, 4

; 1750 : }

	pop	ebp
	ret	0
__tcsclen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsncicmp
_TEXT	SEGMENT
__String1$ = 8						; size = 4
__String2$ = 12						; size = 4
__Char_count$ = 16					; size = 4
__tcsncicmp PROC					; COMDAT

; 1667 : {

	push	ebp
	mov	ebp, esp

; 1668 :     return _mbsnicmp((const unsigned char *)_String1,(const unsigned char *)_String2,_Char_count);

	mov	eax, DWORD PTR __Char_count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __String1$[ebp]
	push	edx
	call	__mbsnicmp
	add	esp, 12					; 0000000cH

; 1669 : }

	pop	ebp
	ret	0
__tcsncicmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsicmp
_TEXT	SEGMENT
__String1$ = 8						; size = 4
__String2$ = 12						; size = 4
__tcsicmp PROC						; COMDAT

; 1654 : {

	push	ebp
	mov	ebp, esp

; 1655 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

	mov	eax, DWORD PTR __String2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String1$[ebp]
	push	ecx
	call	__mbsicmp
	add	esp, 8

; 1656 : }

	pop	ebp
	ret	0
__tcsicmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcschr
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__c$ = 12						; size = 4
__tcschr PROC						; COMDAT

; 1479 : __inline _CRPC _tcschr(_In_ _CPC _s1,_In_ _UI _c) {return (_CRPC)_mbschr((_CPUC)_s1,_c);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __c$[ebp]
	push	eax
	mov	ecx, DWORD PTR __s1$[ebp]
	push	ecx
	call	__mbschr
	add	esp, 8
	pop	ebp
	ret	0
__tcschr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetYPR@VuEntity@@QAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_yaw$ = 8						; size = 4
_pitch$ = 12						; size = 4
_roll$ = 16						; size = 4
?SetYPR@VuEntity@@QAEXMMM@Z PROC			; VuEntity::SetYPR, COMDAT
; _this$ = ecx

; 113  : 	void SetYPR(SM_SCALAR yaw, SM_SCALAR pitch, SM_SCALAR roll){ 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		orient_.yaw_ = yaw; orient_.pitch_ = pitch; orient_.roll_ = roll; 

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _yaw$[ebp]
	movss	DWORD PTR [eax+60], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _pitch$[ebp]
	movss	DWORD PTR [ecx+64], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _roll$[ebp]
	movss	DWORD PTR [edx+68], xmm0

; 115  : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetYPR@VuEntity@@QAEXMMM@Z ENDP			; VuEntity::SetYPR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
END
