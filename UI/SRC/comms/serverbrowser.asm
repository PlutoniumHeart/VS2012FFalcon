; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\comms\serverbrowser.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	__GUID_e0016343_4124_48a9_9734_93f48700a04a
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	__GUID_36b5b50d_69bb_43d5_83f6_aaf7eb9fff7b
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	__GUID_b6b03a0c_d547_11d2_9018_004f4e006398
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	__GUID_d783c329_d613_11d2_9018_004f4e006398
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	__GUID_dda57122_d4e3_11d2_9018_004f4e006398
PUBLIC	_LIBID_ATLLib
PUBLIC	__GUID_0f70ccce_d716_11d2_9018_004f4e006398
PUBLIC	__GUID_1386ae5c_d6f3_11d2_9018_004f4e006398
PUBLIC	?strVersion@@3PADA				; strVersion
PUBLIC	__GUID_1386ae5a_d6f3_11d2_9018_004f4e006398
PUBLIC	__GUID_1386ae5d_d6f3_11d2_9018_004f4e006398
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	__GUID_df360ef0_de0d_11d2_9023_004f4e006398
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	__GUID_90efd9f9_d7a8_11d2_901a_004f4e006398
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	___pobjMapEntryFirst
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	___pobjMapEntryLast
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	__GUID_00000000_0000_0000_0000_000000000000
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	__GUID_0000010c_0000_0000_c000_000000000046
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	__GUID_0002e012_0000_0000_c000_000000000046
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	__GUID_00000109_0000_0000_c000_000000000046
PUBLIC	__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	_IID_IInternalConnection
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	__GUID_45292708_37a2_483b_8e4a_e3b61f537a0f
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?chDirSep@ATL@@3DB				; ATL::chDirSep
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?chRightBracket@ATL@@3DB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3DB				; ATL::chLeftBracket
PUBLIC	__GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
PUBLIC	?chQuote@ATL@@3DB				; ATL::chQuote
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?chEquals@ATL@@3DB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QBDB				; ATL::szStringVal
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	?multiszStringVal@ATL@@3QBDB			; ATL::multiszStringVal
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	?szDwordVal@ATL@@3QBDB				; ATL::szDwordVal
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	?szBinaryVal@ATL@@3QBDB				; ATL::szBinaryVal
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	?szValToken@ATL@@3QBDB				; ATL::szValToken
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	?szForceRemove@ATL@@3QBDB			; ATL::szForceRemove
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	?szNoRemove@ATL@@3QBDB				; ATL::szNoRemove
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	?szDelete@ATL@@3QBDB				; ATL::szDelete
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?m_eFilterMode@@3W4_FILTER_MODE@@A		; m_eFilterMode
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?_Min@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Min
PUBLIC	?_Max@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Max
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?_Min@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Min
PUBLIC	?_Max@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Max
PUBLIC	?_Min@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Min
PUBLIC	?_Max@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Max
PUBLIC	?_Min@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Min
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?_Max@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Max
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?_Min@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Max
PUBLIC	__GUID_00020400_0000_0000_c000_000000000046
PUBLIC	?_Min@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Max
PUBLIC	?VT@?$CVarTypeInfo@D@ATL@@2GB			; ATL::CVarTypeInfo<char>::VT
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::CVarTypeInfo<char>::pmField
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?VT@?$CVarTypeInfo@E@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char>::VT
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::CVarTypeInfo<unsigned char>::pmField
PUBLIC	_CLSID_Registrar
PUBLIC	?VT@?$CVarTypeInfo@PAD@ATL@@2GB			; ATL::CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::CVarTypeInfo<char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAE@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	_IID_IRegistrar
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?VT@?$CVarTypeInfo@F@ATL@@2GB			; ATL::CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::CVarTypeInfo<short>::pmField
PUBLIC	_LIBID_SHAREDLib
PUBLIC	_CLSID_Host
PUBLIC	_IID_IHost
PUBLIC	_CLSID_Player
PUBLIC	?VT@?$CVarTypeInfo@PAF@ATL@@2GB			; ATL::CVarTypeInfo<short *>::VT
PUBLIC	_IID_IPlayer
PUBLIC	_CLSID_RemoteMasterServer
PUBLIC	?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::CVarTypeInfo<short *>::pmField
PUBLIC	_IID_IMasterServer
PUBLIC	_IID_IRemoteMasterServer
PUBLIC	_IID_IRemoteMasterServerEvents
PUBLIC	_IID_IGame
PUBLIC	_IID_IGameEvents
PUBLIC	?VT@?$CVarTypeInfo@G@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::CVarTypeInfo<unsigned short>::pmField
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?VT@?$CVarTypeInfo@PAG@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@H@ATL@@2GB			; ATL::CVarTypeInfo<int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::CVarTypeInfo<int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAH@ATL@@2GB			; ATL::CVarTypeInfo<int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::CVarTypeInfo<int *>::pmField
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	__GUID_00020401_0000_0000_c000_000000000046
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?MAX_VALUE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_VALUE
PUBLIC	__GUID_00020412_0000_0000_c000_000000000046
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?VT@?$CVarTypeInfo@I@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::CVarTypeInfo<unsigned int>::pmField
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?VT@?$CVarTypeInfo@PAI@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::CVarTypeInfo<unsigned int *>::pmField
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?VT@?$CVarTypeInfo@J@ATL@@2GB			; ATL::CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::CVarTypeInfo<long>::pmField
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?cbNeverDelete@CRegParser@ATL@@1HB		; ATL::CRegParser::cbNeverDelete
PUBLIC	?VT@?$CVarTypeInfo@PAJ@ATL@@2GB			; ATL::CVarTypeInfo<long *>::VT
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?MAX_TYPE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_TYPE
PUBLIC	?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::CVarTypeInfo<long *>::pmField
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	__GUID_00000001_0000_0000_c000_000000000046
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?VT@?$CVarTypeInfo@K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::CVarTypeInfo<unsigned long>::pmField
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?VT@?$CVarTypeInfo@PAK@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::CVarTypeInfo<unsigned long *>::pmField
PUBLIC	__GUID_b196b284_bab4_101a_b69c_00aa00341d07
PUBLIC	?VT@?$CVarTypeInfo@_J@ATL@@2GB			; ATL::CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::CVarTypeInfo<__int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_J@ATL@@2GB		; ATL::CVarTypeInfo<__int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::CVarTypeInfo<__int64 *>::pmField
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?VT@?$CVarTypeInfo@_K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?VT@?$CVarTypeInfo@PA_K@ATL@@2GB		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?VT@?$CVarTypeInfo@M@ATL@@2GB			; ATL::CVarTypeInfo<float>::VT
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::CVarTypeInfo<float>::pmField
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?VT@?$CVarTypeInfo@PAM@ATL@@2GB			; ATL::CVarTypeInfo<float *>::VT
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::CVarTypeInfo<float *>::pmField
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?VT@?$CVarTypeInfo@N@ATL@@2GB			; ATL::CVarTypeInfo<double>::VT
PUBLIC	?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::CVarTypeInfo<double>::pmField
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?VT@?$CVarTypeInfo@PAN@ATL@@2GB			; ATL::CVarTypeInfo<double *>::VT
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::CVarTypeInfo<double *>::pmField
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB	; ATL::CVarTypeInfo<tagVARIANT *>::VT
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?VT@?$CVarTypeInfo@PA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t *>::VT
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ ; ATL::CVarTypeInfo<wchar_t *>::pmField
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t * *>::VT
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ ; ATL::CVarTypeInfo<wchar_t * *>::pmField
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch *>::VT
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch *>::pmField
PUBLIC	__GUID_1cf2b120_547d_101b_8e65_08002b2bd119
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY *>::pmField
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	__GUID_8edbef0a_aeb1_48ad_9ed2_bd41cd1075bd
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	__GUID_dda57120_d4e3_11d2_9018_004f4e006398
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	__GUID_dda57123_d4e3_11d2_9018_004f4e006398
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	__GUID_b8d1f614_d5e4_4bd1_8f01_17371deaf685
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	__GUID_dda57125_d4e3_11d2_9018_004f4e006398
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	__GUID_dda57127_d4e3_11d2_9018_004f4e006398
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	__GUID_9d9bb9a8_d54c_11d2_9018_004f4e006398
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?strVersion@@3PADA DB 020H DUP (?)			; strVersion
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
_BSS	SEGMENT
_m_nUpdatedServers DD 01H DUP (?)
_m_pListServers DD 01H DUP (?)
_m_pSelectedItem DD 01H DUP (?)
_m_pUpdater DD	01H DUP (?)
_m_hEventShutdown DD 01H DUP (?)
_m_bConnectedToMaster DB 01H DUP (?)
	ALIGN	4

_m_bShutdownPending DB 01H DUP (?)
	ALIGN	4

_m_bCloseWindowPending DB 01H DUP (?)
	ALIGN	4

_m_bConnectPending DB 01H DUP (?)
	ALIGN	4

?m_eFilterMode@@3W4_FILTER_MODE@@A DD 01H DUP (?)	; m_eFilterMode
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT __GUID_9d9bb9a8_d54c_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_9d9bb9a8_d54c_11d2_9018_004f4e006398 DD 09d9bb9a8H
	DW	0d54cH
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT __GUID_dda57127_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_dda57127_d4e3_11d2_9018_004f4e006398 DD 0dda57127H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT __GUID_dda57125_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_dda57125_d4e3_11d2_9018_004f4e006398 DD 0dda57125H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT __GUID_b8d1f614_d5e4_4bd1_8f01_17371deaf685
CONST	SEGMENT
__GUID_b8d1f614_d5e4_4bd1_8f01_17371deaf685 DD 0b8d1f614H
	DW	0d5e4H
	DW	04bd1H
	DB	08fH
	DB	01H
	DB	017H
	DB	037H
	DB	01dH
	DB	0eaH
	DB	0f6H
	DB	085H
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT __GUID_dda57123_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_dda57123_d4e3_11d2_9018_004f4e006398 DD 0dda57123H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT __GUID_dda57120_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_dda57120_d4e3_11d2_9018_004f4e006398 DD 0dda57120H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT __GUID_8edbef0a_aeb1_48ad_9ed2_bd41cd1075bd
CONST	SEGMENT
__GUID_8edbef0a_aeb1_48ad_9ed2_bd41cd1075bd DD 08edbef0aH
	DW	0aeb1H
	DW	048adH
	DB	09eH
	DB	0d2H
	DB	0bdH
	DB	041H
	DB	0cdH
	DB	010H
	DB	075H
	DB	0bdH
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
CONST	SEGMENT
__GUID_1cf2b120_547d_101b_8e65_08002b2bd119 DD 01cf2b120H
	DW	0547dH
	DW	0101bH
	DB	08eH
	DB	065H
	DB	08H
	DB	00H
	DB	02bH
	DB	02bH
	DB	0d1H
	DB	019H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t * *>::pmField
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB DW 04008H		; ATL::CVarTypeInfo<wchar_t * *>::VT
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t *>::pmField
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_W@ATL@@2GB DW 08H			; ATL::CVarTypeInfo<wchar_t *>::VT
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB DW 0400cH	; ATL::CVarTypeInfo<tagVARIANT *>::VT
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b284_bab4_101a_b69c_00aa00341d07 DD 0b196b284H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000001_0000_0000_c000_000000000046 DD 01H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_TYPE@CRegParser@ATL@@1HB DD 01000H			; ATL::CRegParser::MAX_TYPE
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT
?cbNeverDelete@CRegParser@ATL@@1HB DD 0cH		; ATL::CRegParser::cbNeverDelete
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020412_0000_0000_c000_000000000046 DD 020412H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_VALUE@CRegParser@ATL@@1HB DD 01000H		; ATL::CRegParser::MAX_VALUE
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020401_0000_0000_c000_000000000046 DD 020401H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAG@ATL@@2GB DW 04012H		; ATL::CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT _IID_IGameEvents
CONST	SEGMENT
_IID_IGameEvents DD 0b8d1f614H
	DW	0d5e4H
	DW	04bd1H
	DB	08fH
	DB	01H
	DB	017H
	DB	037H
	DB	01dH
	DB	0eaH
	DB	0f6H
	DB	085H
CONST	ENDS
;	COMDAT _IID_IGame
CONST	SEGMENT
_IID_IGame DD	0dda57123H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServerEvents
CONST	SEGMENT
_IID_IRemoteMasterServerEvents DD 036b5b50dH
	DW	069bbH
	DW	043d5H
	DB	083H
	DB	0f6H
	DB	0aaH
	DB	0f7H
	DB	0ebH
	DB	09fH
	DB	0ffH
	DB	07bH
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServer
CONST	SEGMENT
_IID_IRemoteMasterServer DD 0e0016343H
	DW	04124H
	DW	048a9H
	DB	097H
	DB	034H
	DB	093H
	DB	0f4H
	DB	087H
	DB	00H
	DB	0a0H
	DB	04aH
CONST	ENDS
;	COMDAT _IID_IMasterServer
CONST	SEGMENT
_IID_IMasterServer DD 0dda57127H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT _CLSID_RemoteMasterServer
CONST	SEGMENT
_CLSID_RemoteMasterServer DD 045292708H
	DW	037a2H
	DW	0483bH
	DB	08eH
	DB	04aH
	DB	0e3H
	DB	0b6H
	DB	01fH
	DB	053H
	DB	07aH
	DB	0fH
CONST	ENDS
;	COMDAT _IID_IPlayer
CONST	SEGMENT
_IID_IPlayer DD	0dda57125H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT _CLSID_Player
CONST	SEGMENT
_CLSID_Player DD 0546dbb68H
	DW	0338fH
	DW	04c04H
	DB	083H
	DB	0b7H
	DB	0dbH
	DB	0c0H
	DB	0efH
	DB	08fH
	DB	09H
	DB	0a6H
CONST	ENDS
;	COMDAT _IID_IHost
CONST	SEGMENT
_IID_IHost DD	0b6b03a0cH
	DW	0d547H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _CLSID_Host
CONST	SEGMENT
_CLSID_Host DD	0b6b03a0dH
	DW	0d547H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _LIBID_SHAREDLib
CONST	SEGMENT
_LIBID_SHAREDLib DD 0890a47f1H
	DW	0d62fH
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::CVarTypeInfo<char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Max@?$AtlLimits@_K@ATL@@2_KB DQ ffffffffffffffffH	; ATL::AtlLimits<unsigned __int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Min@?$AtlLimits@_K@ATL@@2_KB DQ 0000000000000000H	; ATL::AtlLimits<unsigned __int64>::_Min
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020400_0000_0000_c000_000000000046 DD 020400H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Max@?$AtlLimits@_J@ATL@@2_JB DQ 7fffffffffffffffH	; ATL::AtlLimits<__int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Min@?$AtlLimits@_J@ATL@@2_JB DQ 8000000000000000H	; ATL::AtlLimits<__int64>::_Min
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Max@?$AtlLimits@K@ATL@@2KB DD 0ffffffffH		; ATL::AtlLimits<unsigned long>::_Max
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Min@?$AtlLimits@K@ATL@@2KB DD 00H			; ATL::AtlLimits<unsigned long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Max@?$AtlLimits@J@ATL@@2JB DD 07fffffffH		; ATL::AtlLimits<long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Min@?$AtlLimits@J@ATL@@2JB DD 080000000H		; ATL::AtlLimits<long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Max@?$AtlLimits@I@ATL@@2IB DD 0ffffffffH		; ATL::AtlLimits<unsigned int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Min@?$AtlLimits@I@ATL@@2IB DD 00H			; ATL::AtlLimits<unsigned int>::_Min
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Max@?$AtlLimits@H@ATL@@2HB DD 07fffffffH		; ATL::AtlLimits<int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Min@?$AtlLimits@H@ATL@@2HB DD 080000000H		; ATL::AtlLimits<int>::_Min
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QBDB
CONST	SEGMENT
?szDelete@ATL@@3QBDB DD FLAT:??_C@_06JBKGCNBB@Delete?$AA@ ; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QBDB
CONST	SEGMENT
?szNoRemove@ATL@@3QBDB DD FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QBDB
CONST	SEGMENT
?szForceRemove@ATL@@3QBDB DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QBDB
CONST	SEGMENT
?szValToken@ATL@@3QBDB DD FLAT:??_C@_03LAIAPFCB@Val?$AA@ ; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QBDB
CONST	SEGMENT
?szBinaryVal@ATL@@3QBDB DD FLAT:??_C@_01HMGJMAIH@B?$AA@	; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QBDB
CONST	SEGMENT
?szDwordVal@ATL@@3QBDB DD FLAT:??_C@_01CKDDGHAB@D?$AA@	; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QBDB
CONST	SEGMENT
?multiszStringVal@ATL@@3QBDB DD FLAT:??_C@_01PLPBNMEI@M?$AA@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QBDB
CONST	SEGMENT
?szStringVal@ATL@@3QBDB DD FLAT:??_C@_01CPLAODJH@S?$AA@	; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3DB
CONST	SEGMENT
?chEquals@ATL@@3DB DB 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3DB
CONST	SEGMENT
?chQuote@ATL@@3DB DB 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
CONST	SEGMENT
__GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851 DD 0a6bc3ac0H
	DW	0dbaaH
	DW	011ceH
	DB	09dH
	DB	0e3H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04bH
	DB	0b8H
	DB	051H
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3DB
CONST	SEGMENT
?chLeftBracket@ATL@@3DB DB 07bH				; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3DB
CONST	SEGMENT
?chRightBracket@ATL@@3DB DB 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3DB
CONST	SEGMENT
?chDirSep@ATL@@3DB DB 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT __GUID_45292708_37a2_483b_8e4a_e3b61f537a0f
CONST	SEGMENT
__GUID_45292708_37a2_483b_8e4a_e3b61f537a0f DD 045292708H
	DW	037a2H
	DW	0483bH
	DB	08eH
	DB	04aH
	DB	0e3H
	DB	0b6H
	DB	01fH
	DB	053H
	DB	07aH
	DB	0fH
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT
__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713 DD 07fd52380H
	DW	04e07H
	DW	0101bH
	DB	0aeH
	DB	02dH
	DB	08H
	DB	00H
	DB	02bH
	DB	02eH
	DB	0c7H
	DB	013H
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000109_0000_0000_c000_000000000046 DD 0109H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0002e012_0000_0000_c000_000000000046 DD 02e012H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010c_0000_0000_c000_000000000046 DD 010cH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT
__GUID_00000000_0000_0000_0000_000000000000 DD 00H
	DW	00H
	DW	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT
__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352 DD 0fc4801a3H
	DW	02ba9H
	DW	011cfH
	DB	0a2H
	DB	029H
	DB	00H
	DB	0aaH
	DB	00H
	DB	03dH
	DB	073H
	DB	052H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT __GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
CONST	SEGMENT
__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513 DD 05ff85b6bH
	DW	0de05H
	DW	042b9H
	DB	083H
	DB	01fH
	DB	0dcH
	DB	06aH
	DB	04eH
	DB	030H
	DB	0a5H
	DB	013H
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT __GUID_90efd9f9_d7a8_11d2_901a_004f4e006398
CONST	SEGMENT
__GUID_90efd9f9_d7a8_11d2_901a_004f4e006398 DD 090efd9f9H
	DW	0d7a8H
	DW	011d2H
	DB	090H
	DB	01aH
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT __GUID_df360ef0_de0d_11d2_9023_004f4e006398
CONST	SEGMENT
__GUID_df360ef0_de0d_11d2_9023_004f4e006398 DD 0df360ef0H
	DW	0de0dH
	DW	011d2H
	DB	090H
	DB	023H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT __GUID_1386ae5d_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_1386ae5d_d6f3_11d2_9018_004f4e006398 DD 01386ae5dH
	DW	0d6f3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT __GUID_1386ae5a_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_1386ae5a_d6f3_11d2_9018_004f4e006398 DD 01386ae5aH
	DW	0d6f3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT __GUID_1386ae5c_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_1386ae5c_d6f3_11d2_9018_004f4e006398 DD 01386ae5cH
	DW	0d6f3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT __GUID_0f70ccce_d716_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_0f70ccce_d716_11d2_9018_004f4e006398 DD 0f70ccceH
	DW	0d716H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT __GUID_dda57122_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_dda57122_d4e3_11d2_9018_004f4e006398 DD 0dda57122H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT __GUID_d783c329_d613_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_d783c329_d613_11d2_9018_004f4e006398 DD 0d783c329H
	DW	0d613H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT __GUID_b6b03a0c_d547_11d2_9018_004f4e006398
CONST	SEGMENT
__GUID_b6b03a0c_d547_11d2_9018_004f4e006398 DD 0b6b03a0cH
	DW	0d547H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT __GUID_36b5b50d_69bb_43d5_83f6_aaf7eb9fff7b
CONST	SEGMENT
__GUID_36b5b50d_69bb_43d5_83f6_aaf7eb9fff7b DD 036b5b50dH
	DW	069bbH
	DW	043d5H
	DB	083H
	DB	0f6H
	DB	0aaH
	DB	0f7H
	DB	0ebH
	DB	09fH
	DB	0ffH
	DB	07bH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT __GUID_e0016343_4124_48a9_9734_93f48700a04a
CONST	SEGMENT
__GUID_e0016343_4124_48a9_9734_93f48700a04a DD 0e0016343H
	DW	04124H
	DW	048a9H
	DB	097H
	DB	034H
	DB	093H
	DB	0f4H
	DB	087H
	DB	00H
	DB	0a0H
	DB	04aH
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	_InlineIsEqualGUID
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??_GC_Hash@@QAEPAXI@Z				; C_Hash::`scalar deleting destructor'
PUBLIC	??0O_Output@@QAE@XZ				; O_Output::O_Output
PUBLIC	??1O_Output@@QAE@XZ				; O_Output::~O_Output
PUBLIC	?SetXY@O_Output@@QAEXJJ@Z			; O_Output::SetXY
PUBLIC	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z		; O_Output::SetOwner
PUBLIC	?SetFont@O_Output@@QAEXJ@Z			; O_Output::SetFont
PUBLIC	?SetFgColor@O_Output@@QAEXK@Z			; O_Output::SetFgColor
PUBLIC	?GetText@O_Output@@QAEPADXZ			; O_Output::GetText
PUBLIC	??_GO_Output@@QAEPAXI@Z				; O_Output::`scalar deleting destructor'
PUBLIC	??1C_Base@@UAE@XZ				; C_Base::~C_Base
PUBLIC	?SetID@C_Base@@QAEXJ@Z				; C_Base::SetID
PUBLIC	?SetType@C_Base@@QAEXF@Z			; C_Base::SetType
PUBLIC	?_SetCType_@C_Base@@QAEXF@Z			; C_Base::_SetCType_
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetFlags@C_Base@@UAEXJ@Z			; C_Base::SetFlags
PUBLIC	?SetFlagBitOn@C_Base@@UAEXJ@Z			; C_Base::SetFlagBitOn
PUBLIC	?SetFlagBitOff@C_Base@@UAEXJ@Z			; C_Base::SetFlagBitOff
PUBLIC	?SetX@C_Base@@UAEXJ@Z				; C_Base::SetX
PUBLIC	?SetY@C_Base@@UAEXJ@Z				; C_Base::SetY
PUBLIC	?SetW@C_Base@@UAEXJ@Z				; C_Base::SetW
PUBLIC	?SetH@C_Base@@UAEXJ@Z				; C_Base::SetH
PUBLIC	?SetXY@C_Base@@UAEXJJ@Z				; C_Base::SetXY
PUBLIC	?SetWH@C_Base@@UAEXJJ@Z				; C_Base::SetWH
PUBLIC	?SetXYWH@C_Base@@UAEXJJJJ@Z			; C_Base::SetXYWH
PUBLIC	?SetRelX@C_Base@@UAEXJ@Z			; C_Base::SetRelX
PUBLIC	?SetRelY@C_Base@@UAEXJ@Z			; C_Base::SetRelY
PUBLIC	?SetRelXY@C_Base@@UAEXJJ@Z			; C_Base::SetRelXY
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?SetState@C_Base@@UAEXF@Z			; C_Base::SetState
PUBLIC	?SetHotKey@C_Base@@UAEXF@Z			; C_Base::SetHotKey
PUBLIC	?SetMenu@C_Base@@UAEXJ@Z			; C_Base::SetMenu
PUBLIC	?SetFont@C_Base@@UAEXJ@Z			; C_Base::SetFont
PUBLIC	?SetSound@C_Base@@UAEXJF@Z			; C_Base::SetSound
PUBLIC	?SetCursorID@C_Base@@UAEXJ@Z			; C_Base::SetCursorID
PUBLIC	?SetDragCursorID@C_Base@@UAEXJ@Z		; C_Base::SetDragCursorID
PUBLIC	?SetHelpText@C_Base@@UAEXJ@Z			; C_Base::SetHelpText
PUBLIC	?SetMouseOver@C_Base@@UAEXF@Z			; C_Base::SetMouseOver
PUBLIC	?SetMouseOverColor@C_Base@@UAEXK@Z		; C_Base::SetMouseOverColor
PUBLIC	?SetMouseOverPerc@C_Base@@UAEXF@Z		; C_Base::SetMouseOverPerc
PUBLIC	?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z	; C_Base::SetCallback
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetW@C_Base@@QAEJXZ				; C_Base::GetW
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetRelX@C_Base@@UAEJXZ				; C_Base::GetRelX
PUBLIC	?GetRelY@C_Base@@UAEJXZ				; C_Base::GetRelY
PUBLIC	?GetParent@C_Base@@QAEPAVC_Window@@XZ		; C_Base::GetParent
PUBLIC	?Ready@C_Base@@QAEFXZ				; C_Base::Ready
PUBLIC	?GetState@C_Base@@UAEFXZ			; C_Base::GetState
PUBLIC	?GetHotKey@C_Base@@UAEFXZ			; C_Base::GetHotKey
PUBLIC	?GetMenu@C_Base@@UAEJXZ				; C_Base::GetMenu
PUBLIC	?GetFont@C_Base@@UAEJXZ				; C_Base::GetFont
PUBLIC	?GetHelpText@C_Base@@UAEJXZ			; C_Base::GetHelpText
PUBLIC	?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z		; C_Base::GetSound
PUBLIC	?GetMouseOver@C_Base@@UAEFXZ			; C_Base::GetMouseOver
PUBLIC	?GetCursorID@C_Base@@UAEJXZ			; C_Base::GetCursorID
PUBLIC	?GetDragCursorID@C_Base@@UAEJXZ			; C_Base::GetDragCursorID
PUBLIC	?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ		; C_Base::GetCallback
PUBLIC	?IsBase@C_Base@@UAEHXZ				; C_Base::IsBase
PUBLIC	?IsControl@C_Base@@UAEHXZ			; C_Base::IsControl
PUBLIC	?Refresh@C_Base@@UAEXXZ				; C_Base::Refresh
PUBLIC	?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z	; C_Base::Draw
PUBLIC	?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; C_Base::HighLite
PUBLIC	?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z	; C_Base::SetSubParents
PUBLIC	?Cleanup@C_Base@@UAEXXZ				; C_Base::Cleanup
PUBLIC	?TimerUpdate@C_Base@@UAEHXZ			; C_Base::TimerUpdate
PUBLIC	?Activate@C_Base@@UAEXXZ			; C_Base::Activate
PUBLIC	?Deactivate@C_Base@@UAEXXZ			; C_Base::Deactivate
PUBLIC	?CheckHotSpots@C_Base@@UAEJJJ@Z			; C_Base::CheckHotSpots
PUBLIC	?CheckKeyboard@C_Base@@UAEHEEEJ@Z		; C_Base::CheckKeyboard
PUBLIC	?Process@C_Base@@UAEHJF@Z			; C_Base::Process
PUBLIC	?CloseWindow@C_Base@@UAEHXZ			; C_Base::CloseWindow
PUBLIC	?MouseOver@C_Base@@UAEHJJPAV1@@Z		; C_Base::MouseOver
PUBLIC	?GetMe@C_Base@@UAEPAV1@XZ			; C_Base::GetMe
PUBLIC	?Dragable@C_Base@@UAEHJ@Z			; C_Base::Dragable
PUBLIC	?GetItemXY@C_Base@@UAEXJPAJ0@Z			; C_Base::GetItemXY
PUBLIC	?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z	; C_Base::Drag
PUBLIC	?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z	; C_Base::Drop
PUBLIC	?Wheel@C_Base@@UAEHHGG@Z			; C_Base::Wheel
PUBLIC	?LocalFind@C_Base@@UAEFPAD@Z			; C_Base::LocalFind
PUBLIC	?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z ; C_Base::LocalFunction
PUBLIC	?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z	; C_Base::SaveText
PUBLIC	??_GC_Base@@UAEPAXI@Z				; C_Base::`scalar deleting destructor'
PUBLIC	??1C_Control@@UAE@XZ				; C_Control::~C_Control
PUBLIC	?SetRelX@C_Control@@UAEXJ@Z			; C_Control::SetRelX
PUBLIC	?SetRelY@C_Control@@UAEXJ@Z			; C_Control::SetRelY
PUBLIC	?SetRelXY@C_Control@@UAEXJJ@Z			; C_Control::SetRelXY
PUBLIC	?SetCursorID@C_Control@@UAEXJ@Z			; C_Control::SetCursorID
PUBLIC	?SetDragCursorID@C_Control@@UAEXJ@Z		; C_Control::SetDragCursorID
PUBLIC	?SetMenu@C_Control@@UAEXJ@Z			; C_Control::SetMenu
PUBLIC	?SetHelpText@C_Control@@UAEXJ@Z			; C_Control::SetHelpText
PUBLIC	?SetHotKey@C_Control@@UAEXF@Z			; C_Control::SetHotKey
PUBLIC	?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z ; C_Control::SetCallback
PUBLIC	?SetMouseOver@C_Control@@UAEXF@Z		; C_Control::SetMouseOver
PUBLIC	?SetMouseOverColor@C_Control@@UAEXK@Z		; C_Control::SetMouseOverColor
PUBLIC	?SetMouseOverPerc@C_Control@@UAEXF@Z		; C_Control::SetMouseOverPerc
PUBLIC	?IsBase@C_Control@@UAEHXZ			; C_Control::IsBase
PUBLIC	?IsControl@C_Control@@UAEHXZ			; C_Control::IsControl
PUBLIC	?GetRelX@C_Control@@UAEJXZ			; C_Control::GetRelX
PUBLIC	?GetRelY@C_Control@@UAEJXZ			; C_Control::GetRelY
PUBLIC	?GetCursorID@C_Control@@UAEJXZ			; C_Control::GetCursorID
PUBLIC	?GetDragCursorID@C_Control@@UAEJXZ		; C_Control::GetDragCursorID
PUBLIC	?GetMenu@C_Control@@UAEJXZ			; C_Control::GetMenu
PUBLIC	?GetHelpText@C_Control@@UAEJXZ			; C_Control::GetHelpText
PUBLIC	?GetHotKey@C_Control@@UAEFXZ			; C_Control::GetHotKey
PUBLIC	?GetMouseOver@C_Control@@UAEFXZ			; C_Control::GetMouseOver
PUBLIC	?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ ; C_Control::GetCallback
PUBLIC	??_GC_Control@@UAEPAXI@Z			; C_Control::`scalar deleting destructor'
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetDelCallback@C_TreeList@@QAEXP6AXPAVTREELIST@@@Z@Z ; C_TreeList::SetDelCallback
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z	; C_Window::SetKBCallback
PUBLIC	??0_bstr_t@@QAE@XZ				; _bstr_t::_bstr_t
PUBLIC	??0_bstr_t@@QAE@PBD@Z				; _bstr_t::_bstr_t
PUBLIC	??0_bstr_t@@QAE@PB_W@Z				; _bstr_t::_bstr_t
PUBLIC	??0_bstr_t@@QAE@PA_W_N@Z			; _bstr_t::_bstr_t
PUBLIC	??1_bstr_t@@QAE@XZ				; _bstr_t::~_bstr_t
PUBLIC	??4_bstr_t@@QAEAAV0@ABV0@@Z			; _bstr_t::operator=
PUBLIC	??B_bstr_t@@QBEPA_WXZ				; _bstr_t::operator wchar_t *
PUBLIC	??B_bstr_t@@QBEPADXZ				; _bstr_t::operator char *
PUBLIC	??8_bstr_t@@QBE_NABV0@@Z			; _bstr_t::operator==
PUBLIC	?length@_bstr_t@@QBEIXZ				; _bstr_t::length
PUBLIC	??0Data_t@_bstr_t@@QAE@PBD@Z			; _bstr_t::Data_t::Data_t
PUBLIC	??0Data_t@_bstr_t@@QAE@PB_W@Z			; _bstr_t::Data_t::Data_t
PUBLIC	??0Data_t@_bstr_t@@QAE@PA_W_N@Z			; _bstr_t::Data_t::Data_t
PUBLIC	?AddRef@Data_t@_bstr_t@@QAEKXZ			; _bstr_t::Data_t::AddRef
PUBLIC	?Release@Data_t@_bstr_t@@QAEKXZ			; _bstr_t::Data_t::Release
PUBLIC	?GetWString@Data_t@_bstr_t@@QAEAAPA_WXZ		; _bstr_t::Data_t::GetWString
PUBLIC	?GetString@Data_t@_bstr_t@@QBEPBDXZ		; _bstr_t::Data_t::GetString
PUBLIC	?Length@Data_t@_bstr_t@@QBEIXZ			; _bstr_t::Data_t::Length
PUBLIC	?Compare@Data_t@_bstr_t@@QBEHABV12@@Z		; _bstr_t::Data_t::Compare
PUBLIC	??2Data_t@_bstr_t@@SAPAXI@Z			; _bstr_t::Data_t::operator new
PUBLIC	??1Data_t@_bstr_t@@AAE@XZ			; _bstr_t::Data_t::~Data_t
PUBLIC	?_Free@Data_t@_bstr_t@@AAEXXZ			; _bstr_t::Data_t::_Free
PUBLIC	??_GData_t@_bstr_t@@AAEPAXI@Z			; _bstr_t::Data_t::`scalar deleting destructor'
PUBLIC	?_AddRef@_bstr_t@@AAEXXZ			; _bstr_t::_AddRef
PUBLIC	?_Free@_bstr_t@@AAEXXZ				; _bstr_t::_Free
PUBLIC	?_Compare@_bstr_t@@ABEHABV1@@Z			; _bstr_t::_Compare
PUBLIC	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z		; _com_error::_com_error
PUBLIC	??0_com_error@@QAE@ABV0@@Z			; _com_error::_com_error
PUBLIC	??1_com_error@@UAE@XZ				; _com_error::~_com_error
PUBLIC	?Error@_com_error@@QBEJXZ			; _com_error::Error
PUBLIC	??_G_com_error@@UAEPAXI@Z			; _com_error::`scalar deleting destructor'
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
PUBLIC	??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
PUBLIC	??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
PUBLIC	??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Increment
PUBLIC	?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Decrement
PUBLIC	?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ; ATL::AtlInternalQueryInterface
PUBLIC	?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z		; ATL::AtlWaitWithMessageLoop
PUBLIC	?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z ; ATL::AtlAdvise
PUBLIC	?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z	; ATL::AtlUnadvise
PUBLIC	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z	; ATL::InlineIsEqualUnknown
PUBLIC	??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>
PUBLIC	??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
PUBLIC	??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
PUBLIC	??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
PUBLIC	??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>
PUBLIC	??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>
PUBLIC	??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>
PUBLIC	??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
PUBLIC	??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
PUBLIC	??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
PUBLIC	??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>
PUBLIC	??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>
PUBLIC	??0CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::CComObjectRootBase
PUBLIC	??1CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::~CComObjectRootBase
PUBLIC	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ	; ATL::CComObjectRootBase::FinalRelease
PUBLIC	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
PUBLIC	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
PUBLIC	??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
PUBLIC	??0IGameEvents@@QAE@XZ				; IGameEvents::IGameEvents
PUBLIC	??0IRemoteMasterServerEvents@@QAE@XZ		; IRemoteMasterServerEvents::IRemoteMasterServerEvents
PUBLIC	?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ	; GNETCORELib::IGame::GetNumPlayers
PUBLIC	?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ	; GNETCORELib::IGame::GetType
PUBLIC	?GetMaxPlayers@IGame@GNETCORELib@@QAEFXZ	; GNETCORELib::IGame::GetMaxPlayers
PUBLIC	?GetLocation@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetLocation
PUBLIC	?GetServerName@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetServerName
PUBLIC	?GetName@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetName
PUBLIC	?GetLocation@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetLocation
PUBLIC	?GetAdminEmail@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetAdminEmail
PUBLIC	?GetVersion@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetVersion
PUBLIC	?GetMOTD@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetMOTD
PUBLIC	?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IRemoteMasterServer::PutServerName
PUBLIC	?PutPort@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IRemoteMasterServer::PutPort
PUBLIC	?PutMaxConcurrentHostQueries@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IRemoteMasterServer::PutMaxConcurrentHostQueries
PUBLIC	?Update@IRemoteMasterServer@GNETCORELib@@QAEJXZ	; GNETCORELib::IRemoteMasterServer::Update
PUBLIC	?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IRemoteMasterServer::PutGameFilter
PUBLIC	?GetPing@IHost@GNETCORELib@@QAEFXZ		; GNETCORELib::IHost::GetPing
PUBLIC	?GetIP@IHost@GNETCORELib@@QAEKXZ		; GNETCORELib::IHost::GetIP
PUBLIC	??0CGNetUpdater@@QAE@XZ				; CGNetUpdater::CGNetUpdater
PUBLIC	?_InternalQueryInterface@CGNetUpdater@@QAEJABU_GUID@@PAPAX@Z ; CGNetUpdater::_InternalQueryInterface
PUBLIC	?_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; CGNetUpdater::_GetEntries
PUBLIC	?GetIID@?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a>::GetIID
PUBLIC	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::GetIID
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::~_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >
PUBLIC	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
PUBLIC	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
PUBLIC	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator bool
PUBLIC	??8?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator==
PUBLIC	??9?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator!=
PUBLIC	?Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::Release
PUBLIC	?CreateInstance@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEJABU_GUID@@PAUIUnknown@@K@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::CreateInstance
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_Release
PUBLIC	?Init@CGNetUpdater@@QAEXXZ			; CGNetUpdater::Init
PUBLIC	?Cleanup@CGNetUpdater@@QAEXXZ			; CGNetUpdater::Cleanup
PUBLIC	?Update@CGNetUpdater@@QAEXXZ			; CGNetUpdater::Update
PUBLIC	?CancelUpdate@CGNetUpdater@@QAEXXZ		; CGNetUpdater::CancelUpdate
PUBLIC	?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z	; CGNetUpdater::UpdateGame
PUBLIC	?IsUpdating@CGNetUpdater@@QAE_NXZ		; CGNetUpdater::IsUpdating
PUBLIC	?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z	; CGNetUpdater::UpdateComplete
PUBLIC	?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z	; CGNetUpdater::UpdateAborted
PUBLIC	?UpdateComplete@CGNetUpdater@@UAGJH@Z		; CGNetUpdater::UpdateComplete
PUBLIC	?ServerListReceived@CGNetUpdater@@UAGJH@Z	; CGNetUpdater::ServerListReceived
PUBLIC	??1CGNetUpdater@@QAE@XZ				; CGNetUpdater::~CGNetUpdater
PUBLIC	??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z	; ATL::CComObject<CGNetUpdater>::CComObject<CGNetUpdater>
PUBLIC	??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ	; ATL::CComObject<CGNetUpdater>::~CComObject<CGNetUpdater>
PUBLIC	?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ; ATL::CComObject<CGNetUpdater>::AddRef
PUBLIC	?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ; ATL::CComObject<CGNetUpdater>::Release
PUBLIC	?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CGNetUpdater>::QueryInterface
PUBLIC	??_G?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z	; ATL::CComObject<CGNetUpdater>::`scalar deleting destructor'
PUBLIC	??0GNetUpdater@@QAE@XZ				; GNetUpdater::GNetUpdater
PUBLIC	??1GNetUpdater@@UAE@XZ				; GNetUpdater::~GNetUpdater
PUBLIC	??_GGNetUpdater@@UAEPAXI@Z			; GNetUpdater::`scalar deleting destructor'
PUBLIC	??0C_ServerItem@@QAE@XZ				; C_ServerItem::C_ServerItem
PUBLIC	??0C_ServerItem@@QAE@PAPAD@Z			; C_ServerItem::C_ServerItem
PUBLIC	??0C_ServerItem@@QAE@PAU_iobuf@@@Z		; C_ServerItem::C_ServerItem
PUBLIC	??1C_ServerItem@@UAE@XZ				; C_ServerItem::~C_ServerItem
PUBLIC	?Draw@C_ServerItem@@MAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; C_ServerItem::Draw
PUBLIC	?Size@C_ServerItem@@QAEJXZ			; C_ServerItem::Size
PUBLIC	?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z ; C_ServerItem::Setup
PUBLIC	?Cleanup@C_ServerItem@@UAEXXZ			; C_ServerItem::Cleanup
PUBLIC	?SetFont@C_ServerItem@@UAEXJ@Z			; C_ServerItem::SetFont
PUBLIC	?CheckHotSpots@C_ServerItem@@UAEJJJ@Z		; C_ServerItem::CheckHotSpots
PUBLIC	?Process@C_ServerItem@@UAEHJF@Z			; C_ServerItem::Process
PUBLIC	?Refresh@C_ServerItem@@UAEXXZ			; C_ServerItem::Refresh
PUBLIC	?CompareText@C_ServerItem@@QAEHPAV1@H@Z		; C_ServerItem::CompareText
PUBLIC	?ComparePing@C_ServerItem@@QAEHPAV1@@Z		; C_ServerItem::ComparePing
PUBLIC	?ComparePlayers@C_ServerItem@@QAEHPAV1@@Z	; C_ServerItem::ComparePlayers
PUBLIC	?Save@C_ServerItem@@QAEXPAPAD@Z			; C_ServerItem::Save
PUBLIC	?Save@C_ServerItem@@QAEXPAU_iobuf@@@Z		; C_ServerItem::Save
PUBLIC	?SetState@C_ServerItem@@UAEXF@Z			; C_ServerItem::SetState
PUBLIC	?GetState@C_ServerItem@@UAEFXZ			; C_ServerItem::GetState
PUBLIC	?SetOwner@C_ServerItem@@QAEXPAVTREELIST@@@Z	; C_ServerItem::SetOwner
PUBLIC	?GetOwner@C_ServerItem@@QAEPAVTREELIST@@XZ	; C_ServerItem::GetOwner
PUBLIC	?GetFont@C_ServerItem@@UAEJXZ			; C_ServerItem::GetFont
PUBLIC	?SetDefaultFlags@C_ServerItem@@QAEXXZ		; C_ServerItem::SetDefaultFlags
PUBLIC	?GetDefaultFlags@C_ServerItem@@QAEJXZ		; C_ServerItem::GetDefaultFlags
PUBLIC	?TrimString@C_ServerItem@@QAEHPADH@Z		; C_ServerItem::TrimString
PUBLIC	?GetIP@C_ServerItem@@QAEKXZ			; C_ServerItem::GetIP
PUBLIC	??_GC_ServerItem@@UAEPAXI@Z			; C_ServerItem::`scalar deleting destructor'
PUBLIC	??0?$allocator@PAUIGame@@@std@@QAE@XZ		; std::allocator<IGame *>::allocator<IGame *>
PUBLIC	?deallocate@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@I@Z ; std::allocator<IGame *>::deallocate
PUBLIC	?allocate@?$allocator@PAUIGame@@@std@@QAEPAPAUIGame@@I@Z ; std::allocator<IGame *>::allocate
PUBLIC	?construct@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@ABQAU3@@Z ; std::allocator<IGame *>::construct
PUBLIC	?max_size@?$allocator@PAUIGame@@@std@@QBEIXZ	; std::allocator<IGame *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAIABV?$allocator@PAUIGame@@@2@@Z ; std::allocator_traits<std::allocator<IGame *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<IGame *> >::_Wrap_alloc<std::allocator<IGame *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<IGame *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<IGame *> >::_Vector_val<std::_Simple_types<IGame *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUIGame@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
PUBLIC	??0?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::vector<IGame *,std::allocator<IGame *> >::vector<IGame *,std::allocator<IGame *> >
PUBLIC	??1?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::vector<IGame *,std::allocator<IGame *> >::~vector<IGame *,std::allocator<IGame *> >
PUBLIC	?capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::begin
PUBLIC	?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::end
PUBLIC	?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::size
PUBLIC	?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::max_size
PUBLIC	?push_back@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXABQAUIGame@@@Z ; std::vector<IGame *,std::allocator<IGame *> >::push_back
PUBLIC	?clear@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::clear
PUBLIC	?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEII@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBE_NPBQAUIGame@@@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Orphan_range
PUBLIC	?ServerListSortCB_Name@@YAHPAVTREELIST@@0@Z	; ServerListSortCB_Name
PUBLIC	?ServerListSortCB_Ping@@YAHPAVTREELIST@@0@Z	; ServerListSortCB_Ping
PUBLIC	?ServerListSortCB_Mode@@YAHPAVTREELIST@@0@Z	; ServerListSortCB_Mode
PUBLIC	?ServerListSortCB_Players@@YAHPAVTREELIST@@0@Z	; ServerListSortCB_Players
PUBLIC	?ServerListSortCB_Location@@YAHPAVTREELIST@@0@Z	; ServerListSortCB_Location
PUBLIC	?HookupServerBrowserControls@@YAXJ@Z		; HookupServerBrowserControls
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEABQAUIGame@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Compat
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
PUBLIC	?GetIID@?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398>::GetIID
PUBLIC	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::GetIID
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV0@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
PUBLIC	??$?4UIGame@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIGame@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IGame>
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
PUBLIC	?Attach@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIGame@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::Attach
PUBLIC	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
PUBLIC	??B?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator bool
PUBLIC	??8?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator==
PUBLIC	??9?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator!=
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_Release
PUBLIC	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_AddRef
PUBLIC	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
PUBLIC	?ServerBrowserExit@@YAXXZ			; ServerBrowserExit
PUBLIC	?GetIID@?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398>::GetIID
PUBLIC	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::GetIID
PUBLIC	??$?4UIHost@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIHost@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IHost>
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >
PUBLIC	?Attach@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIHost@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::Attach
PUBLIC	??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_Release
PUBLIC	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_AddRef
PUBLIC	??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
PUBLIC	??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z ; std::addressof<IGame * const>
PUBLIC	??$construct@PAUIGame@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * &>
PUBLIC	??$construct@PAUIGame@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * const &>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
PUBLIC	??$_Umove@PAPAUIGame@@@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEPAPAUIGame@@PAPAU2@00@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Umove<IGame * *>
PUBLIC	??$_Allocate@PAUIGame@@@std@@YAPAPAUIGame@@IPAPAU1@@Z ; std::_Allocate<IGame *>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_QueryInterface@PAUIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJPAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_QueryInterface<IGame *>
PUBLIC	??$_QueryInterface@V?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_QueryInterface<_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> > >
PUBLIC	??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z ; std::forward<IGame * &>
PUBLIC	??$construct@PAUIGame@@AAPAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@AAPAU3@@Z ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * &>
PUBLIC	??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z ; std::forward<IGame * const &>
PUBLIC	??$construct@PAUIGame@@ABQAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@ABQAU3@@Z ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * const &>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z ; std::_Ptr_cat<IGame *,IGame *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
PUBLIC	??$_Uninitialized_move@PAPAUIGame@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ; std::_Uninitialized_move<IGame * *,IGame * *,std::_Wrap_alloc<std::allocator<IGame *> > >
PUBLIC	??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ; std::allocator<IGame *>::construct<IGame *,IGame * &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$_Val_type@PAPAUIGame@@@std@@YAPAPAUIGame@@PAPAU1@@Z ; std::_Val_type<IGame * *>
PUBLIC	??$_Uninit_move@PAUIGame@@PAU1@PAU1@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<IGame *,IGame *,IGame *>
PUBLIC	?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<CGNetUpdater>::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComObject<CGNetUpdater>::AddRef`adjustor{4}'
PUBLIC	?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComObject<CGNetUpdater>::Release`adjustor{4}'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7C_Base@@6B@					; C_Base::`vftable'
PUBLIC	??_7C_Control@@6B@				; C_Control::`vftable'
PUBLIC	??_7_com_error@@6B@				; _com_error::`vftable'
PUBLIC	??_7CGNetUpdater@@6BIGameEvents@@@		; CGNetUpdater::`vftable'
PUBLIC	??_7CGNetUpdater@@6BIRemoteMasterServerEvents@@@ ; CGNetUpdater::`vftable'
PUBLIC	?_entries@?1??_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CGNetUpdater::_GetEntries'::`2'::_entries
PUBLIC	??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@ ; ATL::CComObject<CGNetUpdater>::`vftable'
PUBLIC	??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@ ; ATL::CComObject<CGNetUpdater>::`vftable'
PUBLIC	??_7GNetUpdater@@6BIGameEvents@@@		; GNetUpdater::`vftable'
PUBLIC	??_7GNetUpdater@@6BIRemoteMasterServerEvents@@@	; GNetUpdater::`vftable'
PUBLIC	??_7C_ServerItem@@6B@				; C_ServerItem::`vftable'
PUBLIC	??_C@_0N@HBACIAED@Aborting?5?4?4?4?$AA@		; `string'
PUBLIC	??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@ ; `string'
PUBLIC	??_R0?AV_com_error@@@8				; _com_error `RTTI Type Descriptor'
PUBLIC	??_C@_0CB@FJNCFHFD@MakeServerItem?5?9?5_com_error?50x?$CFX@ ; `string'
PUBLIC	__TI1?AV_com_error@@
PUBLIC	__CTA1?AV_com_error@@
PUBLIC	__CT??_R0?AV_com_error@@@8??0_com_error@@QAE@ABV0@@Z16
PUBLIC	??_C@_0BJ@DFJKLFBN@Update?5?9?5_com_error?50x?$CFX?$AA@ ; `string'
PUBLIC	??_C@_02JLAAGLDA@CA?$AA@			; `string'
PUBLIC	??_C@_02OGAFBLMB@TE?$AA@			; `string'
PUBLIC	??_C@_02NBAOOLHC@DF?$AA@			; `string'
PUBLIC	??_C@_0CA@NINGCFFI@UpdateDisplay?5?9?5_com_error?50x?$CFX?$AA@ ; `string'
PUBLIC	??_C@_0CI@CFGAOGGF@Connected?5?4?4?5getting?5server?5info@ ; `string'
PUBLIC	??_C@_0L@FEIOPENH@?$CFd?5Servers?$AA@		; `string'
PUBLIC	??_C@_0CD@CPCOMKHD@Failed?5to?5connect?5to?5master?5serv@ ; `string'
PUBLIC	??_C@_0O@BMKHJNFD@Update?5failed?$AA@		; `string'
PUBLIC	??_C@_0BK@EENOLLKJ@?$CF?41f?$CF?$CF?5?$CI?$CFd?5of?5?$CFd?5Servers?$CJ?$AA@ ; `string'
PUBLIC	??_C@_03GLKEJMAA@?$CF4d?$AA@			; `string'
PUBLIC	??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@		; `string'
PUBLIC	??_C@_0BN@NBJLJDOH@Contacting?5master?5server?5?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_07GDGMJMJJ@Falcon4?$AA@			; `string'
PUBLIC	??_C@_0CL@LLDBCDGC@CGNetUpdater?3?3UpdateGame?5?9?5_com_@ ; `string'
PUBLIC	??_C@_0CI@LHGKFGHD@CGNetUpdater?3?3Refresh?5?9?5_com_err@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C_Base@@6B@				; C_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_Base@@@8				; C_Base `RTTI Type Descriptor'
PUBLIC	??_R3C_Base@@8					; C_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_Base@@8					; C_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_Base@@8				; C_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C_Control@@6B@				; C_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_Control@@@8				; C_Control `RTTI Type Descriptor'
PUBLIC	??_R3C_Control@@8				; C_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_Control@@8				; C_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_Control@@8			; C_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_com_error@@6B@				; _com_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_com_error@@8				; _com_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_com_error@@8				; _com_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_com_error@@8			; _com_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CComObjectRootBase@ATL@@8		; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCComObjectRootBase@ATL@@@8		; ATL::CComObjectRootBase `RTTI Type Descriptor'
PUBLIC	??_R3CComObjectRootBase@ATL@@8			; ATL::CComObjectRootBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CComObjectRootBase@ATL@@8			; ATL::CComObjectRootBase::`RTTI Base Class Array'
PUBLIC	??_R0?AUIGameEvents@@@8				; IGameEvents `RTTI Type Descriptor'
PUBLIC	??_R3IGameEvents@@8				; IGameEvents::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IGameEvents@@8				; IGameEvents::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IGameEvents@@8			; IGameEvents::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIRemoteMasterServerEvents@@@8		; IRemoteMasterServerEvents `RTTI Type Descriptor'
PUBLIC	??_R3IRemoteMasterServerEvents@@8		; IRemoteMasterServerEvents::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRemoteMasterServerEvents@@8		; IRemoteMasterServerEvents::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRemoteMasterServerEvents@@8	; IRemoteMasterServerEvents::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGNetUpdater@@6BIGameEvents@@@		; CGNetUpdater::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGNetUpdater@@@8			; CGNetUpdater `RTTI Type Descriptor'
PUBLIC	??_R3CGNetUpdater@@8				; CGNetUpdater::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGNetUpdater@@8				; CGNetUpdater::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGNetUpdater@@8			; CGNetUpdater::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EA@CComObjectRootBase@ATL@@8		; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IRemoteMasterServerEvents@@8	; IRemoteMasterServerEvents::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R4CGNetUpdater@@6BIRemoteMasterServerEvents@@@ ; CGNetUpdater::`RTTI Complete Object Locator'
PUBLIC	??_R4GNetUpdater@@6BIGameEvents@@@		; GNetUpdater::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGNetUpdater@@@8				; GNetUpdater `RTTI Type Descriptor'
PUBLIC	??_R3GNetUpdater@@8				; GNetUpdater::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GNetUpdater@@8				; GNetUpdater::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GNetUpdater@@8			; GNetUpdater::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CComObject@VCGNetUpdater@@@ATL@@8 ; ATL::CComObject<CGNetUpdater>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8	; ATL::CComObject<CGNetUpdater> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComObject@VCGNetUpdater@@@ATL@@8	; ATL::CComObject<CGNetUpdater>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComObject@VCGNetUpdater@@@ATL@@8	; ATL::CComObject<CGNetUpdater>::`RTTI Base Class Array'
PUBLIC	??_R4GNetUpdater@@6BIRemoteMasterServerEvents@@@ ; GNetUpdater::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@ ; ATL::CComObject<CGNetUpdater>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@ ; ATL::CComObject<CGNetUpdater>::`RTTI Complete Object Locator'
PUBLIC	??_R4C_ServerItem@@6B@				; C_ServerItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_ServerItem@@@8			; C_ServerItem `RTTI Type Descriptor'
PUBLIC	??_R3C_ServerItem@@8				; C_ServerItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_ServerItem@@8				; C_ServerItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_ServerItem@@8			; C_ServerItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@42c80000
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__InterlockedIncrement@4:PROC
EXTRN	__imp__InterlockedDecrement@4:PROC
EXTRN	__imp__LocalFree@4:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__MsgWaitForMultipleObjectsEx@20:PROC
EXTRN	__imp__IsWindowUnicode@4:PROC
EXTRN	_sprintf:PROC
EXTRN	_vsprintf:PROC
EXTRN	_MonoPrint:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??1C_Hash@@QAE@XZ:PROC				; C_Hash::~C_Hash
EXTRN	?Cleanup@C_Hash@@QAEXXZ:PROC			; C_Hash::Cleanup
EXTRN	?GetHeight@C_Font@@QAEHJ@Z:PROC			; C_Font::GetHeight
EXTRN	?StrWidth@C_Font@@QAEHJPADH@Z:PROC		; C_Font::StrWidth
EXTRN	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z:PROC	; C_Sound::PlaySoundA
EXTRN	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z:PROC ; O_Output::Draw
EXTRN	?Cleanup@O_Output@@QAEXXZ:PROC			; O_Output::Cleanup
EXTRN	?SetInfo@O_Output@@QAEXXZ:PROC			; O_Output::SetInfo
EXTRN	?SetText@O_Output@@QAEXPAD@Z:PROC		; O_Output::SetText
EXTRN	?SetTextWidth@O_Output@@QAEXJ@Z:PROC		; O_Output::SetTextWidth
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	??_EC_Base@@UAEPAXI@Z:PROC			; C_Base::`vector deleting destructor'
EXTRN	??0C_Control@@QAE@XZ:PROC			; C_Control::C_Control
EXTRN	??0C_Control@@QAE@PAPAD@Z:PROC			; C_Control::C_Control
EXTRN	??0C_Control@@QAE@PAU_iobuf@@@Z:PROC		; C_Control::C_Control
EXTRN	?MouseOver@C_Control@@UAEHJJPAVC_Base@@@Z:PROC	; C_Control::MouseOver
EXTRN	?SetSound@C_Control@@UAEXJF@Z:PROC		; C_Control::SetSound
EXTRN	?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z:PROC ; C_Control::HighLite
EXTRN	?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z:PROC	; C_Control::GetSound
EXTRN	??_EC_Control@@UAEPAXI@Z:PROC			; C_Control::`vector deleting destructor'
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::ReorderBranch
EXTRN	?SetUpdateRect@C_Window@@QAEXJJJJJJ@Z:PROC	; C_Window::SetUpdateRect
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	__imp__SysAllocString@4:PROC
EXTRN	__imp__SysFreeString@4:PROC
EXTRN	__imp__SysStringLen@4:PROC
EXTRN	__imp__SysStringByteLen@4:PROC
EXTRN	__imp__SysAllocStringByteLen@8:PROC
EXTRN	__imp__OleRun@4:PROC
EXTRN	?_com_issue_error@@YGXJ@Z:PROC			; _com_issue_error
EXTRN	?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z:PROC ; _com_util::ConvertStringToBSTR
EXTRN	?ConvertBSTRToString@_com_util@@YGPADPA_W@Z:PROC ; _com_util::ConvertBSTRToString
EXTRN	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z:PROC ; _com_issue_errorex
EXTRN	??_E_com_error@@UAEPAXI@Z:PROC			; _com_error::`vector deleting destructor'
EXTRN	?CheckHR@@YAXJ@Z:PROC				; CheckHR
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?Phone_Connect_CB@@YAXJFPAVC_Base@@@Z:PROC	; Phone_Connect_CB
EXTRN	??_E?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObject<CGNetUpdater>::`vector deleting destructor'
EXTRN	??_EGNetUpdater@@UAEPAXI@Z:PROC			; GNetUpdater::`vector deleting destructor'
EXTRN	??_EC_ServerItem@@UAEPAXI@Z:PROC		; C_ServerItem::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gFontList@@3PAVC_Font@@A:DWORD			; gFontList
EXTRN	?gSoundMgr@@3PAVC_Sound@@A:DWORD		; gSoundMgr
EXTRN	_IID_IGameEvents:BYTE
EXTRN	_IID_IRemoteMasterServerEvents:BYTE
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?g_strMasterServerName@@3PADA:BYTE		; g_strMasterServerName
EXTRN	?MajorVersion@@3HA:DWORD			; MajorVersion
EXTRN	?MinorVersion@@3HA:DWORD			; MinorVersion
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?BuildNumber@@3HA:DWORD				; BuildNumber
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_m_arrGames DB	0cH DUP (?)
_m_pWnd	DD	01H DUP (?)
_m_pWndStatus DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?bstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
_BSS	SEGMENT
?bstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B DD 01H DUP (?) ; `FilterGame'::`5'::bstrCA
_BSS	ENDS
;	COMDAT ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
_BSS	SEGMENT
?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA DD 01H DUP (?) ; `FilterGame'::`5'::$S1
_BSS	ENDS
;	COMDAT ?bstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
_BSS	SEGMENT
?bstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B DD 01H DUP (?) ; `FilterGame'::`6'::bstrTE
_BSS	ENDS
;	COMDAT ?bstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
_BSS	SEGMENT
?bstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B DD 01H DUP (?) ; `FilterGame'::`7'::bstrDF
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@C_ServerItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_ServerItem@@8 DD FLAT:??_R0?AVC_ServerItem@@@8 ; C_ServerItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_ServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R2C_ServerItem@@8
rdata$r	SEGMENT
??_R2C_ServerItem@@8 DD FLAT:??_R1A@?0A@EA@C_ServerItem@@8 ; C_ServerItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@C_Control@@8
	DD	FLAT:??_R1A@?0A@EA@C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R3C_ServerItem@@8
rdata$r	SEGMENT
??_R3C_ServerItem@@8 DD 00H				; C_ServerItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2C_ServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_ServerItem@@@8
_DATA	SEGMENT
??_R0?AVC_ServerItem@@@8 DD FLAT:??_7type_info@@6B@	; C_ServerItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_ServerItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_ServerItem@@6B@
rdata$r	SEGMENT
??_R4C_ServerItem@@6B@ DD 00H				; C_ServerItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_ServerItem@@@8
	DD	FLAT:??_R3C_ServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@
rdata$r	SEGMENT
??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@ DD 00H ; ATL::CComObject<CGNetUpdater>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8
	DD	FLAT:??_R3?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@
rdata$r	SEGMENT
??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@ DD 00H ; ATL::CComObject<CGNetUpdater>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8
	DD	FLAT:??_R3?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R4GNetUpdater@@6BIRemoteMasterServerEvents@@@
rdata$r	SEGMENT
??_R4GNetUpdater@@6BIRemoteMasterServerEvents@@@ DD 00H	; GNetUpdater::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVGNetUpdater@@@8
	DD	FLAT:??_R3GNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CComObject@VCGNetUpdater@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComObject@VCGNetUpdater@@@ATL@@8 ; ATL::CComObject<CGNetUpdater>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGNetUpdater@@8
	DD	FLAT:??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R17?0A@EA@CComObjectRootBase@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@IGameEvents@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IRemoteMasterServerEvents@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CComObject@VCGNetUpdater@@@ATL@@8 DD 00H		; ATL::CComObject<CGNetUpdater>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObject<CGNetUpdater> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComObject@VCGNetUpdater@@@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComObject@VCGNetUpdater@@@ATL@@8 DD FLAT:??_R0?AV?$CComObject@VCGNetUpdater@@@ATL@@@8 ; ATL::CComObject<CGNetUpdater>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObject@VCGNetUpdater@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GNetUpdater@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GNetUpdater@@8 DD FLAT:??_R0?AVGNetUpdater@@@8 ; GNetUpdater::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R2GNetUpdater@@8
rdata$r	SEGMENT
??_R2GNetUpdater@@8 DD FLAT:??_R1A@?0A@EA@GNetUpdater@@8 ; GNetUpdater::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CComObject@VCGNetUpdater@@@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@CGNetUpdater@@8
	DD	FLAT:??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R17?0A@EA@CComObjectRootBase@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@IGameEvents@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IRemoteMasterServerEvents@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3GNetUpdater@@8
rdata$r	SEGMENT
??_R3GNetUpdater@@8 DD 00H				; GNetUpdater::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2GNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGNetUpdater@@@8
_DATA	SEGMENT
??_R0?AVGNetUpdater@@@8 DD FLAT:??_7type_info@@6B@	; GNetUpdater `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGNetUpdater@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GNetUpdater@@6BIGameEvents@@@
rdata$r	SEGMENT
??_R4GNetUpdater@@6BIGameEvents@@@ DD 00H		; GNetUpdater::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGNetUpdater@@@8
	DD	FLAT:??_R3GNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R4CGNetUpdater@@6BIRemoteMasterServerEvents@@@
rdata$r	SEGMENT
??_R4CGNetUpdater@@6BIRemoteMasterServerEvents@@@ DD 00H ; CGNetUpdater::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCGNetUpdater@@@8
	DD	FLAT:??_R3CGNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@IRemoteMasterServerEvents@@8
rdata$r	SEGMENT
??_R13?0A@EA@IRemoteMasterServerEvents@@8 DD FLAT:??_R0?AUIRemoteMasterServerEvents@@@8 ; IRemoteMasterServerEvents::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRemoteMasterServerEvents@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R17?0A@EA@CComObjectRootBase@ATL@@8 DD FLAT:??_R0?AVCComObjectRootBase@ATL@@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGNetUpdater@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGNetUpdater@@8 DD FLAT:??_R0?AVCGNetUpdater@@@8 ; CGNetUpdater::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R2CGNetUpdater@@8
rdata$r	SEGMENT
??_R2CGNetUpdater@@8 DD FLAT:??_R1A@?0A@EA@CGNetUpdater@@8 ; CGNetUpdater::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R17?0A@EA@CComObjectRootBase@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@IGameEvents@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IRemoteMasterServerEvents@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CGNetUpdater@@8
rdata$r	SEGMENT
??_R3CGNetUpdater@@8 DD 00H				; CGNetUpdater::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2CGNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGNetUpdater@@@8
_DATA	SEGMENT
??_R0?AVCGNetUpdater@@@8 DD FLAT:??_7type_info@@6B@	; CGNetUpdater `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGNetUpdater@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CGNetUpdater@@6BIGameEvents@@@
rdata$r	SEGMENT
??_R4CGNetUpdater@@6BIGameEvents@@@ DD 00H		; CGNetUpdater::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGNetUpdater@@@8
	DD	FLAT:??_R3CGNetUpdater@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRemoteMasterServerEvents@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRemoteMasterServerEvents@@8 DD FLAT:??_R0?AUIRemoteMasterServerEvents@@@8 ; IRemoteMasterServerEvents::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRemoteMasterServerEvents@@8
rdata$r	ENDS
;	COMDAT ??_R2IRemoteMasterServerEvents@@8
rdata$r	SEGMENT
??_R2IRemoteMasterServerEvents@@8 DD FLAT:??_R1A@?0A@EA@IRemoteMasterServerEvents@@8 ; IRemoteMasterServerEvents::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IRemoteMasterServerEvents@@8
rdata$r	SEGMENT
??_R3IRemoteMasterServerEvents@@8 DD 00H		; IRemoteMasterServerEvents::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IRemoteMasterServerEvents@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIRemoteMasterServerEvents@@@8
_DATA	SEGMENT
??_R0?AUIRemoteMasterServerEvents@@@8 DD FLAT:??_7type_info@@6B@ ; IRemoteMasterServerEvents `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIRemoteMasterServerEvents@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IGameEvents@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IGameEvents@@8 DD FLAT:??_R0?AUIGameEvents@@@8 ; IGameEvents::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IGameEvents@@8
rdata$r	ENDS
;	COMDAT ??_R2IGameEvents@@8
rdata$r	SEGMENT
??_R2IGameEvents@@8 DD FLAT:??_R1A@?0A@EA@IGameEvents@@8 ; IGameEvents::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IGameEvents@@8
rdata$r	SEGMENT
??_R3IGameEvents@@8 DD 00H				; IGameEvents::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IGameEvents@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIGameEvents@@@8
_DATA	SEGMENT
??_R0?AUIGameEvents@@@8 DD FLAT:??_7type_info@@6B@	; IGameEvents `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIGameEvents@@', 00H
_DATA	ENDS
;	COMDAT ??_R2CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R2CComObjectRootBase@ATL@@8 DD FLAT:??_R1A@?0A@EA@CComObjectRootBase@ATL@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R3CComObjectRootBase@ATL@@8 DD 00H			; ATL::CComObjectRootBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCComObjectRootBase@ATL@@@8
_DATA	SEGMENT
??_R0?AVCComObjectRootBase@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObjectRootBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCComObjectRootBase@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CComObjectRootBase@ATL@@8 DD FLAT:??_R0?AVCComObjectRootBase@ATL@@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD 00H ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@_com_error@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_com_error@@8 DD FLAT:??_R0?AV_com_error@@@8 ; _com_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_com_error@@8
rdata$r	ENDS
;	COMDAT ??_R2_com_error@@8
rdata$r	SEGMENT
??_R2_com_error@@8 DD FLAT:??_R1A@?0A@EA@_com_error@@8	; _com_error::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_com_error@@8
rdata$r	SEGMENT
??_R3_com_error@@8 DD 00H				; _com_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_com_error@@8
rdata$r	ENDS
;	COMDAT ??_R4_com_error@@6B@
rdata$r	SEGMENT
??_R4_com_error@@6B@ DD 00H				; _com_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	FLAT:??_R3_com_error@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@C_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_Control@@8 DD FLAT:??_R0?AVC_Control@@@8 ; C_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2C_Control@@8
rdata$r	SEGMENT
??_R2C_Control@@8 DD FLAT:??_R1A@?0A@EA@C_Control@@8	; C_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R3C_Control@@8
rdata$r	SEGMENT
??_R3C_Control@@8 DD 00H				; C_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_Control@@@8
_DATA	SEGMENT
??_R0?AVC_Control@@@8 DD FLAT:??_7type_info@@6B@	; C_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_Control@@6B@
rdata$r	SEGMENT
??_R4C_Control@@6B@ DD 00H				; C_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_Control@@@8
	DD	FLAT:??_R3C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@C_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_Base@@8 DD FLAT:??_R0?AVC_Base@@@8	; C_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2C_Base@@8
rdata$r	SEGMENT
??_R2C_Base@@8 DD FLAT:??_R1A@?0A@EA@C_Base@@8		; C_Base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3C_Base@@8
rdata$r	SEGMENT
??_R3C_Base@@8 DD 00H					; C_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_Base@@@8
_DATA	SEGMENT
??_R0?AVC_Base@@@8 DD FLAT:??_7type_info@@6B@		; C_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_Base@@6B@
rdata$r	SEGMENT
??_R4C_Base@@6B@ DD 00H					; C_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_Base@@@8
	DD	FLAT:??_R3C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LHGKFGHD@CGNetUpdater?3?3Refresh?5?9?5_com_err@
CONST	SEGMENT
??_C@_0CI@LHGKFGHD@CGNetUpdater?3?3Refresh?5?9?5_com_err@ DB 'CGNetUpdate'
	DB	'r::Refresh - _com_error 0x%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LLDBCDGC@CGNetUpdater?3?3UpdateGame?5?9?5_com_@
CONST	SEGMENT
??_C@_0CL@LLDBCDGC@CGNetUpdater?3?3UpdateGame?5?9?5_com_@ DB 'CGNetUpdate'
	DB	'r::UpdateGame - _com_error 0x%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDGMJMJJ@Falcon4?$AA@
CONST	SEGMENT
??_C@_07GDGMJMJJ@Falcon4?$AA@ DB 'Falcon4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NBJLJDOH@Contacting?5master?5server?5?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BN@NBJLJDOH@Contacting?5master?5server?5?4?4?4?$AA@ DB 'Contacting'
	DB	' master server ...', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
CONST	SEGMENT
??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@ DB '%2d/%2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLKEJMAA@?$CF4d?$AA@
CONST	SEGMENT
??_C@_03GLKEJMAA@?$CF4d?$AA@ DB '%4d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EENOLLKJ@?$CF?41f?$CF?$CF?5?$CI?$CFd?5of?5?$CFd?5Servers?$CJ?$AA@
CONST	SEGMENT
??_C@_0BK@EENOLLKJ@?$CF?41f?$CF?$CF?5?$CI?$CFd?5of?5?$CFd?5Servers?$CJ?$AA@ DB '%'
	DB	'.1f%% (%d of %d Servers)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMKHJNFD@Update?5failed?$AA@
CONST	SEGMENT
??_C@_0O@BMKHJNFD@Update?5failed?$AA@ DB 'Update failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CPCOMKHD@Failed?5to?5connect?5to?5master?5serv@
CONST	SEGMENT
??_C@_0CD@CPCOMKHD@Failed?5to?5connect?5to?5master?5serv@ DB 'Failed to c'
	DB	'onnect to master server', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FEIOPENH@?$CFd?5Servers?$AA@
CONST	SEGMENT
??_C@_0L@FEIOPENH@?$CFd?5Servers?$AA@ DB '%d Servers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CFGAOGGF@Connected?5?4?4?5getting?5server?5info@
CONST	SEGMENT
??_C@_0CI@CFGAOGGF@Connected?5?4?4?5getting?5server?5info@ DB 'Connected '
	DB	'.. getting server information', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NINGCFFI@UpdateDisplay?5?9?5_com_error?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0CA@NINGCFFI@UpdateDisplay?5?9?5_com_error?50x?$CFX?$AA@ DB 'Update'
	DB	'Display - _com_error 0x%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NBAOOLHC@DF?$AA@
CONST	SEGMENT
??_C@_02NBAOOLHC@DF?$AA@ DB 'DF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OGAFBLMB@TE?$AA@
CONST	SEGMENT
??_C@_02OGAFBLMB@TE?$AA@ DB 'TE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JLAAGLDA@CA?$AA@
CONST	SEGMENT
??_C@_02JLAAGLDA@CA?$AA@ DB 'CA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DFJKLFBN@Update?5?9?5_com_error?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0BJ@DFJKLFBN@Update?5?9?5_com_error?50x?$CFX?$AA@ DB 'Update - _com'
	DB	'_error 0x%X', 00H				; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AV_com_error@@@8??0_com_error@@QAE@ABV0@@Z16
xdata$x	SEGMENT
__CT??_R0?AV_com_error@@@8??0_com_error@@QAE@ABV0@@Z16 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	FLAT:??0_com_error@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT __CTA1?AV_com_error@@
xdata$x	SEGMENT
__CTA1?AV_com_error@@ DD 01H
	DD	FLAT:__CT??_R0?AV_com_error@@@8??0_com_error@@QAE@ABV0@@Z16
xdata$x	ENDS
;	COMDAT __TI1?AV_com_error@@
xdata$x	SEGMENT
__TI1?AV_com_error@@ DD 00H
	DD	FLAT:??1_com_error@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA1?AV_com_error@@
xdata$x	ENDS
;	COMDAT ??_C@_0CB@FJNCFHFD@MakeServerItem?5?9?5_com_error?50x?$CFX@
CONST	SEGMENT
??_C@_0CB@FJNCFHFD@MakeServerItem?5?9?5_com_error?50x?$CFX@ DB 'MakeServe'
	DB	'rItem - _com_error 0x%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0?AV_com_error@@@8
_DATA	SEGMENT
??_R0?AV_com_error@@@8 DD FLAT:??_7type_info@@6B@	; _com_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_com_error@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@
CONST	SEGMENT
??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@ DB '%1d.%02d.%1d.'
	DB	'%5d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HBACIAED@Aborting?5?4?4?4?$AA@
CONST	SEGMENT
??_C@_0N@HBACIAED@Aborting?5?4?4?4?$AA@ DB 'Aborting ...', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7C_ServerItem@@6B@
CONST	SEGMENT
??_7C_ServerItem@@6B@ DD FLAT:??_R4C_ServerItem@@6B@	; C_ServerItem::`vftable'
	DD	FLAT:??_EC_ServerItem@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Control@@UAEXJJ@Z
	DD	FLAT:?SetState@C_ServerItem@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Control@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Control@@UAEXJ@Z
	DD	FLAT:?SetFont@C_ServerItem@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Control@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Control@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Control@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Control@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Control@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
	DD	FLAT:?GetRelX@C_Control@@UAEJXZ
	DD	FLAT:?GetRelY@C_Control@@UAEJXZ
	DD	FLAT:?GetState@C_ServerItem@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Control@@UAEFXZ
	DD	FLAT:?GetMenu@C_Control@@UAEJXZ
	DD	FLAT:?GetFont@C_ServerItem@@UAEJXZ
	DD	FLAT:?GetHelpText@C_Control@@UAEJXZ
	DD	FLAT:?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Control@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
	DD	FLAT:?IsBase@C_Control@@UAEHXZ
	DD	FLAT:?IsControl@C_Control@@UAEHXZ
	DD	FLAT:?Refresh@C_ServerItem@@UAEXXZ
	DD	FLAT:?Draw@C_ServerItem@@MAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_ServerItem@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_ServerItem@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_ServerItem@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_Control@@UAEHJJPAVC_Base@@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_Base@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_Base@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_7GNetUpdater@@6BIRemoteMasterServerEvents@@@
CONST	SEGMENT
??_7GNetUpdater@@6BIRemoteMasterServerEvents@@@ DD FLAT:??_R4GNetUpdater@@6BIRemoteMasterServerEvents@@@ ; GNetUpdater::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
	DD	FLAT:?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
	DD	FLAT:?ServerListReceived@CGNetUpdater@@UAGJH@Z
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7GNetUpdater@@6BIGameEvents@@@
CONST	SEGMENT
??_7GNetUpdater@@6BIGameEvents@@@ DD FLAT:??_R4GNetUpdater@@6BIGameEvents@@@ ; GNetUpdater::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z
	DD	FLAT:?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z
	DD	FLAT:??_EGNetUpdater@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@
CONST	SEGMENT
??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@ DD FLAT:??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@ ; ATL::CComObject<CGNetUpdater>::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
	DD	FLAT:?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
	DD	FLAT:?ServerListReceived@CGNetUpdater@@UAGJH@Z
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@
CONST	SEGMENT
??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@ DD FLAT:??_R4?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@ ; ATL::CComObject<CGNetUpdater>::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z
	DD	FLAT:?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z
	DD	FLAT:??_E?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B DD FLAT:__GUID_b8d1f614_d5e4_4bd1_8f01_17371deaf685 ; `CGNetUpdater::_GetEntries'::`2'::_entries
	DD	00H
	DD	01H
	DD	FLAT:__GUID_36b5b50d_69bb_43d5_83f6_aaf7eb9fff7b
	DD	04H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CGNetUpdater@@6BIRemoteMasterServerEvents@@@
CONST	SEGMENT
??_7CGNetUpdater@@6BIRemoteMasterServerEvents@@@ DD FLAT:??_R4CGNetUpdater@@6BIRemoteMasterServerEvents@@@ ; CGNetUpdater::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ServerListReceived@CGNetUpdater@@UAGJH@Z
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7CGNetUpdater@@6BIGameEvents@@@
CONST	SEGMENT
??_7CGNetUpdater@@6BIGameEvents@@@ DD FLAT:??_R4CGNetUpdater@@6BIGameEvents@@@ ; CGNetUpdater::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z
	DD	FLAT:?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z
CONST	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT
??_7_com_error@@6B@ DD FLAT:??_R4_com_error@@6B@	; _com_error::`vftable'
	DD	FLAT:??_E_com_error@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7C_Control@@6B@
CONST	SEGMENT
??_7C_Control@@6B@ DD FLAT:??_R4C_Control@@6B@		; C_Control::`vftable'
	DD	FLAT:??_EC_Control@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Control@@UAEXJJ@Z
	DD	FLAT:?SetState@C_Base@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Control@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Control@@UAEXJ@Z
	DD	FLAT:?SetFont@C_Base@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Control@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Control@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Control@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Control@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Control@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
	DD	FLAT:?GetRelX@C_Control@@UAEJXZ
	DD	FLAT:?GetRelY@C_Control@@UAEJXZ
	DD	FLAT:?GetState@C_Base@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Control@@UAEFXZ
	DD	FLAT:?GetMenu@C_Control@@UAEJXZ
	DD	FLAT:?GetFont@C_Base@@UAEJXZ
	DD	FLAT:?GetHelpText@C_Control@@UAEJXZ
	DD	FLAT:?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Control@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
	DD	FLAT:?IsBase@C_Control@@UAEHXZ
	DD	FLAT:?IsControl@C_Control@@UAEHXZ
	DD	FLAT:?Refresh@C_Base@@UAEXXZ
	DD	FLAT:?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_Base@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_Base@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_Base@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_Control@@UAEHJJPAVC_Base@@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_Base@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_Base@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_7C_Base@@6B@
CONST	SEGMENT
??_7C_Base@@6B@ DD FLAT:??_R4C_Base@@6B@		; C_Base::`vftable'
	DD	FLAT:??_EC_Base@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetState@C_Base@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Base@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFont@C_Base@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Base@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Base@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Base@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Base@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Base@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Base@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Base@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z
	DD	FLAT:?GetRelX@C_Base@@UAEJXZ
	DD	FLAT:?GetRelY@C_Base@@UAEJXZ
	DD	FLAT:?GetState@C_Base@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Base@@UAEFXZ
	DD	FLAT:?GetMenu@C_Base@@UAEJXZ
	DD	FLAT:?GetFont@C_Base@@UAEJXZ
	DD	FLAT:?GetHelpText@C_Base@@UAEJXZ
	DD	FLAT:?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Base@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Base@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Base@@UAEJXZ
	DD	FLAT:?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ
	DD	FLAT:?IsBase@C_Base@@UAEHXZ
	DD	FLAT:?IsControl@C_Base@@UAEHXZ
	DD	FLAT:?Refresh@C_Base@@UAEXXZ
	DD	FLAT:?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_Base@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_Base@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_Base@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_Base@@UAEHJJPAV1@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_Base@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_Base@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ$0
__ehfuncinfo$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z$0
__ehfuncinfo$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??0C_ServerItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0C_ServerItem@@QAE@XZ$0
__catchsym$?UpdateDisplay@@YAXXZ$4 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffffb8H
	DD	FLAT:__catch$?UpdateDisplay@@YAXXZ$0
__catchsym$?Update@@YAXXZ$4 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffffb0H
	DD	FLAT:__catch$?Update@@YAXXZ$0
__catchsym$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$4 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffff8cH
	DD	FLAT:__catch$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$0
__catchsym$?ServerListReceived@CGNetUpdater@@UAGJH@Z$8 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffffa0H
	DD	FLAT:__catch$?ServerListReceived@CGNetUpdater@@UAGJH@Z$0
__unwindtable$?ServerListReceived@CGNetUpdater@@UAGJH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$5 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffffacH
	DD	FLAT:__catch$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$0
__catchsym$?Update@CGNetUpdater@@QAEXXZ$5 DD 00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0ffffffb4H
	DD	FLAT:__catch$?Update@CGNetUpdater@@QAEXXZ$0
__tryblocktable$?UpdateDisplay@@YAXXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?UpdateDisplay@@YAXXZ$4
__tryblocktable$?Update@@YAXXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Update@@YAXXZ$4
__tryblocktable$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$4
__tryblocktable$?ServerListReceived@CGNetUpdater@@UAGJH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?ServerListReceived@CGNetUpdater@@UAGJH@Z$8
__tryblocktable$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$5
__tryblocktable$?Update@CGNetUpdater@@QAEXXZ DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?Update@CGNetUpdater@@QAEXXZ$5
__unwindtable$?UpdateDisplay@@YAXXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateDisplay@@YAXXZ$2
	DD	0ffffffffH
	DD	00H
__unwindtable$?Update@@YAXXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@@YAXXZ$2
	DD	0ffffffffH
	DD	00H
__unwindtable$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$2
	DD	0ffffffffH
	DD	00H
__unwindtable$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$2
	DD	0ffffffffH
	DD	00H
__unwindtable$?Update@CGNetUpdater@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@CGNetUpdater@@QAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@CGNetUpdater@@QAEXXZ$3
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?FilterGame@@YA_NPAUIGame@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?FilterGame@@YA_NPAUIGame@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UpdateDisplay@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UpdateDisplay@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?UpdateDisplay@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Update@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Update@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Update@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0C_ServerItem@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0C_ServerItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ServerListReceived@CGNetUpdater@@UAGJH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ServerListReceived@CGNetUpdater@@UAGJH@Z
	DD	01H
	DD	FLAT:__tryblocktable$?ServerListReceived@CGNetUpdater@@UAGJH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Update@CGNetUpdater@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Update@CGNetUpdater@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Update@CGNetUpdater@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FilterGame@@YA_NPAUIGame@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$9
__unwindtable$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$8
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$10
	DD	03H
	DD	FLAT:__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z$0
__ehfuncinfo$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z$0
__ehfuncinfo$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ$0
__ehfuncinfo$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_bstr_t@@QAE@PA_W_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_bstr_t@@QAE@PA_W_N@Z$0
__ehfuncinfo$??0_bstr_t@@QAE@PA_W_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_bstr_t@@QAE@PA_W_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_bstr_t@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_bstr_t@@QAE@PB_W@Z$0
__ehfuncinfo$??0_bstr_t@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_bstr_t@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_bstr_t@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_bstr_t@@QAE@PBD@Z$0
__ehfuncinfo$??0_bstr_t@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_bstr_t@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1C_Control@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1C_Control@@UAE@XZ$0
__ehfuncinfo$??1C_Control@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1C_Control@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_m_arrGames$initializer$ DD FLAT:??__Em_arrGames@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ PROC	; [thunk]:ATL::CComObject<CGNetUpdater>::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ; ATL::CComObject<CGNetUpdater>::Release
?Release@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ ENDP	; [thunk]:ATL::CComObject<CGNetUpdater>::Release`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ PROC	; [thunk]:ATL::CComObject<CGNetUpdater>::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ; ATL::CComObject<CGNetUpdater>::AddRef
?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@W3AGKXZ ENDP	; [thunk]:ATL::CComObject<CGNetUpdater>::AddRef`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<CGNetUpdater>::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CGNetUpdater>::QueryInterface
?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<CGNetUpdater>::QueryInterface`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAUIGame@@PAU1@PAU1@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUIGame@@PAU1@PAU1@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<IGame *,IGame *,IGame *>, COMDAT

; 458  : 	{	// move [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 459  : 	_DEBUG_RANGE(_First, _Last);
; 460  : 	_DEBUG_POINTER(_Dest);
; 461  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 462  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 463  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 464  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUIGame@@PAU1@PAU1@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<IGame *,IGame *,IGame *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAUIGame@@@std@@YAPAPAUIGame@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUIGame@@@std@@YAPAPAUIGame@@PAPAU1@@Z PROC ; std::_Val_type<IGame * *>, COMDAT

; 710  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 711  : 	return (0);

	xor	eax, eax

; 712  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAPAUIGame@@@std@@YAPAPAUIGame@@PAPAU1@@Z ENDP ; std::_Val_type<IGame * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z PROC ; std::allocator<IGame *>::construct<IGame *,IGame * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z ; std::forward<IGame * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ENDP ; std::allocator<IGame *>::construct<IGame *,IGame * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUIGame@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUIGame@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z PROC ; std::_Uninitialized_move<IGame * *,IGame * *,std::_Wrap_alloc<std::allocator<IGame *> > >, COMDAT

; 471  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 472  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 473  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z ; std::_Ptr_cat<IGame *,IGame *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAUIGame@@@std@@YAPAPAUIGame@@PAPAU1@@Z ; std::_Val_type<IGame * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUIGame@@PAU1@PAU1@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<IGame *,IGame *,IGame *>
	add	esp, 24					; 00000018H

; 474  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAUIGame@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<IGame * *,IGame * *,std::_Wrap_alloc<std::allocator<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >, COMDAT

; 96   : 	{	// destroy [_First, _Last), scalar type (do nothing)

	push	ebp
	mov	ebp, esp

; 97   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z PROC ; std::_Ptr_cat<IGame *,IGame *>, COMDAT

; 437  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 438  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 439  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 440  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z ENDP ; std::_Ptr_cat<IGame *,IGame *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAUIGame@@ABQAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAUIGame@@ABQAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * const &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z ; std::forward<IGame * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@ABQAU3@@Z ; std::allocator<IGame *>::construct
	pop	ebp
	ret	0
??$construct@PAUIGame@@ABQAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z PROC ; std::forward<IGame * const &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z ENDP ; std::forward<IGame * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAUIGame@@AAPAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAUIGame@@AAPAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z ; std::forward<IGame * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAUIGame@@AAPAU1@@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ; std::allocator<IGame *>::construct<IGame *,IGame * &>
	pop	ebp
	ret	0
??$construct@PAUIGame@@AAPAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z PROC ; std::forward<IGame * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z ENDP ; std::forward<IGame * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$_QueryInterface@V?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
_pInterface$2 = -20					; size = 4
_this$ = -16						; size = 4
tv86 = -12						; size = 4
tv77 = -8						; size = 4
_hr$ = -4						; size = 4
_p$ = 8							; size = 4
??$_QueryInterface@V?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_QueryInterface<_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> > >, COMDAT
; _this$ = ecx

; 800  :     template<typename _InterfacePtr> HRESULT _QueryInterface(_InterfacePtr p) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 801  :     {
; 802  :         HRESULT hr;
; 803  : 
; 804  :         // Can't QI NULL
; 805  :         //
; 806  :         if (p != NULL) {

	push	0
	lea	ecx, DWORD PTR _p$[ebp]
	call	??9?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@QueryInter

; 807  :             // Query for this interface
; 808  :             //
; 809  :             Interface* pInterface;
; 810  :             hr = p->QueryInterface(GetIID(), reinterpret_cast<void**>(&pInterface));

	lea	ecx, DWORD PTR _p$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	DWORD PTR tv77[ebp], eax
	lea	ecx, DWORD PTR _pInterface$2[ebp]
	push	ecx
	call	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::GetIID
	push	eax
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	mov	eax, DWORD PTR tv77[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	mov	DWORD PTR _hr$[ebp], eax

; 811  : 
; 812  :             // Save the interface without AddRef()ing.
; 813  :             //
; 814  :             Attach(SUCCEEDED(hr)? pInterface: NULL);

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN5@QueryInter
	mov	eax, DWORD PTR _pInterface$2[ebp]
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN6@QueryInter
$LN5@QueryInter:
	mov	DWORD PTR tv86[ebp], 0
$LN6@QueryInter:
	mov	ecx, DWORD PTR tv86[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIHost@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::Attach

; 815  :         }
; 816  :         else {

	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:

; 817  :             operator=(static_cast<Interface*>(NULL));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?4UIHost@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIHost@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IHost>

; 818  :             hr = E_NOINTERFACE;

	mov	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
$LN1@QueryInter:

; 819  :         }
; 820  : 
; 821  :         return hr;

	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	eax, DWORD PTR $T1[ebp]

; 822  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??$_QueryInterface@V?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_QueryInterface<_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$_QueryInterface@PAUIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJPAUIGame@@@Z
_TEXT	SEGMENT
_pInterface$1 = -16					; size = 4
_this$ = -12						; size = 4
tv78 = -8						; size = 4
_hr$ = -4						; size = 4
_p$ = 8							; size = 4
??$_QueryInterface@PAUIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJPAUIGame@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_QueryInterface<IGame *>, COMDAT
; _this$ = ecx

; 800  :     template<typename _InterfacePtr> HRESULT _QueryInterface(_InterfacePtr p) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 801  :     {
; 802  :         HRESULT hr;
; 803  : 
; 804  :         // Can't QI NULL
; 805  :         //
; 806  :         if (p != NULL) {

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@QueryInter

; 807  :             // Query for this interface
; 808  :             //
; 809  :             Interface* pInterface;
; 810  :             hr = p->QueryInterface(GetIID(), reinterpret_cast<void**>(&pInterface));

	lea	eax, DWORD PTR _pInterface$1[ebp]
	push	eax
	call	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::GetIID
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	mov	DWORD PTR _hr$[ebp], eax

; 811  : 
; 812  :             // Save the interface without AddRef()ing.
; 813  :             //
; 814  :             Attach(SUCCEEDED(hr)? pInterface: NULL);

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN5@QueryInter
	mov	edx, DWORD PTR _pInterface$1[ebp]
	mov	DWORD PTR tv78[ebp], edx
	jmp	SHORT $LN6@QueryInter
$LN5@QueryInter:
	mov	DWORD PTR tv78[ebp], 0
$LN6@QueryInter:
	mov	eax, DWORD PTR tv78[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIGame@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::Attach

; 815  :         }
; 816  :         else {

	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:

; 817  :             operator=(static_cast<Interface*>(NULL));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?4UIGame@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIGame@GNETCORELib@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IGame>

; 818  :             hr = E_NOINTERFACE;

	mov	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
$LN1@QueryInter:

; 819  :         }
; 820  : 
; 821  :         return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 822  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??$_QueryInterface@PAUIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJPAUIGame@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_QueryInterface<IGame *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@PAUIGame@@@std@@YAPAPAUIGame@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUIGame@@@std@@YAPAPAUIGame@@IPAPAU1@@Z PROC ; std::_Allocate<IGame *>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAUIGame@@@std@@YAPAPAUIGame@@IPAPAU1@@Z ENDP ; std::_Allocate<IGame *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAUIGame@@@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEPAPAUIGame@@PAPAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUIGame@@@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEPAPAUIGame@@PAPAU2@00@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Umove<IGame * *>, COMDAT
; _this$ = ecx

; 1557 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1558 : 		{	// move initializing [_First, _Last), using allocator
; 1559 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal

; 1560 : 		return (_Uninitialized_move(_First, _Last,
; 1561 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPAUIGame@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAPAPAUIGame@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ; std::_Uninitialized_move<IGame * *,IGame * *,std::_Wrap_alloc<std::allocator<IGame *> > >
	add	esp, 16					; 00000010H

; 1562 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAUIGame@@@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEPAPAUIGame@@PAPAU2@00@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Umove<IGame * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >, COMDAT

; 79   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 80   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUIGame@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUIGame@@0@Z ; std::_Ptr_cat<IGame *,IGame *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
	add	esp, 16					; 00000010H

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAUIGame@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAUIGame@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * const &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABQAUIGame@@@std@@YAABQAUIGame@@ABQAU1@@Z ; std::forward<IGame * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAUIGame@@ABQAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@ABQAU3@@Z ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * const &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAUIGame@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAUIGame@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAUIGame@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAUIGame@@@std@@YAAAPAUIGame@@AAPAU1@@Z ; std::forward<IGame * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAUIGame@@AAPAU1@@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAXAAV?$allocator@PAUIGame@@@1@PAPAUIGame@@AAPAU3@@Z ; std::allocator_traits<std::allocator<IGame *> >::construct<IGame *,IGame * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAUIGame@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z PROC ; std::addressof<IGame * const>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z ENDP ; std::addressof<IGame * const>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z
_TEXT	SEGMENT
tv85 = -20						; size = 4
$T1 = -16						; size = 4
tv86 = -12						; size = 4
_this$ = -8						; size = 4
_hr$ = -4						; size = 4
_p$ = 8							; size = 4
??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >, COMDAT
; _this$ = ecx

; 82   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 83   :         HRESULT hr = _QueryInterface(p);

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV0@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_QueryInterface@V?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_QueryInterface<_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> > >
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR _hr$[ebp], eax

; 84   : 
; 85   :         if (FAILED(hr) && (hr != E_NOINTERFACE)) {

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@IHost
	cmp	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
	je	SHORT $LN2@IHost

; 86   :             _com_issue_error(hr);

	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@IHost:

; 87   :         }
; 88   :     }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@IHost:
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_AddRef, COMDAT
; _this$ = ecx

; 789  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@AddRef

; 791  :             m_pInterface->AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN2@AddRef:

; 792  :         }
; 793  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_Release, COMDAT
; _this$ = ecx

; 780  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 781  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release

; 782  :             m_pInterface->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@Release:

; 783  :         }
; 784  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->, COMDAT
; _this$ = ecx

; 401  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  :         if (m_pInterface == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@operator

; 403  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN1@operator:

; 404  :         }
; 405  : 
; 406  :         return m_pInterface; 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
$LN3@operator:

; 407  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIHost@GNETCORELib@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pInterface$ = 8					; size = 4
?Attach@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIHost@GNETCORELib@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::Attach, COMDAT
; _this$ = ecx

; 323  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  :         _Release();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_Release

; 325  :         m_pInterface = pInterface;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pInterface$[ebp]
	mov	DWORD PTR [eax], ecx

; 326  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIHost@GNETCORELib@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::Attach
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >, COMDAT
; _this$ = ecx

; 315  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  :         _Release(); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_Release

; 317  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$?4UIHost@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIHost@GNETCORELib@@@Z
_TEXT	SEGMENT
_pOldInterface$1 = -8					; size = 4
_this$ = -4						; size = 4
_pInterface$ = 8					; size = 4
??$?4UIHost@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIHost@GNETCORELib@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IHost>, COMDAT
; _this$ = ecx

; 261  :     template<> _com_ptr_t& operator=(Interface* pInterface) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 262  :     {
; 263  :         if (m_pInterface != pInterface) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _pInterface$[ebp]
	je	SHORT $LN2@operator

; 264  :             Interface* pOldInterface = m_pInterface;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pOldInterface$1[ebp], eax

; 265  : 
; 266  :             m_pInterface = pInterface;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pInterface$[ebp]
	mov	DWORD PTR [ecx], edx

; 267  : 
; 268  :             _AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_AddRef

; 269  : 
; 270  :             if (pOldInterface != NULL) {

	cmp	DWORD PTR _pOldInterface$1[ebp], 0
	je	SHORT $LN2@operator

; 271  :                 pOldInterface->Release();

	mov	eax, DWORD PTR _pOldInterface$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldInterface$1[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
$LN2@operator:

; 272  :             }
; 273  :         }
; 274  : 
; 275  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 276  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??$?4UIHost@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIHost@GNETCORELib@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IHost>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::GetIID, COMDAT

; 74   :     { 

	push	ebp
	mov	ebp, esp

; 75   :         return ThisIIID::GetIID(); 

	call	?GetIID@?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398>::GetIID

; 76   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ PROC ; _com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398>::GetIID, COMDAT

; 55   :     {

	push	ebp
	mov	ebp, esp

; 56   :         return *_IID;

	mov	eax, OFFSET __GUID_b6b03a0c_d547_11d2_9018_004f4e006398

; 57   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ENDP ; _com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398>::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
tv128 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
?ServerBrowserExit@@YAXXZ PROC				; ServerBrowserExit

; 905  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 906  : 	if(m_pUpdater)

	cmp	DWORD PTR _m_pUpdater, 0
	je	$LN4@ServerBrow

; 907  : 	{
; 908  : 		if(m_pUpdater->IsUpdating())

	mov	ecx, DWORD PTR _m_pUpdater
	call	?IsUpdating@CGNetUpdater@@QAE_NXZ	; CGNetUpdater::IsUpdating
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ServerBrow

; 909  : 		{
; 910  : 			m_bShutdownPending = true;

	mov	BYTE PTR _m_bShutdownPending, 1

; 911  : 			m_pUpdater->CancelUpdate();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?CancelUpdate@CGNetUpdater@@QAEXXZ	; CGNetUpdater::CancelUpdate

; 912  : 
; 913  : 			if(m_hEventShutdown)

	cmp	DWORD PTR _m_hEventShutdown, 0
	je	SHORT $LN2@ServerBrow

; 914  : 			{
; 915  : 				AtlWaitWithMessageLoop(m_hEventShutdown);

	mov	ecx, DWORD PTR _m_hEventShutdown
	push	ecx
	call	?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z	; ATL::AtlWaitWithMessageLoop

; 916  : 				CloseHandle(m_hEventShutdown);

	mov	edx, DWORD PTR _m_hEventShutdown
	push	edx
	call	DWORD PTR __imp__CloseHandle@4

; 917  : 				m_hEventShutdown = NULL;

	mov	DWORD PTR _m_hEventShutdown, 0
$LN2@ServerBrow:

; 918  : 			}
; 919  : 		}
; 920  : 
; 921  : 		m_pUpdater->Cleanup();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?Cleanup@CGNetUpdater@@QAEXXZ		; CGNetUpdater::Cleanup

; 922  : 		delete m_pUpdater;

	mov	eax, DWORD PTR _m_pUpdater
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@ServerBrow
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN7@ServerBrow
$LN6@ServerBrow:
	mov	DWORD PTR tv128[ebp], 0
$LN7@ServerBrow:

; 923  : 		m_pUpdater = NULL;

	mov	DWORD PTR _m_pUpdater, 0

; 924  : 
; 925  : 		ClearServerList();

	call	?ClearServerList@@YAXXZ			; ClearServerList
$LN4@ServerBrow:

; 926  : 	}
; 927  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerBrowserExit@@YAXXZ ENDP				; ServerBrowserExit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pWin$1 = -8						; size = 4
_wndClose$2 = -4					; size = 4
_bSuccess$ = 8						; size = 4
?UpdateComplete@@YAXH@Z PROC				; UpdateComplete

; 864  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 865  : 	if(m_bShutdownPending)

	movzx	eax, BYTE PTR _m_bShutdownPending
	test	eax, eax
	je	SHORT $LN10@UpdateComp

; 866  : 	{
; 867  : 		m_bShutdownPending = false;

	mov	BYTE PTR _m_bShutdownPending, 0

; 868  : 		SetEvent(m_hEventShutdown);

	mov	ecx, DWORD PTR _m_hEventShutdown
	push	ecx
	call	DWORD PTR __imp__SetEvent@4
	jmp	$LN9@UpdateComp
$LN10@UpdateComp:

; 869  : 	}
; 870  : 
; 871  : 	else if(m_bCloseWindowPending)

	movzx	edx, BYTE PTR _m_bCloseWindowPending
	test	edx, edx
	je	$LN9@UpdateComp

; 872  : 	{
; 873  : 		m_bCloseWindowPending = false;

	mov	BYTE PTR _m_bCloseWindowPending, 0

; 874  : 
; 875  : 		C_Window *pWin = gMainHandler->FindWindow(JETNET_WIN);

	push	70166					; 00011216H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _pWin$1[ebp], eax

; 876  : 		C_Base *wndClose = pWin->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _pWin$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _wndClose$2[ebp], eax

; 877  : 
; 878  : 		if(wndClose)

	cmp	DWORD PTR _wndClose$2[ebp], 0
	je	SHORT $LN7@UpdateComp

; 879  : 			CloseWindowCB(wndClose->GetID(), C_TYPE_LMOUSEUP, wndClose);

	mov	eax, DWORD PTR _wndClose$2[ebp]
	push	eax
	push	52					; 00000034H
	mov	ecx, DWORD PTR _wndClose$2[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN7@UpdateComp:

; 880  : 
; 881  : 		if(m_bConnectPending)

	movzx	ecx, BYTE PTR _m_bConnectPending
	test	ecx, ecx
	je	SHORT $LN9@UpdateComp

; 882  : 		{
; 883  : 			m_bConnectPending = false;

	mov	BYTE PTR _m_bConnectPending, 0

; 884  : 
; 885  : 			ShiAssert(m_pSelectedItem);
; 886  : 			if(m_pSelectedItem)

	cmp	DWORD PTR _m_pSelectedItem, 0
	je	SHORT $LN9@UpdateComp

; 887  : 				Phone_Connect_CB((long) m_pSelectedItem->GetIP(), C_TYPE_LMOUSEUP, pWin->FindControl(JETNET_BROWSER_PLAY));

	push	70169					; 00011219H
	mov	ecx, DWORD PTR _pWin$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	push	eax
	push	52					; 00000034H
	mov	ecx, DWORD PTR _m_pSelectedItem
	call	?GetIP@C_ServerItem@@QAEKXZ		; C_ServerItem::GetIP
	push	eax
	call	?Phone_Connect_CB@@YAXJFPAVC_Base@@@Z	; Phone_Connect_CB
	add	esp, 12					; 0000000cH
$LN9@UpdateComp:

; 888  : 		}
; 889  : 	}
; 890  : 
; 891  : 	if(bSuccess)

	cmp	DWORD PTR _bSuccess$[ebp], 0
	je	SHORT $LN4@UpdateComp

; 892  : 		UpdateStatus("%d Servers", m_nUpdatedServers);

	mov	edx, DWORD PTR _m_nUpdatedServers
	push	edx
	push	OFFSET ??_C@_0L@FEIOPENH@?$CFd?5Servers?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 8

; 893  : 
; 894  : 	else

	jmp	SHORT $LN11@UpdateComp
$LN4@UpdateComp:

; 895  : 	{
; 896  : 		if(!m_bConnectedToMaster)

	movzx	eax, BYTE PTR _m_bConnectedToMaster
	test	eax, eax
	jne	SHORT $LN2@UpdateComp

; 897  : 			UpdateStatus("Failed to connect to master server");

	push	OFFSET ??_C@_0CD@CPCOMKHD@Failed?5to?5connect?5to?5master?5serv@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4

; 898  : 
; 899  : 		else

	jmp	SHORT $LN11@UpdateComp
$LN2@UpdateComp:

; 900  : 			UpdateStatus("Update failed");

	push	OFFSET ??_C@_0O@BMKHJNFD@Update?5failed?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4
$LN11@UpdateComp:

; 901  : 	}
; 902  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateComplete@@YAXH@Z ENDP				; UpdateComplete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_nServers$ = 8						; size = 4
?ServerListReceived@@YAXH@Z PROC			; ServerListReceived

; 856  : {

	push	ebp
	mov	ebp, esp

; 857  : 	m_bConnectedToMaster = false;

	mov	BYTE PTR _m_bConnectedToMaster, 0

; 858  : 
; 859  : 	if(nServers != 0)

	cmp	DWORD PTR _nServers$[ebp], 0
	je	SHORT $LN2@ServerList

; 860  : 		UpdateStatus("Connected .. getting server information");

	push	OFFSET ??_C@_0CI@CFGAOGGF@Connected?5?4?4?5getting?5server?5info@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4
$LN2@ServerList:

; 861  : }

	pop	ebp
	ret	0
?ServerListReceived@@YAXH@Z ENDP			; ServerListReceived
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FbstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ
text$yd	SEGMENT
??__FbstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ PROC	; `FilterGame'::`7'::`dynamic atexit destructor for 'bstrDF'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?bstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	pop	ebp
	ret	0
??__FbstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ENDP	; `FilterGame'::`7'::`dynamic atexit destructor for 'bstrDF''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FbstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ
text$yd	SEGMENT
??__FbstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ PROC	; `FilterGame'::`6'::`dynamic atexit destructor for 'bstrTE'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?bstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	pop	ebp
	ret	0
??__FbstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ENDP	; `FilterGame'::`6'::`dynamic atexit destructor for 'bstrTE''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_hr$ = -4						; size = 4
_p$ = 8							; size = 4
??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 95   :         HRESULT hr = _QueryInterface(p);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_QueryInterface@PAUIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEJPAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_QueryInterface<IGame *>
	mov	DWORD PTR _hr$[ebp], eax

; 96   : 
; 97   :         if (FAILED(hr) && (hr != E_NOINTERFACE)) {

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@IGame
	cmp	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
	je	SHORT $LN2@IGame

; 98   :             _com_issue_error(hr);

	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@IGame:

; 99   :         }
; 100  :     }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@IGame:
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_AddRef, COMDAT
; _this$ = ecx

; 789  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@AddRef

; 791  :             m_pInterface->AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN2@AddRef:

; 792  :         }
; 793  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_Release, COMDAT
; _this$ = ecx

; 780  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 781  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release

; 782  :             m_pInterface->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@Release:

; 783  :         }
; 784  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??9?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_null$ = 8						; size = 4
??9?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator!=, COMDAT
; _this$ = ecx

; 476  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 477  :         return !(operator==(null));

	mov	eax, DWORD PTR _null$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 478  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??8?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_null$ = 8						; size = 4
??8?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator==, COMDAT
; _this$ = ecx

; 451  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 452  :         if (null != 0) {

	cmp	DWORD PTR _null$[ebp], 0
	je	SHORT $LN1@operator

; 453  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN1@operator:

; 454  :         }
; 455  : 
; 456  :         return m_pInterface == NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN5@operator:
	mov	al, BYTE PTR tv68[ebp]
$LN3@operator:

; 457  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NH@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator bool, COMDAT
; _this$ = ecx

; 414  :     { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 415  :         return m_pInterface != NULL; 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 416  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->, COMDAT
; _this$ = ecx

; 401  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  :         if (m_pInterface == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@operator

; 403  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN1@operator:

; 404  :         }
; 405  : 
; 406  :         return m_pInterface; 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
$LN3@operator:

; 407  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIGame@GNETCORELib@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pInterface$ = 8					; size = 4
?Attach@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIGame@GNETCORELib@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::Attach, COMDAT
; _this$ = ecx

; 323  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  :         _Release();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_Release

; 325  :         m_pInterface = pInterface;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pInterface$[ebp]
	mov	DWORD PTR [eax], ecx

; 326  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEXPAUIGame@GNETCORELib@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::Attach
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >, COMDAT
; _this$ = ecx

; 315  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  :         _Release(); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_Release

; 317  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??$?4UIGame@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIGame@GNETCORELib@@@Z
_TEXT	SEGMENT
_pOldInterface$1 = -8					; size = 4
_this$ = -4						; size = 4
_pInterface$ = 8					; size = 4
??$?4UIGame@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIGame@GNETCORELib@@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IGame>, COMDAT
; _this$ = ecx

; 261  :     template<> _com_ptr_t& operator=(Interface* pInterface) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 262  :     {
; 263  :         if (m_pInterface != pInterface) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _pInterface$[ebp]
	je	SHORT $LN2@operator

; 264  :             Interface* pOldInterface = m_pInterface;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pOldInterface$1[ebp], eax

; 265  : 
; 266  :             m_pInterface = pInterface;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pInterface$[ebp]
	mov	DWORD PTR [ecx], edx

; 267  : 
; 268  :             _AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_AddRef

; 269  : 
; 270  :             if (pOldInterface != NULL) {

	cmp	DWORD PTR _pOldInterface$1[ebp], 0
	je	SHORT $LN2@operator

; 271  :                 pOldInterface->Release();

	mov	eax, DWORD PTR _pOldInterface$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldInterface$1[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
$LN2@operator:

; 272  :             }
; 273  :         }
; 274  : 
; 275  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 276  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??$?4UIGame@GNETCORELib@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAEAAV0@PAUIGame@GNETCORELib@@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator=<GNETCORELib::IGame>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cp$ = 8						; size = 4
??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV0@@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >, COMDAT
; _this$ = ecx

; 160  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 161  :         _AddRef(); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_AddRef

; 162  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV0@@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >, COMDAT
; _this$ = ecx

; 135  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 136  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::GetIID, COMDAT

; 74   :     { 

	push	ebp
	mov	ebp, esp

; 75   :         return ThisIIID::GetIID(); 

	call	?GetIID@?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398>::GetIID

; 76   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ PROC ; _com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398>::GetIID, COMDAT

; 55   :     {

	push	ebp
	mov	ebp, esp

; 56   :         return *_IID;

	mov	eax, OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398

; 57   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@SAABU_GUID@@XZ ENDP ; _com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398>::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FbstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ
text$yd	SEGMENT
??__FbstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ PROC	; `FilterGame'::`5'::`dynamic atexit destructor for 'bstrCA'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?bstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	pop	ebp
	ret	0
??__FbstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ENDP	; `FilterGame'::`5'::`dynamic atexit destructor for 'bstrCA''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
$T2 = -96						; size = 4
tv193 = -92						; size = 4
tv206 = -88						; size = 4
$T3 = -84						; size = 4
$T4 = -80						; size = 4
tv191 = -76						; size = 4
tv189 = -72						; size = 4
tv205 = -68						; size = 4
$T5 = -64						; size = 4
$T6 = -60						; size = 4
tv186 = -56						; size = 4
tv184 = -52						; size = 4
tv201 = -48						; size = 4
$T7 = -44						; size = 4
$T8 = -40						; size = 4
tv181 = -36						; size = 4
tv179 = -32						; size = 4
tv197 = -28						; size = 4
tv174 = -24						; size = 4
tv64 = -20						; size = 4
$T9 = -16						; size = 1
$T10 = -15						; size = 1
$T11 = -14						; size = 1
$T12 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?FilterGame@@YA_NPAUIGame@@@Z PROC			; FilterGame

; 792  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FilterGame@@YA_NPAUIGame@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 793  : 	switch(m_eFilterMode)

	mov	eax, DWORD PTR ?m_eFilterMode@@3W4_FILTER_MODE@@A ; m_eFilterMode
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 5
	ja	$LN10@FilterGame
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN27@FilterGame[ecx*4]
$LN9@FilterGame:

; 794  : 	{
; 795  : 		case FILTER_MODE_ALL:
; 796  : 			return true;

	mov	al, 1
	jmp	$LN12@FilterGame
$LN8@FilterGame:

; 797  : 
; 798  : 		case FILTER_MODE_CAMPAIGN:
; 799  : 		{
; 800  : 			static const _bstr_t bstrCA("CA");

	mov	edx, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	edx, 1
	jne	SHORT $LN7@FilterGame
	mov	eax, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	or	eax, 1
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_02JLAAGLDA@CA?$AA@
	mov	ecx, OFFSET ?bstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	push	OFFSET ??__FbstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ; `FilterGame'::`5'::`dynamic atexit destructor for 'bstrCA''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN7@FilterGame:

; 801  : 			return GNETCORELib::IGamePtr(p)->GetType() == bstrCA;

	push	OFFSET ?bstrCA@?4??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv179[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv179[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetType
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR tv181[ebp]
	call	??8_bstr_t@@QBE_NABV0@@Z		; _bstr_t::operator==
	mov	BYTE PTR $T12[ebp], al
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	al, BYTE PTR $T12[ebp]
	jmp	$LN12@FilterGame
$LN6@FilterGame:

; 802  : 		}
; 803  : 
; 804  : 		case FILTER_MODE_TE:
; 805  : 		{
; 806  : 			static const _bstr_t bstrTE("TE");

	mov	ecx, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	ecx, 2
	jne	SHORT $LN5@FilterGame
	mov	edx, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	or	edx, 2
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_02OGAFBLMB@TE?$AA@
	mov	ecx, OFFSET ?bstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	push	OFFSET ??__FbstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ; `FilterGame'::`6'::`dynamic atexit destructor for 'bstrTE''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN5@FilterGame:

; 807  : 			return GNETCORELib::IGamePtr(p)->GetType() == bstrTE;

	push	OFFSET ?bstrTE@?5??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
	mov	DWORD PTR tv201[ebp], eax
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv184[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv184[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetType
	mov	DWORD PTR tv186[ebp], eax
	mov	ecx, DWORD PTR tv186[ebp]
	call	??8_bstr_t@@QBE_NABV0@@Z		; _bstr_t::operator==
	mov	BYTE PTR $T11[ebp], al
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	al, BYTE PTR $T11[ebp]
	jmp	$LN12@FilterGame
$LN4@FilterGame:

; 808  : 		}
; 809  : 
; 810  : 		case FILTER_MODE_DOGFIGHT:
; 811  : 		{
; 812  : 			static const _bstr_t bstrDF("DF");

	mov	eax, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	eax, 4
	jne	SHORT $LN3@FilterGame
	mov	ecx, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	or	ecx, 4
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_02NBAOOLHC@DF?$AA@
	mov	ecx, OFFSET ?bstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	push	OFFSET ??__FbstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@YAXXZ ; `FilterGame'::`7'::`dynamic atexit destructor for 'bstrDF''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN3@FilterGame:

; 813  : 			return GNETCORELib::IGamePtr(p)->GetType() == bstrDF;

	push	OFFSET ?bstrDF@?6??FilterGame@@YA_NPAUIGame@@@Z@4V_bstr_t@@B
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
	mov	DWORD PTR tv205[ebp], eax
	mov	ecx, DWORD PTR tv205[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv189[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetType
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	call	??8_bstr_t@@QBE_NABV0@@Z		; _bstr_t::operator==
	mov	BYTE PTR $T10[ebp], al
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	al, BYTE PTR $T10[ebp]
	jmp	SHORT $LN12@FilterGame
$LN2@FilterGame:

; 814  : 		}
; 815  : 
; 816  : 		case FILTER_MODE_POPULATED:
; 817  : 			return GNETCORELib::IGamePtr(p)->GetNumPlayers() > 0;

	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv193[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv193[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ ; GNETCORELib::IGame::GetNumPlayers
	movsx	ecx, ax
	test	ecx, ecx
	jle	SHORT $LN14@FilterGame
	mov	DWORD PTR tv174[ebp], 1
	jmp	SHORT $LN15@FilterGame
$LN14@FilterGame:
	mov	DWORD PTR tv174[ebp], 0
$LN15@FilterGame:
	mov	dl, BYTE PTR tv174[ebp]
	mov	BYTE PTR $T9[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	al, BYTE PTR $T9[ebp]
	jmp	SHORT $LN12@FilterGame
$LN1@FilterGame:

; 818  : 
; 819  : 		case FILTER_MODE_FAVORITES:
; 820  : 		{
; 821  : 			// Currently not support
; 822  : 			ShiAssert(false);
; 823  : 			return true;

	mov	al, 1
	jmp	SHORT $LN12@FilterGame
$LN10@FilterGame:

; 824  : 		}
; 825  : 	}
; 826  : 
; 827  : 	return false;

	xor	al, al
$LN12@FilterGame:

; 828  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@FilterGame:
	DD	$LN9@FilterGame
	DD	$LN8@FilterGame
	DD	$LN6@FilterGame
	DD	$LN4@FilterGame
	DD	$LN2@FilterGame
	DD	$LN1@FilterGame
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$0:
	mov	eax, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, eax
	ret	0
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$1:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$3:
	mov	eax, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	eax, -3					; fffffffdH
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, eax
	ret	0
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$4:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$6:
	mov	eax, DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA
	and	eax, -5					; fffffffbH
	mov	DWORD PTR ?$S1@?4??FilterGame@@YA_NPAUIGame@@@Z@4IA, eax
	ret	0
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$7:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__unwindfunclet$?FilterGame@@YA_NPAUIGame@@@Z$9:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__ehhandler$?FilterGame@@YA_NPAUIGame@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FilterGame@@YA_NPAUIGame@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FilterGame@@YA_NPAUIGame@@@Z ENDP			; FilterGame
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++, COMDAT
; _this$ = ecx

; 339  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 340  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 341  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++

; 342  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 343  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++, COMDAT
; _this$ = ecx

; 333  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++

; 335  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 336  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEABQAUIGame@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >, COMDAT
; _this$ = ecx

; 300  : 	_Vector_iterator()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >

; 301  : 		{	// construct with null vector pointer
; 302  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator!=, COMDAT
; _this$ = ecx

; 209  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| this->_Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			this->_Ptr != _Tptr()
; 109  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 113  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 114  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEABQAUIGame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEABQAUIGame@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEABQAUIGame@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >, COMDAT
; _this$ = ecx

; 42   : 		{	// construct with null pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 43   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_tree$ = -48						; size = 4
_winme$ = -44						; size = 4
_ctrl$ = -40						; size = 4
_strVersion$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
?HookupServerBrowserControls@@YAXJ@Z PROC		; HookupServerBrowserControls

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 557  : 	C_Window *winme;
; 558  : 	C_Button *ctrl;
; 559  : 	C_TreeList *tree;
; 560  : 
; 561  : 	char strVersion[0x20];
; 562  : 	sprintf(strVersion,"%1d.%02d.%1d.%5d",MajorVersion, MinorVersion, gLangIDNum, BuildNumber);

	mov	eax, DWORD PTR ?BuildNumber@@3HA	; BuildNumber
	push	eax
	mov	ecx, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	push	ecx
	mov	edx, DWORD PTR ?MinorVersion@@3HA	; MinorVersion
	push	edx
	mov	eax, DWORD PTR ?MajorVersion@@3HA	; MajorVersion
	push	eax
	push	OFFSET ??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@
	lea	ecx, DWORD PTR _strVersion$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 24					; 00000018H

; 563  : 
; 564  : 	
; 565  : 	winme=gMainHandler->FindWindow(JETNET_WIN);

	push	70166					; 00011216H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 566  : 
; 567  : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN17@HookupServ

; 568  : 		return;

	jmp	$LN18@HookupServ
$LN17@HookupServ:

; 569  : 
; 570  : 	m_pWnd = winme;

	mov	edx, DWORD PTR _winme$[ebp]
	mov	DWORD PTR _m_pWnd, edx

; 571  : 	m_pWnd->SetKBCallback(MainKBCallback);

	push	OFFSET ?MainKBCallback@@YAHEEEJ@Z	; MainKBCallback
	mov	ecx, DWORD PTR _m_pWnd
	call	?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z ; C_Window::SetKBCallback

; 572  : 
; 573  : 	ctrl = (C_Button *) winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 574  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupServ

; 575  : 		ctrl->SetCallback(LocalCloseWindowCB);

	push	OFFSET ?LocalCloseWindowCB@@YAXJFPAVC_Base@@@Z ; LocalCloseWindowCB
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupServ:

; 576  : 
; 577  : 	tree=(C_TreeList*)winme->FindControl(JETNET_SERVER_TREE);

	push	70181					; 00011225H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 578  : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN15@HookupServ

; 579  : 	{
; 580  : 		m_pListServers=tree;

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR _m_pListServers, ecx

; 581  : 		m_pListServers->SetDelCallback(OnDeleteItemServerList);

	push	OFFSET ?OnDeleteItemServerList@@YAXPAVTREELIST@@@Z ; OnDeleteItemServerList
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetDelCallback@C_TreeList@@QAEXP6AXPAVTREELIST@@@Z@Z ; C_TreeList::SetDelCallback

; 582  : 		m_pListServers->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 583  : 		m_pListServers->SetSortCallback(ServerListSortCB_Ping);

	push	OFFSET ?ServerListSortCB_Ping@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Ping
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
$LN15@HookupServ:

; 584  : 	}
; 585  : 
; 586  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_BACK);

	push	70167					; 00011217H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 587  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupServ

; 588  : 		ctrl->SetCallback(OnClickedBack);

	push	OFFSET ?OnClickedBack@@YAXJFPAVC_Base@@@Z ; OnClickedBack
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN14@HookupServ:

; 589  : 
; 590  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_REFRESH);

	push	70168					; 00011218H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 591  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN13@HookupServ

; 592  : 		ctrl->SetCallback(OnClickedRefresh);

	push	OFFSET ?OnClickedRefresh@@YAXJFPAVC_Base@@@Z ; OnClickedRefresh
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupServ:

; 593  : 
; 594  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_PLAY);

	push	70169					; 00011219H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 595  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN12@HookupServ

; 596  : 		ctrl->SetCallback(OnClickedPlay);

	push	OFFSET ?OnClickedPlay@@YAXJFPAVC_Base@@@Z ; OnClickedPlay
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupServ:

; 597  : 
; 598  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_ALL);

	push	70170					; 0001121aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 599  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN11@HookupServ

; 600  : 		ctrl->SetCallback(OnClickedFilter_All);

	push	OFFSET ?OnClickedFilter_All@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_All
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupServ:

; 601  : 
; 602  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_CAMPAIGN);

	push	70171					; 0001121bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 603  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@HookupServ

; 604  : 		ctrl->SetCallback(OnClickedFilter_Campaign);

	push	OFFSET ?OnClickedFilter_Campaign@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_Campaign
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupServ:

; 605  : 
; 606  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_TE);

	push	70172					; 0001121cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 607  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupServ

; 608  : 		ctrl->SetCallback(OnClickedFilter_TE);

	push	OFFSET ?OnClickedFilter_TE@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_TE
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupServ:

; 609  : 
; 610  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_DOGFIGHT);

	push	70173					; 0001121dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 611  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupServ

; 612  : 		ctrl->SetCallback(OnClickedFilter_Dogfight);

	push	OFFSET ?OnClickedFilter_Dogfight@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_Dogfight
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupServ:

; 613  : 
; 614  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_FAVORITES);

	push	70174					; 0001121eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 615  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@HookupServ

; 616  : 		ctrl->SetCallback(OnClickedFilter_Favorites);

	push	OFFSET ?OnClickedFilter_Favorites@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_Favorites
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupServ:

; 617  : 
; 618  : 	ctrl = (C_Button *) winme->FindControl(JETNET_BROWSER_FILTER_POPULATED);

	push	70175					; 0001121fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 619  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@HookupServ

; 620  : 		ctrl->SetCallback(OnClickedFilter_Populated);

	push	OFFSET ?OnClickedFilter_Populated@@YAXJFPAVC_Base@@@Z ; OnClickedFilter_Populated
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupServ:

; 621  : 
; 622  : 	ctrl = (C_Button *) winme->FindControl(JETNET_SORT_SERVERNAME);

	push	70176					; 00011220H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 623  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@HookupServ

; 624  : 		ctrl->SetCallback(OnClickedSort_ServerName);

	push	OFFSET ?OnClickedSort_ServerName@@YAXJFPAVC_Base@@@Z ; OnClickedSort_ServerName
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupServ:

; 625  : 
; 626  : 	ctrl = (C_Button *) winme->FindControl(JETNET_SORT_PING);

	push	70177					; 00011221H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 627  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@HookupServ

; 628  : 		ctrl->SetCallback(OnClickedSort_Ping);

	push	OFFSET ?OnClickedSort_Ping@@YAXJFPAVC_Base@@@Z ; OnClickedSort_Ping
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupServ:

; 629  : 
; 630  : 	ctrl = (C_Button *) winme->FindControl(JETNET_SORT_MODE);

	push	70178					; 00011222H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 631  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupServ

; 632  : 		ctrl->SetCallback(OnClickedSort_Mode);

	push	OFFSET ?OnClickedSort_Mode@@YAXJFPAVC_Base@@@Z ; OnClickedSort_Mode
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupServ:

; 633  : 
; 634  : 	ctrl = (C_Button *) winme->FindControl(JETNET_SORT_PLAYERS);

	push	70179					; 00011223H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 635  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@HookupServ

; 636  : 		ctrl->SetCallback(OnClickedSort_Players);

	push	OFFSET ?OnClickedSort_Players@@YAXJFPAVC_Base@@@Z ; OnClickedSort_Players
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@HookupServ:

; 637  : 
; 638  : 	ctrl = (C_Button *) winme->FindControl(JETNET_SORT_LOCATION);

	push	70180					; 00011224H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 639  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN1@HookupServ

; 640  : 		ctrl->SetCallback(OnClickedSort_Location);

	push	OFFSET ?OnClickedSort_Location@@YAXJFPAVC_Base@@@Z ; OnClickedSort_Location
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN1@HookupServ:

; 641  : 
; 642  : /*	ctrl = (C_Button *) winme->FindControl(SETUP_JETNET_ENABLEUPLINK);
; 643  : 	if(ctrl)
; 644  : 		ctrl->SetCallback(OnClickedSettings);
; 645  : */
; 646  : 	m_pWndStatus = (C_Text *) winme->FindControl(JETNET_STATUS);

	push	70182					; 00011226H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _m_pWndStatus, eax

; 647  : 
; 648  : 	m_hEventShutdown = CreateEvent(NULL, FALSE, FALSE, NULL);

	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventA@16
	mov	DWORD PTR _m_hEventShutdown, eax

; 649  : 
; 650  : 	UpdateServerStatus();

	call	?UpdateServerStatus@@YAXXZ		; UpdateServerStatus
$LN18@HookupServ:

; 651  : 
; 652  : //	SetJNSettings();	// setup window
; 653  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?HookupServerBrowserControls@@YAXJ@Z ENDP		; HookupServerBrowserControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
tv65 = -4						; size = 4
_DKScanCode$ = 8					; size = 1
_Ascii$ = 12						; size = 1
_ShiftStates$ = 16					; size = 1
_RepeatCount$ = 20					; size = 4
?MainKBCallback@@YAHEEEJ@Z PROC				; MainKBCallback

; 529  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 530  : 	switch(DKScanCode)

	mov	al, BYTE PTR _DKScanCode$[ebp]
	mov	BYTE PTR tv65[ebp], al
	cmp	BYTE PTR tv65[ebp], 28			; 0000001cH
	je	SHORT $LN2@MainKBCall
	cmp	BYTE PTR tv65[ebp], 156			; 0000009cH
	je	SHORT $LN2@MainKBCall
	jmp	SHORT $LN3@MainKBCall
$LN2@MainKBCall:

; 531  : 	{
; 532  : 		case DIK_RETURN:
; 533  : 		case DIK_NUMPADENTER:
; 534  : 		{
; 535  : 			if(RepeatCount == 1 && m_pSelectedItem)

	cmp	DWORD PTR _RepeatCount$[ebp], 1
	jne	SHORT $LN3@MainKBCall
	cmp	DWORD PTR _m_pSelectedItem, 0
	je	SHORT $LN3@MainKBCall

; 536  : 			{
; 537  : 				OnClickedPlay(0, C_TYPE_LMOUSEUP, m_pWnd->FindControl(JETNET_BROWSER_PLAY));

	push	70169					; 00011219H
	mov	ecx, DWORD PTR _m_pWnd
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	push	eax
	push	52					; 00000034H
	push	0
	call	?OnClickedPlay@@YAXJFPAVC_Base@@@Z	; OnClickedPlay
	add	esp, 12					; 0000000cH

; 538  : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN5@MainKBCall
$LN3@MainKBCall:

; 539  : 			}
; 540  : 
; 541  : 			break;
; 542  : 		}
; 543  : 	}
; 544  : 
; 545  : 	return FALSE;

	xor	eax, eax
$LN5@MainKBCall:

; 546  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MainKBCallback@@YAHEEEJ@Z ENDP				; MainKBCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
tv65 = -4						; size = 4
_n$ = 8							; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnSelchangeServerList@@YAXJFPAVC_Base@@@Z PROC		; OnSelchangeServerList

; 481  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 482  : 	switch(hittype)

	movsx	eax, WORD PTR _hittype$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 51			; 00000033H
	je	SHORT $LN4@OnSelchang
	cmp	DWORD PTR tv65[ebp], 53			; 00000035H
	je	$LN2@OnSelchang
	jmp	$LN7@OnSelchang
$LN4@OnSelchang:

; 483  : 	{
; 484  : 		case C_TYPE_LMOUSEDOWN:
; 485  : 		{
; 486  : 			// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 487  : 			if(m_pSelectedItem)

	cmp	DWORD PTR _m_pSelectedItem, 0
	je	SHORT $LN3@OnSelchang

; 488  : 			{
; 489  : 				m_pSelectedItem->SetState(static_cast<short>(control->GetState() & ~1));

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	and	ecx, -2					; fffffffeH
	push	ecx
	mov	edx, DWORD PTR _m_pSelectedItem
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 490  : 				m_pSelectedItem->Refresh();

	mov	eax, DWORD PTR _m_pSelectedItem
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@OnSelchang:

; 491  : 			}
; 492  : 
; 493  : 			m_pSelectedItem = (C_ServerItem *) control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _m_pSelectedItem, ecx

; 494  : 			m_pSelectedItem->SetState(static_cast<short>(control->GetState()|1));

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	or	eax, 1
	push	eax
	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 495  : 			m_pSelectedItem->Refresh();

	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _m_pSelectedItem
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 496  : 
; 497  : 			// UI_Leave(Leave);
; 498  : 			break;

	jmp	SHORT $LN7@OnSelchang
$LN2@OnSelchang:

; 499  : 		}
; 500  : 
; 501  : 		case C_TYPE_LMOUSEDBLCLK:
; 502  : 		{
; 503  : 			OnClickedPlay(n, C_TYPE_LMOUSEUP, control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	?OnClickedPlay@@YAXJFPAVC_Base@@@Z	; OnClickedPlay
	add	esp, 12					; 0000000cH
$LN7@OnSelchang:

; 504  : 			break;
; 505  : 		}
; 506  : 
; 507  : 		case C_TYPE_RMOUSEDOWN:
; 508  : 		{
; 509  : 			// Context menu
; 510  : 			break;
; 511  : 		}
; 512  : 	}
; 513  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnSelchangeServerList@@YAXJFPAVC_Base@@@Z ENDP		; OnSelchangeServerList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedSort_Location@@YAXJFPAVC_Base@@@Z PROC	; OnClickedSort_Location

; 465  : {

	push	ebp
	mov	ebp, esp

; 466  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedS

; 467  : 		return;

	jmp	SHORT $LN2@OnClickedS
$LN1@OnClickedS:

; 468  : 
; 469  : 	// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 470  : 
; 471  : 	m_pListServers->SetSortCallback(ServerListSortCB_Location);

	push	OFFSET ?ServerListSortCB_Location@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Location
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 472  : 	m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 473  : 	m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 474  : 	control->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@OnClickedS:

; 475  : 
; 476  : 	// UI_Leave(Leave);
; 477  : }

	pop	ebp
	ret	0
?OnClickedSort_Location@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedSort_Location
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedSort_Players@@YAXJFPAVC_Base@@@Z PROC		; OnClickedSort_Players

; 450  : {

	push	ebp
	mov	ebp, esp

; 451  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedS

; 452  : 		return;

	jmp	SHORT $LN2@OnClickedS
$LN1@OnClickedS:

; 453  : 
; 454  : 	// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 455  : 
; 456  : 	m_pListServers->SetSortCallback(ServerListSortCB_Players);

	push	OFFSET ?ServerListSortCB_Players@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Players
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 457  : 	m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 458  : 	m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 459  : 	control->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@OnClickedS:

; 460  : 
; 461  : 	// UI_Leave(Leave);
; 462  : }

	pop	ebp
	ret	0
?OnClickedSort_Players@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedSort_Players
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedSort_Mode@@YAXJFPAVC_Base@@@Z PROC		; OnClickedSort_Mode

; 435  : {

	push	ebp
	mov	ebp, esp

; 436  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedS

; 437  : 		return;

	jmp	SHORT $LN2@OnClickedS
$LN1@OnClickedS:

; 438  : 
; 439  : 	// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 440  : 
; 441  : 	m_pListServers->SetSortCallback(ServerListSortCB_Mode);

	push	OFFSET ?ServerListSortCB_Mode@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Mode
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 442  : 	m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 443  : 	m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 444  : 	control->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@OnClickedS:

; 445  : 
; 446  : 	// UI_Leave(Leave);
; 447  : }

	pop	ebp
	ret	0
?OnClickedSort_Mode@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedSort_Mode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedSort_Ping@@YAXJFPAVC_Base@@@Z PROC		; OnClickedSort_Ping

; 420  : {

	push	ebp
	mov	ebp, esp

; 421  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedS

; 422  : 		return;

	jmp	SHORT $LN2@OnClickedS
$LN1@OnClickedS:

; 423  : 
; 424  : 	// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 425  : 
; 426  : 	m_pListServers->SetSortCallback(ServerListSortCB_Ping);

	push	OFFSET ?ServerListSortCB_Ping@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Ping
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 427  : 	m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 428  : 	m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 429  : 	control->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@OnClickedS:

; 430  : 
; 431  : 	// UI_Leave(Leave);
; 432  : }

	pop	ebp
	ret	0
?OnClickedSort_Ping@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedSort_Ping
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedSort_ServerName@@YAXJFPAVC_Base@@@Z PROC	; OnClickedSort_ServerName

; 408  : {

	push	ebp
	mov	ebp, esp

; 409  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedS

; 410  : 		return;

	jmp	SHORT $LN2@OnClickedS
$LN1@OnClickedS:

; 411  : 
; 412  : 	// F4CSECTIONHANDLE *Leave = UI_Enter(control->Parent_);
; 413  : 	m_pListServers->SetSortCallback(ServerListSortCB_Name);

	push	OFFSET ?ServerListSortCB_Name@@YAHPAVTREELIST@@0@Z ; ServerListSortCB_Name
	mov	ecx, DWORD PTR _m_pListServers
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 414  : 	m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 415  : 	m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 416  : 	control->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@OnClickedS:

; 417  : }

	pop	ebp
	ret	0
?OnClickedSort_ServerName@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedSort_ServerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_Populated@@YAXJFPAVC_Base@@@Z PROC	; OnClickedFilter_Populated

; 400  : {

	push	ebp
	mov	ebp, esp

; 401  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 402  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 403  : 
; 404  : 	SetFilterMode(FILTER_MODE_POPULATED);

	push	4
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 405  : }

	pop	ebp
	ret	0
?OnClickedFilter_Populated@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedFilter_Populated
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_Favorites@@YAXJFPAVC_Base@@@Z PROC	; OnClickedFilter_Favorites

; 392  : {

	push	ebp
	mov	ebp, esp

; 393  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 394  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 395  : 
; 396  : 	SetFilterMode(FILTER_MODE_FAVORITES);

	push	5
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 397  : }

	pop	ebp
	ret	0
?OnClickedFilter_Favorites@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedFilter_Favorites
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_Dogfight@@YAXJFPAVC_Base@@@Z PROC	; OnClickedFilter_Dogfight

; 384  : {

	push	ebp
	mov	ebp, esp

; 385  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 386  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 387  : 
; 388  : 	SetFilterMode(FILTER_MODE_DOGFIGHT);

	push	3
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 389  : }

	pop	ebp
	ret	0
?OnClickedFilter_Dogfight@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedFilter_Dogfight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_TE@@YAXJFPAVC_Base@@@Z PROC		; OnClickedFilter_TE

; 376  : {

	push	ebp
	mov	ebp, esp

; 377  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 378  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 379  : 
; 380  : 	SetFilterMode(FILTER_MODE_TE);

	push	2
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 381  : }

	pop	ebp
	ret	0
?OnClickedFilter_TE@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedFilter_TE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_Campaign@@YAXJFPAVC_Base@@@Z PROC	; OnClickedFilter_Campaign

; 368  : {

	push	ebp
	mov	ebp, esp

; 369  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 370  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 371  : 
; 372  : 	SetFilterMode(FILTER_MODE_CAMPAIGN);

	push	1
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 373  : }

	pop	ebp
	ret	0
?OnClickedFilter_Campaign@@YAXJFPAVC_Base@@@Z ENDP	; OnClickedFilter_Campaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedFilter_All@@YAXJFPAVC_Base@@@Z PROC		; OnClickedFilter_All

; 360  : {

	push	ebp
	mov	ebp, esp

; 361  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedF

; 362  : 		return;

	jmp	SHORT $LN2@OnClickedF
$LN1@OnClickedF:

; 363  : 
; 364  : 	SetFilterMode(FILTER_MODE_ALL);

	push	0
	call	?SetFilterMode@@YAXW4_FILTER_MODE@@@Z	; SetFilterMode
	add	esp, 4
$LN2@OnClickedF:

; 365  : }

	pop	ebp
	ret	0
?OnClickedFilter_All@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedFilter_All
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_wndClose$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedPlay@@YAXJFPAVC_Base@@@Z PROC			; OnClickedPlay

; 341  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 342  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@OnClickedP

; 343  : 		return;

	jmp	SHORT $LN7@OnClickedP
$LN6@OnClickedP:

; 344  : 
; 345  : 	if(!m_pSelectedItem || m_bConnectPending)

	cmp	DWORD PTR _m_pSelectedItem, 0
	je	SHORT $LN4@OnClickedP
	movzx	ecx, BYTE PTR _m_bConnectPending
	test	ecx, ecx
	je	SHORT $LN5@OnClickedP
$LN4@OnClickedP:

; 346  : 		return;

	jmp	SHORT $LN7@OnClickedP
$LN5@OnClickedP:

; 347  : 
; 348  : 	C_Base *wndClose = control->GetParent()->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _wndClose$[ebp], eax

; 349  : 	if(wndClose)

	cmp	DWORD PTR _wndClose$[ebp], 0
	je	SHORT $LN3@OnClickedP

; 350  : 	LocalCloseWindowCB(wndClose->GetID(), hittype, wndClose);

	mov	edx, DWORD PTR _wndClose$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wndClose$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?LocalCloseWindowCB@@YAXJFPAVC_Base@@@Z	; LocalCloseWindowCB
	add	esp, 12					; 0000000cH
$LN3@OnClickedP:

; 351  : 
; 352  : 	if(m_bCloseWindowPending)

	movzx	ecx, BYTE PTR _m_bCloseWindowPending
	test	ecx, ecx
	je	SHORT $LN2@OnClickedP

; 353  : 		m_bConnectPending = true;

	mov	BYTE PTR _m_bConnectPending, 1

; 354  : 
; 355  : 	else

	jmp	SHORT $LN7@OnClickedP
$LN2@OnClickedP:

; 356  : 		Phone_Connect_CB((long) m_pSelectedItem->GetIP(), hittype, control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_pSelectedItem
	call	?GetIP@C_ServerItem@@QAEKXZ		; C_ServerItem::GetIP
	push	eax
	call	?Phone_Connect_CB@@YAXJFPAVC_Base@@@Z	; Phone_Connect_CB
	add	esp, 12					; 0000000cH
$LN7@OnClickedP:

; 357  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnClickedPlay@@YAXJFPAVC_Base@@@Z ENDP			; OnClickedPlay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedRefresh@@YAXJFPAVC_Base@@@Z PROC		; OnClickedRefresh

; 333  : {

	push	ebp
	mov	ebp, esp

; 334  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OnClickedR

; 335  : 		return;

	jmp	SHORT $LN2@OnClickedR
$LN1@OnClickedR:

; 336  : 
; 337  : 	Update();

	call	?Update@@YAXXZ				; Update
$LN2@OnClickedR:

; 338  : }

	pop	ebp
	ret	0
?OnClickedRefresh@@YAXJFPAVC_Base@@@Z ENDP		; OnClickedRefresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_wndClose$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OnClickedBack@@YAXJFPAVC_Base@@@Z PROC			; OnClickedBack

; 281  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 282  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@OnClickedB

; 283  : 		return;

	jmp	SHORT $LN3@OnClickedB
$LN2@OnClickedB:

; 284  : 
; 285  : 	C_Base *wndClose = control->GetParent()->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _wndClose$[ebp], eax

; 286  : 	if(wndClose)

	cmp	DWORD PTR _wndClose$[ebp], 0
	je	SHORT $LN3@OnClickedB

; 287  : 		LocalCloseWindowCB(wndClose->GetID(), hittype, wndClose);

	mov	ecx, DWORD PTR _wndClose$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	ecx, DWORD PTR _wndClose$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?LocalCloseWindowCB@@YAXJFPAVC_Base@@@Z	; LocalCloseWindowCB
	add	esp, 12					; 0000000cH
$LN3@OnClickedB:

; 288  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnClickedBack@@YAXJFPAVC_Base@@@Z ENDP			; OnClickedBack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_wndClose$1 = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LocalCloseWindowCB@@YAXJFPAVC_Base@@@Z PROC		; LocalCloseWindowCB

; 258  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 259  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@LocalClose

; 260  : 		return;

	jmp	$LN6@LocalClose
$LN5@LocalClose:

; 261  : 
; 262  : 	if(m_bCloseWindowPending)

	movzx	ecx, BYTE PTR _m_bCloseWindowPending
	test	ecx, ecx
	je	SHORT $LN4@LocalClose

; 263  : 		return;

	jmp	SHORT $LN6@LocalClose
$LN4@LocalClose:

; 264  : 
; 265  : 	if(m_pUpdater && m_pUpdater->IsUpdating())

	cmp	DWORD PTR _m_pUpdater, 0
	je	SHORT $LN3@LocalClose
	mov	ecx, DWORD PTR _m_pUpdater
	call	?IsUpdating@CGNetUpdater@@QAE_NXZ	; CGNetUpdater::IsUpdating
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@LocalClose

; 266  : 	{
; 267  : 		m_bCloseWindowPending = true;

	mov	BYTE PTR _m_bCloseWindowPending, 1

; 268  : 		m_pUpdater->CancelUpdate();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?CancelUpdate@CGNetUpdater@@QAEXXZ	; CGNetUpdater::CancelUpdate

; 269  : 		UpdateStatus("Aborting ...");

	push	OFFSET ??_C@_0N@HBACIAED@Aborting?5?4?4?4?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4

; 270  : 	}
; 271  : 
; 272  : 	else

	jmp	SHORT $LN6@LocalClose
$LN3@LocalClose:

; 273  : 	{
; 274  : 		C_Base *wndClose = control->GetParent()->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _wndClose$1[ebp], eax

; 275  : 		if(wndClose)

	cmp	DWORD PTR _wndClose$1[ebp], 0
	je	SHORT $LN6@LocalClose

; 276  : 			CloseWindowCB(wndClose->GetID(), hittype, wndClose);

	mov	eax, DWORD PTR _wndClose$1[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wndClose$1[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN6@LocalClose:

; 277  : 	}
; 278  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalCloseWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; LocalCloseWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_item$ = 8						; size = 4
?OnDeleteItemServerList@@YAXPAVTREELIST@@@Z PROC	; OnDeleteItemServerList

; 252  : {

	push	ebp
	mov	ebp, esp

; 253  : 	if(item->Item_ == m_pSelectedItem)

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _m_pSelectedItem
	jne	SHORT $LN2@OnDeleteIt

; 254  : 		m_pSelectedItem = NULL;

	mov	DWORD PTR _m_pSelectedItem, 0
$LN2@OnDeleteIt:

; 255  : }

	pop	ebp
	ret	0
?OnDeleteItemServerList@@YAXPAVTREELIST@@@Z ENDP	; OnDeleteItemServerList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pItem1$ = -12						; size = 4
_pItem2$ = -8						; size = 4
tv79 = -4						; size = 4
__pItem1$ = 8						; size = 4
__pItem2$ = 12						; size = 4
?ServerListSortCB_Location@@YAHPAVTREELIST@@0@Z PROC	; ServerListSortCB_Location

; 244  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 245  : 	C_ServerItem *pItem1 = (C_ServerItem *) _pItem1->Item_;

	mov	eax, DWORD PTR __pItem1$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _pItem1$[ebp], ecx

; 246  : 	C_ServerItem *pItem2 = (C_ServerItem *) _pItem2->Item_;

	mov	edx, DWORD PTR __pItem2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pItem2$[ebp], eax

; 247  : 
; 248  : 	return pItem1->CompareText(pItem2, 4) >= 0;

	push	4
	mov	ecx, DWORD PTR _pItem2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pItem1$[ebp]
	call	?CompareText@C_ServerItem@@QAEHPAV1@H@Z	; C_ServerItem::CompareText
	test	eax, eax
	jl	SHORT $LN3@ServerList
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN4@ServerList
$LN3@ServerList:
	mov	DWORD PTR tv79[ebp], 0
$LN4@ServerList:
	mov	eax, DWORD PTR tv79[ebp]

; 249  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerListSortCB_Location@@YAHPAVTREELIST@@0@Z ENDP	; ServerListSortCB_Location
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pItem1$ = -8						; size = 4
_pItem2$ = -4						; size = 4
__pItem1$ = 8						; size = 4
__pItem2$ = 12						; size = 4
?ServerListSortCB_Players@@YAHPAVTREELIST@@0@Z PROC	; ServerListSortCB_Players

; 236  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 237  : 	C_ServerItem *pItem1 = (C_ServerItem *) _pItem1->Item_;

	mov	eax, DWORD PTR __pItem1$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _pItem1$[ebp], ecx

; 238  : 	C_ServerItem *pItem2 = (C_ServerItem *) _pItem2->Item_;

	mov	edx, DWORD PTR __pItem2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pItem2$[ebp], eax

; 239  : 
; 240  : 	return pItem1->ComparePlayers(pItem2);

	mov	ecx, DWORD PTR _pItem2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pItem1$[ebp]
	call	?ComparePlayers@C_ServerItem@@QAEHPAV1@@Z ; C_ServerItem::ComparePlayers

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerListSortCB_Players@@YAHPAVTREELIST@@0@Z ENDP	; ServerListSortCB_Players
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pItem1$ = -12						; size = 4
_pItem2$ = -8						; size = 4
tv79 = -4						; size = 4
__pItem1$ = 8						; size = 4
__pItem2$ = 12						; size = 4
?ServerListSortCB_Mode@@YAHPAVTREELIST@@0@Z PROC	; ServerListSortCB_Mode

; 228  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 229  : 	C_ServerItem *pItem1 = (C_ServerItem *) _pItem1->Item_;

	mov	eax, DWORD PTR __pItem1$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _pItem1$[ebp], ecx

; 230  : 	C_ServerItem *pItem2 = (C_ServerItem *) _pItem2->Item_;

	mov	edx, DWORD PTR __pItem2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pItem2$[ebp], eax

; 231  : 
; 232  : 	return pItem1->CompareText(pItem2, 2) >= 0;

	push	2
	mov	ecx, DWORD PTR _pItem2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pItem1$[ebp]
	call	?CompareText@C_ServerItem@@QAEHPAV1@H@Z	; C_ServerItem::CompareText
	test	eax, eax
	jl	SHORT $LN3@ServerList
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN4@ServerList
$LN3@ServerList:
	mov	DWORD PTR tv79[ebp], 0
$LN4@ServerList:
	mov	eax, DWORD PTR tv79[ebp]

; 233  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerListSortCB_Mode@@YAHPAVTREELIST@@0@Z ENDP	; ServerListSortCB_Mode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pItem1$ = -8						; size = 4
_pItem2$ = -4						; size = 4
__pItem1$ = 8						; size = 4
__pItem2$ = 12						; size = 4
?ServerListSortCB_Ping@@YAHPAVTREELIST@@0@Z PROC	; ServerListSortCB_Ping

; 220  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 221  : 	C_ServerItem *pItem1 = (C_ServerItem *) _pItem1->Item_;

	mov	eax, DWORD PTR __pItem1$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _pItem1$[ebp], ecx

; 222  : 	C_ServerItem *pItem2 = (C_ServerItem *) _pItem2->Item_;

	mov	edx, DWORD PTR __pItem2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pItem2$[ebp], eax

; 223  : 
; 224  : 	return pItem1->ComparePing(pItem2);

	mov	ecx, DWORD PTR _pItem2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pItem1$[ebp]
	call	?ComparePing@C_ServerItem@@QAEHPAV1@@Z	; C_ServerItem::ComparePing

; 225  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerListSortCB_Ping@@YAHPAVTREELIST@@0@Z ENDP	; ServerListSortCB_Ping
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pItem1$ = -12						; size = 4
_pItem2$ = -8						; size = 4
tv79 = -4						; size = 4
__pItem1$ = 8						; size = 4
__pItem2$ = 12						; size = 4
?ServerListSortCB_Name@@YAHPAVTREELIST@@0@Z PROC	; ServerListSortCB_Name

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 213  : 	C_ServerItem *pItem1 = (C_ServerItem *) _pItem1->Item_;

	mov	eax, DWORD PTR __pItem1$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _pItem1$[ebp], ecx

; 214  : 	C_ServerItem *pItem2 = (C_ServerItem *) _pItem2->Item_;

	mov	edx, DWORD PTR __pItem2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pItem2$[ebp], eax

; 215  : 
; 216  : 	return pItem1->CompareText(pItem2, 0) >= 0;

	push	0
	mov	ecx, DWORD PTR _pItem2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pItem1$[ebp]
	call	?CompareText@C_ServerItem@@QAEHPAV1@H@Z	; C_ServerItem::CompareText
	test	eax, eax
	jl	SHORT $LN3@ServerList
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN4@ServerList
$LN3@ServerList:
	mov	DWORD PTR tv79[ebp], 0
$LN4@ServerList:
	mov	eax, DWORD PTR tv79[ebp]

; 217  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ServerListSortCB_Name@@YAHPAVTREELIST@@0@Z ENDP	; ServerListSortCB_Name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_nServerCount$ = -4					; size = 4
?UpdateServerStatus@@YAXXZ PROC				; UpdateServerStatus

; 946  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 947  : 	int nServerCount;
; 948  : 
; 949  : 	if(!m_pUpdater || m_pUpdater->m_nServerCount == 0)

	cmp	DWORD PTR _m_pUpdater, 0
	je	SHORT $LN2@UpdateServ
	mov	eax, DWORD PTR _m_pUpdater
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN3@UpdateServ
$LN2@UpdateServ:

; 950  : 		nServerCount = 1;

	mov	DWORD PTR _nServerCount$[ebp], 1

; 951  : 	else

	jmp	SHORT $LN1@UpdateServ
$LN3@UpdateServ:

; 952  : 		nServerCount = m_pUpdater->m_nServerCount;

	mov	ecx, DWORD PTR _m_pUpdater
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR _nServerCount$[ebp], edx
$LN1@UpdateServ:

; 953  : 
; 954  : 	UpdateStatus("%.1f%% (%d of %d Servers)", ((float) m_nUpdatedServers / ((float) nServerCount / 100.0f)), m_nUpdatedServers, nServerCount);

	mov	eax, DWORD PTR _nServerCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_nUpdatedServers
	push	ecx
	cvtsi2ss xmm0, DWORD PTR _m_nUpdatedServers
	cvtsi2ss xmm1, DWORD PTR _nServerCount$[ebp]
	divss	xmm1, DWORD PTR __real@42c80000
	divss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BK@EENOLLKJ@?$CF?41f?$CF?$CF?5?$CI?$CFd?5of?5?$CFd?5Servers?$CJ?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 20					; 00000014H

; 955  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateServerStatus@@YAXXZ ENDP				; UpdateServerStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_pArg$1 = -1032						; size = 4
_strMsg$2 = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_strFmt$ = 8						; size = 4
?UpdateStatus@@YAXPADZZ PROC				; UpdateStatus

; 930  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 931  : 	if(m_pWndStatus)

	cmp	DWORD PTR _m_pWndStatus, 0
	je	SHORT $LN2@UpdateStat

; 932  : 	{
; 933  : 		TCHAR strMsg[1024];
; 934  : 		va_list pArg;
; 935  : 
; 936  : 		va_start(pArg, strFmt);

	lea	eax, DWORD PTR _strFmt$[ebp+4]
	mov	DWORD PTR _pArg$1[ebp], eax

; 937  : 		vsprintf(strMsg, strFmt, pArg);

	mov	ecx, DWORD PTR _pArg$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _strFmt$[ebp]
	push	edx
	lea	eax, DWORD PTR _strMsg$2[ebp]
	push	eax
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 938  : 		va_end(pArg);

	mov	DWORD PTR _pArg$1[ebp], 0

; 939  : 
; 940  : 		m_pWndStatus->SetText(strMsg);

	lea	ecx, DWORD PTR _strMsg$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_pWndStatus
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _m_pWndStatus
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 941  : 		m_pWndStatus->Refresh();

	mov	eax, DWORD PTR _m_pWndStatus
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _m_pWndStatus
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@UpdateStat:

; 942  : 	}
; 943  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateStatus@@YAXPADZZ ENDP				; UpdateStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
tv131 = -8						; size = 4
_it$ = -4						; size = 4
?ClearServerList@@YAXXZ PROC				; ClearServerList

; 701  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 702  : 	GAMEARRAY::iterator it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >

; 703  : 	for(it = m_arrGames.begin(); it != m_arrGames.end(); it++)

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, OFFSET _m_arrGames
	call	?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN4@ClearServe
$LN3@ClearServe:
	push	0
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
$LN4@ClearServe:
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET _m_arrGames
	call	?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::end
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ClearServe

; 704  : 		if(*it)

	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@ClearServe

; 705  : 			(*it)->Release();

	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv131[ebp], edx
	mov	eax, DWORD PTR tv131[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv131[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
$LN1@ClearServe:

; 706  : 
; 707  : 	m_arrGames.clear();

	jmp	SHORT $LN3@ClearServe
$LN2@ClearServe:
	mov	ecx, OFFSET _m_arrGames
	call	?clear@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::clear

; 708  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearServerList@@YAXXZ ENDP				; ClearServerList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_eMode$ = 8						; size = 4
?SetFilterMode@@YAXW4_FILTER_MODE@@@Z PROC		; SetFilterMode

; 783  : {

	push	ebp
	mov	ebp, esp

; 784  : 	if(eMode == m_eFilterMode)

	mov	eax, DWORD PTR _eMode$[ebp]
	cmp	eax, DWORD PTR ?m_eFilterMode@@3W4_FILTER_MODE@@A ; m_eFilterMode
	jne	SHORT $LN1@SetFilterM

; 785  : 		return;

	jmp	SHORT $LN2@SetFilterM
$LN1@SetFilterM:

; 786  : 
; 787  : 	m_eFilterMode = eMode;

	mov	ecx, DWORD PTR _eMode$[ebp]
	mov	DWORD PTR ?m_eFilterMode@@3W4_FILTER_MODE@@A, ecx ; m_eFilterMode

; 788  : 	UpdateDisplay();

	call	?UpdateDisplay@@YAXXZ			; UpdateDisplay
$LN2@SetFilterM:

; 789  : }

	pop	ebp
	ret	0
?SetFilterMode@@YAXW4_FILTER_MODE@@@Z ENDP		; SetFilterMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -72						; size = 16
$T3 = -56						; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
_p$6 = -44						; size = 4
tv168 = -40						; size = 4
tv167 = -36						; size = 4
tv165 = -32						; size = 4
tv164 = -28						; size = 4
_it$7 = -24						; size = 4
tv169 = -20						; size = 2
tv166 = -18						; size = 1
tv70 = -17						; size = 1
__$EHRec$ = -16						; size = 16
?UpdateDisplay@@YAXXZ PROC				; UpdateDisplay

; 831  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateDisplay@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 832  : 	try
; 833  : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 834  : 		// Delete all items
; 835  : 		m_pListServers->DeleteBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR tv164[ebp], eax
	mov	eax, DWORD PTR tv164[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 836  : 
; 837  : 		GAMEARRAY::iterator it;

	lea	ecx, DWORD PTR _it$7[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >

; 838  : 		GNETCORELib::IGamePtr p;

	lea	ecx, DWORD PTR _p$6[ebp]
	call	??0?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 839  : 
; 840  : 		for(it = m_arrGames.begin(); it != m_arrGames.end(); it++)

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, OFFSET _m_arrGames
	call	?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _it$7[ebp], edx
	jmp	SHORT $LN4@UpdateDisp
$LN3@UpdateDisp:
	push	0
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator++
$LN4@UpdateDisp:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, OFFSET _m_arrGames
	call	?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ; std::vector<IGame *,std::allocator<IGame *> >::end
	push	eax
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator!=
	mov	BYTE PTR tv70[ebp], al
	movzx	edx, BYTE PTR tv70[ebp]
	test	edx, edx
	je	SHORT $LN2@UpdateDisp

; 841  : 			if(FilterGame(*it))

	lea	ecx, DWORD PTR _it$7[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
	mov	DWORD PTR tv165[ebp], eax
	mov	eax, DWORD PTR tv165[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?FilterGame@@YA_NPAUIGame@@@Z		; FilterGame
	add	esp, 4
	mov	BYTE PTR tv166[ebp], al
	movzx	edx, BYTE PTR tv166[ebp]
	test	edx, edx
	je	SHORT $LN1@UpdateDisp

; 842  : 				MakeServerItem(m_pListServers, *it);

	lea	ecx, DWORD PTR _it$7[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QBEAAPAUIGame@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::operator*
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _m_pListServers
	push	edx
	call	?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z ; MakeServerItem
	add	esp, 8
$LN1@UpdateDisp:

; 843  : 
; 844  : 		m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	jmp	SHORT $LN3@UpdateDisp
$LN2@UpdateDisp:
	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR tv168[ebp], eax
	mov	eax, DWORD PTR tv168[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 845  : 		m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 846  : 		m_pListServers->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	mov	WORD PTR tv169[ebp], ax
	movsx	ecx, WORD PTR tv169[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_pListServers
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 847  : 	}

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _p$6[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	jmp	SHORT $LN8@UpdateDisp
__catch$?UpdateDisplay@@YAXXZ$0:

; 848  : 
; 849  : 	catch(_com_error e)
; 850  : 	{
; 851  : 		MonoPrint("UpdateDisplay - _com_error 0x%X", e.Error());

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	push	eax
	push	OFFSET ??_C@_0CA@NINGCFFI@UpdateDisplay?5?9?5_com_error?50x?$CFX?$AA@
	call	_MonoPrint
	add	esp, 8

; 852  : 	}

	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN13@UpdateDisp
	ret	0
$LN8@UpdateDisp:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN6@UpdateDisp
$LN13@UpdateDisp:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN6@UpdateDisp:

; 853  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateDisplay@@YAXXZ$2:
	lea	ecx, DWORD PTR _p$6[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__ehhandler$?UpdateDisplay@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateDisplay@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateDisplay@@YAXXZ ENDP				; UpdateDisplay
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -80						; size = 16
$T3 = -64						; size = 16
tv162 = -48						; size = 4
tv161 = -44						; size = 4
$T4 = -40						; size = 4
tv159 = -36						; size = 4
tv156 = -32						; size = 4
tv72 = -28						; size = 4
$T5 = -24						; size = 4
tv160 = -17						; size = 1
__$EHRec$ = -16						; size = 16
?Update@@YAXXZ PROC					; Update

; 711  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Update@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 712  : 	try
; 713  : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 714  : 		if(!m_pUpdater)

	cmp	DWORD PTR _m_pUpdater, 0
	jne	SHORT $LN4@Update

; 715  : 		{
; 716  : 			m_pUpdater = new GNetUpdater;

	push	88					; 00000058H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv156[ebp], eax
	mov	eax, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Update
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0GNetUpdater@@QAE@XZ			; GNetUpdater::GNetUpdater
	mov	DWORD PTR tv159[ebp], eax
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	jmp	SHORT $LN9@Update
$LN8@Update:
	mov	DWORD PTR tv72[ebp], 0
$LN9@Update:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _m_pUpdater, eax

; 717  : 			if(!m_pUpdater)

	cmp	DWORD PTR _m_pUpdater, 0
	jne	SHORT $LN3@Update

; 718  : 				throw _com_error(E_OUTOFMEMORY);

	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Update:

; 719  : 
; 720  : 			m_pUpdater->Init();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?Init@CGNetUpdater@@QAEXXZ		; CGNetUpdater::Init
$LN4@Update:

; 721  : 		}
; 722  : 
; 723  : 		if(m_pUpdater->IsUpdating())

	mov	ecx, DWORD PTR _m_pUpdater
	call	?IsUpdating@CGNetUpdater@@QAE_NXZ	; CGNetUpdater::IsUpdating
	mov	BYTE PTR tv160[ebp], al
	movzx	edx, BYTE PTR tv160[ebp]
	test	edx, edx
	je	SHORT $LN2@Update

; 724  : 		{
; 725  : 			m_pUpdater->CancelUpdate();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?CancelUpdate@CGNetUpdater@@QAEXXZ	; CGNetUpdater::CancelUpdate

; 726  : 			UpdateStatus("Aborting ...");

	push	OFFSET ??_C@_0N@HBACIAED@Aborting?5?4?4?4?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4

; 727  : 		}
; 728  : 
; 729  : 		else

	jmp	SHORT $LN1@Update
$LN2@Update:

; 730  : 		{
; 731  : 			m_pListServers->DeleteBranch(m_pListServers->GetRoot());		// Delete all items

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR tv161[ebp], eax
	mov	eax, DWORD PTR tv161[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_pListServers
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 732  : 			ClearServerList();

	call	?ClearServerList@@YAXXZ			; ClearServerList

; 733  : 
; 734  : #if 0
; 735  : 			// Adjust maximum number of concurent server quries according to phonebook bandwidth settings
; 736  : 			C_Window *pWin = gMainHandler->FindWindow(PB_WIN);
; 737  : 			if(pWin)
; 738  : 			{
; 739  : 				C_ListBox *pListBox = (C_ListBox *) pWin->FindControl(SET_JETNET_BANDWIDTH);
; 740  : 				if(pListBox)
; 741  : 				{
; 742  : 					static int Bandwidth2MaxConcurentQueries[] =
; 743  : 					{
; 744  : 						4, // INVALID
; 745  : 						4, // F4_BANDWIDTH_14
; 746  : 						4, // F4_BANDWIDTH_28
; 747  : 						8, // F4_BANDWIDTH_33
; 748  : 						15, // F4_BANDWIDTH_56Modem
; 749  : 						15, // F4_BANDWIDTH_56ISDN
; 750  : 						20, // F4_BANDWIDTH_112
; 751  : 						20, // F4_BANDWIDTH_256
; 752  : 						25 // F4_BANDWIDTH_T1
; 753  : 					};
; 754  : 
; 755  : 					int nBandwidth = static_cast<uchar>(pListBox->GetTextID());
; 756  : 
; 757  : 					if(nBandwidth < 0)
; 758  : 						nBandwidth = 1;
; 759  : 					else if(nBandwidth > F4_BANDWIDTH_T1)
; 760  : 						nBandwidth = 1;
; 761  : 
; 762  : 					m_pUpdater->m_pMasterServer->PutMaxConcurrentHostQueries(Bandwidth2MaxConcurentQueries[nBandwidth]);
; 763  : 				}
; 764  : 			}
; 765  : #else
; 766  : 			m_pUpdater->m_pMasterServer->PutMaxConcurrentHostQueries(8);

	mov	ecx, DWORD PTR _m_pUpdater
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv162[ebp], eax
	push	8
	mov	ecx, DWORD PTR tv162[ebp]
	call	?PutMaxConcurrentHostQueries@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IRemoteMasterServer::PutMaxConcurrentHostQueries

; 767  : #endif
; 768  : 
; 769  : 			m_nUpdatedServers = 0;

	mov	DWORD PTR _m_nUpdatedServers, 0

; 770  : 			m_bConnectedToMaster = false;

	mov	BYTE PTR _m_bConnectedToMaster, 0

; 771  : 
; 772  : 			m_pUpdater->Update();

	mov	ecx, DWORD PTR _m_pUpdater
	call	?Update@CGNetUpdater@@QAEXXZ		; CGNetUpdater::Update
$LN1@Update:

; 773  : 		}
; 774  : 	}

	jmp	SHORT $LN10@Update
__catch$?Update@@YAXXZ$0:

; 775  : 
; 776  : 	catch(_com_error e)
; 777  : 	{
; 778  : 		MonoPrint("Update - _com_error 0x%X", e.Error());

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	push	eax
	push	OFFSET ??_C@_0BJ@DFJKLFBN@Update?5?9?5_com_error?50x?$CFX?$AA@
	call	_MonoPrint
	add	esp, 8

; 779  : 	}

	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN15@Update
	ret	0
$LN10@Update:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN7@Update
$LN15@Update:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN7@Update:

; 780  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Update@@YAXXZ$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Update@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Update@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update@@YAXXZ ENDP					; Update
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -116						; size = 16
$T3 = -100						; size = 4
tv242 = -96						; size = 4
$T4 = -92						; size = 4
tv260 = -88						; size = 4
tv259 = -84						; size = 4
tv258 = -80						; size = 4
tv257 = -76						; size = 4
tv256 = -72						; size = 4
tv252 = -68						; size = 4
tv251 = -64						; size = 4
$T5 = -60						; size = 4
tv250 = -56						; size = 4
tv247 = -52						; size = 4
tv73 = -48						; size = 4
$T6 = -44						; size = 4
_pTreeItem$ = -40					; size = 4
$T7 = -36						; size = 4
_pWindow$ = -32						; size = 4
_pServerItem$ = -28					; size = 4
tv254 = -22						; size = 2
tv255 = -20						; size = 2
tv253 = -18						; size = 2
__$EHRec$ = -16						; size = 16
_pTree$ = 8						; size = 4
_p$ = 12						; size = 4
?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z PROC ; MakeServerItem

; 656  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 657  : 	C_ServerItem *pServerItem;
; 658  : 	C_Window *pWindow;
; 659  : 	TREELIST *pTreeItem;
; 660  : 
; 661  : 	if(!pTree || !p)

	cmp	DWORD PTR _pTree$[ebp], 0
	je	SHORT $LN5@MakeServer
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@MakeServer
$LN5@MakeServer:

; 662  : 		return NULL;

	xor	eax, eax
	jmp	$LN7@MakeServer
$LN6@MakeServer:

; 663  : 
; 664  : 	try
; 665  : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 666  : 		pServerItem=new C_ServerItem;

	push	164					; 000000a4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv247[ebp], eax
	mov	eax, DWORD PTR tv247[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN9@MakeServer
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_ServerItem@@QAE@XZ			; C_ServerItem::C_ServerItem
	mov	DWORD PTR tv250[ebp], eax
	mov	ecx, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN10@MakeServer
$LN9@MakeServer:
	mov	DWORD PTR tv73[ebp], 0
$LN10@MakeServer:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _pServerItem$[ebp], eax

; 667  : 		if(!pServerItem)

	cmp	DWORD PTR _pServerItem$[ebp], 0
	jne	SHORT $LN3@MakeServer

; 668  : 			return(NULL);

	xor	eax, eax
	jmp	$LN7@MakeServer
$LN3@MakeServer:

; 669  : 
; 670  : 		pWindow=pTree->GetParent();

	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	DWORD PTR tv251[ebp], eax
	mov	ecx, DWORD PTR tv251[ebp]
	mov	DWORD PTR _pWindow$[ebp], ecx

; 671  : 		if(!pWindow)

	cmp	DWORD PTR _pWindow$[ebp], 0
	jne	SHORT $LN2@MakeServer

; 672  : 			return(NULL);

	xor	eax, eax
	jmp	$LN7@MakeServer
$LN2@MakeServer:

; 673  : 
; 674  : 		pServerItem->SetFont(pTree->GetFont());

	mov	edx, DWORD PTR _pTree$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pTree$[ebp]
	mov	edx, DWORD PTR [eax+124]
	call	edx
	mov	DWORD PTR tv252[ebp], eax
	mov	eax, DWORD PTR tv252[ebp]
	push	eax
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 675  : 		pServerItem->SetClient(pTree->GetClient());

	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	mov	WORD PTR tv253[ebp], ax
	movzx	ecx, WORD PTR tv253[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 676  : 		pServerItem->SetW(pWindow->ClientArea_[pTree->GetClient()].right - pWindow->ClientArea_[pTree->GetClient()].left);

	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	mov	WORD PTR tv254[ebp], ax
	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	mov	WORD PTR tv255[ebp], ax
	movsx	edx, WORD PTR tv255[ebp]
	shl	edx, 4
	movsx	eax, WORD PTR tv254[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pWindow$[ebp]
	mov	esi, DWORD PTR _pWindow$[ebp]
	mov	eax, DWORD PTR [ecx+eax+176]
	sub	eax, DWORD PTR [esi+edx+168]
	push	eax
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax

; 677  : 		pServerItem->SetH(gFontList->GetHeight(pTree->GetFont()));

	mov	ecx, DWORD PTR _pTree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pTree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	mov	DWORD PTR tv256[ebp], eax
	mov	ecx, DWORD PTR tv256[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	DWORD PTR tv257[ebp], eax
	mov	edx, DWORD PTR tv257[ebp]
	push	edx
	mov	eax, DWORD PTR _pServerItem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 678  : 		pServerItem->Setup(p, pTree);

	mov	ecx, DWORD PTR _pTree$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	call	?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z ; C_ServerItem::Setup

; 679  : 		pServerItem->SetCallback(OnSelchangeServerList);

	push	OFFSET ?OnSelchangeServerList@@YAXJFPAVC_Base@@@Z ; OnSelchangeServerList
	mov	eax, DWORD PTR _pServerItem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 680  : 
; 681  : 		pTreeItem=pTree->CreateItem(-1, C_TYPE_ITEM, pServerItem);

	mov	ecx, DWORD PTR _pServerItem$[ebp]
	push	ecx
	push	50					; 00000032H
	push	-1
	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR tv258[ebp], eax
	mov	edx, DWORD PTR tv258[ebp]
	mov	DWORD PTR _pTreeItem$[ebp], edx

; 682  : 		pServerItem->SetOwner(pTreeItem);

	mov	eax, DWORD PTR _pTreeItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	call	?SetOwner@C_ServerItem@@QAEXPAVTREELIST@@@Z ; C_ServerItem::SetOwner

; 683  : 		
; 684  : 		if(pTree->AddItem(pTree->GetRoot(), pTreeItem))

	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR tv259[ebp], eax
	mov	ecx, DWORD PTR _pTreeItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv259[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
	mov	DWORD PTR tv260[ebp], eax
	cmp	DWORD PTR tv260[ebp], 0
	je	SHORT $LN1@MakeServer

; 685  : 			return pServerItem;

	mov	eax, DWORD PTR _pServerItem$[ebp]
	jmp	$LN7@MakeServer
$LN1@MakeServer:

; 686  : 	}

	jmp	SHORT $LN13@MakeServer
__catch$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$0:

; 687  : 
; 688  : 	catch(_com_error e)
; 689  : 	{
; 690  : 		MonoPrint("MakeServerItem - _com_error 0x%X", e.Error());

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	push	eax
	push	OFFSET ??_C@_0CB@FJNCFHFD@MakeServerItem?5?9?5_com_error?50x?$CFX@
	call	_MonoPrint
	add	esp, 8

; 691  : 	}

	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN18@MakeServer
	ret	0
$LN13@MakeServer:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$1
$LN18@MakeServer:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$1:

; 692  : 
; 693  : 	pServerItem->Cleanup();

	mov	eax, DWORD PTR _pServerItem$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax

; 694  : 	delete pServerItem;

	mov	ecx, DWORD PTR _pServerItem$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T7[ebp], edx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN11@MakeServer
	push	1
	mov	eax, DWORD PTR $T7[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv242[ebp], eax
	jmp	SHORT $LN12@MakeServer
$LN11@MakeServer:
	mov	DWORD PTR tv242[ebp], 0
$LN12@MakeServer:

; 695  : 	delete pTreeItem;

	mov	ecx, DWORD PTR _pTreeItem$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 696  : 
; 697  : 	return NULL;

	xor	eax, eax
$LN7@MakeServer:

; 698  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z ENDP ; MakeServerItem
; Function compile flags: /Odtp
;	COMDAT ??__Fm_arrGames@@YAXXZ
text$yd	SEGMENT
??__Fm_arrGames@@YAXXZ PROC				; `dynamic atexit destructor for 'm_arrGames'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _m_arrGames
	call	??1?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::vector<IGame *,std::allocator<IGame *> >::~vector<IGame *,std::allocator<IGame *> >
	pop	ebp
	ret	0
??__Fm_arrGames@@YAXXZ ENDP				; `dynamic atexit destructor for 'm_arrGames''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ??__Em_arrGames@@YAXXZ
text$yc	SEGMENT
??__Em_arrGames@@YAXXZ PROC				; `dynamic initializer for 'm_arrGames'', COMDAT

; 188  : static GAMEARRAY m_arrGames;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _m_arrGames
	call	??0?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::vector<IGame *,std::allocator<IGame *> >::vector<IGame *,std::allocator<IGame *> >
	push	OFFSET ??__Fm_arrGames@@YAXXZ		; `dynamic atexit destructor for 'm_arrGames''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Em_arrGames@@YAXXZ ENDP				; `dynamic initializer for 'm_arrGames''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1693 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1694 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Xlen, COMDAT
; _this$ = ecx

; 1666 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1667 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1668 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Tidy, COMDAT
; _this$ = ecx

; 1535 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1536 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1537 : 			{	// something to free, destroy and deallocate it
; 1538 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1539 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy

; 1540 : 			this->_Getal().deallocate(this->_Myfirst,
; 1541 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate

; 1542 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1543 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1544 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1545 : 			}
; 1546 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Reserve, COMDAT
; _this$ = ecx

; 1525 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1526 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1527 : 			{	// need more room, try to get it
; 1528 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1529 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Xlen
$LN1@Reserve:

; 1530 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEII@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Reallocate
$LN4@Reserve:

; 1531 : 			}
; 1532 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Reallocate, COMDAT
; _this$ = ecx

; 1500 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1501 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1502 : 
; 1503 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1504 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUIGame@@@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEPAPAUIGame@@PAPAU2@00@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Umove<IGame * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$0:

; 1505 : 		_CATCH_ALL
; 1506 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate

; 1507 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1508 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z$1:

; 1509 : 
; 1510 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1511 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1512 : 			{	// destroy and deallocate old array
; 1513 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy

; 1514 : 			this->_Getal().deallocate(this->_Myfirst,
; 1515 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate
$LN1@Reallocate:

; 1516 : 			}
; 1517 : 
; 1518 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1519 : 		this->_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1520 : 		this->_Mylast = _Ptr + _Size;

	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1521 : 		this->_Myfirst = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@Reallocate:

; 1522 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Reallocate
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBE_NPBQAUIGame@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBE_NPBQAUIGame@@@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Inside, COMDAT
; _this$ = ecx

; 1495 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1496 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]

; 1497 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBE_NPBQAUIGame@@@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEII@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1484 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1485 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1486 : 
; 1487 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1488 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::vector<IGame *,std::allocator<IGame *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1489 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1490 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1491 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1492 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEII@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy, COMDAT
; _this$ = ecx

; 1478 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1479 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal

; 1480 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@@std@@YAXPAPAUIGame@@0AAU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<IGame *> > >
	add	esp, 12					; 0000000cH

; 1481 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?clear@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::clear, COMDAT
; _this$ = ecx

; 1413 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1414 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1415 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Destroy

; 1416 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1417 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXABQAUIGame@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXABQAUIGame@@@Z PROC ; std::vector<IGame *,std::allocator<IGame *> >::push_back, COMDAT
; _this$ = ecx

; 1184 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z ; std::addressof<IGame * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBE_NPBQAUIGame@@@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back

; 1186 : 			{	// push back an element
; 1187 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAUIGame@@@std@@YAPBQAUIGame@@ABQAU1@@Z ; std::addressof<IGame * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax

; 1188 : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back

; 1189 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Reserve
$LN3@push_back:

; 1190 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Orphan_range

; 1191 : 			this->_Getal().construct(this->_Mylast,
; 1192 : 				this->_Myfirst[_Idx]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAUIGame@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * &>

; 1193 : 			++this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1194 : 			}
; 1195 : 		else

	jmp	SHORT $LN5@push_back
$LN4@push_back:

; 1196 : 			{	// push back a non-element
; 1197 : 			if (this->_Mylast == this->_Myend)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN1@push_back

; 1198 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXI@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Reserve
$LN1@push_back:

; 1199 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IBEXPAPAUIGame@@0@Z ; std::vector<IGame *,std::allocator<IGame *> >::_Orphan_range

; 1200 : 			this->_Getal().construct(this->_Mylast,
; 1201 : 				_Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAUIGame@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<IGame *> >::construct<IGame *,IGame * const &>

; 1202 : 			++this->_Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@push_back:

; 1203 : 			}
; 1204 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXABQAUIGame@@@Z ENDP ; std::vector<IGame *,std::allocator<IGame *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::max_size, COMDAT
; _this$ = ecx

; 1091 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<IGame *> >::max_size

; 1093 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::size, COMDAT
; _this$ = ecx

; 1086 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1087 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1088 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::end, COMDAT
; _this$ = ecx

; 991  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 992  : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 993  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::begin, COMDAT
; _this$ = ecx

; 981  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 982  : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@std@@QAE@PAPAUIGame@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<IGame *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 983  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@@2@XZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 971  : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 972  : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 973  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::capacity, COMDAT
; _this$ = ecx

; 966  : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 967  : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 968  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??1?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::~vector<IGame *,std::allocator<IGame *> >, COMDAT
; _this$ = ecx

; 899  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@IAEXXZ ; std::vector<IGame *,std::allocator<IGame *> >::_Tidy

; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::~vector<IGame *,std::allocator<IGame *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ PROC ; std::vector<IGame *,std::allocator<IGame *> >::vector<IGame *,std::allocator<IGame *> >, COMDAT
; _this$ = ecx

; 685  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@PAUIGame@@@std@@QAE@XZ	; std::allocator<IGame *>::allocator<IGame *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUIGame@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >

; 686  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ENDP ; std::vector<IGame *,std::allocator<IGame *> >::vector<IGame *,std::allocator<IGame *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal, COMDAT
; _this$ = ecx

; 646  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<IGame *> >::_Wrap_alloc<std::allocator<IGame *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 648  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUIGame@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUIGame@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >, COMDAT
; _this$ = ecx

; 593  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<IGame *> >::_Vector_val<std::_Simple_types<IGame *> >

; 594  : 		{	// construct allocator from _Al
; 595  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUIGame@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >::_Vector_alloc<0,std::_Vec_base_types<IGame *,std::allocator<IGame *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<IGame *> >::_Vector_val<std::_Simple_types<IGame *> >, COMDAT
; _this$ = ecx

; 484  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 485  : 		{	// initialize values
; 486  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 487  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 488  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAUIGame@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<IGame *> >::_Vector_val<std::_Simple_types<IGame *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAIABV?$allocator@PAUIGame@@@2@@Z ; std::allocator_traits<std::allocator<IGame *> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@I@Z ; std::allocator<IGame *>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEXPAPAUIGame@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEPAPAUIGame@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEPAPAUIGame@@I@Z PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAUIGame@@@std@@QAEPAPAUIGame@@I@Z ; std::allocator<IGame *>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAEPAPAUIGame@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<IGame *> >::_Wrap_alloc<std::allocator<IGame *> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAUIGame@@@std@@QAE@XZ	; std::allocator<IGame *>::allocator<IGame *>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAUIGame@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<IGame *> >::_Wrap_alloc<std::allocator<IGame *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAIABV?$allocator@PAUIGame@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAIABV?$allocator@PAUIGame@@@2@@Z PROC ; std::allocator_traits<std::allocator<IGame *> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAUIGame@@@std@@QBEIXZ ; std::allocator<IGame *>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAUIGame@@@std@@@std@@SAIABV?$allocator@PAUIGame@@@2@@Z ENDP ; std::allocator_traits<std::allocator<IGame *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@PAUIGame@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUIGame@@@std@@QBEIXZ PROC	; std::allocator<IGame *>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAUIGame@@@std@@QBEIXZ ENDP	; std::allocator<IGame *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?construct@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@ABQAU3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@ABQAU3@@Z PROC ; std::allocator<IGame *>::construct, COMDAT
; _this$ = ecx

; 605  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		::new ((void *)_Ptr) _Ty(_Val);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:

; 607  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@ABQAU3@@Z ENDP ; std::allocator<IGame *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAUIGame@@@std@@QAEPAPAUIGame@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUIGame@@@std@@QAEPAPAUIGame@@I@Z PROC ; std::allocator<IGame *>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAUIGame@@@std@@YAPAPAUIGame@@IPAPAU1@@Z ; std::_Allocate<IGame *>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUIGame@@@std@@QAEPAPAUIGame@@I@Z ENDP ; std::allocator<IGame *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@I@Z PROC ; std::allocator<IGame *>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUIGame@@@std@@QAEXPAPAUIGame@@I@Z ENDP ; std::allocator<IGame *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAUIGame@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUIGame@@@std@@QAE@XZ PROC		; std::allocator<IGame *>::allocator<IGame *>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAUIGame@@@std@@QAE@XZ ENDP		; std::allocator<IGame *>::allocator<IGame *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_ServerItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_ServerItem@@UAEPAXI@Z PROC			; C_ServerItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_ServerItem@@UAE@XZ			; C_ServerItem::~C_ServerItem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_ServerItem@@UAEPAXI@Z ENDP			; C_ServerItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIP@C_ServerItem@@QAEKXZ PROC			; C_ServerItem::GetIP
; _this$ = ecx

; 1222 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1223 : 	return m_dwIP;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]

; 1224 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetIP@C_ServerItem@@QAEKXZ ENDP			; C_ServerItem::GetIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?TrimString@C_ServerItem@@QAEHPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = -4						; size = 4
_str$ = 8						; size = 4
_nMaxPixelWidth$ = 12					; size = 4
?TrimString@C_ServerItem@@QAEHPADH@Z PROC		; C_ServerItem::TrimString, COMDAT
; _this$ = ecx

; 1071 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1072 : 	if(str == NULL)

	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN3@TrimString

; 1073 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@TrimString
$LN3@TrimString:

; 1074 : 
; 1075 : 	int nLength = strlen(str);

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _nLength$[ebp], eax
$LN2@TrimString:

; 1076 : 
; 1077 : 	while(nLength && gFontList->StrWidth(Font_, str, nLength) > nMaxPixelWidth)

	cmp	DWORD PTR _nLength$[ebp], 0
	je	SHORT $LN1@TrimString
	mov	ecx, DWORD PTR _nLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?StrWidth@C_Font@@QAEHJPADH@Z		; C_Font::StrWidth
	cmp	eax, DWORD PTR _nMaxPixelWidth$[ebp]
	jle	SHORT $LN1@TrimString

; 1078 : 		nLength--;

	mov	edx, DWORD PTR _nLength$[ebp]
	sub	edx, 1
	mov	DWORD PTR _nLength$[ebp], edx
	jmp	SHORT $LN2@TrimString
$LN1@TrimString:

; 1079 : 
; 1080 : 	return nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
$LN4@TrimString:

; 1081 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?TrimString@C_ServerItem@@QAEHPADH@Z ENDP		; C_ServerItem::TrimString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDefaultFlags@C_ServerItem@@QAEJXZ PROC		; C_ServerItem::GetDefaultFlags
; _this$ = ecx

; 1217 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1218 : 	return(DefaultFlags_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]

; 1219 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultFlags@C_ServerItem@@QAEJXZ ENDP		; C_ServerItem::GetDefaultFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetDefaultFlags@C_ServerItem@@QAEXXZ PROC		; C_ServerItem::SetDefaultFlags
; _this$ = ecx

; 1212 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1213 : 	SetFlags(DefaultFlags_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx

; 1214 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetDefaultFlags@C_ServerItem@@QAEXXZ ENDP		; C_ServerItem::SetDefaultFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFont@C_ServerItem@@UAEJXZ PROC			; C_ServerItem::GetFont
; _this$ = ecx

; 1207 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1208 : 	return(Font_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]

; 1209 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFont@C_ServerItem@@UAEJXZ ENDP			; C_ServerItem::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@C_ServerItem@@QAEPAVTREELIST@@XZ PROC		; C_ServerItem::GetOwner
; _this$ = ecx

; 1202 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1203 : 	return(Owner_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]

; 1204 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@C_ServerItem@@QAEPAVTREELIST@@XZ ENDP		; C_ServerItem::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?SetOwner@C_ServerItem@@QAEXPAVTREELIST@@@Z PROC	; C_ServerItem::SetOwner
; _this$ = ecx

; 1197 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 	Owner_=item;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+156], ecx

; 1199 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_ServerItem@@QAEXPAVTREELIST@@@Z ENDP	; C_ServerItem::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@C_ServerItem@@UAEFXZ PROC			; C_ServerItem::GetState
; _this$ = ecx

; 1192 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 	return(State_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+160]

; 1194 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@C_ServerItem@@UAEFXZ ENDP			; C_ServerItem::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetState@C_ServerItem@@UAEXF@Z PROC			; C_ServerItem::SetState
; _this$ = ecx

; 1187 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1188 : 	State_=static_cast<short>(state & 3);

	movsx	eax, WORD PTR _state$[ebp]
	and	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+160], ax

; 1189 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetState@C_ServerItem@@UAEXF@Z ENDP			; C_ServerItem::SetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@C_ServerItem@@QAEXPAU_iobuf@@@Z PROC		; C_ServerItem::Save
; _this$ = ecx

; 1183 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1184 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@C_ServerItem@@QAEXPAU_iobuf@@@Z ENDP		; C_ServerItem::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@C_ServerItem@@QAEXPAPAD@Z PROC			; C_ServerItem::Save
; _this$ = ecx

; 1179 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1180 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@C_ServerItem@@QAEXPAPAD@Z ENDP			; C_ServerItem::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?ComparePlayers@C_ServerItem@@QAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_pOther$ = 8						; size = 4
?ComparePlayers@C_ServerItem@@QAEHPAV1@@Z PROC		; C_ServerItem::ComparePlayers, COMDAT
; _this$ = ecx

; 1174 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1175 : 	return m_nPlayers > pOther->m_nPlayers;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pOther$[ebp]
	mov	edx, DWORD PTR [eax+112]
	cmp	edx, DWORD PTR [ecx+112]
	jle	SHORT $LN3@ComparePla
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@ComparePla
$LN3@ComparePla:
	mov	DWORD PTR tv67[ebp], 0
$LN4@ComparePla:
	mov	eax, DWORD PTR tv67[ebp]

; 1176 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ComparePlayers@C_ServerItem@@QAEHPAV1@@Z ENDP		; C_ServerItem::ComparePlayers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?ComparePing@C_ServerItem@@QAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_pOther$ = 8						; size = 4
?ComparePing@C_ServerItem@@QAEHPAV1@@Z PROC		; C_ServerItem::ComparePing, COMDAT
; _this$ = ecx

; 1169 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1170 : 	return m_nPing > pOther->m_nPing;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pOther$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+108]
	jle	SHORT $LN3@ComparePin
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@ComparePin
$LN3@ComparePin:
	mov	DWORD PTR tv67[ebp], 0
$LN4@ComparePin:
	mov	eax, DWORD PTR tv67[ebp]

; 1171 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ComparePing@C_ServerItem@@QAEHPAV1@@Z ENDP		; C_ServerItem::ComparePing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?CompareText@C_ServerItem@@QAEHPAV1@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?CompareText@C_ServerItem@@QAEHPAV1@H@Z PROC		; C_ServerItem::CompareText, COMDAT
; _this$ = ecx

; 1164 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1165 : 	return strcmp(m_arrOutput[nIndex]->GetText(), pOther->m_arrOutput[nIndex]->GetText());

	mov	eax, DWORD PTR _nIndex$[ebp]
	mov	ecx, DWORD PTR _pOther$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+136]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	push	eax
	mov	edx, DWORD PTR _nIndex$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+136]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	push	eax
	call	_strcmp
	add	esp, 8

; 1166 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CompareText@C_ServerItem@@QAEHPAV1@H@Z ENDP		; C_ServerItem::CompareText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Refresh@C_ServerItem@@UAEXXZ PROC			; C_ServerItem::Refresh
; _this$ = ecx

; 1133 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1134 : 	if(GetFlags() & C_BIT_INVISIBLE || Parent_ == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN1@Refresh
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN2@Refresh
$LN1@Refresh:

; 1135 : 		return;

	jmp	SHORT $LN3@Refresh
$LN2@Refresh:

; 1136 : 
; 1137 : 	Parent_->SetUpdateRect(GetX(),GetY(),GetX()+GetW(),GetY()+GetH(),GetFlags(),GetClient());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?SetUpdateRect@C_Window@@QAEXJJJJJJ@Z	; C_Window::SetUpdateRect
$LN3@Refresh:

; 1138 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Refresh@C_ServerItem@@UAEXXZ ENDP			; C_ServerItem::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_HitType$ = 12						; size = 2
?Process@C_ServerItem@@UAEHJF@Z PROC			; C_ServerItem::Process
; _this$ = ecx

; 1118 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1119 : 	gSoundMgr->PlaySound(GetSound(HitType));

	movzx	eax, WORD PTR _HitType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	call	eax
	push	eax
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z ; C_Sound::PlaySoundA

; 1120 : 	if(HitType == C_TYPE_LMOUSEUP)

	movsx	ecx, WORD PTR _HitType$[ebp]
	cmp	ecx, 52					; 00000034H
	jne	SHORT $LN2@Process

; 1121 : 	{
; 1122 : 		SetState(static_cast<short>(GetState() | 1));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	or	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1123 : 		Refresh();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@Process:

; 1124 : 	}
; 1125 : 
; 1126 : 	if(Callback_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	je	SHORT $LN1@Process

; 1127 : 		(*Callback_)(ID,HitType,this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	movzx	eax, WORD PTR _HitType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 12					; 0000000cH
$LN1@Process:

; 1128 : 
; 1129 : 	return(FALSE);

	xor	eax, eax

; 1130 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Process@C_ServerItem@@UAEHJF@Z ENDP			; C_ServerItem::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_relx$ = 8						; size = 4
_rely$ = 12						; size = 4
?CheckHotSpots@C_ServerItem@@UAEJJJ@Z PROC		; C_ServerItem::CheckHotSpots
; _this$ = ecx

; 1108 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1109 : 	if(GetFlags() & C_BIT_INVISIBLE || !(GetFlags() & C_BIT_ENABLED) || !Ready())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN2@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN2@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	jne	SHORT $LN3@CheckHotSp
$LN2@CheckHotSp:

; 1110 : 		return(0);

	xor	eax, eax
	jmp	SHORT $LN4@CheckHotSp
$LN3@CheckHotSp:

; 1111 : 
; 1112 : 	if(relx >= GetX() && rely >= GetY() && relx <= (GetX()+GetW()) && rely <= (GetY()+GetH()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	cmp	DWORD PTR _relx$[ebp], eax
	jl	SHORT $LN1@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	cmp	DWORD PTR _rely$[ebp], eax
	jl	SHORT $LN1@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	cmp	DWORD PTR _relx$[ebp], esi
	jg	SHORT $LN1@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	cmp	DWORD PTR _rely$[ebp], esi
	jg	SHORT $LN1@CheckHotSp

; 1113 : 		return(GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	jmp	SHORT $LN4@CheckHotSp
$LN1@CheckHotSp:

; 1114 : 	return(0);

	xor	eax, eax
$LN4@CheckHotSp:

; 1115 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckHotSpots@C_ServerItem@@UAEJJJ@Z ENDP		; C_ServerItem::CheckHotSpots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_id$ = 8						; size = 4
?SetFont@C_ServerItem@@UAEXJ@Z PROC			; C_ServerItem::SetFont
; _this$ = ecx

; 1097 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1098 : 	Font_ = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+104], ecx

; 1099 : 
; 1100 : 	for(int i=0;i<5;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@SetFont
$LN3@SetFont:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@SetFont:
	cmp	DWORD PTR _i$1[ebp], 5
	jge	SHORT $LN5@SetFont

; 1101 : 	{
; 1102 : 		if(m_arrOutput[i])

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+136], 0
	je	SHORT $LN1@SetFont

; 1103 : 			m_arrOutput[i]->SetFont(Font_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont
$LN1@SetFont:

; 1104 : 	}

	jmp	SHORT $LN3@SetFont
$LN5@SetFont:

; 1105 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@C_ServerItem@@UAEXJ@Z ENDP			; C_ServerItem::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
tv81 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_i$3 = -4						; size = 4
?Cleanup@C_ServerItem@@UAEXXZ PROC			; C_ServerItem::Cleanup
; _this$ = ecx

; 1084 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1085 : 	for(int i=0;i<5;i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@Cleanup
$LN3@Cleanup:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@Cleanup:
	cmp	DWORD PTR _i$3[ebp], 5
	jge	SHORT $LN5@Cleanup

; 1086 : 	{
; 1087 : 		if(m_arrOutput[i])

	mov	ecx, DWORD PTR _i$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+136], 0
	je	SHORT $LN1@Cleanup

; 1088 : 		{
; 1089 : 			m_arrOutput[i]->Cleanup();

	mov	eax, DWORD PTR _i$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+136]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 1090 : 			delete m_arrOutput[i];

	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+136]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN7@Cleanup
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN8@Cleanup
$LN7@Cleanup:
	mov	DWORD PTR tv81[ebp], 0
$LN8@Cleanup:

; 1091 : 			m_arrOutput[i]=NULL;

	mov	eax, DWORD PTR _i$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+136], 0
$LN1@Cleanup:

; 1092 : 		}
; 1093 : 	}

	jmp	SHORT $LN3@Cleanup
$LN5@Cleanup:

; 1094 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@C_ServerItem@@UAEXXZ ENDP			; C_ServerItem::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
$T2 = -252						; size = 16
$T3 = -236						; size = 16
$T4 = -220						; size = 16
$T5 = -204						; size = 16
$T6 = -188						; size = 16
$T7 = -172						; size = 4
tv610 = -168						; size = 4
tv559 = -164						; size = 4
$T8 = -160						; size = 4
$T9 = -156						; size = 4
tv557 = -152						; size = 4
$T10 = -148						; size = 4
$T11 = -144						; size = 4
tv566 = -140						; size = 4
tv573 = -136						; size = 4
$T12 = -132						; size = 4
$T13 = -128						; size = 4
tv563 = -124						; size = 4
$T14 = -120						; size = 4
tv67 = -116						; size = 4
$T15 = -112						; size = 4
tv574 = -108						; size = 4
tv569 = -104						; size = 4
$T16 = -100						; size = 4
$T17 = -96						; size = 4
tv164 = -92						; size = 4
tv328 = -88						; size = 4
tv493 = -84						; size = 4
tv255 = -80						; size = 4
$T18 = -76						; size = 4
$T19 = -72						; size = 4
tv419 = -68						; size = 4
$T20 = -64						; size = 4
$T21 = -60						; size = 4
$T22 = -56						; size = 4
_n$ = -52						; size = 4
_x$ = -48						; size = 4
_str$ = -44						; size = 4
_pGame$ = -40						; size = 4
_this$ = -36						; size = 4
_buf$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__pGame$ = 8						; size = 4
_pParent$ = 12						; size = 4
?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z PROC ; C_ServerItem::Setup
; _this$ = ecx

; 999  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1000 : 	if(!_pGame || !pParent)

	cmp	DWORD PTR __pGame$[ebp], 0
	je	SHORT $LN6@Setup
	cmp	DWORD PTR _pParent$[ebp], 0
	jne	SHORT $LN7@Setup
$LN6@Setup:

; 1001 : 		return;

	jmp	$LN9@Setup
$LN7@Setup:

; 1002 : 
; 1003 : 	GNETCORELib::IGamePtr pGame(_pGame);

	mov	eax, DWORD PTR __pGame$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??$?0UIGame@@@?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIGame@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> ><IGame>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1004 : 
; 1005 : 	m_dwIP = GNETCORELib::IHostPtr(pGame)->GetIP();

	lea	ecx, DWORD PTR _pGame$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv557[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv557[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetIP@IHost@GNETCORELib@@QAEKXZ	; GNETCORELib::IHost::GetIP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >

; 1006 : 	m_nPing = GNETCORELib::IHostPtr(pGame)->GetPing();	// remember for quick sorting

	lea	edx, DWORD PTR _pGame$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T17[ebp]
	call	??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	DWORD PTR tv574[ebp], eax
	mov	eax, DWORD PTR tv574[ebp]
	mov	DWORD PTR tv559[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv559[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetPing@IHost@GNETCORELib@@QAEFXZ	; GNETCORELib::IHost::GetPing
	movsx	ecx, ax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >

; 1007 : 	m_nPlayers = pGame->GetNumPlayers();	// remember for quick sorting

	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ ; GNETCORELib::IGame::GetNumPlayers
	cwde
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], eax

; 1008 : 
; 1009 : 	char buf[0x10];
; 1010 : 	_bstr_t str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 1011 : 	int x, n;
; 1012 : 
; 1013 : 	SetID((long) pGame);

	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??B?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBE_NXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator bool
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetID@C_Base@@QAEXJ@Z			; C_Base::SetID

; 1014 : 	SetType(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetType@C_Base@@QAEXF@Z		; C_Base::SetType

; 1015 : 	SetDefaultFlags();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDefaultFlags@C_ServerItem@@QAEXXZ	; C_ServerItem::SetDefaultFlags

; 1016 : 	SetReady(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 1017 : 
; 1018 : 	m_arrOutput[0] = new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN10@Setup
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN11@Setup
$LN10@Setup:
	mov	DWORD PTR tv164[ebp], 0
$LN11@Setup:
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T9[ebp]
	mov	DWORD PTR [edx+ecx+136], eax

; 1019 : 	if(!m_arrOutput[0]) throw _com_error(E_OUTOFMEMORY);

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+136], 0
	jne	SHORT $LN5@Setup
	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	__CxxThrowException@8
$LN5@Setup:

; 1020 : 	m_arrOutput[0]->SetOwner(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 1021 : 	m_arrOutput[0]->SetFont(Font_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1022 : 	m_arrOutput[0]->SetXY(pParent->GetUserNumber(C_STATE_0), 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1023 : 	str = pGame->GetServerName();

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetServerName@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetServerName
	mov	DWORD PTR tv563[ebp], eax
	mov	edx, DWORD PTR tv563[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1024 : 	n = TrimString(str, pParent->GetUserNumber(C_STATE_1) - pParent->GetUserNumber(C_STATE_0));

	push	1
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	esi, eax
	push	esi
	lea	ecx, DWORD PTR _str$[ebp]
	call	??B_bstr_t@@QBEPADXZ			; _bstr_t::operator char *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimString@C_ServerItem@@QAEHPADH@Z	; C_ServerItem::TrimString
	mov	DWORD PTR _n$[ebp], eax

; 1025 : 	m_arrOutput[0]->SetTextWidth(n + 1);

	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1026 : 	m_arrOutput[0]->SetText(str);

	lea	ecx, DWORD PTR _str$[ebp]
	call	??B_bstr_t@@QBEPADXZ			; _bstr_t::operator char *
	push	eax
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1027 : 
; 1028 : 	m_arrOutput[1] = new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN12@Setup
	mov	ecx, DWORD PTR $T22[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv255[ebp], eax
	jmp	SHORT $LN13@Setup
$LN12@Setup:
	mov	DWORD PTR tv255[ebp], 0
$LN13@Setup:
	mov	edx, DWORD PTR tv255[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T12[ebp]
	mov	DWORD PTR [ecx+eax+136], edx

; 1029 : 	if(!m_arrOutput[1]) throw _com_error(E_OUTOFMEMORY);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+136], 0
	jne	SHORT $LN4@Setup
	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	__CxxThrowException@8
$LN4@Setup:

; 1030 : 	m_arrOutput[1]->SetOwner(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 1031 : 	m_arrOutput[1]->SetFont(Font_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1032 : 	m_arrOutput[1]->SetTextWidth(sprintf(buf, "%4d", GNETCORELib::IHostPtr(pGame)->GetPing()) + 1);

	lea	ecx, DWORD PTR _pGame$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T8[ebp]
	call	??$?0V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@ABV?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> ><_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
	mov	DWORD PTR tv610[ebp], eax
	mov	edx, DWORD PTR tv610[ebp]
	mov	DWORD PTR tv566[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv566[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIHost@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetPing@IHost@GNETCORELib@@QAEFXZ	; GNETCORELib::IHost::GetPing
	cwde
	push	eax
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	add	eax, 1
	push	eax
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >

; 1033 : 	// Center
; 1034 : 	//x = ((pParent->GetUserNumber(C_STATE_2) - pParent->GetUserNumber(C_STATE_1)) - gFontList->StrWidth(Font_, buf, strlen(buf))) / 2;
; 1035 : 	x = pParent->GetUserNumber(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _x$[ebp], eax

; 1036 : 	m_arrOutput[1]->SetXY(x, 0);

	push	0
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1037 : 	m_arrOutput[1]->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1038 : 
; 1039 : 	m_arrOutput[2] = new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN14@Setup
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv328[ebp], eax
	jmp	SHORT $LN15@Setup
$LN14@Setup:
	mov	DWORD PTR tv328[ebp], 0
$LN15@Setup:
	mov	ecx, DWORD PTR tv328[ebp]
	mov	DWORD PTR $T16[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T16[ebp]
	mov	DWORD PTR [eax+edx+136], ecx

; 1040 : 	if(!m_arrOutput[2]) throw _com_error(E_OUTOFMEMORY);

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+136], 0
	jne	SHORT $LN3@Setup
	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Setup:

; 1041 : 	m_arrOutput[2]->SetOwner(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 1042 : 	m_arrOutput[2]->SetFont(Font_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1043 : 	str = pGame->GetType();

	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetType
	mov	DWORD PTR tv569[ebp], eax
	mov	ecx, DWORD PTR tv569[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1044 : 	n = TrimString(str, pParent->GetUserNumber(C_STATE_3) - pParent->GetUserNumber(C_STATE_2));

	push	3
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	esi, eax
	push	esi
	lea	ecx, DWORD PTR _str$[ebp]
	call	??B_bstr_t@@QBEPADXZ			; _bstr_t::operator char *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimString@C_ServerItem@@QAEHPADH@Z	; C_ServerItem::TrimString
	mov	DWORD PTR _n$[ebp], eax

; 1045 : 	m_arrOutput[2]->SetTextWidth(n + 1);

	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	push	edx
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1046 : 	m_arrOutput[2]->SetXY(pParent->GetUserNumber(C_STATE_2), 0);

	push	0
	push	2
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1047 : 	m_arrOutput[2]->SetText(str);

	lea	ecx, DWORD PTR _str$[ebp]
	call	??B_bstr_t@@QBEPADXZ			; _bstr_t::operator char *
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1048 : 
; 1049 : 	m_arrOutput[3] = new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN16@Setup
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv419[ebp], eax
	jmp	SHORT $LN17@Setup
$LN16@Setup:
	mov	DWORD PTR tv419[ebp], 0
$LN17@Setup:
	mov	eax, DWORD PTR tv419[ebp]
	mov	DWORD PTR $T14[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T14[ebp]
	mov	DWORD PTR [edx+ecx+136], eax

; 1050 : 	if(!m_arrOutput[3]) throw _com_error(E_OUTOFMEMORY);

	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+136], 0
	jne	SHORT $LN2@Setup
	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Setup:

; 1051 : 	m_arrOutput[3]->SetOwner(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 1052 : 	m_arrOutput[3]->SetFont(Font_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1053 : 	m_arrOutput[3]->SetTextWidth(sprintf(buf, "%2d/%2d", pGame->GetNumPlayers(), pGame->GetMaxPlayers()) + 1);

	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetMaxPlayers@IGame@GNETCORELib@@QAEFXZ ; GNETCORELib::IGame::GetMaxPlayers
	movsx	edx, ax
	push	edx
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ ; GNETCORELib::IGame::GetNumPlayers
	cwde
	push	eax
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
	add	eax, 1
	push	eax
	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1054 : 	// Center
; 1055 : 	//x = ((pParent->GetUserNumber(C_STATE_4) - pParent->GetUserNumber(C_STATE_3)) - gFontList->StrWidth(Font_, (char *) str, str.length())) / 2;
; 1056 : 	x = pParent->GetUserNumber(C_STATE_3);

	push	3
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _x$[ebp], eax

; 1057 : 	m_arrOutput[3]->SetXY(x, 0);

	push	0
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1058 : 	m_arrOutput[3]->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+136]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1059 : 
; 1060 : 	m_arrOutput[4] = new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T18[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN18@Setup
	mov	ecx, DWORD PTR $T18[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv493[ebp], eax
	jmp	SHORT $LN19@Setup
$LN18@Setup:
	mov	DWORD PTR tv493[ebp], 0
$LN19@Setup:
	mov	ecx, DWORD PTR tv493[ebp]
	mov	DWORD PTR $T13[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR [eax+edx+136], ecx

; 1061 : 	if(!m_arrOutput[4]) throw _com_error(E_OUTOFMEMORY);

	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+136], 0
	jne	SHORT $LN1@Setup
	push	0
	push	0
	push	-2147024882				; 8007000eH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z	; _com_error::_com_error
	push	OFFSET __TI1?AV_com_error@@
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@Setup:

; 1062 : 	m_arrOutput[4]->SetOwner(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 1063 : 	m_arrOutput[4]->SetFont(Font_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 1064 : 	m_arrOutput[4]->SetXY(pParent->GetUserNumber(C_STATE_4), 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _pParent$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 1065 : 	str = pGame->GetLocation();

	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??C?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QBEPAUIGame@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::operator->
	mov	ecx, eax
	call	?GetLocation@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IGame::GetLocation
	mov	DWORD PTR tv573[ebp], eax
	mov	eax, DWORD PTR tv573[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1066 : 	m_arrOutput[4]->SetTextWidth(str.length() + 1);

	lea	ecx, DWORD PTR _str$[ebp]
	call	?length@_bstr_t@@QBEIXZ			; _bstr_t::length
	add	eax, 1
	push	eax
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+136]
	call	?SetTextWidth@O_Output@@QAEXJ@Z		; O_Output::SetTextWidth

; 1067 : 	m_arrOutput[4]->SetText(str);

	lea	ecx, DWORD PTR _str$[ebp]
	call	??B_bstr_t@@QBEPADXZ			; _bstr_t::operator char *
	push	eax
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+136]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 1068 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pGame$[ebp]
	call	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
$LN9@Setup:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$0:
	lea	ecx, DWORD PTR _pGame$[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIGame@GNETCORELib@@$1?_GUID_dda57123_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IGame,&_GUID_dda57123_d4e3_11d2_9018_004f4e006398> >
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$1:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$2:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$3:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$4:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$6:
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$7:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_com_ptr_t@V?$_com_IIID@UIHost@GNETCORELib@@$1?_GUID_b6b03a0c_d547_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >::~_com_ptr_t<_com_IIID<GNETCORELib::IHost,&_GUID_b6b03a0c_d547_11d2_9018_004f4e006398> >
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$8:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$10:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z$11:
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Setup@C_ServerItem@@QAEXPAUIGame@@PAVC_TreeList@@@Z ENDP ; C_ServerItem::Setup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@C_ServerItem@@QAEJXZ PROC				; C_ServerItem::Size
; _this$ = ecx

; 994  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 995  : 	return(0);

	xor	eax, eax

; 996  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@C_ServerItem@@QAEJXZ ENDP				; C_ServerItem::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_this$ = -8						; size = 4
_x$ = -4						; size = 2
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?Draw@C_ServerItem@@MAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC ; C_ServerItem::Draw
; _this$ = ecx

; 1141 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1142 : 	if(GetFlags() & C_BIT_INVISIBLE || Parent_ == NULL || !Ready())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN8@Draw
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN8@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	movsx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN9@Draw
$LN8@Draw:

; 1143 : 		return;

	jmp	$LN10@Draw
$LN9@Draw:

; 1144 : 
; 1145 : 	short x=GetState();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	mov	WORD PTR _x$[ebp], ax

; 1146 : 
; 1147 : 	for(int i=0;i<5;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN7@Draw
$LN6@Draw:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN7@Draw:
	cmp	DWORD PTR _i$1[ebp], 5
	jge	SHORT $LN5@Draw

; 1148 : 	{
; 1149 : 		if(m_arrOutput[i])

	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+136], 0
	je	SHORT $LN4@Draw

; 1150 : 		{
; 1151 : 			if(m_arrOutput[i])

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+136], 0
	je	SHORT $LN4@Draw

; 1152 : 			{
; 1153 : 				m_arrOutput[i]->SetFgColor(Color_[x]);

	movsx	edx, WORD PTR _x$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+120]
	push	ecx
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+136]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 1154 : 				m_arrOutput[i]->Draw(surface,cliprect);

	mov	ecx, DWORD PTR _cliprect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+136]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw
$LN4@Draw:

; 1155 : 			}
; 1156 : 		}
; 1157 : 	}

	jmp	SHORT $LN6@Draw
$LN5@Draw:

; 1158 : 
; 1159 : 	if(MouseOver_ || (GetFlags() & C_BIT_FORCEMOUSEOVER))

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+82]
	test	eax, eax
	jne	SHORT $LN1@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 16384				; 00004000H
	je	SHORT $LN10@Draw
$LN1@Draw:

; 1160 : 		HighLite(surface,cliprect);

	mov	ecx, DWORD PTR _cliprect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	call	eax
$LN10@Draw:

; 1161 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@C_ServerItem@@MAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP ; C_ServerItem::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_ServerItem@@UAE@XZ PROC				; C_ServerItem::~C_ServerItem
; _this$ = ecx

; 990  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_ServerItem@@6B@

; 991  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Control@@UAE@XZ			; C_Control::~C_Control
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_ServerItem@@UAE@XZ ENDP				; C_ServerItem::~C_ServerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fp$ = 8						; size = 4
??0C_ServerItem@@QAE@PAU_iobuf@@@Z PROC			; C_ServerItem::C_ServerItem
; _this$ = ecx

; 986  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@PAU_iobuf@@@Z		; C_Control::C_Control
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7C_ServerItem@@6B@

; 987  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0C_ServerItem@@QAE@PAU_iobuf@@@Z ENDP			; C_ServerItem::C_ServerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
??0C_ServerItem@@QAE@PAPAD@Z PROC			; C_ServerItem::C_ServerItem
; _this$ = ecx

; 982  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@PAPAD@Z		; C_Control::C_Control
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7C_ServerItem@@6B@

; 983  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0C_ServerItem@@QAE@PAPAD@Z ENDP			; C_ServerItem::C_ServerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0C_ServerItem@@QAE@XZ PROC				; C_ServerItem::C_ServerItem
; _this$ = ecx

; 961  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0C_ServerItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@XZ			; C_Control::C_Control
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_ServerItem@@6B@

; 962  : 	_SetCType_(_CNTL_MISSION_);

	push	16410					; 0000401aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_SetCType_@C_Base@@QAEXF@Z		; C_Base::_SetCType_

; 963  : 
; 964  : 	State_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+160], cx

; 965  : 
; 966  : 	Color_[0]=0xd0d0d0; // Not Selected

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+120], 13684944	; 00d0d0d0H

; 967  : 	Color_[1]=0xC8; // Selected

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+120], 200		; 000000c8H

; 968  : 	Color_[2]=0xffff00; // Player is in this mission

	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+120], 16776960	; 00ffff00H

; 969  : 	Color_[3]=0x00ff00; // Player is in this mission & current mission

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+120], 65280		; 0000ff00H

; 970  : 
; 971  : 	ZeroMemory(m_arrOutput, sizeof(m_arrOutput));

	push	20					; 00000014H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 136				; 00000088H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 972  : 	Owner_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], 0

; 973  : 	DefaultFlags_=C_BIT_ENABLED | C_BIT_REMOVE | C_BIT_MOUSEOVER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 335546368		; 14000800H

; 974  : 
; 975  : 	// cached properties
; 976  : 	m_nPing = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], 0

; 977  : 	m_nPlayers = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 978  : 	m_dwIP = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0

; 979  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0C_ServerItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1C_Control@@UAE@XZ			; C_Control::~C_Control
__ehhandler$??0C_ServerItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0C_ServerItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0C_ServerItem@@QAE@XZ ENDP				; C_ServerItem::C_ServerItem
; Function compile flags: /Odtp
;	COMDAT ??_GGNetUpdater@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGNetUpdater@@UAEPAXI@Z PROC				; GNetUpdater::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GNetUpdater@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGNetUpdater@@UAEPAXI@Z ENDP				; GNetUpdater::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1GNetUpdater@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GNetUpdater@@UAE@XZ PROC				; GNetUpdater::~GNetUpdater, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ ; ATL::CComObject<CGNetUpdater>::~CComObject<CGNetUpdater>
	mov	esp, ebp
	pop	ebp
	ret	0
??1GNetUpdater@@UAE@XZ ENDP				; GNetUpdater::~GNetUpdater
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ??0GNetUpdater@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0GNetUpdater@@QAE@XZ PROC				; GNetUpdater::GNetUpdater, COMDAT
; _this$ = ecx

; 115  : 	GNetUpdater()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z ; ATL::CComObject<CGNetUpdater>::CComObject<CGNetUpdater>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GNetUpdater@@6BIGameEvents@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7GNetUpdater@@6BIRemoteMasterServerEvents@@@

; 116  : 	{
; 117  : 		AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ; ATL::CComObject<CGNetUpdater>::AddRef

; 118  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0GNetUpdater@@QAE@XZ ENDP				; GNetUpdater::GNetUpdater
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z PROC	; ATL::CComObject<CGNetUpdater>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ ; ATL::CComObject<CGNetUpdater>::~CComObject<CGNetUpdater>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComObject@VCGNetUpdater@@@ATL@@UAEPAXI@Z ENDP	; ATL::CComObject<CGNetUpdater>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObject<CGNetUpdater>::QueryInterface, COMDAT

; 2924 : 	{

	push	ebp
	mov	ebp, esp

; 2925 : 		return _InternalQueryInterface(iid, ppvObject);

	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_InternalQueryInterface@CGNetUpdater@@QAEJABU_GUID@@PAPAX@Z ; CGNetUpdater::_InternalQueryInterface

; 2926 : 	}

	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComObject@VCGNetUpdater@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<CGNetUpdater>::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv77 = -16						; size = 4
$T1 = -12						; size = 4
_l$ = -8						; size = 4
$T2 = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ PROC	; ATL::CComObject<CGNetUpdater>::Release, COMDAT

; 2914 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2915 : 		ULONG l = InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
	mov	DWORD PTR _l$[ebp], eax

; 2916 : 		if (l == 0)

	cmp	DWORD PTR _l$[ebp], 0
	jne	SHORT $LN1@Release

; 2917 : 			delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN1@Release
$LN4@Release:
	mov	DWORD PTR tv77[ebp], 0
$LN1@Release:

; 2918 : 		return l;

	mov	eax, DWORD PTR _l$[ebp]

; 2919 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Release@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ENDP	; ATL::CComObject<CGNetUpdater>::Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ PROC	; ATL::CComObject<CGNetUpdater>::AddRef, COMDAT

; 2910 : 	{

	push	ebp
	mov	ebp, esp

; 2911 : 		return InternalAddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef

; 2912 : 	}

	pop	ebp
	ret	4
?AddRef@?$CComObject@VCGNetUpdater@@@ATL@@UAGKXZ ENDP	; ATL::CComObject<CGNetUpdater>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ PROC	; ATL::CComObject<CGNetUpdater>::~CComObject<CGNetUpdater>, COMDAT
; _this$ = ecx

; 2899 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2900 : 		m_dwRef = -(LONG_MAX/2);

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], -1073741823		; c0000001H

; 2901 : 		FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2902 : #ifdef _ATL_DEBUG_INTERFACES
; 2903 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2904 : #endif
; 2905 : 		_pAtlModule->Unlock();

	mov	eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2906 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CGNetUpdater@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CGNetUpdater@@QAE@XZ
__ehhandler$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CComObject@VCGNetUpdater@@@ATL@@UAE@XZ ENDP	; ATL::CComObject<CGNetUpdater>::~CComObject<CGNetUpdater>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z PROC	; ATL::CComObject<CGNetUpdater>::CComObject<CGNetUpdater>, COMDAT
; _this$ = ecx

; 2892 : 	CComObject(_In_opt_ void* = NULL)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CGNetUpdater@@QAE@XZ			; CGNetUpdater::CGNetUpdater
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIGameEvents@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7?$CComObject@VCGNetUpdater@@@ATL@@6BIRemoteMasterServerEvents@@@

; 2893 : 	{
; 2894 : 		_pAtlModule->Lock();

	mov	edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [eax+4]
	call	edx

; 2895 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CGNetUpdater@@QAE@XZ
__ehhandler$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CComObject@VCGNetUpdater@@@ATL@@QAE@PAX@Z ENDP	; ATL::CComObject<CGNetUpdater>::CComObject<CGNetUpdater>
; Function compile flags: /Odtp
;	COMDAT ??1CGNetUpdater@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGNetUpdater@@QAE@XZ PROC				; CGNetUpdater::~CGNetUpdater, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::~_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
	mov	esp, ebp
	pop	ebp
	ret	0
??1CGNetUpdater@@QAE@XZ ENDP				; CGNetUpdater::~CGNetUpdater
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -96						; size = 16
$T3 = -80						; size = 4
$T4 = -76						; size = 4
tv196 = -72						; size = 4
tv204 = -68						; size = 4
$T5 = -64						; size = 4
tv194 = -60						; size = 4
tv203 = -56						; size = 4
$T6 = -52						; size = 4
tv192 = -48						; size = 4
tv202 = -44						; size = 4
$T7 = -40						; size = 4
tv190 = -36						; size = 4
tv201 = -32						; size = 4
$T8 = -28						; size = 4
tv188 = -24						; size = 4
tv200 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nServers$ = 12						; size = 4
?ServerListReceived@CGNetUpdater@@UAGJH@Z PROC		; CGNetUpdater::ServerListReceived

; 1379 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ServerListReceived@CGNetUpdater@@UAGJH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1380 : 	try
; 1381 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1382 : 		// Get server properties
; 1383 : 		m_bstrName = m_pMasterServer->GetName();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv200[ebp], eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR tv200[ebp]
	call	?GetName@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetName
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1384 : 		m_bstrLocation = m_pMasterServer->GetLocation();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv201[ebp], eax
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR tv201[ebp]
	call	?GetLocation@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetLocation
	mov	DWORD PTR tv190[ebp], eax
	mov	eax, DWORD PTR tv190[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1385 : 		m_bstrVersion = m_pMasterServer->GetVersion();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv202[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv202[ebp]
	call	?GetVersion@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetVersion
	mov	DWORD PTR tv192[ebp], eax
	mov	edx, DWORD PTR tv192[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1386 : 		m_bstrMOTD = m_pMasterServer->GetMOTD();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv203[ebp], eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR tv203[ebp]
	call	?GetMOTD@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetMOTD
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1387 : 		m_bstrAdminEmail = m_pMasterServer->GetAdminEmail();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv204[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?GetAdminEmail@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ; GNETCORELib::IMasterServer::GetAdminEmail
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??4_bstr_t@@QAEAAV0@ABV0@@Z		; _bstr_t::operator=
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t

; 1388 : 
; 1389 : 		// CWindow(GetDlgItem(IDC_MOTD)).SetWindowText(m_bstrMOTD);
; 1390 : 		m_nServerCount = nServers;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nServers$[ebp]
	mov	DWORD PTR [ecx+64], edx

; 1391 : 
; 1392 : 		::ServerListReceived(nServers);

	mov	eax, DWORD PTR _nServers$[ebp]
	push	eax
	call	?ServerListReceived@@YAXH@Z		; ServerListReceived
	add	esp, 4

; 1393 : 
; 1394 : 		return S_OK;

	xor	eax, eax
	jmp	SHORT $LN2@ServerList
__catch$?ServerListReceived@CGNetUpdater@@UAGJH@Z$0:

; 1395 : 	}
; 1396 : 
; 1397 : 	catch(_com_error e)
; 1398 : 	{
; 1399 : 		return e.Error();

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN13@ServerList
	ret	0

; 1400 : 	}

	mov	eax, __tryend$?ServerListReceived@CGNetUpdater@@UAGJH@Z$1
	ret	0
__tryend$?ServerListReceived@CGNetUpdater@@UAGJH@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@ServerList
$LN13@ServerList:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1395 : 	}
; 1396 : 
; 1397 : 	catch(_com_error e)
; 1398 : 	{
; 1399 : 		return e.Error();

	mov	eax, DWORD PTR $T3[ebp]
$LN2@ServerList:

; 1401 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?ServerListReceived@CGNetUpdater@@UAGJH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ServerListReceived@CGNetUpdater@@UAGJH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ServerListReceived@CGNetUpdater@@UAGJH@Z ENDP		; CGNetUpdater::ServerListReceived
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bSuccess$ = 12						; size = 4
?UpdateComplete@CGNetUpdater@@UAGJH@Z PROC		; CGNetUpdater::UpdateComplete

; 1370 : {

	push	ebp
	mov	ebp, esp

; 1371 : 	m_bUpdating = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+80], 0

; 1372 : 
; 1373 : 	::UpdateComplete(bSuccess);

	mov	ecx, DWORD PTR _bSuccess$[ebp]
	push	ecx
	call	?UpdateComplete@@YAXH@Z			; UpdateComplete
	add	esp, 4

; 1374 : 
; 1375 : 	return S_OK;

	xor	eax, eax

; 1376 : }

	pop	ebp
	ret	8
?UpdateComplete@CGNetUpdater@@UAGJH@Z ENDP		; CGNetUpdater::UpdateComplete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Game$ = 12						; size = 4
?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z PROC	; CGNetUpdater::UpdateAborted

; 1361 : {

	push	ebp
	mov	ebp, esp

; 1362 : 	UpdateGame(Game, false);

	push	0
	mov	eax, DWORD PTR _Game$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z ; CGNetUpdater::UpdateGame

; 1363 : 	return S_OK;

	xor	eax, eax

; 1364 : }

	pop	ebp
	ret	8
?UpdateAborted@CGNetUpdater@@UAGJPAUIGame@@@Z ENDP	; CGNetUpdater::UpdateAborted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Game$ = 12						; size = 4
?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z PROC	; CGNetUpdater::UpdateComplete

; 1355 : {

	push	ebp
	mov	ebp, esp

; 1356 : 	UpdateGame(Game, true);

	push	1
	mov	eax, DWORD PTR _Game$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z ; CGNetUpdater::UpdateGame

; 1357 : 	return S_OK;

	xor	eax, eax

; 1358 : }

	pop	ebp
	ret	8
?UpdateComplete@CGNetUpdater@@UAGJPAUIGame@@@Z ENDP	; CGNetUpdater::UpdateComplete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsUpdating@CGNetUpdater@@QAE_NXZ PROC			; CGNetUpdater::IsUpdating
; _this$ = ecx

; 1347 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1348 : 	return m_bUpdating;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+84]

; 1349 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsUpdating@CGNetUpdater@@QAE_NXZ ENDP			; CGNetUpdater::IsUpdating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -84						; size = 16
_this$ = -68						; size = 4
tv187 = -64						; size = 4
$T3 = -60						; size = 4
$T4 = -56						; size = 4
tv174 = -52						; size = 4
tv169 = -48						; size = 4
__bstr$5 = -44						; size = 4
tv182 = -40						; size = 4
tv181 = -36						; size = 4
tv89 = -32						; size = 4
tv87 = -28						; size = 4
$T6 = -24						; size = 4
tv188 = -20						; size = 2
tv186 = -18						; size = 1
$T7 = -17						; size = 1
__$EHRec$ = -16						; size = 16
_p$ = 8							; size = 4
_bSuccess$ = 12						; size = 1
?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z PROC	; CGNetUpdater::UpdateGame
; _this$ = ecx

; 1312 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T6[ebp], 0

; 1313 : 	try
; 1314 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1315 : 		if(bSuccess)

	movzx	eax, BYTE PTR _bSuccess$[ebp]
	test	eax, eax
	je	$LN3@UpdateGame

; 1316 : 		{
; 1317 : #ifndef _DEBUG
; 1318 : 			BSTR _bstr;
; 1319 : 			if(SUCCEEDED(p->get_Name(&_bstr) || _bstr_t(_bstr) == _bstr_t("Falcon4")))

	lea	ecx, DWORD PTR __bstr$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	mov	DWORD PTR tv181[ebp], eax
	cmp	DWORD PTR tv181[ebp], 0
	jne	SHORT $LN7@UpdateGame
	push	OFFSET ??_C@_07GDGMJMJJ@Falcon4?$AA@
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR $T6[ebp]
	or	ecx, 1
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR __bstr$5[ebp]
	push	edx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0_bstr_t@@QAE@PB_W@Z			; _bstr_t::_bstr_t
	mov	DWORD PTR tv174[ebp], eax
	mov	eax, DWORD PTR $T6[ebp]
	or	eax, 2
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR tv169[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv174[ebp]
	call	??8_bstr_t@@QBE_NABV0@@Z		; _bstr_t::operator==
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@UpdateGame
	mov	DWORD PTR tv87[ebp], 0
	jmp	SHORT $LN8@UpdateGame
$LN7@UpdateGame:
	mov	DWORD PTR tv87[ebp], 1
$LN8@UpdateGame:
	cmp	DWORD PTR tv87[ebp], 0
	jl	SHORT $LN9@UpdateGame
	mov	DWORD PTR tv89[ebp], 1
	jmp	SHORT $LN10@UpdateGame
$LN9@UpdateGame:
	mov	DWORD PTR tv89[ebp], 0
$LN10@UpdateGame:
	mov	al, BYTE PTR tv89[ebp]
	mov	BYTE PTR $T7[ebp], al
	mov	ecx, DWORD PTR $T6[ebp]
	and	ecx, 2
	je	SHORT $LN17@UpdateGame
	and	DWORD PTR $T6[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$LN17@UpdateGame:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR $T6[ebp]
	and	edx, 1
	je	SHORT $LN18@UpdateGame
	and	DWORD PTR $T6[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$LN18@UpdateGame:
	movzx	eax, BYTE PTR $T7[ebp]
	test	eax, eax
	je	$LN3@UpdateGame

; 1320 : #endif
; 1321 : 			{
; 1322 : 				p->AddRef();

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx

; 1323 : 				m_arrGames.push_back(p);

	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, OFFSET _m_arrGames
	call	?push_back@?$vector@PAUIGame@@V?$allocator@PAUIGame@@@std@@@std@@QAEXABQAUIGame@@@Z ; std::vector<IGame *,std::allocator<IGame *> >::push_back

; 1324 : 
; 1325 : 				if(FilterGame(p))

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?FilterGame@@YA_NPAUIGame@@@Z		; FilterGame
	add	esp, 4
	mov	BYTE PTR tv186[ebp], al
	movzx	ecx, BYTE PTR tv186[ebp]
	test	ecx, ecx
	je	SHORT $LN3@UpdateGame

; 1326 : 				{
; 1327 : 					MakeServerItem(m_pListServers, p);

	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _m_pListServers
	push	eax
	call	?MakeServerItem@@YAPAVC_ServerItem@@PAVC_TreeList@@PAUIGame@@@Z ; MakeServerItem
	add	esp, 8

; 1328 : 
; 1329 : 					m_pListServers->ReorderBranch(m_pListServers->GetRoot());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR tv187[ebp], eax
	mov	ecx, DWORD PTR tv187[ebp]
	push	ecx
	mov	ecx, DWORD PTR _m_pListServers
	call	?ReorderBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::ReorderBranch

; 1330 : 					m_pListServers->RecalcSize();

	mov	ecx, DWORD PTR _m_pListServers
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1331 : 					m_pListServers->Parent_->RefreshClient(m_pListServers->GetClient());

	mov	ecx, DWORD PTR _m_pListServers
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	mov	WORD PTR tv188[ebp], ax
	movsx	edx, WORD PTR tv188[ebp]
	push	edx
	mov	eax, DWORD PTR _m_pListServers
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN3@UpdateGame:

; 1332 : 				}
; 1333 : 			}
; 1334 : 		}
; 1335 : 
; 1336 : 		m_nUpdatedServers++;

	mov	ecx, DWORD PTR _m_nUpdatedServers
	add	ecx, 1
	mov	DWORD PTR _m_nUpdatedServers, ecx

; 1337 : 		UpdateServerStatus();

	call	?UpdateServerStatus@@YAXXZ		; UpdateServerStatus

; 1338 : 	}

	jmp	SHORT $LN11@UpdateGame
__catch$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$0:

; 1339 : 
; 1340 : 	catch(_com_error e)
; 1341 : 	{
; 1342 : 		MonoPrint("CGNetUpdater::Refresh - _com_error 0x%X", e.Error());

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	push	eax
	push	OFFSET ??_C@_0CI@LHGKFGHD@CGNetUpdater?3?3Refresh?5?9?5_com_err@
	call	_MonoPrint
	add	esp, 8

; 1343 : 	}

	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN21@UpdateGame
	ret	0
$LN11@UpdateGame:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN5@UpdateGame
$LN21@UpdateGame:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN5@UpdateGame:

; 1344 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	and	eax, 1
	je	$LN14@UpdateGame
	and	DWORD PTR $T6[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$LN14@UpdateGame:
	ret	0
__ehhandler$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateGame@CGNetUpdater@@QAEXPAUIGame@@_N@Z ENDP	; CGNetUpdater::UpdateGame
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
?CancelUpdate@CGNetUpdater@@QAEXXZ PROC			; CGNetUpdater::CancelUpdate
; _this$ = ecx

; 1264 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1265 : 	// Abort now
; 1266 : 	if(m_pMasterServer != NULL)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??9?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@CancelUpda

; 1267 : 	{
; 1268 : 		m_pMasterServer->raw_CancelUpdate();	

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	call	ecx
$LN2@CancelUpda:

; 1269 : 		return;
; 1270 : 	}
; 1271 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelUpdate@CGNetUpdater@@QAEXXZ ENDP			; CGNetUpdater::CancelUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_e$2 = -76						; size = 16
tv156 = -60						; size = 4
$T3 = -56						; size = 4
tv154 = -52						; size = 4
$T4 = -48						; size = 4
tv166 = -44						; size = 4
tv165 = -40						; size = 4
tv163 = -36						; size = 4
tv162 = -32						; size = 4
tv160 = -28						; size = 4
tv159 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?Update@CGNetUpdater@@QAEXXZ PROC			; CGNetUpdater::Update
; _this$ = ecx

; 1274 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Update@CGNetUpdater@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1275 : 	try
; 1276 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1277 : 		if(m_bUpdating)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN1@Update

; 1278 : 		{
; 1279 : 			CancelUpdate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelUpdate@CGNetUpdater@@QAEXXZ	; CGNetUpdater::CancelUpdate

; 1280 : 			return;

	jmp	$LN3@Update
$LN1@Update:

; 1281 : 		}
; 1282 : 
; 1283 : 		m_nServerCount = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0

; 1284 : 
; 1285 : 		m_bUpdating = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 1

; 1286 : 
; 1287 : 		UpdateStatus("Contacting master server ...");

	push	OFFSET ??_C@_0BN@NBJLJDOH@Contacting?5master?5server?5?4?4?4?$AA@
	call	?UpdateStatus@@YAXPADZZ			; UpdateStatus
	add	esp, 4

; 1288 : 
; 1289 : #ifdef _DEBUG
; 1290 : #if 1
; 1291 : 		m_pMasterServer->PutServerName(g_strMasterServerName);
; 1292 : 		m_pMasterServer->PutGameFilter("Falcon4");
; 1293 : #else
; 1294 : 		m_pMasterServer->PutServerName("master.gamespy.com");
; 1295 : #endif
; 1296 : #else
; 1297 : 		m_pMasterServer->PutServerName(g_strMasterServerName);

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	push	OFFSET ?g_strMasterServerName@@3PADA	; g_strMasterServerName
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	mov	DWORD PTR tv159[ebp], eax
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv154[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR tv160[ebp]
	call	?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IRemoteMasterServer::PutServerName

; 1298 : 		m_pMasterServer->PutGameFilter("Falcon4");

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	OFFSET ??_C@_07GDGMJMJJ@Falcon4?$AA@
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	mov	DWORD PTR tv162[ebp], eax
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR tv156[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR tv163[ebp]
	call	?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IRemoteMasterServer::PutGameFilter

; 1299 : #endif
; 1300 : 
; 1301 : 		m_pMasterServer->PutPort(28900);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv165[ebp], eax
	push	28900					; 000070e4H
	mov	ecx, DWORD PTR tv165[ebp]
	call	?PutPort@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IRemoteMasterServer::PutPort

; 1302 : 		m_pMasterServer->Update();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	call	?Update@IRemoteMasterServer@GNETCORELib@@QAEJXZ ; GNETCORELib::IRemoteMasterServer::Update

; 1303 : 	}	

	jmp	SHORT $LN5@Update
__catch$?Update@CGNetUpdater@@QAEXXZ$0:

; 1304 : 
; 1305 : 	catch(_com_error e)
; 1306 : 	{
; 1307 : 		MonoPrint("CGNetUpdater::UpdateGame - _com_error 0x%X", e.Error());

	lea	ecx, DWORD PTR _e$2[ebp]
	call	?Error@_com_error@@QBEJXZ		; _com_error::Error
	push	eax
	push	OFFSET ??_C@_0CL@LLDBCDGC@CGNetUpdater?3?3UpdateGame?5?9?5_com_@
	call	_MonoPrint
	add	esp, 8

; 1308 : 	}

	lea	ecx, DWORD PTR _e$2[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $LN11@Update
	ret	0
$LN5@Update:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@Update
$LN11@Update:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Update:

; 1309 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Update@CGNetUpdater@@QAEXXZ$2:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__unwindfunclet$?Update@CGNetUpdater@@QAEXXZ$3:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?Update@CGNetUpdater@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Update@CGNetUpdater@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update@CGNetUpdater@@QAEXXZ ENDP			; CGNetUpdater::Update
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@CGNetUpdater@@QAEXXZ PROC			; CGNetUpdater::Cleanup
; _this$ = ecx

; 1244 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1245 : 	if(m_pMasterServer)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Cleanup

; 1246 : 	{
; 1247 : 		if(m_dwMasterServerCookie)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	je	SHORT $LN2@Cleanup

; 1248 : 		{
; 1249 : 			AtlUnadvise(m_pMasterServer, IID_IRemoteMasterServerEvents, m_dwMasterServerCookie);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	push	OFFSET _IID_IRemoteMasterServerEvents
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
	push	eax
	call	?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z ; ATL::AtlUnadvise

; 1250 : 			m_dwMasterServerCookie = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], 0
$LN2@Cleanup:

; 1251 : 		}
; 1252 : 
; 1253 : 		if(m_dwMasterServerCookie2)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN1@Cleanup

; 1254 : 		{
; 1255 : 			AtlUnadvise(m_pMasterServer, IID_IGameEvents, m_dwMasterServerCookie2);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	push	OFFSET _IID_IGameEvents
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
	push	eax
	call	?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z ; ATL::AtlUnadvise

; 1256 : 			m_dwMasterServerCookie2 = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
$LN1@Cleanup:

; 1257 : 		}
; 1258 : 
; 1259 : 		m_pMasterServer.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::Release
$LN4@Cleanup:

; 1260 : 	}
; 1261 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@CGNetUpdater@@QAEXXZ ENDP			; CGNetUpdater::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CGNetUpdater@@QAEXXZ PROC				; CGNetUpdater::Init
; _this$ = ecx

; 1236 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1237 : 	CheckHR(m_pMasterServer.CreateInstance(__uuidof(SHAREDLib::RemoteMasterServer)));

	push	23					; 00000017H
	push	0
	push	OFFSET __GUID_45292708_37a2_483b_8e4a_e3b61f537a0f
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?CreateInstance@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEJABU_GUID@@PAUIUnknown@@K@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::CreateInstance
	push	eax
	call	?CheckHR@@YAXJ@Z			; CheckHR
	add	esp, 4

; 1238 : 
; 1239 : 	CheckHR(AtlAdvise(m_pMasterServer, (IGameEvents *) this, IID_IRemoteMasterServerEvents, &m_dwMasterServerCookie));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	push	OFFSET _IID_IRemoteMasterServerEvents
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
	push	eax
	call	?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z ; ATL::AtlAdvise
	push	eax
	call	?CheckHR@@YAXJ@Z			; CheckHR
	add	esp, 4

; 1240 : 	CheckHR(AtlAdvise(m_pMasterServer, (IGameEvents *) this, IID_IGameEvents, &m_dwMasterServerCookie2));

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	push	OFFSET _IID_IGameEvents
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
	push	eax
	call	?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z ; ATL::AtlAdvise
	push	eax
	call	?CheckHR@@YAXJ@Z			; CheckHR
	add	esp, 4

; 1241 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CGNetUpdater@@QAEXXZ ENDP				; CGNetUpdater::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_Release, COMDAT
; _this$ = ecx

; 780  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 781  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release

; 782  :             m_pInterface->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@Release:

; 783  :         }
; 784  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?CreateInstance@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEJABU_GUID@@PAUIUnknown@@K@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_pIUnknown$1 = -8					; size = 4
_hr$ = -4						; size = 4
_rclsid$ = 8						; size = 4
_pOuter$ = 12						; size = 4
_dwClsContext$ = 16					; size = 4
?CreateInstance@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEJABU_GUID@@PAUIUnknown@@K@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::CreateInstance, COMDAT
; _this$ = ecx

; 579  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 580  :         HRESULT hr;
; 581  : 
; 582  :         _Release();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_Release

; 583  : 
; 584  :         if (dwClsContext & (CLSCTX_LOCAL_SERVER | CLSCTX_REMOTE_SERVER)) {

	mov	eax, DWORD PTR _dwClsContext$[ebp]
	and	eax, 20					; 00000014H
	je	SHORT $LN5@CreateInst

; 585  :             IUnknown* pIUnknown;
; 586  :             hr = CoCreateInstance(rclsid, pOuter, dwClsContext, __uuidof(IUnknown), reinterpret_cast<void**>(&pIUnknown));

	lea	ecx, DWORD PTR _pIUnknown$1[ebp]
	push	ecx
	push	OFFSET __GUID_00000000_0000_0000_c000_000000000046
	mov	edx, DWORD PTR _dwClsContext$[ebp]
	push	edx
	mov	eax, DWORD PTR _pOuter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rclsid$[ebp]
	push	ecx
	call	DWORD PTR __imp__CoCreateInstance@20
	mov	DWORD PTR _hr$[ebp], eax

; 587  : 
; 588  :             if (SUCCEEDED(hr)) {

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN4@CreateInst

; 589  :                 hr = OleRun(pIUnknown);

	mov	edx, DWORD PTR _pIUnknown$1[ebp]
	push	edx
	call	DWORD PTR __imp__OleRun@4
	mov	DWORD PTR _hr$[ebp], eax

; 590  : 
; 591  :                 if (SUCCEEDED(hr)) {

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@CreateInst

; 592  :                     hr = pIUnknown->QueryInterface(GetIID(), reinterpret_cast<void**>(&m_pInterface));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::GetIID
	push	eax
	mov	ecx, DWORD PTR _pIUnknown$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pIUnknown$1[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	mov	DWORD PTR _hr$[ebp], eax
$LN3@CreateInst:

; 593  :                 }
; 594  : 
; 595  :                 pIUnknown->Release();

	mov	edx, DWORD PTR _pIUnknown$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pIUnknown$1[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN4@CreateInst:

; 596  :             }
; 597  :         }
; 598  :         else {

	jmp	SHORT $LN2@CreateInst
$LN5@CreateInst:

; 599  :             hr = CoCreateInstance(rclsid, pOuter, dwClsContext, GetIID(), reinterpret_cast<void**>(&m_pInterface));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::GetIID
	push	eax
	mov	ecx, DWORD PTR _dwClsContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pOuter$[ebp]
	push	edx
	mov	eax, DWORD PTR _rclsid$[ebp]
	push	eax
	call	DWORD PTR __imp__CoCreateInstance@20
	mov	DWORD PTR _hr$[ebp], eax
$LN2@CreateInst:

; 600  :         }
; 601  : 
; 602  :         if (FAILED(hr)) {

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateInst

; 603  :             // just in case refcount = 0 and dtor gets called
; 604  :             m_pInterface = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@CreateInst:

; 605  :         }
; 606  : 
; 607  :         return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 608  :     }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateInstance@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEJABU_GUID@@PAUIUnknown@@K@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEXXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::Release, COMDAT
; _this$ = ecx

; 539  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 540  :         if (m_pInterface == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@Release

; 541  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error

; 542  :         }
; 543  :         else {

	jmp	SHORT $LN4@Release
$LN2@Release:

; 544  :             m_pInterface->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 545  :             m_pInterface = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN4@Release:

; 546  :         }
; 547  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??9?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_null$ = 8						; size = 4
??9?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator!=, COMDAT
; _this$ = ecx

; 476  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 477  :         return !(operator==(null));

	mov	eax, DWORD PTR _null$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 478  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??8?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_null$ = 8						; size = 4
??8?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator==, COMDAT
; _this$ = ecx

; 451  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 452  :         if (null != 0) {

	cmp	DWORD PTR _null$[ebp], 0
	je	SHORT $LN1@operator

; 453  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN1@operator:

; 454  :         }
; 455  : 
; 456  :         return m_pInterface == NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN5@operator:
	mov	al, BYTE PTR tv68[ebp]
$LN3@operator:

; 457  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NH@Z ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NXZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator bool, COMDAT
; _this$ = ecx

; 414  :     { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 415  :         return m_pInterface != NULL; 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 416  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBE_NXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->, COMDAT
; _this$ = ecx

; 401  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  :         if (m_pInterface == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@operator

; 403  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN1@operator:

; 404  :         }
; 405  : 
; 406  :         return m_pInterface; 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
$LN3@operator:

; 407  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *, COMDAT
; _this$ = ecx

; 358  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 359  :         return m_pInterface; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 360  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QBEPAUIRemoteMasterServer@GNETCORELib@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::operator GNETCORELib::IRemoteMasterServer *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::~_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >, COMDAT
; _this$ = ecx

; 315  :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  :         _Release(); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Release@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_Release

; 317  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::~_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >, COMDAT
; _this$ = ecx

; 135  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 136  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ PROC ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::GetIID, COMDAT

; 74   :     { 

	push	ebp
	mov	ebp, esp

; 75   :         return ThisIIID::GetIID(); 

	call	?GetIID@?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@SAABU_GUID@@XZ ; _com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a>::GetIID

; 76   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@SAABU_GUID@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comip.h
;	COMDAT ?GetIID@?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@SAABU_GUID@@XZ PROC ; _com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a>::GetIID, COMDAT

; 55   :     {

	push	ebp
	mov	ebp, esp

; 56   :         return *_IID;

	mov	eax, OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a

; 57   :     }

	pop	ebp
	ret	0
?GetIID@?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@SAABU_GUID@@XZ ENDP ; _com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a>::GetIID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT
?_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ PROC ; CGNetUpdater::_GetEntries, COMDAT

; 75   : 	BEGIN_COM_MAP(CGNetUpdater)

	push	ebp
	mov	ebp, esp

; 76   : 		COM_INTERFACE_ENTRY(IGameEvents)
; 77   : 		COM_INTERFACE_ENTRY(IRemoteMasterServerEvents)
; 78   : 	END_COM_MAP()

	mov	eax, OFFSET ?_entries@?1??_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CGNetUpdater::_GetEntries'::`2'::_entries
	pop	ebp
	ret	0
?_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ENDP ; CGNetUpdater::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
;	COMDAT ?_InternalQueryInterface@CGNetUpdater@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CGNetUpdater@@QAEJABU_GUID@@PAPAX@Z PROC ; CGNetUpdater::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 75   : 	BEGIN_COM_MAP(CGNetUpdater)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	?_GetEntries@CGNetUpdater@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; CGNetUpdater::_GetEntries
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
	mov	esp, ebp
	pop	ebp
	ret	8
?_InternalQueryInterface@CGNetUpdater@@QAEJABU_GUID@@PAPAX@Z ENDP ; CGNetUpdater::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\comms\serverbrowser.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGNetUpdater@@QAE@XZ PROC				; CGNetUpdater::CGNetUpdater
; _this$ = ecx

; 1230 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IGameEvents@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0IRemoteMasterServerEvents@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CGNetUpdater@@6BIGameEvents@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CGNetUpdater@@6BIRemoteMasterServerEvents@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0_bstr_t@@QAE@XZ			; _bstr_t::_bstr_t
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0?$_com_ptr_t@V?$_com_IIID@UIRemoteMasterServer@GNETCORELib@@$1?_GUID_e0016343_4124_48a9_9734_93f48700a04a@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >::_com_ptr_t<_com_IIID<GNETCORELib::IRemoteMasterServer,&_GUID_e0016343_4124_48a9_9734_93f48700a04a> >

; 1231 : 	m_dwMasterServerCookie = m_dwMasterServerCookie2 = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0

; 1232 : 	m_bUpdating = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+84], 0

; 1233 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CGNetUpdater@@QAE@XZ ENDP				; CGNetUpdater::CGNetUpdater
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetIP@IHost@GNETCORELib@@QAEKXZ
_TEXT	SEGMENT
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
?GetIP@IHost@GNETCORELib@@QAEKXZ PROC			; GNETCORELib::IHost::GetIP, COMDAT
; _this$ = ecx

; 383  : inline unsigned long IHost::GetIP ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 384  :     unsigned long _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 385  :     HRESULT _hr = get_IP(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 386  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetIP
	push	OFFSET __GUID_b6b03a0c_d547_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetIP:

; 387  :     return _result;

	mov	eax, DWORD PTR __result$[ebp]

; 388  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetIP@IHost@GNETCORELib@@QAEKXZ ENDP			; GNETCORELib::IHost::GetIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetPing@IHost@GNETCORELib@@QAEFXZ
_TEXT	SEGMENT
__hr$ = -12						; size = 4
_this$ = -8						; size = 4
__result$ = -4						; size = 2
?GetPing@IHost@GNETCORELib@@QAEFXZ PROC			; GNETCORELib::IHost::GetPing, COMDAT
; _this$ = ecx

; 369  : inline short IHost::GetPing ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 370  :     short _result = 0;

	xor	eax, eax
	mov	WORD PTR __result$[ebp], ax

; 371  :     HRESULT _hr = get_Ping(&_result);

	lea	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR __hr$[ebp], eax

; 372  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetPing
	push	OFFSET __GUID_b6b03a0c_d547_11d2_9018_004f4e006398
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __hr$[ebp]
	push	ecx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetPing:

; 373  :     return _result;

	mov	ax, WORD PTR __result$[ebp]

; 374  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPing@IHost@GNETCORELib@@QAEFXZ ENDP			; GNETCORELib::IHost::GetPing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z PROC ; GNETCORELib::IRemoteMasterServer::PutGameFilter, COMDAT
; _this$ = ecx

; 344  : inline void IRemoteMasterServer::PutGameFilter ( _bstr_t pVal ) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 345  :     HRESULT _hr = put_GameFilter(pVal);

	lea	ecx, DWORD PTR _pVal$[ebp]
	call	??B_bstr_t@@QBEPA_WXZ			; _bstr_t::operator wchar_t *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+72]
	call	eax
	mov	DWORD PTR __hr$[ebp], eax

; 346  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@PutGameFil
	push	OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __hr$[ebp]
	push	edx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@PutGameFil:

; 347  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pVal$[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z$0:
	lea	ecx, DWORD PTR _pVal$[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PutGameFilter@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IRemoteMasterServer::PutGameFilter
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?Update@IRemoteMasterServer@GNETCORELib@@QAEJXZ
_TEXT	SEGMENT
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
?Update@IRemoteMasterServer@GNETCORELib@@QAEJXZ PROC	; GNETCORELib::IRemoteMasterServer::Update, COMDAT
; _this$ = ecx

; 325  : inline HRESULT IRemoteMasterServer::Update ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 326  :     HRESULT _hr = raw_Update();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	mov	DWORD PTR __hr$[ebp], eax

; 327  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@Update
	push	OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __hr$[ebp]
	push	edx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@Update:

; 328  :     return _hr;

	mov	eax, DWORD PTR __hr$[ebp]

; 329  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Update@IRemoteMasterServer@GNETCORELib@@QAEJXZ ENDP	; GNETCORELib::IRemoteMasterServer::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?PutMaxConcurrentHostQueries@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pVal$ = 8						; size = 4
?PutMaxConcurrentHostQueries@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z PROC ; GNETCORELib::IRemoteMasterServer::PutMaxConcurrentHostQueries, COMDAT
; _this$ = ecx

; 320  : inline void IRemoteMasterServer::PutMaxConcurrentHostQueries ( long pVal ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 321  :     HRESULT _hr = put_MaxConcurrentHostQueries(pVal);

	mov	eax, DWORD PTR _pVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+56]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 322  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN2@PutMaxConc
	push	OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN2@PutMaxConc:

; 323  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PutMaxConcurrentHostQueries@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ENDP ; GNETCORELib::IRemoteMasterServer::PutMaxConcurrentHostQueries
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?PutPort@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pVal$ = 8						; size = 4
?PutPort@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z PROC	; GNETCORELib::IRemoteMasterServer::PutPort, COMDAT
; _this$ = ecx

; 308  : inline void IRemoteMasterServer::PutPort ( long pVal ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 309  :     HRESULT _hr = put_Port(pVal);

	mov	eax, DWORD PTR _pVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+48]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 310  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN2@PutPort
	push	OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN2@PutPort:

; 311  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PutPort@IRemoteMasterServer@GNETCORELib@@QAEXJ@Z ENDP	; GNETCORELib::IRemoteMasterServer::PutPort
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z PROC ; GNETCORELib::IRemoteMasterServer::PutServerName, COMDAT
; _this$ = ecx

; 296  : inline void IRemoteMasterServer::PutServerName ( _bstr_t pVal ) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 297  :     HRESULT _hr = put_ServerName(pVal);

	lea	ecx, DWORD PTR _pVal$[ebp]
	call	??B_bstr_t@@QBEPA_WXZ			; _bstr_t::operator wchar_t *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	mov	DWORD PTR __hr$[ebp], eax

; 298  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@PutServerN
	push	OFFSET __GUID_e0016343_4124_48a9_9734_93f48700a04a
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __hr$[ebp]
	push	edx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@PutServerN:

; 299  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pVal$[ebp]
	call	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z$0:
	lea	ecx, DWORD PTR _pVal$[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PutServerName@IRemoteMasterServer@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IRemoteMasterServer::PutServerName
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetMOTD@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetMOTD@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IMasterServer::GetMOTD, COMDAT
; _this$ = ecx

; 195  : inline _bstr_t IMasterServer::GetMOTD ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 196  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 197  :     HRESULT _hr = get_MOTD(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 198  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetMOTD
	push	OFFSET __GUID_dda57127_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetMOTD:

; 199  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMOTD@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IMasterServer::GetMOTD
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetVersion@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVersion@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IMasterServer::GetVersion, COMDAT
; _this$ = ecx

; 188  : inline _bstr_t IMasterServer::GetVersion ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 189  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 190  :     HRESULT _hr = get_Version(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 191  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetVersion
	push	OFFSET __GUID_dda57127_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetVersion:

; 192  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 193  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetVersion@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IMasterServer::GetVersion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetAdminEmail@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAdminEmail@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IMasterServer::GetAdminEmail, COMDAT
; _this$ = ecx

; 181  : inline _bstr_t IMasterServer::GetAdminEmail ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 182  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 183  :     HRESULT _hr = get_AdminEmail(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 184  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetAdminEm
	push	OFFSET __GUID_dda57127_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetAdminEm:

; 185  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 186  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetAdminEmail@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IMasterServer::GetAdminEmail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetLocation@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLocation@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IMasterServer::GetLocation, COMDAT
; _this$ = ecx

; 174  : inline _bstr_t IMasterServer::GetLocation ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 175  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 176  :     HRESULT _hr = get_Location(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 177  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetLocatio
	push	OFFSET __GUID_dda57127_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetLocatio:

; 178  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 179  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetLocation@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IMasterServer::GetLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetName@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetName@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IMasterServer::GetName, COMDAT
; _this$ = ecx

; 167  : inline _bstr_t IMasterServer::GetName ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 168  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 169  :     HRESULT _hr = get_Name(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 170  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetName
	push	OFFSET __GUID_dda57127_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetName:

; 171  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetName@IMasterServer@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IMasterServer::GetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetServerName@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetServerName@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC ; GNETCORELib::IGame::GetServerName, COMDAT
; _this$ = ecx

; 106  : inline _bstr_t IGame::GetServerName ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 107  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 108  :     HRESULT _hr = get_ServerName(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+44]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 109  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetServerN
	push	OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetServerN:

; 110  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 111  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetServerName@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP ; GNETCORELib::IGame::GetServerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetLocation@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLocation@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC	; GNETCORELib::IGame::GetLocation, COMDAT
; _this$ = ecx

; 99   : inline _bstr_t IGame::GetLocation ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 100  :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 101  :     HRESULT _hr = get_Location(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 102  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetLocatio
	push	OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetLocatio:

; 103  :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetLocation@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP	; GNETCORELib::IGame::GetLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetMaxPlayers@IGame@GNETCORELib@@QAEFXZ
_TEXT	SEGMENT
__hr$ = -12						; size = 4
_this$ = -8						; size = 4
__result$ = -4						; size = 2
?GetMaxPlayers@IGame@GNETCORELib@@QAEFXZ PROC		; GNETCORELib::IGame::GetMaxPlayers, COMDAT
; _this$ = ecx

; 85   : inline short IGame::GetMaxPlayers ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 86   :     short _result = 0;

	xor	eax, eax
	mov	WORD PTR __result$[ebp], ax

; 87   :     HRESULT _hr = get_MaxPlayers(&_result);

	lea	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	mov	DWORD PTR __hr$[ebp], eax

; 88   :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetMaxPlay
	push	OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __hr$[ebp]
	push	ecx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetMaxPlay:

; 89   :     return _result;

	mov	ax, WORD PTR __result$[ebp]

; 90   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxPlayers@IGame@GNETCORELib@@QAEFXZ ENDP		; GNETCORELib::IGame::GetMaxPlayers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
__result$ = -12						; size = 4
__hr$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ PROC	; GNETCORELib::IGame::GetType, COMDAT
; _this$ = ecx

; 78   : inline _bstr_t IGame::GetType ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 79   :     BSTR _result = 0;

	mov	DWORD PTR __result$[ebp], 0

; 80   :     HRESULT _hr = get_Type(&_result);

	lea	eax, DWORD PTR __result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	mov	DWORD PTR __hr$[ebp], eax

; 81   :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetType
	push	OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __hr$[ebp]
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetType:

; 82   :     return _bstr_t(_result, false);

	push	0
	mov	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::_bstr_t
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 83   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetType@IGame@GNETCORELib@@QAE?AV_bstr_t@@XZ ENDP	; GNETCORELib::IGame::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\build\release_win32\ui\comms\core.tli
;	COMDAT ?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ
_TEXT	SEGMENT
__hr$ = -12						; size = 4
_this$ = -8						; size = 4
__result$ = -4						; size = 2
?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ PROC		; GNETCORELib::IGame::GetNumPlayers, COMDAT
; _this$ = ecx

; 71   : inline short IGame::GetNumPlayers ( ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 72   :     short _result = 0;

	xor	eax, eax
	mov	WORD PTR __result$[ebp], ax

; 73   :     HRESULT _hr = get_NumPlayers(&_result);

	lea	ecx, DWORD PTR __result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	DWORD PTR __hr$[ebp], eax

; 74   :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	cmp	DWORD PTR __hr$[ebp], 0
	jge	SHORT $LN1@GetNumPlay
	push	OFFSET __GUID_dda57123_d4e3_11d2_9018_004f4e006398
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __hr$[ebp]
	push	ecx
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$LN1@GetNumPlay:

; 75   :     return _result;

	mov	ax, WORD PTR __result$[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumPlayers@IGame@GNETCORELib@@QAEFXZ ENDP		; GNETCORELib::IGame::GetNumPlayers
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IRemoteMasterServerEvents@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IRemoteMasterServerEvents@@QAE@XZ PROC		; IRemoteMasterServerEvents::IRemoteMasterServerEvents, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IRemoteMasterServerEvents@@QAE@XZ ENDP		; IRemoteMasterServerEvents::IRemoteMasterServerEvents
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IGameEvents@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IGameEvents@@QAE@XZ PROC				; IGameEvents::IGameEvents, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IGameEvents@@QAE@XZ ENDP				; IGameEvents::IGameEvents
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z PROC	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	esp, ebp
	pop	ebp
	ret	4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ENDP	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	esp, ebp
	pop	ebp
	ret	0
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CComObjectRootBase@ATL@@QAE@XZ	; ATL::CComObjectRootBase::CComObjectRootBase
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CComObjectRootBase@ATL@@QAE@XZ	; ATL::CComObjectRootBase::~CComObjectRootBase
__ehhandler$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease, COMDAT
; _this$ = ecx

; 2663 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2664 : #ifdef _DEBUG
; 2665 : 		LONG nRef = _ThreadModel::Decrement(&m_dwRef);
; 2666 : 		if (nRef < -(LONG_MAX / 2))
; 2667 : 		{
; 2668 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));
; 2669 : 		}
; 2670 : 		return nRef;
; 2671 : #else
; 2672 : 		return _ThreadModel::Decrement(&m_dwRef);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Decrement

; 2673 : #endif
; 2674 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef, COMDAT
; _this$ = ecx

; 2658 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN2@InternalAd:

; 2659 : 		ATLASSUME(m_dwRef != -1L);

	xor	eax, eax
	jne	SHORT $LN2@InternalAd

; 2660 : 		return _ThreadModel::Increment(&m_dwRef);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Increment

; 2661 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx

; 2654 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2655 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComObjectRootBase@ATL@@QAE@XZ	; ATL::CComObjectRootBase::~CComObjectRootBase
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_hRes$ = -4						; size = 4
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectRootBase::InternalQueryInterface, COMDAT

; 2470 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 2471 : 		// Only Assert here. AtlInternalQueryInterface will return the correct HRESULT if ppvObject == NULL
; 2472 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2473 : 		ATLASSERT(ppvObject != NULL);
; 2474 : #endif
; 2475 : 		ATLASSERT(pThis != NULL);
; 2476 : 		// First entry in the com map should be a simple map entry
; 2477 : 		ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);
; 2478 : 	#if defined(_ATL_DEBUG_INTERFACES) || defined(_ATL_DEBUG_QI)
; 2479 : 		LPCTSTR pszClassName = (LPCTSTR) pEntries[-1].dw;
; 2480 : 	#endif // _ATL_DEBUG_INTERFACES
; 2481 : 		HRESULT hRes = AtlInternalQueryInterface(pThis, pEntries, iid, ppvObject);

	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEntries$[ebp]
	push	edx
	mov	eax, DWORD PTR _pThis$[ebp]
	push	eax
	call	?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ; ATL::AtlInternalQueryInterface
	mov	DWORD PTR _hRes$[ebp], eax

; 2482 : 	#ifdef _ATL_DEBUG_INTERFACES
; 2483 : 		_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, pszClassName, iid);
; 2484 : 	#endif // _ATL_DEBUG_INTERFACES
; 2485 : 		return _ATLDUMPIID(iid, pszClassName, hRes);

	mov	eax, DWORD PTR _hRes$[ebp]

; 2486 : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ PROC	; ATL::CComObjectRootBase::FinalRelease, COMDAT
; _this$ = ecx

; 2441 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2442 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP	; ATL::CComObjectRootBase::FinalRelease
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ??1CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::~CComObjectRootBase, COMDAT
; _this$ = ecx

; 2428 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2429 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::~CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcom.h
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::CComObjectRootBase, COMDAT
; _this$ = ecx

; 2423 : 	CComObjectRootBase()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2424 : 	{
; 2425 : 		m_dwRef = 0L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 2426 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>, COMDAT
; _this$ = ecx

; 319  :     CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>

; 320  :     {
; 321  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ PROC ; ATL::CComPtrBase<IConnectionPoint>::operator->, COMDAT
; _this$ = ecx

; 196  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 197  :         ATLASSERT(p!=NULL);
; 198  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 199  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ENDP ; ATL::CComPtrBase<IConnectionPoint>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ PROC ; ATL::CComPtrBase<IConnectionPoint>::operator&, COMDAT
; _this$ = ecx

; 191  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 194  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ENDP ; ATL::CComPtrBase<IConnectionPoint>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>, COMDAT
; _this$ = ecx

; 175  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  :         if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@CComPtrBas:

; 178  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>, COMDAT
; _this$ = ecx

; 156  :     CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  :     {
; 158  :         p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 159  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 319  :     CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>

; 320  :     {
; 321  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator->, COMDAT
; _this$ = ecx

; 196  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 197  :         ATLASSERT(p!=NULL);
; 198  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 199  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator&, COMDAT
; _this$ = ecx

; 191  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 194  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 175  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  :         if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@CComPtrBas:

; 178  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 156  :     CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  :     {
; 158  :         p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 159  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT
tv76 = -4						; size = 4
_rguid1$ = 8						; size = 4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z PROC		; ATL::InlineIsEqualUnknown, COMDAT

; 701  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 702  :    return (
; 703  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 704  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 705  : #ifdef _ATL_BYTESWAP
; 706  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 707  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 708  : #else
; 709  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 710  : 	  ((PLONG) &rguid1)[3] == 0x46000000);

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [ecx+eax], 0
	jne	SHORT $LN3@InlineIsEq
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [eax+edx], 0
	jne	SHORT $LN3@InlineIsEq
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [edx+ecx], 192		; 000000c0H
	jne	SHORT $LN3@InlineIsEq
	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [ecx+eax], 1174405120		; 46000000H
	jne	SHORT $LN3@InlineIsEq
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
	mov	DWORD PTR tv76[ebp], 0
$LN4@InlineIsEq:
	mov	eax, DWORD PTR tv76[ebp]

; 711  : #endif
; 712  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ENDP		; ATL::InlineIsEqualUnknown
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.inl
;	COMDAT ?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
tv151 = -20						; size = 4
tv95 = -16						; size = 4
_pCPC$ = -12						; size = 4
_pCP$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pUnkCP$ = 8						; size = 4
_iid$ = 12						; size = 4
_dw$ = 16						; size = 4
?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z PROC	; ATL::AtlUnadvise, COMDAT

; 50   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 51   : 	if(pUnkCP == NULL)

	cmp	DWORD PTR _pUnkCP$[ebp], 0
	jne	SHORT $LN3@AtlUnadvis

; 52   : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$LN4@AtlUnadvis
$LN3@AtlUnadvis:

; 53   : 
; 54   : 	CComPtr<IConnectionPointContainer> pCPC;

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>

; 55   : 	CComPtr<IConnectionPoint> pCP;

	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>

; 56   : 	HRESULT hRes = pUnkCP->QueryInterface(__uuidof(IConnectionPointContainer), (void**)&pCPC);

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
	push	eax
	push	OFFSET __GUID_b196b284_bab4_101a_b69c_00aa00341d07
	mov	eax, DWORD PTR _pUnkCP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pUnkCP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	mov	DWORD PTR _hRes$[ebp], eax

; 57   : 	if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $LN2@AtlUnadvis

; 58   : 		hRes = pCPC->FindConnectionPoint(iid, &pCP);

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
	mov	DWORD PTR tv95[ebp], eax
	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	mov	eax, DWORD PTR tv95[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	mov	DWORD PTR _hRes$[ebp], eax
$LN2@AtlUnadvis:

; 59   : 	if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $LN1@AtlUnadvis

; 60   : 		hRes = pCP->Unadvise(dw);

	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR _dw$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv151[ebp]
	push	ecx
	mov	edx, DWORD PTR tv151[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	mov	DWORD PTR _hRes$[ebp], eax
$LN1@AtlUnadvis:

; 61   : 	return hRes;

	mov	edx, DWORD PTR _hRes$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T1[ebp]
$LN4@AtlUnadvis:

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z ENDP	; ATL::AtlUnadvise
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.inl
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
tv151 = -20						; size = 4
tv95 = -16						; size = 4
_pCPC$ = -12						; size = 4
_pCP$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pUnkCP$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_iid$ = 16						; size = 4
_pdw$ = 20						; size = 4
?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z PROC	; ATL::AtlAdvise, COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 33   : 	if(pUnkCP == NULL)

	cmp	DWORD PTR _pUnkCP$[ebp], 0
	jne	SHORT $LN3@AtlAdvise

; 34   : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$LN4@AtlAdvise
$LN3@AtlAdvise:

; 35   : 
; 36   : 	CComPtr<IConnectionPointContainer> pCPC;

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>

; 37   : 	CComPtr<IConnectionPoint> pCP;

	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>

; 38   : 	HRESULT hRes = pUnkCP->QueryInterface(__uuidof(IConnectionPointContainer), (void**)&pCPC);

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
	push	eax
	push	OFFSET __GUID_b196b284_bab4_101a_b69c_00aa00341d07
	mov	eax, DWORD PTR _pUnkCP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pUnkCP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	mov	DWORD PTR _hRes$[ebp], eax

; 39   : 	if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $LN2@AtlAdvise

; 40   : 		hRes = pCPC->FindConnectionPoint(iid, &pCP);

	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
	mov	DWORD PTR tv95[ebp], eax
	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	mov	eax, DWORD PTR tv95[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	mov	DWORD PTR _hRes$[ebp], eax
$LN2@AtlAdvise:

; 41   : 	if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $LN1@AtlAdvise

; 42   : 		hRes = pCP->Advise(pUnk, pdw);

	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR _pdw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pUnk$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv151[ebp]
	push	edx
	mov	eax, DWORD PTR tv151[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	mov	DWORD PTR _hRes$[ebp], eax
$LN1@AtlAdvise:

; 43   : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _pCP$[ebp]
	call	??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
	lea	ecx, DWORD PTR _pCPC$[ebp]
	call	??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T1[ebp]
$LN4@AtlAdvise:

; 44   : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z ENDP	; ATL::AtlAdvise
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.inl
;	COMDAT ?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z
_TEXT	SEGMENT
_msg$ = -40						; size = 28
_bUnicode$1 = -12					; size = 4
_bRet$2 = -8						; size = 4
_dwRet$ = -4						; size = 4
_hEvent$ = 8						; size = 4
?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z PROC		; ATL::AtlWaitWithMessageLoop, COMDAT

; 248  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
$LN12@AtlWaitWit:

; 249  : 	DWORD dwRet;
; 250  : 	MSG msg;
; 251  : 
; 252  : 	while(1)

	mov	eax, 1
	test	eax, eax
	je	$LN11@AtlWaitWit

; 253  : 	{
; 254  : 		dwRet = MsgWaitForMultipleObjectsEx(1, &hEvent, INFINITE, QS_ALLINPUT, MWMO_INPUTAVAILABLE);

	push	4
	push	7423					; 00001cffH
	push	-1
	lea	ecx, DWORD PTR _hEvent$[ebp]
	push	ecx
	push	1
	call	DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
	mov	DWORD PTR _dwRet$[ebp], eax

; 255  : 
; 256  : 		if (dwRet == WAIT_OBJECT_0)

	cmp	DWORD PTR _dwRet$[ebp], 0
	jne	SHORT $LN10@AtlWaitWit

; 257  : 			return TRUE;    // The event was signaled

	mov	eax, 1
	jmp	$LN13@AtlWaitWit
$LN10@AtlWaitWit:

; 258  : 
; 259  : 		if (dwRet != WAIT_OBJECT_0 + 1)

	cmp	DWORD PTR _dwRet$[ebp], 1
	je	SHORT $LN8@AtlWaitWit

; 260  : 			break;          // Something else happened

	jmp	$LN11@AtlWaitWit
$LN8@AtlWaitWit:

; 261  : 
; 262  : 		// There is one or more window message available. Dispatch them
; 263  : 		while(PeekMessage(&msg,0,0,0,PM_NOREMOVE))

	push	0
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__PeekMessageA@20
	test	eax, eax
	je	$LN7@AtlWaitWit

; 264  : 		{
; 265  : 			// check for unicode window so we call the appropriate functions
; 266  : 			BOOL bUnicode = ::IsWindowUnicode(msg.hwnd);

	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindowUnicode@4
	mov	DWORD PTR _bUnicode$1[ebp], eax

; 267  : 			BOOL bRet;
; 268  : 
; 269  : 			if (bUnicode)

	cmp	DWORD PTR _bUnicode$1[ebp], 0
	je	SHORT $LN6@AtlWaitWit

; 270  : 				bRet = ::GetMessageW(&msg, NULL, 0, 0);

	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMessageW@16
	mov	DWORD PTR _bRet$2[ebp], eax

; 271  : 			else

	jmp	SHORT $LN5@AtlWaitWit
$LN6@AtlWaitWit:

; 272  : 				bRet = ::GetMessageA(&msg, NULL, 0, 0);

	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMessageA@16
	mov	DWORD PTR _bRet$2[ebp], eax
$LN5@AtlWaitWit:

; 273  : 
; 274  : 			if (bRet > 0)

	cmp	DWORD PTR _bRet$2[ebp], 0
	jle	SHORT $LN4@AtlWaitWit

; 275  : 			{
; 276  : 				::TranslateMessage(&msg);

	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4

; 277  : 
; 278  : 				if (bUnicode)

	cmp	DWORD PTR _bUnicode$1[ebp], 0
	je	SHORT $LN3@AtlWaitWit

; 279  : 					::DispatchMessageW(&msg);

	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	DWORD PTR __imp__DispatchMessageW@4

; 280  : 				else

	jmp	SHORT $LN4@AtlWaitWit
$LN3@AtlWaitWit:

; 281  : 					::DispatchMessageA(&msg);

	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__DispatchMessageA@4
$LN4@AtlWaitWit:

; 282  : 			}
; 283  : 
; 284  : 			if (WaitForSingleObject(hEvent, 0) == WAIT_OBJECT_0)

	push	0
	mov	eax, DWORD PTR _hEvent$[ebp]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	test	eax, eax
	jne	SHORT $LN1@AtlWaitWit

; 285  : 				return TRUE; // Event is now signaled.

	mov	eax, 1
	jmp	SHORT $LN13@AtlWaitWit
$LN1@AtlWaitWit:

; 286  : 		}

	jmp	$LN8@AtlWaitWit
$LN7@AtlWaitWit:

; 287  : 	}

	jmp	$LN12@AtlWaitWit
$LN11@AtlWaitWit:

; 288  : 	return FALSE;

	xor	eax, eax
$LN13@AtlWaitWit:

; 289  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z ENDP		; ATL::AtlWaitWithMessageLoop
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.inl
;	COMDAT ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_bBlind$1 = -20						; size = 4
tv80 = -16						; size = 4
_pUnk$2 = -12						; size = 4
_pUnk$3 = -8						; size = 4
_hRes$ = -4						; size = 4
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z PROC ; ATL::AtlInternalQueryInterface, COMDAT

; 300  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 301  : 	ATLASSERT(pThis != NULL);
; 302  : 	ATLASSERT(pEntries!= NULL);
; 303  :  
; 304  : 	if(pThis == NULL || pEntries == NULL)

	cmp	DWORD PTR _pThis$[ebp], 0
	je	SHORT $LN12@AtlInterna
	cmp	DWORD PTR _pEntries$[ebp], 0
	jne	SHORT $LN13@AtlInterna
$LN12@AtlInterna:

; 305  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$LN14@AtlInterna
$LN13@AtlInterna:

; 306  : 
; 307  : 	// First entry in the com map should be a simple map entry
; 308  : 	ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);
; 309  :  
; 310  : 	if (ppvObject == NULL)

	cmp	DWORD PTR _ppvObject$[ebp], 0
	jne	SHORT $LN11@AtlInterna

; 311  : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$LN14@AtlInterna
$LN11@AtlInterna:

; 312  : 
; 313  : 	if (InlineIsEqualUnknown(iid)) // use first interface

	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
	test	eax, eax
	je	SHORT $LN10@AtlInterna

; 314  : 	{
; 315  : 		IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

	mov	ecx, DWORD PTR _pEntries$[ebp]
	mov	edx, DWORD PTR _pThis$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pUnk$3[ebp], edx

; 316  : 		pUnk->AddRef();

	mov	eax, DWORD PTR _pUnk$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pUnk$3[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax

; 317  : 		*ppvObject = pUnk;

	mov	ecx, DWORD PTR _ppvObject$[ebp]
	mov	edx, DWORD PTR _pUnk$3[ebp]
	mov	DWORD PTR [ecx], edx

; 318  : 		return S_OK;

	xor	eax, eax
	jmp	$LN14@AtlInterna
$LN10@AtlInterna:

; 319  : 	}
; 320  :  
; 321  : 	HRESULT hRes;

	jmp	SHORT $LN9@AtlInterna
$LN8@AtlInterna:

; 322  :  
; 323  : 	for (;; pEntries++)

	mov	eax, DWORD PTR _pEntries$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pEntries$[ebp], eax
$LN9@AtlInterna:

; 324  : 	{
; 325  : 		if (pEntries->pFunc == NULL)

	mov	ecx, DWORD PTR _pEntries$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN6@AtlInterna

; 326  : 		{
; 327  : 			hRes = E_NOINTERFACE;

	mov	DWORD PTR _hRes$[ebp], -2147467262	; 80004002H

; 328  : 			break;

	jmp	$LN7@AtlInterna
$LN6@AtlInterna:

; 329  : 		}
; 330  : 
; 331  : 		BOOL bBlind = (pEntries->piid == NULL);

	mov	edx, DWORD PTR _pEntries$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN16@AtlInterna
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN17@AtlInterna
$LN16@AtlInterna:
	mov	DWORD PTR tv80[ebp], 0
$LN17@AtlInterna:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR _bBlind$1[ebp], eax

; 332  : 		if (bBlind || InlineIsEqualGUID(*(pEntries->piid), iid))

	cmp	DWORD PTR _bBlind$1[ebp], 0
	jne	SHORT $LN4@AtlInterna
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEntries$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_InlineIsEqualGUID
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@AtlInterna
$LN4@AtlInterna:

; 333  : 		{
; 334  : 			if (pEntries->pFunc == _ATL_SIMPLEMAPENTRY) //offset

	mov	ecx, DWORD PTR _pEntries$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	SHORT $LN3@AtlInterna

; 335  : 			{
; 336  : 				ATLASSERT(!bBlind);
; 337  : 				IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

	mov	edx, DWORD PTR _pEntries$[ebp]
	mov	eax, DWORD PTR _pThis$[ebp]
	add	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _pUnk$2[ebp], eax

; 338  : 				pUnk->AddRef();

	mov	ecx, DWORD PTR _pUnk$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pUnk$2[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx

; 339  : 				*ppvObject = pUnk;

	mov	edx, DWORD PTR _ppvObject$[ebp]
	mov	eax, DWORD PTR _pUnk$2[ebp]
	mov	DWORD PTR [edx], eax

; 340  : 				return S_OK;

	xor	eax, eax
	jmp	SHORT $LN14@AtlInterna
$LN3@AtlInterna:

; 341  : 			}
; 342  :  
; 343  : 			// Actual function call
; 344  :  
; 345  : 			hRes = pEntries->pFunc(pThis,
; 346  : 				iid, ppvObject, pEntries->dw);

	mov	ecx, DWORD PTR _pEntries$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pThis$[ebp]
	push	edx
	mov	eax, DWORD PTR _pEntries$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	mov	DWORD PTR _hRes$[ebp], eax

; 347  : 			if (hRes == S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	jne	SHORT $LN2@AtlInterna

; 348  : 				return S_OK;

	xor	eax, eax
	jmp	SHORT $LN14@AtlInterna
$LN2@AtlInterna:

; 349  : 			if (!bBlind && FAILED(hRes))

	cmp	DWORD PTR _bBlind$1[ebp], 0
	jne	SHORT $LN5@AtlInterna
	cmp	DWORD PTR _hRes$[ebp], 0
	jge	SHORT $LN5@AtlInterna

; 350  : 				break;

	jmp	SHORT $LN7@AtlInterna
$LN5@AtlInterna:

; 351  : 		}
; 352  : 	}

	jmp	$LN8@AtlInterna
$LN7@AtlInterna:

; 353  :  
; 354  : 	*ppvObject = NULL;

	mov	edx, DWORD PTR _ppvObject$[ebp]
	mov	DWORD PTR [edx], 0

; 355  :  
; 356  : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$LN14@AtlInterna:

; 357  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ENDP ; ATL::AtlInternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Decrement, COMDAT

; 441  : 	{

	push	ebp
	mov	ebp, esp

; 442  : 		return ::InterlockedDecrement(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedDecrement@4

; 443  : 	}

	pop	ebp
	ret	4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Decrement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Increment, COMDAT

; 437  : 	{

	push	ebp
	mov	ebp, esp

; 438  : 		return ::InterlockedIncrement(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedIncrement@4

; 439  : 	}

	pop	ebp
	ret	4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Increment
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC				; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 1656 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :     ::SysFreeString(m_str);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4

; 1658 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ ; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ ; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 179  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		if (!m_bInitialized)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	jne	SHORT $LN1@CComSafeDe

; 181  : 		{
; 182  : 			return;

	jmp	SHORT $LN2@CComSafeDe
$LN1@CComSafeDe:

; 183  : 		}
; 184  : 		m_bInitialized = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+24], 0

; 185  : 		CComCriticalSection::Term();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Term@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Term
$LN2@CComSafeDe:

; 186  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::~CComCriticalSection
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::CComCriticalSection
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 176  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 144  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		DeleteCriticalSection(&m_sec);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 146  : 		return S_OK;

	xor	eax, eax

; 147  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 115  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 109  : 	CComCriticalSection() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 	{
; 111  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 112  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_com_error@@UAEPAXI@Z PROC				; _com_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_com_error@@UAEPAXI@Z ENDP				; _com_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comdef.h
;	COMDAT ?Error@_com_error@@QBEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Error@_com_error@@QBEJXZ PROC				; _com_error::Error, COMDAT
; _this$ = ecx

; 313  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 314  :     return m_hresult;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 315  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Error@_com_error@@QBEJXZ ENDP				; _com_error::Error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comdef.h
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_com_error@@UAE@XZ PROC				; _com_error::~_com_error, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_com_error@@6B@

; 295  :     if (m_perrinfo != NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN2@com_error

; 296  :         m_perrinfo->Release();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
$LN2@com_error:

; 297  :     }
; 298  :     if (m_pszMsg != NULL) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN3@com_error

; 299  :         LocalFree((HLOCAL)m_pszMsg);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__LocalFree@4
$LN3@com_error:

; 300  :     }
; 301  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1_com_error@@UAE@XZ ENDP				; _com_error::~_com_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comdef.h
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_that$ = 8						; size = 4
??0_com_error@@QAE@ABV0@@Z PROC				; _com_error::_com_error, COMDAT
; _this$ = ecx

; 287  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_com_error@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 288  :     if (m_perrinfo != NULL) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN2@com_error

; 289  :         m_perrinfo->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
$LN2@com_error:

; 290  :     }
; 291  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_com_error@@QAE@ABV0@@Z ENDP				; _com_error::_com_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comdef.h
;	COMDAT ??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hr$ = 8						; size = 4
_perrinfo$ = 12						; size = 4
_fAddRef$ = 16						; size = 1
??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z PROC		; _com_error::_com_error, COMDAT
; _this$ = ecx

; 279  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_com_error@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _perrinfo$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 280  :     if (m_perrinfo != NULL && fAddRef) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@com_error
	movzx	ecx, BYTE PTR _fAddRef$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@com_error

; 281  :         m_perrinfo->AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
$LN2@com_error:

; 282  :     }
; 283  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z ENDP		; _com_error::_com_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
?_Compare@_bstr_t@@ABEHABV1@@Z PROC			; _bstr_t::_Compare, COMDAT
; _this$ = ecx

; 646  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  :     if (m_Data == str.m_Data) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _str$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN7@Compare

; 648  :         return 0;

	xor	eax, eax
	jmp	SHORT $LN8@Compare
$LN7@Compare:

; 649  :     }
; 650  : 
; 651  :     if (m_Data == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@Compare

; 652  :         if (str.length() == 0) {

	mov	ecx, DWORD PTR _str$[ebp]
	call	?length@_bstr_t@@QBEIXZ			; _bstr_t::length
	test	eax, eax
	jne	SHORT $LN5@Compare

; 653  :             return 0;

	xor	eax, eax
	jmp	SHORT $LN8@Compare

; 654  :         }
; 655  :         else {

	jmp	SHORT $LN6@Compare
$LN5@Compare:

; 656  :             return -1;

	or	eax, -1
	jmp	SHORT $LN8@Compare
$LN6@Compare:

; 657  :         }
; 658  :     }
; 659  : 
; 660  :     if (str.m_Data == NULL){

	mov	ecx, DWORD PTR _str$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN3@Compare

; 661  :         if (this->length() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@_bstr_t@@QBEIXZ			; _bstr_t::length
	test	eax, eax
	jne	SHORT $LN2@Compare

; 662  :             return 0;

	xor	eax, eax
	jmp	SHORT $LN8@Compare

; 663  :         }
; 664  :         else {

	jmp	SHORT $LN3@Compare
$LN2@Compare:

; 665  :             return 1;

	mov	eax, 1
	jmp	SHORT $LN8@Compare
$LN3@Compare:

; 666  :         }
; 667  :     }
; 668  : 
; 669  :     return m_Data->Compare(*str.m_Data);

	mov	edx, DWORD PTR _str$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?Compare@Data_t@_bstr_t@@QBEHABV12@@Z	; _bstr_t::Data_t::Compare
$LN8@Compare:

; 670  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compare@_bstr_t@@ABEHABV1@@Z ENDP			; _bstr_t::_Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Free@_bstr_t@@AAEXXZ PROC				; _bstr_t::_Free, COMDAT
; _this$ = ecx

; 636  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 637  :     if (m_Data != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Free

; 638  :         m_Data->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release

; 639  :         m_Data = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
$LN2@Free:

; 640  :     }
; 641  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Free@_bstr_t@@AAEXXZ ENDP				; _bstr_t::_Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AddRef@_bstr_t@@AAEXXZ PROC				; _bstr_t::_AddRef, COMDAT
; _this$ = ecx

; 627  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  :     if (m_Data != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@AddRef

; 629  :         m_Data->AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?AddRef@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::AddRef
$LN2@AddRef:

; 630  :     }
; 631  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?_AddRef@_bstr_t@@AAEXXZ ENDP				; _bstr_t::_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GData_t@_bstr_t@@AAEPAXI@Z PROC			; _bstr_t::Data_t::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Data_t@_bstr_t@@AAE@XZ		; _bstr_t::Data_t::~Data_t
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GData_t@_bstr_t@@AAEPAXI@Z ENDP			; _bstr_t::Data_t::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Free@Data_t@_bstr_t@@AAEXXZ PROC			; _bstr_t::Data_t::_Free, COMDAT
; _this$ = ecx

; 929  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 930  :     if (m_wstr != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Free

; 931  :         ::SysFreeString(m_wstr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SysFreeString@4

; 932  :         m_wstr = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@Free:

; 933  :     }
; 934  : 
; 935  :     if (m_str != NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN3@Free

; 936  :         delete [] m_str;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 937  :         m_str = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN3@Free:

; 938  :     }
; 939  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Free@Data_t@_bstr_t@@AAEXXZ ENDP			; _bstr_t::Data_t::_Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Data_t@_bstr_t@@AAE@XZ PROC				; _bstr_t::Data_t::~Data_t, COMDAT
; _this$ = ecx

; 922  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 923  :     _Free();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free@Data_t@_bstr_t@@AAEXXZ		; _bstr_t::Data_t::_Free

; 924  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1Data_t@_bstr_t@@AAE@XZ ENDP				; _bstr_t::Data_t::~Data_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??2Data_t@_bstr_t@@SAPAXI@Z
_TEXT	SEGMENT
_sz$ = 8						; size = 4
??2Data_t@_bstr_t@@SAPAXI@Z PROC			; _bstr_t::Data_t::operator new, COMDAT

; 914  : {

	push	ebp
	mov	ebp, esp

; 915  :     return ::operator new(sz);

	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 916  : }

	pop	ebp
	ret	0
??2Data_t@_bstr_t@@SAPAXI@Z ENDP			; _bstr_t::Data_t::operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT
tv82 = -44						; size = 4
tv81 = -40						; size = 4
tv75 = -36						; size = 4
tv93 = -32						; size = 4
tv92 = -28						; size = 4
_this$ = -24						; size = 4
_l1$ = -20						; size = 4
_l2$ = -16						; size = 4
_bstr2$ = -12						; size = 4
_bstr1$ = -8						; size = 4
_len$ = -4						; size = 4
_str$ = 8						; size = 4
?Compare@Data_t@_bstr_t@@QBEHABV12@@Z PROC		; _bstr_t::Data_t::Compare, COMDAT
; _this$ = ecx

; 877  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 878  :     // Dont need to check for NULL here, because 
; 879  :     // SysStringLen will return 0 if you pass in NULL
; 880  :     const unsigned int l1 = ::SysStringLen(m_wstr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysStringLen@4
	mov	DWORD PTR _l1$[ebp], eax

; 881  :     const unsigned int l2 = ::SysStringLen(str.m_wstr);

	mov	edx, DWORD PTR _str$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SysStringLen@4
	mov	DWORD PTR _l2$[ebp], eax

; 882  : 
; 883  :     unsigned int len = l1;

	mov	ecx, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _len$[ebp], ecx

; 884  :     if (len > l2) {

	mov	edx, DWORD PTR _len$[ebp]
	cmp	edx, DWORD PTR _l2$[ebp]
	jbe	SHORT $LN4@Compare

; 885  :         len = l2;

	mov	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _len$[ebp], eax
$LN4@Compare:

; 886  :     }
; 887  : 
; 888  :     BSTR bstr1 = m_wstr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _bstr1$[ebp], edx

; 889  :     BSTR bstr2 = str.m_wstr;

	mov	eax, DWORD PTR _str$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _bstr2$[ebp], ecx
$LN3@Compare:

; 890  : 
; 891  :     while (len-- > 0) {

	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR tv75[ebp], 0
	jbe	SHORT $LN2@Compare

; 892  :         if (*bstr1++ != *bstr2++) {

	mov	ecx, DWORD PTR _bstr1$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR tv81[ebp], edx
	mov	eax, DWORD PTR _bstr2$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv82[ebp], ecx
	mov	edx, DWORD PTR _bstr2$[ebp]
	add	edx, 2
	mov	DWORD PTR _bstr2$[ebp], edx
	mov	eax, DWORD PTR _bstr1$[ebp]
	add	eax, 2
	mov	DWORD PTR _bstr1$[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	cmp	ecx, DWORD PTR tv82[ebp]
	je	SHORT $LN1@Compare

; 893  :             return bstr1[-1] - bstr2[-1];

	mov	edx, 2
	imul	edx, -1
	mov	eax, DWORD PTR _bstr1$[ebp]
	movzx	eax, WORD PTR [eax+edx]
	mov	ecx, 2
	imul	ecx, -1
	mov	edx, DWORD PTR _bstr2$[ebp]
	movzx	ecx, WORD PTR [edx+ecx]
	sub	eax, ecx
	jmp	SHORT $LN5@Compare
$LN1@Compare:

; 894  :         }
; 895  :     }

	jmp	SHORT $LN3@Compare
$LN2@Compare:

; 896  : 
; 897  :     return (l1 < l2) ? -1 : (l1 == l2) ? 0 : 1;

	mov	edx, DWORD PTR _l1$[ebp]
	cmp	edx, DWORD PTR _l2$[ebp]
	jae	SHORT $LN9@Compare
	mov	DWORD PTR tv93[ebp], -1
	jmp	SHORT $LN10@Compare
$LN9@Compare:
	mov	eax, DWORD PTR _l1$[ebp]
	cmp	eax, DWORD PTR _l2$[ebp]
	jne	SHORT $LN7@Compare
	mov	DWORD PTR tv92[ebp], 0
	jmp	SHORT $LN8@Compare
$LN7@Compare:
	mov	DWORD PTR tv92[ebp], 1
$LN8@Compare:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv93[ebp], ecx
$LN10@Compare:
	mov	eax, DWORD PTR tv93[ebp]
$LN5@Compare:

; 898  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Compare@Data_t@_bstr_t@@QBEHABV12@@Z ENDP		; _bstr_t::Data_t::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?Length@Data_t@_bstr_t@@QBEIXZ PROC			; _bstr_t::Data_t::Length, COMDAT
; _this$ = ecx

; 870  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 871  :     return m_wstr ? ::SysStringLen(m_wstr) : 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Length
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SysStringLen@4
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@Length
$LN3@Length:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Length:
	mov	eax, DWORD PTR tv69[ebp]

; 872  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Data_t@_bstr_t@@QBEIXZ ENDP			; _bstr_t::Data_t::Length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetString@Data_t@_bstr_t@@QBEPBDXZ PROC		; _bstr_t::Data_t::GetString, COMDAT
; _this$ = ecx

; 823  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 824  :     if (m_str == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@GetString

; 825  :         m_str = _com_util::ConvertBSTRToString(m_wstr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?ConvertBSTRToString@_com_util@@YGPADPA_W@Z ; _com_util::ConvertBSTRToString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN1@GetString:

; 826  :     }
; 827  : 
; 828  :     return m_str;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 829  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetString@Data_t@_bstr_t@@QBEPBDXZ ENDP		; _bstr_t::Data_t::GetString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?GetWString@Data_t@_bstr_t@@QAEAAPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWString@Data_t@_bstr_t@@QAEAAPA_WXZ PROC		; _bstr_t::Data_t::GetWString, COMDAT
; _this$ = ecx

; 818  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 819  :     return m_wstr;

	mov	eax, DWORD PTR _this$[ebp]

; 820  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWString@Data_t@_bstr_t@@QAEAAPA_WXZ ENDP		; _bstr_t::Data_t::GetWString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT
tv72 = -20						; size = 4
$T1 = -16						; size = 4
_cRef$ = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?Release@Data_t@_bstr_t@@QAEKXZ PROC			; _bstr_t::Data_t::Release, COMDAT
; _this$ = ecx

; 772  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 773  :     unsigned long cRef = InterlockedDecrement(reinterpret_cast<long*>(&m_RefCount));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	DWORD PTR __imp__InterlockedDecrement@4
	mov	DWORD PTR _cRef$[ebp], eax

; 774  :     if (cRef == 0) {

	cmp	DWORD PTR _cRef$[ebp], 0
	jne	SHORT $LN1@Release

; 775  :         delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GData_t@_bstr_t@@AAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN1@Release
$LN4@Release:
	mov	DWORD PTR tv72[ebp], 0
$LN1@Release:

; 776  :     }
; 777  : 
; 778  :     return cRef;

	mov	eax, DWORD PTR _cRef$[ebp]

; 779  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Release@Data_t@_bstr_t@@QAEKXZ ENDP			; _bstr_t::Data_t::Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@Data_t@_bstr_t@@QAEKXZ PROC			; _bstr_t::Data_t::AddRef, COMDAT
; _this$ = ecx

; 766  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 767  :     InterlockedIncrement(reinterpret_cast<long*>(&m_RefCount));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	DWORD PTR __imp__InterlockedIncrement@4

; 768  :     return m_RefCount;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 769  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@Data_t@_bstr_t@@QAEKXZ ENDP			; _bstr_t::Data_t::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0Data_t@_bstr_t@@QAE@PA_W_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bstr$ = 8						; size = 4
_fCopy$ = 12						; size = 1
??0Data_t@_bstr_t@@QAE@PA_W_N@Z PROC			; _bstr_t::Data_t::Data_t, COMDAT
; _this$ = ecx

; 703  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1

; 704  :     if (fCopy && bstr != NULL) {

	movzx	edx, BYTE PTR _fCopy$[ebp]
	test	edx, edx
	je	SHORT $LN3@Data_t
	cmp	DWORD PTR _bstr$[ebp], 0
	je	SHORT $LN3@Data_t

; 705  :         m_wstr = ::SysAllocStringByteLen(reinterpret_cast<char*>(bstr),
; 706  :                                          ::SysStringByteLen(bstr));

	mov	eax, DWORD PTR _bstr$[ebp]
	push	eax
	call	DWORD PTR __imp__SysStringByteLen@4
	push	eax
	mov	ecx, DWORD PTR _bstr$[ebp]
	push	ecx
	call	DWORD PTR __imp__SysAllocStringByteLen@8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 707  : 
; 708  :         if (m_wstr == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@Data_t

; 709  :             _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@Data_t:

; 710  :         }
; 711  :     }
; 712  :     else {

	jmp	SHORT $LN4@Data_t
$LN3@Data_t:

; 713  :         m_wstr = bstr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bstr$[ebp]
	mov	DWORD PTR [ecx], edx
$LN4@Data_t:

; 714  :     }
; 715  : }

	mov	eax, DWORD PTR _this$[ebp]
$LN5@Data_t:
	mov	esp, ebp
	pop	ebp
	ret	8
??0Data_t@_bstr_t@@QAE@PA_W_N@Z ENDP			; _bstr_t::Data_t::Data_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0Data_t@_bstr_t@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??0Data_t@_bstr_t@@QAE@PB_W@Z PROC			; _bstr_t::Data_t::Data_t, COMDAT
; _this$ = ecx

; 690  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1

; 691  :     m_wstr = ::SysAllocString(s);

	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__SysAllocString@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 692  : 
; 693  :     if (m_wstr == NULL && s != NULL) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN2@Data_t
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN2@Data_t

; 694  :         _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@Data_t:

; 695  :     }
; 696  : }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@Data_t:
	mov	esp, ebp
	pop	ebp
	ret	4
??0Data_t@_bstr_t@@QAE@PB_W@Z ENDP			; _bstr_t::Data_t::Data_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??0Data_t@_bstr_t@@QAE@PBD@Z PROC			; _bstr_t::Data_t::Data_t, COMDAT
; _this$ = ecx

; 682  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1

; 683  :     m_wstr = _com_util::ConvertStringToBSTR(s);

	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z ; _com_util::ConvertStringToBSTR
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 684  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Data_t@_bstr_t@@QAE@PBD@Z ENDP			; _bstr_t::Data_t::Data_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?length@_bstr_t@@QBEIXZ PROC				; _bstr_t::length, COMDAT
; _this$ = ecx

; 553  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 554  :     return (m_Data != NULL) ? m_Data->Length() : 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?Length@Data_t@_bstr_t@@QBEIXZ		; _bstr_t::Data_t::Length
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	DWORD PTR tv69[ebp], 0
$LN4@length:
	mov	eax, DWORD PTR tv69[ebp]

; 555  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?length@_bstr_t@@QBEIXZ ENDP				; _bstr_t::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??8_bstr_t@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_str$ = 8						; size = 4
??8_bstr_t@@QBE_NABV0@@Z PROC				; _bstr_t::operator==, COMDAT
; _this$ = ecx

; 508  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 509  :     return _Compare(str) == 0;

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compare@_bstr_t@@ABEHABV1@@Z		; _bstr_t::_Compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 510  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??8_bstr_t@@QBE_NABV0@@Z ENDP				; _bstr_t::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??B_bstr_t@@QBEPADXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
??B_bstr_t@@QBEPADXZ PROC				; _bstr_t::operator char *, COMDAT
; _this$ = ecx

; 492  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 493  :     return const_cast<char*>((m_Data != NULL) ? m_Data->GetString() : NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetString@Data_t@_bstr_t@@QBEPBDXZ	; _bstr_t::Data_t::GetString
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv69[ebp]

; 494  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??B_bstr_t@@QBEPADXZ ENDP				; _bstr_t::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??B_bstr_t@@QBEPA_WXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
??B_bstr_t@@QBEPA_WXZ PROC				; _bstr_t::operator wchar_t *, COMDAT
; _this$ = ecx

; 478  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 479  :     return const_cast<wchar_t*>((m_Data != NULL) ? m_Data->GetWString() : NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetWString@Data_t@_bstr_t@@QAEAAPA_WXZ	; _bstr_t::Data_t::GetWString
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv69[ebp]

; 480  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??B_bstr_t@@QBEPA_WXZ ENDP				; _bstr_t::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??4_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??4_bstr_t@@QAEAAV0@ABV0@@Z PROC			; _bstr_t::operator=, COMDAT
; _this$ = ecx

; 355  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 356  :     if (this != &s) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	je	SHORT $LN1@operator

; 357  :         _Free();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free@_bstr_t@@AAEXXZ			; _bstr_t::_Free

; 358  : 
; 359  :         m_Data = s.m_Data;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 360  :         _AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_AddRef@_bstr_t@@AAEXXZ		; _bstr_t::_AddRef
$LN1@operator:

; 361  :     }
; 362  : 
; 363  :     return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 364  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??4_bstr_t@@QAEAAV0@ABV0@@Z ENDP			; _bstr_t::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_bstr_t@@QAE@XZ PROC					; _bstr_t::~_bstr_t, COMDAT
; _this$ = ecx

; 342  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 343  :     _Free();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free@_bstr_t@@AAEXXZ			; _bstr_t::_Free

; 344  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1_bstr_t@@QAE@XZ ENDP					; _bstr_t::~_bstr_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0_bstr_t@@QAE@PA_W_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv74 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bstr$ = 8						; size = 4
_fCopy$ = 12						; size = 1
??0_bstr_t@@QAE@PA_W_N@Z PROC				; _bstr_t::_bstr_t, COMDAT
; _this$ = ecx

; 333  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_bstr_t@@QAE@PA_W_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2Data_t@_bstr_t@@SAPAXI@Z		; _bstr_t::Data_t::operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@bstr_t
	movzx	eax, BYTE PTR _fCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Data_t@_bstr_t@@QAE@PA_W_N@Z		; _bstr_t::Data_t::Data_t
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@bstr_t
$LN4@bstr_t:
	mov	DWORD PTR tv74[ebp], 0
$LN5@bstr_t:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx

; 334  :     if (m_Data == NULL) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN2@bstr_t

; 335  :         _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@bstr_t:

; 336  :     }
; 337  : }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@bstr_t:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_bstr_t@@QAE@PA_W_N@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0_bstr_t@@QAE@PA_W_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_bstr_t@@QAE@PA_W_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_bstr_t@@QAE@PA_W_N@Z ENDP				; _bstr_t::_bstr_t
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0_bstr_t@@QAE@PB_W@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv73 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0_bstr_t@@QAE@PB_W@Z PROC				; _bstr_t::_bstr_t, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_bstr_t@@QAE@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2Data_t@_bstr_t@@SAPAXI@Z		; _bstr_t::Data_t::operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@bstr_t
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Data_t@_bstr_t@@QAE@PB_W@Z		; _bstr_t::Data_t::Data_t
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN5@bstr_t
$LN4@bstr_t:
	mov	DWORD PTR tv73[ebp], 0
$LN5@bstr_t:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx], eax

; 323  :     if (m_Data == NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN2@bstr_t

; 324  :         _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@bstr_t:

; 325  :     }
; 326  : }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@bstr_t:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_bstr_t@@QAE@PB_W@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0_bstr_t@@QAE@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_bstr_t@@QAE@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_bstr_t@@QAE@PB_W@Z ENDP				; _bstr_t::_bstr_t
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv73 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0_bstr_t@@QAE@PBD@Z PROC				; _bstr_t::_bstr_t, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_bstr_t@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2Data_t@_bstr_t@@SAPAXI@Z		; _bstr_t::Data_t::operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@bstr_t
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Data_t@_bstr_t@@QAE@PBD@Z		; _bstr_t::Data_t::Data_t
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN5@bstr_t
$LN4@bstr_t:
	mov	DWORD PTR tv73[ebp], 0
$LN5@bstr_t:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx], eax

; 313  :     if (m_Data == NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN2@bstr_t

; 314  :         _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$LN2@bstr_t:

; 315  :     }
; 316  : }

	mov	eax, DWORD PTR _this$[ebp]
$LN3@bstr_t:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_bstr_t@@QAE@PBD@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0_bstr_t@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_bstr_t@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_bstr_t@@QAE@PBD@Z ENDP				; _bstr_t::_bstr_t
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\comutil.h
;	COMDAT ??0_bstr_t@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_bstr_t@@QAE@XZ PROC					; _bstr_t::_bstr_t, COMDAT
; _this$ = ecx

; 297  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 298  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_bstr_t@@QAE@XZ ENDP					; _bstr_t::_bstr_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z PROC		; C_Window::SetKBCallback, COMDAT
; _this$ = ecx

; 284  : 		void SetKBCallback(BOOL (*cb)(unsigned char DKScanCode,unsigned char Ascii,unsigned char ShiftStates,long RepeatCount)) { KBCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+4324], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z ENDP		; C_Window::SetKBCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetDelCallback@C_TreeList@@QAEXP6AXPAVTREELIST@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetDelCallback@C_TreeList@@QAEXP6AXPAVTREELIST@@@Z@Z PROC ; C_TreeList::SetDelCallback, COMDAT
; _this$ = ecx

; 92   : 		void SetDelCallback(void (*cb)(TREELIST *item)) { DelCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+164], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDelCallback@C_TreeList@@QAEXP6AXPAVTREELIST@@@Z@Z ENDP ; C_TreeList::SetDelCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Control@@UAEPAXI@Z PROC				; C_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Control@@UAE@XZ			; C_Control::~C_Control
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Control@@UAEPAXI@Z ENDP				; C_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ PROC	; C_Control::GetCallback, COMDAT
; _this$ = ecx

; 82   : 		void (*GetCallback())(long,short,C_Base*)	{ return(Callback_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ ENDP	; C_Control::GetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetMouseOver@C_Control@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMouseOver@C_Control@@UAEFXZ PROC			; C_Control::GetMouseOver, COMDAT
; _this$ = ecx

; 80   : 		short GetMouseOver()			{ return(MouseOver_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+82]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseOver@C_Control@@UAEFXZ ENDP			; C_Control::GetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetHotKey@C_Control@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHotKey@C_Control@@UAEFXZ PROC			; C_Control::GetHotKey, COMDAT
; _this$ = ecx

; 79   : 		short GetHotKey()				{ return(HotKey_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+80]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHotKey@C_Control@@UAEFXZ ENDP			; C_Control::GetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetHelpText@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHelpText@C_Control@@UAEJXZ PROC			; C_Control::GetHelpText, COMDAT
; _this$ = ecx

; 78   : 		long  GetHelpText()				{ return(HelpTextID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHelpText@C_Control@@UAEJXZ ENDP			; C_Control::GetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetMenu@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMenu@C_Control@@UAEJXZ PROC				; C_Control::GetMenu, COMDAT
; _this$ = ecx

; 77   : 		long  GetMenu()					{ return(MenuID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMenu@C_Control@@UAEJXZ ENDP				; C_Control::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetDragCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDragCursorID@C_Control@@UAEJXZ PROC			; C_Control::GetDragCursorID, COMDAT
; _this$ = ecx

; 76   : 		long  GetDragCursorID()			{ return(DragCursor_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDragCursorID@C_Control@@UAEJXZ ENDP			; C_Control::GetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCursorID@C_Control@@UAEJXZ PROC			; C_Control::GetCursorID, COMDAT
; _this$ = ecx

; 75   : 		long  GetCursorID()				{ return(Cursor_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCursorID@C_Control@@UAEJXZ ENDP			; C_Control::GetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetRelY@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelY@C_Control@@UAEJXZ PROC				; C_Control::GetRelY, COMDAT
; _this$ = ecx

; 73   : 		long GetRelY()					{ return(RelY_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelY@C_Control@@UAEJXZ ENDP				; C_Control::GetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetRelX@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelX@C_Control@@UAEJXZ PROC				; C_Control::GetRelX, COMDAT
; _this$ = ecx

; 72   : 		long GetRelX()					{ return(RelX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelX@C_Control@@UAEJXZ ENDP				; C_Control::GetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?IsControl@C_Control@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsControl@C_Control@@UAEHXZ PROC			; C_Control::IsControl, COMDAT
; _this$ = ecx

; 71   : 		BOOL  IsControl()				{ return(TRUE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsControl@C_Control@@UAEHXZ ENDP			; C_Control::IsControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?IsBase@C_Control@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBase@C_Control@@UAEHXZ PROC				; C_Control::IsBase, COMDAT
; _this$ = ecx

; 70   : 		BOOL  IsBase()					{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBase@C_Control@@UAEHXZ ENDP				; C_Control::IsBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOverPerc@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_perc$ = 8						; size = 2
?SetMouseOverPerc@C_Control@@UAEXF@Z PROC		; C_Control::SetMouseOverPerc, COMDAT
; _this$ = ecx

; 67   : 		void SetMouseOverPerc(short perc)				{ MouseOverPercent_=perc; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _perc$[ebp]
	mov	WORD PTR [eax+84], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverPerc@C_Control@@UAEXF@Z ENDP		; C_Control::SetMouseOverPerc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOverColor@C_Control@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetMouseOverColor@C_Control@@UAEXK@Z PROC		; C_Control::SetMouseOverColor, COMDAT
; _this$ = ecx

; 66   : 		void SetMouseOverColor(COLORREF color)			{ MouseOverColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverColor@C_Control@@UAEXK@Z ENDP		; C_Control::SetMouseOverColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOver@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetMouseOver@C_Control@@UAEXF@Z PROC			; C_Control::SetMouseOver, COMDAT
; _this$ = ecx

; 65   : 		void SetMouseOver(short state)					{ MouseOver_=state; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _state$[ebp]
	mov	WORD PTR [eax+82], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOver@C_Control@@UAEXF@Z ENDP			; C_Control::SetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z PROC	; C_Control::SetCallback, COMDAT
; _this$ = ecx

; 63   : 		void SetCallback(void (*cb)(long,short,C_Base*)) { Callback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z ENDP	; C_Control::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetHotKey@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?SetHotKey@C_Control@@UAEXF@Z PROC			; C_Control::SetHotKey, COMDAT
; _this$ = ecx

; 62   : 		void SetHotKey(short key)						{ HotKey_=key; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _key$[ebp]
	mov	WORD PTR [eax+80], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHotKey@C_Control@@UAEXF@Z ENDP			; C_Control::SetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetHelpText@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetHelpText@C_Control@@UAEXJ@Z PROC			; C_Control::SetHelpText, COMDAT
; _this$ = ecx

; 61   : 		void SetHelpText(long id)						{ HelpTextID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHelpText@C_Control@@UAEXJ@Z ENDP			; C_Control::SetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMenu@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetMenu@C_Control@@UAEXJ@Z PROC			; C_Control::SetMenu, COMDAT
; _this$ = ecx

; 60   : 		void SetMenu(long id)							{ MenuID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMenu@C_Control@@UAEXJ@Z ENDP			; C_Control::SetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetDragCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetDragCursorID@C_Control@@UAEXJ@Z PROC		; C_Control::SetDragCursorID, COMDAT
; _this$ = ecx

; 59   : 		void SetDragCursorID(long id)					{ DragCursor_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCursorID@C_Control@@UAEXJ@Z ENDP		; C_Control::SetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCursorID@C_Control@@UAEXJ@Z PROC			; C_Control::SetCursorID, COMDAT
; _this$ = ecx

; 58   : 		void SetCursorID(long id)						{ Cursor_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCursorID@C_Control@@UAEXJ@Z ENDP			; C_Control::SetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelXY@C_Control@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetRelXY@C_Control@@UAEXJJ@Z PROC			; C_Control::SetRelXY, COMDAT
; _this$ = ecx

; 57   : 		void SetRelXY(long x,long y)					{ RelX_=x; RelY_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+76], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetRelXY@C_Control@@UAEXJJ@Z ENDP			; C_Control::SetRelXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelY@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetRelY@C_Control@@UAEXJ@Z PROC			; C_Control::SetRelY, COMDAT
; _this$ = ecx

; 56   : 		void SetRelY(long y)							{ RelY_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelY@C_Control@@UAEXJ@Z ENDP			; C_Control::SetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelX@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetRelX@C_Control@@UAEXJ@Z PROC			; C_Control::SetRelX, COMDAT
; _this$ = ecx

; 55   : 		void SetRelX(long x)							{ RelX_=x; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelX@C_Control@@UAEXJ@Z ENDP			; C_Control::SetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ??1C_Control@@UAE@XZ
_TEXT	SEGMENT
tv83 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1C_Control@@UAE@XZ PROC				; C_Control::~C_Control, COMDAT
; _this$ = ecx

; 40   : 		{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1C_Control@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_Control@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 41   : 			if(Sound_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	je	SHORT $LN2@C_Control

; 42   : 			{
; 43   : 				Sound_->Cleanup();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?Cleanup@C_Hash@@QAEXXZ			; C_Hash::Cleanup

; 44   : 				delete Sound_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@C_Control
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GC_Hash@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN2@C_Control
$LN4@C_Control:
	mov	DWORD PTR tv83[ebp], 0
$LN2@C_Control:

; 45   : 			}
; 46   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Base@@UAE@XZ			; C_Base::~C_Base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1C_Control@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1C_Base@@UAE@XZ			; C_Base::~C_Base
__ehhandler$??1C_Control@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1C_Control@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1C_Control@@UAE@XZ ENDP				; C_Control::~C_Control
; Function compile flags: /Odtp
;	COMDAT ??_GC_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Base@@UAEPAXI@Z PROC				; C_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Base@@UAE@XZ			; C_Base::~C_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Base@@UAEPAXI@Z ENDP				; C_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ofp$ = 8						; size = 4
_Parser$ = 12						; size = 4
?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z PROC		; C_Base::SaveText, COMDAT
; _this$ = ecx

; 193  : 		virtual void SaveText(HANDLE ofp,C_Parser *Parser) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z ENDP		; C_Base::SaveText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 2
_P$ = 12						; size = 4
_str$ = 16						; size = 4
_Hndlr$ = 20						; size = 4
?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z PROC	; C_Base::LocalFunction, COMDAT
; _this$ = ecx

; 192  : 		virtual void LocalFunction(short ID,long P[],_TCHAR *str,C_Handler *Hndlr) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z ENDP	; C_Base::LocalFunction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?LocalFind@C_Base@@UAEFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
?LocalFind@C_Base@@UAEFPAD@Z PROC			; C_Base::LocalFind, COMDAT
; _this$ = ecx

; 191  : 		virtual short LocalFind(char *str) { return(-1); } // Search local token list

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	4
?LocalFind@C_Base@@UAEFPAD@Z ENDP			; C_Base::LocalFind
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Wheel@C_Base@@UAEHHGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_increments$ = 8					; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
?Wheel@C_Base@@UAEHHGG@Z PROC				; C_Base::Wheel, COMDAT
; _this$ = ecx

; 187  : 		virtual BOOL Wheel(int increments, WORD MouseX, WORD MouseY)            { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Wheel@C_Base@@UAEHHGG@Z ENDP				; C_Base::Wheel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Drag$ = 8						; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
_over$ = 20						; size = 4
?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_Base::Drop, COMDAT
; _this$ = ecx

; 182  : 		virtual BOOL Drop(GRABBER *Drag,WORD MouseX,WORD MouseY,C_Window *over) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_Base::Drop
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Drag$ = 8						; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
_over$ = 20						; size = 4
?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_Base::Drag, COMDAT
; _this$ = ecx

; 181  : 		virtual BOOL Drag(GRABBER *Drag,WORD MouseX,WORD MouseY,C_Window *over) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_Base::Drag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetItemXY@C_Base@@UAEXJPAJ0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?GetItemXY@C_Base@@UAEXJPAJ0@Z PROC			; C_Base::GetItemXY, COMDAT
; _this$ = ecx

; 180  : 		virtual void GetItemXY(long ID,long *x,long *y)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetItemXY@C_Base@@UAEXJPAJ0@Z ENDP			; C_Base::GetItemXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Dragable@C_Base@@UAEHJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Dragable@C_Base@@UAEHJ@Z PROC				; C_Base::Dragable, COMDAT
; _this$ = ecx

; 179  : 		virtual BOOL Dragable(long ID)					{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?Dragable@C_Base@@UAEHJ@Z ENDP				; C_Base::Dragable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMe@C_Base@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMe@C_Base@@UAEPAV1@XZ PROC				; C_Base::GetMe, COMDAT
; _this$ = ecx

; 178  : 		virtual C_Base *GetMe()							{ return(this); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMe@C_Base@@UAEPAV1@XZ ENDP				; C_Base::GetMe
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?MouseOver@C_Base@@UAEHJJPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_relX$ = 8						; size = 4
_relY$ = 12						; size = 4
_me$ = 16						; size = 4
?MouseOver@C_Base@@UAEHJJPAV1@@Z PROC			; C_Base::MouseOver, COMDAT
; _this$ = ecx

; 177  : 		virtual BOOL MouseOver(long relX,long relY,C_Base *me) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MouseOver@C_Base@@UAEHJJPAV1@@Z ENDP			; C_Base::MouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CloseWindow@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseWindow@C_Base@@UAEHXZ PROC			; C_Base::CloseWindow, COMDAT
; _this$ = ecx

; 176  : 		virtual BOOL CloseWindow()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseWindow@C_Base@@UAEHXZ ENDP			; C_Base::CloseWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Process@C_Base@@UAEHJF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_HitType$ = 12						; size = 2
?Process@C_Base@@UAEHJF@Z PROC				; C_Base::Process, COMDAT
; _this$ = ecx

; 175  : 		virtual BOOL Process(long ID,short HitType)		{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?Process@C_Base@@UAEHJF@Z ENDP				; C_Base::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CheckKeyboard@C_Base@@UAEHEEEJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_DKScanCode$ = 8					; size = 1
_Ascii$ = 12						; size = 1
_ShiftStates$ = 16					; size = 1
_RepeatCount$ = 20					; size = 4
?CheckKeyboard@C_Base@@UAEHEEEJ@Z PROC			; C_Base::CheckKeyboard, COMDAT
; _this$ = ecx

; 174  : 		virtual BOOL CheckKeyboard(uchar DKScanCode,uchar Ascii,uchar ShiftStates,long RepeatCount) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CheckKeyboard@C_Base@@UAEHEEEJ@Z ENDP			; C_Base::CheckKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CheckHotSpots@C_Base@@UAEJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_relx$ = 8						; size = 4
_rely$ = 12						; size = 4
?CheckHotSpots@C_Base@@UAEJJJ@Z PROC			; C_Base::CheckHotSpots, COMDAT
; _this$ = ecx

; 173  : 		virtual long CheckHotSpots(long relx,long rely)	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckHotSpots@C_Base@@UAEJJJ@Z ENDP			; C_Base::CheckHotSpots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Deactivate@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Deactivate@C_Base@@UAEXXZ PROC				; C_Base::Deactivate, COMDAT
; _this$ = ecx

; 172  : 		virtual void Deactivate()						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Deactivate@C_Base@@UAEXXZ ENDP				; C_Base::Deactivate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Activate@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@C_Base@@UAEXXZ PROC				; C_Base::Activate, COMDAT
; _this$ = ecx

; 171  : 		virtual void Activate()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@C_Base@@UAEXXZ ENDP				; C_Base::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?TimerUpdate@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TimerUpdate@C_Base@@UAEHXZ PROC			; C_Base::TimerUpdate, COMDAT
; _this$ = ecx

; 170  : 		virtual BOOL TimerUpdate()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?TimerUpdate@C_Base@@UAEHXZ ENDP			; C_Base::TimerUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Cleanup@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@C_Base@@UAEXXZ PROC				; C_Base::Cleanup, COMDAT
; _this$ = ecx

; 169  : 		virtual void Cleanup()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@C_Base@@UAEXXZ ENDP				; C_Base::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Parent$ = 8						; size = 4
?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z PROC		; C_Base::SetSubParents, COMDAT
; _this$ = ecx

; 168  : 		virtual void SetSubParents(C_Window *Parent)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z ENDP		; C_Base::SetSubParents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC	; C_Base::HighLite, COMDAT
; _this$ = ecx

; 167  : 		virtual void HighLite(SCREEN *surface,UI95_RECT *cliprect)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP	; C_Base::HighLite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC	; C_Base::Draw, COMDAT
; _this$ = ecx

; 166  : 		virtual void Draw(SCREEN *surface,UI95_RECT *cliprect)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP	; C_Base::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Refresh@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Refresh@C_Base@@UAEXXZ PROC				; C_Base::Refresh, COMDAT
; _this$ = ecx

; 165  : 		virtual void Refresh()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Refresh@C_Base@@UAEXXZ ENDP				; C_Base::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?IsControl@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsControl@C_Base@@UAEHXZ PROC				; C_Base::IsControl, COMDAT
; _this$ = ecx

; 164  : 		virtual BOOL IsControl()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsControl@C_Base@@UAEHXZ ENDP				; C_Base::IsControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?IsBase@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBase@C_Base@@UAEHXZ PROC				; C_Base::IsBase, COMDAT
; _this$ = ecx

; 163  : 		virtual BOOL IsBase()							{ return(TRUE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBase@C_Base@@UAEHXZ ENDP				; C_Base::IsBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ PROC		; C_Base::GetCallback, COMDAT
; _this$ = ecx

; 160  : 		virtual void (*GetCallback())(long,short,C_Base*) { return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ ENDP		; C_Base::GetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetDragCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDragCursorID@C_Base@@UAEJXZ PROC			; C_Base::GetDragCursorID, COMDAT
; _this$ = ecx

; 159  : 		virtual long  GetDragCursorID()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDragCursorID@C_Base@@UAEJXZ ENDP			; C_Base::GetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCursorID@C_Base@@UAEJXZ PROC			; C_Base::GetCursorID, COMDAT
; _this$ = ecx

; 158  : 		virtual long  GetCursorID()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCursorID@C_Base@@UAEJXZ ENDP			; C_Base::GetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMouseOver@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMouseOver@C_Base@@UAEFXZ PROC			; C_Base::GetMouseOver, COMDAT
; _this$ = ecx

; 157  : 		virtual short GetMouseOver() { return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseOver@C_Base@@UAEFXZ ENDP			; C_Base::GetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 2
?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z PROC		; C_Base::GetSound, COMDAT
; _this$ = ecx

; 156  : 		virtual SOUND_RES *GetSound(short Type) { return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z ENDP		; C_Base::GetSound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetHelpText@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHelpText@C_Base@@UAEJXZ PROC			; C_Base::GetHelpText, COMDAT
; _this$ = ecx

; 155  : 		virtual long  GetHelpText()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHelpText@C_Base@@UAEJXZ ENDP			; C_Base::GetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFont@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFont@C_Base@@UAEJXZ PROC				; C_Base::GetFont, COMDAT
; _this$ = ecx

; 154  : 		virtual long  GetFont()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFont@C_Base@@UAEJXZ ENDP				; C_Base::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMenu@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMenu@C_Base@@UAEJXZ PROC				; C_Base::GetMenu, COMDAT
; _this$ = ecx

; 153  : 		virtual long  GetMenu()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMenu@C_Base@@UAEJXZ ENDP				; C_Base::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetHotKey@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHotKey@C_Base@@UAEFXZ PROC				; C_Base::GetHotKey, COMDAT
; _this$ = ecx

; 152  : 		virtual short GetHotKey()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHotKey@C_Base@@UAEFXZ ENDP				; C_Base::GetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetState@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@C_Base@@UAEFXZ PROC				; C_Base::GetState, COMDAT
; _this$ = ecx

; 151  : 		virtual short GetState()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@C_Base@@UAEFXZ ENDP				; C_Base::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Ready@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Ready@C_Base@@QAEFXZ PROC				; C_Base::Ready, COMDAT
; _this$ = ecx

; 150  : 		short  Ready()				{ return(Ready_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+42]
	mov	esp, ebp
	pop	ebp
	ret	0
?Ready@C_Base@@QAEFXZ ENDP				; C_Base::Ready
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetParent@C_Base@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@C_Base@@QAEPAVC_Window@@XZ PROC		; C_Base::GetParent, COMDAT
; _this$ = ecx

; 149  : 		C_Window *GetParent()		{ return(Parent_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParent@C_Base@@QAEPAVC_Window@@XZ ENDP		; C_Base::GetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetRelY@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelY@C_Base@@UAEJXZ PROC				; C_Base::GetRelY, COMDAT
; _this$ = ecx

; 148  : 		virtual long GetRelY()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelY@C_Base@@UAEJXZ ENDP				; C_Base::GetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetRelX@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelX@C_Base@@UAEJXZ PROC				; C_Base::GetRelX, COMDAT
; _this$ = ecx

; 147  : 		virtual long GetRelX()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelX@C_Base@@UAEJXZ ENDP				; C_Base::GetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetW@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@C_Base@@QAEJXZ PROC				; C_Base::GetW, COMDAT
; _this$ = ecx

; 143  : 		long GetW()					{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@C_Base@@QAEJXZ ENDP				; C_Base::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z PROC		; C_Base::SetCallback, COMDAT
; _this$ = ecx

; 131  : 		virtual void SetCallback(void (*cb)(long,short,C_Base*)){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z ENDP		; C_Base::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOverPerc@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_perc$ = 8						; size = 2
?SetMouseOverPerc@C_Base@@UAEXF@Z PROC			; C_Base::SetMouseOverPerc, COMDAT
; _this$ = ecx

; 130  : 		virtual void SetMouseOverPerc(short perc)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverPerc@C_Base@@UAEXF@Z ENDP			; C_Base::SetMouseOverPerc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOverColor@C_Base@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetMouseOverColor@C_Base@@UAEXK@Z PROC			; C_Base::SetMouseOverColor, COMDAT
; _this$ = ecx

; 129  : 		virtual void SetMouseOverColor(COLORREF color)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverColor@C_Base@@UAEXK@Z ENDP			; C_Base::SetMouseOverColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOver@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetMouseOver@C_Base@@UAEXF@Z PROC			; C_Base::SetMouseOver, COMDAT
; _this$ = ecx

; 128  : 		virtual void SetMouseOver(short state)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOver@C_Base@@UAEXF@Z ENDP			; C_Base::SetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetHelpText@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetHelpText@C_Base@@UAEXJ@Z PROC			; C_Base::SetHelpText, COMDAT
; _this$ = ecx

; 127  : 		virtual void SetHelpText(long id)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHelpText@C_Base@@UAEXJ@Z ENDP			; C_Base::SetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetDragCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetDragCursorID@C_Base@@UAEXJ@Z PROC			; C_Base::SetDragCursorID, COMDAT
; _this$ = ecx

; 126  : 		virtual void SetDragCursorID(long id)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCursorID@C_Base@@UAEXJ@Z ENDP			; C_Base::SetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCursorID@C_Base@@UAEXJ@Z PROC			; C_Base::SetCursorID, COMDAT
; _this$ = ecx

; 125  : 		virtual void SetCursorID(long id)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCursorID@C_Base@@UAEXJ@Z ENDP			; C_Base::SetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetSound@C_Base@@UAEXJF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_type$ = 12						; size = 2
?SetSound@C_Base@@UAEXJF@Z PROC				; C_Base::SetSound, COMDAT
; _this$ = ecx

; 124  : 		virtual void SetSound(long ID,short type)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSound@C_Base@@UAEXJF@Z ENDP				; C_Base::SetSound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFont@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetFont@C_Base@@UAEXJ@Z PROC				; C_Base::SetFont, COMDAT
; _this$ = ecx

; 123  : 		virtual void SetFont(long ID)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@C_Base@@UAEXJ@Z ENDP				; C_Base::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMenu@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetMenu@C_Base@@UAEXJ@Z PROC				; C_Base::SetMenu, COMDAT
; _this$ = ecx

; 122  : 		virtual void SetMenu(long ID)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMenu@C_Base@@UAEXJ@Z ENDP				; C_Base::SetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetHotKey@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?SetHotKey@C_Base@@UAEXF@Z PROC				; C_Base::SetHotKey, COMDAT
; _this$ = ecx

; 121  : 		virtual void SetHotKey(short key)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHotKey@C_Base@@UAEXF@Z ENDP				; C_Base::SetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetState@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetState@C_Base@@UAEXF@Z PROC				; C_Base::SetState, COMDAT
; _this$ = ecx

; 120  : 		virtual void SetState(short state)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetState@C_Base@@UAEXF@Z ENDP				; C_Base::SetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetRelXY@C_Base@@UAEXJJ@Z PROC				; C_Base::SetRelXY, COMDAT
; _this$ = ecx

; 112  : 		virtual void SetRelXY(long x,long y)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetRelXY@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetRelXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetRelY@C_Base@@UAEXJ@Z PROC				; C_Base::SetRelY, COMDAT
; _this$ = ecx

; 111  : 		virtual void SetRelY(long y)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelY@C_Base@@UAEXJ@Z ENDP				; C_Base::SetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetRelX@C_Base@@UAEXJ@Z PROC				; C_Base::SetRelX, COMDAT
; _this$ = ecx

; 110  : 		virtual void SetRelX(long x)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelX@C_Base@@UAEXJ@Z ENDP				; C_Base::SetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetXYWH@C_Base@@UAEXJJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
?SetXYWH@C_Base@@UAEXJJJJ@Z PROC			; C_Base::SetXYWH, COMDAT
; _this$ = ecx

; 109  : 		virtual void SetXYWH(long x,long y,long w,long h)		{ x_=x; y_=y; w_=w; h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [ecx+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetXYWH@C_Base@@UAEXJJJJ@Z ENDP			; C_Base::SetXYWH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetWH@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
_h$ = 12						; size = 4
?SetWH@C_Base@@UAEXJJ@Z PROC				; C_Base::SetWH, COMDAT
; _this$ = ecx

; 108  : 		virtual void SetWH(long w,long h)						{ w_=w; h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	mov	DWORD PTR [edx+36], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWH@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetWH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@C_Base@@UAEXJJ@Z PROC				; C_Base::SetXY, COMDAT
; _this$ = ecx

; 107  : 		virtual void SetXY(long x,long y)						{ x_=x; y_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetH@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
?SetH@C_Base@@UAEXJ@Z PROC				; C_Base::SetH, COMDAT
; _this$ = ecx

; 106  : 		virtual void SetH(long h)								{ h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetH@C_Base@@UAEXJ@Z ENDP				; C_Base::SetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetW@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
?SetW@C_Base@@UAEXJ@Z PROC				; C_Base::SetW, COMDAT
; _this$ = ecx

; 105  : 		virtual void SetW(long w)								{ w_=w; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetW@C_Base@@UAEXJ@Z ENDP				; C_Base::SetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetY@C_Base@@UAEXJ@Z PROC				; C_Base::SetY, COMDAT
; _this$ = ecx

; 104  : 		virtual void SetY(long y)								{ y_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetY@C_Base@@UAEXJ@Z ENDP				; C_Base::SetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetX@C_Base@@UAEXJ@Z PROC				; C_Base::SetX, COMDAT
; _this$ = ecx

; 103  : 		virtual void SetX(long x)								{ x_=x; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetX@C_Base@@UAEXJ@Z ENDP				; C_Base::SetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlagBitOff@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bits$ = 8						; size = 4
?SetFlagBitOff@C_Base@@UAEXJ@Z PROC			; C_Base::SetFlagBitOff, COMDAT
; _this$ = ecx

; 102  : 		virtual void SetFlagBitOff(long bits)					{ Flags_ &= ~bits; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bits$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlagBitOff@C_Base@@UAEXJ@Z ENDP			; C_Base::SetFlagBitOff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlagBitOn@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bits$ = 8						; size = 4
?SetFlagBitOn@C_Base@@UAEXJ@Z PROC			; C_Base::SetFlagBitOn, COMDAT
; _this$ = ecx

; 101  : 		virtual void SetFlagBitOn(long bits)					{ Flags_ |= bits; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	or	ecx, DWORD PTR _bits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlagBitOn@C_Base@@UAEXJ@Z ENDP			; C_Base::SetFlagBitOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlags@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetFlags@C_Base@@UAEXJ@Z PROC				; C_Base::SetFlags, COMDAT
; _this$ = ecx

; 100  : 		virtual void SetFlags(long flags)						{ Flags_=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlags@C_Base@@UAEXJ@Z ENDP				; C_Base::SetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?_SetCType_@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ctype$ = 8						; size = 2
?_SetCType_@C_Base@@QAEXF@Z PROC			; C_Base::_SetCType_, COMDAT
; _this$ = ecx

; 95   : 		void _SetCType_(short ctype)							{ _CType_=ctype; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _ctype$[ebp]
	mov	WORD PTR [eax+20], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?_SetCType_@C_Base@@QAEXF@Z ENDP			; C_Base::_SetCType_
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetType@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 2
?SetType@C_Base@@QAEXF@Z PROC				; C_Base::SetType, COMDAT
; _this$ = ecx

; 94   : 		void SetType(short type)								{ Type_=type; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _type$[ebp]
	mov	WORD PTR [eax+22], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetType@C_Base@@QAEXF@Z ENDP				; C_Base::SetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetID@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetID@C_Base@@QAEXJ@Z PROC				; C_Base::SetID, COMDAT
; _this$ = ecx

; 93   : 		void SetID(long id)										{ ID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetID@C_Base@@QAEXJ@Z ENDP				; C_Base::SetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ??1C_Base@@UAE@XZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1C_Base@@UAE@XZ PROC					; C_Base::~C_Base, COMDAT
; _this$ = ecx

; 81   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_Base@@6B@

; 82   : 			if(User_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN2@C_Base

; 83   : 			{
; 84   : 				User_->Cleanup();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+44]
	call	?Cleanup@C_Hash@@QAEXXZ			; C_Hash::Cleanup

; 85   : 				delete User_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@C_Base
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GC_Hash@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN2@C_Base
$LN4@C_Base:
	mov	DWORD PTR tv74[ebp], 0
$LN2@C_Base:

; 86   : 			}
; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1C_Base@@UAE@XZ ENDP					; C_Base::~C_Base
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GO_Output@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GO_Output@@QAEPAXI@Z PROC				; O_Output::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1O_Output@@QAE@XZ			; O_Output::~O_Output
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GO_Output@@QAEPAXI@Z ENDP				; O_Output::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@O_Output@@QAEPADXZ PROC			; O_Output::GetText, COMDAT
; _this$ = ecx

; 151  : 		_TCHAR *GetText()				{ return(Label_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@O_Output@@QAEPADXZ ENDP			; O_Output::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFgColor@O_Output@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetFgColor@O_Output@@QAEXK@Z PROC			; O_Output::SetFgColor, COMDAT
; _this$ = ecx

; 128  : 		void SetFgColor(COLORREF color)			{ FgColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFgColor@O_Output@@QAEXK@Z ENDP			; O_Output::SetFgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFont@O_Output@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FID$ = 8						; size = 4
?SetFont@O_Output@@QAEXJ@Z PROC				; O_Output::SetFont, COMDAT
; _this$ = ecx

; 127  : 		void SetFont(long FID)					{ Font_=FID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _FID$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@O_Output@@QAEXJ@Z ENDP				; O_Output::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetOwner@O_Output@@QAEXPAVC_Base@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
?SetOwner@O_Output@@QAEXPAVC_Base@@@Z PROC		; O_Output::SetOwner, COMDAT
; _this$ = ecx

; 124  : 		void SetOwner(C_Base *owner)			{ Owner_ = owner; SetInfo(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [eax+140], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@O_Output@@QAEXPAVC_Base@@@Z ENDP		; O_Output::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetXY@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@O_Output@@QAEXJJ@Z PROC				; O_Output::SetXY, COMDAT
; _this$ = ecx

; 118  : 		void SetXY(long x,long y)				{ origx_ = x; origy_ = y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ??1O_Output@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1O_Output@@QAE@XZ PROC				; O_Output::~O_Output, COMDAT
; _this$ = ecx

; 110  : 		~O_Output() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1O_Output@@QAE@XZ ENDP				; O_Output::~O_Output
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ??0O_Output@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0O_Output@@QAE@XZ PROC				; O_Output::O_Output, COMDAT
; _this$ = ecx

; 75   : 		O_Output()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		{
; 77   : 			origx_=0,origy_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], 0

; 78   : 			x_=0,y_=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0

; 79   : 			w_=0,h_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 0

; 80   : 			lastx_=0,lasty_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0

; 81   : 			lastw_=0,lasth_=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 82   : 			_OType_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+92], cx

; 83   : 			flags_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 84   : 			animtype_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+94], cx

; 85   : 			frame_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+96], ax

; 86   : 			direction_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+98], dx

; 87   : 			ready_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+100], cx

; 88   : 			fperc_=100,bperc_=0;

	mov	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+102], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+104], dx

; 89   : 			FgColor_=0xcccccc,BgColor_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 13421772		; 00ccccccH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 90   : 			Font_=1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 91   : 			LabelLen_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+106], cx

; 92   : 			Src_.left=0; Src_.top=0; Src_.right=0; Src_.bottom=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 93   : 			Dest_.left=0; Dest_.top=0; Dest_.right=0; Dest_.bottom=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], 0

; 94   : 			Rows_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0

; 95   : 			Cols_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0

; 96   : 			ScaleSet_=1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1

; 97   : 			OpStart_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+112], dx

; 98   : 			OpEnd_=10000;

	mov	ecx, 10000				; 00002710H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+114], cx

; 99   : 			WWWidth_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+108], ax

; 100  : 			WWCount_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+110], dx

; 101  : 			Wrap_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 102  : 			Label_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 0

; 103  : 			Image_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0

; 104  : 			Anim_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0

; 105  : 			Owner_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], 0

; 106  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0O_Output@@QAE@XZ ENDP				; O_Output::O_Output
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Hash@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Hash@@QAEPAXI@Z PROC				; C_Hash::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Hash@@QAE@XZ			; C_Hash::~C_Hash
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Hash@@QAEPAXI@Z ENDP				; C_Hash::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 50   : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 39   : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT
tv84 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_InlineIsEqualGUID PROC					; COMDAT

; 151  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 152  :    return (
; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);

	mov	eax, 4
	imul	eax, 0
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _rguid1$[ebp]
	mov	esi, DWORD PTR _rguid2$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	cmp	eax, DWORD PTR [esi+ecx]
	jne	SHORT $LN3@InlineIsEq
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _rguid1$[ebp]
	mov	esi, DWORD PTR _rguid2$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	cmp	ecx, DWORD PTR [esi+edx]
	jne	SHORT $LN3@InlineIsEq
	mov	edx, 4
	shl	edx, 1
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _rguid1$[ebp]
	mov	esi, DWORD PTR _rguid2$[ebp]
	mov	edx, DWORD PTR [ecx+edx]
	cmp	edx, DWORD PTR [esi+eax]
	jne	SHORT $LN3@InlineIsEq
	mov	eax, 4
	imul	eax, 3
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _rguid1$[ebp]
	mov	esi, DWORD PTR _rguid2$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	cmp	eax, DWORD PTR [esi+ecx]
	jne	SHORT $LN3@InlineIsEq
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
	mov	DWORD PTR tv84[ebp], 0
$LN4@InlineIsEq:
	mov	eax, DWORD PTR tv84[ebp]

; 157  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_InlineIsEqualGUID ENDP
_TEXT	ENDS
END
