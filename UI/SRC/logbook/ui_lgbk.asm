; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\logbook\ui_lgbk.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?gFullRanksTxt@@3PAJA				; gFullRanksTxt
PUBLIC	?gRanksTxt@@3PAJA				; gRanksTxt
PUBLIC	?LogState@@3HA					; LogState
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?CurControl@@3JA				; CurControl
PUBLIC	?CurPatch@@3HA					; CurPatch
PUBLIC	?CurPic@@3HA					; CurPic
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?PWLoaded@@3HA					; PWLoaded
PUBLIC	?PicArea@@3UtagRECT@@A				; PicArea
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
_BSS	SEGMENT
?LogState@@3HA DD 01H DUP (?)				; LogState
?CurControl@@3JA DD 01H DUP (?)				; CurControl
?CurPatch@@3HA DD 01H DUP (?)				; CurPatch
?CurPic@@3HA DD	01H DUP (?)				; CurPic
?PWLoaded@@3HA DD 01H DUP (?)				; PWLoaded
?PicArea@@3UtagRECT@@A DB 010H DUP (?)			; PicArea
_BSS	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
_DATA	SEGMENT
?gFullRanksTxt@@3PAJA DD 084H				; gFullRanksTxt
	DD	085H
	DD	086H
	DD	087H
	DD	088H
	DD	089H
	DD	08aH
?gRanksTxt@@3PAJA DD 012cH				; gRanksTxt
	DD	012dH
	DD	012eH
	DD	012fH
	DD	0130H
	DD	0131H
	DD	0132H
_DATA	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	__tcscspn
PUBLIC	__tcscmp
PUBLIC	__tcsicmp
PUBLIC	?GetText@O_Output@@QAEPADXZ			; O_Output::GetText
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetW@C_Base@@QAEJXZ				; C_Base::GetW
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetText@C_ListBox@@QAEPADXZ			; C_ListBox::GetText
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetText@C_Text@@QAEPADXZ			; C_Text::GetText
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
PUBLIC	?GetDogfight@LogBookData@@QAEPAUDogfightStats@@XZ ; LogBookData::GetDogfight
PUBLIC	?GetPicture@LogBookData@@QAEPADXZ		; LogBookData::GetPicture
PUBLIC	?GetPictureResource@LogBookData@@QAEJXZ		; LogBookData::GetPictureResource
PUBLIC	?SetPicture@LogBookData@@QAEXPAD@Z		; LogBookData::SetPicture
PUBLIC	?SetPicture@LogBookData@@QAEXJ@Z		; LogBookData::SetPicture
PUBLIC	?GetPatch@LogBookData@@QAEPADXZ			; LogBookData::GetPatch
PUBLIC	?GetPatchResource@LogBookData@@QAEJXZ		; LogBookData::GetPatchResource
PUBLIC	?SetPatch@LogBookData@@QAEXPAD@Z		; LogBookData::SetPatch
PUBLIC	?SetPatch@LogBookData@@QAEXJ@Z			; LogBookData::SetPatch
PUBLIC	?Name@LogBookData@@QAEPADXZ			; LogBookData::Name
PUBLIC	?SetName@LogBookData@@QAEXPAD@Z			; LogBookData::SetName
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?SetCallsign@LogBookData@@QAEXPAD@Z		; LogBookData::SetCallsign
PUBLIC	?Squadron@LogBookData@@QAEPADXZ			; LogBookData::Squadron
PUBLIC	?SetSquadron@LogBookData@@QAEXPAD@Z		; LogBookData::SetSquadron
PUBLIC	?Personal@LogBookData@@QAEPADXZ			; LogBookData::Personal
PUBLIC	?SetPersonal@LogBookData@@QAEXPAD@Z		; LogBookData::SetPersonal
PUBLIC	?OptionsFile@LogBookData@@QAEPADXZ		; LogBookData::OptionsFile
PUBLIC	?SetOptionsFile@LogBookData@@QAEXPAD@Z		; LogBookData::SetOptionsFile
PUBLIC	?AceFactor@LogBookData@@QAEMXZ			; LogBookData::AceFactor
PUBLIC	?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ		; LogBookData::Rank
PUBLIC	?Commissioned@LogBookData@@QAEPADXZ		; LogBookData::Commissioned
PUBLIC	?SetCommissioned@LogBookData@@QAEXPAD@Z		; LogBookData::SetCommissioned
PUBLIC	?FlightHours@LogBookData@@QAEMXZ		; LogBookData::FlightHours
PUBLIC	?SetVoice@LogBookData@@QAEXF@Z			; LogBookData::SetVoice
PUBLIC	?Voice@LogBookData@@QAEEXZ			; LogBookData::Voice
PUBLIC	?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z		; CloseLogWindowCB
PUBLIC	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z		; LBSetupControls
PUBLIC	?SetImage@@YAHJPADJ@Z				; SetImage
PUBLIC	?SetResourceImage@@YAHJJ@Z			; SetResourceImage
PUBLIC	?SaveLogBookCB@@YAXJFPAVC_Base@@@Z		; SaveLogBookCB
PUBLIC	?CheckCallsign@@YAHPAD@Z			; CheckCallsign
PUBLIC	?AwardDevices@@YAXPAVC_Window@@JEE@Z		; AwardDevices
PUBLIC	?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ; GetPilotList
PUBLIC	?SetPilot@@YAHPADPAVC_ListBox@@@Z		; SetPilot
PUBLIC	?SaveControlValues@@YAHXZ			; SaveControlValues
PUBLIC	?F4DialogBox@@YAXPADP6AXJFPAVC_Base@@@Z2@Z	; F4DialogBox
PUBLIC	?F4DialogBox@@YAXJP6AXJFPAVC_Base@@@Z1@Z	; F4DialogBox
PUBLIC	?ChoosePilotCB@@YAXJFPAVC_Base@@@Z		; ChoosePilotCB
PUBLIC	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z	; PasswordWindow
PUBLIC	?CheckPasswordCB@@YAXJFPAVC_Base@@@Z		; CheckPasswordCB
PUBLIC	?RealLoadLogbook@@YAXXZ				; RealLoadLogbook
PUBLIC	?LoadLogBookWindows@@YAXPAUPilot@@HPAVIMAGE_RSC@@1@Z ; LoadLogBookWindows
PUBLIC	?NoPasswordCB@@YAXJFPAVC_Base@@@Z		; NoPasswordCB
PUBLIC	?LoadTGACB@@YAXJFPAVC_Base@@@Z			; LoadTGACB
PUBLIC	?LoadVirtualTGACB@@YAXJFPAVC_Base@@@Z		; LoadVirtualTGACB
PUBLIC	?ChangeImageCB@@YAXJFPAVC_Base@@@Z		; ChangeImageCB
PUBLIC	?PasswordChangeVerifiedCB@@YAXJFPAVC_Base@@@Z	; PasswordChangeVerifiedCB
PUBLIC	?PwdVerifiedContLoading@@YAXJFPAVC_Base@@@Z	; PwdVerifiedContLoading
PUBLIC	?LoadPilotCB@@YAXJFPAVC_Base@@@Z		; LoadPilotCB
PUBLIC	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z		; OpenLogBookCB
PUBLIC	?NewLogbookCB@@YAXJFPAVC_Base@@@Z		; NewLogbookCB
PUBLIC	?ClearCB@@YAXJFPAVC_Base@@@Z			; ClearCB
PUBLIC	?ClearLogBookCB@@YAXJFPAVC_Base@@@Z		; ClearLogBookCB
PUBLIC	?DisplayLogbook@@YAXPAUPilot@@PAVIMAGE_RSC@@1H@Z ; DisplayLogbook
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?UI_logbk@@3VLogBookData@@A			; UI_logbk
PUBLIC	??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@ ; `string'
PUBLIC	??_C@_0L@BOOHCJOD@lb_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@FDKPINND@lb_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@MOJJEPKE@lb_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@OCIGIPGP@lb_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@ ; `string'
PUBLIC	??_C@_0BD@PNOMMOHL@?$CFs?2pictures?2?$CFs?4tga?$AA@ ; `string'
PUBLIC	??_C@_05BLBOEPBE@?$CF4?41f?$AA@			; `string'
PUBLIC	??_C@_05NAHKBEAK@?$CF1?43f?$AA@			; `string'
PUBLIC	??_C@_03GICAEIGO@?$CF6d?$AA@			; `string'
PUBLIC	??_C@_05JHNKGONK@?$CF2?43f?$AA@			; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@		; `string'
PUBLIC	??_C@_03GOOLIKIF@?$CF3d?$AA@			; `string'
PUBLIC	??_C@_08EAFBBLEB@?$CFd?1?$CFd?1?$CFd?$AA@	; `string'
PUBLIC	??_C@_03GLKEJMAA@?$CF4d?$AA@			; `string'
PUBLIC	??_C@_01BMBHCPLG@5?$AA@				; `string'
PUBLIC	??_C@_01HIHLOKLC@1?$AA@				; `string'
PUBLIC	??_C@_0O@OGLPOOHG@patches?2?$CK?4tga?$AA@	; `string'
PUBLIC	??_C@_0P@DIPMCHDE@pictures?2?$CK?4tga?$AA@	; `string'
PUBLIC	??_C@_0DO@MJOHCGJD@FUNCTION?3?5void?5SetImage?$CI?$CJ?5?5?9?$DO?5Fa@ ; `string'
PUBLIC	??_C@_0BH@MKBLAEGO@Patch?5?$CFs?5is?5too?5large?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@LEKLIFGE@Patch?5?$CFs?5is?5an?5odd?5width?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IDDAECMO@Picture?5?$CFs?5is?5too?5large?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@GHEMMJIO@Picture?5?$CFs?5is?5an?5odd?5width?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@ ; `string'
PUBLIC	??_C@_0BB@GMHLKLCO@?$CFs?2config?2?$CFs?4plc?$AA@ ; `string'
PUBLIC	??_C@_08PIHKKDLA@?2?1?3?$DP?$CC?$DM?$DO?$HM?$AA@ ; `string'
PUBLIC	??_C@_0BB@PNCFEOF@?$CFs?2config?2?$CFs?4pop?$AA@ ; `string'
PUBLIC	??_C@_0BB@FCBNOHJF@?$CFs?2config?2?$CFs?4rul?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_stricmp:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	__imp__FindNextFileA@8:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_rename:PROC
EXTRN	_sprintf:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__mbscmp:PROC
EXTRN	__mbscspn:PROC
EXTRN	__mbsicmp:PROC
EXTRN	__ismbcalnum:PROC
EXTRN	?LoadImageA@C_Image@@QAEPAVC_Resmgr@@JPADFF@Z:PROC ; C_Image::LoadImageA
EXTRN	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z:PROC	; C_Image::GetImage
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?RemoveImage@C_Image@@QAEHJ@Z:PROC		; C_Image::RemoveImage
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetLabel@C_Button@@QAEXJJ@Z:PROC		; C_Button::SetLabel
EXTRN	?GetLabel@C_Button@@QAEPADF@Z:PROC		; C_Button::GetLabel
EXTRN	?SetImage@C_Button@@QAEXFJ@Z:PROC		; C_Button::SetImage
EXTRN	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z:PROC	; C_Button::SetImage
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z:PROC	; C_ListBox::AddItem
EXTRN	?RemoveAllItems@C_ListBox@@QAEXXZ:PROC		; C_ListBox::RemoveAllItems
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	?FindID@C_Parser@@QAEJPAD@Z:PROC		; C_Parser::FindID
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?SetControl@C_Window@@QAEXJ@Z:PROC		; C_Window::SetControl
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0LogBookData@@QAE@XZ:PROC			; LogBookData::LogBookData
EXTRN	??1LogBookData@@QAE@XZ:PROC			; LogBookData::~LogBookData
EXTRN	?Initialize@LogBookData@@QAEXXZ:PROC		; LogBookData::Initialize
EXTRN	?LoadData@LogBookData@@QAEHPAD@Z:PROC		; LogBookData::LoadData
EXTRN	?LoadData@LogBookData@@QAEHPAUPilot@@@Z:PROC	; LogBookData::LoadData
EXTRN	?SaveData@LogBookData@@QAEHXZ:PROC		; LogBookData::SaveData
EXTRN	?Clear@LogBookData@@QAEXXZ:PROC			; LogBookData::Clear
EXTRN	?CheckPassword@LogBookData@@QAEHPAD@Z:PROC	; LogBookData::CheckPassword
EXTRN	?SetPassword@LogBookData@@QAEHPAD@Z:PROC	; LogBookData::SetPassword
EXTRN	?GetPassword@LogBookData@@QAEHPAD@Z:PROC	; LogBookData::GetPassword
EXTRN	?TotalKills@LogBookData@@QAEFXZ:PROC		; LogBookData::TotalKills
EXTRN	?TotalKilled@LogBookData@@QAEFXZ:PROC		; LogBookData::TotalKilled
EXTRN	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::LoadOptions
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?Uni_Float@@YAXPAD@Z:PROC			; Uni_Float
EXTRN	?MakeVirtualListFromRsc@@YAXJJ@Z:PROC		; MakeVirtualListFromRsc
EXTRN	?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z:PROC ; LoadVirtualFile
EXTRN	?UpdateKeyMapList@@YAHPADH@Z:PROC		; UpdateKeyMapList
EXTRN	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC	; AreYouSure
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?VirtualFileList@@3PAY0EA@DA:BYTE		; VirtualFileList
EXTRN	?LBLoaded@@3HA:DWORD				; LBLoaded
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?UI_logbk@@3VLogBookData@@A DB 0174H DUP (?)		; UI_logbk
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCBNOHJF@?$CFs?2config?2?$CFs?4rul?$AA@
CONST	SEGMENT
??_C@_0BB@FCBNOHJF@?$CFs?2config?2?$CFs?4rul?$AA@ DB '%s\config\%s.rul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNCFEOF@?$CFs?2config?2?$CFs?4pop?$AA@
CONST	SEGMENT
??_C@_0BB@PNCFEOF@?$CFs?2config?2?$CFs?4pop?$AA@ DB '%s\config\%s.pop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIHKKDLA@?2?1?3?$DP?$CC?$DM?$DO?$HM?$AA@
CONST	SEGMENT
??_C@_08PIHKKDLA@?2?1?3?$DP?$CC?$DM?$DO?$HM?$AA@ DB '\/:?"<>|', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMHLKLCO@?$CFs?2config?2?$CFs?4plc?$AA@
CONST	SEGMENT
??_C@_0BB@GMHLKLCO@?$CFs?2config?2?$CFs?4plc?$AA@ DB '%s\config\%s.plc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@
CONST	SEGMENT
??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@ DB '%s\config\%s.lbk', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GHEMMJIO@Picture?5?$CFs?5is?5an?5odd?5width?6?$AA@
CONST	SEGMENT
??_C@_0BM@GHEMMJIO@Picture?5?$CFs?5is?5an?5odd?5width?6?$AA@ DB 'Picture '
	DB	'%s is an odd width', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IDDAECMO@Picture?5?$CFs?5is?5too?5large?6?$AA@
CONST	SEGMENT
??_C@_0BJ@IDDAECMO@Picture?5?$CFs?5is?5too?5large?6?$AA@ DB 'Picture %s i'
	DB	's too large', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LEKLIFGE@Patch?5?$CFs?5is?5an?5odd?5width?6?$AA@
CONST	SEGMENT
??_C@_0BK@LEKLIFGE@Patch?5?$CFs?5is?5an?5odd?5width?6?$AA@ DB 'Patch %s i'
	DB	's an odd width', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKBLAEGO@Patch?5?$CFs?5is?5too?5large?6?$AA@
CONST	SEGMENT
??_C@_0BH@MKBLAEGO@Patch?5?$CFs?5is?5too?5large?6?$AA@ DB 'Patch %s is to'
	DB	'o large', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MJOHCGJD@FUNCTION?3?5void?5SetImage?$CI?$CJ?5?5?9?$DO?5Fa@
CONST	SEGMENT
??_C@_0DO@MJOHCGJD@FUNCTION?3?5void?5SetImage?$CI?$CJ?5?5?9?$DO?5Fa@ DB 'F'
	DB	'UNCTION: void SetImage()  -> Failed to load PHOTO file: %s ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DIPMCHDE@pictures?2?$CK?4tga?$AA@
CONST	SEGMENT
??_C@_0P@DIPMCHDE@pictures?2?$CK?4tga?$AA@ DB 'pictures\*.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGLPOOHG@patches?2?$CK?4tga?$AA@
CONST	SEGMENT
??_C@_0O@OGLPOOHG@patches?2?$CK?4tga?$AA@ DB 'patches\*.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1?$AA@
CONST	SEGMENT
??_C@_01HIHLOKLC@1?$AA@ DB '1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01BMBHCPLG@5?$AA@
CONST	SEGMENT
??_C@_01BMBHCPLG@5?$AA@ DB '5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLKEJMAA@?$CF4d?$AA@
CONST	SEGMENT
??_C@_03GLKEJMAA@?$CF4d?$AA@ DB '%4d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EAFBBLEB@?$CFd?1?$CFd?1?$CFd?$AA@
CONST	SEGMENT
??_C@_08EAFBBLEB@?$CFd?1?$CFd?1?$CFd?$AA@ DB '%d/%d/%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOOLIKIF@?$CF3d?$AA@
CONST	SEGMENT
??_C@_03GOOLIKIF@?$CF3d?$AA@ DB '%3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
CONST	SEGMENT
??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@ DB '%2d/%2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05JHNKGONK@?$CF2?43f?$AA@
CONST	SEGMENT
??_C@_05JHNKGONK@?$CF2?43f?$AA@ DB '%2.3f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GICAEIGO@?$CF6d?$AA@
CONST	SEGMENT
??_C@_03GICAEIGO@?$CF6d?$AA@ DB '%6d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAHKBEAK@?$CF1?43f?$AA@
CONST	SEGMENT
??_C@_05NAHKBEAK@?$CF1?43f?$AA@ DB '%1.3f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BLBOEPBE@?$CF4?41f?$AA@
CONST	SEGMENT
??_C@_05BLBOEPBE@?$CF4?41f?$AA@ DB '%4.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNOMMOHL@?$CFs?2pictures?2?$CFs?4tga?$AA@
CONST	SEGMENT
??_C@_0BD@PNOMMOHL@?$CFs?2pictures?2?$CFs?4tga?$AA@ DB '%s\pictures\%s.tg'
	DB	'a', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@
CONST	SEGMENT
??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@ DB '%s\patches\%s.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCIGIPGP@lb_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0L@OCIGIPGP@lb_scf?4lst?$AA@ DB 'lb_scf.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MOJJEPKE@lb_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0L@MOJJEPKE@lb_snd?4lst?$AA@ DB 'lb_snd.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FDKPINND@lb_art?4lst?$AA@
CONST	SEGMENT
??_C@_0L@FDKPINND@lb_art?4lst?$AA@ DB 'lb_art.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BOOHCJOD@lb_res?4lst?$AA@
CONST	SEGMENT
??_C@_0L@BOOHCJOD@lb_res?4lst?$AA@ DB 'lb_res.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@
CONST	SEGMENT
??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@ DB '%s\config\*.lbk', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_UI_logbk$initializer$ DD FLAT:??__EUI_logbk@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_killed$1 = -308					; size = 4
_kills$2 = -304						; size = 4
_CurrMedal$3 = -300					; size = 4
_dgft$4 = -296						; size = 4
_i$5 = -292						; size = 4
_lbox$ = -288						; size = 4
_camp$6 = -284						; size = 4
_ebox$ = -280						; size = 4
_win$ = -276						; size = 4
_text$ = -272						; size = 4
_button$ = -268						; size = 4
_buf$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_Pilot$ = 8						; size = 4
_Photo$ = 12						; size = 4
_Patch$ = 16						; size = 4
_EditFlag$ = 20						; size = 4
?DisplayLogbook@@YAXPAUPilot@@PAVIMAGE_RSC@@1H@Z PROC	; DisplayLogbook

; 2026 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2027 : 	C_EditBox *ebox;
; 2028 : 	C_Window *win;
; 2029 : 	C_Button *button;
; 2030 : 	C_Text *text;
; 2031 : 	C_ListBox *lbox;
; 2032 : 	_TCHAR buf[MAX_PATH];
; 2033 : 
; 2034 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2035 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN72@DisplayLog

; 2036 : 	{
; 2037 : 		if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	$LN71@DisplayLog

; 2038 : 		{
; 2039 : 			button=(C_Button *)win->FindControl(LOG_NEW);

	push	50040					; 0000c378H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2040 : 			if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN70@DisplayLog

; 2041 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN70@DisplayLog:

; 2042 : 
; 2043 : 			button=(C_Button *)win->FindControl(LOG_CLEAR);

	push	50041					; 0000c379H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2044 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN69@DisplayLog

; 2045 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN69@DisplayLog:

; 2046 : 
; 2047 : 			button=(C_Button *)win->FindControl(LOG_CANCEL);

	push	50042					; 0000c37aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2048 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN68@DisplayLog

; 2049 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN68@DisplayLog:

; 2050 : 
; 2051 : 			button=(C_Button *)win->FindControl(LOG_OK);

	push	50043					; 0000c37bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2052 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN67@DisplayLog

; 2053 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN67@DisplayLog:

; 2054 : 
; 2055 : 			button=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2056 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN66@DisplayLog

; 2057 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN66@DisplayLog:

; 2058 : 		}
; 2059 : 		else

	jmp	$LN60@DisplayLog
$LN71@DisplayLog:

; 2060 : 		{
; 2061 : 			button=(C_Button *)win->FindControl(LOG_NEW);

	push	50040					; 0000c378H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2062 : 			if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN64@DisplayLog

; 2063 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN64@DisplayLog:

; 2064 : 
; 2065 : 			button=(C_Button *)win->FindControl(LOG_CLEAR);

	push	50041					; 0000c379H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2066 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN63@DisplayLog

; 2067 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN63@DisplayLog:

; 2068 : 
; 2069 : 			button=(C_Button *)win->FindControl(LOG_CANCEL);

	push	50042					; 0000c37aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2070 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN62@DisplayLog

; 2071 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN62@DisplayLog:

; 2072 : 
; 2073 : 			button=(C_Button *)win->FindControl(LOG_OK);

	push	50043					; 0000c37bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2074 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN61@DisplayLog

; 2075 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN61@DisplayLog:

; 2076 : 
; 2077 : 			button=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2078 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN60@DisplayLog

; 2079 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN60@DisplayLog:

; 2080 : 		}
; 2081 : 
; 2082 : 		button = (C_Button *)win->FindControl(PATCH_PIC);

	push	50057					; 0000c389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2083 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN59@DisplayLog

; 2084 : 		{
; 2085 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN58@DisplayLog

; 2086 : 				button->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2087 : 			else

	jmp	SHORT $LN57@DisplayLog
$LN58@DisplayLog:

; 2088 : 				button->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN57@DisplayLog:

; 2089 : 
; 2090 : 			button->SetImage(C_STATE_0,Patch);

	mov	ecx, DWORD PTR _Patch$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 2091 : 			button->SetImage(C_STATE_1,Patch);

	mov	edx, DWORD PTR _Patch$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 2092 : 			button->SetImage(C_STATE_DISABLED,Patch);

	mov	eax, DWORD PTR _Patch$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage
$LN59@DisplayLog:

; 2093 : 		}
; 2094 : 
; 2095 : 		button = (C_Button *)win->FindControl(PILOT_PIC);

	push	50060					; 0000c38cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2096 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN56@DisplayLog

; 2097 : 		{
; 2098 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN55@DisplayLog

; 2099 : 				button->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2100 : 			else

	jmp	SHORT $LN54@DisplayLog
$LN55@DisplayLog:

; 2101 : 				button->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN54@DisplayLog:

; 2102 : 
; 2103 : 			button->SetImage(C_STATE_0,Photo);

	mov	ecx, DWORD PTR _Photo$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 2104 : 			button->SetImage(C_STATE_1,Photo);

	mov	edx, DWORD PTR _Photo$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 2105 : 			button->SetImage(C_STATE_DISABLED,Photo);

	mov	eax, DWORD PTR _Photo$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage
$LN56@DisplayLog:

; 2106 : 		}
; 2107 : 
; 2108 : 
; 2109 : 		ebox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2110 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN53@DisplayLog

; 2111 : 		{
; 2112 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN52@DisplayLog

; 2113 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2114 : 			else

	jmp	SHORT $LN51@DisplayLog
$LN52@DisplayLog:

; 2115 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN51@DisplayLog:

; 2116 : 			ebox->SetText(Pilot->Password);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 34					; 00000022H
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN53@DisplayLog:

; 2117 : 		}
; 2118 : 
; 2119 : 		ebox=(C_EditBox *)win->FindControl(PILOT_LIST);

	push	50005					; 0000c355H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2120 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN50@DisplayLog

; 2121 : 		{
; 2122 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN49@DisplayLog

; 2123 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2124 : 			else

	jmp	SHORT $LN48@DisplayLog
$LN49@DisplayLog:

; 2125 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN48@DisplayLog:

; 2126 : 
; 2127 : 			ebox->SetText(Pilot->Name);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN50@DisplayLog:

; 2128 : 		}
; 2129 : 
; 2130 : 		ebox=(C_EditBox *)win->FindControl(CALLSIGN_LIST);

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2131 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN47@DisplayLog

; 2132 : 		{
; 2133 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN46@DisplayLog

; 2134 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2135 : 			else

	jmp	SHORT $LN45@DisplayLog
$LN46@DisplayLog:

; 2136 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN45@DisplayLog:

; 2137 : 
; 2138 : 			ebox->SetText(Pilot->Callsign);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 21					; 00000015H
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN47@DisplayLog:

; 2139 : 		}
; 2140 : 
; 2141 : 		lbox=(C_ListBox *)win->FindControl(LOGBOOK_LIST);

	push	50068					; 0000c394H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2142 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN41@DisplayLog

; 2143 : 		{
; 2144 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	$LN43@DisplayLog

; 2145 : 			{
; 2146 : 				_stprintf(buf,_T("%s\\config\\*.lbk"),FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2147 : 				GetPilotList( win, buf, NULL, lbox, TRUE, TRUE );

	push	1
	push	1
	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ; GetPilotList
	add	esp, 24					; 00000018H

; 2148 : 
; 2149 : 				ebox=(C_EditBox *)win->FindControl(CALLSIGN_LIST); // just for good measure

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2150 : 				if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN42@DisplayLog

; 2151 : 					SetPilot(ebox->GetText(),lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	?SetPilot@@YAHPADPAVC_ListBox@@@Z	; SetPilot
	add	esp, 8
$LN42@DisplayLog:

; 2152 : 				
; 2153 : 				lbox->SetCallback(ChoosePilotCB);

	push	OFFSET ?ChoosePilotCB@@YAXJFPAVC_Base@@@Z ; ChoosePilotCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2154 : 				lbox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2155 : 			}
; 2156 : 			else

	jmp	SHORT $LN41@DisplayLog
$LN43@DisplayLog:

; 2157 : 				lbox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN41@DisplayLog:

; 2158 : 		}
; 2159 : 
; 2160 : 		lbox=(C_ListBox *)win->FindControl(VOICE_CHOICE);

	push	50100					; 0000c3b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2161 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN40@DisplayLog

; 2162 : 		{
; 2163 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN39@DisplayLog

; 2164 : 				lbox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2165 : 			else

	jmp	SHORT $LN38@DisplayLog
$LN39@DisplayLog:

; 2166 : 				lbox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN38@DisplayLog:

; 2167 : 
; 2168 : 			lbox->SetValue(Pilot->voice+1);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	movsx	edx, WORD PTR [ecx+366]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN40@DisplayLog:

; 2169 : 		}
; 2170 : 
; 2171 : 		ebox=(C_EditBox *)win->FindControl(PERSONAL_TEXT);

	push	50055					; 0000c387H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2172 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN37@DisplayLog

; 2173 : 		{
; 2174 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN36@DisplayLog

; 2175 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2176 : 			else

	jmp	SHORT $LN35@DisplayLog
$LN36@DisplayLog:

; 2177 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN35@DisplayLog:

; 2178 : 
; 2179 : 			ebox->SetText(Pilot->Personal);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 225				; 000000e1H
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN37@DisplayLog:

; 2180 : 		}
; 2181 : 
; 2182 : 		ebox=(C_EditBox *)win->FindControl(SQUADRON_NAME);

	push	50056					; 0000c388H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2183 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN34@DisplayLog

; 2184 : 		{
; 2185 : 			if(EditFlag)

	cmp	DWORD PTR _EditFlag$[ebp], 0
	je	SHORT $LN33@DisplayLog

; 2186 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2187 : 			else

	jmp	SHORT $LN32@DisplayLog
$LN33@DisplayLog:

; 2188 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN32@DisplayLog:

; 2189 : 
; 2190 : 			ebox->SetText(Pilot->Squadron);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 346				; 0000015aH
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN34@DisplayLog:

; 2191 : 		}
; 2192 : 
; 2193 : 		button = (C_Button *)win->FindControl(50095);//RANKS value was changed

	push	50095					; 0000c3afH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2194 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN31@DisplayLog

; 2195 : 		{
; 2196 : 			button->SetState(static_cast<short>(Pilot->Rank));

	mov	edx, DWORD PTR _Pilot$[ebp]
	movzx	eax, WORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 2197 : 			button->SetHelpText(gFullRanksTxt[Pilot->Rank]);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR ?gFullRanksTxt@@3PAJA[edx*4]
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN31@DisplayLog:

; 2198 : 		}
; 2199 : 
; 2200 : 		text = (C_Text *)win->FindControl(COMMISSIONED_FIELD);

	push	50045					; 0000c37dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2201 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN30@DisplayLog

; 2202 : 		{
; 2203 : 			text->SetText(Pilot->Commissioned);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 45					; 0000002dH
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN30@DisplayLog:

; 2204 : 		}
; 2205 : 
; 2206 : 		text = (C_Text *)win->FindControl(HOURS_FIELD);

	push	50015					; 0000c35fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2207 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN29@DisplayLog

; 2208 : 		{
; 2209 : 			_stprintf(buf,"%4.1f",Pilot->FlightHours);

	mov	eax, DWORD PTR _Pilot$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+72]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05BLBOEPBE@?$CF4?41f?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2210 : 			Uni_Float(buf);

	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 2211 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN29@DisplayLog:

; 2212 : 		}
; 2213 : 
; 2214 : 		text = (C_Text *)win->FindControl(ACE_FIELD);

	push	50019					; 0000c363H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2215 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN28@DisplayLog

; 2216 : 		{
; 2217 : 			_stprintf(buf,"%1.3f",Pilot->AceFactor);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+76]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05NAHKBEAK@?$CF1?43f?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2218 : 			Uni_Float(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 2219 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN28@DisplayLog:

; 2220 : 		}
; 2221 : 
; 2222 : 		text = (C_Text *)win->FindControl(FRAGRATIO_FIELD);

	push	50048					; 0000c380H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2223 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN27@DisplayLog

; 2224 : 		{
; 2225 : 			int kills = Pilot->Campaign.Kills;

	mov	eax, DWORD PTR _Pilot$[ebp]
	movsx	ecx, WORD PTR [eax+118]
	mov	DWORD PTR _kills$2[ebp], ecx

; 2226 : 			int killed = Pilot->Campaign.Killed;

	mov	edx, DWORD PTR _Pilot$[ebp]
	movsx	eax, WORD PTR [edx+120]
	mov	DWORD PTR _killed$1[ebp], eax

; 2227 : 			_stprintf(buf,"%2d/%2d",kills,killed);

	mov	ecx, DWORD PTR _killed$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _kills$2[ebp]
	push	edx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 2228 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN27@DisplayLog:

; 2229 : 		} 
; 2230 : 
; 2231 : 		DF_STATS *dgft = &Pilot->Dogfight;

	mov	eax, DWORD PTR _Pilot$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR _dgft$4[ebp], eax

; 2232 : 
; 2233 : 		text = (C_Text *)win->FindControl(DF_MATCH_FIELD);

	push	50021					; 0000c365H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2234 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN26@DisplayLog

; 2235 : 		{
; 2236 : 			_stprintf(buf,_T("%3d"),dgft->MatchesWon + dgft->MatchesLost);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	edx, ecx
	push	edx
	push	OFFSET ??_C@_03GOOLIKIF@?$CF3d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2237 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN26@DisplayLog:

; 2238 : 		}
; 2239 : 
; 2240 : 		text = (C_Text *)win->FindControl(DF_WON_LOST_FIELD);

	push	50061					; 0000c38dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2241 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN25@DisplayLog

; 2242 : 		{
; 2243 : 			_stprintf(buf,_T("%2d/%2d"),dgft->MatchesWon,dgft->MatchesLost);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2244 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN25@DisplayLog:

; 2245 : 		}
; 2246 : 		//DF_MATCH_VSHUMANS_FIELD
; 2247 : 		text = (C_Text *)win->FindControl(DF_MATCH_VSHUMANS_FIELD);

	push	50046					; 0000c37eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2248 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN24@DisplayLog

; 2249 : 		{
; 2250 : 			_stprintf(buf,_T("%2d/%2d"),dgft->MatchesWonVHum,dgft->MatchesLostVHum);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+6]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+4]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2251 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN24@DisplayLog:

; 2252 : 		}
; 2253 : 		//DF_KILL_FIELD
; 2254 : 		text = (C_Text *)win->FindControl(DF_KILL_FIELD);

	push	50023					; 0000c367H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2255 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN23@DisplayLog

; 2256 : 		{
; 2257 : 			_stprintf(buf,_T("%2d/%2d"),dgft->Kills,dgft->Killed);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+8]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2258 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN23@DisplayLog:

; 2259 : 		}
; 2260 : 		//DF_H2H_FIELD
; 2261 : 		//DF_VS_FIELD
; 2262 : 		text = (C_Text *)win->FindControl(DF_VS_FIELD);

	push	50025					; 0000c369H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2263 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN22@DisplayLog

; 2264 : 		{
; 2265 : 			_stprintf(buf,_T("%2d/%2d"),dgft->HumanKills,dgft->KilledByHuman);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+14]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2266 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN22@DisplayLog:

; 2267 : 		}
; 2268 : 
; 2269 : 		CAMP_STATS *camp = &Pilot->Campaign;

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _camp$6[ebp], ecx

; 2270 : 
; 2271 : 		//CAMP_CAMPAIGNS_FIELD
; 2272 : 		text = (C_Text *)win->FindControl(CAMP_CAMPAIGNS_FIELD);

	push	50062					; 0000c38eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2273 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN21@DisplayLog

; 2274 : 		{
; 2275 : 			_stprintf(buf,_T("%d/%d/%d"),camp->GamesWon,camp->GamesLost,camp->GamesTied);

	mov	edx, DWORD PTR _camp$6[ebp]
	movsx	eax, WORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_08EAFBBLEB@?$CFd?1?$CFd?1?$CFd?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2276 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN21@DisplayLog:

; 2277 : 		}
; 2278 : 
; 2279 : 		//CAMP_MISS_FIELD
; 2280 : 		text = (C_Text *)win->FindControl(CAMP_MISS_FIELD);

	push	50027					; 0000c36bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2281 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN20@DisplayLog

; 2282 : 		{
; 2283 : 			_stprintf(buf,_T("%4d"),camp->Missions);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+6]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2284 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN20@DisplayLog:

; 2285 : 		}
; 2286 : 		//CAMP_RATING_FIELD
; 2287 : 		text = (C_Text *)win->FindControl(CAMP_RATING_FIELD);

	push	50028					; 0000c36cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2288 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN19@DisplayLog

; 2289 : 		{
; 2290 : 			if(camp->Missions)

	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	je	SHORT $LN18@DisplayLog

; 2291 : 				_stprintf(buf,_T("%2.3f"),(double)camp->TotalMissionScore/camp->Missions);

	mov	edx, DWORD PTR _camp$6[ebp]
	cvtsi2sd xmm0, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+6]
	cvtsi2sd xmm1, ecx
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JHNKGONK@?$CF2?43f?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2292 : 			else

	jmp	SHORT $LN17@DisplayLog
$LN18@DisplayLog:

; 2293 : 				_stprintf(buf,"0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8
$LN17@DisplayLog:

; 2294 : 			Uni_Float(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 2295 : 			text->SetText(buf);

	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN19@DisplayLog:

; 2296 : 		}
; 2297 : 		//CAMP_KILL_FIELD
; 2298 : 		text = (C_Text *)win->FindControl(CAMP_KILL_FIELD);

	push	50030					; 0000c36eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2299 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN16@DisplayLog

; 2300 : 		{
; 2301 : 			_stprintf(buf,_T("%2d/%2d"),camp->Kills,camp->Killed);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+18]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2302 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN16@DisplayLog:

; 2303 : 		}
; 2304 : 		//CAMP_VS_FIELD
; 2305 : 		text = (C_Text *)win->FindControl(CAMP_VS_FIELD);

	push	50044					; 0000c37cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2306 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN15@DisplayLog

; 2307 : 		{
; 2308 : 			_stprintf(buf,_T("%2d/%2d"),camp->HumanKills,camp->KilledByHuman);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+22]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2309 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN15@DisplayLog:

; 2310 : 		}
; 2311 : 
; 2312 : 		text = (C_Text *)win->FindControl(CAMP_AA_KILLS_FIELD);

	push	50063					; 0000c38fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2313 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN14@DisplayLog

; 2314 : 		{
; 2315 : 			_stprintf(buf,_T("%4d"),camp->Kills);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2316 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN14@DisplayLog:

; 2317 : 		}
; 2318 : 
; 2319 : 		text = (C_Text *)win->FindControl(CAMP_AG_KILLS_FIELD);

	push	50064					; 0000c390H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2320 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN13@DisplayLog

; 2321 : 		{
; 2322 : 			_stprintf(buf,_T("%4d"),camp->AirToGround);

	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+28]
	push	ecx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2323 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN13@DisplayLog:

; 2324 : 		}
; 2325 : 
; 2326 : 		text = (C_Text *)win->FindControl(CAMP_STATIC_KILLS_FIELD);

	push	50065					; 0000c391H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2327 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN12@DisplayLog

; 2328 : 		{
; 2329 : 			_stprintf(buf,_T("%4d"),camp->Static);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+30]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2330 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN12@DisplayLog:

; 2331 : 		}
; 2332 : 
; 2333 : 		text = (C_Text *)win->FindControl(CAMP_NAVAL_KILLS_FIELD);

	push	50066					; 0000c392H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2334 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN11@DisplayLog

; 2335 : 		{
; 2336 : 			_stprintf(buf,_T("%4d"),camp->Naval);

	mov	eax, DWORD PTR _camp$6[ebp]
	movsx	ecx, WORD PTR [eax+32]
	push	ecx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2337 : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN11@DisplayLog:

; 2338 : 		}
; 2339 : 
; 2340 : 		text = (C_Text *)win->FindControl(CAMP_DEATHS_FIELD);

	push	50067					; 0000c393H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2341 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN10@DisplayLog

; 2342 : 		{
; 2343 : 			_stprintf(buf,_T("%4d"),camp->Killed);

	mov	ecx, DWORD PTR _camp$6[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2344 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN10@DisplayLog:

; 2345 : 		}
; 2346 : 		//MEDALS_AFC
; 2347 : 		//MEDALS_AM
; 2348 : 		//MEDALS_DFC
; 2349 : 		//MEDALS_SS
; 2350 : 		//MEDALS_KC
; 2351 : 		int i;
; 2352 : 		//need to also do stars and oakleafs for multiple medals
; 2353 : 		int CurrMedal = MEDALS_AFC;

	mov	DWORD PTR _CurrMedal$3[ebp], 50049	; 0000c381H

; 2354 : 
; 2355 : 		for(i = 0; i < NUM_MEDALS ;i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN9@DisplayLog
$LN8@DisplayLog:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN9@DisplayLog:
	cmp	DWORD PTR _i$5[ebp], 6
	jge	$LN7@DisplayLog

; 2356 : 		{
; 2357 : 			if(Pilot->Medals[i])

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, DWORD PTR _i$5[ebp]
	movzx	edx, BYTE PTR [ecx+140]
	test	edx, edx
	je	$LN5@DisplayLog

; 2358 : 			{
; 2359 : 				button = (C_Button *)win->FindControl(CurrMedal);

	mov	eax, DWORD PTR _CurrMedal$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2360 : 				if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	$LN5@DisplayLog

; 2361 : 				{
; 2362 : 					AwardDevices(win, CurrMedal, static_cast<uchar>(i), Pilot->Medals[i]);

	mov	ecx, DWORD PTR _Pilot$[ebp]
	add	ecx, DWORD PTR _i$5[ebp]
	movzx	edx, BYTE PTR [ecx+140]
	push	edx
	movzx	eax, BYTE PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _CurrMedal$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?AwardDevices@@YAXPAVC_Window@@JEE@Z	; AwardDevices
	add	esp, 16					; 00000010H

; 2363 : 					button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 2364 : 					button->SetState(static_cast<short>(i));

	movzx	ecx, WORD PTR _i$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2365 : 					button->SetHelpText(gStringMgr->AddText(button->GetLabel(static_cast<short>(i))));

	movzx	eax, WORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	call	?GetLabel@C_Button@@QAEPADF@Z		; C_Button::GetLabel
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax

; 2366 : 					button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2367 : 					CurrMedal++;

	mov	ecx, DWORD PTR _CurrMedal$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _CurrMedal$3[ebp], ecx
$LN5@DisplayLog:

; 2368 : 				}
; 2369 : 			}
; 2370 : 			
; 2371 : 		}

	jmp	$LN8@DisplayLog
$LN7@DisplayLog:

; 2372 : 
; 2373 : 		for(i = CurrMedal;i<NUM_MEDALS + MEDALS_AFC ;i++)

	mov	edx, DWORD PTR _CurrMedal$3[ebp]
	mov	DWORD PTR _i$5[ebp], edx
	jmp	SHORT $LN4@DisplayLog
$LN3@DisplayLog:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@DisplayLog:
	cmp	DWORD PTR _i$5[ebp], 50055		; 0000c387H
	jge	SHORT $LN2@DisplayLog

; 2374 : 		{
; 2375 : 			button = (C_Button *)win->FindControl(i);

	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2376 : 			if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@DisplayLog

; 2377 : 			{
; 2378 : 				AwardDevices(win, i, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _i$5[ebp]
	push	edx
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?AwardDevices@@YAXPAVC_Window@@JEE@Z	; AwardDevices
	add	esp, 16					; 00000010H

; 2379 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2380 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@DisplayLog:

; 2381 : 			}
; 2382 : 		}

	jmp	$LN3@DisplayLog
$LN2@DisplayLog:

; 2383 : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN72@DisplayLog:

; 2384 : 	}
; 2385 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayLogbook@@YAXPAUPilot@@PAVIMAGE_RSC@@1H@Z ENDP	; DisplayLogbook
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ClearLogBookCB@@YAXJFPAVC_Base@@@Z PROC		; ClearLogBookCB

; 1760 : {

	push	ebp
	mov	ebp, esp

; 1761 : 	if(LogState & LB_OPPONENT)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 4
	je	SHORT $LN2@ClearLogBo

; 1762 : 		return;

	jmp	SHORT $LN3@ClearLogBo
$LN2@ClearLogBo:

; 1763 : 
; 1764 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN1@ClearLogBo

; 1765 : 		return;

	jmp	SHORT $LN3@ClearLogBo
$LN1@ClearLogBo:

; 1766 : 
; 1767 : 	AreYouSure(TXT_WARNING,TXT_CLEAR_LOGBOOK,ClearCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?ClearCB@@YAXJFPAVC_Base@@@Z	; ClearCB
	push	155					; 0000009bH
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H
$LN3@ClearLogBo:

; 1768 : }

	pop	ebp
	ret	0
?ClearLogBookCB@@YAXJFPAVC_Base@@@Z ENDP		; ClearLogBookCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ClearCB@@YAXJFPAVC_Base@@@Z PROC			; ClearCB

; 1750 : {

	push	ebp
	mov	ebp, esp

; 1751 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@ClearCB

; 1752 : 		return;

	jmp	SHORT $LN2@ClearCB
$LN1@ClearCB:

; 1753 : 	
; 1754 : 	UI_logbk.Clear();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Clear@LogBookData@@QAEXXZ		; LogBookData::Clear

; 1755 : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1756 : 	LBSetupControls();

	push	0
	push	0
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8
$LN2@ClearCB:

; 1757 : }

	pop	ebp
	ret	0
?ClearCB@@YAXJFPAVC_Base@@@Z ENDP			; ClearCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?NewLogbookCB@@YAXJFPAVC_Base@@@Z PROC			; NewLogbookCB

; 1736 : {

	push	ebp
	mov	ebp, esp

; 1737 : 	if(LogState & LB_OPPONENT)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 4
	je	SHORT $LN2@NewLogbook

; 1738 : 		return;

	jmp	SHORT $LN3@NewLogbook
$LN2@NewLogbook:

; 1739 : 
; 1740 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN1@NewLogbook

; 1741 : 		return;

	jmp	SHORT $LN3@NewLogbook
$LN1@NewLogbook:

; 1742 : 
; 1743 : 	LogState |= LB_EDITABLE | LB_CHECKED;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	or	edx, 10					; 0000000aH
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState

; 1744 : 
; 1745 : 	UI_logbk.Initialize();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Initialize@LogBookData@@QAEXXZ		; LogBookData::Initialize

; 1746 : 	LBSetupControls();

	push	0
	push	0
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8
$LN3@NewLogbook:

; 1747 : }

	pop	ebp
	ret	0
?NewLogbookCB@@YAXJFPAVC_Base@@@Z ENDP			; NewLogbookCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenLogBookCB@@YAXJFPAVC_Base@@@Z PROC			; OpenLogBookCB

; 1719 : {

	push	ebp
	mov	ebp, esp

; 1720 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@OpenLogBoo

; 1721 : 		return;

	jmp	$LN3@OpenLogBoo
$LN2@OpenLogBoo:

; 1722 : 
; 1723 : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 1724 : 
; 1725 : 	LoadLogBookWindows();

	push	0
	push	0
	push	2
	push	OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?LoadLogBookWindows@@YAXPAUPilot@@HPAVIMAGE_RSC@@1@Z ; LoadLogBookWindows
	add	esp, 16					; 00000010H

; 1726 : 	
; 1727 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1728 : 	SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 1729 : 
; 1730 : 	if(!LogBook.CheckPassword(_T("")))

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN3@OpenLogBoo

; 1731 : 		PasswordWindow(TXT_LOG_IN,TXT_LOG_IN_MESSAGE,CheckPasswordCB,NoPasswordCB);

	push	OFFSET ?NoPasswordCB@@YAXJFPAVC_Base@@@Z ; NoPasswordCB
	push	OFFSET ?CheckPasswordCB@@YAXJFPAVC_Base@@@Z ; CheckPasswordCB
	push	149					; 00000095H
	push	147					; 00000093H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H
$LN3@OpenLogBoo:

; 1732 : }

	pop	ebp
	ret	0
?OpenLogBookCB@@YAXJFPAVC_Base@@@Z ENDP			; OpenLogBookCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_stpwin$1 = -1060					; size = 4
_pbox$2 = -1056						; size = 4
_button$3 = -1052					; size = 4
_ebox$ = -1048						; size = 4
_buf$4 = -1044						; size = 260
_Pilot$5 = -784						; size = 260
_orig$6 = -524						; size = 260
_newfile$7 = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadPilotCB@@YAXJFPAVC_Base@@@Z PROC			; LoadPilotCB

; 1573 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1060				; 00000424H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1574 : 	C_EditBox *ebox;
; 1575 : 
; 1576 : 	if(hittype == C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	jne	$LN19@LoadPilotC

; 1577 : 	{
; 1578 : 		//if password was changed, confirm it (do it here after list window is closed
; 1579 : 		//so we don't have two exclusive windows at once)
; 1580 : 		ebox=(C_EditBox *)control->Parent_->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1581 : 		if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN18@LoadPilotC

; 1582 : 		{
; 1583 : 			if(!UI_logbk.CheckPassword(ebox->GetText()))

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN18@LoadPilotC

; 1584 : 			{
; 1585 : 				LogState &= ~LB_CHECKED;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, -9					; fffffff7H
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState

; 1586 : 				PasswordWindow(TXT_VERIFY_PASSWORD,TXT_VERIFY_PASS_MESSAGE,PwdVerifiedContLoading,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?PwdVerifiedContLoading@@YAXJFPAVC_Base@@@Z ; PwdVerifiedContLoading
	push	150					; 00000096H
	push	148					; 00000094H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H

; 1587 : 				return;

	jmp	$LN20@LoadPilotC
$LN18@LoadPilotC:

; 1588 : 			}
; 1589 : 		}
; 1590 : 
; 1591 : 		_TCHAR Pilot[MAX_PATH];
; 1592 : 		_tcscpy(Pilot,((C_ListBox *)control)->GetText());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	lea	eax, DWORD PTR _Pilot$5[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1593 : 
; 1594 : 		//return if current logbook is selected
; 1595 : 		if(!_tcscmp(Pilot,UI_logbk.Callsign()))

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	lea	ecx, DWORD PTR _Pilot$5[ebp]
	push	ecx
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@LoadPilotC

; 1596 : 		{
; 1597 : 			if(LogState & LB_INVALID_CALLSIGN)

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 1
	je	SHORT $LN15@LoadPilotC

; 1598 : 			{
; 1599 : 				AreYouSure(TXT_ERROR,TXT_INVALID_CALLSIGN,CloseWindowCB,NULL);

	push	0
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	154					; 0000009aH
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1600 : 				LogState &= ~LB_INVALID_CALLSIGN;

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?LogState@@3HA, eax		; LogState
$LN15@LoadPilotC:

; 1601 : 				//return;
; 1602 : 			}
; 1603 : 			return;

	jmp	$LN20@LoadPilotC
$LN16@LoadPilotC:

; 1604 : 		}
; 1605 : 
; 1606 : 		ebox=(C_EditBox *)control->Parent_->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1607 : 		if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN14@LoadPilotC

; 1608 : 		{
; 1609 : 			SaveControlValues();

	call	?SaveControlValues@@YAHXZ		; SaveControlValues

; 1610 : 			UI_logbk.SaveData();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1611 : 			
; 1612 : 			//load data for selected pilot and check password
; 1613 : 			if( UI_logbk.LoadData(Pilot) )

	lea	edx, DWORD PTR _Pilot$5[ebp]
	push	edx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?LoadData@LogBookData@@QAEHPAD@Z	; LogBookData::LoadData
	test	eax, eax
	je	$LN14@LoadPilotC

; 1614 : 			{
; 1615 : 				LogState &= ~LB_CHECKED;

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, -9					; fffffff7H
	mov	DWORD PTR ?LogState@@3HA, eax		; LogState

; 1616 : 				//if password check is passed, allow access, otherwise
; 1617 : 				//initialize UI_logbk and update controls
; 1618 : 				if(!UI_logbk.CheckPassword(_T("")))

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN12@LoadPilotC

; 1619 : 					PasswordWindow(TXT_LOG_IN,TXT_LOG_IN_MESSAGE,CheckPasswordCB,NoPasswordCB);

	push	OFFSET ?NoPasswordCB@@YAXJFPAVC_Base@@@Z ; NoPasswordCB
	push	OFFSET ?CheckPasswordCB@@YAXJFPAVC_Base@@@Z ; CheckPasswordCB
	push	149					; 00000095H
	push	147					; 00000093H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H

; 1620 : 				else

	jmp	SHORT $LN11@LoadPilotC
$LN12@LoadPilotC:

; 1621 : 				{
; 1622 : 					PlayerOptions.LoadOptions(UI_logbk.OptionsFile());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?OptionsFile@LogBookData@@QAEPADXZ	; LogBookData::OptionsFile
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::LoadOptions

; 1623 : 					UpdateKeyMapList(PlayerOptions.keyfile,1);

	push	1
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8
$LN11@LoadPilotC:

; 1624 : 				}
; 1625 : 
; 1626 : 				LBSetupControls();

	push	0
	push	0
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8

; 1627 : 				
; 1628 : 				
; 1629 : 				C_Window *stpwin;
; 1630 : 				stpwin = gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _stpwin$1[ebp], eax

; 1631 : 				if(stpwin)

	cmp	DWORD PTR _stpwin$1[ebp], 0
	je	SHORT $LN10@LoadPilotC

; 1632 : 				{
; 1633 : 					C_Button *button;
; 1634 : 					button = (C_Button *)stpwin->FindControl(SET_LOGBOOK);

	push	70036					; 00011194H
	mov	ecx, DWORD PTR _stpwin$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$3[ebp], eax

; 1635 : 					if(button)

	cmp	DWORD PTR _button$3[ebp], 0
	je	SHORT $LN10@LoadPilotC

; 1636 : 					{
; 1637 : 						button->SetText(0,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	0
	mov	ecx, DWORD PTR _button$3[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 1638 : 						button->Refresh();

	mov	ecx, DWORD PTR _button$3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$3[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@LoadPilotC:

; 1639 : 					}
; 1640 : 				}
; 1641 : 				
; 1642 : 				//notify user the callsign entered was invalid
; 1643 : 				if(LogState & LB_INVALID_CALLSIGN)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 1
	je	SHORT $LN14@LoadPilotC

; 1644 : 				{
; 1645 : 					AreYouSure(TXT_ERROR,TXT_INVALID_CALLSIGN,CloseWindowCB,NULL);

	push	0
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	154					; 0000009aH
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1646 : 					LogState &= ~LB_INVALID_CALLSIGN;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, -2					; fffffffeH
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState
$LN14@LoadPilotC:

; 1647 : 					//return;
; 1648 : 				}
; 1649 : 			}
; 1650 : 		}
; 1651 : 	}

	jmp	$LN20@LoadPilotC
$LN19@LoadPilotC:

; 1652 : 	else if(hittype == C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	jne	$LN20@LoadPilotC

; 1653 : 	{
; 1654 : 		
; 1655 : 
; 1656 : 		//if callsign is invalid note it for later use
; 1657 : 		ebox=(C_EditBox *)control->Parent_->FindControl(CALLSIGN_LIST);

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1658 : 		if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN20@LoadPilotC

; 1659 : 		{
; 1660 : 			if(!CheckCallsign(ebox->GetText()) )

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	?CheckCallsign@@YAHPAD@Z		; CheckCallsign
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@LoadPilotC

; 1661 : 			{
; 1662 : 				ebox->SetText(UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1663 : 				LogState |= LB_INVALID_CALLSIGN;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	or	edx, 1
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState

; 1664 : 				ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@LoadPilotC:

; 1665 : 			}
; 1666 : 			
; 1667 : 			C_EditBox *pbox;
; 1668 : 			//if password was changed, confirm it in select event CB
; 1669 : 			pbox=(C_EditBox *)control->Parent_->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pbox$2[ebp], eax

; 1670 : 			if(pbox != NULL)

	cmp	DWORD PTR _pbox$2[ebp], 0
	je	SHORT $LN3@LoadPilotC

; 1671 : 			{
; 1672 : 				if(!UI_logbk.CheckPassword(pbox->GetText()))

	mov	ecx, DWORD PTR _pbox$2[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN3@LoadPilotC

; 1673 : 				{
; 1674 : 					return;

	jmp	$LN20@LoadPilotC
$LN3@LoadPilotC:

; 1675 : 				}
; 1676 : 			}
; 1677 : 
; 1678 : 			//was the callsign changed? if so rename file, save change, and update list
; 1679 : 			if( _tcsicmp( UI_logbk.Callsign(),ebox->GetText() ) )

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	je	$LN1@LoadPilotC

; 1680 : 			{
; 1681 : 				_TCHAR orig[MAX_PATH];
; 1682 : 				_TCHAR newfile[MAX_PATH];
; 1683 : 				
; 1684 : 				//rename file
; 1685 : 				_stprintf(orig,_T("%s\\config\\%s.lbk"),FalconDataDirectory,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@
	lea	edx, DWORD PTR _orig$6[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1686 : 				_stprintf(newfile,_T("%s\\config\\%s.lbk"),FalconDataDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@
	lea	eax, DWORD PTR _newfile$7[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1687 : 				_trename(orig,newfile);

	lea	ecx, DWORD PTR _newfile$7[ebp]
	push	ecx
	lea	edx, DWORD PTR _orig$6[ebp]
	push	edx
	call	_rename
	add	esp, 8

; 1688 : 
; 1689 : 				_stprintf(orig,_T("%s\\config\\%s.plc"),FalconDataDirectory,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@GMHLKLCO@?$CFs?2config?2?$CFs?4plc?$AA@
	lea	eax, DWORD PTR _orig$6[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1690 : 				_stprintf(newfile,_T("%s\\config\\%s.plc"),FalconDataDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@GMHLKLCO@?$CFs?2config?2?$CFs?4plc?$AA@
	lea	ecx, DWORD PTR _newfile$7[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1691 : 				_trename(orig,newfile);

	lea	edx, DWORD PTR _newfile$7[ebp]
	push	edx
	lea	eax, DWORD PTR _orig$6[ebp]
	push	eax
	call	_rename
	add	esp, 8

; 1692 : 				//store change in memory
; 1693 : 				UI_logbk.SetCallsign(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetCallsign@LogBookData@@QAEXPAD@Z	; LogBookData::SetCallsign
$LN1@LoadPilotC:

; 1694 : 			}
; 1695 : 			
; 1696 : 			//save changes to file
; 1697 : 			UI_logbk.SaveData();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1698 : 
; 1699 : 			//build new list and select correct pilot
; 1700 : 			_TCHAR buf[MAX_PATH];
; 1701 : 			_stprintf(buf,_T("%s\\config\\*.lbk"),FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@
	lea	ecx, DWORD PTR _buf$4[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1702 : 			GetPilotList( control->Parent_, buf, NULL, (C_ListBox *)control, TRUE, TRUE );

	push	1
	push	1
	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _buf$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ; GetPilotList
	add	esp, 24					; 00000018H

; 1703 : 			SetPilot(UI_logbk.Callsign(),(C_ListBox *)control);			

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	call	?SetPilot@@YAHPADPAVC_ListBox@@@Z	; SetPilot
	add	esp, 8
$LN20@LoadPilotC:

; 1704 : 		}
; 1705 : 	}
; 1706 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadPilotCB@@YAXJFPAVC_Base@@@Z ENDP			; LoadPilotCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_pwdbox$ = -16						; size = 4
_lbox$1 = -12						; size = 4
_win$ = -8						; size = 4
_ebox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PwdVerifiedContLoading@@YAXJFPAVC_Base@@@Z PROC	; PwdVerifiedContLoading

; 1520 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1521 : 	C_EditBox * ebox;
; 1522 : 	C_EditBox * pwdbox;
; 1523 : 	C_Window *win;
; 1524 : 
; 1525 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN9@PwdVerifie

; 1526 : 		return;

	jmp	$LN10@PwdVerifie
$LN9@PwdVerifie:

; 1527 : 
; 1528 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1529 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN8@PwdVerifie

; 1530 : 		return;

	jmp	$LN10@PwdVerifie
$LN8@PwdVerifie:

; 1531 : 
; 1532 : 	ebox=(C_EditBox*)control->Parent_->FindControl(PASSWORD);

	push	140001					; 000222e1H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1533 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN10@PwdVerifie

; 1534 : 	{
; 1535 : 		pwdbox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pwdbox$[ebp], eax

; 1536 : 		if(pwdbox != NULL)

	cmp	DWORD PTR _pwdbox$[ebp], 0
	je	$LN10@PwdVerifie

; 1537 : 		{
; 1538 : 			if( _tcscmp( ebox->GetText(), pwdbox->GetText() ) )

	mov	ecx, DWORD PTR _pwdbox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@PwdVerifie

; 1539 : 				return;

	jmp	$LN10@PwdVerifie
$LN5@PwdVerifie:

; 1540 : 			
; 1541 : 			//password verified, save new value and continue opening
; 1542 : 			UI_logbk.SetPassword(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPassword@LogBookData@@QAEHPAD@Z	; LogBookData::SetPassword

; 1543 : 			ebox->SetText(_T(""));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1544 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1545 : 			gMainHandler->HideWindow(control->Parent_);

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1546 : 			LogState |= LB_CHECKED;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	or	edx, 8
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState

; 1547 : 
; 1548 : 			
; 1549 : 			UI_logbk.SaveData();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1550 : 			C_ListBox *lbox;
; 1551 : 			lbox = (C_ListBox *)win->FindControl(LOGBOOK_LIST);

	push	50068					; 0000c394H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$1[ebp], eax

; 1552 : 			if(lbox)

	cmp	DWORD PTR _lbox$1[ebp], 0
	je	$LN10@PwdVerifie

; 1553 : 			{
; 1554 : 				//if current log is selected do nothing
; 1555 : 				if(!_tcscmp(lbox->GetText(),UI_logbk.Callsign()))

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, DWORD PTR _lbox$1[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@PwdVerifie

; 1556 : 					return;

	jmp	SHORT $LN10@PwdVerifie
$LN3@PwdVerifie:

; 1557 : 
; 1558 : 				if( UI_logbk.LoadData(lbox->GetText()) )

	mov	ecx, DWORD PTR _lbox$1[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?LoadData@LogBookData@@QAEHPAD@Z	; LogBookData::LoadData
	test	eax, eax
	je	SHORT $LN10@PwdVerifie

; 1559 : 				{
; 1560 : 					LogState &= ~LB_CHECKED;

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, -9					; fffffff7H
	mov	DWORD PTR ?LogState@@3HA, eax		; LogState

; 1561 : 					if(!UI_logbk.CheckPassword(_T("")))

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN1@PwdVerifie

; 1562 : 						PasswordWindow(TXT_LOG_IN,TXT_LOG_IN_MESSAGE,CheckPasswordCB,NoPasswordCB);

	push	OFFSET ?NoPasswordCB@@YAXJFPAVC_Base@@@Z ; NoPasswordCB
	push	OFFSET ?CheckPasswordCB@@YAXJFPAVC_Base@@@Z ; CheckPasswordCB
	push	149					; 00000095H
	push	147					; 00000093H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H
$LN1@PwdVerifie:

; 1563 : 					LBSetupControls();

	push	0
	push	0
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8
$LN10@PwdVerifie:

; 1564 : 				}
; 1565 : 			}
; 1566 : 		}
; 1567 : 	}
; 1568 : 	
; 1569 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PwdVerifiedContLoading@@YAXJFPAVC_Base@@@Z ENDP	; PwdVerifiedContLoading
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_pwdbox$ = -8						; size = 4
_ebox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PasswordChangeVerifiedCB@@YAXJFPAVC_Base@@@Z PROC	; PasswordChangeVerifiedCB

; 1484 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1485 : 	C_EditBox * ebox;
; 1486 : 	C_EditBox * pwdbox;
; 1487 : 	C_Window *win;
; 1488 : 
; 1489 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@PasswordCh

; 1490 : 		return;

	jmp	$LN6@PasswordCh
$LN5@PasswordCh:

; 1491 : 
; 1492 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1493 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN4@PasswordCh

; 1494 : 		return;

	jmp	$LN6@PasswordCh
$LN4@PasswordCh:

; 1495 : 
; 1496 : 	ebox=(C_EditBox*)control->Parent_->FindControl(PASSWORD);

	push	140001					; 000222e1H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1497 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN6@PasswordCh

; 1498 : 	{
; 1499 : 		pwdbox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pwdbox$[ebp], eax

; 1500 : 		if(pwdbox != NULL)

	cmp	DWORD PTR _pwdbox$[ebp], 0
	je	$LN6@PasswordCh

; 1501 : 		{
; 1502 : 			if( _tcscmp( ebox->GetText(), pwdbox->GetText() ) )

	mov	ecx, DWORD PTR _pwdbox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@PasswordCh

; 1503 : 				return;

	jmp	$LN6@PasswordCh
$LN1@PasswordCh:

; 1504 : 			
; 1505 : 			UI_logbk.SetPassword(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPassword@LogBookData@@QAEHPAD@Z	; LogBookData::SetPassword

; 1506 : 			pwdbox->SetText(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, DWORD PTR _pwdbox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1507 : 			pwdbox->Refresh();

	mov	edx, DWORD PTR _pwdbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pwdbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1508 : 			ebox->SetText(_T(""));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1509 : 			ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1510 : 			gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1511 : 			control = win->FindControl(LOG_OK);

	push	50043					; 0000c37bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _control$[ebp], eax

; 1512 : 			SaveLogBookCB(LOG_OK,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	push	50043					; 0000c37bH
	call	?SaveLogBookCB@@YAXJFPAVC_Base@@@Z	; SaveLogBookCB
	add	esp, 12					; 0000000cH

; 1513 : 			LogState |= LB_CHECKED;

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	or	edx, 8
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState
$LN6@PasswordCh:

; 1514 : 		}
; 1515 : 	}
; 1516 : 	
; 1517 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PasswordChangeVerifiedCB@@YAXJFPAVC_Base@@@Z ENDP	; PasswordChangeVerifiedCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ChangeImageCB@@YAXJFPAVC_Base@@@Z PROC			; ChangeImageCB

; 1283 : {

	push	ebp
	mov	ebp, esp

; 1284 : 	if(LogState & LB_OPPONENT || !(LogState & LB_EDITABLE))

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 4
	jne	SHORT $LN4@ChangeImag
	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	jne	SHORT $LN5@ChangeImag
$LN4@ChangeImag:

; 1285 : 		return;

	jmp	$LN6@ChangeImag
$LN5@ChangeImag:

; 1286 : 
; 1287 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	edx, WORD PTR _hittype$[ebp]
	cmp	edx, 52					; 00000034H
	je	SHORT $LN3@ChangeImag

; 1288 : 		return;

	jmp	$LN6@ChangeImag
$LN3@ChangeImag:

; 1289 : 
; 1290 : 	CurControl = ID;

	mov	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR ?CurControl@@3JA, eax		; CurControl

; 1291 : 	if(CurControl==PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	SHORT $LN2@ChangeImag

; 1292 : 	{
; 1293 : 		MakeVirtualListFromRsc(PATCHES_RESOURCE,0);

	push	0
	push	59998					; 0000ea5eH
	call	?MakeVirtualListFromRsc@@YAXJJ@Z	; MakeVirtualListFromRsc
	add	esp, 8

; 1294 : 		LoadVirtualFile(TXT_LOAD_PATCH,"patches\\*.tga",NULL,LoadTGACB,CloseWindowCB,VirtualFileList,LoadVirtualTGACB);

	push	OFFSET ?LoadVirtualTGACB@@YAXJFPAVC_Base@@@Z ; LoadVirtualTGACB
	push	OFFSET ?VirtualFileList@@3PAY0EA@DA	; VirtualFileList
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?LoadTGACB@@YAXJFPAVC_Base@@@Z	; LoadTGACB
	push	0
	push	OFFSET ??_C@_0O@OGLPOOHG@patches?2?$CK?4tga?$AA@
	push	234					; 000000eaH
	call	?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z ; LoadVirtualFile
	add	esp, 28					; 0000001cH

; 1295 : 		//LoadAFile("patches\\*.tga",NULL,LoadTGACB,CloseWindowCB);
; 1296 : 	}
; 1297 : 	else

	jmp	SHORT $LN1@ChangeImag
$LN2@ChangeImag:

; 1298 : 	{
; 1299 : 		MakeVirtualListFromRsc(PILOTS_RESOURCE,0);

	push	0
	push	59999					; 0000ea5fH
	call	?MakeVirtualListFromRsc@@YAXJJ@Z	; MakeVirtualListFromRsc
	add	esp, 8

; 1300 : 		LoadVirtualFile(TXT_LOAD_PICTURE,"pictures\\*.tga",NULL,LoadTGACB,CloseWindowCB,VirtualFileList,LoadVirtualTGACB);

	push	OFFSET ?LoadVirtualTGACB@@YAXJFPAVC_Base@@@Z ; LoadVirtualTGACB
	push	OFFSET ?VirtualFileList@@3PAY0EA@DA	; VirtualFileList
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?LoadTGACB@@YAXJFPAVC_Base@@@Z	; LoadTGACB
	push	0
	push	OFFSET ??_C@_0P@DIPMCHDE@pictures?2?$CK?4tga?$AA@
	push	235					; 000000ebH
	call	?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z ; LoadVirtualFile
	add	esp, 28					; 0000001cH
$LN1@ChangeImag:

; 1301 : 		//LoadAFile("pictures\\*.tga",NULL,LoadTGACB,CloseWindowCB);
; 1302 : 	}
; 1303 : 	
; 1304 : 	control->Refresh();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@ChangeImag:

; 1305 : }

	pop	ebp
	ret	0
?ChangeImageCB@@YAXJFPAVC_Base@@@Z ENDP			; ChangeImageCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_res$ = -276						; size = 4
_ebox$ = -272						; size = 4
_imageID$ = -268					; size = 4
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadVirtualTGACB@@YAXJFPAVC_Base@@@Z PROC		; LoadVirtualTGACB

; 1240 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1241 : 	C_EditBox * ebox;
; 1242 : 	_TCHAR fname[MAX_PATH];
; 1243 : 	long imageID;
; 1244 : 	C_Resmgr *res;
; 1245 : 
; 1246 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@LoadVirtua

; 1247 : 		return;

	jmp	$LN11@LoadVirtua
$LN10@LoadVirtua:

; 1248 : 
; 1249 : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1250 : 
; 1251 : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1252 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN11@LoadVirtua

; 1253 : 	{
; 1254 : 		_tcscpy(fname,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1255 : 
; 1256 : 		if(fname[0] == 0)

	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _fname$[ebp+edx]
	test	eax, eax
	jne	SHORT $LN8@LoadVirtua

; 1257 : 			return;

	jmp	$LN11@LoadVirtua
$LN8@LoadVirtua:

; 1258 : 
; 1259 : 		if(CurControl == PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	SHORT $LN7@LoadVirtua

; 1260 : 			res=gImageMgr->GetImageRes(PATCHES_RESOURCE);

	push	59998					; 0000ea5eH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 1261 : 		else

	jmp	SHORT $LN6@LoadVirtua
$LN7@LoadVirtua:

; 1262 : 			res=gImageMgr->GetImageRes(PILOTS_RESOURCE);

	push	59999					; 0000ea5fH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax
$LN6@LoadVirtua:

; 1263 : 
; 1264 : 		if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN11@LoadVirtua

; 1265 : 		{
; 1266 : 			imageID=gMainParser->FindID(fname);

	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?FindID@C_Parser@@QAEJPAD@Z		; C_Parser::FindID
	mov	DWORD PTR _imageID$[ebp], eax

; 1267 : 
; 1268 : 			if(SetResourceImage(CurControl, imageID))

	mov	edx, DWORD PTR _imageID$[ebp]
	push	edx
	mov	eax, DWORD PTR ?CurControl@@3JA		; CurControl
	push	eax
	call	?SetResourceImage@@YAHJJ@Z		; SetResourceImage
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@LoadVirtua

; 1269 : 			{
; 1270 : 				if(CurControl==PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	SHORT $LN3@LoadVirtua

; 1271 : 				{
; 1272 : 					UI_logbk.SetPatch(imageID);

	mov	ecx, DWORD PTR _imageID$[ebp]
	push	ecx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPatch@LogBookData@@QAEXJ@Z		; LogBookData::SetPatch
	jmp	SHORT $LN11@LoadVirtua
$LN3@LoadVirtua:

; 1273 : 				}
; 1274 : 				else if(CurControl == PILOT_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50060	; CurControl, 0000c38cH
	jne	SHORT $LN11@LoadVirtua

; 1275 : 					UI_logbk.SetPicture(imageID);

	mov	edx, DWORD PTR _imageID$[ebp]
	push	edx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPicture@LogBookData@@QAEXJ@Z	; LogBookData::SetPicture
$LN11@LoadVirtua:

; 1276 : 			}
; 1277 : 		}
; 1278 : 	}
; 1279 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadVirtualTGACB@@YAXJFPAVC_Base@@@Z ENDP		; LoadVirtualTGACB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$1 = -544						; size = 4
$T2 = -540						; size = 4
_imageID$ = -536					; size = 4
_i$3 = -532						; size = 4
_ebox$ = -528						; size = 4
_buf$4 = -524						; size = 260
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadTGACB@@YAXJFPAVC_Base@@@Z PROC			; LoadTGACB

; 1180 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 544				; 00000220H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1181 : 	C_EditBox * ebox;
; 1182 : 	_TCHAR fname[MAX_PATH];
; 1183 : 	long imageID;
; 1184 : 
; 1185 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN15@LoadTGACB

; 1186 : 		return;

	jmp	$LN17@LoadTGACB
$LN15@LoadTGACB:

; 1187 : 
; 1188 : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1189 : 
; 1190 : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1191 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN17@LoadTGACB

; 1192 : 	{
; 1193 : 		_tcscpy(fname,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1194 : 		for(unsigned long i=0;i<_tcslen(fname);i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN13@LoadTGACB
$LN12@LoadTGACB:
	mov	edx, DWORD PTR _i$3[ebp]
	add	edx, 1
	mov	DWORD PTR _i$3[ebp], edx
$LN13@LoadTGACB:
	lea	eax, DWORD PTR _fname$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN11@LoadTGACB

; 1195 : 			if(fname[i] == '.')

	mov	ecx, DWORD PTR _i$3[ebp]
	movsx	edx, BYTE PTR _fname$[ebp+ecx]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN10@LoadTGACB

; 1196 : 				fname[i]=0;

	mov	eax, DWORD PTR _i$3[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 260			; 00000104H
	jae	SHORT $LN18@LoadTGACB
	jmp	SHORT $LN19@LoadTGACB
$LN18@LoadTGACB:
	call	___report_rangecheckfailure
$LN19@LoadTGACB:
	mov	ecx, DWORD PTR $T2[ebp]
	mov	BYTE PTR _fname$[ebp+ecx], 0
$LN10@LoadTGACB:

; 1197 : 
; 1198 : 		if(fname[0] == 0)

	jmp	SHORT $LN12@LoadTGACB
$LN11@LoadTGACB:
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _fname$[ebp+edx]
	test	eax, eax
	jne	SHORT $LN9@LoadTGACB

; 1199 : 			return;

	jmp	$LN17@LoadTGACB
$LN9@LoadTGACB:

; 1200 : 
; 1201 : 		_TCHAR buf[MAX_PATH];
; 1202 : 
; 1203 : 		if(CurControl == PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	SHORT $LN8@LoadTGACB

; 1204 : 		{
; 1205 : 			imageID=CurPatch;

	mov	ecx, DWORD PTR ?CurPatch@@3HA		; CurPatch
	mov	DWORD PTR _imageID$[ebp], ecx

; 1206 : 			_stprintf(buf,_T("%s\\patches\\%s.tga"),FalconDataDirectory,fname);

	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@
	lea	eax, DWORD PTR _buf$4[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1207 : 		}
; 1208 : 		else

	jmp	SHORT $LN7@LoadTGACB
$LN8@LoadTGACB:

; 1209 : 		{
; 1210 : 			imageID=CurPic;

	mov	ecx, DWORD PTR ?CurPic@@3HA		; CurPic
	mov	DWORD PTR _imageID$[ebp], ecx

; 1211 : 			_stprintf(buf,_T("%s\\pictures\\%s.tga"),FalconDataDirectory,fname);

	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BD@PNOMMOHL@?$CFs?2pictures?2?$CFs?4tga?$AA@
	lea	eax, DWORD PTR _buf$4[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN7@LoadTGACB:

; 1212 : 		}
; 1213 : 
; 1214 : 		if(SetImage(CurControl,buf, imageID))

	mov	ecx, DWORD PTR _imageID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$4[ebp]
	push	edx
	mov	eax, DWORD PTR ?CurControl@@3JA		; CurControl
	push	eax
	call	?SetImage@@YAHJPADJ@Z			; SetImage
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN17@LoadTGACB

; 1215 : 		{
; 1216 : 			if(CurControl==PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	$LN5@LoadTGACB

; 1217 : 			{
; 1218 : 				UI_logbk.SetPatch(fname);

	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPatch@LogBookData@@QAEXPAD@Z	; LogBookData::SetPatch

; 1219 : 				UI_logbk.SetSquadron(fname);

	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetSquadron@LogBookData@@QAEXPAD@Z	; LogBookData::SetSquadron

; 1220 : 
; 1221 : 				C_Window *win;
; 1222 : 				win = gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$1[ebp], eax

; 1223 : 				if(win)

	cmp	DWORD PTR _win$1[ebp], 0
	je	SHORT $LN4@LoadTGACB

; 1224 : 				{
; 1225 : 					ebox=(C_EditBox*)win->FindControl(SQUADRON_NAME);

	push	50056					; 0000c388H
	mov	ecx, DWORD PTR _win$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1226 : 					if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN4@LoadTGACB

; 1227 : 					{
; 1228 : 						ebox->SetText(fname);

	lea	eax, DWORD PTR _fname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1229 : 						ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@LoadTGACB:

; 1230 : 					}
; 1231 : 				}
; 1232 : 			}

	jmp	SHORT $LN17@LoadTGACB
$LN5@LoadTGACB:

; 1233 : 			else if(CurControl == PILOT_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50060	; CurControl, 0000c38cH
	jne	SHORT $LN17@LoadTGACB

; 1234 : 				UI_logbk.SetPicture(fname);

	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPicture@LogBookData@@QAEXPAD@Z	; LogBookData::SetPicture
$LN17@LoadTGACB:

; 1235 : 		}
; 1236 : 	}
; 1237 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTGACB@@YAXJFPAVC_Base@@@Z ENDP			; LoadTGACB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?NoPasswordCB@@YAXJFPAVC_Base@@@Z PROC			; NoPasswordCB

; 450  : {

	push	ebp
	mov	ebp, esp

; 451  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@NoPassword

; 452  : 		return;

	jmp	SHORT $LN2@NoPassword
$LN1@NoPassword:

; 453  : 
; 454  : 	LogBook.Initialize();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Initialize@LogBookData@@QAEXXZ		; LogBookData::Initialize

; 455  : 	UI_logbk.Initialize();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Initialize@LogBookData@@QAEXXZ		; LogBookData::Initialize

; 456  : 	
; 457  : 	UpdateKeyMapList(PlayerOptions.keyfile,0);

	push	0
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8

; 458  : 	LoadLogBookWindows();

	push	0
	push	0
	push	2
	push	OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?LoadLogBookWindows@@YAXPAUPilot@@HPAVIMAGE_RSC@@1@Z ; LoadLogBookWindows
	add	esp, 16					; 00000010H

; 459  : 
; 460  : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN2@NoPassword:

; 461  : }

	pop	ebp
	ret	0
?NoPasswordCB@@YAXJFPAVC_Base@@@Z ENDP			; NoPasswordCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_box$1 = -4						; size = 4
_Pilot$ = 8						; size = 4
_flag$ = 12						; size = 4
_Picture$ = 16						; size = 4
_Patch$ = 20						; size = 4
?LoadLogBookWindows@@YAXPAUPilot@@HPAVIMAGE_RSC@@1@Z PROC ; LoadLogBookWindows

; 421  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 422  : 	UI_logbk.LoadData(Pilot);

	mov	eax, DWORD PTR _Pilot$[ebp]
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?LoadData@LogBookData@@QAEHPAUPilot@@@Z	; LogBookData::LoadData

; 423  : 	
; 424  : 	LogState |= flag|LB_REFRESH_PILOT;

	mov	ecx, DWORD PTR _flag$[ebp]
	or	ecx, 16					; 00000010H
	or	ecx, DWORD PTR ?LogState@@3HA		; LogState
	mov	DWORD PTR ?LogState@@3HA, ecx		; LogState

; 425  : 
; 426  : 	
; 427  : 	if(LBLoaded) 

	cmp	DWORD PTR ?LBLoaded@@3HA, 0		; LBLoaded
	je	SHORT $LN3@LoadLogBoo

; 428  : 	{
; 429  : 		LBSetupControls(Patch,Picture);

	mov	edx, DWORD PTR _Picture$[ebp]
	push	edx
	mov	eax, DWORD PTR _Patch$[ebp]
	push	eax
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8

; 430  : 		return;

	jmp	$LN4@LoadLogBoo
$LN3@LoadLogBoo:

; 431  : 	}
; 432  : 
; 433  : 	C_Window *win = gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 434  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@LoadLogBoo

; 435  : 	{
; 436  : 		C_Box *box = (C_Box *)win->FindControl(50096);//PIC_BOX

	push	50096					; 0000c3b0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _box$1[ebp], eax

; 437  : 		if(box)

	cmp	DWORD PTR _box$1[ebp], 0
	je	SHORT $LN2@LoadLogBoo

; 438  : 		{
; 439  : 			PicArea.left = box->GetX();

	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	DWORD PTR ?PicArea@@3UtagRECT@@A, eax

; 440  : 			PicArea.right = box->GetX() + box->GetW();

	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	mov	DWORD PTR ?PicArea@@3UtagRECT@@A+8, esi

; 441  : 			PicArea.top = box->GetY();

	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	DWORD PTR ?PicArea@@3UtagRECT@@A+4, eax

; 442  : 			PicArea.bottom = box->GetY() + box->GetH();

	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _box$1[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	mov	DWORD PTR ?PicArea@@3UtagRECT@@A+12, esi
$LN2@LoadLogBoo:

; 443  : 		}
; 444  : 	}
; 445  : 
; 446  : 	LBSetupControls(Patch,Picture);

	mov	ecx, DWORD PTR _Picture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Patch$[ebp]
	push	edx
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8
$LN4@LoadLogBoo:

; 447  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadLogBookWindows@@YAXPAUPilot@@HPAVIMAGE_RSC@@1@Z ENDP ; LoadLogBookWindows
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ID$ = -4						; size = 4
?RealLoadLogbook@@YAXXZ PROC				; RealLoadLogbook

; 398  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 399  : 	long ID;
; 400  : 	if(LBLoaded)

	cmp	DWORD PTR ?LBLoaded@@3HA, 0		; LBLoaded
	je	SHORT $LN5@RealLoadLo

; 401  : 		return;

	jmp	$LN6@RealLoadLo
$LN5@RealLoadLo:

; 402  : 
; 403  : 	if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN4@RealLoadLo

; 404  : 		gMainParser->LoadImageList("lb_res.lst");

	push	OFFSET ??_C@_0L@BOOHCJOD@lb_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 405  : 	else

	jmp	SHORT $LN3@RealLoadLo
$LN4@RealLoadLo:

; 406  : 		gMainParser->LoadImageList("lb_art.lst");

	push	OFFSET ??_C@_0L@FDKPINND@lb_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN3@RealLoadLo:

; 407  : 	gMainParser->LoadSoundList("lb_snd.lst");

	push	OFFSET ??_C@_0L@MOJJEPKE@lb_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 408  : 	gMainParser->LoadWindowList("lb_scf.lst");	// Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0L@OCIGIPGP@lb_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 409  : 
; 410  : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN2@RealLoadLo:

; 411  : 	while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN1@RealLoadLo

; 412  : 	{
; 413  : 		HookupLBControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupLBControls@@YAXJ@Z		; HookupLBControls
	add	esp, 4

; 414  : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 415  : 	}

	jmp	SHORT $LN2@RealLoadLo
$LN1@RealLoadLo:

; 416  : 	LBLoaded++;

	mov	ecx, DWORD PTR ?LBLoaded@@3HA		; LBLoaded
	add	ecx, 1
	mov	DWORD PTR ?LBLoaded@@3HA, ecx		; LBLoaded
$LN6@RealLoadLo:

; 417  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RealLoadLogbook@@YAXXZ ENDP				; RealLoadLogbook
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ebox$ = -268						; size = 4
_pwd$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CheckPasswordCB@@YAXJFPAVC_Base@@@Z PROC		; CheckPasswordCB

; 374  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 375  : 	C_EditBox * ebox;
; 376  : 	_TCHAR pwd[MAX_PATH];
; 377  : 
; 378  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CheckPassw

; 379  : 		return;

	jmp	$LN4@CheckPassw
$LN3@CheckPassw:

; 380  : 
; 381  : 	ebox=(C_EditBox*)control->Parent_->FindControl(PASSWORD);

	push	140001					; 000222e1H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 382  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN4@CheckPassw

; 383  : 	{
; 384  : 		_tcscpy(pwd,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	lea	edx, DWORD PTR _pwd$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 385  : 		ebox->SetText(_T(""));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 386  : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 387  : 		if(UI_logbk.CheckPassword(pwd))

	lea	ecx, DWORD PTR _pwd$[ebp]
	push	ecx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	je	SHORT $LN4@CheckPassw

; 388  : 		{
; 389  : 			LogState |= LB_EDITABLE | LB_CHECKED;			

	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	or	edx, 10					; 0000000aH
	mov	DWORD PTR ?LogState@@3HA, edx		; LogState

; 390  : 			gMainHandler->HideWindow(control->Parent_);

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 391  : 			LogBook.LoadData(&UI_logbk.Pilot);

	push	OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?LoadData@LogBookData@@QAEHPAUPilot@@@Z	; LogBookData::LoadData

; 392  : 			UpdateKeyMapList(PlayerOptions.keyfile,1);

	push	1
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8
$LN4@CheckPassw:

; 393  : 		}
; 394  : 	}
; 395  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckPasswordCB@@YAXJFPAVC_Base@@@Z ENDP		; CheckPasswordCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$1 = -288						; size = 4
_ebox$ = -284						; size = 4
_win$ = -280						; size = 4
_text$ = -276						; size = 4
_lbox$ = -272						; size = 4
_btn$ = -268						; size = 4
_buf$2 = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_TitleID$ = 8						; size = 4
_MessageID$ = 12					; size = 4
_YesCB$ = 16						; size = 4
_NoCB$ = 20						; size = 4
?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z PROC	; PasswordWindow

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 243  : 	C_Window *win;
; 244  : 	C_Button *btn;
; 245  : 	C_Text *text;
; 246  : 	C_ListBox *lbox;
; 247  : 	C_EditBox *ebox;
; 248  : 
; 249  : 	if(!YesCB || !NoCB)

	cmp	DWORD PTR _YesCB$[ebp], 0
	je	SHORT $LN18@PasswordWi
	cmp	DWORD PTR _NoCB$[ebp], 0
	jne	SHORT $LN19@PasswordWi
$LN18@PasswordWi:

; 250  : 		return;

	jmp	$LN20@PasswordWi
$LN19@PasswordWi:

; 251  : 
; 252  : 	if(LogState & LB_CHECKED)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 8
	je	SHORT $LN17@PasswordWi

; 253  : 		return;

	jmp	$LN20@PasswordWi
$LN17@PasswordWi:

; 254  : 
; 255  : 	win=gMainHandler->FindWindow(PASSWORD_WIN);

	push	140000					; 000222e0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 256  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN20@PasswordWi

; 257  : 	{
; 258  : 		lbox = (C_ListBox *)win->FindControl(LOGBOOK_LIST);

	push	50068					; 0000c394H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 259  : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN15@PasswordWi

; 260  : 		{
; 261  : 			_TCHAR buf[MAX_PATH];
; 262  : 			if(TitleID == TXT_VERIFY_PASSWORD)

	cmp	DWORD PTR _TitleID$[ebp], 148		; 00000094H
	jne	$LN14@PasswordWi

; 263  : 			{
; 264  : 				lbox->SetCallback(NULL);

	push	0
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 265  : 				lbox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 266  : 
; 267  : 				lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 268  : 
; 269  : 				C_Window *win = gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$1[ebp], eax

; 270  : 				if(win)

	cmp	DWORD PTR _win$1[ebp], 0
	je	SHORT $LN13@PasswordWi

; 271  : 					ebox=(C_EditBox *)win->FindControl(CALLSIGN_LIST);

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _win$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 272  : 				else

	jmp	SHORT $LN12@PasswordWi
$LN13@PasswordWi:

; 273  : 					ebox = NULL;

	mov	DWORD PTR _ebox$[ebp], 0
$LN12@PasswordWi:

; 274  : 
; 275  : 				if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN11@PasswordWi

; 276  : 					lbox->AddItem(1,C_TYPE_ITEM,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	50					; 00000032H
	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 277  : 				else

	jmp	SHORT $LN10@PasswordWi
$LN11@PasswordWi:

; 278  : 					lbox->AddItem(1,C_TYPE_ITEM,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	50					; 00000032H
	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem
$LN10@PasswordWi:

; 279  : 			}
; 280  : 			else

	jmp	$LN15@PasswordWi
$LN14@PasswordWi:

; 281  : 			{				
; 282  : 				_stprintf(buf,_T("%s\\config\\*.lbk"),FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@
	lea	ecx, DWORD PTR _buf$2[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 283  : 				GetPilotList( win, buf, NULL, lbox, TRUE, TRUE );

	push	1
	push	1
	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _buf$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ; GetPilotList
	add	esp, 24					; 00000018H

; 284  : 				
; 285  : 				SetPilot(UI_logbk.Callsign(),lbox);

	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	call	?SetPilot@@YAHPADPAVC_ListBox@@@Z	; SetPilot
	add	esp, 8

; 286  : 				lbox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 287  : 				lbox->SetCallback(ChoosePilotCB);

	push	OFFSET ?ChoosePilotCB@@YAXJFPAVC_Base@@@Z ; ChoosePilotCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@PasswordWi:

; 288  : 			}
; 289  : 		}
; 290  : 
; 291  : 		text=(C_Text *)win->FindControl(MESSAGE1);

	push	8646167					; 0083ee17H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 292  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN8@PasswordWi

; 293  : 		{
; 294  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 295  : 			text->SetText(MessageID);

	mov	ecx, DWORD PTR _MessageID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 296  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@PasswordWi:

; 297  : 		}
; 298  : #if 0
; 299  : 			fontid = text->GetFont();
; 300  : 			strptr = UI_WordWrap(win,mess,fontid,250,&status);
; 301  : 			if(strptr)
; 302  : 			{
; 303  : 				text->SetText(strptr);
; 304  : 			}
; 305  : 			else
; 306  : 				text->SetText(TXT_SPACE);
; 307  : 
; 308  : 			text->Refresh();
; 309  : 		}
; 310  : 
; 311  : 		text=(C_Text *)win->FindControl(MESSAGE2);
; 312  : 		if(text)
; 313  : 		{
; 314  : 			text->Refresh();
; 315  : 			strptr = UI_WordWrap(win,NULL,fontid,250,&status);
; 316  : 			if(strptr)
; 317  : 			{
; 318  : 				text->SetText(strptr);
; 319  : 			}
; 320  : 			else
; 321  : 				text->SetText(TXT_SPACE);
; 322  : 			text->Refresh();
; 323  : 		}
; 324  : #endif
; 325  : 		text =(C_Text*)win->FindControl(PW_TITLE_BAR);

	push	140002					; 000222e2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 326  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN7@PasswordWi

; 327  : 		{
; 328  : 			text->SetText(TitleID);

	mov	ecx, DWORD PTR _TitleID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 329  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@PasswordWi:

; 330  : 		}
; 331  : 
; 332  : 		btn=(C_Button *)win->FindControl(OK);

	push	16027					; 00003e9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 333  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@PasswordWi

; 334  : 		{
; 335  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN6@PasswordWi:

; 336  : 		}
; 337  : 		
; 338  : 		ebox=(C_EditBox*)win->FindControl(PASSWORD);

	push	140001					; 000222e1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 339  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN5@PasswordWi

; 340  : 		{
; 341  : 			win->SetControl(PASSWORD);

	push	140001					; 000222e1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetControl@C_Window@@QAEXJ@Z		; C_Window::SetControl
$LN5@PasswordWi:

; 342  : 		}
; 343  : 
; 344  : 		btn=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 345  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@PasswordWi

; 346  : 		{
; 347  : 			btn->SetCallback(NoCB);

	mov	eax, DWORD PTR _NoCB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@PasswordWi:

; 348  : 		}
; 349  : 
; 350  : 		btn=(C_Button *)win->FindControl(LOG_NEW);

	push	50040					; 0000c378H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 351  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN3@PasswordWi

; 352  : 		{
; 353  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 354  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 355  : 			if(TitleID == TXT_VERIFY_PASSWORD)

	cmp	DWORD PTR _TitleID$[ebp], 148		; 00000094H
	jne	SHORT $LN2@PasswordWi

; 356  : 			{
; 357  : 				btn->SetLabel(0,TXT_CANCEL);

	push	152					; 00000098H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetLabel@C_Button@@QAEXJJ@Z		; C_Button::SetLabel

; 358  : 				btn->SetLabel(1,TXT_CANCEL);

	push	152					; 00000098H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetLabel@C_Button@@QAEXJJ@Z		; C_Button::SetLabel

; 359  : 			}
; 360  : 			else

	jmp	SHORT $LN1@PasswordWi
$LN2@PasswordWi:

; 361  : 			{
; 362  : 				btn->SetLabel(0,TXT_NEW);

	push	151					; 00000097H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetLabel@C_Button@@QAEXJJ@Z		; C_Button::SetLabel

; 363  : 				btn->SetLabel(1,TXT_NEW);

	push	151					; 00000097H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetLabel@C_Button@@QAEXJJ@Z		; C_Button::SetLabel
$LN1@PasswordWi:

; 364  : 			}
; 365  : 			btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@PasswordWi:

; 366  : 		}
; 367  : 
; 368  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 369  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN20@PasswordWi:

; 370  : 	}
; 371  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ENDP	; PasswordWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_Pilot$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ChoosePilotCB@@YAXJFPAVC_Base@@@Z PROC			; ChoosePilotCB

; 225  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 226  : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@ChoosePilo

; 227  : 		return;

	jmp	SHORT $LN3@ChoosePilo
$LN2@ChoosePilo:

; 228  : 
; 229  : 	_TCHAR Pilot[MAX_PATH];
; 230  : 	_tcscpy(Pilot,((C_ListBox *)control)->GetText());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	push	eax
	lea	ecx, DWORD PTR _Pilot$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 231  : 
; 232  : 	//return if current logbook is selected
; 233  : 	if(!_tcscmp(Pilot,UI_logbk.Callsign()))

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	lea	edx, DWORD PTR _Pilot$[ebp]
	push	edx
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@ChoosePilo

; 234  : 		return;

	jmp	SHORT $LN3@ChoosePilo
$LN1@ChoosePilo:

; 235  : 
; 236  : 	UI_logbk.LoadData(Pilot);

	lea	eax, DWORD PTR _Pilot$[ebp]
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?LoadData@LogBookData@@QAEHPAD@Z	; LogBookData::LoadData

; 237  : 	LBSetupControls();

	push	0
	push	0
	call	?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z	; LBSetupControls
	add	esp, 8
$LN3@ChoosePilo:

; 238  : 
; 239  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ChoosePilotCB@@YAXJFPAVC_Base@@@Z ENDP			; ChoosePilotCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_YesCB$ = 12						; size = 4
_NoCB$ = 16						; size = 4
?F4DialogBox@@YAXJP6AXJFPAVC_Base@@@Z1@Z PROC		; F4DialogBox

; 220  : {

	push	ebp
	mov	ebp, esp

; 221  : 	F4DialogBox( gStringMgr->GetText(ID), YesCB, NoCB );

	mov	eax, DWORD PTR _NoCB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	call	?F4DialogBox@@YAXPADP6AXJFPAVC_Base@@@Z2@Z ; F4DialogBox
	add	esp, 12					; 0000000cH

; 222  : }

	pop	ebp
	ret	0
?F4DialogBox@@YAXJP6AXJFPAVC_Base@@@Z1@Z ENDP		; F4DialogBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_text$ = -8						; size = 4
_btn$ = -4						; size = 4
_string$ = 8						; size = 4
_YesCB$ = 12						; size = 4
_NoCB$ = 16						; size = 4
?F4DialogBox@@YAXPADP6AXJFPAVC_Base@@@Z2@Z PROC		; F4DialogBox

; 125  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 126  : 	C_Window *win;
; 127  : 	C_Button *btn;
; 128  : 	C_Text	 *text;
; 129  : 
; 130  : 
; 131  : 
; 132  : 	win=gMainHandler->FindWindow(DIALOG_WIN);

	push	8646166					; 0083ee16H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 133  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@F4DialogBo

; 134  : 	{
; 135  : 		text=(C_Text *)win->FindControl(MESSAGE1);

	push	8646167					; 0083ee17H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 136  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN12@F4DialogBo

; 137  : 		{
; 138  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 139  : 			text->SetText(string);

	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 140  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@F4DialogBo:

; 141  : 		}
; 142  : #if 0
; 143  : 			fontid = text->GetFont();
; 144  : 			strptr = UI_WordWrap(win,string,fontid,180,&status);
; 145  : 			if(strptr)
; 146  : 			{
; 147  : 				text->SetText(strptr);
; 148  : 				text->Refresh();
; 149  : 			}
; 150  : 		}
; 151  : 		
; 152  : 		strptr = UI_WordWrap(win,NULL,fontid,180,&status);
; 153  : 		if(strptr)
; 154  : 		{
; 155  : 			text=(C_Text *)win->FindControl(MESSAGE2);
; 156  : 			if(text)
; 157  : 			{
; 158  : 				text->SetText(strptr);
; 159  : 				text->Refresh();
; 160  : 			}
; 161  : 		}
; 162  : 
; 163  :  		strptr = UI_WordWrap(win,NULL,fontid,180,&status);
; 164  : 		if(strptr)
; 165  : 		{
; 166  : 			text=(C_Text *)win->FindControl(MESSAGE3);
; 167  : 			if(text)
; 168  : 			{
; 169  : 				text->SetText(strptr);
; 170  : 				text->Refresh();
; 171  : 			}
; 172  : 		}
; 173  : #endif
; 174  : 
; 175  : 		btn=(C_Button *)win->FindControl(OK);

	push	16027					; 00003e9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 176  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN11@F4DialogBo

; 177  : 		{
; 178  : 			if(YesCB)

	cmp	DWORD PTR _YesCB$[ebp], 0
	je	SHORT $LN10@F4DialogBo

; 179  : 				btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 180  : 			else

	jmp	SHORT $LN9@F4DialogBo
$LN10@F4DialogBo:

; 181  : 				btn->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@F4DialogBo:

; 182  : 
; 183  : 			if(NoCB)

	cmp	DWORD PTR _NoCB$[ebp], 0
	je	SHORT $LN8@F4DialogBo

; 184  : 				btn->SetX(btn->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 185  : 			else

	jmp	SHORT $LN11@F4DialogBo
$LN8@F4DialogBo:

; 186  : 				btn->SetX(btn->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN11@F4DialogBo:

; 187  : 		}
; 188  : 		
; 189  : 		btn=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 190  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@F4DialogBo

; 191  : 		{
; 192  : 			if(NoCB)

	cmp	DWORD PTR _NoCB$[ebp], 0
	je	SHORT $LN5@F4DialogBo

; 193  : 				btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 194  : 			else

	jmp	SHORT $LN6@F4DialogBo
$LN5@F4DialogBo:

; 195  : 				btn->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@F4DialogBo:

; 196  : 		}
; 197  : 
; 198  : 		btn=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 199  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@F4DialogBo

; 200  : 		{
; 201  : 			if(NoCB)

	cmp	DWORD PTR _NoCB$[ebp], 0
	je	SHORT $LN2@F4DialogBo

; 202  : 			{
; 203  : 				btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 204  : 				btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 205  : 			}
; 206  : 			else

	jmp	SHORT $LN3@F4DialogBo
$LN2@F4DialogBo:

; 207  : 			{
; 208  : 				btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 209  : 				btn->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@F4DialogBo:

; 210  : 			}
; 211  : 		}
; 212  : 
; 213  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 214  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN14@F4DialogBo:

; 215  : 	}
; 216  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F4DialogBox@@YAXPADP6AXJFPAVC_Base@@@Z2@Z ENDP		; F4DialogBox
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FUI_logbk@@YAXXZ
text$yd	SEGMENT
??__FUI_logbk@@YAXXZ PROC				; `dynamic atexit destructor for 'UI_logbk'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	??1LogBookData@@QAE@XZ			; LogBookData::~LogBookData
	pop	ebp
	ret	0
??__FUI_logbk@@YAXXZ ENDP				; `dynamic atexit destructor for 'UI_logbk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
;	COMDAT ??__EUI_logbk@@YAXXZ
text$yc	SEGMENT
??__EUI_logbk@@YAXXZ PROC				; `dynamic initializer for 'UI_logbk'', COMDAT

; 117  : LogBookData UI_logbk;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	??0LogBookData@@QAE@XZ			; LogBookData::LogBookData
	push	OFFSET ??__FUI_logbk@@YAXXZ		; `dynamic atexit destructor for 'UI_logbk''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EUI_logbk@@YAXXZ ENDP				; `dynamic initializer for 'UI_logbk''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_lbox$ = -556						; size = 4
_text$ = -552						; size = 4
_stpwin$1 = -548					; size = 4
_button$2 = -544					; size = 4
_win$ = -540						; size = 4
_callsign$3 = -536					; size = 4
_ptr$4 = -532						; size = 4
_ebox$ = -528						; size = 4
_orig$5 = -524						; size = 260
_newfile$6 = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
?SaveControlValues@@YAHXZ PROC				; SaveControlValues

; 1802 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 556				; 0000022cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1803 : 	C_Window	*win;
; 1804 : 	C_EditBox	*ebox;
; 1805 : 	C_Text		*text;
; 1806 : 	C_ListBox	*lbox;
; 1807 : 
; 1808 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1809 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN16@SaveContro

; 1810 : 		return FALSE;

	xor	eax, eax
	jmp	$LN17@SaveContro
$LN16@SaveContro:

; 1811 : 
; 1812 : 	
; 1813 : 
; 1814 : 	ebox=(C_EditBox *)win->FindControl(CALLSIGN_LIST);

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1815 : 	if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN15@SaveContro

; 1816 : 	{
; 1817 : 		if(!CheckCallsign(ebox->GetText()) )

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	?CheckCallsign@@YAHPAD@Z		; CheckCallsign
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN14@SaveContro

; 1818 : 		{
; 1819 : 			AreYouSure(TXT_ERROR,TXT_INVALID_CALLSIGN,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	154					; 0000009aH
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1820 : 			return FALSE;

	xor	eax, eax
	jmp	$LN17@SaveContro
$LN14@SaveContro:

; 1821 : 		}
; 1822 : 
; 1823 : 		_TCHAR *callsign;
; 1824 : 		_TCHAR *ptr = callsign = ebox->GetText();

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	mov	DWORD PTR _callsign$3[ebp], eax
	mov	eax, DWORD PTR _callsign$3[ebp]
	mov	DWORD PTR _ptr$4[ebp], eax

; 1825 : 
; 1826 : 		ptr = callsign;

	mov	ecx, DWORD PTR _callsign$3[ebp]
	mov	DWORD PTR _ptr$4[ebp], ecx
$LN13@SaveContro:

; 1827 : 		while(*ptr == ' ')

	mov	edx, DWORD PTR _ptr$4[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN12@SaveContro

; 1828 : 			ptr++;

	mov	ecx, DWORD PTR _ptr$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$4[ebp], ecx
	jmp	SHORT $LN13@SaveContro
$LN12@SaveContro:

; 1829 : 
; 1830 : 		callsign = ptr;

	mov	edx, DWORD PTR _ptr$4[ebp]
	mov	DWORD PTR _callsign$3[ebp], edx

; 1831 : 		ptr += (_tcslen(callsign) - 1);

	mov	eax, DWORD PTR _callsign$3[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _ptr$4[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _ptr$4[ebp], edx
$LN11@SaveContro:

; 1832 : 		while(*ptr == ' ')

	mov	eax, DWORD PTR _ptr$4[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN10@SaveContro

; 1833 : 			ptr--;

	mov	edx, DWORD PTR _ptr$4[ebp]
	sub	edx, 1
	mov	DWORD PTR _ptr$4[ebp], edx
	jmp	SHORT $LN11@SaveContro
$LN10@SaveContro:

; 1834 : 		ptr++;

	mov	eax, DWORD PTR _ptr$4[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$4[ebp], eax

; 1835 : 		*ptr = 0;

	mov	ecx, DWORD PTR _ptr$4[ebp]
	mov	BYTE PTR [ecx], 0

; 1836 : 
; 1837 : 		if( _tcsicmp( UI_logbk.Callsign(),callsign ) )

	mov	edx, DWORD PTR _callsign$3[ebp]
	push	edx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	je	$LN9@SaveContro

; 1838 : 		{
; 1839 : 			_TCHAR orig[MAX_PATH];
; 1840 : 			_TCHAR newfile[MAX_PATH];
; 1841 : 
; 1842 : 			_stprintf(orig,_T("%s\\config\\%s.lbk"),FalconDataDirectory,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@
	lea	eax, DWORD PTR _orig$5[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1843 : 			_stprintf(newfile,_T("%s\\config\\%s.lbk"),FalconDataDirectory,callsign);

	mov	ecx, DWORD PTR _callsign$3[ebp]
	push	ecx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@LEPDOEAL@?$CFs?2config?2?$CFs?4lbk?$AA@
	lea	edx, DWORD PTR _newfile$6[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1844 : 			_trename(orig,newfile);

	lea	eax, DWORD PTR _newfile$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _orig$5[ebp]
	push	ecx
	call	_rename
	add	esp, 8

; 1845 : 
; 1846 : 			_stprintf(orig,_T("%s\\config\\%s.pop"),FalconDataDirectory,UI_logbk.OptionsFile());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?OptionsFile@LogBookData@@QAEPADXZ	; LogBookData::OptionsFile
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@PNCFEOF@?$CFs?2config?2?$CFs?4pop?$AA@
	lea	edx, DWORD PTR _orig$5[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1847 : 			_stprintf(newfile,_T("%s\\config\\%s.pop"),FalconDataDirectory,callsign);

	mov	eax, DWORD PTR _callsign$3[ebp]
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@PNCFEOF@?$CFs?2config?2?$CFs?4pop?$AA@
	lea	ecx, DWORD PTR _newfile$6[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1848 : 			_trename(orig,newfile);

	lea	edx, DWORD PTR _newfile$6[ebp]
	push	edx
	lea	eax, DWORD PTR _orig$5[ebp]
	push	eax
	call	_rename
	add	esp, 8

; 1849 : 			
; 1850 : 			UI_logbk.SetOptionsFile(UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetOptionsFile@LogBookData@@QAEXPAD@Z	; LogBookData::SetOptionsFile

; 1851 : 			_stprintf(orig,_T("%s\\config\\%s.rul"),FalconDataDirectory,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@FCBNOHJF@?$CFs?2config?2?$CFs?4rul?$AA@
	lea	ecx, DWORD PTR _orig$5[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1852 : 			_stprintf(newfile,_T("%s\\config\\%s.rul"),FalconDataDirectory,callsign);

	mov	edx, DWORD PTR _callsign$3[ebp]
	push	edx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BB@FCBNOHJF@?$CFs?2config?2?$CFs?4rul?$AA@
	lea	eax, DWORD PTR _newfile$6[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 1853 : 			_trename(orig,newfile);

	lea	ecx, DWORD PTR _newfile$6[ebp]
	push	ecx
	lea	edx, DWORD PTR _orig$5[ebp]
	push	edx
	call	_rename
	add	esp, 8
$LN9@SaveContro:

; 1854 : 		}
; 1855 : 		UI_logbk.SetCallsign(callsign);

	mov	eax, DWORD PTR _callsign$3[ebp]
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetCallsign@LogBookData@@QAEXPAD@Z	; LogBookData::SetCallsign

; 1856 : 
; 1857 : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1858 : 		ebox->SetText(callsign);

	mov	ecx, DWORD PTR _callsign$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1859 : 		ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1860 : 
; 1861 : 		C_Window *stpwin;
; 1862 : 		stpwin = gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _stpwin$1[ebp], eax

; 1863 : 		if(stpwin)

	cmp	DWORD PTR _stpwin$1[ebp], 0
	je	SHORT $LN15@SaveContro

; 1864 : 		{
; 1865 : 			C_Button *button;
; 1866 : 			button = (C_Button *)stpwin->FindControl(SET_LOGBOOK);

	push	70036					; 00011194H
	mov	ecx, DWORD PTR _stpwin$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$2[ebp], eax

; 1867 : 			if(button)

	cmp	DWORD PTR _button$2[ebp], 0
	je	SHORT $LN15@SaveContro

; 1868 : 			{
; 1869 : 				button->SetText(0,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	0
	mov	ecx, DWORD PTR _button$2[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 1870 : 				button->Refresh();

	mov	eax, DWORD PTR _button$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$2[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN15@SaveContro:

; 1871 : 			}
; 1872 : 		}
; 1873 : 	}
; 1874 : 
; 1875 : 	ebox=(C_EditBox *)win->FindControl(PILOT_LIST);

	push	50005					; 0000c355H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1876 : 	if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN6@SaveContro

; 1877 : 	{
; 1878 : 		UI_logbk.SetName(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetName@LogBookData@@QAEXPAD@Z		; LogBookData::SetName
$LN6@SaveContro:

; 1879 : 	}
; 1880 : 
; 1881 : 	ebox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1882 : 	if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN5@SaveContro

; 1883 : 	{
; 1884 : 		UI_logbk.SetPassword(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPassword@LogBookData@@QAEHPAD@Z	; LogBookData::SetPassword

; 1885 : 		ebox->SetText(_T(""));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1886 : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@SaveContro:

; 1887 : 	}
; 1888 : 
; 1889 : 	lbox=(C_ListBox *)win->FindControl(VOICE_CHOICE);

	push	50100					; 0000c3b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1890 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@SaveContro

; 1891 : 	{
; 1892 : 		UI_logbk.SetVoice(static_cast<short>(lbox->GetTextID() - 1));

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetVoice@LogBookData@@QAEXF@Z		; LogBookData::SetVoice
$LN4@SaveContro:

; 1893 : 	}
; 1894 : 
; 1895 : 	ebox=(C_EditBox *)win->FindControl(PERSONAL_TEXT);

	push	50055					; 0000c387H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1896 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN3@SaveContro

; 1897 : 	{
; 1898 : 		UI_logbk.SetPersonal(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetPersonal@LogBookData@@QAEXPAD@Z	; LogBookData::SetPersonal
$LN3@SaveContro:

; 1899 : 	}
; 1900 : 
; 1901 : 	ebox=(C_EditBox *)win->FindControl(SQUADRON_NAME);

	push	50056					; 0000c388H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1902 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN2@SaveContro

; 1903 : 	{
; 1904 : 		UI_logbk.SetSquadron(ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetSquadron@LogBookData@@QAEXPAD@Z	; LogBookData::SetSquadron
$LN2@SaveContro:

; 1905 : 	}
; 1906 : 
; 1907 : 	text = (C_Text *)win->FindControl(COMMISSIONED_FIELD);

	push	50045					; 0000c37dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1908 : 	if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN1@SaveContro

; 1909 : 	{
; 1910 : 		UI_logbk.SetCommissioned(text->GetText());

	mov	ecx, DWORD PTR _text$[ebp]
	call	?GetText@C_Text@@QAEPADXZ		; C_Text::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SetCommissioned@LogBookData@@QAEXPAD@Z	; LogBookData::SetCommissioned
$LN1@SaveContro:

; 1911 : 	}
; 1912 : 
; 1913 : 	return TRUE;

	mov	eax, 1
$LN17@SaveContro:

; 1914 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveControlValues@@YAHXZ ENDP				; SaveControlValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_CurCallsign$ = -8					; size = 4
_i$ = -4						; size = 4
_callsign$ = 8						; size = 4
_lbox$ = 12						; size = 4
?SetPilot@@YAHPADPAVC_ListBox@@@Z PROC			; SetPilot

; 465  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 466  : 	int i=1;

	mov	DWORD PTR _i$[ebp], 1

; 467  : 	_TCHAR *CurCallsign;
; 468  : 
; 469  : 	lbox->SetValue(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN4@SetPilot:

; 470  : 	while(i == lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	cmp	DWORD PTR _i$[ebp], eax
	jne	SHORT $LN3@SetPilot

; 471  : 	{
; 472  : 		CurCallsign = lbox->GetText();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetText@C_ListBox@@QAEPADXZ		; C_ListBox::GetText
	mov	DWORD PTR _CurCallsign$[ebp], eax

; 473  : 		if(CurCallsign)

	cmp	DWORD PTR _CurCallsign$[ebp], 0
	je	SHORT $LN2@SetPilot

; 474  : 		{
; 475  : 			if(!_tcsicmp(CurCallsign,callsign) )

	mov	ecx, DWORD PTR _callsign$[ebp]
	push	ecx
	mov	edx, DWORD PTR _CurCallsign$[ebp]
	push	edx
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@SetPilot

; 476  : 			{
; 477  : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN5@SetPilot
$LN2@SetPilot:

; 478  : 			}
; 479  : 		}
; 480  : 		lbox->SetValue(++i);

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 481  : 	}

	jmp	SHORT $LN4@SetPilot
$LN3@SetPilot:

; 482  : 	return FALSE;

	xor	eax, eax
$LN5@SetPilot:

; 483  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetPilot@@YAHPADPAVC_ListBox@@@Z ENDP			; SetPilot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
tv70 = -460						; size = 4
_last$ = -456						; size = 4
_items$ = -452						; size = 4
_ignore$ = -448						; size = 4
_ffhnd$ = -444						; size = 4
_i$ = -440						; size = 4
_dst$ = -436						; size = 4
_extension$ = -432					; size = 4
_ptr$ = -428						; size = 4
_filedata$ = -424					; size = 320
_path$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_win$ = 8						; size = 4
_fspec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_lbox$ = 20						; size = 4
_cutext$ = 24						; size = 4
_exclude_te$ = 28					; size = 4
?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z PROC ; GetPilotList

; 487  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 488  : 	char path[100];
; 489  : 	WIN32_FIND_DATA filedata;
; 490  : 	HANDLE ffhnd;
; 491  : 	BOOL last,ignore;
; 492  : 	long i; //,y=0;
; 493  : 	int items =0;

	mov	DWORD PTR _items$[ebp], 0

; 494  : 	_TCHAR	*dst, *ptr, *extension;
; 495  : 
; 496  : 	if(!win || !lbox) return;

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN19@GetPilotLi
	cmp	DWORD PTR _lbox$[ebp], 0
	jne	SHORT $LN20@GetPilotLi
$LN19@GetPilotLi:
	jmp	$LN21@GetPilotLi
$LN20@GetPilotLi:

; 497  : 
; 498  : 	ffhnd=FindFirstFile(fspec,&filedata);

	lea	eax, DWORD PTR _filedata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fspec$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _ffhnd$[ebp], eax

; 499  : 	last=(ffhnd != INVALID_HANDLE_VALUE);

	cmp	DWORD PTR _ffhnd$[ebp], -1
	je	SHORT $LN23@GetPilotLi
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN24@GetPilotLi
$LN23@GetPilotLi:
	mov	DWORD PTR tv70[ebp], 0
$LN24@GetPilotLi:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _last$[ebp], edx

; 500  : 	
; 501  : 	lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 502  : 
; 503  : 	if (exclude_te)

	cmp	DWORD PTR _exclude_te$[ebp], 0
	je	$LN13@GetPilotLi

; 504  : 	{
; 505  : 		ptr = fspec;

	mov	eax, DWORD PTR _fspec$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 506  : 		dst = path;

	lea	ecx, DWORD PTR _path$[ebp]
	mov	DWORD PTR _dst$[ebp], ecx

; 507  : 		extension = NULL;

	mov	DWORD PTR _extension$[ebp], 0
$LN17@GetPilotLi:

; 508  : 
; 509  : 		while (*ptr)

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN16@GetPilotLi

; 510  : 		{
; 511  : 			if (*ptr == '\\')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN15@GetPilotLi

; 512  : 				extension = dst;

	mov	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _extension$[ebp], eax
$LN15@GetPilotLi:

; 513  : 
; 514  : 			*dst = *ptr;

	mov	ecx, DWORD PTR _dst$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al

; 515  : 			dst ++;

	mov	ecx, DWORD PTR _dst$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dst$[ebp], ecx

; 516  : 			ptr ++;

	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 517  : 		}

	jmp	SHORT $LN17@GetPilotLi
$LN16@GetPilotLi:

; 518  : 		*dst = '\0';

	mov	eax, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [eax], 0

; 519  : 
; 520  : 		if (extension)

	cmp	DWORD PTR _extension$[ebp], 0
	je	SHORT $LN13@GetPilotLi

; 521  : 			*extension = '\0';

	mov	ecx, DWORD PTR _extension$[ebp]
	mov	BYTE PTR [ecx], 0
$LN13@GetPilotLi:

; 522  : 	}
; 523  : 
; 524  : 	while(last)

	cmp	DWORD PTR _last$[ebp], 0
	je	$LN12@GetPilotLi

; 525  : 	{
; 526  : 		if(cutext)

	cmp	DWORD PTR _cutext$[ebp], 0
	je	SHORT $LN11@GetPilotLi

; 527  : 		{
; 528  : 			ptr = filedata.cFileName;

	lea	edx, DWORD PTR _filedata$[ebp+44]
	mov	DWORD PTR _ptr$[ebp], edx

; 529  : 			extension = NULL;

	mov	DWORD PTR _extension$[ebp], 0
$LN10@GetPilotLi:

; 530  : 
; 531  : 			while (*ptr)

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN9@GetPilotLi

; 532  : 			{
; 533  : 				if (*ptr == '.')

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN8@GetPilotLi

; 534  : 					extension = ptr;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _extension$[ebp], ecx
$LN8@GetPilotLi:

; 535  : 
; 536  : 				ptr ++;

	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 537  : 			}

	jmp	SHORT $LN10@GetPilotLi
$LN9@GetPilotLi:

; 538  : 
; 539  : 			if (extension)

	cmp	DWORD PTR _extension$[ebp], 0
	je	SHORT $LN11@GetPilotLi

; 540  : 				*extension = 0;

	mov	eax, DWORD PTR _extension$[ebp]
	mov	BYTE PTR [eax], 0
$LN11@GetPilotLi:

; 541  : 		}
; 542  : 
; 543  : 		ignore=FALSE;

	mov	DWORD PTR _ignore$[ebp], 0

; 544  : 		if(excludelist)

	cmp	DWORD PTR _excludelist$[ebp], 0
	je	SHORT $LN6@GetPilotLi

; 545  : 		{
; 546  : 			i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN5@GetPilotLi:

; 547  : 			while(excludelist[i] && !ignore)

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _excludelist$[ebp]
	cmp	DWORD PTR [edx+ecx*4], 0
	je	SHORT $LN6@GetPilotLi
	cmp	DWORD PTR _ignore$[ebp], 0
	jne	SHORT $LN6@GetPilotLi

; 548  : 			{
; 549  : 				if(stricmp(excludelist[i],filedata.cFileName) == 0)

	lea	eax, DWORD PTR _filedata$[ebp+44]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _excludelist$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@GetPilotLi

; 550  : 					ignore=TRUE;

	mov	DWORD PTR _ignore$[ebp], 1
$LN3@GetPilotLi:

; 551  : 
; 552  : 				i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 553  : 			}

	jmp	SHORT $LN5@GetPilotLi
$LN6@GetPilotLi:

; 554  : 		}
; 555  : 
; 556  : 		if(!ignore)

	cmp	DWORD PTR _ignore$[ebp], 0
	jne	SHORT $LN2@GetPilotLi

; 557  : 		{
; 558  : 			items++;

	mov	edx, DWORD PTR _items$[ebp]
	add	edx, 1
	mov	DWORD PTR _items$[ebp], edx

; 559  : 			lbox->AddItem(items,C_TYPE_ITEM,filedata.cFileName);

	lea	eax, DWORD PTR _filedata$[ebp+44]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _items$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem
$LN2@GetPilotLi:

; 560  : 		}
; 561  : 		last= FindNextFile(ffhnd,&filedata);

	lea	edx, DWORD PTR _filedata$[ebp]
	push	edx
	mov	eax, DWORD PTR _ffhnd$[ebp]
	push	eax
	call	DWORD PTR __imp__FindNextFileA@8
	mov	DWORD PTR _last$[ebp], eax

; 562  : 	}

	jmp	$LN13@GetPilotLi
$LN12@GetPilotLi:

; 563  : 	lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 564  : 	if (ffhnd != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR _ffhnd$[ebp], -1
	je	SHORT $LN21@GetPilotLi

; 565  : 	    FindClose (ffhnd); // JPO handle leak

	mov	ecx, DWORD PTR _ffhnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindClose@4
$LN21@GetPilotLi:

; 566  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ENDP ; GetPilotList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
tv308 = -52						; size = 4
tv306 = -48						; size = 4
_first_dev$ = -44					; size = 4
tv244 = -40						; size = 4
tv242 = -36						; size = 4
tv180 = -32						; size = 4
tv178 = -28						; size = 4
tv84 = -24						; size = 4
tv82 = -20						; size = 4
_OakOrStar$ = -16					; size = 4
_Awarded$ = -12						; size = 4
_device$ = -8						; size = 4
_button$ = -4						; size = 4
_win$ = 8						; size = 4
_ID$ = 12						; size = 4
_Medal$ = 16						; size = 1
_Number$ = 20						; size = 1
?AwardDevices@@YAXPAVC_Window@@JEE@Z PROC		; AwardDevices

; 1080 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 1081 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN21@AwardDevic

; 1082 : 		return;

	jmp	$LN22@AwardDevic
$LN21@AwardDevic:

; 1083 : 
; 1084 : 	int Awarded = 0;

	mov	DWORD PTR _Awarded$[ebp], 0

; 1085 : 	int OakOrStar = DEV_OAK;

	mov	DWORD PTR _OakOrStar$[ebp], 1

; 1086 : 
; 1087 : 	if(Medal == KOREA_CAMPAIGN)

	movzx	eax, BYTE PTR _Medal$[ebp]
	cmp	eax, 4
	jne	SHORT $LN20@AwardDevic

; 1088 : 		OakOrStar = DEV_STAR;

	mov	DWORD PTR _OakOrStar$[ebp], 0
$LN20@AwardDevic:

; 1089 : 
; 1090 : 	C_Button *button;
; 1091 : 														
; 1092 : 	int first_dev;
; 1093 : 	int device = (ID - MEDALS_AFC)*4 + MEDALS_AFC_DEVICE_1; 

	mov	ecx, DWORD PTR _ID$[ebp]
	lea	edx, DWORD PTR [ecx*4-150127]
	mov	DWORD PTR _device$[ebp], edx

; 1094 : 	first_dev = device;

	mov	eax, DWORD PTR _device$[ebp]
	mov	DWORD PTR _first_dev$[ebp], eax

; 1095 : 
; 1096 : 	if(Number > 0)

	movzx	ecx, BYTE PTR _Number$[ebp]
	test	ecx, ecx
	jle	SHORT $LN18@AwardDevic

; 1097 : 		Awarded++;

	mov	edx, DWORD PTR _Awarded$[ebp]
	add	edx, 1
	mov	DWORD PTR _Awarded$[ebp], edx
$LN18@AwardDevic:

; 1098 : 	
; 1099 : 	while(Number - Awarded > 4)

	movzx	eax, BYTE PTR _Number$[ebp]
	sub	eax, DWORD PTR _Awarded$[ebp]
	cmp	eax, 4
	jle	$LN17@AwardDevic

; 1100 : 	{
; 1101 : 		button = (C_Button *)win->FindControl(device++);

	mov	ecx, DWORD PTR _device$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR _device$[ebp]
	add	eax, 1
	mov	DWORD PTR _device$[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _button$[ebp], ecx

; 1102 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN16@AwardDevic

; 1103 : 		{
; 1104 : 			button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 1105 : 			if(OakOrStar == DEV_OAK)

	cmp	DWORD PTR _OakOrStar$[ebp], 1
	jne	SHORT $LN15@AwardDevic

; 1106 : 			{
; 1107 : 				button->SetState(1);

	push	1
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1108 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1109 : 			}
; 1110 : 			else

	jmp	SHORT $LN14@AwardDevic
$LN15@AwardDevic:

; 1111 : 			{
; 1112 : 				button->SetState(3);

	push	3
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1113 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@AwardDevic:

; 1114 : 			}
; 1115 : 			button->SetHelpText(gStringMgr->AddText("5"));

	push	OFFSET ??_C@_01BMBHCPLG@5?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN16@AwardDevic:

; 1116 : 
; 1117 : 		}
; 1118 : 
; 1119 : 		Awarded += 5;

	mov	ecx, DWORD PTR _Awarded$[ebp]
	add	ecx, 5
	mov	DWORD PTR _Awarded$[ebp], ecx

; 1120 : 	}

	jmp	$LN18@AwardDevic
$LN17@AwardDevic:

; 1121 : 
; 1122 : 	if(Number > 9)

	movzx	edx, BYTE PTR _Number$[ebp]
	cmp	edx, 9
	jle	$LN8@AwardDevic

; 1123 : 	{
; 1124 : 		button = (C_Button *)win->FindControl(device++);

	mov	eax, DWORD PTR _device$[ebp]
	mov	DWORD PTR tv178[ebp], eax
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR tv180[ebp], eax
	mov	edx, DWORD PTR _device$[ebp]
	add	edx, 1
	mov	DWORD PTR _device$[ebp], edx
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR _button$[ebp], eax

; 1125 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN12@AwardDevic

; 1126 : 		{
; 1127 : 			button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1128 : 			if(OakOrStar == DEV_OAK)

	cmp	DWORD PTR _OakOrStar$[ebp], 1
	jne	SHORT $LN11@AwardDevic

; 1129 : 			{
; 1130 : 				button->SetState(1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1131 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1132 : 			}
; 1133 : 			else

	jmp	SHORT $LN10@AwardDevic
$LN11@AwardDevic:

; 1134 : 			{
; 1135 : 				button->SetState(3);

	push	3
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1136 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@AwardDevic:

; 1137 : 			}
; 1138 : 			button->SetHelpText(gStringMgr->AddText("5"));

	push	OFFSET ??_C@_01BMBHCPLG@5?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN12@AwardDevic:

; 1139 : 		}
; 1140 : 
; 1141 : 	}
; 1142 : 	else

	jmp	$LN3@AwardDevic
$LN8@AwardDevic:

; 1143 : 	{
; 1144 : 		while(Number - Awarded)

	movzx	ecx, BYTE PTR _Number$[ebp]
	sub	ecx, DWORD PTR _Awarded$[ebp]
	je	$LN3@AwardDevic

; 1145 : 		{
; 1146 : 			
; 1147 : 			button = (C_Button *)win->FindControl(device++);

	mov	edx, DWORD PTR _device$[ebp]
	mov	DWORD PTR tv242[ebp], edx
	mov	eax, DWORD PTR tv242[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR tv244[ebp], eax
	mov	ecx, DWORD PTR _device$[ebp]
	add	ecx, 1
	mov	DWORD PTR _device$[ebp], ecx
	mov	edx, DWORD PTR tv244[ebp]
	mov	DWORD PTR _button$[ebp], edx

; 1148 : 			if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN6@AwardDevic

; 1149 : 			{
; 1150 : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1151 : 				if(OakOrStar == DEV_OAK)

	cmp	DWORD PTR _OakOrStar$[ebp], 1
	jne	SHORT $LN5@AwardDevic

; 1152 : 				{
; 1153 : 					button->SetState(0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1154 : 					button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1155 : 				}
; 1156 : 				else

	jmp	SHORT $LN4@AwardDevic
$LN5@AwardDevic:

; 1157 : 				{
; 1158 : 					button->SetState(2);

	push	2
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1159 : 					button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@AwardDevic:

; 1160 : 				}
; 1161 : 				button->SetHelpText(gStringMgr->AddText("1"));

	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN6@AwardDevic:

; 1162 : 			}
; 1163 : 			Awarded++;

	mov	ecx, DWORD PTR _Awarded$[ebp]
	add	ecx, 1
	mov	DWORD PTR _Awarded$[ebp], ecx

; 1164 : 		}

	jmp	$LN8@AwardDevic
$LN3@AwardDevic:

; 1165 : 	}
; 1166 : 
; 1167 : 	while( (device - first_dev) < 4)

	mov	edx, DWORD PTR _device$[ebp]
	sub	edx, DWORD PTR _first_dev$[ebp]
	cmp	edx, 4
	jge	SHORT $LN22@AwardDevic

; 1168 : 	{
; 1169 : 		button = (C_Button *)win->FindControl(device++);

	mov	eax, DWORD PTR _device$[ebp]
	mov	DWORD PTR tv306[ebp], eax
	mov	ecx, DWORD PTR tv306[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR tv308[ebp], eax
	mov	edx, DWORD PTR _device$[ebp]
	add	edx, 1
	mov	DWORD PTR _device$[ebp], edx
	mov	eax, DWORD PTR tv308[ebp]
	mov	DWORD PTR _button$[ebp], eax

; 1170 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@AwardDevic

; 1171 : 		{
; 1172 : 			button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1173 : 			button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@AwardDevic:

; 1174 : 		}
; 1175 : 	}

	jmp	SHORT $LN3@AwardDevic
$LN22@AwardDevic:

; 1176 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AwardDevices@@YAXPAVC_Window@@JEE@Z ENDP		; AwardDevices
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_pos$ = -12						; size = 4
_numchars$ = -8						; size = 4
_ptr$ = -4						; size = 4
_filename$ = 8						; size = 4
?CheckCallsign@@YAHPAD@Z PROC				; CheckCallsign

; 1771 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1772 : 	if(!_tcslen(filename))

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@CheckCalls

; 1773 : 		return FALSE;

	xor	eax, eax
	jmp	$LN10@CheckCalls
$LN9@CheckCalls:

; 1774 : 
; 1775 : 
; 1776 : 	unsigned long pos = _tcscspn(filename,_T("\\/:?\"<>|") );

	push	OFFSET ??_C@_08PIHKKDLA@?2?1?3?$DP?$CC?$DM?$DO?$HM?$AA@
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	__tcscspn
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax

; 1777 : 
; 1778 : 	if(pos < _tcslen(filename))

	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _pos$[ebp], eax
	jae	SHORT $LN8@CheckCalls

; 1779 : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN10@CheckCalls
$LN8@CheckCalls:

; 1780 : 
; 1781 : 	
; 1782 : 	_TCHAR *ptr = filename;

	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 1783 : 
; 1784 : 	int numchars = 0;

	mov	DWORD PTR _numchars$[ebp], 0

; 1785 : 	
; 1786 : 	for(; *ptr; ptr++)

	jmp	SHORT $LN7@CheckCalls
$LN6@CheckCalls:
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$[ebp], ecx
$LN7@CheckCalls:
	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN5@CheckCalls

; 1787 : 	{
; 1788 : 		if(_istalnum(*ptr))

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	push	edx
	call	__ismbcalnum
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@CheckCalls

; 1789 : 			numchars++;

	mov	eax, DWORD PTR _numchars$[ebp]
	add	eax, 1
	mov	DWORD PTR _numchars$[ebp], eax
	jmp	SHORT $LN3@CheckCalls
$LN4@CheckCalls:

; 1790 : 		else if(*ptr != ' ')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN3@CheckCalls

; 1791 : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $LN10@CheckCalls
$LN3@CheckCalls:

; 1792 : 	}

	jmp	SHORT $LN6@CheckCalls
$LN5@CheckCalls:

; 1793 : 
; 1794 : 	if(numchars < 3)

	cmp	DWORD PTR _numchars$[ebp], 3
	jge	SHORT $LN1@CheckCalls

; 1795 : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN10@CheckCalls
$LN1@CheckCalls:

; 1796 : 
; 1797 : 
; 1798 : 	return TRUE;

	mov	eax, 1
$LN10@CheckCalls:

; 1799 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CheckCallsign@@YAHPAD@Z ENDP				; CheckCallsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ebox$ = -8						; size = 4
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SaveLogBookCB@@YAXJFPAVC_Base@@@Z PROC			; SaveLogBookCB

; 1917 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1918 : 	C_Window	*win;
; 1919 : 	C_EditBox	*ebox;
; 1920 : 
; 1921 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN7@SaveLogBoo

; 1922 : 		return;

	jmp	$LN8@SaveLogBoo
$LN7@SaveLogBoo:

; 1923 : 
; 1924 : 	if(LogState & LB_OPPONENT || !(LogState & LB_EDITABLE))

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	jne	SHORT $LN5@SaveLogBoo
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 2
	jne	SHORT $LN6@SaveLogBoo
$LN5@SaveLogBoo:

; 1925 : 	{
; 1926 : 		CloseLogWindowCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z	; CloseLogWindowCB
	add	esp, 12					; 0000000cH

; 1927 : 		return;

	jmp	$LN8@SaveLogBoo
$LN6@SaveLogBoo:

; 1928 : 	}
; 1929 : 
; 1930 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1931 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN4@SaveLogBoo

; 1932 : 		return;

	jmp	$LN8@SaveLogBoo
$LN4@SaveLogBoo:

; 1933 : 
; 1934 : 
; 1935 : 	ebox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1936 : 	if(ebox != NULL)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN3@SaveLogBoo

; 1937 : 	{
; 1938 : 		if(!UI_logbk.CheckPassword(ebox->GetText()))

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN3@SaveLogBoo

; 1939 : 		{
; 1940 : 			LogState &= ~LB_CHECKED;

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, -9					; fffffff7H
	mov	DWORD PTR ?LogState@@3HA, eax		; LogState

; 1941 : 			PasswordWindow(TXT_VERIFY_PASSWORD,TXT_VERIFY_PASS_MESSAGE,PasswordChangeVerifiedCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?PasswordChangeVerifiedCB@@YAXJFPAVC_Base@@@Z ; PasswordChangeVerifiedCB
	push	150					; 00000096H
	push	148					; 00000094H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H

; 1942 : 			return;

	jmp	SHORT $LN8@SaveLogBoo
$LN3@SaveLogBoo:

; 1943 : 		}
; 1944 : 	}
; 1945 : 
; 1946 : 	if(!SaveControlValues())

	call	?SaveControlValues@@YAHXZ		; SaveControlValues
	test	eax, eax
	jne	SHORT $LN1@SaveLogBoo

; 1947 : 		return;

	jmp	SHORT $LN8@SaveLogBoo
$LN1@SaveLogBoo:

; 1948 : 	
; 1949 : 	LogState |= LB_REFRESH_PILOT;

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	or	ecx, 16					; 00000010H
	mov	DWORD PTR ?LogState@@3HA, ecx		; LogState

; 1950 : 	UI_logbk.SaveData();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1951 : 	LogBook.LoadData(&UI_logbk.Pilot);

	push	OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?LoadData@LogBookData@@QAEHPAUPilot@@@Z	; LogBookData::LoadData

; 1952 : 
; 1953 : 	CloseLogWindowCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z	; CloseLogWindowCB
	add	esp, 12					; 0000000cH
$LN8@SaveLogBoo:

; 1954 : 	
; 1955 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveLogBookCB@@YAXJFPAVC_Base@@@Z ENDP			; SaveLogBookCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_button$1 = -4						; size = 4
_ID$ = 8						; size = 4
_ImageID$ = 12						; size = 4
?SetResourceImage@@YAHJJ@Z PROC				; SetResourceImage

; 1308 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1309 : 	C_Window	*win;
; 1310 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1311 : 	if(win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN5@SetResourc

; 1312 : 	{
; 1313 : 		C_Button *button = (C_Button *)win->FindControl(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$1[ebp], eax

; 1314 : 		if(button)

	cmp	DWORD PTR _button$1[ebp], 0
	je	SHORT $LN4@SetResourc

; 1315 : 		{
; 1316 : 			button->Refresh();

	mov	ecx, DWORD PTR _button$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$1[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1317 : 			
; 1318 : 			button->SetImage(C_STATE_0,ImageID);

	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _button$1[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1319 : 			button->SetImage(C_STATE_1,ImageID);

	mov	edx, DWORD PTR _ImageID$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _button$1[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1320 : 			button->SetImage(C_STATE_SELECTED,ImageID);

	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _button$1[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1321 : 			button->SetImage(C_STATE_DISABLED,ImageID);

	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$1[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1322 : 			button->Refresh();

	mov	edx, DWORD PTR _button$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$1[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN4@SetResourc:

; 1323 : 		}
; 1324 : 
; 1325 : 		if(ID == PILOT_PIC)

	cmp	DWORD PTR _ID$[ebp], 50060		; 0000c38cH
	jne	SHORT $LN3@SetResourc

; 1326 : 			CurPic = 0;

	mov	DWORD PTR ?CurPic@@3HA, 0		; CurPic
	jmp	SHORT $LN2@SetResourc
$LN3@SetResourc:

; 1327 : 		else if(ID == PATCH_PIC)

	cmp	DWORD PTR _ID$[ebp], 50057		; 0000c389H
	jne	SHORT $LN2@SetResourc

; 1328 : 			CurPatch = 0;

	mov	DWORD PTR ?CurPatch@@3HA, 0		; CurPatch
$LN2@SetResourc:

; 1329 : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN6@SetResourc
$LN5@SetResourc:

; 1330 : 	}
; 1331 : 	return FALSE;

	xor	eax, eax
$LN6@SetResourc:

; 1332 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetResourceImage@@YAHJJ@Z ENDP				; SetResourceImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_resmgr$ = -28						; size = 4
_OldImageID$1 = -24					; size = 4
_win$ = -20						; size = 4
_Leave$ = -16						; size = 4
tv70 = -12						; size = 4
_Image$ = -8						; size = 4
_button$ = -4						; size = 4
_ID$ = 8						; size = 4
_filename$ = 12						; size = 4
_ImageID$ = 16						; size = 4
?SetImage@@YAHJPADJ@Z PROC				; SetImage

; 1336 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 1337 : 	C_Button	*button;
; 1338 : 	C_Window	*win;
; 1339 : 	C_Resmgr *resmgr=NULL;

	mov	DWORD PTR _resmgr$[ebp], 0

; 1340 : 	IMAGE_RSC *Image=NULL;

	mov	DWORD PTR _Image$[ebp], 0

; 1341 : //	IMAGE_RSC *PrevImage=NULL;
; 1342 : 	F4CSECTIONHANDLE *Leave;
; 1343 : 
; 1344 : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1345 : 	if(win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN25@SetImage

; 1346 : 	{
; 1347 : 		long OldImageID = ImageID;

	mov	eax, DWORD PTR _ImageID$[ebp]
	mov	DWORD PTR _OldImageID$1[ebp], eax

; 1348 : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1349 : 		switch(ImageID)

	mov	edx, DWORD PTR _ImageID$[ebp]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR tv70[ebp]
	sub	eax, 8649144				; 0083f9b8H
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 3
	ja	SHORT $LN18@SetImage
	mov	ecx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN30@SetImage[ecx*4]
$LN22@SetImage:

; 1350 : 		{
; 1351 : 		case LOGBOOK_PICTURE_ID:
; 1352 : 			ImageID = LOGBOOK_PICTURE_ID_2;

	mov	DWORD PTR _ImageID$[ebp], 8649145	; 0083f9b9H

; 1353 : 			break;

	jmp	SHORT $LN23@SetImage
$LN21@SetImage:

; 1354 : 		case LOGBOOK_PICTURE_ID_2:
; 1355 : 			ImageID = LOGBOOK_PICTURE_ID;

	mov	DWORD PTR _ImageID$[ebp], 8649144	; 0083f9b8H

; 1356 : 			break;

	jmp	SHORT $LN23@SetImage
$LN20@SetImage:

; 1357 : 		case LOGBOOK_SQUADRON_ID:
; 1358 : 			ImageID = LOGBOOK_SQUADRON_ID_2;

	mov	DWORD PTR _ImageID$[ebp], 8649147	; 0083f9bbH

; 1359 : 			break;

	jmp	SHORT $LN23@SetImage
$LN19@SetImage:

; 1360 : 		case LOGBOOK_SQUADRON_ID_2:
; 1361 : 			ImageID = LOGBOOK_SQUADRON_ID;

	mov	DWORD PTR _ImageID$[ebp], 8649146	; 0083f9baH

; 1362 : 			break;

	jmp	SHORT $LN23@SetImage
$LN18@SetImage:

; 1363 : 		default:
; 1364 : 			if(ID == PATCH_PIC)

	cmp	DWORD PTR _ID$[ebp], 50057		; 0000c389H
	jne	SHORT $LN17@SetImage

; 1365 : 				ImageID = LOGBOOK_PICTURE_ID;

	mov	DWORD PTR _ImageID$[ebp], 8649144	; 0083f9b8H
	jmp	SHORT $LN23@SetImage
$LN17@SetImage:

; 1366 : 			else if(ID == PILOT_PIC)

	cmp	DWORD PTR _ID$[ebp], 50060		; 0000c38cH
	jne	SHORT $LN23@SetImage

; 1367 : 				ImageID = LOGBOOK_SQUADRON_ID;

	mov	DWORD PTR _ImageID$[ebp], 8649146	; 0083f9baH
$LN23@SetImage:

; 1368 : 			break;
; 1369 : 		};
; 1370 : 		resmgr=gImageMgr->LoadImage(ImageID,filename,-1,-1);

	push	-1
	push	-1
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?LoadImageA@C_Image@@QAEPAVC_Resmgr@@JPADFF@Z ; C_Image::LoadImageA
	mov	DWORD PTR _resmgr$[ebp], eax

; 1371 : 
; 1372 : 		Image=gImageMgr->GetImage(ImageID);

	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	mov	DWORD PTR _Image$[ebp], eax

; 1373 : 		if(!Image)

	cmp	DWORD PTR _Image$[ebp], 0
	jne	SHORT $LN14@SetImage

; 1374 : 		{
; 1375 : 			MonoPrint("FUNCTION: void SetImage()  -> Failed to load PHOTO file: %s \n",filename);

	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0DO@MJOHCGJD@FUNCTION?3?5void?5SetImage?$CI?$CJ?5?5?9?$DO?5Fa@
	call	_MonoPrint
	add	esp, 8

; 1376 : 			UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 1377 : 			return FALSE;

	xor	eax, eax
	jmp	$LN26@SetImage
$LN14@SetImage:

; 1378 : 		}
; 1379 : 
; 1380 : 		if(CurControl == PATCH_PIC)

	cmp	DWORD PTR ?CurControl@@3JA, 50057	; CurControl, 0000c389H
	jne	SHORT $LN13@SetImage

; 1381 : 		{
; 1382 : 			if(Image->Header->w > 96 || Image->Header->h > 96)

	mov	ecx, DWORD PTR _Image$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+44]
	cmp	eax, 96					; 00000060H
	jg	SHORT $LN11@SetImage
	mov	ecx, DWORD PTR _Image$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+46]
	cmp	eax, 96					; 00000060H
	jle	SHORT $LN12@SetImage
$LN11@SetImage:

; 1383 : 			{
; 1384 : 				MonoPrint("Patch %s is too large\n",filename);

	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@MKBLAEGO@Patch?5?$CFs?5is?5too?5large?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 1385 : 				UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 1386 : 				return FALSE;

	xor	eax, eax
	jmp	$LN26@SetImage
$LN12@SetImage:

; 1387 : 			}
; 1388 : 			if(Image->Header->w % 2)

	mov	eax, DWORD PTR _Image$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+44]
	and	edx, -2147483647			; 80000001H
	jns	SHORT $LN28@SetImage
	dec	edx
	or	edx, -2					; fffffffeH
	inc	edx
$LN28@SetImage:
	test	edx, edx
	je	SHORT $LN10@SetImage

; 1389 : 			{
; 1390 : 				MonoPrint("Patch %s is an odd width\n",filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0BK@LEKLIFGE@Patch?5?$CFs?5is?5an?5odd?5width?6?$AA@
	call	_MonoPrint
	add	esp, 8
$LN10@SetImage:

; 1391 : 				//return FALSE;
; 1392 : 			}
; 1393 : 		}
; 1394 : 		else

	jmp	SHORT $LN9@SetImage
$LN13@SetImage:

; 1395 : 		{
; 1396 : 			if(Image->Header->w > 96 || Image->Header->h > 96)

	mov	ecx, DWORD PTR _Image$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+44]
	cmp	eax, 96					; 00000060H
	jg	SHORT $LN7@SetImage
	mov	ecx, DWORD PTR _Image$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+46]
	cmp	eax, 96					; 00000060H
	jle	SHORT $LN8@SetImage
$LN7@SetImage:

; 1397 : 			{
; 1398 : 				MonoPrint("Picture %s is too large\n",filename);

	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BJ@IDDAECMO@Picture?5?$CFs?5is?5too?5large?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 1399 : 				UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 1400 : 				return FALSE;

	xor	eax, eax
	jmp	$LN26@SetImage
$LN8@SetImage:

; 1401 : 			}
; 1402 : 			if(Image->Header->w % 2)

	mov	eax, DWORD PTR _Image$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+44]
	and	edx, -2147483647			; 80000001H
	jns	SHORT $LN29@SetImage
	dec	edx
	or	edx, -2					; fffffffeH
	inc	edx
$LN29@SetImage:
	test	edx, edx
	je	SHORT $LN9@SetImage

; 1403 : 			{
; 1404 : 				MonoPrint("Picture %s is an odd width\n",filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@GHEMMJIO@Picture?5?$CFs?5is?5an?5odd?5width?6?$AA@
	call	_MonoPrint
	add	esp, 8
$LN9@SetImage:

; 1405 : 				//return FALSE;
; 1406 : 			}
; 1407 : 		}
; 1408 : 
; 1409 : 		
; 1410 : 		button = (C_Button *)win->FindControl(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1411 : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN5@SetImage

; 1412 : 		{
; 1413 : 			button->Refresh();

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1414 : 			/*
; 1415 : 			int CenX,CenY,NewX,NewY;
; 1416 : 			
; 1417 : 			if(ID == PATCH_PIC)
; 1418 : 			{
; 1419 : 				CenX = 508;
; 1420 : 				CenY = 322;
; 1421 : 			}
; 1422 : 			else if(ID == PILOT_PIC)
; 1423 : 			{
; 1424 : 				CenX = PicArea.left + (PicArea.right - PicArea.left)/2;
; 1425 : 				CenY = PicArea.top + (PicArea.bottom - PicArea.top)/2;
; 1426 : 			}
; 1427 : 
; 1428 : 			
; 1429 : 			NewX = CenX - (Image->Header->w/2);
; 1430 : 			NewY = CenY - (Image->Header->h/2);
; 1431 : 
; 1432 : 			button->SetXY(NewX,NewY);*/
; 1433 : 
; 1434 : 			button->SetImage(C_STATE_0,ImageID);

	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1435 : 			button->SetImage(C_STATE_1,ImageID);

	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1436 : 			button->SetImage(C_STATE_SELECTED,ImageID);

	mov	edx, DWORD PTR _ImageID$[ebp]
	push	edx
	push	22					; 00000016H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1437 : 			button->SetImage(C_STATE_DISABLED,ImageID);

	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1438 : 			button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@SetImage:

; 1439 : 		}
; 1440 : 		if(OldImageID)

	cmp	DWORD PTR _OldImageID$1[ebp], 0
	je	SHORT $LN4@SetImage

; 1441 : 			gImageMgr->RemoveImage(OldImageID);

	mov	ecx, DWORD PTR _OldImageID$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?RemoveImage@C_Image@@QAEHJ@Z		; C_Image::RemoveImage
$LN4@SetImage:

; 1442 : 
; 1443 : 		if(ID == PILOT_PIC)

	cmp	DWORD PTR _ID$[ebp], 50060		; 0000c38cH
	jne	SHORT $LN3@SetImage

; 1444 : 			CurPic = ImageID;

	mov	edx, DWORD PTR _ImageID$[ebp]
	mov	DWORD PTR ?CurPic@@3HA, edx		; CurPic
	jmp	SHORT $LN2@SetImage
$LN3@SetImage:

; 1445 : 		else if(ID == PATCH_PIC)

	cmp	DWORD PTR _ID$[ebp], 50057		; 0000c389H
	jne	SHORT $LN2@SetImage

; 1446 : 			CurPatch = ImageID;

	mov	eax, DWORD PTR _ImageID$[ebp]
	mov	DWORD PTR ?CurPatch@@3HA, eax		; CurPatch
$LN2@SetImage:

; 1447 : 		
; 1448 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN25@SetImage:

; 1449 : 	}
; 1450 : 	return TRUE;

	mov	eax, 1
$LN26@SetImage:

; 1451 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN30@SetImage:
	DD	$LN22@SetImage
	DD	$LN21@SetImage
	DD	$LN20@SetImage
	DD	$LN19@SetImage
?SetImage@@YAHJPADJ@Z ENDP				; SetImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_kills$1 = -1124					; size = 4
tv1778 = -1120						; size = 4
_killed$2 = -1116					; size = 4
_CurrMedal$3 = -1112					; size = 4
_lbox$ = -1108						; size = 4
_dgft$4 = -1104						; size = 4
_imageID$ = -1100					; size = 4
_i$5 = -1096						; size = 4
_camp$ = -1092						; size = 4
_win$ = -1088						; size = 4
_ebox$ = -1084						; size = 4
_button$ = -1080					; size = 4
_text$ = -1076						; size = 4
_buf$6 = -1072						; size = 260
_buf$7 = -812						; size = 260
_buf$8 = -552						; size = 260
_buf$9 = -292						; size = 260
_Pwd$10 = -32						; size = 11
_buf$11 = -20						; size = 15
__$ArrayPad$ = -4					; size = 4
_Picture$ = 8						; size = 4
_Patch$ = 12						; size = 4
?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z PROC		; LBSetupControls

; 569  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1124				; 00000464H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 570  : 	C_EditBox *ebox;
; 571  : 	C_Window *win;
; 572  : 	C_Button *button;
; 573  : 	C_Text *text;
; 574  : 	C_ListBox *lbox;
; 575  : 	long imageID;
; 576  : 	//TJL 12/01/03 Add Pointer here
; 577  : 	CAMP_STATS *camp = UI_logbk.GetCampaign();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ; LogBookData::GetCampaign
	mov	DWORD PTR _camp$[ebp], eax

; 578  : 
; 579  : 	win=gMainHandler->FindWindow(LOG_WIN);

	push	50035					; 0000c373H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 580  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN101@LBSetupCon

; 581  : 	{
; 582  : 		button=(C_Button *)win->FindControl(LOG_OK);

	push	50043					; 0000c37bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 583  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN98@LBSetupCon

; 584  : 		{
; 585  : 			if(LogState & LB_OPPONENT)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 4
	je	SHORT $LN99@LBSetupCon

; 586  : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 587  : 			else

	jmp	SHORT $LN98@LBSetupCon
$LN99@LBSetupCon:

; 588  : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN98@LBSetupCon:

; 589  : 		}
; 590  : 
; 591  : 		button=(C_Button *)win->FindControl(LOG_NEW);

	push	50040					; 0000c378H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 592  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN95@LBSetupCon

; 593  : 		{
; 594  : 			if(LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	je	SHORT $LN96@LBSetupCon

; 595  : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 596  : 			else

	jmp	SHORT $LN95@LBSetupCon
$LN96@LBSetupCon:

; 597  : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN95@LBSetupCon:

; 598  : 		}
; 599  : 
; 600  : 		button=(C_Button *)win->FindControl(LOG_CLEAR);

	push	50041					; 0000c379H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 601  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN92@LBSetupCon

; 602  : 		{
; 603  : 			if(LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	je	SHORT $LN93@LBSetupCon

; 604  : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 605  : 			else

	jmp	SHORT $LN92@LBSetupCon
$LN93@LBSetupCon:

; 606  : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN92@LBSetupCon:

; 607  : 		}
; 608  : 
; 609  : 		button=(C_Button *)win->FindControl(LOG_CANCEL);

	push	50042					; 0000c37aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 610  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN89@LBSetupCon

; 611  : 		{
; 612  : 			if(LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	je	SHORT $LN90@LBSetupCon

; 613  : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 614  : 			else

	jmp	SHORT $LN89@LBSetupCon
$LN90@LBSetupCon:

; 615  : 				button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN89@LBSetupCon:

; 616  : 		}
; 617  : 
; 618  : 
; 619  : 		button = (C_Button *)win->FindControl(PATCH_PIC);

	push	50057					; 0000c389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 620  : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	$LN81@LBSetupCon

; 621  : 		{
; 622  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	je	SHORT $LN86@LBSetupCon
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 4
	je	SHORT $LN87@LBSetupCon
$LN86@LBSetupCon:

; 623  : 				button->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 624  : 			else

	jmp	SHORT $LN85@LBSetupCon
$LN87@LBSetupCon:

; 625  : 				button->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN85@LBSetupCon:

; 626  : 
; 627  : 			if(Patch)

	cmp	DWORD PTR _Patch$[ebp], 0
	je	SHORT $LN84@LBSetupCon

; 628  : 			{
; 629  : 				_TCHAR buf[MAX_PATH];
; 630  : 				_stprintf(buf,_T("%s\\patches\\%s.tga"),FalconDataDirectory,Patch);

	mov	ecx, DWORD PTR _Patch$[ebp]
	push	ecx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@
	lea	edx, DWORD PTR _buf$6[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 631  : 				SetImage(PATCH_PIC, buf, CurPatch);

	mov	eax, DWORD PTR ?CurPatch@@3HA		; CurPatch
	push	eax
	lea	ecx, DWORD PTR _buf$6[ebp]
	push	ecx
	push	50057					; 0000c389H
	call	?SetImage@@YAHJPADJ@Z			; SetImage
	add	esp, 12					; 0000000cH
	jmp	$LN81@LBSetupCon
$LN84@LBSetupCon:

; 632  : 			}
; 633  : 			else if(*(UI_logbk.GetPatch()) != 0)

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPatch@LogBookData@@QAEPADXZ		; LogBookData::GetPatch
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN82@LBSetupCon

; 634  : 			{
; 635  : 				_TCHAR buf[MAX_PATH];
; 636  : 				_stprintf(buf,_T("%s\\patches\\%s.tga"),FalconDataDirectory,UI_logbk.GetPatch());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPatch@LogBookData@@QAEPADXZ		; LogBookData::GetPatch
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BC@OGJNJCEO@?$CFs?2patches?2?$CFs?4tga?$AA@
	lea	eax, DWORD PTR _buf$9[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 637  : 				SetImage(PATCH_PIC, buf, CurPatch);

	mov	ecx, DWORD PTR ?CurPatch@@3HA		; CurPatch
	push	ecx
	lea	edx, DWORD PTR _buf$9[ebp]
	push	edx
	push	50057					; 0000c389H
	call	?SetImage@@YAHJPADJ@Z			; SetImage
	add	esp, 12					; 0000000cH

; 638  : 			}
; 639  : 			else

	jmp	$LN81@LBSetupCon
$LN82@LBSetupCon:

; 640  : 			{
; 641  : 				imageID = NOPATCH;

	mov	DWORD PTR _imageID$[ebp], 70050		; 000111a2H

; 642  : 				if(UI_logbk.GetPatchResource())

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPatchResource@LogBookData@@QAEJXZ	; LogBookData::GetPatchResource
	test	eax, eax
	je	SHORT $LN80@LBSetupCon

; 643  : 					imageID = UI_logbk.GetPatchResource();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPatchResource@LogBookData@@QAEJXZ	; LogBookData::GetPatchResource
	mov	DWORD PTR _imageID$[ebp], eax
$LN80@LBSetupCon:

; 644  : 
; 645  : 				button->SetImage(C_STATE_0,imageID);

	mov	eax, DWORD PTR _imageID$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 646  : 				button->SetImage(C_STATE_1,imageID);

	mov	ecx, DWORD PTR _imageID$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 647  : 				button->SetImage(C_STATE_SELECTED,imageID);

	mov	edx, DWORD PTR _imageID$[ebp]
	push	edx
	push	22					; 00000016H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 648  : 				button->SetImage(C_STATE_DISABLED,imageID);

	mov	eax, DWORD PTR _imageID$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 649  : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 650  : 				CurPatch = 0;

	mov	DWORD PTR ?CurPatch@@3HA, 0		; CurPatch
$LN81@LBSetupCon:

; 651  : 			}
; 652  : 		}
; 653  : 
; 654  : 		button = (C_Button *)win->FindControl(PILOT_PIC);

	push	50060					; 0000c38cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 655  : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	$LN72@LBSetupCon

; 656  : 		{
; 657  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	je	SHORT $LN77@LBSetupCon
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 4
	je	SHORT $LN78@LBSetupCon
$LN77@LBSetupCon:

; 658  : 				button->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 659  : 			else

	jmp	SHORT $LN76@LBSetupCon
$LN78@LBSetupCon:

; 660  : 				button->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN76@LBSetupCon:

; 661  : 
; 662  : 			if(Picture)

	cmp	DWORD PTR _Picture$[ebp], 0
	je	SHORT $LN75@LBSetupCon

; 663  : 			{
; 664  : 				button->SetImage(C_STATE_0,Picture);

	mov	ecx, DWORD PTR _Picture$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 665  : 				button->SetImage(C_STATE_1,Picture);

	mov	edx, DWORD PTR _Picture$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 666  : 				button->SetImage(C_STATE_SELECTED,Picture);

	mov	eax, DWORD PTR _Picture$[ebp]
	push	eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 667  : 				button->SetImage(C_STATE_DISABLED,Picture);

	mov	ecx, DWORD PTR _Picture$[ebp]
	push	ecx
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage

; 668  : 				button->Refresh();

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	jmp	$LN72@LBSetupCon
$LN75@LBSetupCon:

; 669  : 			}
; 670  : 			else if(*(UI_logbk.GetPicture()) != 0)

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPicture@LogBookData@@QAEPADXZ	; LogBookData::GetPicture
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN73@LBSetupCon

; 671  : 			{
; 672  : 				_TCHAR buf[MAX_PATH];
; 673  : 				_stprintf(buf,_T("%s\\pictures\\%s.tga"),FalconDataDirectory,UI_logbk.GetPicture());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPicture@LogBookData@@QAEPADXZ	; LogBookData::GetPicture
	push	eax
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BD@PNOMMOHL@?$CFs?2pictures?2?$CFs?4tga?$AA@
	lea	ecx, DWORD PTR _buf$8[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 674  : 				SetImage(PILOT_PIC, buf,CurPic);

	mov	edx, DWORD PTR ?CurPic@@3HA		; CurPic
	push	edx
	lea	eax, DWORD PTR _buf$8[ebp]
	push	eax
	push	50060					; 0000c38cH
	call	?SetImage@@YAHJPADJ@Z			; SetImage
	add	esp, 12					; 0000000cH

; 675  : 			}
; 676  : 			else

	jmp	$LN72@LBSetupCon
$LN73@LBSetupCon:

; 677  : 			{
; 678  : 				imageID = NOFACE;

	mov	DWORD PTR _imageID$[ebp], 60000		; 0000ea60H

; 679  : 				if(UI_logbk.GetPictureResource())

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	test	eax, eax
	je	SHORT $LN71@LBSetupCon

; 680  : 					imageID = UI_logbk.GetPictureResource();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPictureResource@LogBookData@@QAEJXZ	; LogBookData::GetPictureResource
	mov	DWORD PTR _imageID$[ebp], eax
$LN71@LBSetupCon:

; 681  : 
; 682  : 				button->SetImage(C_STATE_0,imageID);

	mov	ecx, DWORD PTR _imageID$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 683  : 				button->SetImage(C_STATE_1,imageID);

	mov	edx, DWORD PTR _imageID$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 684  : 				button->SetImage(C_STATE_SELECTED,imageID);

	mov	eax, DWORD PTR _imageID$[ebp]
	push	eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 685  : 				button->SetImage(C_STATE_DISABLED,imageID);

	mov	ecx, DWORD PTR _imageID$[ebp]
	push	ecx
	push	21					; 00000015H
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 686  : 				button->Refresh();

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 687  : 				CurPic = 0;

	mov	DWORD PTR ?CurPic@@3HA, 0		; CurPic
$LN72@LBSetupCon:

; 688  : 			}
; 689  : 		}
; 690  : 
; 691  : 
; 692  : 		ebox=(C_EditBox *)win->FindControl(PASSWORD_LIST);

	push	50007					; 0000c357H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 693  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN70@LBSetupCon

; 694  : 		{
; 695  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 2
	je	SHORT $LN68@LBSetupCon
	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	je	SHORT $LN69@LBSetupCon
$LN68@LBSetupCon:

; 696  : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 697  : 			else

	jmp	SHORT $LN67@LBSetupCon
$LN69@LBSetupCon:

; 698  : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN67@LBSetupCon:

; 699  : 			
; 700  : 			_TCHAR Pwd[PASSWORD_LEN+1];
; 701  : 
; 702  : 			if(UI_logbk.GetPassword(Pwd))

	lea	ecx, DWORD PTR _Pwd$10[ebp]
	push	ecx
	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetPassword@LogBookData@@QAEHPAD@Z	; LogBookData::GetPassword
	test	eax, eax
	je	SHORT $LN66@LBSetupCon

; 703  : 				ebox->SetText(Pwd);

	lea	edx, DWORD PTR _Pwd$10[ebp]
	push	edx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 704  : 			else

	jmp	SHORT $LN65@LBSetupCon
$LN66@LBSetupCon:

; 705  : 				ebox->SetText(_T(""));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN65@LBSetupCon:

; 706  : 			ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN70@LBSetupCon:

; 707  : 		}
; 708  : 
; 709  : 		
; 710  : 		
; 711  : 
; 712  : 		ebox=(C_EditBox *)win->FindControl(PILOT_LIST);

	push	50005					; 0000c355H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 713  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN64@LBSetupCon

; 714  : 		{
; 715  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	je	SHORT $LN62@LBSetupCon
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 4
	je	SHORT $LN63@LBSetupCon
$LN62@LBSetupCon:

; 716  : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 717  : 			else

	jmp	SHORT $LN61@LBSetupCon
$LN63@LBSetupCon:

; 718  : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN61@LBSetupCon:

; 719  : 
; 720  : 			ebox->SetText(UI_logbk.Name());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Name@LogBookData@@QAEPADXZ		; LogBookData::Name
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 721  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN64@LBSetupCon:

; 722  : 		}
; 723  : 
; 724  : 		ebox=(C_EditBox *)win->FindControl(CALLSIGN_LIST);

	push	50006					; 0000c356H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 725  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN60@LBSetupCon

; 726  : 		{
; 727  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	je	SHORT $LN58@LBSetupCon
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 4
	je	SHORT $LN59@LBSetupCon
$LN58@LBSetupCon:

; 728  : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 729  : 			else

	jmp	SHORT $LN57@LBSetupCon
$LN59@LBSetupCon:

; 730  : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN57@LBSetupCon:

; 731  : 
; 732  : 			ebox->SetText(UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 733  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN60@LBSetupCon:

; 734  : 		}
; 735  : 
; 736  : 		if(LogState & LB_REFRESH_PILOT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 16					; 00000010H
	je	$LN55@LBSetupCon

; 737  : 		{
; 738  : 			lbox=(C_ListBox *)win->FindControl(LOGBOOK_LIST);

	push	50068					; 0000c394H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 739  : 			if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN55@LBSetupCon

; 740  : 			{
; 741  : 				_TCHAR buf[MAX_PATH];
; 742  : 				_stprintf(buf,_T("%s\\config\\*.lbk"),FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BA@PJKODLHG@?$CFs?2config?2?$CK?4lbk?$AA@
	lea	edx, DWORD PTR _buf$7[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 743  : 				GetPilotList( win, buf, NULL, lbox, TRUE, TRUE );

	push	1
	push	1
	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _buf$7[ebp]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?GetPilotList@@YAXPAVC_Window@@PADQAPADPAVC_ListBox@@HH@Z ; GetPilotList
	add	esp, 24					; 00000018H

; 744  : 				if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN54@LBSetupCon

; 745  : 					SetPilot(ebox->GetText(),lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	?SetPilot@@YAHPADPAVC_ListBox@@@Z	; SetPilot
	add	esp, 8
$LN54@LBSetupCon:

; 746  : 				LogState &= ~LB_REFRESH_PILOT;

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, -17				; ffffffefH
	mov	DWORD PTR ?LogState@@3HA, ecx		; LogState
$LN55@LBSetupCon:

; 747  : 			}
; 748  : 		}
; 749  : 
; 750  : 		lbox=(C_ListBox *)win->FindControl(VOICE_CHOICE);

	push	50100					; 0000c3b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 751  : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN53@LBSetupCon

; 752  : 		{
; 753  : 			lbox->SetValue(UI_logbk.Voice() + 1);

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Voice@LogBookData@@QAEEXZ		; LogBookData::Voice
	movzx	edx, al
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN53@LBSetupCon:

; 754  : 		}
; 755  : 
; 756  : 		ebox=(C_EditBox *)win->FindControl(PERSONAL_TEXT);

	push	50055					; 0000c387H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 757  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN52@LBSetupCon

; 758  : 		{
; 759  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 2
	je	SHORT $LN50@LBSetupCon
	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 4
	je	SHORT $LN51@LBSetupCon
$LN50@LBSetupCon:

; 760  : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 761  : 			else

	jmp	SHORT $LN49@LBSetupCon
$LN51@LBSetupCon:

; 762  : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN49@LBSetupCon:

; 763  : 
; 764  : 			ebox->SetText(UI_logbk.Personal());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Personal@LogBookData@@QAEPADXZ		; LogBookData::Personal
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 765  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN52@LBSetupCon:

; 766  : 		}
; 767  : 
; 768  : 		ebox=(C_EditBox *)win->FindControl(SQUADRON_NAME);

	push	50056					; 0000c388H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 769  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN48@LBSetupCon

; 770  : 		{
; 771  : 			if(!(LogState & LB_EDITABLE)||LogState & LB_OPPONENT)

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 2
	je	SHORT $LN46@LBSetupCon
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 4
	je	SHORT $LN47@LBSetupCon
$LN46@LBSetupCon:

; 772  : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 773  : 			else

	jmp	SHORT $LN45@LBSetupCon
$LN47@LBSetupCon:

; 774  : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN45@LBSetupCon:

; 775  : 
; 776  : 			ebox->SetText(UI_logbk.Squadron());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Squadron@LogBookData@@QAEPADXZ		; LogBookData::Squadron
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 777  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN48@LBSetupCon:

; 778  : 		}
; 779  : 
; 780  : 		button = (C_Button *)win->FindControl(50095);//RANKS value was changed

	push	50095					; 0000c3afH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 781  : 		if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN44@LBSetupCon

; 782  : 		{
; 783  : 			button->SetState(static_cast<short>(UI_logbk.Rank()));

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ	; LogBookData::Rank
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 784  : 			button->SetHelpText(gFullRanksTxt[UI_logbk.Rank()]);

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ	; LogBookData::Rank
	mov	ecx, DWORD PTR ?gFullRanksTxt@@3PAJA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+84]
	call	edx

; 785  : 			button->Refresh();

	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN44@LBSetupCon:

; 786  : 		}
; 787  : 
; 788  : 		text = (C_Text *)win->FindControl(COMMISSIONED_FIELD);

	push	50045					; 0000c37dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 789  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN43@LBSetupCon

; 790  : 		{
; 791  : 			text->SetText(UI_logbk.Commissioned());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Commissioned@LogBookData@@QAEPADXZ	; LogBookData::Commissioned
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 792  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN43@LBSetupCon:

; 793  : 		}
; 794  : 
; 795  : 		_TCHAR buf[15];
; 796  : 
; 797  : 		text = (C_Text *)win->FindControl(HOURS_FIELD);

	push	50015					; 0000c35fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 798  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN42@LBSetupCon

; 799  : 		{
; 800  : 			_stprintf(buf,"%4.1f",UI_logbk.FlightHours());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?FlightHours@LogBookData@@QAEMXZ	; LogBookData::FlightHours
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_05BLBOEPBE@?$CF4?41f?$AA@
	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 801  : 			Uni_Float(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 802  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 803  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN42@LBSetupCon:

; 804  : 		}
; 805  : 
; 806  : 		text = (C_Text *)win->FindControl(ACE_FIELD);

	push	50019					; 0000c363H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 807  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN41@LBSetupCon

; 808  : 		{
; 809  : 			_stprintf(buf,"%1.3f",UI_logbk.AceFactor());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?AceFactor@LogBookData@@QAEMXZ		; LogBookData::AceFactor
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_05NAHKBEAK@?$CF1?43f?$AA@
	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 810  : 			Uni_Float(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 811  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 812  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN41@LBSetupCon:

; 813  : 		}
; 814  : 
; 815  : 		//TJL 12/01/03 Test adding a new field to logbook
; 816  : 		//Add Total Score
; 817  : 		text = (C_Text *)win->FindControl(TOTAL_SCORE);

	push	50101					; 0000c3b5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 818  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN40@LBSetupCon

; 819  : 		{
; 820  : 			_stprintf(buf,_T("%6d"),camp->TotalScore);

	mov	ecx, DWORD PTR _camp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET ??_C@_03GICAEIGO@?$CF6d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 821  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 822  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN40@LBSetupCon:

; 823  : 		}
; 824  : 
; 825  : 		//Add Mission Score
; 826  : 		text = (C_Text *)win->FindControl(MISSION_SCORE);

	push	50102					; 0000c3b6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 827  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN39@LBSetupCon

; 828  : 		{
; 829  : 			_stprintf(buf,_T("%6d"),camp->TotalMissionScore);

	mov	ecx, DWORD PTR _camp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	OFFSET ??_C@_03GICAEIGO@?$CF6d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 830  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 831  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN39@LBSetupCon:

; 832  : 		}
; 833  : 
; 834  : 		//Add Consecutive Missions
; 835  : 		text = (C_Text *)win->FindControl(CONSEC_MISSIONS);

	push	50103					; 0000c3b7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 836  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN38@LBSetupCon

; 837  : 		{
; 838  : 			_stprintf(buf,_T("%6d"),camp->ConsecMissions);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	push	edx
	push	OFFSET ??_C@_03GICAEIGO@?$CF6d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 839  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 840  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN38@LBSetupCon:

; 841  : 		}
; 842  : 
; 843  : 		//Add Friendlies Killed
; 844  : 		text = (C_Text *)win->FindControl(FRIENDLIES_KILLED);

	push	50104					; 0000c3b8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 845  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN37@LBSetupCon

; 846  : 		{
; 847  : 			_stprintf(buf,_T("%6d"),camp->FriendliesKilled);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+34]
	push	edx
	push	OFFSET ??_C@_03GICAEIGO@?$CF6d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 848  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 849  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN37@LBSetupCon:

; 850  : 		}
; 851  : 
; 852  : 		//AVG A/A kills  Kills/Camp Missions
; 853  : 		text = (C_Text *)win->FindControl(AVGAA_KILLS);

	push	50105					; 0000c3b9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 854  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN36@LBSetupCon

; 855  : 		{
; 856  : 			if(camp->Missions)

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN35@LBSetupCon

; 857  : 				_stprintf(buf,_T("%2.3f"),(double)camp->Kills/camp->Missions);

	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	cvtsi2sd xmm0, ecx
	mov	edx, DWORD PTR _camp$[ebp]
	movsx	eax, WORD PTR [edx+6]
	cvtsi2sd xmm1, eax
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JHNKGONK@?$CF2?43f?$AA@
	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 858  : 			else

	jmp	SHORT $LN34@LBSetupCon
$LN35@LBSetupCon:

; 859  : 				_stprintf(buf,"0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN34@LBSetupCon:

; 860  : 			Uni_Float(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 861  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 862  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN36@LBSetupCon:

; 863  : 		}
; 864  : 
; 865  : 		//AVG A/G kills  Kills/Camp Missions
; 866  : 		text = (C_Text *)win->FindControl(AVGAG_KILLS);

	push	50106					; 0000c3baH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 867  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN33@LBSetupCon

; 868  : 		{
; 869  : 			if(camp->Missions)

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN32@LBSetupCon

; 870  : 				_stprintf(buf,_T("%2.3f"),((double)camp->AirToGround + camp->Static + camp->Naval)/camp->Missions);

	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+28]
	cvtsi2sd xmm0, ecx
	mov	edx, DWORD PTR _camp$[ebp]
	movsx	eax, WORD PTR [edx+30]
	cvtsi2sd xmm1, eax
	addsd	xmm0, xmm1
	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+32]
	cvtsi2sd xmm1, edx
	addsd	xmm0, xmm1
	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	cvtsi2sd xmm1, ecx
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JHNKGONK@?$CF2?43f?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 871  : 			else

	jmp	SHORT $LN31@LBSetupCon
$LN32@LBSetupCon:

; 872  : 				_stprintf(buf,"0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 8
$LN31@LBSetupCon:

; 873  : 			Uni_Float(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 874  : 			text->SetText(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 875  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN33@LBSetupCon:

; 876  : 		}
; 877  : 
; 878  : 		//AVG Mis Duration
; 879  : 		text = (C_Text *)win->FindControl(AVGMIS_DURATION);

	push	50107					; 0000c3bbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 880  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN30@LBSetupCon

; 881  : 		{
; 882  : 			if(camp->Missions)

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN29@LBSetupCon

; 883  : 				_stprintf(buf,_T("%2.3f"),((double)UI_logbk.FlightHours()/camp->Missions));

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?FlightHours@LogBookData@@QAEMXZ	; LogBookData::FlightHours
	fstp	DWORD PTR tv1778[ebp]
	movss	xmm0, DWORD PTR tv1778[ebp]
	cvtss2sd xmm0, xmm0
	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	cvtsi2sd xmm1, ecx
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JHNKGONK@?$CF2?43f?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 884  : 			else

	jmp	SHORT $LN28@LBSetupCon
$LN29@LBSetupCon:

; 885  : 				_stprintf(buf,"0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 8
$LN28@LBSetupCon:

; 886  : 			Uni_Float(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 887  : 			text->SetText(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 888  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN30@LBSetupCon:

; 889  : 		}
; 890  : 
; 891  : 
; 892  : 
; 893  : 		//End
; 894  : 
; 895  : 		text = (C_Text *)win->FindControl(FRAGRATIO_FIELD);

	push	50048					; 0000c380H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 896  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN27@LBSetupCon

; 897  : 		{
; 898  : 			int kills = UI_logbk.TotalKills();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?TotalKills@LogBookData@@QAEFXZ		; LogBookData::TotalKills
	movsx	ecx, ax
	mov	DWORD PTR _kills$1[ebp], ecx

; 899  : 			int killed = UI_logbk.TotalKilled();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?TotalKilled@LogBookData@@QAEFXZ	; LogBookData::TotalKilled
	movsx	edx, ax
	mov	DWORD PTR _killed$2[ebp], edx

; 900  : 			_stprintf(buf,"%2d/%2d",kills,killed);

	mov	eax, DWORD PTR _killed$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _kills$1[ebp]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 901  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 902  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN27@LBSetupCon:

; 903  : 		} 
; 904  : 
; 905  : 		DF_STATS *dgft = UI_logbk.GetDogfight();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?GetDogfight@LogBookData@@QAEPAUDogfightStats@@XZ ; LogBookData::GetDogfight
	mov	DWORD PTR _dgft$4[ebp], eax

; 906  : 
; 907  : 		text = (C_Text *)win->FindControl(DF_MATCH_FIELD);

	push	50021					; 0000c365H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 908  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN26@LBSetupCon

; 909  : 		{
; 910  : 			_stprintf(buf,_T("%3d"),dgft->MatchesWon + dgft->MatchesLost);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	edx, ecx
	push	edx
	push	OFFSET ??_C@_03GOOLIKIF@?$CF3d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 911  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 912  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN26@LBSetupCon:

; 913  : 		}
; 914  : 
; 915  : 		text = (C_Text *)win->FindControl(DF_WON_LOST_FIELD);

	push	50061					; 0000c38dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 916  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN25@LBSetupCon

; 917  : 		{
; 918  : 			_stprintf(buf,_T("%2d/%2d"),dgft->MatchesWon,dgft->MatchesLost);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 919  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 920  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN25@LBSetupCon:

; 921  : 		}
; 922  : 		//DF_MATCH_VSHUMANS_FIELD
; 923  : 		text = (C_Text *)win->FindControl(DF_MATCH_VSHUMANS_FIELD);

	push	50046					; 0000c37eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 924  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN24@LBSetupCon

; 925  : 		{
; 926  : 			_stprintf(buf,_T("%2d/%2d"),dgft->MatchesWonVHum,dgft->MatchesLostVHum);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+6]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+4]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 927  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 928  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN24@LBSetupCon:

; 929  : 		}
; 930  : 		//DF_KILL_FIELD
; 931  : 		text = (C_Text *)win->FindControl(DF_KILL_FIELD);

	push	50023					; 0000c367H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 932  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN23@LBSetupCon

; 933  : 		{
; 934  : 			_stprintf(buf,_T("%2d/%2d"),dgft->Kills,dgft->Killed);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+8]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 935  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 936  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN23@LBSetupCon:

; 937  : 		}
; 938  : 		//DF_H2H_FIELD
; 939  : 		//DF_VS_FIELD
; 940  : 		text = (C_Text *)win->FindControl(DF_VS_FIELD);

	push	50025					; 0000c369H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 941  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN22@LBSetupCon

; 942  : 		{
; 943  : 			_stprintf(buf,_T("%2d/%2d"),dgft->HumanKills,dgft->KilledByHuman);

	mov	ecx, DWORD PTR _dgft$4[ebp]
	movsx	edx, WORD PTR [ecx+14]
	push	edx
	mov	eax, DWORD PTR _dgft$4[ebp]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 944  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 945  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN22@LBSetupCon:

; 946  : 		}
; 947  : 
; 948  : 		//TJL 12/01/03 Bump this higher.
; 949  : 		//CAMP_STATS *camp = UI_logbk.GetCampaign();
; 950  : 
; 951  : 		//CAMP_CAMPAIGNS_FIELD
; 952  : 		text = (C_Text *)win->FindControl(CAMP_CAMPAIGNS_FIELD);

	push	50062					; 0000c38eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 953  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN21@LBSetupCon

; 954  : 		{
; 955  : 			_stprintf(buf,_T("%d/%d/%d"),camp->GamesWon,camp->GamesLost,camp->GamesTied);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	push	ecx
	mov	edx, DWORD PTR _camp$[ebp]
	movsx	eax, WORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_08EAFBBLEB@?$CFd?1?$CFd?1?$CFd?$AA@
	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H

; 956  : 			text->SetText(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 957  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN21@LBSetupCon:

; 958  : 		}
; 959  : 
; 960  : 		//CAMP_MISS_FIELD
; 961  : 		text = (C_Text *)win->FindControl(CAMP_MISS_FIELD);

	push	50027					; 0000c36bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 962  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN20@LBSetupCon

; 963  : 		{
; 964  : 			_stprintf(buf,_T("%4d"),camp->Missions);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 965  : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 966  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@LBSetupCon:

; 967  : 		}
; 968  : 		//CAMP_RATING_FIELD
; 969  : 		text = (C_Text *)win->FindControl(CAMP_RATING_FIELD);

	push	50028					; 0000c36cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 970  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN19@LBSetupCon

; 971  : 		{
; 972  : 			if(camp->Missions)

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN18@LBSetupCon

; 973  : 				_stprintf(buf,_T("%2.3f"),(double)camp->TotalMissionScore/camp->Missions);

	mov	eax, DWORD PTR _camp$[ebp]
	cvtsi2sd xmm0, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	cvtsi2sd xmm1, edx
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JHNKGONK@?$CF2?43f?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 974  : 			else

	jmp	SHORT $LN17@LBSetupCon
$LN18@LBSetupCon:

; 975  : 				_stprintf(buf,"0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8
$LN17@LBSetupCon:

; 976  : 			Uni_Float(buf);

	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 977  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 978  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN19@LBSetupCon:

; 979  : 		}
; 980  : 		//CAMP_KILL_FIELD
; 981  : 		text = (C_Text *)win->FindControl(CAMP_KILL_FIELD);

	push	50030					; 0000c36eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 982  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN16@LBSetupCon

; 983  : 		{
; 984  : 			_stprintf(buf,_T("%2d/%2d"),camp->Kills,camp->Killed);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 985  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 986  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@LBSetupCon:

; 987  : 		}
; 988  : 		//CAMP_VS_FIELD
; 989  : 		text = (C_Text *)win->FindControl(CAMP_VS_FIELD);

	push	50044					; 0000c37cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 990  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN15@LBSetupCon

; 991  : 		{
; 992  : 			_stprintf(buf,_T("%2d/%2d"),camp->HumanKills,camp->KilledByHuman);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _camp$[ebp]
	movsx	ecx, WORD PTR [eax+22]
	push	ecx
	push	OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d?$AA@
	lea	edx, DWORD PTR _buf$11[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 993  : 			text->SetText(buf);

	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 994  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN15@LBSetupCon:

; 995  : 		}
; 996  : 
; 997  : 		text = (C_Text *)win->FindControl(CAMP_AA_KILLS_FIELD);

	push	50063					; 0000c38fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 998  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN14@LBSetupCon

; 999  : 		{
; 1000 : 			_stprintf(buf,_T("%4d"),camp->Kills);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1001 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1002 : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@LBSetupCon:

; 1003 : 		}
; 1004 : 
; 1005 : 		text = (C_Text *)win->FindControl(CAMP_AG_KILLS_FIELD);

	push	50064					; 0000c390H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1006 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN13@LBSetupCon

; 1007 : 		{
; 1008 : 			_stprintf(buf,_T("%4d"),camp->AirToGround);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+28]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1009 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1010 : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN13@LBSetupCon:

; 1011 : 		}
; 1012 : 
; 1013 : 		text = (C_Text *)win->FindControl(CAMP_STATIC_KILLS_FIELD);

	push	50065					; 0000c391H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1014 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN12@LBSetupCon

; 1015 : 		{
; 1016 : 			_stprintf(buf,_T("%4d"),camp->Static);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+30]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1017 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1018 : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@LBSetupCon:

; 1019 : 		}
; 1020 : 
; 1021 : 		text = (C_Text *)win->FindControl(CAMP_NAVAL_KILLS_FIELD);

	push	50066					; 0000c392H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1022 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN11@LBSetupCon

; 1023 : 		{
; 1024 : 			_stprintf(buf,_T("%4d"),camp->Naval);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+32]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1025 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1026 : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@LBSetupCon:

; 1027 : 		}
; 1028 : 
; 1029 : 		text = (C_Text *)win->FindControl(CAMP_DEATHS_FIELD);

	push	50067					; 0000c393H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1030 : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN10@LBSetupCon

; 1031 : 		{
; 1032 : 			_stprintf(buf,_T("%4d"),camp->Killed);

	mov	ecx, DWORD PTR _camp$[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	push	OFFSET ??_C@_03GLKEJMAA@?$CF4d?$AA@
	lea	eax, DWORD PTR _buf$11[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1033 : 			text->SetText(buf);

	lea	ecx, DWORD PTR _buf$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1034 : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@LBSetupCon:

; 1035 : 		}
; 1036 : 		//MEDALS_AFC
; 1037 : 		//MEDALS_AM
; 1038 : 		//MEDALS_DFC
; 1039 : 		//MEDALS_SS
; 1040 : 		//MEDALS_KC
; 1041 : 		int i;
; 1042 : 		//need to also do stars and oakleafs for multiple medals
; 1043 : 		int CurrMedal = MEDALS_AFC;

	mov	DWORD PTR _CurrMedal$3[ebp], 50049	; 0000c381H

; 1044 : 		for(i = 0; i < NUM_MEDALS ;i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN9@LBSetupCon
$LN8@LBSetupCon:
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN9@LBSetupCon:
	cmp	DWORD PTR _i$5[ebp], 6
	jge	$LN7@LBSetupCon

; 1045 : 		{
; 1046 : 			if(UI_logbk.Pilot.Medals[i])

	mov	edx, DWORD PTR _i$5[ebp]
	movzx	eax, BYTE PTR ?UI_logbk@@3VLogBookData@@A[edx+140]
	test	eax, eax
	je	$LN5@LBSetupCon

; 1047 : 			{
; 1048 : 				button = (C_Button *)win->FindControl(CurrMedal);

	mov	ecx, DWORD PTR _CurrMedal$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1049 : 				if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	$LN5@LBSetupCon

; 1050 : 				{
; 1051 : 					AwardDevices(win, CurrMedal, static_cast<uchar>(i), UI_logbk.Pilot.Medals[i]);

	mov	edx, DWORD PTR _i$5[ebp]
	movzx	eax, BYTE PTR ?UI_logbk@@3VLogBookData@@A[edx+140]
	push	eax
	movzx	ecx, BYTE PTR _i$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _CurrMedal$3[ebp]
	push	edx
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?AwardDevices@@YAXPAVC_Window@@JEE@Z	; AwardDevices
	add	esp, 16					; 00000010H

; 1052 : 					button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1053 : 					button->SetState(static_cast<short>(i));

	movzx	ecx, WORD PTR _i$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 1054 : 					button->SetHelpText(gStringMgr->AddText(button->GetLabel(static_cast<short>(i))));

	movzx	eax, WORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	call	?GetLabel@C_Button@@QAEPADF@Z		; C_Button::GetLabel
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax

; 1055 : 					button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1056 : 					CurrMedal++;

	mov	ecx, DWORD PTR _CurrMedal$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _CurrMedal$3[ebp], ecx
$LN5@LBSetupCon:

; 1057 : 				}
; 1058 : 			}
; 1059 : 			
; 1060 : 		}

	jmp	$LN8@LBSetupCon
$LN7@LBSetupCon:

; 1061 : 
; 1062 : 		for(i = CurrMedal;i<NUM_MEDALS + MEDALS_AFC ;i++)

	mov	edx, DWORD PTR _CurrMedal$3[ebp]
	mov	DWORD PTR _i$5[ebp], edx
	jmp	SHORT $LN4@LBSetupCon
$LN3@LBSetupCon:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@LBSetupCon:
	cmp	DWORD PTR _i$5[ebp], 50055		; 0000c387H
	jge	SHORT $LN2@LBSetupCon

; 1063 : 		{
; 1064 : 			button = (C_Button *)win->FindControl(i);

	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1065 : 			if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@LBSetupCon

; 1066 : 			{
; 1067 : 				AwardDevices(win, i, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _i$5[ebp]
	push	edx
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?AwardDevices@@YAXPAVC_Window@@JEE@Z	; AwardDevices
	add	esp, 16					; 00000010H

; 1068 : 				button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1069 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@LBSetupCon:

; 1070 : 			}
; 1071 : 		}

	jmp	$LN3@LBSetupCon
$LN2@LBSetupCon:

; 1072 : 	win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN101@LBSetupCon:

; 1073 : 	}
; 1074 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LBSetupControls@@YAXPAVIMAGE_RSC@@0@Z ENDP		; LBSetupControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z PROC		; CloseLogWindowCB

; 1958 : {

	push	ebp
	mov	ebp, esp

; 1959 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CloseLogWi

; 1960 : 		return;

	jmp	SHORT $LN2@CloseLogWi
$LN1@CloseLogWi:

; 1961 : 
; 1962 : 	PlayerOptions.LoadOptions(LogBook.OptionsFile());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?OptionsFile@LogBookData@@QAEPADXZ	; LogBookData::OptionsFile
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::LoadOptions

; 1963 : 	LogState &= (LB_CHECKED|LB_LOADED_ONCE);

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	and	ecx, 40					; 00000028H
	mov	DWORD PTR ?LogState@@3HA, ecx		; LogState

; 1964 : 	CloseWindowCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@CloseLogWi:

; 1965 : }

	pop	ebp
	ret	0
?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseLogWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\logbook\ui_lgbk.cpp
_TEXT	SEGMENT
_lbox$ = -12						; size = 4
_winme$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?HookupLBControls@@YAXJ@Z PROC				; HookupLBControls

; 1968 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1969 : 	C_Window *winme;
; 1970 : 	C_Button *ctrl;
; 1971 : 	C_ListBox *lbox;
; 1972 : 
; 1973 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 1974 : 
; 1975 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN10@HookupLBCo

; 1976 : 		return;

	jmp	$LN11@HookupLBCo
$LN10@HookupLBCo:

; 1977 : 
; 1978 : 	// Hook up IDs here
; 1979 : 
; 1980 : 	
; 1981 : 	// Hook up Close Button
; 1982 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1983 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupLBCo

; 1984 : 		ctrl->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupLBCo:

; 1985 : 
; 1986 : 	ctrl=(C_Button *)winme->FindControl(LOG_NEW);

	push	50040					; 0000c378H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1987 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupLBCo

; 1988 : 		ctrl->SetCallback(NewLogbookCB);

	push	OFFSET ?NewLogbookCB@@YAXJFPAVC_Base@@@Z ; NewLogbookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupLBCo:

; 1989 : 
; 1990 : 	ctrl=(C_Button *)winme->FindControl(LOG_CLEAR);

	push	50041					; 0000c379H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1991 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@HookupLBCo

; 1992 : 		ctrl->SetCallback(ClearLogBookCB);

	push	OFFSET ?ClearLogBookCB@@YAXJFPAVC_Base@@@Z ; ClearLogBookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupLBCo:

; 1993 : 
; 1994 : 	ctrl=(C_Button *)winme->FindControl(LOG_CANCEL);

	push	50042					; 0000c37aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1995 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@HookupLBCo

; 1996 : 		ctrl->SetCallback(CloseLogWindowCB);

	push	OFFSET ?CloseLogWindowCB@@YAXJFPAVC_Base@@@Z ; CloseLogWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupLBCo:

; 1997 : 
; 1998 : 	ctrl=(C_Button *)winme->FindControl(LOG_OK);

	push	50043					; 0000c37bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1999 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@HookupLBCo

; 2000 : 		ctrl->SetCallback(SaveLogBookCB);

	push	OFFSET ?SaveLogBookCB@@YAXJFPAVC_Base@@@Z ; SaveLogBookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupLBCo:

; 2001 : /*
; 2002 : 	ctrl=(C_Button *)winme->FindControl(LOG_LOAD);
; 2003 : 	if(ctrl != NULL)
; 2004 : 		ctrl->SetCallback(LoadLogBookCB);*/
; 2005 : 
; 2006 : 	ctrl=(C_Button *)winme->FindControl(PATCH_PIC);

	push	50057					; 0000c389H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2007 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@HookupLBCo

; 2008 : 		ctrl->SetCallback(ChangeImageCB);

	push	OFFSET ?ChangeImageCB@@YAXJFPAVC_Base@@@Z ; ChangeImageCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupLBCo:

; 2009 : 
; 2010 : 	ctrl=(C_Button *)winme->FindControl(PILOT_PIC);

	push	50060					; 0000c38cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2011 : 	if(ctrl != NULL)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupLBCo

; 2012 : 		ctrl->SetCallback(ChangeImageCB);

	push	OFFSET ?ChangeImageCB@@YAXJFPAVC_Base@@@Z ; ChangeImageCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupLBCo:

; 2013 : 
; 2014 : 	lbox=(C_ListBox *)winme->FindControl(LOGBOOK_LIST);

	push	50068					; 0000c394H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2015 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN2@HookupLBCo

; 2016 : 		lbox->SetCallback(LoadPilotCB);

	push	OFFSET ?LoadPilotCB@@YAXJFPAVC_Base@@@Z	; LoadPilotCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@HookupLBCo:

; 2017 : 
; 2018 : // Help GUIDE thing
; 2019 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2020 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN11@HookupLBCo

; 2021 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupLBCo:

; 2022 : 
; 2023 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HookupLBControls@@YAXJ@Z ENDP				; HookupLBControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Voice@LogBookData@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Voice@LogBookData@@QAEEXZ PROC				; LogBookData::Voice, COMDAT
; _this$ = ecx

; 198  : 	uchar Voice(void)								{return (uchar)Pilot.voice;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+366]
	mov	esp, ebp
	pop	ebp
	ret	0
?Voice@LogBookData@@QAEEXZ ENDP				; LogBookData::Voice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetVoice@LogBookData@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newvoice$ = 8						; size = 2
?SetVoice@LogBookData@@QAEXF@Z PROC			; LogBookData::SetVoice, COMDAT
; _this$ = ecx

; 197  : 	void SetVoice(short newvoice)						{Pilot.voice = newvoice;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _newvoice$[ebp]
	mov	WORD PTR [eax+366], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetVoice@LogBookData@@QAEXF@Z ENDP			; LogBookData::SetVoice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?FlightHours@LogBookData@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FlightHours@LogBookData@@QAEMXZ PROC			; LogBookData::FlightHours, COMDAT
; _this$ = ecx

; 193  : 	float	FlightHours(void)						{return Pilot.FlightHours;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?FlightHours@LogBookData@@QAEMXZ ENDP			; LogBookData::FlightHours
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetCommissioned@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Date$ = 8						; size = 4
?SetCommissioned@LogBookData@@QAEXPAD@Z PROC		; LogBookData::SetCommissioned, COMDAT
; _this$ = ecx

; 192  : 	void	SetCommissioned(_TCHAR *Date)			{if(_tcslen(Date) <= COMM_LEN) _tcscpy(Pilot.Commissioned,Date);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _Date$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 12					; 0000000cH
	ja	SHORT $LN2@SetCommiss
	mov	ecx, DWORD PTR _Date$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 45					; 0000002dH
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetCommiss:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCommissioned@LogBookData@@QAEXPAD@Z ENDP		; LogBookData::SetCommissioned
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Commissioned@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Commissioned@LogBookData@@QAEPADXZ PROC		; LogBookData::Commissioned, COMDAT
; _this$ = ecx

; 191  : 	_TCHAR *Commissioned(void)						{return Pilot.Commissioned;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 45					; 0000002dH
	mov	esp, ebp
	pop	ebp
	ret	0
?Commissioned@LogBookData@@QAEPADXZ ENDP		; LogBookData::Commissioned
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ PROC		; LogBookData::Rank, COMDAT
; _this$ = ecx

; 190  : 	LB_RANK Rank(void)								{return Pilot.Rank;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
	mov	esp, ebp
	pop	ebp
	ret	0
?Rank@LogBookData@@QAE?AW4LB_RANK@@XZ ENDP		; LogBookData::Rank
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?AceFactor@LogBookData@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AceFactor@LogBookData@@QAEMXZ PROC			; LogBookData::AceFactor, COMDAT
; _this$ = ecx

; 187  : 	float	AceFactor(void)							{return Pilot.AceFactor;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?AceFactor@LogBookData@@QAEMXZ ENDP			; LogBookData::AceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetOptionsFile@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_OptionsFile$ = 8					; size = 4
?SetOptionsFile@LogBookData@@QAEXPAD@Z PROC		; LogBookData::SetOptionsFile, COMDAT
; _this$ = ecx

; 185  : 	void	SetOptionsFile(_TCHAR *OptionsFile)		{if(_tcslen(OptionsFile) <= _CALLSIGN_LEN_) _tcscpy(Pilot.OptionsFile,OptionsFile);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _OptionsFile$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 12					; 0000000cH
	ja	SHORT $LN2@SetOptions
	mov	ecx, DWORD PTR _OptionsFile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 58					; 0000003aH
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetOptions:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOptionsFile@LogBookData@@QAEXPAD@Z ENDP		; LogBookData::SetOptionsFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?OptionsFile@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OptionsFile@LogBookData@@QAEPADXZ PROC			; LogBookData::OptionsFile, COMDAT
; _this$ = ecx

; 184  : 	_TCHAR *OptionsFile(void)						{return Pilot.OptionsFile;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 58					; 0000003aH
	mov	esp, ebp
	pop	ebp
	ret	0
?OptionsFile@LogBookData@@QAEPADXZ ENDP			; LogBookData::OptionsFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetPersonal@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Personal$ = 8						; size = 4
?SetPersonal@LogBookData@@QAEXPAD@Z PROC		; LogBookData::SetPersonal, COMDAT
; _this$ = ecx

; 182  : 	void	SetPersonal(_TCHAR *Personal)			{if(_tcslen(Personal) <= PERSONAL_TEXT_LEN) _tcscpy(Pilot.Personal,Personal);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _Personal$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 120				; 00000078H
	ja	SHORT $LN2@SetPersona
	mov	ecx, DWORD PTR _Personal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 225				; 000000e1H
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetPersona:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPersonal@LogBookData@@QAEXPAD@Z ENDP		; LogBookData::SetPersonal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Personal@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Personal@LogBookData@@QAEPADXZ PROC			; LogBookData::Personal, COMDAT
; _this$ = ecx

; 181  : 	_TCHAR *Personal(void)							{return Pilot.Personal;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 225				; 000000e1H
	mov	esp, ebp
	pop	ebp
	ret	0
?Personal@LogBookData@@QAEPADXZ ENDP			; LogBookData::Personal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetSquadron@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Squadron$ = 8						; size = 4
?SetSquadron@LogBookData@@QAEXPAD@Z PROC		; LogBookData::SetSquadron, COMDAT
; _this$ = ecx

; 175  : 	void	SetSquadron(_TCHAR *Squadron)			{if(_tcslen(Squadron) <= _NAME_LEN_) _tcscpy(Pilot.Squadron,Squadron);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _Squadron$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 20					; 00000014H
	ja	SHORT $LN2@SetSquadro
	mov	ecx, DWORD PTR _Squadron$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 346				; 0000015aH
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetSquadro:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSquadron@LogBookData@@QAEXPAD@Z ENDP		; LogBookData::SetSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Squadron@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Squadron@LogBookData@@QAEPADXZ PROC			; LogBookData::Squadron, COMDAT
; _this$ = ecx

; 174  : 	_TCHAR *Squadron(void)							{return Pilot.Squadron;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 346				; 0000015aH
	mov	esp, ebp
	pop	ebp
	ret	0
?Squadron@LogBookData@@QAEPADXZ ENDP			; LogBookData::Squadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetCallsign@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Callsign$ = 8						; size = 4
?SetCallsign@LogBookData@@QAEXPAD@Z PROC		; LogBookData::SetCallsign, COMDAT
; _this$ = ecx

; 172  : 	void	SetCallsign(_TCHAR *Callsign)			{if(_tcslen(Callsign) <= _CALLSIGN_LEN_) _tcscpy(Pilot.Callsign,Callsign);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _Callsign$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 12					; 0000000cH
	ja	SHORT $LN2@SetCallsig
	mov	ecx, DWORD PTR _Callsign$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 21					; 00000015H
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetCallsig:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallsign@LogBookData@@QAEXPAD@Z ENDP		; LogBookData::SetCallsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetName@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Name$ = 8						; size = 4
?SetName@LogBookData@@QAEXPAD@Z PROC			; LogBookData::SetName, COMDAT
; _this$ = ecx

; 169  : 	void	SetName(_TCHAR *Name)					{if(_tcslen(Name) <= _NAME_LEN_) _tcscpy(Pilot.Name,Name);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _Name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 20					; 00000014H
	ja	SHORT $LN2@SetName
	mov	ecx, DWORD PTR _Name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@SetName:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetName@LogBookData@@QAEXPAD@Z ENDP			; LogBookData::SetName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Name@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Name@LogBookData@@QAEPADXZ PROC			; LogBookData::Name, COMDAT
; _this$ = ecx

; 167  : 	_TCHAR *Name(void)								{return Pilot.Name;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?Name@LogBookData@@QAEPADXZ ENDP			; LogBookData::Name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetPatch@LogBookData@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_imageID$ = 8						; size = 4
?SetPatch@LogBookData@@QAEXJ@Z PROC			; LogBookData::SetPatch, COMDAT
; _this$ = ecx

; 165  : 	void	SetPatch(long imageID)					{Pilot.PatchResource = imageID; _tcscpy(Pilot.Patch,"");}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _imageID$[ebp]
	mov	DWORD PTR [eax+188], ecx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 192				; 000000c0H
	push	edx
	call	_strcpy
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPatch@LogBookData@@QAEXJ@Z ENDP			; LogBookData::SetPatch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetPatch@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?SetPatch@LogBookData@@QAEXPAD@Z PROC			; LogBookData::SetPatch, COMDAT
; _this$ = ecx

; 164  : 	void	SetPatch(_TCHAR *filename)				{if(_tcslen(filename) <= FILENAME_LEN) _tcscpy(Pilot.Patch,filename); Pilot.PatchResource = 0;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 32					; 00000020H
	ja	SHORT $LN1@SetPatch
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 192				; 000000c0H
	push	edx
	call	_strcpy
	add	esp, 8
$LN1@SetPatch:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], 0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPatch@LogBookData@@QAEXPAD@Z ENDP			; LogBookData::SetPatch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetPatchResource@LogBookData@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPatchResource@LogBookData@@QAEJXZ PROC		; LogBookData::GetPatchResource, COMDAT
; _this$ = ecx

; 163  : 	long	GetPatchResource(void)					{return Pilot.PatchResource;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+188]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPatchResource@LogBookData@@QAEJXZ ENDP		; LogBookData::GetPatchResource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetPatch@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPatch@LogBookData@@QAEPADXZ PROC			; LogBookData::GetPatch, COMDAT
; _this$ = ecx

; 162  : 	_TCHAR	*GetPatch(void)							{return Pilot.Patch;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 192				; 000000c0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPatch@LogBookData@@QAEPADXZ ENDP			; LogBookData::GetPatch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetPicture@LogBookData@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_imageID$ = 8						; size = 4
?SetPicture@LogBookData@@QAEXJ@Z PROC			; LogBookData::SetPicture, COMDAT
; _this$ = ecx

; 160  : 	void	SetPicture(long imageID)				{Pilot.PictureResource = imageID; _tcscpy(Pilot.Picture,"");}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _imageID$[ebp]
	mov	DWORD PTR [eax+148], ecx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 152				; 00000098H
	push	edx
	call	_strcpy
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPicture@LogBookData@@QAEXJ@Z ENDP			; LogBookData::SetPicture
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetPicture@LogBookData@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?SetPicture@LogBookData@@QAEXPAD@Z PROC			; LogBookData::SetPicture, COMDAT
; _this$ = ecx

; 159  : 	void	SetPicture(_TCHAR *filename)			{if(_tcslen(filename) <= FILENAME_LEN) _tcscpy(Pilot.Picture,filename); Pilot.PictureResource = 0;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 32					; 00000020H
	ja	SHORT $LN1@SetPicture
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 152				; 00000098H
	push	edx
	call	_strcpy
	add	esp, 8
$LN1@SetPicture:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPicture@LogBookData@@QAEXPAD@Z ENDP			; LogBookData::SetPicture
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetPictureResource@LogBookData@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPictureResource@LogBookData@@QAEJXZ PROC		; LogBookData::GetPictureResource, COMDAT
; _this$ = ecx

; 158  : 	long	GetPictureResource(void)				{return Pilot.PictureResource;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPictureResource@LogBookData@@QAEJXZ ENDP		; LogBookData::GetPictureResource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetPicture@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPicture@LogBookData@@QAEPADXZ PROC			; LogBookData::GetPicture, COMDAT
; _this$ = ecx

; 157  : 	_TCHAR	*GetPicture(void)						{return Pilot.Picture;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPicture@LogBookData@@QAEPADXZ ENDP			; LogBookData::GetPicture
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetDogfight@LogBookData@@QAEPAUDogfightStats@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDogfight@LogBookData@@QAEPAUDogfightStats@@XZ PROC	; LogBookData::GetDogfight, COMDAT
; _this$ = ecx

; 146  : 	DF_STATS *GetDogfight(void)						{return &Pilot.Dogfight;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 84					; 00000054H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDogfight@LogBookData@@QAEPAUDogfightStats@@XZ ENDP	; LogBookData::GetDogfight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ PROC	; LogBookData::GetCampaign, COMDAT
; _this$ = ecx

; 145  : 	CAMP_STATS *GetCampaign(void)					{return &Pilot.Campaign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaign@LogBookData@@QAEPAUCampaignStats@@XZ ENDP	; LogBookData::GetCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctext.h
;	COMDAT ?GetText@C_Text@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@C_Text@@QAEPADXZ PROC				; C_Text::GetText, COMDAT
; _this$ = ecx

; 47   : 		_TCHAR *GetText() { if(Text_) return(Text_->GetText()); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN1@GetText
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	jmp	SHORT $LN2@GetText
$LN1@GetText:
	xor	eax, eax
$LN2@GetText:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@C_Text@@QAEPADXZ ENDP				; C_Text::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetText@C_ListBox@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@C_ListBox@@QAEPADXZ PROC			; C_ListBox::GetText, COMDAT
; _this$ = ecx

; 108  : 		_TCHAR *GetText() { if (Label_ != NULL) return(Label_->GetText()); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+172], 0
	je	SHORT $LN1@GetText
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+172]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	jmp	SHORT $LN2@GetText
$LN1@GetText:
	xor	eax, eax
$LN2@GetText:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@C_ListBox@@QAEPADXZ ENDP			; C_ListBox::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetW@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@C_Base@@QAEJXZ PROC				; C_Base::GetW, COMDAT
; _this$ = ecx

; 143  : 		long GetW()					{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@C_Base@@QAEJXZ ENDP				; C_Base::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@O_Output@@QAEPADXZ PROC			; O_Output::GetText, COMDAT
; _this$ = ecx

; 151  : 		_TCHAR *GetText()				{ return(Label_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@O_Output@@QAEPADXZ ENDP			; O_Output::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsicmp
_TEXT	SEGMENT
__String1$ = 8						; size = 4
__String2$ = 12						; size = 4
__tcsicmp PROC						; COMDAT

; 1654 : {

	push	ebp
	mov	ebp, esp

; 1655 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

	mov	eax, DWORD PTR __String2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String1$[ebp]
	push	ecx
	call	__mbsicmp
	add	esp, 8

; 1656 : }

	pop	ebp
	ret	0
__tcsicmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__s2$ = 12						; size = 4
__tcscmp PROC						; COMDAT

; 1651 : _Check_return_ __inline int _tcscmp(_In_ _CPC _s1,_In_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __s1$[ebp]
	push	ecx
	call	__mbscmp
	add	esp, 8
	pop	ebp
	ret	0
__tcscmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcscspn
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__s2$ = 12						; size = 4
__tcscspn PROC						; COMDAT

; 1480 : __inline size_t _tcscspn(_In_ _CPC _s1,_In_ _CPC _s2) {return _mbscspn((_CPUC)_s1,(_CPUC)_s2);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __s1$[ebp]
	push	ecx
	call	__mbscspn
	add	esp, 8
	pop	ebp
	ret	0
__tcscspn ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
