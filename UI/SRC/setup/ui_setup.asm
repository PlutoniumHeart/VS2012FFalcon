; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\setup\ui_setup.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?AxisValueBox@@3UtagRECT@@A			; AxisValueBox
PUBLIC	?AxisValueBoxHScale@@3MA			; AxisValueBoxHScale
PUBLIC	?AxisValueBoxWScale@@3MA			; AxisValueBoxWScale
PUBLIC	?JoyScale@@3MA					; JoyScale
PUBLIC	?RudderScale@@3MA				; RudderScale
PUBLIC	?ThrottleScale@@3MA				; ThrottleScale
PUBLIC	?Rudder@@3UtagRECT@@A				; Rudder
PUBLIC	?Throttle@@3UtagRECT@@A				; Throttle
PUBLIC	?Calibrated@@3HA				; Calibrated
PUBLIC	?ready@@3HA					; ready
PUBLIC	?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A	; SetupCritSection
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?GraphicSettingMult@@3HA			; GraphicSettingMult
PUBLIC	?Cluster@@3JA					; Cluster
PUBLIC	?S_joyret@@3IA					; S_joyret
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
_BSS	SEGMENT
?AxisValueBox@@3UtagRECT@@A DB 010H DUP (?)		; AxisValueBox
?AxisValueBoxHScale@@3MA DD 01H DUP (?)			; AxisValueBoxHScale
?AxisValueBoxWScale@@3MA DD 01H DUP (?)			; AxisValueBoxWScale
?JoyScale@@3MA DD 01H DUP (?)				; JoyScale
?RudderScale@@3MA DD 01H DUP (?)			; RudderScale
?ThrottleScale@@3MA DD 01H DUP (?)			; ThrottleScale
?Rudder@@3UtagRECT@@A DB 010H DUP (?)			; Rudder
?Throttle@@3UtagRECT@@A DB 010H DUP (?)			; Throttle
?Calibrated@@3HA DD 01H DUP (?)				; Calibrated
?ready@@3HA DD	01H DUP (?)				; ready
?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A DD 01H DUP (?) ; SetupCritSection
?S_joyret@@3IA DD 01H DUP (?)				; S_joyret
_BSS	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
?GraphicSettingMult@@3HA DD 01H				; GraphicSettingMult
?Cluster@@3JA DD 01f41H					; Cluster
_DATA	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetCluster@C_Base@@QAEXJ@Z			; C_Base::SetCluster
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetW@C_Base@@QAEJXZ				; C_Base::GetW
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetInteger@C_EditBox@@QAEJXZ			; C_EditBox::GetInteger
PUBLIC	?SetSteps@C_Slider@@QAEXF@Z			; C_Slider::SetSteps
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback
PUBLIC	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback
PUBLIC	?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetDrawCallback
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z	; C_Window::SetDragCallback
PUBLIC	?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z	; C_Window::SetKBCallback
PUBLIC	?GetClientArea@C_Window@@QAE?AUUI95_RECT@@J@Z	; C_Window::GetClientArea
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?OptionsFile@LogBookData@@QAEPADXZ		; LogBookData::OptionsFile
PUBLIC	?GouraudOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::GouraudOn
PUBLIC	?HazingOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::HazingOn
PUBLIC	?ShadowsOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::ShadowsOn
PUBLIC	?ObjectDynScalingOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::ObjectDynScalingOn
PUBLIC	?AcmiFileSize@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::AcmiFileSize
PUBLIC	?GetFlightModelType@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetFlightModelType
PUBLIC	?GetWeaponEffectiveness@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetWeaponEffectiveness
PUBLIC	?GetAvionicsType@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetAvionicsType
PUBLIC	?GetAutopilotMode@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetAutopilotMode
PUBLIC	?GetRefuelingMode@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetRefuelingMode
PUBLIC	?GetPadlockMode@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetPadlockMode
PUBLIC	?GetVisualCueMode@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GetVisualCueMode
PUBLIC	?BlackoutOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::BlackoutOn
PUBLIC	?UnlimitedFuel@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::UnlimitedFuel
PUBLIC	?UnlimitedAmmo@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::UnlimitedAmmo
PUBLIC	?UnlimitedChaff@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::UnlimitedChaff
PUBLIC	?CollisionsOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::CollisionsOn
PUBLIC	?NameTagsOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::NameTagsOn
PUBLIC	?BullseyeOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::BullseyeOn
PUBLIC	?InvulnerableOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::InvulnerableOn
PUBLIC	?getInfoBar@PlayerOptionsClass@@QBE_NXZ		; PlayerOptionsClass::getInfoBar
PUBLIC	?getSubtitles@PlayerOptionsClass@@QBE_NXZ	; PlayerOptionsClass::getSubtitles
PUBLIC	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z		; PlayerOptionsClass::SetSimFlag
PUBLIC	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::ClearSimFlag
PUBLIC	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetDispFlag
PUBLIC	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::ClearDispFlag
PUBLIC	?SetObjFlag@PlayerOptionsClass@@QAEXH@Z		; PlayerOptionsClass::SetObjFlag
PUBLIC	?ClearObjFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::ClearObjFlag
PUBLIC	?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z	; PlayerOptionsClass::SetInfoBar
PUBLIC	?SetBubbleRatio@FalconSessionEntity@@QAEXM@Z	; FalconSessionEntity::SetBubbleRatio
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ		; C_3dViewer::GetVP
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z ; SIMLIB_IO_CLASS::AnalogIsUsed
PUBLIC	?STPSetupControls@@YAXXZ			; STPSetupControls
PUBLIC	?SetupRadioCB@@YAXJFPAVC_Base@@@Z		; SetupRadioCB
PUBLIC	?LoadSetupWindows@@YAXXZ			; LoadSetupWindows
PUBLIC	?SetupOpenLogBookCB@@YAXJFPAVC_Base@@@Z		; SetupOpenLogBookCB
PUBLIC	?RestartCB@@YAXJFPAVC_Base@@@Z			; RestartCB
PUBLIC	?ShutdownSetup@@YAXXZ				; ShutdownSetup
PUBLIC	?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z		; CloseSetupWindowCB
PUBLIC	?DoSyncWindowCB@@YAXJFPAVC_Base@@@Z		; DoSyncWindowCB
PUBLIC	?SetupOkCB@@YAXJFPAVC_Base@@@Z			; SetupOkCB
PUBLIC	?AApplySetupCB@@YAXJFPAVC_Base@@@Z		; AApplySetupCB
PUBLIC	?ApplySetupCB@@YAXJFPAVC_Base@@@Z		; ApplySetupCB
PUBLIC	?CancelSetupCB@@YAXJFPAVC_Base@@@Z		; CancelSetupCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0L@JFJOIEB@st_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@EEBBEMHB@st_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@NJCHIOAG@st_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@PFDIEOMN@st_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_05JCFIOPBP@Sunny?$AA@			; `string'
PUBLIC	??_C@_04DHPLNOLG@Fair?$AA@			; `string'
PUBLIC	??_C@_04DMAJLHBF@Poor?$AA@			; `string'
PUBLIC	??_C@_09MEHABAOA@Inclement?$AA@			; `string'
PUBLIC	??_C@_06GFKCFIPE@Locked?$AA@			; `string'
PUBLIC	??_C@_06NCJPDCLH@Unlock?$AA@			; `string'
PUBLIC	??_C@_09BHPKAFNN@SetupCrit?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc00000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41200000
PUBLIC	__real@42200000
PUBLIC	__real@42c80000
PUBLIC	__real@c0b3240000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	_F4CreateCriticalSection:PROC
EXTRN	_F4DestroyCriticalSection:PROC
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	_F4SetGroupVolume:PROC
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z:PROC	; C_ListBox::AddItem
EXTRN	?RemoveAllItems@C_ListBox@@QAEXXZ:PROC		; C_ListBox::RemoveAllItems
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?SetInteger@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetInteger
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	??0C_TimerHook@@QAE@XZ:PROC			; C_TimerHook::C_TimerHook
EXTRN	?Setup@C_TimerHook@@QAEXJF@Z:PROC		; C_TimerHook::Setup
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::LoadOptions
EXTRN	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::SaveOptions
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z:PROC ; RViewPoint::RemoveObject
EXTRN	?SaveOptions@DisplayOptionsClass@@QAEHXZ:PROC	; DisplayOptionsClass::SaveOptions
EXTRN	?FindDisplayMode@DDDriverInfo@DeviceManager@@QAEHHHH@Z:PROC ; DeviceManager::DDDriverInfo::FindDisplayMode
EXTRN	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z:PROC ; DeviceManager::GetDriver
EXTRN	?GetMode@DeviceManager@@QAE_NHHHPAI00@Z:PROC	; DeviceManager::GetMode
EXTRN	?SetSimMode@FalconDisplayConfiguration@@QAEXHHH@Z:PROC ; FalconDisplayConfiguration::SetSimMode
EXTRN	?Init@WeatherClass@@QAEX_N@Z:PROC		; WeatherClass::Init
EXTRN	?UpdateCondition@WeatherClass@@QAEXH_N@Z:PROC	; WeatherClass::UpdateCondition
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?GenericTimerCB@@YAXJFPAVC_Base@@@Z:PROC	; GenericTimerCB
EXTRN	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenLogBookCB
EXTRN	?INFOSetupControls@@YAXXZ:PROC			; INFOSetupControls
EXTRN	?CheckFlyButton@@YAXXZ:PROC			; CheckFlyButton
EXTRN	?GetRealism@@YAHPAVC_Window@@@Z:PROC		; GetRealism
EXTRN	?SetRealism@@YAHPAVC_Window@@@Z:PROC		; SetRealism
EXTRN	?SimControlCB@@YAXJFPAVC_Base@@@Z:PROC		; SimControlCB
EXTRN	?SetSkillCB@@YAXJFPAVC_Base@@@Z:PROC		; SetSkillCB
EXTRN	?InitKeyDescrips@@YAXXZ:PROC			; InitKeyDescrips
EXTRN	?RefreshJoystickCB@@YAXJFPAVC_Base@@@Z:PROC	; RefreshJoystickCB
EXTRN	?KeystrokeCB@@YAHEEEJ@Z:PROC			; KeystrokeCB
EXTRN	?SaveKeyMapList@@YAHPAD@Z:PROC			; SaveKeyMapList
EXTRN	?UpdateKeyMapList@@YAHPADH@Z:PROC		; UpdateKeyMapList
EXTRN	?CreateKeyMapList@@YAHPAD@Z:PROC		; CreateKeyMapList
EXTRN	?SaveKeyButtonCB@@YAXJFPAVC_Base@@@Z:PROC	; SaveKeyButtonCB
EXTRN	?LoadKeyButtonCB@@YAXJFPAVC_Base@@@Z:PROC	; LoadKeyButtonCB
EXTRN	?ControllerSelectCB@@YAXJFPAVC_Base@@@Z:PROC	; ControllerSelectCB
EXTRN	?BuildControllerList@@YAXPAVC_ListBox@@@Z:PROC	; BuildControllerList
EXTRN	?HideKeyStatusLines@@YAXPAVC_Window@@@Z:PROC	; HideKeyStatusLines
EXTRN	?RecenterJoystickCB@@YAXJFPAVC_Base@@@Z:PROC	; RecenterJoystickCB
EXTRN	?AdvancedControlCB@@YAXJFPAVC_Base@@@Z:PROC	; AdvancedControlCB
EXTRN	?SetThrottleAndRudderBars@@YAXPAVC_Base@@@Z:PROC ; SetThrottleAndRudderBars
EXTRN	?SetABDetentCB@@YAXJFPAVC_Base@@@Z:PROC		; SetABDetentCB
EXTRN	?STPMoveRendererCB@@YAXPAVC_Window@@@Z:PROC	; STPMoveRendererCB
EXTRN	?STPViewTimerCB@@YAXJFPAVC_Base@@@Z:PROC	; STPViewTimerCB
EXTRN	?STPDisplayCB@@YAXJFPAVC_Base@@@Z:PROC		; STPDisplayCB
EXTRN	?SfxLevelCB@@YAXJFPAVC_Base@@@Z:PROC		; SfxLevelCB
EXTRN	?RenderViewCB@@YAXJFPAVC_Base@@@Z:PROC		; RenderViewCB
EXTRN	?ChangeViewpointCB@@YAXJFPAVC_Base@@@Z:PROC	; ChangeViewpointCB
EXTRN	?HazingCB@@YAXJFPAVC_Base@@@Z:PROC		; HazingCB
EXTRN	?RealWeatherShadowsCB@@YAXJFPAVC_Base@@@Z:PROC	; RealWeatherShadowsCB
EXTRN	?BuildingDetailCB@@YAXJFPAVC_Base@@@Z:PROC	; BuildingDetailCB
EXTRN	?ObjectDetailCB@@YAXJFPAVC_Base@@@Z:PROC	; ObjectDetailCB
EXTRN	?VehicleSizeCB@@YAXJFPAVC_Base@@@Z:PROC		; VehicleSizeCB
EXTRN	?TerrainDetailCB@@YAXJFPAVC_Base@@@Z:PROC	; TerrainDetailCB
EXTRN	?VideoCardCB@@YAXJFPAVC_Base@@@Z:PROC		; VideoCardCB
EXTRN	?VideoDriverCB@@YAXJFPAVC_Base@@@Z:PROC		; VideoDriverCB
EXTRN	?ResolutionCB@@YAXJFPAVC_Base@@@Z:PROC		; ResolutionCB
EXTRN	?BuildVideoCardList@@YAXPAVC_ListBox@@@Z:PROC	; BuildVideoCardList
EXTRN	?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z:PROC	; DisableEnableDrivers
EXTRN	?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z:PROC	; BuildVideoDriverList
EXTRN	?GraphicsDefaultsCB@@YAXJFPAVC_Base@@@Z:PROC	; GraphicsDefaultsCB
EXTRN	?ScalingCB@@YAXJFPAVC_Base@@@Z:PROC		; ScalingCB
EXTRN	?BuildResolutionList@@YAXPAVC_ListBox@@@Z:PROC	; BuildResolutionList
EXTRN	?PlayerBubbleCB@@YAXJFPAVC_Base@@@Z:PROC	; PlayerBubbleCB
EXTRN	?AdvancedCB@@YAXJFPAVC_Base@@@Z:PROC		; AdvancedCB
EXTRN	?SetAdvanced@@YAXXZ:PROC			; SetAdvanced
EXTRN	?AdvancedGameCB@@YAXJFPAVC_Base@@@Z:PROC	; AdvancedGameCB
EXTRN	?SubTitleCB@@YAXJFPAVC_Base@@@Z:PROC		; SubTitleCB
EXTRN	?RealWeatherCB@@YAXJFPAVC_Base@@@Z:PROC		; RealWeatherCB
EXTRN	?TogglePlayerVoiceCB@@YAXJFPAVC_Base@@@Z:PROC	; TogglePlayerVoiceCB
EXTRN	?ToggleUICommsCB@@YAXJFPAVC_Base@@@Z:PROC	; ToggleUICommsCB
EXTRN	?InitSoundSetup@@YAXXZ:PROC			; InitSoundSetup
EXTRN	?TestButtonCB@@YAXJFPAVC_Base@@@Z:PROC		; TestButtonCB
EXTRN	?SoundSliderCB@@YAXJFPAVC_Base@@@Z:PROC		; SoundSliderCB
EXTRN	?PlayVoicesCB@@YAXJFPAVC_Base@@@Z:PROC		; PlayVoicesCB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?UI_logbk@@3VLogBookData@@A:BYTE		; UI_logbk
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?KeyVar@@3UKeyVars@@A:BYTE			; KeyVar
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?gpDIDevice@@3PAPAUIDirectInputDevice8A@@A:BYTE	; gpDIDevice
EXTRN	?gTotalJoy@@3HA:DWORD				; gTotalJoy
EXTRN	?IO@@3VSIMLIB_IO_CLASS@@A:BYTE			; IO
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?realWeather@@3PAVRealWeather@@A:DWORD		; realWeather
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?STPLoaded@@3HA:DWORD				; STPLoaded
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?SetupViewer@@3PAVC_3dViewer@@A:DWORD		; SetupViewer
EXTRN	?tmpVpoint@@3PAVRViewPoint@@A:DWORD		; tmpVpoint
EXTRN	?Objects@@3PAUObjectPos@@A:DWORD		; Objects
EXTRN	?Features@@3PAUFeaturePos@@A:DWORD		; Features
EXTRN	?Smoke@@3PAVDrawable2D@@A:DWORD			; Smoke
EXTRN	?AxisMap@@3UAxisMapping@@A:BYTE			; AxisMap
EXTRN	?AxisMap@@3UAxisMapping@@A:BYTE			; AxisMap
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@c0b3240000000000
CONST	SEGMENT
__real@c0b3240000000000 DQ 0c0b3240000000000r	; -4900
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHPKAFNN@SetupCrit?$AA@
CONST	SEGMENT
??_C@_09BHPKAFNN@SetupCrit?$AA@ DB 'SetupCrit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NCJPDCLH@Unlock?$AA@
CONST	SEGMENT
??_C@_06NCJPDCLH@Unlock?$AA@ DB 'Unlock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GFKCFIPE@Locked?$AA@
CONST	SEGMENT
??_C@_06GFKCFIPE@Locked?$AA@ DB 'Locked', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MEHABAOA@Inclement?$AA@
CONST	SEGMENT
??_C@_09MEHABAOA@Inclement?$AA@ DB 'Inclement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04DMAJLHBF@Poor?$AA@
CONST	SEGMENT
??_C@_04DMAJLHBF@Poor?$AA@ DB 'Poor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DHPLNOLG@Fair?$AA@
CONST	SEGMENT
??_C@_04DHPLNOLG@Fair?$AA@ DB 'Fair', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCFIOPBP@Sunny?$AA@
CONST	SEGMENT
??_C@_05JCFIOPBP@Sunny?$AA@ DB 'Sunny', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFDIEOMN@st_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0L@PFDIEOMN@st_scf?4lst?$AA@ DB 'st_scf.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NJCHIOAG@st_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0L@NJCHIOAG@st_snd?4lst?$AA@ DB 'st_snd.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EEBBEMHB@st_art?4lst?$AA@
CONST	SEGMENT
??_C@_0L@EEBBEMHB@st_art?4lst?$AA@ DB 'st_art.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFJOIEB@st_res?4lst?$AA@
CONST	SEGMENT
??_C@_0L@JFJOIEB@st_res?4lst?$AA@ DB 'st_res.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?HookupSetupControls@@YAXJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HookupSetupControls@@YAXJ@Z$0
__unwindtable$?LoadSetupWindows@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSetupWindows@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSetupWindows@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSetupWindows@@YAXXZ$2
__ehfuncinfo$?LoadSetupWindows@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?LoadSetupWindows@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?HookupSetupControls@@YAXJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HookupSetupControls@@YAXJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_button$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CancelSetupCB@@YAXJFPAVC_Base@@@Z PROC			; CancelSetupCB

; 1749 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1750 : 	C_Button *button;
; 1751 : 	
; 1752 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@CancelSetu

; 1753 : 		return;

	jmp	SHORT $LN3@CancelSetu
$LN2@CancelSetu:

; 1754 : 	
; 1755 : 	ShutdownSetup();

	call	?ShutdownSetup@@YAXXZ			; ShutdownSetup

; 1756 : 	PlayerOptions.LoadOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?OptionsFile@LogBookData@@QAEPADXZ	; LogBookData::OptionsFile
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::LoadOptions

; 1757 : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 1758 : 
; 1759 : 	/*
; 1760 : 	if(Calibration.calibrating)
; 1761 : 		StopCalibrating(control);*/
; 1762 : 	
; 1763 : 	button=(C_Button *)control->Parent_->FindControl(RENDER);

	push	70083					; 000111c3H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1764 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@CancelSetu

; 1765 : 	{
; 1766 : 		button->SetState(C_STATE_0);

	push	0
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN1@CancelSetu:

; 1767 : 	}
; 1768 : 
; 1769 : 
; 1770 : 	UpdateKeyMapList( PlayerOptions.keyfile, USE_FILENAME);

	push	1
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8

; 1771 : 
; 1772 : 	CloseWindowCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN3@CancelSetu:

; 1773 : } //CancelSetupCB

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSetupCB@@YAXJFPAVC_Base@@@Z ENDP			; CancelSetupCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ApplySetupCB@@YAXJFPAVC_Base@@@Z PROC			; ApplySetupCB

; 1737 : {

	push	ebp
	mov	ebp, esp

; 1738 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@ApplySetup

; 1739 : 		return;

	jmp	SHORT $LN2@ApplySetup
$LN1@ApplySetup:

; 1740 : 	
; 1741 : 	SaveValues();

	call	?SaveValues@@YAXXZ			; SaveValues

; 1742 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton
$LN2@ApplySetup:

; 1743 : 	
; 1744 : }//ApplySetupCB

	pop	ebp
	ret	0
?ApplySetupCB@@YAXJFPAVC_Base@@@Z ENDP			; ApplySetupCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AApplySetupCB@@YAXJFPAVC_Base@@@Z PROC			; AApplySetupCB

; 1726 : {

	push	ebp
	mov	ebp, esp

; 1727 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@AApplySetu

; 1728 : 		return;

	jmp	SHORT $LN2@AApplySetu
$LN1@AApplySetu:

; 1729 : 	
; 1730 : 	SaveValues();

	call	?SaveValues@@YAXXZ			; SaveValues

; 1731 : 	CloseWindowCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@AApplySetu:

; 1732 : }

	pop	ebp
	ret	0
?AApplySetupCB@@YAXJFPAVC_Base@@@Z ENDP			; AApplySetupCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_button$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetupOkCB@@YAXJFPAVC_Base@@@Z PROC			; SetupOkCB

; 1697 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1698 : 	C_Button *button;
; 1699 : 	
; 1700 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SetupOkCB

; 1701 : 		return;

	jmp	SHORT $LN3@SetupOkCB
$LN2@SetupOkCB:

; 1702 : 	
; 1703 : 	
; 1704 : 	SaveValues();

	call	?SaveValues@@YAXXZ			; SaveValues

; 1705 : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 1706 : 
; 1707 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton

; 1708 : 	ShutdownSetup();

	call	?ShutdownSetup@@YAXXZ			; ShutdownSetup

; 1709 : 
; 1710 : /*
; 1711 : 	if(Calibration.calibrating)
; 1712 : 		StopCalibrating(control);*/
; 1713 : 	
; 1714 : 	button=(C_Button *)control->Parent_->FindControl(RENDER);

	push	70083					; 000111c3H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1715 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@SetupOkCB

; 1716 : 	{
; 1717 : 		button->SetState(C_STATE_0);

	push	0
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN1@SetupOkCB:

; 1718 : 	}
; 1719 : 	
; 1720 : 	CloseWindowCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN3@SetupOkCB:

; 1721 : }//SetupOkCB

	mov	esp, ebp
	pop	ebp
	ret	0
?SetupOkCB@@YAXJFPAVC_Base@@@Z ENDP			; SetupOkCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DoSyncWindowCB@@YAXJFPAVC_Base@@@Z PROC		; DoSyncWindowCB

; 1662 : {

	push	ebp
	mov	ebp, esp

; 1663 : //	C_Window *win;
; 1664 : /*
; 1665 : 	if(hittype != C_TYPE_LMOUSEUP)
; 1666 : 		return;
; 1667 : 
; 1668 : 	if( DisplayOptions.m_texMode == DisplayOptionsClass::TEX_MODE_DDS )
; 1669 : 	{
; 1670 : 		TheTextureBank.FlushHandles();
; 1671 : 		TheTextureBank.RestoreTexturePool();
; 1672 : 		TheTerrTextures.FlushHandles();
; 1673 : 		TheFarTextures.FlushHandles();
; 1674 : 
; 1675 : 
; 1676 : 		win = gMainHandler->FindWindow(SYNC_WIN);
; 1677 : 		if( win )
; 1678 : 		{
; 1679 : 			gMainHandler->ShowWindow(win);
; 1680 : 			gMainHandler->WindowToFront(win);
; 1681 : 		}
; 1682 : 	
; 1683 : 		TheTextureBank.SyncDDSTextures();
; 1684 : 		TheTerrTextures.SyncDDSTextures();
; 1685 : 		TheFarTextures.SyncDDSTextures();
; 1686 : 	
; 1687 : 		TheTerrTextures.FlushHandles();
; 1688 : 		TheFarTextures.FlushHandles();
; 1689 : //			gMainHandler->HideWindow(win);
; 1690 : 	}
; 1691 : */
; 1692 : }

	pop	ebp
	ret	0
?DoSyncWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; DoSyncWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_button$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z PROC		; CloseSetupWindowCB

; 1634 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1635 : 	C_Button *button;
; 1636 : 	
; 1637 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@CloseSetup

; 1638 : 		return;

	jmp	SHORT $LN3@CloseSetup
$LN2@CloseSetup:

; 1639 : 
; 1640 : 	ShutdownSetup();

	call	?ShutdownSetup@@YAXXZ			; ShutdownSetup

; 1641 : 	PlayerOptions.LoadOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?OptionsFile@LogBookData@@QAEPADXZ	; LogBookData::OptionsFile
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::LoadOptions

; 1642 : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 1643 : 
; 1644 : /*
; 1645 : 	if(Calibration.calibrating)
; 1646 : 		StopCalibrating(control);*/
; 1647 : 	
; 1648 : 	button=(C_Button *)control->Parent_->FindControl(RENDER);

	push	70083					; 000111c3H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1649 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@CloseSetup

; 1650 : 	{
; 1651 : 		button->SetState(C_STATE_0);

	push	0
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN1@CloseSetup:

; 1652 : 	}
; 1653 : 	
; 1654 : 	UpdateKeyMapList( PlayerOptions.keyfile,USE_FILENAME);

	push	1
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8

; 1655 : 
; 1656 : 	CloseWindowCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN3@CloseSetup:

; 1657 : }//CloseSetupWindowCB

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseSetupWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
tv94 = -36						; size = 4
$T1 = -32						; size = 4
tv88 = -28						; size = 4
$T2 = -24						; size = 4
_viewpt$3 = -20						; size = 4
$T4 = -16						; size = 4
$T5 = -12						; size = 4
$T6 = -8						; size = 4
$T7 = -4						; size = 4
?ShutdownSetup@@YAXXZ PROC				; ShutdownSetup

; 1587 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 1588 : 	if(Objects)

	cmp	DWORD PTR ?Objects@@3PAUObjectPos@@A, 0	; Objects
	je	SHORT $LN5@ShutdownSe

; 1589 : 	{
; 1590 : 		delete [] Objects;

	mov	eax, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1591 : 		Objects = NULL;

	mov	DWORD PTR ?Objects@@3PAUObjectPos@@A, 0	; Objects
$LN5@ShutdownSe:

; 1592 : 	}
; 1593 : 	
; 1594 : 	if(Features)

	cmp	DWORD PTR ?Features@@3PAUFeaturePos@@A, 0 ; Features
	je	SHORT $LN4@ShutdownSe

; 1595 : 	{
; 1596 : 		delete [] Features;

	mov	edx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1597 : 		Features = NULL;

	mov	DWORD PTR ?Features@@3PAUFeaturePos@@A, 0 ; Features
$LN4@ShutdownSe:

; 1598 : 	}
; 1599 : 	
; 1600 : 	if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	$LN3@ShutdownSe

; 1601 : 	{
; 1602 : 		ready = FALSE;

	mov	DWORD PTR ?ready@@3HA, 0		; ready

; 1603 : 		F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 1604 : 
; 1605 : 		RViewPoint	*viewpt;
; 1606 : 		viewpt = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _viewpt$3[ebp], eax

; 1607 : 		viewpt->RemoveObject(Smoke);

	mov	edx, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	push	edx
	mov	ecx, DWORD PTR _viewpt$3[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject

; 1608 : 		delete Smoke;

	mov	eax, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN8@ShutdownSe
	push	1
	mov	edx, DWORD PTR $T7[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN9@ShutdownSe
$LN8@ShutdownSe:
	mov	DWORD PTR tv88[ebp], 0
$LN9@ShutdownSe:

; 1609 : 		Smoke = NULL;

	mov	DWORD PTR ?Smoke@@3PAVDrawable2D@@A, 0	; Smoke

; 1610 : 
; 1611 : 		SetupViewer->Cleanup();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 1612 : 		delete SetupViewer;

	mov	eax, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN10@ShutdownSe
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN11@ShutdownSe
$LN10@ShutdownSe:
	mov	DWORD PTR tv94[ebp], 0
$LN11@ShutdownSe:

; 1613 : 		SetupViewer = NULL;

	mov	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer

; 1614 : 		F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4
$LN3@ShutdownSe:

; 1615 : 	}
; 1616 : 
; 1617 : 	if(tmpVpoint)

	cmp	DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A, 0 ; tmpVpoint
	je	SHORT $LN2@ShutdownSe

; 1618 : 	{
; 1619 : 		tmpVpoint->Cleanup();

	mov	eax, DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A ; tmpVpoint
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A ; tmpVpoint
	mov	eax, DWORD PTR [edx]
	call	eax

; 1620 : 		tmpVpoint = NULL;

	mov	DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A, 0 ; tmpVpoint
$LN2@ShutdownSe:

; 1621 : 	}
; 1622 : 	
; 1623 : 	F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 1624 : 	F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 1625 : 	if(SetupCritSection)

	cmp	DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A, 0 ; SetupCritSection
	je	SHORT $LN6@ShutdownSe

; 1626 : 	{
; 1627 : 		F4DestroyCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4DestroyCriticalSection
	add	esp, 4

; 1628 : 		SetupCritSection = NULL;

	mov	DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A, 0 ; SetupCritSection
$LN6@ShutdownSe:

; 1629 : 	}
; 1630 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ShutdownSetup@@YAXXZ ENDP				; ShutdownSetup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_range$ = -148						; size = 8
tv1403 = -140						; size = 4
_nHeight$1 = -136					; size = 4
tv1399 = -132						; size = 4
tv1441 = -128						; size = 4
tv1401 = -124						; size = 4
tv1407 = -120						; size = 4
_nDepth$2 = -116					; size = 4
tv1405 = -112						; size = 4
_nWidth$3 = -108					; size = 4
_pos$ = -104						; size = 8
tv1108 = -96						; size = 4
tv976 = -92						; size = 4
tv1088 = -88						; size = 4
tv915 = -84						; size = 4
tv1068 = -80						; size = 4
_ebox$ = -76						; size = 4
tv1048 = -72						; size = 4
tv862 = -68						; size = 4
tv895 = -64						; size = 4
tv1028 = -60						; size = 4
_volume$ = -56						; size = 4
_text$ = -52						; size = 4
tv148 = -48						; size = 4
tv211 = -44						; size = 4
tv190 = -40						; size = 4
tv169 = -36						; size = 4
_step$4 = -32						; size = 4
tv128 = -28						; size = 4
tv232 = -24						; size = 4
_i$ = -20						; size = 4
_slider$ = -16						; size = 4
_win$ = -12						; size = 4
_lbox$ = -8						; size = 4
_button$ = -4						; size = 4
?SaveValues@@YAXXZ PROC					; SaveValues

; 1091 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 148				; 00000094H
	push	esi

; 1092 : 	C_Window	*win;
; 1093 : 	C_Button	*button;
; 1094 : 	C_Text		*text;
; 1095 : 	C_ListBox	*lbox;
; 1096 : 	C_Slider	*slider;
; 1097 : 	C_EditBox	*ebox;
; 1098 : 	
; 1099 : 	
; 1100 : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1101 : 	
; 1102 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN113@SaveValues

; 1103 : 		return;

	jmp	$LN114@SaveValues
$LN113@SaveValues:

; 1104 : 	
; 1105 : 	lbox=(C_ListBox *)win->FindControl(SET_FLTMOD);

	push	70006					; 00011176H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1106 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN112@SaveValues

; 1107 : 	{
; 1108 : 		if((lbox->GetTextID())==SET_FLTMOD_1)

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	cmp	eax, 70007				; 00011177H
	jne	SHORT $LN111@SaveValues

; 1109 : 			PlayerOptions.SimFlightModel = FMAccurate;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+56, 2

; 1110 : 		else

	jmp	SHORT $LN110@SaveValues
$LN111@SaveValues:

; 1111 : 			PlayerOptions.SimFlightModel = FMSimplified;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+56, 0
$LN110@SaveValues:

; 1112 : 
; 1113 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN112@SaveValues:

; 1114 : 	}
; 1115 : 	
; 1116 : 	lbox=(C_ListBox *)win->FindControl(SET_RADAR);

	push	70009					; 00011179H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1117 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN109@SaveValues

; 1118 : 	{
; 1119 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	sub	ecx, 70010				; 0001117aH
	mov	DWORD PTR tv128[ebp], ecx
	cmp	DWORD PTR tv128[ebp], 183		; 000000b7H
	ja	SHORT $LN107@SaveValues
	mov	edx, DWORD PTR tv128[ebp]
	movzx	eax, BYTE PTR $LN134@SaveValues[edx]
	jmp	DWORD PTR $LN135@SaveValues[eax*4]
$LN106@SaveValues:

; 1120 : 		{
; 1121 : 			// M.N. full realism mode added
; 1122 : 		case SET_RADAR_0:
; 1123 : 			PlayerOptions.SimAvionicsType = ATRealisticAV;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+64, 3

; 1124 : 			break;

	jmp	SHORT $LN107@SaveValues
$LN105@SaveValues:

; 1125 : 		case SET_RADAR_1:
; 1126 : 			PlayerOptions.SimAvionicsType = ATRealistic;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+64, 2

; 1127 : 			break;

	jmp	SHORT $LN107@SaveValues
$LN104@SaveValues:

; 1128 : 		case SET_RADAR_2:
; 1129 : 			PlayerOptions.SimAvionicsType = ATSimplified;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+64, 1

; 1130 : 			break;

	jmp	SHORT $LN107@SaveValues
$LN103@SaveValues:

; 1131 : 		case SET_RADAR_3:
; 1132 : 			PlayerOptions.SimAvionicsType = ATEasy;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+64, 0
$LN107@SaveValues:

; 1133 : 			break;
; 1134 : 		}
; 1135 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN109@SaveValues:

; 1136 : 	}
; 1137 : 	
; 1138 : 	lbox=(C_ListBox *)win->FindControl(SET_WEAPEFF);

	push	70017					; 00011181H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1139 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN102@SaveValues

; 1140 : 	{
; 1141 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv148[ebp], eax
	cmp	DWORD PTR tv148[ebp], 70018		; 00011182H
	je	SHORT $LN99@SaveValues
	cmp	DWORD PTR tv148[ebp], 70019		; 00011183H
	je	SHORT $LN98@SaveValues
	cmp	DWORD PTR tv148[ebp], 70020		; 00011184H
	je	SHORT $LN97@SaveValues
	jmp	SHORT $LN100@SaveValues
$LN99@SaveValues:

; 1142 : 		{
; 1143 : 		case SET_WEAPEFF_1:
; 1144 : 			PlayerOptions.SimWeaponEffect = WEAccurate;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+60, 2

; 1145 : 			break;

	jmp	SHORT $LN100@SaveValues
$LN98@SaveValues:

; 1146 : 		case SET_WEAPEFF_2:
; 1147 : 			PlayerOptions.SimWeaponEffect = WEEnhanced;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+60, 1

; 1148 : 			break;

	jmp	SHORT $LN100@SaveValues
$LN97@SaveValues:

; 1149 : 		case SET_WEAPEFF_3:
; 1150 : 			PlayerOptions.SimWeaponEffect = WEExaggerated;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+60, 0
$LN100@SaveValues:

; 1151 : 			break;
; 1152 : 		}
; 1153 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN102@SaveValues:

; 1154 : 	}
; 1155 : 	
; 1156 : 	lbox=(C_ListBox *)win->FindControl(SET_AUTOPILOT);

	push	70013					; 0001117dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1157 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN96@SaveValues

; 1158 : 	{
; 1159 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv169[ebp], eax
	cmp	DWORD PTR tv169[ebp], 70014		; 0001117eH
	je	SHORT $LN93@SaveValues
	cmp	DWORD PTR tv169[ebp], 70015		; 0001117fH
	je	SHORT $LN92@SaveValues
	cmp	DWORD PTR tv169[ebp], 70016		; 00011180H
	je	SHORT $LN91@SaveValues
	jmp	SHORT $LN94@SaveValues
$LN93@SaveValues:

; 1160 : 		{
; 1161 : 		case SET_AUTO_1:
; 1162 : 			PlayerOptions.SimAutopilotType = APNormal;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+68, 2

; 1163 : 			break;

	jmp	SHORT $LN94@SaveValues
$LN92@SaveValues:

; 1164 : 		case SET_AUTO_2:
; 1165 : 			PlayerOptions.SimAutopilotType = APEnhanced;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+68, 1

; 1166 : 			break;

	jmp	SHORT $LN94@SaveValues
$LN91@SaveValues:

; 1167 : 		case SET_AUTO_3:
; 1168 : 			PlayerOptions.SimAutopilotType = APIntelligent;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+68, 0
$LN94@SaveValues:

; 1169 : 			break;
; 1170 : 		}
; 1171 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN96@SaveValues:

; 1172 : 	}
; 1173 : 
; 1174 : 	lbox=(C_ListBox *)win->FindControl(SET_PADLOCK);

	push	70130					; 000111f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1175 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN90@SaveValues

; 1176 : 	{
; 1177 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv190[ebp], eax
	cmp	DWORD PTR tv190[ebp], 70131		; 000111f3H
	je	SHORT $LN86@SaveValues
	cmp	DWORD PTR tv190[ebp], 70132		; 000111f4H
	je	SHORT $LN85@SaveValues
	cmp	DWORD PTR tv190[ebp], 70134		; 000111f6H
	je	SHORT $LN87@SaveValues
	jmp	SHORT $LN88@SaveValues
$LN87@SaveValues:

; 1178 : 		{
; 1179 : 		case SET_PADLOCK_4:
; 1180 : 			PlayerOptions.SimPadlockMode = PDDisabled;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+76, 2

; 1181 : 			break;

	jmp	SHORT $LN88@SaveValues
$LN86@SaveValues:

; 1182 : 		case SET_PADLOCK_1:
; 1183 : 			PlayerOptions.SimPadlockMode = PDRealistic;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+76, 1

; 1184 : 			break;

	jmp	SHORT $LN88@SaveValues
$LN85@SaveValues:

; 1185 : 		case SET_PADLOCK_2:
; 1186 : 			PlayerOptions.SimPadlockMode = PDEnhanced;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+76, 0
$LN88@SaveValues:

; 1187 : 			break;
; 1188 : 		//case SET_PADLOCK_3:
; 1189 : 		//	PlayerOptions.SimPadlockMode = PDSuper;
; 1190 : 		//	break;
; 1191 : 		}
; 1192 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN90@SaveValues:

; 1193 : 	}
; 1194 : 	
; 1195 : 	lbox=(C_ListBox *)win->FindControl(SET_REFUELING);

	push	70126					; 000111eeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1196 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN84@SaveValues

; 1197 : 	{
; 1198 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv211[ebp], eax
	cmp	DWORD PTR tv211[ebp], 70127		; 000111efH
	je	SHORT $LN81@SaveValues
	cmp	DWORD PTR tv211[ebp], 70128		; 000111f0H
	je	SHORT $LN80@SaveValues
	cmp	DWORD PTR tv211[ebp], 70129		; 000111f1H
	je	SHORT $LN79@SaveValues
	jmp	SHORT $LN82@SaveValues
$LN81@SaveValues:

; 1199 : 		{
; 1200 : 		case SET_REFUEL_1:
; 1201 : 			PlayerOptions.SimAirRefuelingMode = ARRealistic;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+72, 1

; 1202 : 			break;

	jmp	SHORT $LN82@SaveValues
$LN80@SaveValues:

; 1203 : 		case SET_REFUEL_2:
; 1204 : 			PlayerOptions.SimAirRefuelingMode = ARModerated;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+72, 2

; 1205 : 			break;

	jmp	SHORT $LN82@SaveValues
$LN79@SaveValues:

; 1206 : 		case SET_REFUEL_3:
; 1207 : 			PlayerOptions.SimAirRefuelingMode = ARSimplistic;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+72, 3
$LN82@SaveValues:

; 1208 : 			break;
; 1209 : 		}
; 1210 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN84@SaveValues:

; 1211 : 	}
; 1212 : 
; 1213 : 	lbox=(C_ListBox *)win->FindControl(SET_CANOPY_CUE);

	push	70141					; 000111fdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1214 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN78@SaveValues

; 1215 : 	{
; 1216 : 		switch(lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv232[ebp], eax
	mov	ecx, DWORD PTR tv232[ebp]
	sub	ecx, 70138				; 000111faH
	mov	DWORD PTR tv232[ebp], ecx
	cmp	DWORD PTR tv232[ebp], 6
	ja	SHORT $LN76@SaveValues
	mov	edx, DWORD PTR tv232[ebp]
	jmp	DWORD PTR $LN136@SaveValues[edx*4]
$LN75@SaveValues:

; 1217 : 		{
; 1218 : 		case CUE_NONE:
; 1219 : 			PlayerOptions.SimVisualCueMode = VCNone;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+80, 0

; 1220 : 			break;

	jmp	SHORT $LN76@SaveValues
$LN74@SaveValues:

; 1221 : 		case CUE_LIFT_LINE:
; 1222 : 			PlayerOptions.SimVisualCueMode = VCLiftLine;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+80, 1

; 1223 : 			break;

	jmp	SHORT $LN76@SaveValues
$LN73@SaveValues:

; 1224 : 		case CUE_REFLECTION_MAP:
; 1225 : 			PlayerOptions.SimVisualCueMode = VCReflection;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+80, 2

; 1226 : 			break;

	jmp	SHORT $LN76@SaveValues
$LN72@SaveValues:

; 1227 : 		case CUE_BOTH:
; 1228 : 			PlayerOptions.SimVisualCueMode = VCBoth;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+80, 3
$LN76@SaveValues:

; 1229 : 			break;
; 1230 : 		}
; 1231 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN78@SaveValues:

; 1232 : 	}
; 1233 : 	
; 1234 : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1235 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN71@SaveValues

; 1236 : 	{
; 1237 : 		DisplayOptions.DispVideoCard = static_cast<uchar>(lbox->GetTextID() - 1);

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4, al

; 1238 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN71@SaveValues:

; 1239 : 	}
; 1240 : 	
; 1241 : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1242 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN70@SaveValues

; 1243 : 	{
; 1244 : 		DisplayOptions.DispVideoDriver = static_cast<uchar>(lbox->GetTextID() - 1);

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5, al

; 1245 : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN70@SaveValues:

; 1246 : 	}
; 1247 : 
; 1248 : 	lbox=(C_ListBox *)win->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1249 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN69@SaveValues

; 1250 : 	{
; 1251 : 		// OW
; 1252 : 		#if 1
; 1253 : 		UINT nWidth, nHeight, nDepth;
; 1254 : 		FalconDisplay.devmgr.GetMode(DisplayOptions.DispVideoDriver, DisplayOptions.DispVideoCard, lbox->GetTextID(),
; 1255 : 			&nWidth, &nHeight, &nDepth);

	lea	ecx, DWORD PTR _nDepth$2[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHeight$1[ebp]
	push	edx
	lea	eax, DWORD PTR _nWidth$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4
	push	ecx
	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	push	edx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetMode@DeviceManager@@QAE_NHHHPAI00@Z	; DeviceManager::GetMode

; 1256 : 
; 1257 : 		DisplayOptions.DispWidth = nWidth;

	mov	ax, WORD PTR _nWidth$3[ebp]
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A, ax

; 1258 : 		DisplayOptions.DispHeight = nHeight;

	mov	cx, WORD PTR _nHeight$1[ebp]
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2, cx

; 1259 : 		DisplayOptions.DispDepth = nDepth;

	mov	edx, DWORD PTR _nDepth$2[ebp]
	mov	DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8, edx

; 1260 : 
; 1261 : 		ShiAssert(DisplayOptions.DispWidth <= 1600);
; 1262 : 		FalconDisplay.SetSimMode(DisplayOptions.DispWidth, DisplayOptions.DispHeight, DisplayOptions.DispDepth);	// OW

	mov	eax, DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8
	push	eax
	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2
	push	ecx
	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	push	edx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A ; FalconDisplay
	call	?SetSimMode@FalconDisplayConfiguration@@QAEXHHH@Z ; FalconDisplayConfiguration::SetSimMode

; 1263 : 		#else
; 1264 : 		DisplayOptions.DispWidth = static_cast<short>(lbox->GetTextID());
; 1265 : 		DisplayOptions.DispHeight = static_cast<ushort>(FloatToInt32(lbox->GetTextID() * 0.75F));
; 1266 : 
; 1267 : 		ShiAssert(DisplayOptions.DispWidth <= 1600);
; 1268 : 		FalconDisplay.SetSimMode(DisplayOptions.DispWidth, DisplayOptions.DispHeight, DisplayOptions.DispDepth);	// OW
; 1269 : 		#endif
; 1270 : 
; 1271 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN69@SaveValues:

; 1272 : 	}
; 1273 : 
; 1274 : 	//JAM 20Nov03
; 1275 : 	if( TheCampaign.InMainUI )

	movzx	ecx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+68
	test	ecx, ecx
	je	SHORT $LN67@SaveValues

; 1276 : 	{
; 1277 : 		lbox=(C_ListBox *)win->FindControl(SETUP_REALWEATHER);

	push	70207					; 0001123fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1278 : 		if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN67@SaveValues

; 1279 : 		{
; 1280 : 			PlayerOptions.weatherCondition = lbox->GetTextID()-70207;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 70207				; 0001123fH
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+44, eax

; 1281 : 			((WeatherClass *)realWeather)->UpdateCondition(PlayerOptions.weatherCondition,true);

	push	1
	mov	edx, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+44
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?UpdateCondition@WeatherClass@@QAEXH_N@Z ; WeatherClass::UpdateCondition

; 1282 : 			((WeatherClass *)realWeather)->Init(true);

	push	1
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?Init@WeatherClass@@QAEX_N@Z		; WeatherClass::Init
$LN67@SaveValues:

; 1283 : 		}
; 1284 : 	}
; 1285 : 	//JAM
; 1286 : 
; 1287 : 	//THW 2004-01-17
; 1288 : /*	lbox=(C_ListBox *)win->FindControl(SETUP_SEASON);
; 1289 : 	if(lbox != NULL)
; 1290 : 	{
; 1291 : 		//PlayerOptions.Season = lbox->GetTextID()-70312;
; 1292 : 		lbox->Refresh();
; 1293 : 	}
; 1294 : 	//THW
; 1295 : */
; 1296 : 	button=(C_Button *)win->FindControl(SET_ORDNANCE);

	push	70023					; 00011187H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1297 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN64@SaveValues

; 1298 : 	{
; 1299 : 		if(button->GetState() == C_STATE_1)

	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN65@SaveValues

; 1300 : 			PlayerOptions.SetSimFlag (SIM_UNLIMITED_AMMO);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1301 : 		else

	jmp	SHORT $LN64@SaveValues
$LN65@SaveValues:

; 1302 : 			PlayerOptions.ClearSimFlag (SIM_UNLIMITED_AMMO);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN64@SaveValues:

; 1303 : 	}
; 1304 : 	
; 1305 : 	button=(C_Button *)win->FindControl(SET_FUEL);

	push	70026					; 0001118aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1306 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN61@SaveValues

; 1307 : 	{
; 1308 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN62@SaveValues

; 1309 : 			PlayerOptions.SetSimFlag (SIM_UNLIMITED_FUEL);

	push	4
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1310 : 		else

	jmp	SHORT $LN61@SaveValues
$LN62@SaveValues:

; 1311 : 			PlayerOptions.ClearSimFlag (SIM_UNLIMITED_FUEL);

	push	4
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN61@SaveValues:

; 1312 : 	}
; 1313 : 	
; 1314 : 	button=(C_Button *)win->FindControl(SET_CHAFFLARES);

	push	70024					; 00011188H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1315 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN58@SaveValues

; 1316 : 	{
; 1317 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN59@SaveValues

; 1318 : 			PlayerOptions.SetSimFlag (SIM_UNLIMITED_CHAFF);

	push	16					; 00000010H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1319 : 		else

	jmp	SHORT $LN58@SaveValues
$LN59@SaveValues:

; 1320 : 			PlayerOptions.ClearSimFlag (SIM_UNLIMITED_CHAFF);

	push	16					; 00000010H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN58@SaveValues:

; 1321 : 		
; 1322 : 	}
; 1323 : 	
; 1324 : 	button=(C_Button *)win->FindControl(SET_COLLISIONS);

	push	70021					; 00011185H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1325 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN55@SaveValues

; 1326 : 	{
; 1327 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN56@SaveValues

; 1328 : 			PlayerOptions.SetSimFlag (SIM_NO_COLLISIONS);

	push	32					; 00000020H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1329 : 		else

	jmp	SHORT $LN55@SaveValues
$LN56@SaveValues:

; 1330 : 			PlayerOptions.ClearSimFlag (SIM_NO_COLLISIONS);

	push	32					; 00000020H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN55@SaveValues:

; 1331 : 	}
; 1332 : 	
; 1333 : 	button=(C_Button *)win->FindControl(SET_BLACKOUT);

	push	70022					; 00011186H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1334 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN52@SaveValues

; 1335 : 	{
; 1336 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN53@SaveValues

; 1337 : 			PlayerOptions.SetSimFlag (SIM_NO_BLACKOUT);

	push	2
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1338 : 		else

	jmp	SHORT $LN52@SaveValues
$LN53@SaveValues:

; 1339 : 			PlayerOptions.ClearSimFlag (SIM_NO_BLACKOUT);

	push	2
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN52@SaveValues:

; 1340 : 	}
; 1341 : 	
; 1342 : 	
; 1343 : 	button=(C_Button *)win->FindControl(SET_IDTAGS);

	push	70025					; 00011189H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1344 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN49@SaveValues

; 1345 : 	{
; 1346 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN50@SaveValues

; 1347 : 			PlayerOptions.SetSimFlag (SIM_NAMETAGS);

	push	64					; 00000040H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1348 : 		else

	jmp	SHORT $LN49@SaveValues
$LN50@SaveValues:

; 1349 : 			PlayerOptions.ClearSimFlag (SIM_NAMETAGS);			

	push	64					; 00000040H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN49@SaveValues:

; 1350 : 	}
; 1351 : 	
; 1352 : 	button=(C_Button *)win->FindControl(SET_BULLSEYE_CALLS);

	push	70099					; 000111d3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1353 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN46@SaveValues

; 1354 : 	{
; 1355 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN47@SaveValues

; 1356 : 			PlayerOptions.SetSimFlag(SIM_BULLSEYE_CALLS);

	push	256					; 00000100H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1357 : 		else

	jmp	SHORT $LN46@SaveValues
$LN47@SaveValues:

; 1358 : 			PlayerOptions.ClearSimFlag(SIM_BULLSEYE_CALLS);

	push	256					; 00000100H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN46@SaveValues:

; 1359 : 	}
; 1360 : 
; 1361 : 	button=(C_Button *)win->FindControl(SET_INVULNERABILITY); //should be SET_INVULNERABLITY

	push	70100					; 000111d4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1362 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN43@SaveValues

; 1363 : 	{
; 1364 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN44@SaveValues

; 1365 : 			PlayerOptions.SetSimFlag(SIM_INVULNERABLE);

	push	512					; 00000200H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetSimFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetSimFlag

; 1366 : 		else

	jmp	SHORT $LN43@SaveValues
$LN44@SaveValues:

; 1367 : 			PlayerOptions.ClearSimFlag(SIM_INVULNERABLE);

	push	512					; 00000200H
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearSimFlag
$LN43@SaveValues:

; 1368 : 	}
; 1369 : 
; 1370 : 	// Retro 25Dec2003
; 1371 : 	button=(C_Button *)win->FindControl(SETUP_SIM_INFOBAR);

	push	70228					; 00011254H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1372 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN40@SaveValues

; 1373 : 	{
; 1374 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN41@SaveValues

; 1375 : 			PlayerOptions.SetInfoBar(true);

	push	1
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z ; PlayerOptionsClass::SetInfoBar

; 1376 : 		else

	jmp	SHORT $LN40@SaveValues
$LN41@SaveValues:

; 1377 : 			PlayerOptions.SetInfoBar(false);

	push	0
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z ; PlayerOptionsClass::SetInfoBar
$LN40@SaveValues:

; 1378 : 	}
; 1379 : 	// ..ends
; 1380 : 
; 1381 : 	ebox = (C_EditBox *)win->FindControl(ACMI_FILE_SIZE);

	push	70124					; 000111ecH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1382 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN39@SaveValues

; 1383 : 	{
; 1384 : 		PlayerOptions.ACMIFileSize = ebox->GetInteger();

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+32, eax
$LN39@SaveValues:

; 1385 : 	}
; 1386 : 	
; 1387 : 	button=(C_Button *)win->FindControl(AUTO_SCALE);

	push	70110					; 000111deH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1388 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN36@SaveValues

; 1389 : 	{
; 1390 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN37@SaveValues

; 1391 : 			PlayerOptions.SetObjFlag(DISP_OBJ_DYN_SCALING);

	push	4
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetObjFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetObjFlag

; 1392 : 		else

	jmp	SHORT $LN36@SaveValues
$LN37@SaveValues:

; 1393 : 			PlayerOptions.ClearObjFlag(DISP_OBJ_DYN_SCALING);

	push	4
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearObjFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearObjFlag
$LN36@SaveValues:

; 1394 : 	}
; 1395 : 
; 1396 : 	button=(C_Button *)win->FindControl(GOUROUD);//GOUROUD

	push	70136					; 000111f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1397 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN33@SaveValues

; 1398 : 	{
; 1399 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN34@SaveValues

; 1400 : 			PlayerOptions.SetDispFlag(DISP_GOURAUD);

	push	1
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetDispFlag

; 1401 : 		else

	jmp	SHORT $LN33@SaveValues
$LN34@SaveValues:

; 1402 : 			PlayerOptions.ClearDispFlag(DISP_GOURAUD);

	push	1
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearDispFlag
$LN33@SaveValues:

; 1403 : 	}
; 1404 : 	
; 1405 : 	button=(C_Button *)win->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1406 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN30@SaveValues

; 1407 : 	{
; 1408 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN31@SaveValues

; 1409 : 			PlayerOptions.SetDispFlag(DISP_HAZING);

	push	2
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetDispFlag

; 1410 : 		else

	jmp	SHORT $LN30@SaveValues
$LN31@SaveValues:

; 1411 : 			PlayerOptions.ClearDispFlag(DISP_HAZING);

	push	2
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearDispFlag
$LN30@SaveValues:

; 1412 : 	}
; 1413 : 	
; 1414 : 	//JAM 07Dec03
; 1415 : 	button=(C_Button *)win->FindControl(SETUP_REALWEATHER_SHADOWS);

	push	70219					; 0001124bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1416 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN27@SaveValues

; 1417 : 	{
; 1418 : 		if(button->GetState() == C_STATE_1)

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN28@SaveValues

; 1419 : 			PlayerOptions.SetDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetDispFlag

; 1420 : 		else

	jmp	SHORT $LN27@SaveValues
$LN28@SaveValues:

; 1421 : 			PlayerOptions.ClearDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearDispFlag
$LN27@SaveValues:

; 1422 : 	}
; 1423 : 
; 1424 : 	button=(C_Button *)win->FindControl(SETUP_SPECULAR_LIGHTING);

	push	70311					; 000112a7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1425 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN24@SaveValues

; 1426 : 	{
; 1427 : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN25@SaveValues

; 1428 : 			DisplayOptions.bSpecularLighting = TRUE;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19, 1

; 1429 : 		else

	jmp	SHORT $LN24@SaveValues
$LN25@SaveValues:

; 1430 : 			DisplayOptions.bSpecularLighting = FALSE;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19, 0
$LN24@SaveValues:

; 1431 : 	}
; 1432 : 	
; 1433 : /*	button=(C_Button *)win->FindControl(BILINEAR_FILTERING);
; 1434 : 	if(button != NULL)
; 1435 : 	{
; 1436 : 		if(button->GetState() == C_STATE_1)
; 1437 : 			PlayerOptions.SetDispFlag(DISP_BILINEAR);
; 1438 : 		else
; 1439 : 			PlayerOptions.ClearDispFlag(DISP_BILINEAR);
; 1440 : 	}
; 1441 : */	
; 1442 : /*	button=(C_Button *)win->FindControl(OBJECT_TEXTURES);
; 1443 : 	if(button != NULL)
; 1444 : 	{
; 1445 : 		if(button->GetState() == C_STATE_1)
; 1446 : 			PlayerOptions.ObjFlags |= DISP_OBJ_TEXTURES;
; 1447 : 		else
; 1448 : 			PlayerOptions.ObjFlags &= ~DISP_OBJ_TEXTURES;
; 1449 : 	}
; 1450 : */	
; 1451 : 	slider=(C_Slider *)win->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1452 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN23@SaveValues

; 1453 : 	{
; 1454 : 		PlayerOptions.ObjDetailLevel = ((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*1.5f*GraphicSettingMult + 0.5f);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1399[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1399[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3fc00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16, xmm1
$LN23@SaveValues:

; 1455 : 	}
; 1456 : 
; 1457 : 	slider=(C_Slider *)win->FindControl(SFX_LEVEL);

	push	70145					; 00011201H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1458 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN22@SaveValues

; 1459 : 	{
; 1460 : 		PlayerOptions.SfxLevel = ((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 4.0f + 1.0F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1401[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1401[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40800000
	addss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+36, xmm1
$LN22@SaveValues:

; 1461 : 	}
; 1462 : 
; 1463 : 	slider=(C_Slider *)win->FindControl(PLAYER_BUBBLE_SLIDER);

	push	70143					; 000111ffH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1464 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN21@SaveValues

; 1465 : 	{
; 1466 : 		PlayerOptions.PlayerBubble = ((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*1.5f*GraphicSettingMult + 0.5f);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1403[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1403[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3fc00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40, xmm1

; 1467 : 		FalconLocalSession->SetBubbleRatio( PlayerOptions.PlayerBubble );

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetBubbleRatio@FalconSessionEntity@@QAEXM@Z ; FalconSessionEntity::SetBubbleRatio
$LN21@SaveValues:

; 1468 : 	}
; 1469 : 
; 1470 : 	slider=(C_Slider *)win->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1471 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN20@SaveValues

; 1472 : 	{
; 1473 : 		PlayerOptions.BldDeaggLevel = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 5 + 0.5F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1405[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1405[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40a00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+28, eax

; 1474 : 		PlayerOptions.ObjDeaggLevel = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 100 + 0.5F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1407[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1407[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@42c80000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+24, eax
$LN20@SaveValues:

; 1475 : 	}
; 1476 : 	
; 1477 : 	slider=(C_Slider *)win->FindControl(VEHICLE_SIZE);

	push	70078					; 000111beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1478 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN19@SaveValues

; 1479 : 	{
; 1480 : 		PlayerOptions.ObjMagnification = static_cast<float>(FloatToInt32( (float)slider->GetSliderPos()/(float)( slider->GetSliderMax() - slider->GetSliderMin() ) * 4.0F + 1.0F ));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1441[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1441[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40800000
	addss	xmm1, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	cvtsi2ss xmm0, eax
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+20, xmm0
$LN19@SaveValues:

; 1481 : 	}
; 1482 : 	
; 1483 : /*	slider=(C_Slider *)win->FindControl(TEXTURE_DISTANCE);
; 1484 : 	if(slider != NULL)
; 1485 : 	{
; 1486 : 		PlayerOptions.DispTextureLevel = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 4.0F + 0.5F);
; 1487 : 	}
; 1488 : */
; 1489 : 	slider=(C_Slider *)win->FindControl(TERRAIN_DETAIL);

	push	70098					; 000111d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1490 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN16@SaveValues

; 1491 : 	{
; 1492 : 		int step;
; 1493 : 		step = (slider->GetSliderMax()-slider->GetSliderMin())/(6*GraphicSettingMult);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	ecx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	ecx, 6
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _step$4[ebp], eax

; 1494 : 	
; 1495 : 		if(slider->GetSliderPos() > 2*step)

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	edx, DWORD PTR _step$4[ebp]
	shl	edx, 1
	cmp	eax, edx
	jle	SHORT $LN17@SaveValues

; 1496 : 		{
; 1497 : 			PlayerOptions.DispTerrainDist = (40.0f + ( ((float)slider->GetSliderPos())/step - 2 ) * 10.0f);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _step$4[ebp]
	divss	xmm0, xmm1
	subss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4, xmm0

; 1498 : 			PlayerOptions.DispMaxTerrainLevel = 0;

	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+8, 0

; 1499 : 		}
; 1500 : 		else 

	jmp	$LN16@SaveValues
$LN17@SaveValues:

; 1501 : 		{
; 1502 : 			PlayerOptions.DispTerrainDist = 40.0f;

	movss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4, xmm0

; 1503 : 			PlayerOptions.DispMaxTerrainLevel = FloatToInt32( max(0.0F, 2.0F - slider->GetSliderPos()/step) + 0.5F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cdq
	idiv	DWORD PTR _step$4[ebp]
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR __real@40000000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN116@SaveValues
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv862[ebp], xmm0
	jmp	SHORT $LN117@SaveValues
$LN116@SaveValues:
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cdq
	idiv	DWORD PTR _step$4[ebp]
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR __real@40000000
	subss	xmm1, xmm0
	movss	DWORD PTR tv862[ebp], xmm1
$LN117@SaveValues:
	movss	xmm0, DWORD PTR tv862[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+8, eax
$LN16@SaveValues:

; 1504 : 		}
; 1505 : 	}
; 1506 : 
; 1507 : 	text=(C_Text *)win->FindControl(CAL_TEXT);

	push	70039					; 00011197H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 1508 : 	if(text != NULL)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN15@SaveValues

; 1509 : 		text->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN15@SaveValues:

; 1510 : 	
; 1511 : 	button = (C_Button *) win->FindControl(PLAYERVOICE);

	push	70203					; 0001123bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1512 : 	if(button) PlayerOptions.PlayerRadioVoice = (button->GetState() == C_STATE_1);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN14@SaveValues
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN118@SaveValues
	mov	DWORD PTR tv895[ebp], 1
	jmp	SHORT $LN119@SaveValues
$LN118@SaveValues:
	mov	DWORD PTR tv895[ebp], 0
$LN119@SaveValues:
	mov	dl, BYTE PTR tv895[ebp]
	mov	BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201, dl
$LN14@SaveValues:

; 1513 : 
; 1514 : 	button = (C_Button *) win->FindControl(UICOMMS);

	push	70204					; 0001123cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1515 : 	if(button) PlayerOptions.UIComms = (button->GetState() == C_STATE_1);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN13@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN120@SaveValues
	mov	DWORD PTR tv915[ebp], 1
	jmp	SHORT $LN121@SaveValues
$LN120@SaveValues:
	mov	DWORD PTR tv915[ebp], 0
$LN121@SaveValues:
	mov	dl, BYTE PTR tv915[ebp]
	mov	BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+202, dl
$LN13@SaveValues:

; 1516 : 
; 1517 : 	double pos,range;
; 1518 : 	int volume, i;
; 1519 : 	
; 1520 : 	for(i=0;i<17;i+=2)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@SaveValues
$LN11@SaveValues:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 2
	mov	DWORD PTR _i$[ebp], eax
$LN12@SaveValues:
	cmp	DWORD PTR _i$[ebp], 17			; 00000011H
	jge	$LN10@SaveValues

; 1521 : 	{
; 1522 : 		slider=(C_Slider *)win->FindControl(ENGINE_VOLUME + i);

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 70059				; 000111abH
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1523 : 		if ( slider )

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN9@SaveValues

; 1524 : 		{
; 1525 : 			pos = slider->GetSliderPos();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2sd xmm0, eax
	movsd	QWORD PTR _pos$[ebp], xmm0

; 1526 : 			range = slider->GetSliderMax()-slider->GetSliderMin();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2sd xmm0, esi
	movsd	QWORD PTR _range$[ebp], xmm0

; 1527 : 			
; 1528 : 			pos =   (1.0F - pos / range);

	movsd	xmm0, QWORD PTR _pos$[ebp]
	divsd	xmm0, QWORD PTR _range$[ebp]
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	movsd	QWORD PTR _pos$[ebp], xmm1

; 1529 : 			volume = (int)(pos * pos * (SND_RNG));

	movsd	xmm0, QWORD PTR _pos$[ebp]
	mulsd	xmm0, QWORD PTR _pos$[ebp]
	mulsd	xmm0, QWORD PTR __real@c0b3240000000000
	cvttsd2si edx, xmm0
	mov	DWORD PTR _volume$[ebp], edx

; 1530 : 			
; 1531 : 			PlayerOptions.GroupVol[i/2] = volume;

	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _volume$[ebp]
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A[eax*4+120], ecx

; 1532 : 			F4SetGroupVolume(i/2,volume);

	mov	edx, DWORD PTR _volume$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	call	_F4SetGroupVolume
	add	esp, 8
$LN9@SaveValues:

; 1533 : 		}
; 1534 : 	}

	jmp	$LN11@SaveValues
$LN10@SaveValues:

; 1535 : 
; 1536 : 	PlayerOptions.Realism = GetRealism(win)/100.0f;

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?GetRealism@@YAHPAVC_Window@@@Z		; GetRealism
	add	esp, 4
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+160, xmm0

; 1537 : 
; 1538 : 	win=gMainHandler->FindWindow(SETUP_ADVANCED_WIN);

	push	70151					; 00011207H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1539 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN8@SaveValues
	jmp	$LN114@SaveValues
$LN8@SaveValues:

; 1540 : 
; 1541 : 	//JAM 28Oct03
; 1542 : 	button = (C_Button *)win->FindControl(SETUP_ADVANCED_ANISOTROPIC_FILTERING);

	push	70152					; 00011208H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1543 : 	if(button) DisplayOptions.bAnisotropicFiltering = button->GetState() == C_STATE_1;

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN7@SaveValues
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN122@SaveValues
	mov	DWORD PTR tv976[ebp], 1
	jmp	SHORT $LN123@SaveValues
$LN122@SaveValues:
	mov	DWORD PTR tv976[ebp], 0
$LN123@SaveValues:
	mov	dl, BYTE PTR tv976[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+13, dl
$LN7@SaveValues:

; 1544 : 
; 1545 : 	button = (C_Button *)win->FindControl(SETUP_ADVANCED_RENDER_2DCOCKPIT);

	push	70163					; 00011213H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1546 : 	if(button) DisplayOptions.bRender2DCockpit = button->GetState() == C_STATE_1;

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN6@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN124@SaveValues
	mov	DWORD PTR tv1028[ebp], 1
	jmp	SHORT $LN125@SaveValues
$LN124@SaveValues:
	mov	DWORD PTR tv1028[ebp], 0
$LN125@SaveValues:
	mov	dl, BYTE PTR tv1028[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+17, dl
$LN6@SaveValues:

; 1547 : 
; 1548 : 	button = (C_Button *)win->FindControl(SETUP_ADVANCED_SCREEN_COORD_BIAS_FIX);

	push	70310					; 000112a6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1549 : 	if(button) DisplayOptions.bScreenCoordinateBiasFix = button->GetState() == C_STATE_1;		//Wombat778 4-01-04

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN5@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN126@SaveValues
	mov	DWORD PTR tv1048[ebp], 1
	jmp	SHORT $LN127@SaveValues
$LN126@SaveValues:
	mov	DWORD PTR tv1048[ebp], 0
$LN127@SaveValues:
	mov	dl, BYTE PTR tv1048[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+20, dl
$LN5@SaveValues:

; 1550 : 
; 1551 : //	button = (C_Button *)win->FindControl(SETUP_ADVANCED_SPECULAR_LIGHTING);
; 1552 : //	if(button) DisplayOptions.bSpecularLighting = button->GetState() == C_STATE_1;
; 1553 : 
; 1554 : 	button = (C_Button *)win->FindControl(SETUP_ADVANCED_LINEAR_MIPMAP_FILTERING);

	push	70154					; 0001120aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1555 : 	if(button) DisplayOptions.bLinearMipFiltering = button->GetState() == C_STATE_1;

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN4@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN128@SaveValues
	mov	DWORD PTR tv1068[ebp], 1
	jmp	SHORT $LN129@SaveValues
$LN128@SaveValues:
	mov	DWORD PTR tv1068[ebp], 0
$LN129@SaveValues:
	mov	dl, BYTE PTR tv1068[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+14, dl
$LN4@SaveValues:

; 1556 : 
; 1557 : 	button = (C_Button *)win->FindControl(SETUP_ADVANCED_MIPMAPPING);

	push	70153					; 00011209H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1558 : 	if(button) DisplayOptions.bMipmapping = button->GetState() == C_STATE_1;

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN3@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN130@SaveValues
	mov	DWORD PTR tv1088[ebp], 1
	jmp	SHORT $LN131@SaveValues
$LN130@SaveValues:
	mov	DWORD PTR tv1088[ebp], 0
$LN131@SaveValues:
	mov	dl, BYTE PTR tv1088[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+15, dl
$LN3@SaveValues:

; 1559 : 
; 1560 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_RENDER_TO_TEXTURE);

	push	70155					; 0001120bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1561 : 	if(button) DisplayOptions.bRender2Texture = button->GetState() == C_STATE_1;

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN2@SaveValues
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN132@SaveValues
	mov	DWORD PTR tv1108[ebp], 1
	jmp	SHORT $LN133@SaveValues
$LN132@SaveValues:
	mov	DWORD PTR tv1108[ebp], 0
$LN133@SaveValues:
	mov	dl, BYTE PTR tv1108[ebp]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+12, dl
$LN2@SaveValues:

; 1562 : 
; 1563 : 	//========================================
; 1564 : 	// FRB - Force Z-Buffering
; 1565 :      DisplayOptions.bZBuffering = TRUE;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16, 1

; 1566 : 	// FRB - Force Specular Lighting
; 1567 : //     DisplayOptions.bSpecularLighting = TRUE;
; 1568 :   // DDS textures only
; 1569 : //		 DisplayOptions.m_texMode = TEX_MODE_DDS;
; 1570 : 	//========================================
; 1571 : 
; 1572 : 	
; 1573 : 	PlayerOptions.SaveOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::SaveOptions

; 1574 : 	DisplayOptions.SaveOptions();

	mov	ecx, OFFSET ?DisplayOptions@@3VDisplayOptionsClass@@A ; DisplayOptions
	call	?SaveOptions@DisplayOptionsClass@@QAEHXZ ; DisplayOptionsClass::SaveOptions

; 1575 : 
; 1576 : 	SaveKeyMapList(PlayerOptions.keyfile);

	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?SaveKeyMapList@@YAHPAD@Z		; SaveKeyMapList
	add	esp, 4

; 1577 : 
; 1578 : 	win = gMainHandler->FindWindow(INFO_WIN);

	push	5004					; 0000138cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1579 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@SaveValues

; 1580 : 	{
; 1581 : 		INFOSetupControls();

	call	?INFOSetupControls@@YAXXZ		; INFOSetupControls
$LN1@SaveValues:
$LN114@SaveValues:

; 1582 : 	}
; 1583 : 
; 1584 : }//SaveValues

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN135@SaveValues:
	DD	$LN105@SaveValues
	DD	$LN104@SaveValues
	DD	$LN103@SaveValues
	DD	$LN106@SaveValues
	DD	$LN107@SaveValues
$LN134@SaveValues:
	DB	0
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
$LN136@SaveValues:
	DD	$LN75@SaveValues
	DD	$LN74@SaveValues
	DD	$LN73@SaveValues
	DD	$LN76@SaveValues
	DD	$LN76@SaveValues
	DD	$LN76@SaveValues
	DD	$LN72@SaveValues
?SaveValues@@YAXXZ ENDP					; SaveValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?RestartCB@@YAXJFPAVC_Base@@@Z PROC			; RestartCB

; 1082 : {

	push	ebp
	mov	ebp, esp

; 1083 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@RestartCB

; 1084 : 		return;

	jmp	SHORT $LN2@RestartCB
$LN1@RestartCB:

; 1085 : 
; 1086 : 	PostMessage(gMainHandler->GetAppWnd(),FM_EXIT_GAME,0,0);

	push	0
	push	0
	push	1026					; 00000402H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN2@RestartCB:

; 1087 : }

	pop	ebp
	ret	0
?RestartCB@@YAXJFPAVC_Base@@@Z ENDP			; RestartCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetupOpenLogBookCB@@YAXJFPAVC_Base@@@Z PROC		; SetupOpenLogBookCB

; 376  : {

	push	ebp
	mov	ebp, esp

; 377  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SetupOpenL

; 378  : 		return;

	jmp	SHORT $LN2@SetupOpenL
$LN1@SetupOpenL:

; 379  : 
; 380  : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 381  : 
; 382  : 	OpenLogBookCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z	; OpenLogBookCB
	add	esp, 12					; 0000000cH
$LN2@SetupOpenL:

; 383  : }

	pop	ebp
	ret	0
?SetupOpenLogBookCB@@YAXJFPAVC_Base@@@Z ENDP		; SetupOpenLogBookCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 4
tv94 = -108						; size = 4
$T5 = -104						; size = 4
tv192 = -100						; size = 4
_ctrl$ = -96						; size = 4
$T6 = -92						; size = 4
_size$ = -88						; size = 4
$T7 = -84						; size = 4
_win2$8 = -80						; size = 4
tv159 = -76						; size = 4
_bmap$ = -72						; size = 4
_ID$ = -68						; size = 4
_line$9 = -64						; size = 4
_win$ = -60						; size = 4
_line$ = -56						; size = 4
_tmr$ = -52						; size = 4
$T10 = -48						; size = 16
_client$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadSetupWindows@@YAXXZ PROC				; LoadSetupWindows

; 186  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadSetupWindows@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 187  : 	long		ID=0;

	mov	DWORD PTR _ID$[ebp], 0

; 188  : 	int			size=0;

	mov	DWORD PTR _size$[ebp], 0

; 189  : 	C_Button	*ctrl=NULL;

	mov	DWORD PTR _ctrl$[ebp], 0

; 190  : 	C_Window	*win=NULL;

	mov	DWORD PTR _win$[ebp], 0

; 191  : 	C_TimerHook *tmr=NULL;

	mov	DWORD PTR _tmr$[ebp], 0

; 192  : 	C_Line		*line=NULL;

	mov	DWORD PTR _line$[ebp], 0

; 193  : 	C_Bitmap	*bmap=NULL;

	mov	DWORD PTR _bmap$[ebp], 0

; 194  : 	UI95_RECT	client;
; 195  : 
; 196  : 	//if setup is already loaded, we only need to make sure all the control
; 197  : 	//settings are up to date
; 198  : 	if(STPLoaded) 

	cmp	DWORD PTR ?STPLoaded@@3HA, 0		; STPLoaded
	je	SHORT $LN13@LoadSetupW

; 199  : 	{
; 200  : 		STPSetupControls();

	call	?STPSetupControls@@YAXXZ		; STPSetupControls

; 201  : 		if(KeyVar.NeedUpdate)

	cmp	DWORD PTR ?KeyVar@@3UKeyVars@@A+24, 0
	je	SHORT $LN12@LoadSetupW

; 202  : 		{
; 203  : 			UpdateKeyMapList(PlayerOptions.keyfile,1);

	push	1
	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?UpdateKeyMapList@@YAHPADH@Z		; UpdateKeyMapList
	add	esp, 8

; 204  : 			KeyVar.NeedUpdate = FALSE;

	mov	DWORD PTR ?KeyVar@@3UKeyVars@@A+24, 0
$LN12@LoadSetupW:

; 205  : 		}
; 206  : 		return;

	jmp	$LN14@LoadSetupW
$LN13@LoadSetupW:

; 207  : 	}
; 208  : 
; 209  : 	//Do basic UI setup of window
; 210  : 	if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN11@LoadSetupW

; 211  : 		gMainParser->LoadImageList("st_res.lst");

	push	OFFSET ??_C@_0L@JFJOIEB@st_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 212  : 	else

	jmp	SHORT $LN10@LoadSetupW
$LN11@LoadSetupW:

; 213  : 		gMainParser->LoadImageList("st_art.lst");

	push	OFFSET ??_C@_0L@EEBBEMHB@st_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN10@LoadSetupW:

; 214  : 	gMainParser->LoadSoundList("st_snd.lst");

	push	OFFSET ??_C@_0L@NJCHIOAG@st_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 215  : 	gMainParser->LoadWindowList("st_scf.lst");	// Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0L@PFDIEOMN@st_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 216  : 	
; 217  : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN9@LoadSetupW:

; 218  : 	while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN8@LoadSetupW

; 219  : 	{
; 220  : 		//Hookup the callbacks
; 221  : 		HookupSetupControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupSetupControls@@YAXJ@Z		; HookupSetupControls
	add	esp, 4

; 222  : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 223  : 	}

	jmp	SHORT $LN9@LoadSetupW
$LN8@LoadSetupW:

; 224  : 	
; 225  : 	
; 226  : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 227  : 	if(win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN2@LoadSetupW

; 228  : 	{
; 229  : 		//timer to update joystick bmp on controls tab
; 230  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN16@LoadSetupW
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN17@LoadSetupW
$LN16@LoadSetupW:
	mov	DWORD PTR tv94[ebp], 0
$LN17@LoadSetupW:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _tmr$[ebp], edx

; 231  : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 232  : 		tmr->SetUpdateCallback(GenericTimerCB);

	push	OFFSET ?GenericTimerCB@@YAXJFPAVC_Base@@@Z ; GenericTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 233  : 		tmr->SetRefreshCallback(RefreshJoystickCB);

	push	OFFSET ?RefreshJoystickCB@@YAXJFPAVC_Base@@@Z ; RefreshJoystickCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 234  : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,1); // Timer activates every 80 mseconds (Only when this window is open)

	push	1
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 235  : 		tmr->SetCluster(8004);

	push	8004					; 00001f44H
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 236  : 		win->AddControl(tmr);

	mov	eax, DWORD PTR _tmr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 237  : 		
; 238  : 		//timer to update the view position on graphics tab
; 239  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN18@LoadSetupW
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv159[ebp], eax
	jmp	SHORT $LN19@LoadSetupW
$LN18@LoadSetupW:
	mov	DWORD PTR tv159[ebp], 0
$LN19@LoadSetupW:
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _tmr$[ebp], edx

; 240  : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 241  : 		tmr->SetUpdateCallback(GenericTimerCB);

	push	OFFSET ?GenericTimerCB@@YAXJFPAVC_Base@@@Z ; GenericTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 242  : 		tmr->SetRefreshCallback(ChangeViewpointCB);

	push	OFFSET ?ChangeViewpointCB@@YAXJFPAVC_Base@@@Z ; ChangeViewpointCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 243  : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,1); // Timer activates every 80 mseconds (Only when this window is open)

	push	1
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 244  : 		tmr->SetCluster(8002);

	push	8002					; 00001f42H
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 245  : 		win->AddControl(tmr);

	mov	eax, DWORD PTR _tmr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 246  : 
; 247  : 		//timer to generate new radio message calls on sound tab
; 248  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN20@LoadSetupW
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv192[ebp], eax
	jmp	SHORT $LN21@LoadSetupW
$LN20@LoadSetupW:
	mov	DWORD PTR tv192[ebp], 0
$LN21@LoadSetupW:
	mov	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$[ebp], edx

; 249  : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 250  : 		tmr->SetUpdateCallback(GenericTimerCB);

	push	OFFSET ?GenericTimerCB@@YAXJFPAVC_Base@@@Z ; GenericTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 251  : 		tmr->SetRefreshCallback(PlayVoicesCB);

	push	OFFSET ?PlayVoicesCB@@YAXJFPAVC_Base@@@Z ; PlayVoicesCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 252  : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,100); // Timer activates every 8 seconds (Only when this window is open)

	push	100					; 00000064H
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 253  : 		tmr->SetCluster(8003);

	push	8003					; 00001f43H
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 254  : 		win->AddControl(tmr);

	mov	eax, DWORD PTR _tmr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 255  : 		
; 256  : 		//make sure sim tab is selected the first time in
; 257  : 		ctrl=(C_Button *)win->FindControl(SIM_TAB);

	push	70004					; 00011174H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 258  : 		SetupRadioCB(SETUP_WIN,C_TYPE_LMOUSEUP,ctrl);

	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	push	52					; 00000034H
	push	70002					; 00011172H
	call	?SetupRadioCB@@YAXJFPAVC_Base@@@Z	; SetupRadioCB
	add	esp, 12					; 0000000cH

; 259  : 		
; 260  : 		bmap=(C_Bitmap *)win->FindControl(JOY_INDICATOR);

	push	70088					; 000111c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmap$[ebp], eax

; 261  : 		if(bmap != NULL)

	cmp	DWORD PTR _bmap$[ebp], 0
	je	SHORT $LN6@LoadSetupW

; 262  : 		{
; 263  : 			size = bmap->GetH() + 1;

	mov	ecx, DWORD PTR _bmap$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	eax, 1
	mov	DWORD PTR _size$[ebp], eax
$LN6@LoadSetupW:

; 264  : 		}
; 265  : 		
; 266  : 		//use joystick.dat to calibrate joystick
; 267  : 		//Calibration.calibrated = CalibrateFile();
; 268  : 		
; 269  : 		client = win->GetClientArea(1);

	push	1
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetClientArea@C_Window@@QAE?AUUI95_RECT@@J@Z ; C_Window::GetClientArea
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _client$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _client$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _client$[ebp+12], edx

; 270  : 		
; 271  : 		//setup scale for manipulating joystick control on controls tab
; 272  : 		//if(Calibration.calibrated)
; 273  : 			JoyScale = (float)(client.right - client.left - size)/2.0F;

	mov	eax, DWORD PTR _client$[ebp+8]
	sub	eax, DWORD PTR _client$[ebp]
	sub	eax, DWORD PTR _size$[ebp]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?JoyScale@@3MA, xmm0

; 274  : 		//else
; 275  : 			//JoyScale = (float)(client.right - client.left - size)/65536.0F;
; 276  : 		
; 277  : #if 0	// Retro 17Jan2004
; 278  : 		//setup scale for manipulating rudder control on controls tab
; 279  : 		line=(C_Line *)win->FindControl(RUDDER);
; 280  : 		if(line != NULL)
; 281  : 		{
; 282  : 			if( !IO.AnalogIsUsed(AXIS_YAW) )	// Retro 31Dec2003
; 283  : 				line->SetColor(RGB(130,130,130)); //grey
; 284  : 			//if(Calibration.calibrated)
; 285  : 				RudderScale = (line->GetH() )/2.0F;
; 286  : 			//else
; 287  : 				//RudderScale = (line->GetH() )/65536.0F;
; 288  : 			
; 289  : 			Rudder.left = line->GetX();
; 290  : 			Rudder.right = line->GetX() + line->GetW();
; 291  : 			Rudder.top = line->GetY();
; 292  : 			Rudder.bottom = line->GetY() + line->GetH();
; 293  : 		}
; 294  : 		
; 295  : 		//setup scale for manipulating throttle control on controls tab
; 296  : 		line=(C_Line *)win->FindControl(THROTTLE);
; 297  : 		if(line != NULL)
; 298  : 		{
; 299  : 			if( !IO.AnalogIsUsed(AXIS_THROTTLE) )	// Retro 31Dec2003
; 300  : 				line->SetColor(RGB(130,130,130)); //grey
; 301  : 
; 302  : 			//if(Calibration.calibrated)
; 303  : 				ThrottleScale = (float)line->GetH();
; 304  : 			//else
; 305  : 				//ThrottleScale = (line->GetH())/65536.0F;
; 306  : 			
; 307  : 			Throttle.left = line->GetX();
; 308  : 			Throttle.right = line->GetX() + line->GetW();
; 309  : 			Throttle.top = line->GetY();
; 310  : 			Throttle.bottom = line->GetY() + line->GetH();
; 311  : 			
; 312  : 		}
; 313  : #else
; 314  : 		// Retro 17Jan2004 - now caters to both throttle axis
; 315  : 		//setup scale for manipulating rudder control on controls tab
; 316  : 		line=(C_Line *)win->FindControl(RUDDER);

	push	70038					; 00011196H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 317  : 		if(line != NULL)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN5@LoadSetupW

; 318  : 		{
; 319  : 			RudderScale = (line->GetH() )/2.0F;

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?RudderScale@@3MA, xmm0

; 320  : 			Rudder.left = line->GetX();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	DWORD PTR ?Rudder@@3UtagRECT@@A, eax

; 321  : 			Rudder.right = line->GetX() + line->GetW();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	mov	DWORD PTR ?Rudder@@3UtagRECT@@A+8, esi

; 322  : 			Rudder.top = line->GetY();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	DWORD PTR ?Rudder@@3UtagRECT@@A+4, eax

; 323  : 			Rudder.bottom = line->GetY() + line->GetH();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	mov	DWORD PTR ?Rudder@@3UtagRECT@@A+12, esi
$LN5@LoadSetupW:

; 324  : 		}
; 325  : 		//setup scale for manipulating throttle control on controls tab
; 326  : 		line=(C_Line *)win->FindControl(THROTTLE);

	push	70037					; 00011195H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 327  : 		if(line != NULL)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN4@LoadSetupW

; 328  : 		{
; 329  : 			ThrottleScale = (float)line->GetH();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR ?ThrottleScale@@3MA, xmm0

; 330  : 			Throttle.left = line->GetX();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	DWORD PTR ?Throttle@@3UtagRECT@@A, eax

; 331  : 			Throttle.right = line->GetX() + line->GetW();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	mov	DWORD PTR ?Throttle@@3UtagRECT@@A+8, esi

; 332  : 			Throttle.top = line->GetY();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	DWORD PTR ?Throttle@@3UtagRECT@@A+4, eax

; 333  : 			Throttle.bottom = line->GetY() + line->GetH();

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	mov	DWORD PTR ?Throttle@@3UtagRECT@@A+12, esi

; 334  : 
; 335  : 			// looks strange but works (the function needs a control on the controller-sheet)
; 336  : 			// this function activates/deactivates the bars bases on availability
; 337  : 			SetThrottleAndRudderBars(line);

	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?SetThrottleAndRudderBars@@YAXPAVC_Base@@@Z ; SetThrottleAndRudderBars
	add	esp, 4
$LN4@LoadSetupW:

; 338  : 		}
; 339  : #endif
; 340  : 
; 341  : 		// Retro 27Mar2004 - a bar to show the value of an analogue axis
; 342  : 		// ..actually there are about 20+ of these, but I use the coords of one, the
; 343  : 		// others are (or rather: should be) aligned to this one
; 344  : 		C_Window* win2=gMainHandler->FindWindow(SETUP_CONTROL_ADVANCED_WIN);

	push	70221					; 0001124dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win2$8[ebp], eax

; 345  : 		if(!win2) return;

	cmp	DWORD PTR _win2$8[ebp], 0
	jne	SHORT $LN3@LoadSetupW
	jmp	$LN14@LoadSetupW
$LN3@LoadSetupW:

; 346  : 
; 347  : 		C_Line* line=(C_Line *)win2->FindControl(SETUP_ADVANCED_THROTTLE_VAL);

	push	70324					; 000112b4H
	mov	ecx, DWORD PTR _win2$8[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$9[ebp], eax

; 348  : 		if(line != NULL)

	cmp	DWORD PTR _line$9[ebp], 0
	je	SHORT $LN2@LoadSetupW

; 349  : 		{
; 350  : 			AxisValueBox.left = line->GetX();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	DWORD PTR ?AxisValueBox@@3UtagRECT@@A, eax

; 351  : 			AxisValueBox.right = line->GetX() + line->GetW();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	mov	DWORD PTR ?AxisValueBox@@3UtagRECT@@A+8, esi

; 352  : 			AxisValueBox.top = line->GetY();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	DWORD PTR ?AxisValueBox@@3UtagRECT@@A+4, eax

; 353  : 			AxisValueBox.bottom = line->GetY() + line->GetH();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	esi, eax
	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	esi, eax
	mov	DWORD PTR ?AxisValueBox@@3UtagRECT@@A+12, esi

; 354  : 			AxisValueBoxHScale = (float)line->GetH();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR ?AxisValueBoxHScale@@3MA, xmm0

; 355  : 			AxisValueBoxWScale = (float)line->GetW();

	mov	ecx, DWORD PTR _line$9[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	cvtsi2ss xmm0, eax
	movss	DWORD PTR ?AxisValueBoxWScale@@3MA, xmm0
$LN2@LoadSetupW:

; 356  : 		}
; 357  : 		else
; 358  : 		{
; 359  : 			ShiAssert(false);
; 360  : 		}
; 361  : 		// Retro end
; 362  : 				
; 363  : 	}
; 364  : 	
; 365  : 	InitKeyDescrips();

	call	?InitKeyDescrips@@YAXXZ			; InitKeyDescrips

; 366  : 	//set all the controls to their correct positions according to the saved options file
; 367  : 	STPSetupControls();	

	call	?STPSetupControls@@YAXXZ		; STPSetupControls

; 368  : 	
; 369  : 	CreateKeyMapList( PlayerOptions.keyfile);

	push	OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?CreateKeyMapList@@YAHPAD@Z		; CreateKeyMapList
	add	esp, 4

; 370  : 
; 371  : 	STPLoaded++;

	mov	edx, DWORD PTR ?STPLoaded@@3HA		; STPLoaded
	add	edx, 1
	mov	DWORD PTR ?STPLoaded@@3HA, edx		; STPLoaded
$LN14@LoadSetupW:

; 372  : }//LoadSetupWindows

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadSetupWindows@@YAXXZ$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadSetupWindows@@YAXXZ$1:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadSetupWindows@@YAXXZ$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadSetupWindows@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadSetupWindows@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadSetupWindows@@YAXXZ ENDP				; LoadSetupWindows
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
_POVSymbolCount$1 = -116				; size = 4
$T2 = -112						; size = 4
tv86 = -108						; size = 4
$T3 = -104						; size = 4
tv92 = -100						; size = 4
_viewpt$4 = -96						; size = 4
_hasPOV$5 = -92						; size = 4
$T6 = -88						; size = 4
$T7 = -84						; size = 4
_i$ = -80						; size = 4
_i$8 = -76						; size = 4
_button$ = -72						; size = 4
_devcaps$9 = -68					; size = 44
_POVSymbols$10 = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetupRadioCB@@YAXJFPAVC_Base@@@Z PROC			; SetupRadioCB

; 991  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 992  : 	int i;
; 993  : 	C_Button *button;
; 994  : 	
; 995  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN15@SetupRadio

; 996  : 		return;

	jmp	$LN16@SetupRadio
$LN15@SetupRadio:

; 997  : /*
; 998  : 	if(Calibration.calibrating)
; 999  : 	{
; 1000 : 		StopCalibrating(control);
; 1001 : 	}*/
; 1002 : 	
; 1003 : 	ready = FALSE;

	mov	DWORD PTR ?ready@@3HA, 0		; ready

; 1004 : 	
; 1005 : 	
; 1006 : 	if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	$LN14@SetupRadio

; 1007 : 	{
; 1008 : 		F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 1009 : 		RViewPoint	*viewpt;
; 1010 : 		viewpt = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _viewpt$4[ebp], eax

; 1011 : 		viewpt->RemoveObject(Smoke);

	mov	edx, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	push	edx
	mov	ecx, DWORD PTR _viewpt$4[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject

; 1012 : 		delete Smoke;

	mov	eax, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN18@SetupRadio
	push	1
	mov	edx, DWORD PTR $T7[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN19@SetupRadio
$LN18@SetupRadio:
	mov	DWORD PTR tv86[ebp], 0
$LN19@SetupRadio:

; 1013 : 		Smoke = NULL;

	mov	DWORD PTR ?Smoke@@3PAVDrawable2D@@A, 0	; Smoke

; 1014 : 		SetupViewer->Cleanup();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 1015 : 		delete SetupViewer;

	mov	eax, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN20@SetupRadio
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN21@SetupRadio
$LN20@SetupRadio:
	mov	DWORD PTR tv92[ebp], 0
$LN21@SetupRadio:

; 1016 : 		SetupViewer = NULL;

	mov	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer

; 1017 : 		F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 1018 : 		button=(C_Button *)control->Parent_->FindControl(RENDER);

	push	70083					; 000111c3H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1019 : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN14@SetupRadio

; 1020 : 		{
; 1021 : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN14@SetupRadio:

; 1022 : 		}
; 1023 : 	}
; 1024 : 	
; 1025 : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 1026 : 
; 1027 : 	i=1;

	mov	DWORD PTR _i$[ebp], 1
$LN12@SetupRadio:

; 1028 : 	while(control->GetUserNumber(i))

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN11@SetupRadio

; 1029 : 	{
; 1030 : 		control->Parent_->HideCluster(control->GetUserNumber(i));

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1031 : 		i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 1032 : 	}

	jmp	SHORT $LN12@SetupRadio
$LN11@SetupRadio:

; 1033 : 	control->Parent_->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1034 : 	
; 1035 : 	control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 1036 : 	
; 1037 : 	Cluster = control->GetUserNumber(0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR ?Cluster@@3JA, eax		; Cluster

; 1038 : 
; 1039 : 	// Retro 31Dec2003
; 1040 : 	// haha.. ok almost no difference to the old one..
; 1041 : 	if(control->GetUserNumber(0) == 8004)

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 8004				; 00001f44H
	jne	$LN16@SetupRadio

; 1042 : 	{
; 1043 : 		int hasPOV= FALSE;

	mov	DWORD PTR _hasPOV$5[ebp], 0

; 1044 : extern AxisMapping AxisMap;
; 1045 : 		if ((gTotalJoy)&&(AxisMap.FlightControlDevice != -1))

	cmp	DWORD PTR ?gTotalJoy@@3HA, 0		; gTotalJoy
	je	SHORT $LN9@SetupRadio
	cmp	DWORD PTR ?AxisMap@@3UAxisMapping@@A, -1
	je	SHORT $LN9@SetupRadio

; 1046 : 		{
; 1047 : 			DIDEVCAPS				devcaps;
; 1048 : 			devcaps.dwSize = sizeof(DIDEVCAPS);

	mov	DWORD PTR _devcaps$9[ebp], 44		; 0000002cH

; 1049 : 
; 1050 : 			ShiAssert(FALSE == F4IsBadReadPtr(gpDIDevice[AxisMap.FlightControlDevice], sizeof *gpDIDevice[AxisMap.FlightControlDevice])); // JPO CTD
; 1051 : 
; 1052 : 			if (gpDIDevice[AxisMap.FlightControlDevice])

	mov	ecx, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	cmp	DWORD PTR ?gpDIDevice@@3PAPAUIDirectInputDevice8A@@A[ecx*4], 0
	je	SHORT $LN9@SetupRadio

; 1053 : 			{
; 1054 : 				gpDIDevice[AxisMap.FlightControlDevice]->GetCapabilities(&devcaps);

	lea	edx, DWORD PTR _devcaps$9[ebp]
	push	edx
	mov	eax, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	mov	ecx, DWORD PTR ?gpDIDevice@@3PAPAUIDirectInputDevice8A@@A[eax*4]
	mov	edx, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	mov	eax, DWORD PTR ?gpDIDevice@@3PAPAUIDirectInputDevice8A@@A[edx*4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx

; 1055 : 				if(devcaps.dwPOVs > 0)

	cmp	DWORD PTR _devcaps$9[ebp+20], 0
	jbe	SHORT $LN9@SetupRadio

; 1056 : 					hasPOV = TRUE;

	mov	DWORD PTR _hasPOV$5[ebp], 1
$LN9@SetupRadio:

; 1057 : 			}
; 1058 : 		}
; 1059 : 
; 1060 : 		HideKeyStatusLines(control->Parent_);

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?HideKeyStatusLines@@YAXPAVC_Window@@@Z	; HideKeyStatusLines
	add	esp, 4

; 1061 : 
; 1062 : 		const int POVSymbols[] = { LEFT_HAT, RIGHT_HAT, CENTER_HAT, UP_HAT, DOWN_HAT };

	mov	DWORD PTR _POVSymbols$10[ebp], 70041	; 00011199H
	mov	DWORD PTR _POVSymbols$10[ebp+4], 70040	; 00011198H
	mov	DWORD PTR _POVSymbols$10[ebp+8], 70093	; 000111cdH
	mov	DWORD PTR _POVSymbols$10[ebp+12], 70042	; 0001119aH
	mov	DWORD PTR _POVSymbols$10[ebp+16], 70043	; 0001119bH

; 1063 : 		const int POVSymbolCount = sizeof(POVSymbols)/sizeof(int);

	mov	DWORD PTR _POVSymbolCount$1[ebp], 5

; 1064 : 
; 1065 : 		for (int i = 0; i < POVSymbolCount; i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN6@SetupRadio
$LN5@SetupRadio:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN6@SetupRadio:
	cmp	DWORD PTR _i$8[ebp], 5
	jge	SHORT $LN16@SetupRadio

; 1066 : 		{
; 1067 : 			button=(C_Button *)control->Parent_->FindControl(POVSymbols[i]);

	mov	eax, DWORD PTR _i$8[ebp]
	mov	ecx, DWORD PTR _POVSymbols$10[ebp+eax*4]
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1068 : 			if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN3@SetupRadio

; 1069 : 			{
; 1070 : 				if (!hasPOV)

	cmp	DWORD PTR _hasPOV$5[ebp], 0
	jne	SHORT $LN2@SetupRadio

; 1071 : 					button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1072 : 				else

	jmp	SHORT $LN1@SetupRadio
$LN2@SetupRadio:

; 1073 : 					button->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN1@SetupRadio:

; 1074 : 				button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@SetupRadio:

; 1075 : 			}
; 1076 : 		}

	jmp	SHORT $LN5@SetupRadio
$LN16@SetupRadio:

; 1077 : 	}
; 1078 : }//SetupRadioCallback

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetupRadioCB@@YAXJFPAVC_Base@@@Z ENDP			; SetupRadioCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
tv1908 = -76						; size = 4
_step$1 = -72						; size = 4
tv1297 = -68						; size = 4
tv1092 = -64						; size = 4
tv348 = -60						; size = 4
_nIndex$2 = -56						; size = 4
_pDI$3 = -52						; size = 4
tv267 = -48						; size = 4
tv132 = -44						; size = 4
_text$ = -40						; size = 4
tv240 = -36						; size = 4
tv213 = -32						; size = 4
tv186 = -28						; size = 4
tv159 = -24						; size = 4
_ebox$ = -20						; size = 4
_slider$ = -16						; size = 4
_win$ = -12						; size = 4
_lbox$ = -8						; size = 4
_button$ = -4						; size = 4
?STPSetupControls@@YAXXZ PROC				; STPSetupControls

; 388  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi

; 389  : 	C_Window	*win;
; 390  : 	C_Button	*button;
; 391  : 	C_Text		*text;
; 392  : 	C_ListBox	*lbox;
; 393  : 	C_Slider	*slider;
; 394  : 	C_EditBox	*ebox;
; 395  : 	
; 396  : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 397  : 	
; 398  : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN124@STPSetupCo

; 399  : 		return;

	jmp	$LN125@STPSetupCo
$LN124@STPSetupCo:

; 400  : 	
; 401  : 	lbox=(C_ListBox *)win->FindControl(SET_FLTMOD);

	push	70006					; 00011176H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 402  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN123@STPSetupCo

; 403  : 	{
; 404  : 		if(PlayerOptions.GetFlightModelType()==FMAccurate)

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetFlightModelType@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetFlightModelType
	cmp	eax, 2
	jne	SHORT $LN122@STPSetupCo

; 405  : 			lbox->SetValue(SET_FLTMOD_1);

	push	70007					; 00011177H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 406  : 		else

	jmp	SHORT $LN121@STPSetupCo
$LN122@STPSetupCo:

; 407  : 			lbox->SetValue(SET_FLTMOD_2);

	push	70008					; 00011178H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN121@STPSetupCo:

; 408  : 
; 409  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN123@STPSetupCo:

; 410  : 	}
; 411  : 	
; 412  : 	lbox=(C_ListBox *)win->FindControl(SET_RADAR);

	push	70009					; 00011179H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 413  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN120@STPSetupCo

; 414  : 	{
; 415  : 		switch(PlayerOptions.GetAvionicsType())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetAvionicsType@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetAvionicsType
	mov	DWORD PTR tv132[ebp], eax
	cmp	DWORD PTR tv132[ebp], 3
	ja	SHORT $LN118@STPSetupCo
	mov	ecx, DWORD PTR tv132[ebp]
	jmp	DWORD PTR $LN133@STPSetupCo[ecx*4]
$LN117@STPSetupCo:

; 416  : 		{
; 417  : 			// M.N. full realism mode added
; 418  : 		case ATRealisticAV:
; 419  : 			lbox->SetValue(SET_RADAR_0);

	push	70193					; 00011231H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 420  : 			break;

	jmp	SHORT $LN118@STPSetupCo
$LN116@STPSetupCo:

; 421  : 		case ATRealistic:
; 422  : 			lbox->SetValue(SET_RADAR_1);

	push	70010					; 0001117aH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 423  : 			break;

	jmp	SHORT $LN118@STPSetupCo
$LN115@STPSetupCo:

; 424  : 		case ATSimplified:
; 425  : 			lbox->SetValue(SET_RADAR_2);

	push	70011					; 0001117bH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 426  : 			break;

	jmp	SHORT $LN118@STPSetupCo
$LN114@STPSetupCo:

; 427  : 		case ATEasy:
; 428  : 			lbox->SetValue(SET_RADAR_3);

	push	70012					; 0001117cH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN118@STPSetupCo:

; 429  : 			break;
; 430  : 		}
; 431  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN120@STPSetupCo:

; 432  : 	}
; 433  : 	
; 434  : 	lbox=(C_ListBox *)win->FindControl(SET_WEAPEFF);

	push	70017					; 00011181H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 435  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN113@STPSetupCo

; 436  : 	{
; 437  : 		switch(PlayerOptions.GetWeaponEffectiveness())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetWeaponEffectiveness@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetWeaponEffectiveness
	mov	DWORD PTR tv159[ebp], eax
	cmp	DWORD PTR tv159[ebp], 0
	je	SHORT $LN108@STPSetupCo
	cmp	DWORD PTR tv159[ebp], 1
	je	SHORT $LN109@STPSetupCo
	cmp	DWORD PTR tv159[ebp], 2
	je	SHORT $LN110@STPSetupCo
	jmp	SHORT $LN111@STPSetupCo
$LN110@STPSetupCo:

; 438  : 		{
; 439  : 		case WEAccurate:
; 440  : 			lbox->SetValue(SET_WEAPEFF_1);

	push	70018					; 00011182H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 441  : 			break;

	jmp	SHORT $LN111@STPSetupCo
$LN109@STPSetupCo:

; 442  : 		case WEEnhanced:
; 443  : 			lbox->SetValue(SET_WEAPEFF_2);

	push	70019					; 00011183H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 444  : 			break;

	jmp	SHORT $LN111@STPSetupCo
$LN108@STPSetupCo:

; 445  : 		case WEExaggerated:
; 446  : 			lbox->SetValue(SET_WEAPEFF_3);

	push	70020					; 00011184H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN111@STPSetupCo:

; 447  : 			break;
; 448  : 		}
; 449  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN113@STPSetupCo:

; 450  : 	}
; 451  : 	
; 452  : 	lbox=(C_ListBox *)win->FindControl(SET_AUTOPILOT);

	push	70013					; 0001117dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 453  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN107@STPSetupCo

; 454  : 	{
; 455  : 		switch(PlayerOptions.GetAutopilotMode())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetAutopilotMode@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetAutopilotMode
	mov	DWORD PTR tv186[ebp], eax
	cmp	DWORD PTR tv186[ebp], 0
	je	SHORT $LN102@STPSetupCo
	cmp	DWORD PTR tv186[ebp], 1
	je	SHORT $LN103@STPSetupCo
	cmp	DWORD PTR tv186[ebp], 2
	je	SHORT $LN104@STPSetupCo
	jmp	SHORT $LN105@STPSetupCo
$LN104@STPSetupCo:

; 456  : 		{
; 457  : 		case APNormal:
; 458  : 			lbox->SetValue(SET_AUTO_1);

	push	70014					; 0001117eH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 459  : 			break;

	jmp	SHORT $LN105@STPSetupCo
$LN103@STPSetupCo:

; 460  : 		case APEnhanced:
; 461  : 			lbox->SetValue(SET_AUTO_2);

	push	70015					; 0001117fH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 462  : 			break;

	jmp	SHORT $LN105@STPSetupCo
$LN102@STPSetupCo:

; 463  : 		case APIntelligent:
; 464  : 			lbox->SetValue(SET_AUTO_3);

	push	70016					; 00011180H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN105@STPSetupCo:

; 465  : 			break;
; 466  : 		}
; 467  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN107@STPSetupCo:

; 468  : 	}
; 469  : 
; 470  : 	lbox=(C_ListBox *)win->FindControl(SET_REFUELING);

	push	70126					; 000111eeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 471  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN101@STPSetupCo

; 472  : 	{
; 473  : 		switch(PlayerOptions.GetRefuelingMode())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetRefuelingMode@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetRefuelingMode
	mov	DWORD PTR tv213[ebp], eax
	cmp	DWORD PTR tv213[ebp], 1
	je	SHORT $LN98@STPSetupCo
	cmp	DWORD PTR tv213[ebp], 2
	je	SHORT $LN97@STPSetupCo
	cmp	DWORD PTR tv213[ebp], 3
	je	SHORT $LN96@STPSetupCo
	jmp	SHORT $LN99@STPSetupCo
$LN98@STPSetupCo:

; 474  : 		{
; 475  : 		case ARRealistic:
; 476  : 			lbox->SetValue(SET_REFUEL_1);

	push	70127					; 000111efH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 477  : 			break;

	jmp	SHORT $LN99@STPSetupCo
$LN97@STPSetupCo:

; 478  : 		case ARModerated:
; 479  : 			lbox->SetValue(SET_REFUEL_2);

	push	70128					; 000111f0H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 480  : 			break;

	jmp	SHORT $LN99@STPSetupCo
$LN96@STPSetupCo:

; 481  : 		case ARSimplistic:
; 482  : 			lbox->SetValue(SET_REFUEL_3);

	push	70129					; 000111f1H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN99@STPSetupCo:

; 483  : 			break;
; 484  : 		}
; 485  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN101@STPSetupCo:

; 486  : 	}
; 487  : 
; 488  : 	lbox=(C_ListBox *)win->FindControl(SET_PADLOCK);

	push	70130					; 000111f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 489  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN95@STPSetupCo

; 490  : 	{
; 491  : 		switch(PlayerOptions.GetPadlockMode())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetPadlockMode@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetPadlockMode
	mov	DWORD PTR tv240[ebp], eax
	cmp	DWORD PTR tv240[ebp], 0
	je	SHORT $LN90@STPSetupCo
	cmp	DWORD PTR tv240[ebp], 1
	je	SHORT $LN91@STPSetupCo
	cmp	DWORD PTR tv240[ebp], 2
	je	SHORT $LN92@STPSetupCo
	jmp	SHORT $LN93@STPSetupCo
$LN92@STPSetupCo:

; 492  : 		{
; 493  : 		case PDDisabled:
; 494  : 			lbox->SetValue(SET_PADLOCK_4);

	push	70134					; 000111f6H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 495  : 			break;

	jmp	SHORT $LN93@STPSetupCo
$LN91@STPSetupCo:

; 496  : 		case PDRealistic:
; 497  : 			lbox->SetValue(SET_PADLOCK_1);

	push	70131					; 000111f3H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 498  : 			break;

	jmp	SHORT $LN93@STPSetupCo
$LN90@STPSetupCo:

; 499  : 		case PDEnhanced:
; 500  : 			lbox->SetValue(SET_PADLOCK_2);

	push	70132					; 000111f4H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN93@STPSetupCo:

; 501  : 			break;
; 502  : 		//case PDSuper:
; 503  : 		//	lbox->SetValue(SET_PADLOCK_3);
; 504  : 		//	break;
; 505  : 		}
; 506  : 		lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN95@STPSetupCo:

; 507  : 	}
; 508  : 
; 509  : 	lbox=(C_ListBox *)win->FindControl(SET_CANOPY_CUE);

	push	70141					; 000111fdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 510  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN89@STPSetupCo

; 511  : 	{
; 512  : 		switch(PlayerOptions.GetVisualCueMode())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetVisualCueMode@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::GetVisualCueMode
	mov	DWORD PTR tv267[ebp], eax
	cmp	DWORD PTR tv267[ebp], 3
	ja	SHORT $LN87@STPSetupCo
	mov	ecx, DWORD PTR tv267[ebp]
	jmp	DWORD PTR $LN134@STPSetupCo[ecx*4]
$LN86@STPSetupCo:

; 513  : 		{
; 514  : 		case VCNone:
; 515  : 			lbox->SetValue(CUE_NONE);

	push	70138					; 000111faH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 516  : 			break;

	jmp	SHORT $LN87@STPSetupCo
$LN85@STPSetupCo:

; 517  : 		case VCLiftLine:
; 518  : 			lbox->SetValue(CUE_LIFT_LINE);

	push	70139					; 000111fbH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 519  : 			break;

	jmp	SHORT $LN87@STPSetupCo
$LN84@STPSetupCo:

; 520  : 		case VCReflection:
; 521  : 			lbox->SetValue(CUE_REFLECTION_MAP);

	push	70140					; 000111fcH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 522  : 			break;

	jmp	SHORT $LN87@STPSetupCo
$LN83@STPSetupCo:

; 523  : 		case VCBoth:
; 524  : 			lbox->SetValue(CUE_BOTH);

	push	70144					; 00011200H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN87@STPSetupCo:

; 525  : 			break;
; 526  : 		}
; 527  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN89@STPSetupCo:

; 528  : 	}
; 529  : 
; 530  : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 531  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN82@STPSetupCo

; 532  : 	{
; 533  : 		BuildVideoDriverList(lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	call	?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z ; BuildVideoDriverList
	add	esp, 4

; 534  : 
; 535  : 		DisableEnableDrivers(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z ; DisableEnableDrivers
	add	esp, 4

; 536  : 		lbox->SetValue(DisplayOptions.DispVideoDriver + 1);

	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 537  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN82@STPSetupCo:

; 538  : 	}
; 539  : 
; 540  : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 541  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN81@STPSetupCo

; 542  : 	{
; 543  : 		BuildVideoCardList(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?BuildVideoCardList@@YAXPAVC_ListBox@@@Z ; BuildVideoCardList
	add	esp, 4

; 544  : 
; 545  : 		lbox->SetValue(DisplayOptions.DispVideoCard + 1);

	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 546  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN81@STPSetupCo:

; 547  : 	}
; 548  : 	
; 549  : 	lbox=(C_ListBox *)win->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 550  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN79@STPSetupCo

; 551  : 	{
; 552  : 		BuildResolutionList(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?BuildResolutionList@@YAXPAVC_ListBox@@@Z ; BuildResolutionList
	add	esp, 4

; 553  : 
; 554  : 		#if 1
; 555  : 		// OW
; 556  : 		// Handled in BuildResolutionList
; 557  : 		DeviceManager::DDDriverInfo *pDI = FalconDisplay.devmgr.GetDriver(DisplayOptions.DispVideoDriver);

	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	push	edx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z ; DeviceManager::GetDriver
	mov	DWORD PTR _pDI$3[ebp], eax

; 558  : 		if(pDI)

	cmp	DWORD PTR _pDI$3[ebp], 0
	je	SHORT $LN79@STPSetupCo

; 559  : 		{
; 560  : 			int nIndex = pDI->FindDisplayMode(DisplayOptions.DispWidth, DisplayOptions.DispHeight, DisplayOptions.DispDepth);

	mov	eax, DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8
	push	eax
	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2
	push	ecx
	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	push	edx
	mov	ecx, DWORD PTR _pDI$3[ebp]
	call	?FindDisplayMode@DDDriverInfo@DeviceManager@@QAEHHHH@Z ; DeviceManager::DDDriverInfo::FindDisplayMode
	mov	DWORD PTR _nIndex$2[ebp], eax

; 561  : 			lbox->SetValue(nIndex != -1 ? nIndex : 0); 

	cmp	DWORD PTR _nIndex$2[ebp], -1
	je	SHORT $LN127@STPSetupCo
	mov	eax, DWORD PTR _nIndex$2[ebp]
	mov	DWORD PTR tv348[ebp], eax
	jmp	SHORT $LN128@STPSetupCo
$LN127@STPSetupCo:
	mov	DWORD PTR tv348[ebp], 0
$LN128@STPSetupCo:
	mov	ecx, DWORD PTR tv348[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN79@STPSetupCo:

; 562  : 		}
; 563  : 		#else
; 564  : 		DisableEnableResolutions(lbox);
; 565  : 		lbox->SetValue( DisplayOptions.DispWidth ); 
; 566  : 		lbox->Refresh();
; 567  : 		#endif
; 568  : 	}
; 569  : 
; 570  : 	//JAM 20Nov03
; 571  : 	lbox = (C_ListBox *)win->FindControl(SETUP_REALWEATHER);

	push	70207					; 0001123fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 572  : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN75@STPSetupCo

; 573  : 	{
; 574  : 		if( TheCampaign.InMainUI )

	movzx	edx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+68
	test	edx, edx
	je	SHORT $LN77@STPSetupCo

; 575  : 		{
; 576  : 			lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 577  : 			lbox->AddItem(70208,C_TYPE_ITEM,"Sunny");

	push	OFFSET ??_C@_05JCFIOPBP@Sunny?$AA@
	push	50					; 00000032H
	push	70208					; 00011240H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 578  : 			lbox->AddItem(70209,C_TYPE_ITEM,"Fair");

	push	OFFSET ??_C@_04DHPLNOLG@Fair?$AA@
	push	50					; 00000032H
	push	70209					; 00011241H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 579  : 			lbox->AddItem(70210,C_TYPE_ITEM,"Poor");

	push	OFFSET ??_C@_04DMAJLHBF@Poor?$AA@
	push	50					; 00000032H
	push	70210					; 00011242H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 580  : 			lbox->AddItem(70211,C_TYPE_ITEM,"Inclement");

	push	OFFSET ??_C@_09MEHABAOA@Inclement?$AA@
	push	50					; 00000032H
	push	70211					; 00011243H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 581  : 			lbox->SetValue(PlayerOptions.weatherCondition+70207);

	mov	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+44
	add	eax, 70207				; 0001123fH
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 582  : 			lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	jmp	SHORT $LN75@STPSetupCo
$LN77@STPSetupCo:

; 583  : 		}
; 584  : 		else if( ((WeatherClass *)realWeather)->lockedCondition )

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [ecx+16036], 0
	je	SHORT $LN75@STPSetupCo

; 585  : 		{
; 586  : 			lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 587  : 			lbox->AddItem(70212,C_TYPE_ITEM,"Locked");

	push	OFFSET ??_C@_06GFKCFIPE@Locked?$AA@
	push	50					; 00000032H
	push	70212					; 00011244H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 588  : 			lbox->AddItem(70213,C_TYPE_ITEM,"Unlock");

	push	OFFSET ??_C@_06NCJPDCLH@Unlock?$AA@
	push	50					; 00000032H
	push	70213					; 00011245H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 589  : 			lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN75@STPSetupCo:

; 590  : 		}
; 591  : 	}
; 592  : 	//JAM
; 593  : /*
; 594  : 	//THW 2004-01-18
; 595  : 	lbox=(C_ListBox *)win->FindControl(SETUP_SEASON);
; 596  : 	if(lbox != NULL)
; 597  : 	{
; 598  : 		lbox->SetValue(PlayerOptions.Season+70313);
; 599  : 		lbox->Refresh();
; 600  : 	}
; 601  : 	//THW
; 602  : */
; 603  : 	button=(C_Button *)win->FindControl(SET_LOGBOOK);

	push	70036					; 00011194H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 604  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN74@STPSetupCo

; 605  : 	{
; 606  : 		button->SetText(0,UI_logbk.Callsign());

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 607  : 		button->Refresh();

	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN74@STPSetupCo:

; 608  : 	}
; 609  : 	
; 610  : 	button=(C_Button *)win->FindControl(SET_ORDNANCE);

	push	70023					; 00011187H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 611  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN73@STPSetupCo

; 612  : 	{
; 613  : 		if(PlayerOptions.UnlimitedAmmo())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?UnlimitedAmmo@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::UnlimitedAmmo
	test	eax, eax
	je	SHORT $LN72@STPSetupCo

; 614  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 615  : 		else

	jmp	SHORT $LN71@STPSetupCo
$LN72@STPSetupCo:

; 616  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN71@STPSetupCo:

; 617  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN73@STPSetupCo:

; 618  : 	}
; 619  : 	
; 620  : 	button=(C_Button *)win->FindControl(SET_FUEL);

	push	70026					; 0001118aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 621  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN70@STPSetupCo

; 622  : 	{
; 623  : 		if(PlayerOptions.UnlimitedFuel())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?UnlimitedFuel@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::UnlimitedFuel
	test	eax, eax
	je	SHORT $LN69@STPSetupCo

; 624  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 625  : 		else

	jmp	SHORT $LN68@STPSetupCo
$LN69@STPSetupCo:

; 626  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN68@STPSetupCo:

; 627  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN70@STPSetupCo:

; 628  : 	}
; 629  : 	
; 630  : 	button=(C_Button *)win->FindControl(SET_CHAFFLARES);

	push	70024					; 00011188H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 631  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN67@STPSetupCo

; 632  : 	{
; 633  : 		if(PlayerOptions.UnlimitedChaff())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?UnlimitedChaff@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::UnlimitedChaff
	test	eax, eax
	je	SHORT $LN66@STPSetupCo

; 634  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 635  : 		else

	jmp	SHORT $LN65@STPSetupCo
$LN66@STPSetupCo:

; 636  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN65@STPSetupCo:

; 637  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN67@STPSetupCo:

; 638  : 		
; 639  : 	}
; 640  : 	
; 641  : 	button=(C_Button *)win->FindControl(SET_COLLISIONS);

	push	70021					; 00011185H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 642  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN64@STPSetupCo

; 643  : 	{
; 644  : 		if(PlayerOptions.CollisionsOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CollisionsOn@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CollisionsOn
	test	eax, eax
	je	SHORT $LN63@STPSetupCo

; 645  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 646  : 		else

	jmp	SHORT $LN62@STPSetupCo
$LN63@STPSetupCo:

; 647  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN62@STPSetupCo:

; 648  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN64@STPSetupCo:

; 649  : 	}
; 650  : 	
; 651  : 	button=(C_Button *)win->FindControl(SET_BLACKOUT);

	push	70022					; 00011186H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 652  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN61@STPSetupCo

; 653  : 	{
; 654  : 		if(PlayerOptions.BlackoutOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?BlackoutOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::BlackoutOn
	test	eax, eax
	je	SHORT $LN60@STPSetupCo

; 655  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 656  : 		else

	jmp	SHORT $LN59@STPSetupCo
$LN60@STPSetupCo:

; 657  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN59@STPSetupCo:

; 658  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN61@STPSetupCo:

; 659  : 	}
; 660  : 	
; 661  : 	
; 662  : 	button=(C_Button *)win->FindControl(SET_IDTAGS);

	push	70025					; 00011189H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 663  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN58@STPSetupCo

; 664  : 	{
; 665  : 		if(PlayerOptions.NameTagsOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?NameTagsOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::NameTagsOn
	test	eax, eax
	je	SHORT $LN57@STPSetupCo

; 666  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 667  : 		else

	jmp	SHORT $LN56@STPSetupCo
$LN57@STPSetupCo:

; 668  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN56@STPSetupCo:

; 669  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN58@STPSetupCo:

; 670  : 	}
; 671  : 	
; 672  : 	button=(C_Button *)win->FindControl(SET_BULLSEYE_CALLS);

	push	70099					; 000111d3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 673  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN55@STPSetupCo

; 674  : 	{
; 675  : 		if(PlayerOptions.BullseyeOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?BullseyeOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::BullseyeOn
	test	eax, eax
	je	SHORT $LN54@STPSetupCo

; 676  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 677  : 		else

	jmp	SHORT $LN53@STPSetupCo
$LN54@STPSetupCo:

; 678  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN53@STPSetupCo:

; 679  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN55@STPSetupCo:

; 680  : 	}
; 681  : 
; 682  : 	button=(C_Button *)win->FindControl(SET_INVULNERABILITY); //should be SET_INVULNERABLITY

	push	70100					; 000111d4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 683  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN52@STPSetupCo

; 684  : 	{
; 685  : 		if(PlayerOptions.InvulnerableOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?InvulnerableOn@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::InvulnerableOn
	test	eax, eax
	je	SHORT $LN51@STPSetupCo

; 686  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 687  : 		else

	jmp	SHORT $LN50@STPSetupCo
$LN51@STPSetupCo:

; 688  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN50@STPSetupCo:

; 689  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN52@STPSetupCo:

; 690  : 	}
; 691  : 
; 692  : 	// Retro 25Dec2003
; 693  : 	button=(C_Button *)win->FindControl(SETUP_SIM_INFOBAR);

	push	70228					; 00011254H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 694  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN49@STPSetupCo

; 695  : 	{
; 696  : 		if(PlayerOptions.getInfoBar())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?getInfoBar@PlayerOptionsClass@@QBE_NXZ	; PlayerOptionsClass::getInfoBar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN48@STPSetupCo

; 697  : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 698  : 		else

	jmp	SHORT $LN47@STPSetupCo
$LN48@STPSetupCo:

; 699  : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN47@STPSetupCo:

; 700  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN49@STPSetupCo:

; 701  : 	}
; 702  : 
; 703  : 	button=(C_Button *)win->FindControl(SETUP_SIM_SUBTITLES);

	push	70229					; 00011255H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 704  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN46@STPSetupCo

; 705  : 	{
; 706  : 		if(PlayerOptions.getSubtitles())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?getSubtitles@PlayerOptionsClass@@QBE_NXZ ; PlayerOptionsClass::getSubtitles
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN45@STPSetupCo

; 707  : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 708  : 		else

	jmp	SHORT $LN44@STPSetupCo
$LN45@STPSetupCo:

; 709  : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN44@STPSetupCo:

; 710  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN46@STPSetupCo:

; 711  : 	}
; 712  : 	// ..ends
; 713  : 	
; 714  : 	ebox = (C_EditBox *)win->FindControl(ACMI_FILE_SIZE);

	push	70124					; 000111ecH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 715  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN43@STPSetupCo

; 716  : 	{
; 717  : 		ebox->SetInteger( PlayerOptions.AcmiFileSize() );

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?AcmiFileSize@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::AcmiFileSize
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 718  : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN43@STPSetupCo:

; 719  : 	}
; 720  : 
; 721  : 	button=(C_Button *)win->FindControl(AUTO_SCALE);

	push	70110					; 000111deH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 722  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN42@STPSetupCo

; 723  : 	{
; 724  : 		if(PlayerOptions.ObjectDynScalingOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ObjectDynScalingOn@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::ObjectDynScalingOn
	test	eax, eax
	je	SHORT $LN41@STPSetupCo

; 725  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 726  : 		else

	jmp	SHORT $LN40@STPSetupCo
$LN41@STPSetupCo:

; 727  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN40@STPSetupCo:

; 728  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN42@STPSetupCo:

; 729  : 	}
; 730  : 
; 731  : 	button=(C_Button *)win->FindControl(GOUROUD);//GOUROUD

	push	70136					; 000111f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 732  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN39@STPSetupCo

; 733  : 	{
; 734  : 		if(PlayerOptions.GouraudOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GouraudOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GouraudOn
	test	eax, eax
	je	SHORT $LN38@STPSetupCo

; 735  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 736  : 		else

	jmp	SHORT $LN37@STPSetupCo
$LN38@STPSetupCo:

; 737  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN37@STPSetupCo:

; 738  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN39@STPSetupCo:

; 739  : 	}
; 740  : 	
; 741  : 	button=(C_Button *)win->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 742  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN36@STPSetupCo

; 743  : 	{
; 744  : 		if(PlayerOptions.HazingOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?HazingOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::HazingOn
	test	eax, eax
	je	SHORT $LN35@STPSetupCo

; 745  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 746  : 		else

	jmp	SHORT $LN34@STPSetupCo
$LN35@STPSetupCo:

; 747  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN34@STPSetupCo:

; 748  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN36@STPSetupCo:

; 749  : 	}
; 750  : 	
; 751  : 	//JAM 07Dec03
; 752  : 	button=(C_Button *)win->FindControl(SETUP_REALWEATHER_SHADOWS);

	push	70219					; 0001124bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 753  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN33@STPSetupCo

; 754  : 	{
; 755  : 		if(PlayerOptions.ShadowsOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ShadowsOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::ShadowsOn
	test	eax, eax
	je	SHORT $LN32@STPSetupCo

; 756  : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 757  : 		else

	jmp	SHORT $LN31@STPSetupCo
$LN32@STPSetupCo:

; 758  : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN31@STPSetupCo:

; 759  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN33@STPSetupCo:

; 760  : 	}
; 761  : 
; 762  : 	button=(C_Button *)win->FindControl(SETUP_SPECULAR_LIGHTING);

	push	70311					; 000112a7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 763  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN30@STPSetupCo

; 764  : 	{
; 765  : 		if(DisplayOptions.bSpecularLighting)

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19
	test	ecx, ecx
	je	SHORT $LN29@STPSetupCo

; 766  : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 767  : 		else

	jmp	SHORT $LN28@STPSetupCo
$LN29@STPSetupCo:

; 768  : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN28@STPSetupCo:

; 769  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN30@STPSetupCo:

; 770  : 	}
; 771  : 	
; 772  : /*	button=(C_Button *)win->FindControl(OBJECT_TEXTURES);
; 773  : 	if(button != NULL)
; 774  : 	{
; 775  : 		if(PlayerOptions.ObjectTexturesOn())
; 776  : 			button->SetState(C_STATE_1);
; 777  : 		else
; 778  : 			button->SetState(C_STATE_0);
; 779  : 		button->Refresh();
; 780  : 	}
; 781  : */	
; 782  : 	// M.N.
; 783  : 	button=(C_Button *)win->FindControl(PLAYERVOICE);

	push	70203					; 0001123bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 784  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN27@STPSetupCo

; 785  : 	{
; 786  : 		if(PlayerOptions.PlayerRadioVoice)

	movzx	ecx, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201
	test	ecx, ecx
	je	SHORT $LN26@STPSetupCo

; 787  : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 788  : 		else

	jmp	SHORT $LN25@STPSetupCo
$LN26@STPSetupCo:

; 789  : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN25@STPSetupCo:

; 790  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN27@STPSetupCo:

; 791  : 	}
; 792  : 
; 793  : 	button=(C_Button *)win->FindControl(UICOMMS);

	push	70204					; 0001123cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 794  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN24@STPSetupCo

; 795  : 	{
; 796  : 		if(PlayerOptions.UIComms)

	movzx	ecx, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+202
	test	ecx, ecx
	je	SHORT $LN23@STPSetupCo

; 797  : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 798  : 		else

	jmp	SHORT $LN22@STPSetupCo
$LN23@STPSetupCo:

; 799  : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN22@STPSetupCo:

; 800  : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN24@STPSetupCo:

; 801  : 	}
; 802  : 
; 803  : 
; 804  : 	text=(C_Text *)win->FindControl(CAL_TEXT);

	push	70039					; 00011197H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 805  : 	if(text != NULL)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN21@STPSetupCo

; 806  : 		text->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN21@STPSetupCo:

; 807  : 
; 808  : 	InitSoundSetup();

	call	?InitSoundSetup@@YAXXZ			; InitSoundSetup

; 809  : 	
; 810  : 	slider=(C_Slider *)win->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 811  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN20@STPSetupCo

; 812  : 	{
; 813  : 		ebox = (C_EditBox *)win->FindControl(OBJECT_DETAIL_READOUT);

	push	70107					; 000111dbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 814  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN19@STPSetupCo

; 815  : 		{
; 816  : 			PlayerOptions.ObjDetailLevel = min(PlayerOptions.ObjDetailLevel, 2.0F*GraphicSettingMult);

	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm0, DWORD PTR __real@40000000
	comiss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	jbe	SHORT $LN129@STPSetupCo
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	movss	DWORD PTR tv1092[ebp], xmm0
	jmp	SHORT $LN130@STPSetupCo
$LN129@STPSetupCo:
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR tv1092[ebp], xmm0
$LN130@STPSetupCo:
	movss	xmm0, DWORD PTR tv1092[ebp]
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16, xmm0

; 817  : 			ebox->SetInteger( FloatToInt32((PlayerOptions.ObjDetailLevel- .5f)/.25f + 1.5f));

	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	subss	xmm0, DWORD PTR __real@3f000000
	divss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 818  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 819  : 			slider->SetSteps(static_cast<short>(6*GraphicSettingMult));

	mov	ecx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	ecx, 6
	push	ecx
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSteps@C_Slider@@QAEXF@Z		; C_Slider::SetSteps

; 820  : 			slider->SetUserNumber(0,OBJECT_DETAIL_READOUT);

	push	70107					; 000111dbH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN19@STPSetupCo:

; 821  : 		}
; 822  : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.ObjDetailLevel-0.5f)/(1.5f*GraphicSettingMult)));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	subss	xmm1, DWORD PTR __real@3f000000
	mulss	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, DWORD PTR __real@3fc00000
	divss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN20@STPSetupCo:

; 823  : 	}
; 824  : 
; 825  : 	slider=(C_Slider *)win->FindControl(SFX_LEVEL);

	push	70145					; 00011201H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 826  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN18@STPSetupCo

; 827  : 	{
; 828  : 		ebox = (C_EditBox *)win->FindControl(SFX_LEVEL_READOUT);

	push	70146					; 00011202H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 829  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN17@STPSetupCo

; 830  : 		{
; 831  : 			ebox->SetInteger( FloatToInt32(PlayerOptions.SfxLevel));

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+36
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 832  : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 833  : 			slider->SetUserNumber(0,SFX_LEVEL_READOUT);

	push	70146					; 00011202H
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN17@STPSetupCo:

; 834  : 		}
; 835  : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.SfxLevel - 1.0F)/4.0f));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+36
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN18@STPSetupCo:

; 836  : 	}
; 837  : 
; 838  : 	slider=(C_Slider *)win->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 839  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN16@STPSetupCo

; 840  : 	{
; 841  : 		ebox = (C_EditBox *)win->FindControl(DISAGG_LEVEL_READOUT);

	push	70108					; 000111dcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 842  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN15@STPSetupCo

; 843  : 		{
; 844  : 			ebox->SetInteger(PlayerOptions.BldDeaggLevel + 1);

	mov	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+28
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 845  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 846  : 			slider->SetUserNumber(0,DISAGG_LEVEL_READOUT);

	push	70108					; 000111dcH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN15@STPSetupCo:

; 847  : 		}
; 848  : 		slider->SetSliderPos((slider->GetSliderMax()-slider->GetSliderMin())*PlayerOptions.ObjDeaggLevel/100);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	imul	esi, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+24
	mov	eax, esi
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN16@STPSetupCo:

; 849  : 	}
; 850  : 	
; 851  : 		
; 852  : 	slider=(C_Slider *)win->FindControl(VEHICLE_SIZE);

	push	70078					; 000111beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 853  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN13@STPSetupCo

; 854  : 	{
; 855  : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.ObjMagnification - 1.0F)/4.0F));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+20
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 856  : 		ebox = (C_EditBox *)win->FindControl(VEHICLE_SIZE_READOUT);

	push	70109					; 000111ddH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 857  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN13@STPSetupCo

; 858  : 		{
; 859  : 			ebox->SetInteger(FloatToInt32(PlayerOptions.ObjMagnification));

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+20
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 860  : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 861  : 			slider->SetUserNumber(0,VEHICLE_SIZE_READOUT);

	push	70109					; 000111ddH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN13@STPSetupCo:

; 862  : 		}
; 863  : 	}
; 864  : 	
; 865  : /*	slider=(C_Slider *)win->FindControl(TEXTURE_DISTANCE);
; 866  : 	if(slider != NULL)
; 867  : 	{
; 868  : 		ebox = (C_EditBox *)win->FindControl(TEX_DISTANCE_READOUT);
; 869  : 		if(ebox)
; 870  : 		{
; 871  : 			ebox->SetInteger(PlayerOptions.DispTextureLevel + 1);
; 872  : 			ebox->Refresh();
; 873  : 			slider->SetUserNumber(0,TEX_DISTANCE_READOUT);
; 874  : 		}
; 875  : 		slider->SetSliderPos((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.DispTextureLevel)/4);
; 876  : 	}
; 877  : */
; 878  : 	slider=(C_Slider *)win->FindControl(PLAYER_BUBBLE_SLIDER);

	push	70143					; 000111ffH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 879  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN12@STPSetupCo

; 880  : 	{
; 881  : 		ebox = (C_EditBox *)win->FindControl(PLAYER_BUBBLE_READOUT);

	push	70142					; 000111feH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 882  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN11@STPSetupCo

; 883  : 		{
; 884  : 			PlayerOptions.PlayerBubble = min(PlayerOptions.PlayerBubble, 2.0F*GraphicSettingMult);

	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm0, DWORD PTR __real@40000000
	comiss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40
	jbe	SHORT $LN131@STPSetupCo
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40
	movss	DWORD PTR tv1297[ebp], xmm0
	jmp	SHORT $LN132@STPSetupCo
$LN131@STPSetupCo:
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR tv1297[ebp], xmm0
$LN132@STPSetupCo:
	movss	xmm0, DWORD PTR tv1297[ebp]
	movss	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40, xmm0

; 885  : 			ebox->SetInteger( FloatToInt32((PlayerOptions.PlayerBubble - .5f)*4.0F + 1.5F));

	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40
	subss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR __real@40800000
	addss	xmm0, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 886  : 			ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 887  : 			slider->SetSteps(static_cast<short>(6*GraphicSettingMult));

	mov	ecx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	ecx, 6
	push	ecx
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSteps@C_Slider@@QAEXF@Z		; C_Slider::SetSteps

; 888  : 			slider->SetUserNumber(0,PLAYER_BUBBLE_READOUT);

	push	70142					; 000111feH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN11@STPSetupCo:

; 889  : 		}
; 890  : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.PlayerBubble-0.5f)/(1.5f*GraphicSettingMult)));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+40
	subss	xmm1, DWORD PTR __real@3f000000
	mulss	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, DWORD PTR __real@3fc00000
	divss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN12@STPSetupCo:

; 891  : 	}
; 892  : 
; 893  : 	slider=(C_Slider *)win->FindControl(TERRAIN_DETAIL);

	push	70098					; 000111d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 894  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN7@STPSetupCo

; 895  : 	{
; 896  : 		int step;
; 897  : 		step = (slider->GetSliderMax()-slider->GetSliderMin())/(6*GraphicSettingMult);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	ecx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	ecx, 6
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _step$1[ebp], eax

; 898  : 	
; 899  : 		slider->SetSteps(static_cast<short>(6*GraphicSettingMult));

	mov	edx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	edx, 6
	push	edx
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSteps@C_Slider@@QAEXF@Z		; C_Slider::SetSteps

; 900  : 
; 901  : 		if(PlayerOptions.DispTerrainDist > 40)

	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4
	comiss	xmm0, DWORD PTR __real@42200000
	jbe	SHORT $LN9@STPSetupCo

; 902  : 			slider->SetSliderPos(FloatToInt32(step*(2+(PlayerOptions.DispTerrainDist - 40.0F)/10.0F)));

	cvtsi2ss xmm0, DWORD PTR _step$1[ebp]
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4
	subss	xmm1, DWORD PTR __real@42200000
	divss	xmm1, DWORD PTR __real@41200000
	addss	xmm1, DWORD PTR __real@40000000
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 903  : 		else 

	jmp	SHORT $LN8@STPSetupCo
$LN9@STPSetupCo:

; 904  : 			slider->SetSliderPos((2 - PlayerOptions.DispMaxTerrainLevel)*step);

	mov	eax, 2
	sub	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+8
	imul	eax, DWORD PTR _step$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN8@STPSetupCo:

; 905  : 
; 906  : 		ebox = (C_EditBox *)win->FindControl(TEX_DETAIL_READOUT);

	push	70106					; 000111daH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 907  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN7@STPSetupCo

; 908  : 		{
; 909  : 			ebox->SetInteger( FloatToInt32(((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()))*6.0F*GraphicSettingMult + 1.5F));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv1908[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv1908[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40c00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 910  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 911  : 			slider->SetUserNumber(0,TEX_DETAIL_READOUT);

	push	70106					; 000111daH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN7@STPSetupCo:

; 912  : 		}
; 913  : 	}
; 914  : 
; 915  : 
; 916  : 	//ControlsTab
; 917  : 	lbox = (C_ListBox *)win->FindControl(JOYSTICK_SELECT );//JOYSTICK_SELECT

	push	70137					; 000111f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 918  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN6@STPSetupCo

; 919  : 	{
; 920  : 		BuildControllerList(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?BuildControllerList@@YAXPAVC_ListBox@@@Z ; BuildControllerList
	add	esp, 4

; 921  : 
; 922  : extern AxisMapping AxisMap;									// Retro 31Dec2003
; 923  : 		lbox->SetValue(AxisMap.FlightControlDevice+1);		// Retro 31Dec2003

	mov	edx, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 924  : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@STPSetupCo:

; 925  : 	}
; 926  : 	
; 927  : 	//if (S_joycaps.wCaps & JOYCAPS_HASZ)
; 928  : 	if (IO.AnalogIsUsed(AXIS_THROTTLE))	// Retro 31Dec2003

	push	3
	mov	ecx, OFFSET ?IO@@3VSIMLIB_IO_CLASS@@A	; IO
	call	?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z ; SIMLIB_IO_CLASS::AnalogIsUsed
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@STPSetupCo

; 929  : 	{
; 930  : 		button=(C_Button *)win->FindControl(THROTTLE_CHECK);

	push	70044					; 0001119cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 931  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN4@STPSetupCo

; 932  : 		{
; 933  : 			button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 934  : 			button->SetState(C_STATE_1);

	push	1
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 935  : 			button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@STPSetupCo:

; 936  : 		}
; 937  : 	}
; 938  : 	
; 939  : 	if (IO.AnalogIsUsed(AXIS_YAW))	// Retro 31Dec2003

	push	2
	mov	ecx, OFFSET ?IO@@3VSIMLIB_IO_CLASS@@A	; IO
	call	?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z ; SIMLIB_IO_CLASS::AnalogIsUsed
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@STPSetupCo

; 940  : 	{
; 941  : 		button=(C_Button *)win->FindControl(RUDDER_CHECK);

	push	70045					; 0001119dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 942  : 		if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN2@STPSetupCo

; 943  : 		{
; 944  : 			button->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 945  : 			button->SetState(C_STATE_1);

	push	1
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 946  : 			button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@STPSetupCo:

; 947  : 		}
; 948  : 	}
; 949  : 	
; 950  : 	SetRealism(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetRealism@@YAHPAVC_Window@@@Z		; SetRealism
	add	esp, 4

; 951  : 
; 952  : /*	// M.N. Sky Color Stuff
; 953  : #if 0
; 954  : 	win=gMainHandler->FindWindow(SETUP_SKY_WIN);
; 955  : 	if (!win)
; 956  : 		return;
; 957  : 	lbox = (C_ListBox *) win->FindControl(SETUP_SKY_COLOR);
; 958  : 	if (lbox) 
; 959  : 	{
; 960  : 		lbox->SetValue(PlayerOptions.skycol);
; 961  : 		lbox->Refresh();
; 962  : 	}
; 963  : #else
; 964  : 	win=gMainHandler->FindWindow(SETUP_SKY_WIN);
; 965  : 	if(!win) return;
; 966  : 	lbox=(C_ListBox *)win->FindControl(SETUP_SKY_COLOR);
; 967  : 	if (lbox)
; 968  : 	{
; 969  : 		for (int i = 0; i < NumberOfSkyColors; i++)
; 970  : 		{
; 971  : 			lbox->AddItem(i+1,C_TYPE_ITEM,skycolor[i].name);
; 972  : 		}
; 973  : 		lbox->SetValue(PlayerOptions.skycol);
; 974  : 		lbox->Refresh();
; 975  : 	}
; 976  : #endif
; 977  : */
; 978  : 
; 979  : 	SetAdvanced();

	call	?SetAdvanced@@YAXXZ			; SetAdvanced

; 980  : 
; 981  : //	SetSkyColor();
; 982  : 	
; 983  : 	if(!SetupCritSection)

	cmp	DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A, 0 ; SetupCritSection
	jne	SHORT $LN1@STPSetupCo

; 984  : 		SetupCritSection = F4CreateCriticalSection("SetupCrit");

	push	OFFSET ??_C@_09BHPKAFNN@SetupCrit?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A, eax ; SetupCritSection
$LN1@STPSetupCo:

; 985  : 
; 986  : 	KeyVar.EditKey = FALSE;

	mov	DWORD PTR ?KeyVar@@3UKeyVars@@A, 0
$LN125@STPSetupCo:

; 987  : 
; 988  : }//SetupControls

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN133@STPSetupCo:
	DD	$LN114@STPSetupCo
	DD	$LN115@STPSetupCo
	DD	$LN116@STPSetupCo
	DD	$LN117@STPSetupCo
$LN134@STPSetupCo:
	DD	$LN86@STPSetupCo
	DD	$LN85@STPSetupCo
	DD	$LN84@STPSetupCo
	DD	$LN83@STPSetupCo
?STPSetupControls@@YAXXZ ENDP				; STPSetupControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\ui_setup.cpp
_TEXT	SEGMENT
$T2 = -44						; size = 4
tv894 = -40						; size = 4
$T3 = -36						; size = 4
_tmr$4 = -32						; size = 4
_listbox$ = -28						; size = 4
_slider$ = -24						; size = 4
_win$ = -20						; size = 4
_button$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?HookupSetupControls@@YAXJ@Z PROC			; HookupSetupControls

; 1777 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HookupSetupControls@@YAXJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1778 : 	C_Window	*win;
; 1779 : 	C_Button	*button;
; 1780 : 	C_Slider	*slider;
; 1781 : 	C_ListBox	*listbox;
; 1782 : 	
; 1783 : 	win=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1784 : 	
; 1785 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN73@HookupSetu

; 1786 : 		return;

	jmp	$LN74@HookupSetu
$LN73@HookupSetu:

; 1787 : 	
; 1788 : // Help GUIDE thing
; 1789 : 	button=(C_Button*)win->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1790 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN72@HookupSetu

; 1791 : 		button->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN72@HookupSetu:

; 1792 : 
; 1793 : 	// Hook up IDs here
; 1794 : 	// Hook up Close Button
; 1795 : 	button=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1796 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN71@HookupSetu

; 1797 : 		button->SetCallback(CloseSetupWindowCB);

	push	OFFSET ?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z ; CloseSetupWindowCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN71@HookupSetu:

; 1798 : 
; 1799 : 	//JAM 24Oct03
; 1800 : //	button=(C_Button *)win->FindControl(DO_SYNC);
; 1801 : //	if(button != NULL)
; 1802 : //		button->SetCallback(DoSyncWindowCB);
; 1803 : 
; 1804 : 	button=(C_Button *)win->FindControl(OK);

	push	16027					; 00003e9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1805 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN70@HookupSetu

; 1806 : 		button->SetCallback(SetupOkCB);

	push	OFFSET ?SetupOkCB@@YAXJFPAVC_Base@@@Z	; SetupOkCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN70@HookupSetu:

; 1807 : 	
; 1808 : 	button=(C_Button *)win->FindControl(APPLY);

	push	70033					; 00011191H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1809 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN69@HookupSetu

; 1810 : 		button->SetCallback(ApplySetupCB);

	push	OFFSET ?ApplySetupCB@@YAXJFPAVC_Base@@@Z ; ApplySetupCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN69@HookupSetu:

; 1811 : 	
; 1812 : 	button=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1813 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN68@HookupSetu

; 1814 : 		button->SetCallback(CancelSetupCB);

	push	OFFSET ?CancelSetupCB@@YAXJFPAVC_Base@@@Z ; CancelSetupCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN68@HookupSetu:

; 1815 : 	
; 1816 : 	button=(C_Button *)win->FindControl(SET_LOGBOOK);

	push	70036					; 00011194H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1817 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN67@HookupSetu

; 1818 : 		button->SetCallback(SetupOpenLogBookCB);

	push	OFFSET ?SetupOpenLogBookCB@@YAXJFPAVC_Base@@@Z ; SetupOpenLogBookCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN67@HookupSetu:

; 1819 : 	
; 1820 : 	button=(C_Button *)win->FindControl(SIM_TAB);

	push	70004					; 00011174H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1821 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN66@HookupSetu

; 1822 : 		button->SetCallback(SetupRadioCB);

	push	OFFSET ?SetupRadioCB@@YAXJFPAVC_Base@@@Z ; SetupRadioCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN66@HookupSetu:

; 1823 : 	
; 1824 : 	button=(C_Button *)win->FindControl(GRAPHICS_TAB);

	push	70005					; 00011175H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1825 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN65@HookupSetu

; 1826 : 		button->SetCallback(SetupRadioCB);

	push	OFFSET ?SetupRadioCB@@YAXJFPAVC_Base@@@Z ; SetupRadioCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN65@HookupSetu:

; 1827 : 	
; 1828 : 	button=(C_Button *)win->FindControl(SOUND_TAB);

	push	70029					; 0001118dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1829 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN64@HookupSetu

; 1830 : 		button->SetCallback(SetupRadioCB);

	push	OFFSET ?SetupRadioCB@@YAXJFPAVC_Base@@@Z ; SetupRadioCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN64@HookupSetu:

; 1831 : 	
; 1832 : 	button=(C_Button *)win->FindControl(CONTROLLERS_TAB);

	push	70028					; 0001118cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1833 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN63@HookupSetu

; 1834 : 		button->SetCallback(SetupRadioCB);

	push	OFFSET ?SetupRadioCB@@YAXJFPAVC_Base@@@Z ; SetupRadioCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN63@HookupSetu:

; 1835 : 
; 1836 : 	
; 1837 : 	//Sim Tab
; 1838 : 	listbox = (C_ListBox *)win->FindControl(SET_SKILL);

	push	70031					; 0001118fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1839 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN62@HookupSetu

; 1840 : 		listbox->SetCallback(SetSkillCB);

	push	OFFSET ?SetSkillCB@@YAXJFPAVC_Base@@@Z	; SetSkillCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN62@HookupSetu:

; 1841 : 
; 1842 : 	listbox = (C_ListBox *)win->FindControl(SET_FLTMOD);

	push	70006					; 00011176H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1843 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN61@HookupSetu

; 1844 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN61@HookupSetu:

; 1845 : 
; 1846 : 	listbox = (C_ListBox *)win->FindControl(SET_RADAR);

	push	70009					; 00011179H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1847 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN60@HookupSetu

; 1848 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN60@HookupSetu:

; 1849 : 
; 1850 : 	listbox = (C_ListBox *)win->FindControl(SET_WEAPEFF);

	push	70017					; 00011181H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1851 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN59@HookupSetu

; 1852 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN59@HookupSetu:

; 1853 : 
; 1854 : 	listbox = (C_ListBox *)win->FindControl(SET_AUTOPILOT);

	push	70013					; 0001117dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1855 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN58@HookupSetu

; 1856 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN58@HookupSetu:

; 1857 : 
; 1858 : 	listbox = (C_ListBox *)win->FindControl(SET_REFUELING);

	push	70126					; 000111eeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1859 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN57@HookupSetu

; 1860 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN57@HookupSetu:

; 1861 : 
; 1862 : 	listbox = (C_ListBox *)win->FindControl(SET_PADLOCK);

	push	70130					; 000111f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1863 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN56@HookupSetu

; 1864 : 		listbox->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN56@HookupSetu:

; 1865 : 
; 1866 : 	button=(C_Button *)win->FindControl(SET_INVULNERABILITY);

	push	70100					; 000111d4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1867 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN55@HookupSetu

; 1868 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN55@HookupSetu:

; 1869 : 
; 1870 : 	button=(C_Button *)win->FindControl(SET_FUEL);

	push	70026					; 0001118aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1871 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN54@HookupSetu

; 1872 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN54@HookupSetu:

; 1873 : 
; 1874 : 	button=(C_Button *)win->FindControl(SET_CHAFFLARES);

	push	70024					; 00011188H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1875 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN53@HookupSetu

; 1876 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN53@HookupSetu:

; 1877 : 
; 1878 : 	button=(C_Button *)win->FindControl(SET_COLLISIONS);

	push	70021					; 00011185H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1879 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN52@HookupSetu

; 1880 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN52@HookupSetu:

; 1881 : 
; 1882 : 	button=(C_Button *)win->FindControl(SET_BLACKOUT);

	push	70022					; 00011186H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1883 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN51@HookupSetu

; 1884 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN51@HookupSetu:

; 1885 : 
; 1886 : 	button=(C_Button *)win->FindControl(SET_IDTAGS);

	push	70025					; 00011189H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1887 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN50@HookupSetu

; 1888 : 		button->SetCallback(SimControlCB);

	push	OFFSET ?SimControlCB@@YAXJFPAVC_Base@@@Z ; SimControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN50@HookupSetu:

; 1889 : 
; 1890 : 
; 1891 : 	//Controllers Tab
; 1892 : 	
; 1893 : 	//button=(C_Button *)win->FindControl(SET_DEFAULTS);
; 1894 : 	//if(button != NULL)
; 1895 : 	//	button->SetCallback(SetKeyDefaultCB);
; 1896 : 
; 1897 : 	button=(C_Button *)win->FindControl(CALIBRATE);

	push	70046					; 0001119eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1898 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN49@HookupSetu

; 1899 : 		button->SetCallback(RecenterJoystickCB);

	push	OFFSET ?RecenterJoystickCB@@YAXJFPAVC_Base@@@Z ; RecenterJoystickCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN49@HookupSetu:

; 1900 : 
; 1901 : 	button=(C_Button *)win->FindControl(SET_AB_DETENT);

	push	70148					; 00011204H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1902 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN48@HookupSetu

; 1903 : 		button->SetCallback(SetABDetentCB);

	push	OFFSET ?SetABDetentCB@@YAXJFPAVC_Base@@@Z ; SetABDetentCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN48@HookupSetu:

; 1904 : 	 
; 1905 : 
; 1906 : 	button=(C_Button *)win->FindControl(KEYMAP_SAVE);

	push	70125					; 000111edH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1907 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN47@HookupSetu

; 1908 : 		button->SetCallback(SaveKeyButtonCB);

	push	OFFSET ?SaveKeyButtonCB@@YAXJFPAVC_Base@@@Z ; SaveKeyButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN47@HookupSetu:

; 1909 : 
; 1910 : 	button=(C_Button *)win->FindControl(KEYMAP_LOAD);

	push	70057					; 000111a9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1911 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN46@HookupSetu

; 1912 : 		button->SetCallback(LoadKeyButtonCB);

	push	OFFSET ?LoadKeyButtonCB@@YAXJFPAVC_Base@@@Z ; LoadKeyButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN46@HookupSetu:

; 1913 : 
; 1914 : 	win->SetKBCallback(KeystrokeCB);

	push	OFFSET ?KeystrokeCB@@YAHEEEJ@Z		; KeystrokeCB
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z ; C_Window::SetKBCallback

; 1915 : 
; 1916 : 	listbox = (C_ListBox *)win->FindControl(70137);//JOYSTICK_SELECT

	push	70137					; 000111f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 1917 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN45@HookupSetu

; 1918 : 		listbox->SetCallback(ControllerSelectCB);

	push	OFFSET ?ControllerSelectCB@@YAXJFPAVC_Base@@@Z ; ControllerSelectCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN45@HookupSetu:

; 1919 : 
; 1920 : 	// Retro 31Dec2003 - callback function for the new advanced controls button
; 1921 : 	button=(C_Button *)win->FindControl(SETUP_CONTROL_ADVANCED);

	push	70220					; 0001124cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1922 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN44@HookupSetu

; 1923 : 		button->SetCallback(AdvancedControlCB);

	push	OFFSET ?AdvancedControlCB@@YAXJFPAVC_Base@@@Z ; AdvancedControlCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN44@HookupSetu:

; 1924 : 
; 1925 : 	//Sound Tab
; 1926 : 
; 1927 : 	button=(C_Button*)win->FindControl(ENGINE_SND);

	push	70060					; 000111acH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1928 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN43@HookupSetu

; 1929 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN43@HookupSetu:

; 1930 : 	
; 1931 : 	button=(C_Button*)win->FindControl(SIDEWINDER_SND);

	push	70062					; 000111aeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1932 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN42@HookupSetu

; 1933 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN42@HookupSetu:

; 1934 : 	
; 1935 : 	button=(C_Button*)win->FindControl(RWR_SND);

	push	70064					; 000111b0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1936 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN41@HookupSetu

; 1937 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN41@HookupSetu:

; 1938 : 	
; 1939 : 	button=(C_Button*)win->FindControl(COCKPIT_SND);

	push	70076					; 000111bcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1940 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN40@HookupSetu

; 1941 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN40@HookupSetu:

; 1942 : 	
; 1943 : 	button=(C_Button*)win->FindControl(COM1_SND);

	push	70066					; 000111b2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1944 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN39@HookupSetu

; 1945 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN39@HookupSetu:

; 1946 : 	
; 1947 : 	button=(C_Button*)win->FindControl(COM2_SND);

	push	70068					; 000111b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1948 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN38@HookupSetu

; 1949 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN38@HookupSetu:

; 1950 : 	
; 1951 : 	button=(C_Button*)win->FindControl(SOUNDFX_SND);

	push	70070					; 000111b6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1952 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN37@HookupSetu

; 1953 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN37@HookupSetu:

; 1954 : 	
; 1955 : 	button=(C_Button*)win->FindControl(UISOUNDFX_SND);

	push	70074					; 000111baH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1956 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN36@HookupSetu

; 1957 : 		button->SetCallback(TestButtonCB);

	push	OFFSET ?TestButtonCB@@YAXJFPAVC_Base@@@Z ; TestButtonCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN36@HookupSetu:

; 1958 : 
; 1959 : 		// M.N.
; 1960 : 	button=(C_Button *)win->FindControl(PLAYERVOICE);

	push	70203					; 0001123bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1961 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN35@HookupSetu

; 1962 : 		button->SetCallback(TogglePlayerVoiceCB);

	push	OFFSET ?TogglePlayerVoiceCB@@YAXJFPAVC_Base@@@Z ; TogglePlayerVoiceCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN35@HookupSetu:

; 1963 : 
; 1964 : 	button=(C_Button *)win->FindControl(UICOMMS);

	push	70204					; 0001123cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1965 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN34@HookupSetu

; 1966 : 		button->SetCallback(ToggleUICommsCB);

	push	OFFSET ?ToggleUICommsCB@@YAXJFPAVC_Base@@@Z ; ToggleUICommsCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN34@HookupSetu:

; 1967 : 
; 1968 : 	slider=(C_Slider*)win->FindControl(ENGINE_VOLUME);

	push	70059					; 000111abH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1969 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN33@HookupSetu

; 1970 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN33@HookupSetu:

; 1971 : 
; 1972 : 	slider=(C_Slider*)win->FindControl(SIDEWINDER_VOLUME);

	push	70061					; 000111adH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1973 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN32@HookupSetu

; 1974 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN32@HookupSetu:

; 1975 : 
; 1976 : 	slider=(C_Slider*)win->FindControl(RWR_VOLUME);

	push	70063					; 000111afH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1977 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN31@HookupSetu

; 1978 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN31@HookupSetu:

; 1979 : 
; 1980 : 	slider=(C_Slider*)win->FindControl(COCKPIT_VOLUME);

	push	70075					; 000111bbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1981 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN30@HookupSetu

; 1982 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN30@HookupSetu:

; 1983 : 
; 1984 : 	slider=(C_Slider*)win->FindControl(COM1_VOLUME);

	push	70065					; 000111b1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1985 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN29@HookupSetu

; 1986 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN29@HookupSetu:

; 1987 : 
; 1988 : 	slider=(C_Slider*)win->FindControl(COM2_VOLUME);

	push	70067					; 000111b3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1989 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN28@HookupSetu

; 1990 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN28@HookupSetu:

; 1991 : 
; 1992 : 	slider=(C_Slider*)win->FindControl(SOUNDFX_VOLUME);

	push	70069					; 000111b5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1993 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN27@HookupSetu

; 1994 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN27@HookupSetu:

; 1995 : 
; 1996 : 	slider=(C_Slider*)win->FindControl(UISOUNDFX_VOLUME);

	push	70073					; 000111b9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1997 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN26@HookupSetu

; 1998 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN26@HookupSetu:

; 1999 : 
; 2000 : 	slider=(C_Slider*)win->FindControl(MUSIC_VOLUME);

	push	70071					; 000111b7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2001 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN25@HookupSetu

; 2002 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN25@HookupSetu:

; 2003 : 
; 2004 : 	slider=(C_Slider*)win->FindControl(MASTER_VOLUME);

	push	70147					; 00011203H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2005 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN24@HookupSetu

; 2006 : 		slider->SetCallback(SoundSliderCB);

	push	OFFSET ?SoundSliderCB@@YAXJFPAVC_Base@@@Z ; SoundSliderCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN24@HookupSetu:

; 2007 : 
; 2008 : 	//Graphics Tab
; 2009 : 	
; 2010 : 	if(ID == SETUP_WIN)

	cmp	DWORD PTR _ID$[ebp], 70002		; 00011172H
	jne	$LN23@HookupSetu

; 2011 : 	{
; 2012 : 		C_TimerHook *tmr;
; 2013 : 		
; 2014 : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN76@HookupSetu
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv894[ebp], eax
	jmp	SHORT $LN77@HookupSetu
$LN76@HookupSetu:
	mov	DWORD PTR tv894[ebp], 0
$LN77@HookupSetu:
	mov	ecx, DWORD PTR tv894[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$4[ebp], edx

; 2015 : 		tmr->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 2016 : 		tmr->SetClient(2);

	push	2
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2017 : 		tmr->SetXY(win->ClientArea_[2].left,win->ClientArea_[2].top);

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+eax+172]
	push	edx
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+eax+168]
	push	edx
	mov	eax, DWORD PTR _tmr$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2018 : 		tmr->SetW(win->ClientArea_[2].right - win->ClientArea_[2].left);

	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	push	ecx
	mov	edx, DWORD PTR _tmr$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 2019 : 		tmr->SetH(win->ClientArea_[2].bottom - win->ClientArea_[2].top);

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+180]
	sub	eax, DWORD PTR [esi+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 2020 : 		tmr->SetUpdateCallback(STPViewTimerCB);

	push	OFFSET ?STPViewTimerCB@@YAXJFPAVC_Base@@@Z ; STPViewTimerCB
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 2021 : 		tmr->SetDrawCallback(STPDisplayCB);

	push	OFFSET ?STPDisplayCB@@YAXJFPAVC_Base@@@Z ; STPDisplayCB
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetDrawCallback

; 2022 : 		tmr->SetFlagBitOff(C_BIT_TIMER);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$4[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 2023 : 		tmr->SetCluster(8002);

	push	8002					; 00001f42H
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 2024 : 		//	tmr->SetUserNumber(1,2);
; 2025 : 		tmr->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _tmr$4[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 2026 : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2027 : 		win->SetDragCallback(STPMoveRendererCB);

	push	OFFSET ?STPMoveRendererCB@@YAXPAVC_Window@@@Z ; STPMoveRendererCB
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z ; C_Window::SetDragCallback
$LN23@HookupSetu:

; 2028 : 	}
; 2029 : 
; 2030 : 	listbox = (C_ListBox *)win->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 2031 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN22@HookupSetu

; 2032 : 		listbox->SetCallback(VideoCardCB);

	push	OFFSET ?VideoCardCB@@YAXJFPAVC_Base@@@Z	; VideoCardCB
	mov	edx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN22@HookupSetu:

; 2033 : 
; 2034 : 	listbox = (C_ListBox *)win->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 2035 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN21@HookupSetu

; 2036 : 		listbox->SetCallback(VideoDriverCB);

	push	OFFSET ?VideoDriverCB@@YAXJFPAVC_Base@@@Z ; VideoDriverCB
	mov	eax, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN21@HookupSetu:

; 2037 : 
; 2038 : 	listbox = (C_ListBox *)win->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 2039 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN20@HookupSetu

; 2040 : 		listbox->SetCallback(ResolutionCB);

	push	OFFSET ?ResolutionCB@@YAXJFPAVC_Base@@@Z ; ResolutionCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN20@HookupSetu:

; 2041 : 	
; 2042 : 	//JAM 20Nov03
; 2043 : 	listbox = (C_ListBox *)win->FindControl(SETUP_REALWEATHER);

	push	70207					; 0001123fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _listbox$[ebp], eax

; 2044 : 	if(listbox != NULL)

	cmp	DWORD PTR _listbox$[ebp], 0
	je	SHORT $LN19@HookupSetu

; 2045 : 		listbox->SetCallback(RealWeatherCB);

	push	OFFSET ?RealWeatherCB@@YAXJFPAVC_Base@@@Z ; RealWeatherCB
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _listbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupSetu:

; 2046 : 	//JAM
; 2047 : /*
; 2048 : 	//THW 2004-01-17
; 2049 : 	listbox = (C_ListBox *)win->FindControl(SETUP_SEASON);
; 2050 : 	if(listbox != NULL)
; 2051 : 		listbox->SetCallback(SeasonCB);
; 2052 : 	//THW
; 2053 : */
; 2054 : 	button=(C_Button *)win->FindControl(SET_GRAPHICS_DEFAULTS);

	push	70123					; 000111ebH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2055 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN18@HookupSetu

; 2056 : 	{
; 2057 : 		button->SetCallback(GraphicsDefaultsCB);

	push	OFFSET ?GraphicsDefaultsCB@@YAXJFPAVC_Base@@@Z ; GraphicsDefaultsCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupSetu:

; 2058 : 	}
; 2059 : 
; 2060 : 	// OW
; 2061 : 	button=(C_Button *)win->FindControl(SET_GRAPHICS_ADVANCED);

	push	70150					; 00011206H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2062 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN17@HookupSetu

; 2063 : 	{
; 2064 : 		button->SetCallback(AdvancedCB);

	push	OFFSET ?AdvancedCB@@YAXJFPAVC_Base@@@Z	; AdvancedCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupSetu:

; 2065 : 	}
; 2066 : 
; 2067 : 	// JPO
; 2068 : 	button = (C_Button *)win->FindControl(ADVANCED_GAME_OPTIONS);

	push	300301					; 0004950dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2069 : 	if (button != NULL) 

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN16@HookupSetu

; 2070 : 	{
; 2071 : 	    button->SetCallback(AdvancedGameCB);

	push	OFFSET ?AdvancedGameCB@@YAXJFPAVC_Base@@@Z ; AdvancedGameCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupSetu:

; 2072 : 	}
; 2073 : 
; 2074 : 	// M.N.
; 2075 : /*	button=(C_Button *)win->FindControl(SET_SKY_COLOR);
; 2076 : 	if(button != NULL)
; 2077 : 	{
; 2078 : 		button->SetCallback(SkyColorCB);
; 2079 : 	}
; 2080 : */
; 2081 : 	button=(C_Button *)win->FindControl(RENDER);

	push	70083					; 000111c3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2082 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN15@HookupSetu

; 2083 : 	{
; 2084 : 		button->SetCallback(RenderViewCB);

	push	OFFSET ?RenderViewCB@@YAXJFPAVC_Base@@@Z ; RenderViewCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupSetu:

; 2085 : 	}
; 2086 : 	
; 2087 : 	button=(C_Button *)win->FindControl(AUTO_SCALE);

	push	70110					; 000111deH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2088 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN14@HookupSetu

; 2089 : 	{
; 2090 : 		button->SetCallback(ScalingCB);

	push	OFFSET ?ScalingCB@@YAXJFPAVC_Base@@@Z	; ScalingCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupSetu:

; 2091 : 	}
; 2092 : 
; 2093 : 	// Retro 25Dec2003
; 2094 : 	button=(C_Button*)win->FindControl(SETUP_SIM_SUBTITLES);

	push	70229					; 00011255H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2095 : 	if (button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN13@HookupSetu

; 2096 : 	{
; 2097 : 		button->SetCallback(SubTitleCB);

	push	OFFSET ?SubTitleCB@@YAXJFPAVC_Base@@@Z	; SubTitleCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupSetu:

; 2098 : 	}
; 2099 : 	// ..ends
; 2100 : 
; 2101 : /*	button=(C_Button *)win->FindControl(70136);//GOUROUD
; 2102 : 	if(button != NULL)
; 2103 : 	{
; 2104 : 		button->SetCallback(GouraudCB);
; 2105 : 	}
; 2106 : */	
; 2107 : 	button=(C_Button *)win->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2108 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN12@HookupSetu

; 2109 : 	{
; 2110 : 		button->SetCallback(HazingCB);

	push	OFFSET ?HazingCB@@YAXJFPAVC_Base@@@Z	; HazingCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupSetu:

; 2111 : 	}
; 2112 : 	
; 2113 : 	button=(C_Button *)win->FindControl(SETUP_REALWEATHER_SHADOWS);

	push	70219					; 0001124bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2114 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN11@HookupSetu

; 2115 : 	{
; 2116 : 		button->SetCallback(RealWeatherShadowsCB);

	push	OFFSET ?RealWeatherShadowsCB@@YAXJFPAVC_Base@@@Z ; RealWeatherShadowsCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupSetu:

; 2117 : 	}
; 2118 : 
; 2119 : /*	
; 2120 : 	button=(C_Button *)win->FindControl(BILINEAR_FILTERING);
; 2121 : 	if(button != NULL)
; 2122 : 	{
; 2123 : 		button->SetCallback(BilinearFilterCB);
; 2124 : 	}
; 2125 : */	
; 2126 : /*	button=(C_Button *)win->FindControl(OBJECT_TEXTURES);
; 2127 : 	if(button != NULL)
; 2128 : 	{
; 2129 : 		button->SetCallback(ObjectTextureCB);
; 2130 : 	}
; 2131 : */	
; 2132 : 	slider=(C_Slider *)win->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2133 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN10@HookupSetu

; 2134 : 	{
; 2135 : 		slider->SetCallback(BuildingDetailCB);

	push	OFFSET ?BuildingDetailCB@@YAXJFPAVC_Base@@@Z ; BuildingDetailCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupSetu:

; 2136 : 	}
; 2137 : 	
; 2138 : 	slider=(C_Slider *)win->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2139 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN9@HookupSetu

; 2140 : 	{
; 2141 : 		slider->SetCallback(ObjectDetailCB);

	push	OFFSET ?ObjectDetailCB@@YAXJFPAVC_Base@@@Z ; ObjectDetailCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupSetu:

; 2142 : 	}
; 2143 : 
; 2144 : 	slider=(C_Slider *)win->FindControl(PLAYER_BUBBLE_SLIDER);

	push	70143					; 000111ffH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2145 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN8@HookupSetu

; 2146 : 	{
; 2147 : 		slider->SetCallback(PlayerBubbleCB);

	push	OFFSET ?PlayerBubbleCB@@YAXJFPAVC_Base@@@Z ; PlayerBubbleCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupSetu:

; 2148 : 	}
; 2149 : 	
; 2150 : 	slider=(C_Slider *)win->FindControl(VEHICLE_SIZE);

	push	70078					; 000111beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2151 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN7@HookupSetu

; 2152 : 	{
; 2153 : 		slider->SetCallback(VehicleSizeCB);

	push	OFFSET ?VehicleSizeCB@@YAXJFPAVC_Base@@@Z ; VehicleSizeCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupSetu:

; 2154 : 	}
; 2155 : 	
; 2156 : 	slider=(C_Slider *)win->FindControl(TERRAIN_DETAIL);

	push	70098					; 000111d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2157 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN6@HookupSetu

; 2158 : 	{
; 2159 : 		slider->SetCallback(TerrainDetailCB);

	push	OFFSET ?TerrainDetailCB@@YAXJFPAVC_Base@@@Z ; TerrainDetailCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupSetu:

; 2160 : 	}
; 2161 : 
; 2162 : /*	slider=(C_Slider *)win->FindControl(TEXTURE_DISTANCE);
; 2163 : 	if(slider != NULL)
; 2164 : 	{
; 2165 : 		slider->SetCallback(TextureDistanceCB);
; 2166 : 	}
; 2167 : */
; 2168 : 	slider=(C_Slider *)win->FindControl(SFX_LEVEL);

	push	70145					; 00011201H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 2169 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN5@HookupSetu

; 2170 : 	{
; 2171 : 		slider->SetCallback(SfxLevelCB);

	push	OFFSET ?SfxLevelCB@@YAXJFPAVC_Base@@@Z	; SfxLevelCB
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupSetu:

; 2172 : 	}
; 2173 : 
; 2174 : 	// OW new stuff
; 2175 : 	win=gMainHandler->FindWindow(SETUP_ADVANCED_WIN);

	push	70151					; 00011207H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2176 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN4@HookupSetu
	jmp	SHORT $LN74@HookupSetu
$LN4@HookupSetu:

; 2177 : 
; 2178 : 	// disable parent notification for close and cancel button 
; 2179 : 	button=(C_Button *)win->FindControl(AAPPLY);

	push	70165					; 00011215H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2180 : 	if(button) button->SetCallback(AApplySetupCB);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN3@HookupSetu
	push	OFFSET ?AApplySetupCB@@YAXJFPAVC_Base@@@Z ; AApplySetupCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupSetu:

; 2181 : 
; 2182 : 	button=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2183 : 	if(button) button->SetCallback(CloseWindowCB);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN2@HookupSetu
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@HookupSetu:

; 2184 : 	// OW end of new stuff
; 2185 : 
; 2186 : 
; 2187 : 	// M.N. SkyColor stuff
; 2188 : /*	win = gMainHandler->FindWindow(SETUP_SKY_WIN);
; 2189 : 	if(!win) return;
; 2190 : 
; 2191 : 	// disable parent notification for close and cancel button
; 2192 : 	listbox=(C_ListBox *)win->FindControl(SETUP_SKY_COLOR);
; 2193 : 	if(listbox) listbox->SetCallback(SelectSkyColorCB);
; 2194 : 
; 2195 : 	button=(C_Button *)win->FindControl(CANCEL);
; 2196 : 	if(button) button->SetCallback(CloseWindowCB);
; 2197 : 
; 2198 : 	button=(C_Button *)win->FindControl(SKY_COLOR_TIME_1);
; 2199 : 	if(button) button->SetCallback(SkyColTimeCB);
; 2200 : 
; 2201 : 	button=(C_Button *)win->FindControl(SKY_COLOR_TIME_2);
; 2202 : 	if(button) button->SetCallback(SkyColTimeCB);
; 2203 : 
; 2204 : 	button=(C_Button *)win->FindControl(SKY_COLOR_TIME_3);
; 2205 : 	if(button) button->SetCallback(SkyColTimeCB);
; 2206 : 
; 2207 : 	button=(C_Button *)win->FindControl(SKY_COLOR_TIME_4);
; 2208 : 	if(button) button->SetCallback(SkyColTimeCB);
; 2209 : 	// M.N. end SkyColor stuff
; 2210 : */
; 2211 : 	// disable parent notification for close and cancel button
; 2212 : 
; 2213 : 	button=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 2214 : 	if(button) button->SetCallback(CloseWindowCB);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN74@HookupSetu
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN74@HookupSetu:

; 2215 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HookupSetupControls@@YAXJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HookupSetupControls@@YAXJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HookupSetupControls@@YAXJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HookupSetupControls@@YAXJ@Z ENDP			; HookupSetupControls
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simio.h
;	COMDAT ?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z PROC ; SIMLIB_IO_CLASS::AnalogIsUsed, COMDAT
; _this$ = ecx

; 237  : 	bool	AnalogIsUsed(GameAxis_t id) { return ( analog[id].isUsed); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+eax+12]
	mov	esp, ebp
	pop	ebp
	ret	4
?AnalogIsUsed@SIMLIB_IO_CLASS@@QAE_NW4GameAxis_t@@@Z ENDP ; SIMLIB_IO_CLASS::AnalogIsUsed
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ PROC		; C_3dViewer::GetVP, COMDAT
; _this$ = ecx

; 93   : 		RViewPoint *GetVP() { return(viewPoint_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ ENDP		; C_3dViewer::GetVP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?SetBubbleRatio@FalconSessionEntity@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ratio$ = 8						; size = 4
?SetBubbleRatio@FalconSessionEntity@@QAEXM@Z PROC	; FalconSessionEntity::SetBubbleRatio, COMDAT
; _this$ = ecx

; 182  : 	void SetBubbleRatio (float ratio)	{ bubbleRatio = ratio;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _ratio$[ebp]
	movss	DWORD PTR [eax+496], xmm0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBubbleRatio@FalconSessionEntity@@QAEXM@Z ENDP	; FalconSessionEntity::SetBubbleRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_onOff$ = 8						; size = 1
?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z PROC		; PlayerOptionsClass::SetInfoBar, COMDAT
; _this$ = ecx

; 226  : 	void SetInfoBar(bool onOff)								{ infoBar = onOff; }		// Retro 25Dec2003

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _onOff$[ebp]
	mov	BYTE PTR [eax+203], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetInfoBar@PlayerOptionsClass@@QAEX_N@Z ENDP		; PlayerOptionsClass::SetInfoBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ClearObjFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?ClearObjFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::ClearObjFlag, COMDAT
; _this$ = ecx

; 194  : 	void ClearObjFlag (int flag)							{ObjFlags &= ~flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearObjFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::ClearObjFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetObjFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetObjFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::SetObjFlag, COMDAT
; _this$ = ecx

; 193  : 	void SetObjFlag (int flag)								{ObjFlags |= flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetObjFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::SetObjFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::ClearDispFlag, COMDAT
; _this$ = ecx

; 191  : 	void ClearDispFlag (int flag)							{DispFlags &= ~flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::ClearDispFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetDispFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetDispFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::SetDispFlag, COMDAT
; _this$ = ecx

; 190  : 	void SetDispFlag (int flag)								{DispFlags |= flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::SetDispFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::ClearSimFlag, COMDAT
; _this$ = ecx

; 188  : 	void ClearSimFlag (int flag)							{SimFlags &= ~flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearSimFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::ClearSimFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetSimFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetSimFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::SetSimFlag, COMDAT
; _this$ = ecx

; 187  : 	void SetSimFlag (int flag)								{SimFlags |= flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSimFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::SetSimFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?getSubtitles@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getSubtitles@PlayerOptionsClass@@QBE_NXZ PROC		; PlayerOptionsClass::getSubtitles, COMDAT
; _this$ = ecx

; 178  : 	bool getSubtitles(void) const							{ return subTitles; }			// Retro 25Dec2003

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+204]
	mov	esp, ebp
	pop	ebp
	ret	0
?getSubtitles@PlayerOptionsClass@@QBE_NXZ ENDP		; PlayerOptionsClass::getSubtitles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?getInfoBar@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getInfoBar@PlayerOptionsClass@@QBE_NXZ PROC		; PlayerOptionsClass::getInfoBar, COMDAT
; _this$ = ecx

; 177  : 	bool getInfoBar(void) const 							{ return infoBar; }				// Retro 25Dec2003

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+203]
	mov	esp, ebp
	pop	ebp
	ret	0
?getInfoBar@PlayerOptionsClass@@QBE_NXZ ENDP		; PlayerOptionsClass::getInfoBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?InvulnerableOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?InvulnerableOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::InvulnerableOn, COMDAT
; _this$ = ecx

; 158  : 	int	InvulnerableOn(void)								{ return (SimFlags & SIM_INVULNERABLE) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 512				; 00000200H
	je	SHORT $LN3@Invulnerab
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@Invulnerab
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Invulnerab
$LN3@Invulnerab:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Invulnerab:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?InvulnerableOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::InvulnerableOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?BullseyeOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?BullseyeOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::BullseyeOn, COMDAT
; _this$ = ecx

; 157  : 	int BullseyeOn (void)									{ return (SimFlags & SIM_BULLSEYE_CALLS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 256				; 00000100H
	je	SHORT $LN3@BullseyeOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@BullseyeOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@BullseyeOn
$LN3@BullseyeOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@BullseyeOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?BullseyeOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::BullseyeOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?NameTagsOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?NameTagsOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::NameTagsOn, COMDAT
; _this$ = ecx

; 155  : 	int NameTagsOn (void)									{ return (SimFlags & SIM_NAMETAGS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 64					; 00000040H
	je	SHORT $LN3@NameTagsOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@NameTagsOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@NameTagsOn
$LN3@NameTagsOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@NameTagsOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?NameTagsOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::NameTagsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CollisionsOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?CollisionsOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::CollisionsOn, COMDAT
; _this$ = ecx

; 153  : 	int CollisionsOn (void)									{ return !(SimFlags & SIM_NO_COLLISIONS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 32					; 00000020H
	jne	SHORT $LN3@Collisions
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@Collisions
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Collisions
$LN3@Collisions:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Collisions:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?CollisionsOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::CollisionsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?UnlimitedChaff@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?UnlimitedChaff@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::UnlimitedChaff, COMDAT
; _this$ = ecx

; 152  : 	int UnlimitedChaff (void)								{ return (SimFlags & SIM_UNLIMITED_CHAFF) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 16					; 00000010H
	je	SHORT $LN3@UnlimitedC
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@UnlimitedC
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@UnlimitedC
$LN3@UnlimitedC:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UnlimitedC:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?UnlimitedChaff@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::UnlimitedChaff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?UnlimitedAmmo@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?UnlimitedAmmo@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::UnlimitedAmmo, COMDAT
; _this$ = ecx

; 151  : 	int UnlimitedAmmo (void)								{ return (SimFlags & SIM_UNLIMITED_AMMO) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 8
	je	SHORT $LN3@UnlimitedA
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@UnlimitedA
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@UnlimitedA
$LN3@UnlimitedA:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UnlimitedA:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?UnlimitedAmmo@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::UnlimitedAmmo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?UnlimitedFuel@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?UnlimitedFuel@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::UnlimitedFuel, COMDAT
; _this$ = ecx

; 150  : 	int UnlimitedFuel (void)								{ return (SimFlags & SIM_UNLIMITED_FUEL) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 4
	je	SHORT $LN3@UnlimitedF
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@UnlimitedF
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@UnlimitedF
$LN3@UnlimitedF:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UnlimitedF:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?UnlimitedFuel@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::UnlimitedFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?BlackoutOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?BlackoutOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::BlackoutOn, COMDAT
; _this$ = ecx

; 148  : 	int BlackoutOn (void)									{ return !(SimFlags & SIM_NO_BLACKOUT) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	and	ecx, 2
	jne	SHORT $LN3@BlackoutOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@BlackoutOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@BlackoutOn
$LN3@BlackoutOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@BlackoutOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?BlackoutOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::BlackoutOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetVisualCueMode@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVisualCueMode@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetVisualCueMode, COMDAT
; _this$ = ecx

; 146  : 	int GetVisualCueMode (void)								{ return SimVisualCueMode; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVisualCueMode@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetVisualCueMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetPadlockMode@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPadlockMode@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::GetPadlockMode, COMDAT
; _this$ = ecx

; 145  : 	int GetPadlockMode (void)								{ return SimPadlockMode; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPadlockMode@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::GetPadlockMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetRefuelingMode@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRefuelingMode@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetRefuelingMode, COMDAT
; _this$ = ecx

; 144  : 	int GetRefuelingMode (void)								{ return SimAirRefuelingMode; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRefuelingMode@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetRefuelingMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetAutopilotMode@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAutopilotMode@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetAutopilotMode, COMDAT
; _this$ = ecx

; 143  : 	int GetAutopilotMode (void)								{ return SimAutopilotType; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAutopilotMode@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetAutopilotMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetAvionicsType@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAvionicsType@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetAvionicsType, COMDAT
; _this$ = ecx

; 142  : 	int GetAvionicsType (void)								{ return SimAvionicsType; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAvionicsType@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetAvionicsType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetWeaponEffectiveness@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWeaponEffectiveness@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetWeaponEffectiveness, COMDAT
; _this$ = ecx

; 141  : 	int GetWeaponEffectiveness (void)						{ return SimWeaponEffect; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWeaponEffectiveness@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetWeaponEffectiveness
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetFlightModelType@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlightModelType@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::GetFlightModelType, COMDAT
; _this$ = ecx

; 140  : 	int GetFlightModelType (void)							{ return SimFlightModel; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlightModelType@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::GetFlightModelType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?AcmiFileSize@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AcmiFileSize@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::AcmiFileSize, COMDAT
; _this$ = ecx

; 138  : 	int AcmiFileSize (void)									{ return ACMIFileSize; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?AcmiFileSize@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::AcmiFileSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ObjectDynScalingOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?ObjectDynScalingOn@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::ObjectDynScalingOn, COMDAT
; _this$ = ecx

; 129  : 	int ObjectDynScalingOn (void)							{ return (ObjFlags & DISP_OBJ_DYN_SCALING) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN3@ObjectDynS
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@ObjectDynS
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@ObjectDynS
$LN3@ObjectDynS:
	mov	DWORD PTR tv68[ebp], 0
$LN4@ObjectDynS:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectDynScalingOn@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::ObjectDynScalingOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ShadowsOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?ShadowsOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::ShadowsOn, COMDAT
; _this$ = ecx

; 120  : 	int ShadowsOn(void)										{ return (DispFlags & DISP_SHADOWS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8
	je	SHORT $LN3@ShadowsOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@ShadowsOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@ShadowsOn
$LN3@ShadowsOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@ShadowsOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ShadowsOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::ShadowsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?HazingOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?HazingOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::HazingOn, COMDAT
; _this$ = ecx

; 115  : 	int HazingOn (void)										{ return (DispFlags & DISP_HAZING) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	je	SHORT $LN3@HazingOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@HazingOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@HazingOn
$LN3@HazingOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@HazingOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?HazingOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::HazingOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GouraudOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?GouraudOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::GouraudOn, COMDAT
; _this$ = ecx

; 114  : 	int GouraudOn (void)									{ return (DispFlags & DISP_GOURAUD) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	je	SHORT $LN3@GouraudOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@GouraudOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@GouraudOn
$LN3@GouraudOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@GouraudOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GouraudOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::GouraudOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?OptionsFile@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OptionsFile@LogBookData@@QAEPADXZ PROC			; LogBookData::OptionsFile, COMDAT
; _this$ = ecx

; 184  : 	_TCHAR *OptionsFile(void)						{return Pilot.OptionsFile;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 58					; 0000003aH
	mov	esp, ebp
	pop	ebp
	ret	0
?OptionsFile@LogBookData@@QAEPADXZ ENDP			; LogBookData::OptionsFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetClientArea@C_Window@@QAE?AUUI95_RECT@@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_ID$ = 12						; size = 4
?GetClientArea@C_Window@@QAE?AUUI95_RECT@@J@Z PROC	; C_Window::GetClientArea, COMDAT
; _this$ = ecx

; 319  : 		UI95_RECT GetClientArea(long ID) { if(ID < WIN_MAX_CLIENTS) return ClientArea_[ID]; return(ClientArea_[0]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _ID$[ebp], 8
	jge	SHORT $LN1@GetClientA
	mov	eax, DWORD PTR _ID$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+168]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@GetClientA
$LN1@GetClientA:
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+168]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@GetClientA:
	mov	esp, ebp
	pop	ebp
	ret	8
?GetClientArea@C_Window@@QAE?AUUI95_RECT@@J@Z ENDP	; C_Window::GetClientArea
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z PROC		; C_Window::SetKBCallback, COMDAT
; _this$ = ecx

; 284  : 		void SetKBCallback(BOOL (*cb)(unsigned char DKScanCode,unsigned char Ascii,unsigned char ShiftStates,long RepeatCount)) { KBCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+4324], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetKBCallback@C_Window@@QAEXP6AHEEEJ@Z@Z ENDP		; C_Window::SetKBCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z PROC	; C_Window::SetDragCallback, COMDAT
; _this$ = ecx

; 270  : 		void SetDragCallback(void (*cb)(C_Window *)) { DragCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+4316], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z ENDP	; C_Window::SetDragCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetDrawCallback, COMDAT
; _this$ = ecx

; 34   : 		void SetDrawCallback(void (*routine)(long ID,short hittype,C_Base *control)) { DrawCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetDrawCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetRefreshCallback, COMDAT
; _this$ = ecx

; 33   : 		void SetRefreshCallback(void (*routine)(long ID,short hittype,C_Base *control)) { RefreshCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetRefreshCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetUpdateCallback, COMDAT
; _this$ = ecx

; 32   : 		void SetUpdateCallback(void (*routine)(long ID,short hittype,C_Base *control)) { UpdateCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?SetSteps@C_Slider@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_num$ = 8						; size = 2
?SetSteps@C_Slider@@QAEXF@Z PROC			; C_Slider::SetSteps, COMDAT
; _this$ = ecx

; 49   : 		void SetSteps(short num) { Steps_=num; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSteps@C_Slider@@QAEXF@Z ENDP			; C_Slider::SetSteps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ceditbox.h
;	COMDAT ?GetInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInteger@C_EditBox@@QAEJXZ PROC			; C_EditBox::GetInteger, COMDAT
; _this$ = ecx

; 71   : 		long GetInteger() { return(Integer_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInteger@C_EditBox@@QAEJXZ ENDP			; C_EditBox::GetInteger
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetW@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@C_Base@@QAEJXZ PROC				; C_Base::GetW, COMDAT
; _this$ = ecx

; 143  : 		long GetW()					{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@C_Base@@QAEJXZ ENDP				; C_Base::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCluster@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCluster@C_Base@@QAEXJ@Z PROC			; C_Base::SetCluster, COMDAT
; _this$ = ecx

; 97   : 		void SetCluster(long id)								{ Section_[_CLUSTER_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCluster@C_Base@@QAEXJ@Z ENDP			; C_Base::SetCluster
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
END
