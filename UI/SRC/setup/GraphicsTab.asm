; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\setup\GraphicsTab.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?g_bEnumSoftwareDevices@@3_NA			; g_bEnumSoftwareDevices
PUBLIC	?SetupViewer@@3PAVC_3dViewer@@A			; SetupViewer
PUBLIC	?tmpVpoint@@3PAVRViewPoint@@A			; tmpVpoint
PUBLIC	?Objects@@3PAUObjectPos@@A			; Objects
PUBLIC	?Features@@3PAUFeaturePos@@A			; Features
PUBLIC	?NumObjects@@3FA				; NumObjects
PUBLIC	?NumFeatures@@3FA				; NumFeatures
PUBLIC	?Smoke@@3PAVDrawable2D@@A			; Smoke
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
_BSS	SEGMENT
?g_bEnumSoftwareDevices@@3_NA DB 01H DUP (?)		; g_bEnumSoftwareDevices
	ALIGN	4

?SetupViewer@@3PAVC_3dViewer@@A DD 01H DUP (?)		; SetupViewer
?tmpVpoint@@3PAVRViewPoint@@A DD 01H DUP (?)		; tmpVpoint
?Objects@@3PAUObjectPos@@A DD 01H DUP (?)		; Objects
?Features@@3PAUFeaturePos@@A DD 01H DUP (?)		; Features
?NumObjects@@3FA DW 01H DUP (?)				; NumObjects
	ALIGN	4

?NumFeatures@@3FA DW 01H DUP (?)			; NumFeatures
	ALIGN	4

?Smoke@@3PAVDrawable2D@@A DD 01H DUP (?)		; Smoke
_BSS	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
_DATA	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	_fabsf
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	?abs@@YAJJ@Z					; abs
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?GetFront@C_Handler@@QAEPAVImageBuffer@@XZ	; C_Handler::GetFront
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?GouraudOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::GouraudOn
PUBLIC	?HazingOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::HazingOn
PUBLIC	?ShadowsOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::ShadowsOn
PUBLIC	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetDispFlag
PUBLIC	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::ClearDispFlag
PUBLIC	?SetHazeMode@RenderOTW@@QAEXH@Z			; RenderOTW::SetHazeMode
PUBLIC	?SetFilteringMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetFilteringMode
PUBLIC	?SetScale@DrawableObject@@QAEXM@Z		; DrawableObject::SetScale
PUBLIC	?InDisplayList@DrawableObject@@QAEHXZ		; DrawableObject::InDisplayList
PUBLIC	?GetFirst@C_BSPList@@QAEPAUUI_BSPList@@XZ	; C_BSPList::GetFirst
PUBLIC	??0C_3dViewer@@QAE@XZ				; C_3dViewer::C_3dViewer
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	?SetViewDistance@C_3dViewer@@QAEXM@Z		; C_3dViewer::SetViewDistance
PUBLIC	?SetTextureLevels@C_3dViewer@@QAEXJJ@Z		; C_3dViewer::SetTextureLevels
PUBLIC	?GetCameraHeading@C_3dViewer@@QAEMXZ		; C_3dViewer::GetCameraHeading
PUBLIC	?GetCameraPitch@C_3dViewer@@QAEMXZ		; C_3dViewer::GetCameraPitch
PUBLIC	?GetCameraX@C_3dViewer@@QAEMXZ			; C_3dViewer::GetCameraX
PUBLIC	?GetCameraY@C_3dViewer@@QAEMXZ			; C_3dViewer::GetCameraY
PUBLIC	?GetCameraZ@C_3dViewer@@QAEMXZ			; C_3dViewer::GetCameraZ
PUBLIC	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ	; C_3dViewer::GetRendOTW
PUBLIC	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ		; C_3dViewer::GetVP
PUBLIC	?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ	; C_3dViewer::GetBSPList
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	??0TViewPoint@@QAE@XZ				; TViewPoint::TViewPoint
PUBLIC	??1TViewPoint@@QAE@XZ				; TViewPoint::~TViewPoint
PUBLIC	?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z		; TViewPoint::GetPos
PUBLIC	??0RViewPoint@@QAE@XZ				; RViewPoint::RViewPoint
PUBLIC	?ChangeViewpointCB@@YAXJFPAVC_Base@@@Z		; ChangeViewpointCB
PUBLIC	?STPEnterCrit@@YAXXZ				; STPEnterCrit
PUBLIC	?STPLeaveCrit@@YAXXZ				; STPLeaveCrit
PUBLIC	?STPMoveRendererCB@@YAXPAVC_Window@@@Z		; STPMoveRendererCB
PUBLIC	?STPViewTimerCB@@YAXJFPAVC_Base@@@Z		; STPViewTimerCB
PUBLIC	?STPDisplayCB@@YAXJFPAVC_Base@@@Z		; STPDisplayCB
PUBLIC	?InitializeViewer@@YAXPAVC_Window@@PAVRenderOTW@@@Z ; InitializeViewer
PUBLIC	?InsertSmokeCloud@@YAXXZ			; InsertSmokeCloud
PUBLIC	?LoadObjects@@YAXAAUViewPos@@PAVC_Window@@@Z	; LoadObjects
PUBLIC	?STPRender@@YAXPAVC_Base@@@Z			; STPRender
PUBLIC	?RenderViewCB@@YAXJFPAVC_Base@@@Z		; RenderViewCB
PUBLIC	?ScalingCB@@YAXJFPAVC_Base@@@Z			; ScalingCB
PUBLIC	?GouraudCB@@YAXJFPAVC_Base@@@Z			; GouraudCB
PUBLIC	?HazingCB@@YAXJFPAVC_Base@@@Z			; HazingCB
PUBLIC	?RealWeatherShadowsCB@@YAXJFPAVC_Base@@@Z	; RealWeatherShadowsCB
PUBLIC	?BilinearFilterCB@@YAXJFPAVC_Base@@@Z		; BilinearFilterCB
PUBLIC	?RemoveObjFromView@@YAXH@Z			; RemoveObjFromView
PUBLIC	?BuildingDetailCB@@YAXJFPAVC_Base@@@Z		; BuildingDetailCB
PUBLIC	?PlayerBubbleCB@@YAXJFPAVC_Base@@@Z		; PlayerBubbleCB
PUBLIC	?ObjectDetailCB@@YAXJFPAVC_Base@@@Z		; ObjectDetailCB
PUBLIC	?VehicleSizeCB@@YAXJFPAVC_Base@@@Z		; VehicleSizeCB
PUBLIC	?TerrainDetailCB@@YAXJFPAVC_Base@@@Z		; TerrainDetailCB
PUBLIC	?SfxLevelCB@@YAXJFPAVC_Base@@@Z			; SfxLevelCB
PUBLIC	?BuildVideoCardList@@YAXPAVC_ListBox@@@Z	; BuildVideoCardList
PUBLIC	?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z	; BuildVideoDriverList
PUBLIC	?BuildResolutionList@@YAXPAVC_ListBox@@@Z	; BuildResolutionList
PUBLIC	?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z	; DisableEnableDrivers
PUBLIC	?DisableEnableResolutions@@YAXPAVC_ListBox@@@Z	; DisableEnableResolutions
PUBLIC	?SetAdvanced@@YAXXZ				; SetAdvanced
PUBLIC	?VideoCardCB@@YAXJFPAVC_Base@@@Z		; VideoCardCB
PUBLIC	?VideoDriverCB@@YAXJFPAVC_Base@@@Z		; VideoDriverCB
PUBLIC	?ResolutionCB@@YAXJFPAVC_Base@@@Z		; ResolutionCB
PUBLIC	?RealWeatherCB@@YAXJFPAVC_Base@@@Z		; RealWeatherCB
PUBLIC	?SeasonCB@@YAXJFPAVC_Base@@@Z			; SeasonCB
PUBLIC	?SetupGraphicsControls@@YAXXZ			; SetupGraphicsControls
PUBLIC	?GraphicsDefaultsCB@@YAXJFPAVC_Base@@@Z		; GraphicsDefaultsCB
PUBLIC	?AdvancedCB@@YAXJFPAVC_Base@@@Z			; AdvancedCB
PUBLIC	?AdvancedGameCB@@YAXJFPAVC_Base@@@Z		; AdvancedGameCB
PUBLIC	?SkyColorCB@@YAXJFPAVC_Base@@@Z			; SkyColorCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7TViewPoint@@6B@				; TViewPoint::`vftable'
PUBLIC	??_7RViewPoint@@6B@				; RViewPoint::`vftable'
PUBLIC	??_C@_0BF@PDMKBDM@?$CFs?2config?2viewer?4dat?$AA@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BB@GBPIJPJG@?$CF0dx?$CF0d?5?9?5?$CFd?5Bit?$AA@ ; `string'
PUBLIC	??_C@_05JCFIOPBP@Sunny?$AA@			; `string'
PUBLIC	??_C@_04DHPLNOLG@Fair?$AA@			; `string'
PUBLIC	??_C@_04DMAJLHBF@Poor?$AA@			; `string'
PUBLIC	??_C@_09MEHABAOA@Inclement?$AA@			; `string'
PUBLIC	??_C@_07GCCODDFC@display?$AA@			; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RViewPoint@@6B@				; RViewPoint::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRViewPoint@@@8				; RViewPoint `RTTI Type Descriptor'
PUBLIC	??_R3RViewPoint@@8				; RViewPoint::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RViewPoint@@8				; RViewPoint::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RViewPoint@@8			; RViewPoint::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@TViewPoint@@8			; TViewPoint::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTViewPoint@@@8				; TViewPoint `RTTI Type Descriptor'
PUBLIC	??_R3TViewPoint@@8				; TViewPoint::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TViewPoint@@8				; TViewPoint::`RTTI Base Class Array'
PUBLIC	??_R4TViewPoint@@6B@				; TViewPoint::`RTTI Complete Object Locator'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc00000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41200000
PUBLIC	__real@41f00000
PUBLIC	__real@42200000
PUBLIC	__real@42b40000
PUBLIC	__real@42c80000
PUBLIC	__real@43960000
PUBLIC	__real@43fa0000
PUBLIC	__real@44160000
PUBLIC	__real@44480000
PUBLIC	__real@454cffae
PUBLIC	__real@47001fcd
PUBLIC	__real@48801fcd
PUBLIC	__real@bf800000
PUBLIC	__real@c1200000
PUBLIC	__real@c2b40000
PUBLIC	__real@c7435000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_sprintf:PROC
EXTRN	_labs:PROC
EXTRN	_fabs:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z:PROC	; C_ListBox::AddItem
EXTRN	?RemoveAllItems@C_ListBox@@QAEXXZ:PROC		; C_ListBox::RemoveAllItems
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?SetValueText@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValueText
EXTRN	?SetInteger@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetInteger
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0PlayerOptionsClass@@QAE@XZ:PROC		; PlayerOptionsClass::PlayerOptionsClass
EXTRN	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::LoadOptions
EXTRN	?GetJoystickInput@@YAXXZ:PROC			; GetJoystickInput
EXTRN	??0Texture@@QAE@XZ:PROC				; Texture::Texture
EXTRN	??1Texture@@QAE@XZ:PROC				; Texture::~Texture
EXTRN	?SetObjectDetail@Render3D@@QAEXM@Z:PROC		; Render3D::SetObjectDetail
EXTRN	?SetupStates@RenderOTW@@IAEXXZ:PROC		; RenderOTW::SetupStates
EXTRN	?Update@DrawableBSP@@QAEXPBUTpoint@@PBUTrotation@@@Z:PROC ; DrawableBSP::Update
EXTRN	?SetSwitchMask@DrawableBSP@@QAEXHK@Z:PROC	; DrawableBSP::SetSwitchMask
EXTRN	?WaitForLoader@Loader@@QAEXXZ:PROC		; Loader::WaitForLoader
EXTRN	?MapVisId@@YAKK@Z:PROC				; MapVisId
EXTRN	?Setup@C_3dViewer@@QAEHXZ:PROC			; C_3dViewer::Setup
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z:PROC	; C_3dViewer::Viewport
EXTRN	?SetPosition@C_3dViewer@@QAEXMMM@Z:PROC		; C_3dViewer::SetPosition
EXTRN	?SetCamera@C_3dViewer@@QAEXMMMMMM@Z:PROC	; C_3dViewer::SetCamera
EXTRN	?InitOTW@C_3dViewer@@QAEHMH@Z:PROC		; C_3dViewer::InitOTW
EXTRN	?LoadBSP@C_3dViewer@@QAEPAUUI_BSPList@@JHH@Z:PROC ; C_3dViewer::LoadBSP
EXTRN	?LoadBuilding@C_3dViewer@@QAEPAUUI_BSPList@@JHPAUTpoint@@M@Z:PROC ; C_3dViewer::LoadBuilding
EXTRN	?AddToView@C_3dViewer@@QAEHJ@Z:PROC		; C_3dViewer::AddToView
EXTRN	?ViewOTW@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::ViewOTW
EXTRN	?Cleanup@TViewPoint@@UAEXXZ:PROC		; TViewPoint::Cleanup
EXTRN	??0ObjectDisplayList@@QAE@XZ:PROC		; ObjectDisplayList::ObjectDisplayList
EXTRN	?Setup@RViewPoint@@QAEXMHH_N@Z:PROC		; RViewPoint::Setup
EXTRN	?Cleanup@RViewPoint@@UAEXXZ:PROC		; RViewPoint::Cleanup
EXTRN	?InsertObject@RViewPoint@@QAEXPAVDrawableObject@@@Z:PROC ; RViewPoint::InsertObject
EXTRN	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z:PROC ; RViewPoint::RemoveObject
EXTRN	?Update@RViewPoint@@QAEXPBUTpoint@@@Z:PROC	; RViewPoint::Update
EXTRN	?IsHardware@D3DDeviceInfo@DDDriverInfo@DeviceManager@@QAE_NXZ:PROC ; DeviceManager::DDDriverInfo::D3DDeviceInfo::IsHardware
EXTRN	?GetDevice@DDDriverInfo@DeviceManager@@QAEPAVD3DDeviceInfo@12@H@Z:PROC ; DeviceManager::DDDriverInfo::GetDevice
EXTRN	?SupportsSRT@DDDriverInfo@DeviceManager@@QAE_NXZ:PROC ; DeviceManager::DDDriverInfo::SupportsSRT
EXTRN	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z:PROC ; DeviceManager::GetDriver
EXTRN	?GetDriverName@DeviceManager@@QAEPBDH@Z:PROC	; DeviceManager::GetDriverName
EXTRN	?GetDeviceName@DeviceManager@@QAEPBDHH@Z:PROC	; DeviceManager::GetDeviceName
EXTRN	?GetMode@DeviceManager@@QAE_NHHHPAI00@Z:PROC	; DeviceManager::GetMode
EXTRN	??0Drawable2D@@QAE@HMPAUTpoint@@@Z:PROC		; Drawable2D::Drawable2D
EXTRN	??0DisplayOptionsClass@@QAE@XZ:PROC		; DisplayOptionsClass::DisplayOptionsClass
EXTRN	?LoadOptions@DisplayOptionsClass@@QAEHPAD@Z:PROC ; DisplayOptionsClass::LoadOptions
EXTRN	?Init@WeatherClass@@QAEX_N@Z:PROC		; WeatherClass::Init
EXTRN	?UpdateCondition@WeatherClass@@QAEXH_N@Z:PROC	; WeatherClass::UpdateCondition
EXTRN	?PositandOrientSetData@@YAXMMMMMMPAUTpoint@@PAUTrotation@@@Z:PROC ; PositandOrientSetData
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?IO@@3VSIMLIB_IO_CLASS@@A:BYTE			; IO
EXTRN	?IMatrix@@3UTrotation@@B:BYTE			; IMatrix
EXTRN	?TheLoader@@3VLoader@@A:BYTE			; TheLoader
EXTRN	?ready@@3HA:DWORD				; ready
EXTRN	?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A:DWORD ; SetupCritSection
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?realWeather@@3PAVRealWeather@@A:DWORD		; realWeather
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?GraphicSettingMult@@3HA:DWORD			; GraphicSettingMult
EXTRN	?HighResolutionHackFlag@@3HA:DWORD		; HighResolutionHackFlag
EXTRN	?AxisMap@@3UAxisMapping@@A:BYTE			; AxisMap
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA
_BSS	SEGMENT
?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA DD 01H DUP (?) ; `ChangeViewpointCB'::`2'::count
_BSS	ENDS
;	COMDAT ?prevscale@?8??VehicleSizeCB@@YAXJFPAVC_Base@@@Z@4HA
_BSS	SEGMENT
?prevscale@?8??VehicleSizeCB@@YAXJFPAVC_Base@@@Z@4HA DD 01H DUP (?) ; `VehicleSizeCB'::`9'::prevscale
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c7435000
CONST	SEGMENT
__real@c7435000 DD 0c7435000r			; -50000
CONST	ENDS
;	COMDAT __real@c2b40000
CONST	SEGMENT
__real@c2b40000 DD 0c2b40000r			; -90
CONST	ENDS
;	COMDAT __real@c1200000
CONST	SEGMENT
__real@c1200000 DD 0c1200000r			; -10
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@48801fcd
CONST	SEGMENT
__real@48801fcd DD 048801fcdr			; 262398
CONST	ENDS
;	COMDAT __real@47001fcd
CONST	SEGMENT
__real@47001fcd DD 047001fcdr			; 32799.8
CONST	ENDS
;	COMDAT __real@454cffae
CONST	SEGMENT
__real@454cffae DD 0454cffaer			; 3279.98
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R4TViewPoint@@6B@
rdata$r	SEGMENT
??_R4TViewPoint@@6B@ DD 00H				; TViewPoint::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTViewPoint@@@8
	DD	FLAT:??_R3TViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R2TViewPoint@@8
rdata$r	SEGMENT
??_R2TViewPoint@@8 DD FLAT:??_R1A@?0A@EA@TViewPoint@@8	; TViewPoint::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TViewPoint@@8
rdata$r	SEGMENT
??_R3TViewPoint@@8 DD 00H				; TViewPoint::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTViewPoint@@@8
_DATA	SEGMENT
??_R0?AVTViewPoint@@@8 DD FLAT:??_7type_info@@6B@	; TViewPoint `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTViewPoint@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TViewPoint@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TViewPoint@@8 DD FLAT:??_R0?AVTViewPoint@@@8 ; TViewPoint::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RViewPoint@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RViewPoint@@8 DD FLAT:??_R0?AVRViewPoint@@@8 ; RViewPoint::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R2RViewPoint@@8
rdata$r	SEGMENT
??_R2RViewPoint@@8 DD FLAT:??_R1A@?0A@EA@RViewPoint@@8	; RViewPoint::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R3RViewPoint@@8
rdata$r	SEGMENT
??_R3RViewPoint@@8 DD 00H				; RViewPoint::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRViewPoint@@@8
_DATA	SEGMENT
??_R0?AVRViewPoint@@@8 DD FLAT:??_7type_info@@6B@	; RViewPoint `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRViewPoint@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RViewPoint@@6B@
rdata$r	SEGMENT
??_R4RViewPoint@@6B@ DD 00H				; RViewPoint::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRViewPoint@@@8
	DD	FLAT:??_R3RViewPoint@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCCODDFC@display?$AA@
CONST	SEGMENT
??_C@_07GCCODDFC@display?$AA@ DB 'display', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MEHABAOA@Inclement?$AA@
CONST	SEGMENT
??_C@_09MEHABAOA@Inclement?$AA@ DB 'Inclement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04DMAJLHBF@Poor?$AA@
CONST	SEGMENT
??_C@_04DMAJLHBF@Poor?$AA@ DB 'Poor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DHPLNOLG@Fair?$AA@
CONST	SEGMENT
??_C@_04DHPLNOLG@Fair?$AA@ DB 'Fair', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCFIOPBP@Sunny?$AA@
CONST	SEGMENT
??_C@_05JCFIOPBP@Sunny?$AA@ DB 'Sunny', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBPIJPJG@?$CF0dx?$CF0d?5?9?5?$CFd?5Bit?$AA@
CONST	SEGMENT
??_C@_0BB@GBPIJPJG@?$CF0dx?$CF0d?5?9?5?$CFd?5Bit?$AA@ DB '%0dx%0d - %d Bi'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ?prevpos@?1??TerrainDetailCB@@YAXJFPAVC_Base@@@Z@4HA
_DATA	SEGMENT
?prevpos@?1??TerrainDetailCB@@YAXJFPAVC_Base@@@Z@4HA DD 0ffffffffH ; `TerrainDetailCB'::`2'::prevpos
_DATA	ENDS
;	COMDAT ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA
_DATA	SEGMENT
?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA DD 0ffffffffH ; `BuildingDetailCB'::`2'::prevdetail
_DATA	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PDMKBDM@?$CFs?2config?2viewer?4dat?$AA@
CONST	SEGMENT
??_C@_0BF@PDMKBDM@?$CFs?2config?2viewer?4dat?$AA@ DB '%s\config\viewer.da'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7RViewPoint@@6B@
CONST	SEGMENT
??_7RViewPoint@@6B@ DD FLAT:??_R4RViewPoint@@6B@	; RViewPoint::`vftable'
	DD	FLAT:?Cleanup@RViewPoint@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7TViewPoint@@6B@
CONST	SEGMENT
??_7TViewPoint@@6B@ DD FLAT:??_R4TViewPoint@@6B@	; TViewPoint::`vftable'
	DD	FLAT:?Cleanup@TViewPoint@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?InsertSmokeCloud@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertSmokeCloud@@YAXXZ$0
__unwindtable$?STPRender@@YAXPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?STPRender@@YAXPAVC_Base@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?STPRender@@YAXPAVC_Base@@@Z$1
__ehfuncinfo$?STPRender@@YAXPAVC_Base@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?STPRender@@YAXPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InsertSmokeCloud@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InsertSmokeCloud@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0RViewPoint@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0RViewPoint@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0RViewPoint@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0RViewPoint@@QAE@XZ$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SkyColorCB@@YAXJFPAVC_Base@@@Z PROC			; SkyColorCB

; 1826 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1827 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SkyColorCB

; 1828 : 		return;

	jmp	SHORT $LN3@SkyColorCB
$LN2@SkyColorCB:

; 1829 : 	C_Window *win;
; 1830 : 
; 1831 : 	win=gMainHandler->FindWindow(SETUP_SKY_WIN);

	push	70185					; 00011229H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1832 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN1@SkyColorCB
	jmp	SHORT $LN3@SkyColorCB
$LN1@SkyColorCB:

; 1833 : 
; 1834 : 	gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1835 : 	gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN3@SkyColorCB:

; 1836 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SkyColorCB@@YAXJFPAVC_Base@@@Z ENDP			; SkyColorCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AdvancedGameCB@@YAXJFPAVC_Base@@@Z PROC		; AdvancedGameCB

; 1811 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1812 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@AdvancedGa

; 1813 : 		return;

	jmp	SHORT $LN3@AdvancedGa
$LN2@AdvancedGa:

; 1814 : 
; 1815 : 	C_Window *win;
; 1816 : 
; 1817 : 	win=gMainHandler->FindWindow(ADVANCED_GAME_OPTIONS_WIN);	// JPOLOOK - not finished yet

	push	300302					; 0004950eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1818 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN1@AdvancedGa
	jmp	SHORT $LN3@AdvancedGa
$LN1@AdvancedGa:

; 1819 : 
; 1820 : 	gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1821 : 	gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN3@AdvancedGa:

; 1822 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AdvancedGameCB@@YAXJFPAVC_Base@@@Z ENDP		; AdvancedGameCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AdvancedCB@@YAXJFPAVC_Base@@@Z PROC			; AdvancedCB

; 1796 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1797 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@AdvancedCB

; 1798 : 		return;

	jmp	SHORT $LN3@AdvancedCB
$LN2@AdvancedCB:

; 1799 : 
; 1800 : 	C_Window *win;
; 1801 : 
; 1802 : 	win=gMainHandler->FindWindow(SETUP_ADVANCED_WIN);

	push	70151					; 00011207H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1803 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN1@AdvancedCB
	jmp	SHORT $LN3@AdvancedCB
$LN1@AdvancedCB:

; 1804 : 
; 1805 : 	gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1806 : 	gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN3@AdvancedCB:

; 1807 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AdvancedCB@@YAXJFPAVC_Base@@@Z ENDP			; AdvancedCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_Display$ = -272					; size = 28
_Player$ = -244						; size = 240
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?GraphicsDefaultsCB@@YAXJFPAVC_Base@@@Z PROC		; GraphicsDefaultsCB

; 1738 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1739 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@GraphicsDe

; 1740 : 		return;

	jmp	$LN5@GraphicsDe
$LN4@GraphicsDe:

; 1741 : 
; 1742 : 	PlayerOptionsClass Player;

	lea	ecx, DWORD PTR _Player$[ebp]
	call	??0PlayerOptionsClass@@QAE@XZ		; PlayerOptionsClass::PlayerOptionsClass

; 1743 : 	DisplayOptionsClass Display;

	lea	ecx, DWORD PTR _Display$[ebp]
	call	??0DisplayOptionsClass@@QAE@XZ		; DisplayOptionsClass::DisplayOptionsClass

; 1744 : 
; 1745 : 	//if(Display.LoadOptions("default"))
; 1746 : 	if(Display.LoadOptions("display")) // JB 011124 Why load the wrong file?

	push	OFFSET ??_C@_07GCCODDFC@display?$AA@
	lea	ecx, DWORD PTR _Display$[ebp]
	call	?LoadOptions@DisplayOptionsClass@@QAEHPAD@Z ; DisplayOptionsClass::LoadOptions
	test	eax, eax
	je	SHORT $LN3@GraphicsDe

; 1747 : 	{
; 1748 : 		DisplayOptions.DispWidth = Display.DispWidth;

	mov	cx, WORD PTR _Display$[ebp]
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A, cx

; 1749 : 		DisplayOptions.DispHeight = Display.DispHeight;

	mov	dx, WORD PTR _Display$[ebp+2]
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2, dx

; 1750 : 		DisplayOptions.DispDepth = Display.DispDepth;	// OW

	mov	eax, DWORD PTR _Display$[ebp+8]
	mov	DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8, eax

; 1751 : 		DisplayOptions.DispVideoCard = Display.DispVideoCard;

	mov	cl, BYTE PTR _Display$[ebp+4]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4, cl

; 1752 : 		DisplayOptions.DispVideoDriver = Display.DispVideoDriver;

	mov	dl, BYTE PTR _Display$[ebp+5]
	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5, dl

; 1753 : 		DisplayOptions.DispDepth = 32;	// Cobra - Always use 32-bit

	mov	DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8, 32 ; 00000020H

; 1754 : 	}
; 1755 : 	else

	jmp	SHORT $LN2@GraphicsDe
$LN3@GraphicsDe:

; 1756 : 	{
; 1757 : 		DisplayOptions.DispWidth = 1024; // JB 011124

	mov	eax, 1024				; 00000400H
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A, ax

; 1758 : 		DisplayOptions.DispHeight = 768; // JB 011124

	mov	ecx, 768				; 00000300H
	mov	WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2, cx

; 1759 : 		DisplayOptions.DispDepth = 32;	// Cobra - Always use 32-bit

	mov	DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8, 32 ; 00000020H

; 1760 : 		DisplayOptions.DispVideoCard = 0;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4, 0

; 1761 : 		DisplayOptions.DispVideoDriver = 0;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5, 0
$LN2@GraphicsDe:

; 1762 : 	}
; 1763 : 
; 1764 : 	if(Player.LoadOptions("default"))

	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	ecx, DWORD PTR _Player$[ebp]
	call	?LoadOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::LoadOptions

; 1765 : 	{
; 1766 : /*		PlayerOptions.DispFlags = DISP_HAZING|DISP_GOURAUD|DISP_SHADOWS;
; 1767 : //		PlayerOptions.DispTextureLevel = 4;
; 1768 : 		//PlayerOptions.DispTerrainDist = 64.0;
; 1769 : 		PlayerOptions.DispTerrainDist = 80.0; // JB 011124
; 1770 : 		PlayerOptions.DispMaxTerrainLevel = 0;
; 1771 : 		PlayerOptions.ObjFlags = DISP_OBJ_TEXTURES;
; 1772 : 		//PlayerOptions.SfxLevel = 4.0F;
; 1773 : 		PlayerOptions.SfxLevel = 5.0F; // JB 011124
; 1774 : 		//PlayerOptions.ObjDetailLevel = 1;
; 1775 : 		PlayerOptions.ObjDetailLevel = 2; // JB 011124
; 1776 : 		PlayerOptions.ObjMagnification = 1;
; 1777 : 		PlayerOptions.ObjDeaggLevel = 100;	// 2001-11-09 M.N. from 60
; 1778 : 		PlayerOptions.BldDeaggLevel = 5;	// 2001-11-09 M.N. from 3, Realism Patch default
; 1779 : 		PlayerOptions.PlayerBubble = 1.0F;
; 1780 : 
; 1781 : 		DisplayOptions.bRender2Texture = false;
; 1782 : 		DisplayOptions.bAnisotropicFiltering = false;
; 1783 : 		DisplayOptions.bLinearMipFiltering = false;
; 1784 : 		DisplayOptions.bMipmapping = false;
; 1785 : 		DisplayOptions.bZBuffering = false;
; 1786 : 		DisplayOptions.bRender2DCockpit = false;
; 1787 : 		DisplayOptions.bFontTexelAlignment = false;
; 1788 : 		DisplayOptions.m_texMode = DisplayOptionsClass::TEX_MODE_DDS;*/
; 1789 : 	}
; 1790 : 
; 1791 : 	SetupGraphicsControls();

	call	?SetupGraphicsControls@@YAXXZ		; SetupGraphicsControls
$LN5@GraphicsDe:

; 1792 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GraphicsDefaultsCB@@YAXJFPAVC_Base@@@Z ENDP		; GraphicsDefaultsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv711 = -28						; size = 4
_step$1 = -24						; size = 4
_win$ = -20						; size = 4
_lbox$ = -16						; size = 4
_ebox$ = -12						; size = 4
_button$ = -8						; size = 4
_slider$ = -4						; size = 4
?SetupGraphicsControls@@YAXXZ PROC			; SetupGraphicsControls

; 1540 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 1541 : 	C_Window	*win;
; 1542 : 	C_Button	*button;
; 1543 : 	C_ListBox	*lbox;
; 1544 : 	C_Slider	*slider;
; 1545 : 	C_EditBox	*ebox;
; 1546 : 	
; 1547 : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1548 : 	
; 1549 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN27@SetupGraph

; 1550 : 		return;

	jmp	$LN28@SetupGraph
$LN27@SetupGraph:

; 1551 : 		lbox=(C_ListBox *)win->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1552 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN26@SetupGraph

; 1553 : 	{
; 1554 : 		BuildVideoCardList(lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	call	?BuildVideoCardList@@YAXPAVC_ListBox@@@Z ; BuildVideoCardList
	add	esp, 4

; 1555 : 
; 1556 : 		lbox->SetValue(DisplayOptions.DispVideoCard + 1);

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1557 : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN26@SetupGraph:

; 1558 : 	}
; 1559 : 	
; 1560 : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1561 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN25@SetupGraph

; 1562 : 	{
; 1563 : 		BuildVideoDriverList(lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	call	?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z ; BuildVideoDriverList
	add	esp, 4

; 1564 : 
; 1565 : 		DisableEnableDrivers(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z ; DisableEnableDrivers
	add	esp, 4

; 1566 : 		lbox->SetValue(DisplayOptions.DispVideoDriver + 1);

	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1567 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN25@SetupGraph:

; 1568 : 	}
; 1569 : 
; 1570 : 	lbox=(C_ListBox *)win->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1571 : 	if(lbox != NULL)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN24@SetupGraph

; 1572 : 	{
; 1573 : 		DisableEnableResolutions(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?DisableEnableResolutions@@YAXPAVC_ListBox@@@Z ; DisableEnableResolutions
	add	esp, 4

; 1574 : 		lbox->SetValueText( DisplayOptions.DispWidth ); 

	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValueText@C_ListBox@@QAEXJ@Z	; C_ListBox::SetValueText

; 1575 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN24@SetupGraph:

; 1576 : 	}
; 1577 : 
; 1578 : 	button=(C_Button *)win->FindControl(70136);//GOUROUD

	push	70136					; 000111f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1579 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN23@SetupGraph

; 1580 : 	{
; 1581 : 		if(PlayerOptions.GouraudOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GouraudOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::GouraudOn
	test	eax, eax
	je	SHORT $LN22@SetupGraph

; 1582 : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1583 : 		else

	jmp	SHORT $LN21@SetupGraph
$LN22@SetupGraph:

; 1584 : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN21@SetupGraph:

; 1585 : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN23@SetupGraph:

; 1586 : 	}
; 1587 : 	
; 1588 : 	button=(C_Button *)win->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1589 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN20@SetupGraph

; 1590 : 	{
; 1591 : 		if(PlayerOptions.HazingOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?HazingOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::HazingOn
	test	eax, eax
	je	SHORT $LN19@SetupGraph

; 1592 : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1593 : 		else

	jmp	SHORT $LN18@SetupGraph
$LN19@SetupGraph:

; 1594 : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN18@SetupGraph:

; 1595 : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@SetupGraph:

; 1596 : 	}
; 1597 : 
; 1598 : 	//JAM 16Jan04
; 1599 : 	button=(C_Button *)win->FindControl(SETUP_SPECULAR_LIGHTING);

	push	70311					; 000112a7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1600 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN17@SetupGraph

; 1601 : 	{
; 1602 : 		if(DisplayOptions.bSpecularLighting)

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19
	test	ecx, ecx
	je	SHORT $LN16@SetupGraph

; 1603 : 			button->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 1604 : 		else

	jmp	SHORT $LN15@SetupGraph
$LN16@SetupGraph:

; 1605 : 			button->SetState(C_STATE_0);

	push	0
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN15@SetupGraph:

; 1606 : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN17@SetupGraph:

; 1607 : 	}
; 1608 : 
; 1609 : 	//JAM 07Dec03
; 1610 : 	button=(C_Button *)win->FindControl(SETUP_REALWEATHER_SHADOWS);

	push	70219					; 0001124bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1611 : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN14@SetupGraph

; 1612 : 	{
; 1613 : 		if(PlayerOptions.ShadowsOn())

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ShadowsOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::ShadowsOn
	test	eax, eax
	je	SHORT $LN13@SetupGraph

; 1614 : 			button->SetState(C_STATE_1);

	push	1
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1615 : 		else

	jmp	SHORT $LN12@SetupGraph
$LN13@SetupGraph:

; 1616 : 			button->SetState(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN12@SetupGraph:

; 1617 : 		button->Refresh();

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@SetupGraph:

; 1618 : 	}
; 1619 : 
; 1620 : /*	
; 1621 : 	button=(C_Button *)win->FindControl(BILINEAR_FILTERING);
; 1622 : 	if(button != NULL)
; 1623 : 	{
; 1624 : 		if(PlayerOptions.FilteringOn())
; 1625 : 			button->SetState(C_STATE_1);
; 1626 : 		else
; 1627 : 			button->SetState(C_STATE_0);
; 1628 : 		button->Refresh();
; 1629 : 	}
; 1630 : */	
; 1631 : /*	button=(C_Button *)win->FindControl(OBJECT_TEXTURES);
; 1632 : 	if(button != NULL)
; 1633 : 	{
; 1634 : 		if(PlayerOptions.ObjectTexturesOn())
; 1635 : 			button->SetState(C_STATE_1);
; 1636 : 		else
; 1637 : 			button->SetState(C_STATE_0);
; 1638 : 		button->Refresh();
; 1639 : 	}
; 1640 : */
; 1641 : 	slider=(C_Slider *)win->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1642 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN11@SetupGraph

; 1643 : 	{
; 1644 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1645 : 		ebox = (C_EditBox *)win->FindControl(OBJECT_DETAIL_READOUT);

	push	70107					; 000111dbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1646 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN10@SetupGraph

; 1647 : 		{
; 1648 : 			ebox->SetInteger(FloatToInt32(PlayerOptions.ObjDetailLevel*4.0F - 1.0F));

	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	mulss	xmm0, DWORD PTR __real@40800000
	subss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1649 : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1650 : 			slider->SetUserNumber(0,OBJECT_DETAIL_READOUT);

	push	70107					; 000111dbH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN10@SetupGraph:

; 1651 : 		}
; 1652 : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.ObjDetailLevel-0.5f)/1.5f));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+16
	subss	xmm1, DWORD PTR __real@3f000000
	mulss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1653 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@SetupGraph:

; 1654 : 	}
; 1655 : 
; 1656 : 	slider=(C_Slider *)win->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1657 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN9@SetupGraph

; 1658 : 	{
; 1659 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1660 : 		ebox = (C_EditBox *)win->FindControl(DISAGG_LEVEL_READOUT);

	push	70108					; 000111dcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1661 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN8@SetupGraph

; 1662 : 		{
; 1663 : 			// 2001-11-10 M.N. Added "+ 1" -> BldDeaggLevel = 0-5, display = 1-6
; 1664 : 			ebox->SetInteger(PlayerOptions.BldDeaggLevel + 1);

	mov	ecx, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+28
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1665 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1666 : 			slider->SetUserNumber(0,DISAGG_LEVEL_READOUT);

	push	70108					; 000111dcH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN8@SetupGraph:

; 1667 : 		}
; 1668 : 		slider->SetSliderPos((slider->GetSliderMax()-slider->GetSliderMin())*PlayerOptions.ObjDeaggLevel/100);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	imul	esi, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+24
	mov	eax, esi
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1669 : 		slider->Refresh();

	mov	edx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN9@SetupGraph:

; 1670 : 	}
; 1671 : 	
; 1672 : 		
; 1673 : 	slider=(C_Slider *)win->FindControl(VEHICLE_SIZE);

	push	70078					; 000111beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1674 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN7@SetupGraph

; 1675 : 	{
; 1676 : 		slider->Refresh();

	mov	eax, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1677 : 		slider->SetSliderPos(FloatToInt32((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.ObjMagnification - 1.0F)/4.0F));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+20
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1678 : 		ebox = (C_EditBox *)win->FindControl(VEHICLE_SIZE_READOUT);

	push	70109					; 000111ddH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1679 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN6@SetupGraph

; 1680 : 		{
; 1681 : 			ebox->SetInteger(FloatToInt32(PlayerOptions.ObjMagnification));

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+20
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1682 : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1683 : 			slider->SetUserNumber(0,VEHICLE_SIZE_READOUT);

	push	70109					; 000111ddH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN6@SetupGraph:

; 1684 : 		}
; 1685 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@SetupGraph:

; 1686 : 	}
; 1687 : 	
; 1688 : /*	slider=(C_Slider *)win->FindControl(TEXTURE_DISTANCE);
; 1689 : 	if(slider != NULL)
; 1690 : 	{
; 1691 : 		slider->Refresh();
; 1692 : 		ebox = (C_EditBox *)win->FindControl(TEX_DISTANCE_READOUT);
; 1693 : 		if(ebox)
; 1694 : 		{
; 1695 : 			ebox->SetInteger(PlayerOptions.DispTextureLevel + 1);
; 1696 : 			ebox->Refresh();
; 1697 : 			slider->SetUserNumber(0,TEX_DISTANCE_READOUT);
; 1698 : 		}
; 1699 : 		slider->SetSliderPos((slider->GetSliderMax()-slider->GetSliderMin())*(PlayerOptions.DispTextureLevel)/4);
; 1700 : 		slider->Refresh();
; 1701 : 	}
; 1702 : */
; 1703 : 	slider=(C_Slider *)win->FindControl(TERRAIN_DETAIL);

	push	70098					; 000111d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 1704 : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN2@SetupGraph

; 1705 : 	{
; 1706 : 		int step;
; 1707 : 		step = (slider->GetSliderMax()-slider->GetSliderMin())/6;

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	eax, esi
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	DWORD PTR _step$1[ebp], eax

; 1708 : 	
; 1709 : 		slider->Refresh();

	mov	edx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1710 : 		if(PlayerOptions.DispTerrainDist > 40)

	movss	xmm0, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4
	comiss	xmm0, DWORD PTR __real@42200000
	jbe	SHORT $LN4@SetupGraph

; 1711 : 			slider->SetSliderPos(FloatToInt32(step*(2+(PlayerOptions.DispTerrainDist - 40.0F)/10.0F)));

	cvtsi2ss xmm0, DWORD PTR _step$1[ebp]
	movss	xmm1, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+4
	subss	xmm1, DWORD PTR __real@42200000
	divss	xmm1, DWORD PTR __real@41200000
	addss	xmm1, DWORD PTR __real@40000000
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1712 : 		else 

	jmp	SHORT $LN3@SetupGraph
$LN4@SetupGraph:

; 1713 : 			slider->SetSliderPos((2 - PlayerOptions.DispMaxTerrainLevel)*step);

	mov	eax, 2
	sub	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+8
	imul	eax, DWORD PTR _step$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos
$LN3@SetupGraph:

; 1714 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1715 : 
; 1716 : 		ebox = (C_EditBox *)win->FindControl(TEX_DETAIL_READOUT);

	push	70106					; 000111daH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1717 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN2@SetupGraph

; 1718 : 		{
; 1719 : 			ebox->SetInteger( FloatToInt32(((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()))*6.0F + 1.5F) );

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv711[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv711[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40c00000
	addss	xmm1, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1720 : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1721 : 			slider->SetUserNumber(0,TEX_DETAIL_READOUT);

	push	70106					; 000111daH
	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN2@SetupGraph:

; 1722 : 		}
; 1723 : 	}
; 1724 : 
; 1725 : 	win=gMainHandler->FindWindow(SETUP_ADVANCED_WIN);

	push	70151					; 00011207H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax
$LN28@SetupGraph:

; 1726 : 	if(!win) return;
; 1727 : 
; 1728 : 	// M.N. SkyColor stuff
; 1729 : //	win = gMainHandler->FindWindow(SETUP_SKY_WIN);
; 1730 : //	if (win) { // JPO conditional
; 1731 : //	    lbox = (C_ListBox *) win->FindControl(SETUP_SKY_COLOR);
; 1732 : //	    if (lbox) lbox->SetValue(PlayerOptions.skycol);
; 1733 : //	}
; 1734 : 	// M.N. end SkyColor stuff
; 1735 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SetupGraphicsControls@@YAXXZ ENDP			; SetupGraphicsControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SeasonCB@@YAXJFPAVC_Base@@@Z PROC			; SeasonCB

; 1525 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1526 : 	if(hittype != C_TYPE_SELECT) return;

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN1@SeasonCB
	jmp	SHORT $LN2@SeasonCB
$LN1@SeasonCB:

; 1527 : 
; 1528 : 	C_ListBox *lbox=(C_ListBox*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _lbox$[ebp], ecx

; 1529 : 	PlayerOptions.Season = lbox->GetTextID()-70313;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 70313				; 000112a9H
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+48, eax
$LN2@SeasonCB:

; 1530 : 	//lbox->AddItem(70313,C_TYPE_ITEM,"Summer");
; 1531 : 	//lbox->AddItem(70314,C_TYPE_ITEM,"Fall");
; 1532 : 	//lbox->AddItem(70315,C_TYPE_ITEM,"Winter");
; 1533 : 	//lbox->AddItem(70316,C_TYPE_ITEM,"Spring");
; 1534 : 	//lbox->SetValue(PlayerOptions.Season+70313);
; 1535 : 	//lbox->Refresh();
; 1536 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SeasonCB@@YAXJFPAVC_Base@@@Z ENDP			; SeasonCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?RealWeatherCB@@YAXJFPAVC_Base@@@Z PROC			; RealWeatherCB

; 1478 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1479 : 	if(hittype != C_TYPE_SELECT) return;

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN8@RealWeathe
	jmp	$LN9@RealWeathe
$LN8@RealWeathe:

; 1480 : 
; 1481 : 	C_ListBox *lbox=(C_ListBox*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _lbox$[ebp], ecx

; 1482 : 
; 1483 : 	if( TheCampaign.InMainUI || !((WeatherClass *)realWeather)->lockedCondition )

	movzx	edx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+68
	test	edx, edx
	jne	SHORT $LN6@RealWeathe
	mov	eax, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [eax+16036], 0
	jne	SHORT $LN7@RealWeathe
$LN6@RealWeathe:

; 1484 : 	{
; 1485 : 		PlayerOptions.weatherCondition = lbox->GetTextID()-70207;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 70207				; 0001123fH
	mov	DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+44, eax

; 1486 : 		((WeatherClass *)realWeather)->UpdateCondition(PlayerOptions.weatherCondition, true);

	push	1
	mov	ecx, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+44
	push	ecx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?UpdateCondition@WeatherClass@@QAEXH_N@Z ; WeatherClass::UpdateCondition

; 1487 : 		((WeatherClass *)realWeather)->Init(true);

	push	1
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?Init@WeatherClass@@QAEX_N@Z		; WeatherClass::Init
	jmp	$LN9@RealWeathe
$LN7@RealWeathe:

; 1488 : 	}
; 1489 : 	else if( ((WeatherClass *)realWeather)->unlockableCondition == 0 )

	mov	edx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [edx+16044], 0
	jne	$LN4@RealWeathe

; 1490 : 	{
; 1491 : 		if( lbox->GetTextID() == 70213 )

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	cmp	eax, 70213				; 00011245H
	jne	$LN3@RealWeathe

; 1492 : 		{
; 1493 : 			lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1494 : 
; 1495 : 			lbox->AddItem(70208,C_TYPE_ITEM,"Sunny");

	push	OFFSET ??_C@_05JCFIOPBP@Sunny?$AA@
	push	50					; 00000032H
	push	70208					; 00011240H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1496 : 			lbox->AddItem(70209,C_TYPE_ITEM,"Fair");

	push	OFFSET ??_C@_04DHPLNOLG@Fair?$AA@
	push	50					; 00000032H
	push	70209					; 00011241H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1497 : 			lbox->AddItem(70210,C_TYPE_ITEM,"Poor");

	push	OFFSET ??_C@_04DMAJLHBF@Poor?$AA@
	push	50					; 00000032H
	push	70210					; 00011242H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1498 : 			lbox->AddItem(70211,C_TYPE_ITEM,"Inclement");

	push	OFFSET ??_C@_09MEHABAOA@Inclement?$AA@
	push	50					; 00000032H
	push	70211					; 00011243H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1499 : 
; 1500 : 			lbox->SetValue(realWeather->weatherCondition+70207);

	mov	eax, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	mov	ecx, DWORD PTR [eax+15688]
	add	ecx, 70207				; 0001123fH
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1501 : 			lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1502 : 
; 1503 : 			((WeatherClass *)realWeather)->lockedCondition = FALSE;

	mov	eax, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	mov	DWORD PTR [eax+16036], 0
$LN3@RealWeathe:

; 1504 : 		}
; 1505 : 	}

	jmp	$LN9@RealWeathe
$LN4@RealWeathe:

; 1506 : 	else if( lbox->GetTextID() == 70213 )

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	cmp	eax, 70213				; 00011245H
	jne	$LN9@RealWeathe

; 1507 : 	{
; 1508 : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1509 : 
; 1510 : 		lbox->AddItem(70208,C_TYPE_ITEM,"Sunny");

	push	OFFSET ??_C@_05JCFIOPBP@Sunny?$AA@
	push	50					; 00000032H
	push	70208					; 00011240H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1511 : 		lbox->AddItem(70209,C_TYPE_ITEM,"Fair");

	push	OFFSET ??_C@_04DHPLNOLG@Fair?$AA@
	push	50					; 00000032H
	push	70209					; 00011241H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1512 : 		lbox->AddItem(70210,C_TYPE_ITEM,"Poor");

	push	OFFSET ??_C@_04DMAJLHBF@Poor?$AA@
	push	50					; 00000032H
	push	70210					; 00011242H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1513 : 		lbox->AddItem(70211,C_TYPE_ITEM,"Inclement");

	push	OFFSET ??_C@_09MEHABAOA@Inclement?$AA@
	push	50					; 00000032H
	push	70211					; 00011243H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1514 : 
; 1515 : 		lbox->SetValue(realWeather->weatherCondition+70207);

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	mov	edx, DWORD PTR [ecx+15688]
	add	edx, 70207				; 0001123fH
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1516 : 		lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1517 : 
; 1518 : 		((WeatherClass *)realWeather)->lockedCondition = FALSE;

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	mov	DWORD PTR [ecx+16036], 0
$LN9@RealWeathe:

; 1519 : 	}
; 1520 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RealWeatherCB@@YAXJFPAVC_Base@@@Z ENDP			; RealWeatherCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ResolutionCB@@YAXJFPAVC_Base@@@Z PROC			; ResolutionCB

; 1471 : {

	push	ebp
	mov	ebp, esp

; 1472 : 	if(hittype != C_TYPE_SELECT)
; 1473 : 		return;
; 1474 : }

	pop	ebp
	ret	0
?ResolutionCB@@YAXJFPAVC_Base@@@Z ENDP			; ResolutionCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VideoDriverCB@@YAXJFPAVC_Base@@@Z PROC			; VideoDriverCB

; 1418 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1419 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN3@VideoDrive

; 1420 : 		return;

	jmp	SHORT $LN4@VideoDrive
$LN3@VideoDrive:

; 1421 : 	
; 1422 : 	C_ListBox *lbox = (C_ListBox *)control->Parent_->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1423 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN2@VideoDrive

; 1424 : 		BuildVideoCardList(lbox);

	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	call	?BuildVideoCardList@@YAXPAVC_ListBox@@@Z ; BuildVideoCardList
	add	esp, 4
$LN2@VideoDrive:

; 1425 : 
; 1426 : 	lbox = (C_ListBox *)control->Parent_->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1427 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@VideoDrive

; 1428 : 		BuildResolutionList(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?BuildResolutionList@@YAXPAVC_ListBox@@@Z ; BuildResolutionList
	add	esp, 4
$LN4@VideoDrive:

; 1429 : 
; 1430 : 	//DisableEnableResolutions //SET_RESOLUTION
; 1431 : 
; 1432 : // JB 011124 No relevance for the DX7 engine
; 1433 : /*
; 1434 : 	C_Button *button;
; 1435 : 	if( ((C_ListBox*)control)->GetTextID() > 1)
; 1436 : 	{
; 1437 : 		button=(C_Button *)control->Parent_->FindControl(ALPHA_BLENDING);
; 1438 : 		if(button != NULL)
; 1439 : 		{
; 1440 : 			button->SetState(C_STATE_1);
; 1441 : 			button->Refresh();
; 1442 : 		}
; 1443 : 		
; 1444 : 		button=(C_Button *)control->Parent_->FindControl(BILINEAR_FILTERING);
; 1445 : 		if(button != NULL)
; 1446 : 		{
; 1447 : 			button->SetState(C_STATE_1);
; 1448 : 			button->Refresh();
; 1449 : 		}
; 1450 : 	}
; 1451 : 	else
; 1452 : 	{
; 1453 : 		button=(C_Button *)control->Parent_->FindControl(ALPHA_BLENDING);
; 1454 : 		if(button != NULL)
; 1455 : 		{
; 1456 : 			button->SetState(C_STATE_0);
; 1457 : 			button->Refresh();
; 1458 : 		}
; 1459 : 		
; 1460 : 		button=(C_Button *)control->Parent_->FindControl(BILINEAR_FILTERING);
; 1461 : 		if(button != NULL)
; 1462 : 		{
; 1463 : 			button->SetState(C_STATE_0);
; 1464 : 			button->Refresh();
; 1465 : 		}
; 1466 : 	}
; 1467 : */
; 1468 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?VideoDriverCB@@YAXJFPAVC_Base@@@Z ENDP			; VideoDriverCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VideoCardCB@@YAXJFPAVC_Base@@@Z PROC			; VideoCardCB

; 1401 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1402 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@VideoCardC

; 1403 : 		return;

	jmp	SHORT $LN3@VideoCardC
$LN2@VideoCardC:

; 1404 : 	
; 1405 : 	C_ListBox *lbox;
; 1406 : 	
; 1407 : 
; 1408 : 	lbox = (C_ListBox *)control->Parent_->FindControl(SET_RESOLUTION);

	push	70118					; 000111e6H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1409 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN1@VideoCardC

; 1410 : 		BuildResolutionList(lbox);

	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	call	?BuildResolutionList@@YAXPAVC_ListBox@@@Z ; BuildResolutionList
	add	esp, 4
$LN1@VideoCardC:

; 1411 : 	//DisableEnableDrivers //SET_VIDEO_DRIVER
; 1412 : 	//DisableEnableResolutions //SET_RESOLUTION
; 1413 : 
; 1414 : 	SetAdvanced();

	call	?SetAdvanced@@YAXXZ			; SetAdvanced
$LN3@VideoCardC:

; 1415 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?VideoCardCB@@YAXJFPAVC_Base@@@Z ENDP			; VideoCardCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_pD3DDI$ = -52						; size = 4
_nDevice$ = -48						; size = 4
_nDriver$ = -44						; size = 4
tv271 = -40						; size = 4
tv231 = -36						; size = 4
tv211 = -32						; size = 4
tv191 = -28						; size = 4
tv171 = -24						; size = 4
tv151 = -20						; size = 4
_pDI$ = -16						; size = 4
_lbox$ = -12						; size = 4
_win$ = -8						; size = 4
_button$ = -4						; size = 4
?SetAdvanced@@YAXXZ PROC				; SetAdvanced

; 1238 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 1239 : 	C_Window	*win;
; 1240 : 	C_Button	*button;
; 1241 : 	C_ListBox	*lbox;
; 1242 : 
; 1243 : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1244 : 	if(win == NULL) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN14@SetAdvance
	jmp	$LN15@SetAdvance
$LN14@SetAdvance:

; 1245 : 
; 1246 : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1247 : 	if(!lbox) return;

	cmp	DWORD PTR _lbox$[ebp], 0
	jne	SHORT $LN13@SetAdvance
	jmp	$LN15@SetAdvance
$LN13@SetAdvance:

; 1248 : 	int nDriver = lbox->GetTextID() - 1;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _nDriver$[ebp], eax

; 1249 : 	lbox=(C_ListBox *)win->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1250 : 	if(!lbox) return;

	cmp	DWORD PTR _lbox$[ebp], 0
	jne	SHORT $LN12@SetAdvance
	jmp	$LN15@SetAdvance
$LN12@SetAdvance:

; 1251 : 	int nDevice = lbox->GetTextID() - 1;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _nDevice$[ebp], eax

; 1252 : 	DeviceManager::DDDriverInfo *pDI = FalconDisplay.devmgr.GetDriver(nDriver);

	mov	eax, DWORD PTR _nDriver$[ebp]
	push	eax
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z ; DeviceManager::GetDriver
	mov	DWORD PTR _pDI$[ebp], eax

; 1253 : 	if(!pDI) return;

	cmp	DWORD PTR _pDI$[ebp], 0
	jne	SHORT $LN11@SetAdvance
	jmp	$LN15@SetAdvance
$LN11@SetAdvance:

; 1254 : 	DeviceManager::DDDriverInfo::D3DDeviceInfo *pD3DDI = pDI->GetDevice(nDevice);

	mov	ecx, DWORD PTR _nDevice$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDI$[ebp]
	call	?GetDevice@DDDriverInfo@DeviceManager@@QAEPAVD3DDeviceInfo@12@H@Z ; DeviceManager::DDDriverInfo::GetDevice
	mov	DWORD PTR _pD3DDI$[ebp], eax

; 1255 : 	if(!pD3DDI) return;

	cmp	DWORD PTR _pD3DDI$[ebp], 0
	jne	SHORT $LN10@SetAdvance
	jmp	$LN15@SetAdvance
$LN10@SetAdvance:

; 1256 : 
; 1257 : 	win=gMainHandler->FindWindow(SETUP_ADVANCED_WIN);

	push	70151					; 00011207H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1258 : 	if(!win) return;

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN9@SetAdvance
	jmp	$LN15@SetAdvance
$LN9@SetAdvance:

; 1259 : 
; 1260 : 	//========================================
; 1261 : 	// FRB - Force Z-Buffering
; 1262 :      DisplayOptions.bZBuffering = TRUE;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16, 1

; 1263 : 	// FRB - Force Specular Lighting
; 1264 : //     DisplayOptions.bSpecularLighting = TRUE;
; 1265 :   // DDS textures only
; 1266 : //		 DisplayOptions.m_texMode = TEX_MODE_DDS;
; 1267 : 	//========================================
; 1268 : 
; 1269 : 	//JAM 12Oct03
; 1270 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_ANISOTROPIC_FILTERING);

	push	70152					; 00011208H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1271 : 	if(button) button->SetState(DisplayOptions.bAnisotropicFiltering ? C_STATE_1 : C_STATE_0);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN8@SetAdvance
	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+13
	test	edx, edx
	je	SHORT $LN17@SetAdvance
	mov	DWORD PTR tv151[ebp], 1
	jmp	SHORT $LN18@SetAdvance
$LN17@SetAdvance:
	mov	DWORD PTR tv151[ebp], 0
$LN18@SetAdvance:
	movzx	eax, WORD PTR tv151[ebp]
	push	eax
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN8@SetAdvance:

; 1272 : 
; 1273 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_LINEAR_MIPMAP_FILTERING);

	push	70154					; 0001120aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1274 : 	if(button) button->SetState(DisplayOptions.bLinearMipFiltering ? C_STATE_1 : C_STATE_0);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN7@SetAdvance
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+14
	test	ecx, ecx
	je	SHORT $LN19@SetAdvance
	mov	DWORD PTR tv171[ebp], 1
	jmp	SHORT $LN20@SetAdvance
$LN19@SetAdvance:
	mov	DWORD PTR tv171[ebp], 0
$LN20@SetAdvance:
	movzx	edx, WORD PTR tv171[ebp]
	push	edx
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN7@SetAdvance:

; 1275 : 
; 1276 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_RENDER_2DCOCKPIT);

	push	70163					; 00011213H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1277 : 	if(button) button->SetState(DisplayOptions.bRender2DCockpit ? C_STATE_1 : C_STATE_0);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN6@SetAdvance
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+17
	test	ecx, ecx
	je	SHORT $LN21@SetAdvance
	mov	DWORD PTR tv191[ebp], 1
	jmp	SHORT $LN22@SetAdvance
$LN21@SetAdvance:
	mov	DWORD PTR tv191[ebp], 0
$LN22@SetAdvance:
	movzx	edx, WORD PTR tv191[ebp]
	push	edx
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN6@SetAdvance:

; 1278 : 
; 1279 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_SCREEN_COORD_BIAS_FIX);

	push	70310					; 000112a6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1280 : 	if(button) button->SetState(DisplayOptions.bScreenCoordinateBiasFix ? C_STATE_1 : C_STATE_0);		//Wombat778 4-01-04

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN5@SetAdvance
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+20
	test	ecx, ecx
	je	SHORT $LN23@SetAdvance
	mov	DWORD PTR tv211[ebp], 1
	jmp	SHORT $LN24@SetAdvance
$LN23@SetAdvance:
	mov	DWORD PTR tv211[ebp], 0
$LN24@SetAdvance:
	movzx	edx, WORD PTR tv211[ebp]
	push	edx
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN5@SetAdvance:

; 1281 : 
; 1282 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_MIPMAPPING);

	push	70153					; 00011209H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1283 : 	if(button) button->SetState(DisplayOptions.bMipmapping ? C_STATE_1 : C_STATE_0);

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN4@SetAdvance
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+15
	test	ecx, ecx
	je	SHORT $LN25@SetAdvance
	mov	DWORD PTR tv231[ebp], 1
	jmp	SHORT $LN26@SetAdvance
$LN25@SetAdvance:
	mov	DWORD PTR tv231[ebp], 0
$LN26@SetAdvance:
	movzx	edx, WORD PTR tv231[ebp]
	push	edx
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN4@SetAdvance:

; 1284 : 
; 1285 : 	button = (C_Button *) win->FindControl(SETUP_ADVANCED_RENDER_TO_TEXTURE);

	push	70155					; 0001120bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 1286 : 	if(button)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN15@SetAdvance

; 1287 : 	{
; 1288 : 		if(pDI->SupportsSRT()) button->SetFlagBitOn(C_BIT_ENABLED);

	mov	ecx, DWORD PTR _pDI$[ebp]
	call	?SupportsSRT@DDDriverInfo@DeviceManager@@QAE_NXZ ; DeviceManager::DDDriverInfo::SupportsSRT
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@SetAdvance
	push	2048					; 00000800H
	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1289 : 		else

	jmp	SHORT $LN1@SetAdvance
$LN2@SetAdvance:

; 1290 : 		{
; 1291 : 			button->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1292 : 			DisplayOptions.bRender2Texture = false;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+12, 0
$LN1@SetAdvance:

; 1293 : 		}
; 1294 : 
; 1295 : 		button->SetState(DisplayOptions.bRender2Texture ? C_STATE_1 : C_STATE_0);

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+12
	test	ecx, ecx
	je	SHORT $LN27@SetAdvance
	mov	DWORD PTR tv271[ebp], 1
	jmp	SHORT $LN28@SetAdvance
$LN27@SetAdvance:
	mov	DWORD PTR tv271[ebp], 0
$LN28@SetAdvance:
	movzx	edx, WORD PTR tv271[ebp]
	push	edx
	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN15@SetAdvance:

; 1296 : 	}
; 1297 : 
; 1298 : // 	lbox = (C_ListBox *)win->FindControl(SETUP_ADVANCED_TEXTURE_MODE);
; 1299 : // 	if(lbox) lbox->SetValue(DisplayOptions.m_texMode);
; 1300 : 	//JAM
; 1301 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetAdvanced@@YAXXZ ENDP				; SetAdvanced
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DisableEnableResolutions@@YAXPAVC_ListBox@@@Z PROC	; DisableEnableResolutions

; 1234 : {

	push	ebp
	mov	ebp, esp

; 1235 : }

	pop	ebp
	ret	0
?DisableEnableResolutions@@YAXPAVC_ListBox@@@Z ENDP	; DisableEnableResolutions
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z PROC		; DisableEnableDrivers

; 1229 : {

	push	ebp
	mov	ebp, esp

; 1230 : 	
; 1231 : }

	pop	ebp
	ret	0
?DisableEnableDrivers@@YAXPAVC_ListBox@@@Z ENDP		; DisableEnableDrivers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_VidDriverList$ = -320					; size = 4
tv143 = -316						; size = 4
_value$ = -312						; size = 4
tv149 = -308						; size = 4
_VidCardList$ = -304					; size = 4
_pDI$ = -300						; size = 4
_Card$ = -296						; size = 4
_nNumItems$ = -292					; size = 4
_pD3DDI$ = -288						; size = 4
_Driver$ = -284						; size = 4
_isel$ = -280						; size = 4
_height$ = -276						; size = 4
_i$ = -272						; size = 4
_depth$ = -268						; size = 4
_width$ = -264						; size = 4
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lbox$ = 8						; size = 4
?BuildResolutionList@@YAXPAVC_ListBox@@@Z PROC		; BuildResolutionList

; 1156 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 320				; 00000140H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1157 : 	int i =0,Card,Driver;

	mov	DWORD PTR _i$[ebp], 0

; 1158 : 	char buf2[256];
; 1159 : 	long value;
; 1160 : 	UINT width,height,depth;
; 1161 : 	int isel = -1;

	mov	DWORD PTR _isel$[ebp], -1

; 1162 : 	int nNumItems = 0;

	mov	DWORD PTR _nNumItems$[ebp], 0

; 1163 : 
; 1164 : 	C_ListBox *VidDriverList = (C_ListBox *)lbox->Parent_->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _VidDriverList$[ebp], eax

; 1165 : 	Driver = VidDriverList->GetTextID() - 1;

	mov	ecx, DWORD PTR _VidDriverList$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _Driver$[ebp], eax

; 1166 : 
; 1167 : 	C_ListBox *VidCardList = (C_ListBox *)lbox->Parent_->FindControl(SET_VIDEO_CARD);

	push	70122					; 000111eaH
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _VidCardList$[ebp], eax

; 1168 : 	Card = VidCardList->GetTextID() - 1;

	mov	ecx, DWORD PTR _VidCardList$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _Card$[ebp], eax

; 1169 : 
; 1170 : 	value = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _value$[ebp], eax

; 1171 : 	lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1172 : 
; 1173 : 	DeviceManager::DDDriverInfo *pDI = FalconDisplay.devmgr.GetDriver(Driver);

	mov	edx, DWORD PTR _Driver$[ebp]
	push	edx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z ; DeviceManager::GetDriver
	mov	DWORD PTR _pDI$[ebp], eax

; 1174 : 	if(!pDI) return;

	cmp	DWORD PTR _pDI$[ebp], 0
	jne	SHORT $LN15@BuildResol
	jmp	$LN16@BuildResol
$LN15@BuildResol:

; 1175 : 	DeviceManager::DDDriverInfo::D3DDeviceInfo *pD3DDI = pDI->GetDevice(Card);

	mov	eax, DWORD PTR _Card$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDI$[ebp]
	call	?GetDevice@DDDriverInfo@DeviceManager@@QAEPAVD3DDeviceInfo@12@H@Z ; DeviceManager::DDDriverInfo::GetDevice
	mov	DWORD PTR _pD3DDI$[ebp], eax

; 1176 : 	if(!pD3DDI) return;

	cmp	DWORD PTR _pD3DDI$[ebp], 0
	jne	SHORT $LN13@BuildResol
	jmp	$LN16@BuildResol
$LN13@BuildResol:

; 1177 : 
; 1178 : // OW
; 1179 : #if 1
; 1180 : 	while(FalconDisplay.devmgr.GetMode(Driver,Card, i++, &width, &height, &depth))

	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	lea	edx, DWORD PTR _depth$[ebp]
	push	edx
	lea	eax, DWORD PTR _height$[ebp]
	push	eax
	lea	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv143[ebp]
	push	edx
	mov	eax, DWORD PTR _Card$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Driver$[ebp]
	push	ecx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetMode@DeviceManager@@QAE_NHHHPAI00@Z	; DeviceManager::GetMode
	movzx	edx, al
	mov	DWORD PTR tv149[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR tv149[ebp], 0
	je	$LN12@BuildResol

; 1181 : 	{
; 1182 : 		// For now we only allow 640x480, 800x600, 1280x960, 1600x1200
; 1183 : 		// (MPR already does the 4:3 aspect ratio check for us)
; 1184 : 		if(height > 400 && ((width == 640 || width == 800 || width == 1024 ||
; 1185 : 			(width == 1280 && height == 960) || width == 1600 || HighResolutionHackFlag)))

	cmp	DWORD PTR _height$[ebp], 400		; 00000190H
	jbe	$LN11@BuildResol
	cmp	DWORD PTR _width$[ebp], 640		; 00000280H
	je	SHORT $LN10@BuildResol
	cmp	DWORD PTR _width$[ebp], 800		; 00000320H
	je	SHORT $LN10@BuildResol
	cmp	DWORD PTR _width$[ebp], 1024		; 00000400H
	je	SHORT $LN10@BuildResol
	cmp	DWORD PTR _width$[ebp], 1280		; 00000500H
	jne	SHORT $LN9@BuildResol
	cmp	DWORD PTR _height$[ebp], 960		; 000003c0H
	je	SHORT $LN10@BuildResol
$LN9@BuildResol:
	cmp	DWORD PTR _width$[ebp], 1600		; 00000640H
	je	SHORT $LN10@BuildResol
	cmp	DWORD PTR ?HighResolutionHackFlag@@3HA, 0 ; HighResolutionHackFlag
	je	$LN11@BuildResol
$LN10@BuildResol:

; 1186 : 		{
; 1187 : 			if(depth == 8 || depth == 24)

	cmp	DWORD PTR _depth$[ebp], 8
	je	SHORT $LN7@BuildResol
	cmp	DWORD PTR _depth$[ebp], 24		; 00000018H
	jne	SHORT $LN8@BuildResol
$LN7@BuildResol:

; 1188 : 				continue;

	jmp	$LN13@BuildResol
$LN8@BuildResol:

; 1189 : 
; 1190 : //			if(depth == 16 && !(pD3DDI->m_devDesc.dwDeviceRenderBitDepth & DDBD_16))
; 1191 : 			if(depth == 16)

	cmp	DWORD PTR _depth$[ebp], 16		; 00000010H
	jne	SHORT $LN6@BuildResol

; 1192 : 				continue;

	jmp	$LN13@BuildResol
	jmp	SHORT $LN5@BuildResol
$LN6@BuildResol:

; 1193 : 			else if(depth == 32 && !(pD3DDI->m_devDesc.dwDeviceRenderBitDepth & DDBD_32))

	cmp	DWORD PTR _depth$[ebp], 32		; 00000020H
	jne	SHORT $LN5@BuildResol
	mov	ecx, DWORD PTR _pD3DDI$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	and	edx, 256				; 00000100H
	jne	SHORT $LN5@BuildResol

; 1194 : 				continue;

	jmp	$LN13@BuildResol
$LN5@BuildResol:

; 1195 : 
; 1196 : 			sprintf(buf2, "%0dx%0d - %d Bit", width, height, depth);

	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _height$[ebp]
	push	ecx
	mov	edx, DWORD PTR _width$[ebp]
	push	edx
	push	OFFSET ??_C@_0BB@GBPIJPJG@?$CF0dx?$CF0d?5?9?5?$CFd?5Bit?$AA@
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 1197 : 			lbox->AddItem(i - 1, C_TYPE_ITEM, buf2);

	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1198 : 
; 1199 : 			// remember index for current mode
; 1200 : 			if(width == DisplayOptions.DispWidth && height == DisplayOptions.DispHeight && depth == DisplayOptions.DispDepth)

	movzx	eax, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	DWORD PTR _width$[ebp], eax
	jne	SHORT $LN3@BuildResol
	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+2
	cmp	DWORD PTR _height$[ebp], ecx
	jne	SHORT $LN3@BuildResol
	mov	edx, DWORD PTR _depth$[ebp]
	cmp	edx, DWORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+8
	jne	SHORT $LN3@BuildResol

; 1201 : 				isel = i - 1;

	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _isel$[ebp], eax
$LN3@BuildResol:

; 1202 : 
; 1203 : 			nNumItems++;

	mov	ecx, DWORD PTR _nNumItems$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nNumItems$[ebp], ecx
$LN11@BuildResol:

; 1204 : 		}
; 1205 : 	}

	jmp	$LN13@BuildResol
$LN12@BuildResol:

; 1206 : 
; 1207 : 	ShiAssert(i>0);
; 1208 : 	if(isel != -1) lbox->SetValue(isel);

	cmp	DWORD PTR _isel$[ebp], -1
	je	SHORT $LN2@BuildResol
	mov	edx, DWORD PTR _isel$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN1@BuildResol
$LN2@BuildResol:

; 1209 : 	else lbox->SetValue(value);

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN1@BuildResol:

; 1210 : 	lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@BuildResol:

; 1211 : #else
; 1212 : 	while(buf = FalconDisplay.devmgr.GetModeName(Driver,Card,i))
; 1213 : 	{
; 1214 : 		strcpy(buf2,buf);
; 1215 : 		i++;
; 1216 : 		sscanf(buf2,"%d x %d",&width,&height);
; 1217 : 		//sscanf(buf2,"%d",&width);
; 1218 : 
; 1219 : 		lbox->AddItem(width,C_TYPE_ITEM,buf2);
; 1220 : 	}
; 1221 : 
; 1222 : 	ShiAssert(i>0);
; 1223 : 	lbox->SetValue(value);
; 1224 : 	lbox->Refresh();
; 1225 : #endif
; 1226 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?BuildResolutionList@@YAXPAVC_ListBox@@@Z ENDP		; BuildResolutionList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_buf$ = -268						; size = 4
_i$ = -264						; size = 4
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lbox$ = 8						; size = 4
?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z PROC		; BuildVideoDriverList

; 1133 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1134 : 	char		buf2[256];
; 1135 : 	const char	*buf;
; 1136 : 	int			i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 1137 : 
; 1138 : 	lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems
$LN3@BuildVideo:

; 1139 : 
; 1140 : 	while(buf = FalconDisplay.devmgr.GetDriverName(i))

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDriverName@DeviceManager@@QAEPBDH@Z	; DeviceManager::GetDriverName
	mov	DWORD PTR _buf$[ebp], eax
	cmp	DWORD PTR _buf$[ebp], 0
	je	SHORT $LN2@BuildVideo

; 1141 : 	{
; 1142 : 		if(FalconDisplay.devmgr.GetDeviceName(i,0))

	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDeviceName@DeviceManager@@QAEPBDHH@Z ; DeviceManager::GetDeviceName
	test	eax, eax
	je	SHORT $LN1@BuildVideo

; 1143 : 		{
; 1144 : 			strcpy(buf2,buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1145 : 			lbox->AddItem(i + 1,C_TYPE_ITEM,buf2);

	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem
$LN1@BuildVideo:

; 1146 : 		}
; 1147 : 
; 1148 : 		i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 1149 : 	}

	jmp	SHORT $LN3@BuildVideo
$LN2@BuildVideo:

; 1150 : 	ShiAssert(i>0);
; 1151 : 	lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1152 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?BuildVideoDriverList@@YAXPAVC_ListBox@@@Z ENDP		; BuildVideoDriverList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_value$ = -288						; size = 4
_VidCardList$ = -284					; size = 4
_Driver$ = -280						; size = 4
_pDI$ = -276						; size = 4
_buf$ = -272						; size = 4
_pD3DDI$1 = -268					; size = 4
_i$ = -264						; size = 4
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lbox$ = 8						; size = 4
?BuildVideoCardList@@YAXPAVC_ListBox@@@Z PROC		; BuildVideoCardList

; 1091 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1092 : 	const char *buf;
; 1093 : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 1094 : 	int Driver;
; 1095 : 	char buf2[256];
; 1096 : 	long value;
; 1097 : 
; 1098 : 	C_ListBox *VidCardList = (C_ListBox *)lbox->Parent_->FindControl(SET_VIDEO_DRIVER);

	push	70120					; 000111e8H
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _VidCardList$[ebp], eax

; 1099 : 	Driver = VidCardList->GetTextID() - 1;

	mov	ecx, DWORD PTR _VidCardList$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _Driver$[ebp], eax

; 1100 : 
; 1101 : 	DeviceManager::DDDriverInfo *pDI = FalconDisplay.devmgr.GetDriver(Driver);

	mov	ecx, DWORD PTR _Driver$[ebp]
	push	ecx
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDriver@DeviceManager@@QAEPAVDDDriverInfo@1@H@Z ; DeviceManager::GetDriver
	mov	DWORD PTR _pDI$[ebp], eax

; 1102 : 	if(!pDI) return;

	cmp	DWORD PTR _pDI$[ebp], 0
	jne	SHORT $LN5@BuildVideo
	jmp	$LN6@BuildVideo
$LN5@BuildVideo:

; 1103 : 
; 1104 : 	value = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _value$[ebp], eax

; 1105 : 	lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems
$LN4@BuildVideo:

; 1106 : 
; 1107 : 	while(buf = FalconDisplay.devmgr.GetDeviceName(Driver, i))

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _Driver$[ebp]
	push	eax
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+116
	call	?GetDeviceName@DeviceManager@@QAEPBDHH@Z ; DeviceManager::GetDeviceName
	mov	DWORD PTR _buf$[ebp], eax
	cmp	DWORD PTR _buf$[ebp], 0
	je	$LN3@BuildVideo

; 1108 : 	{
; 1109 : 		if(!g_bEnumSoftwareDevices)

	movzx	ecx, BYTE PTR ?g_bEnumSoftwareDevices@@3_NA ; g_bEnumSoftwareDevices
	test	ecx, ecx
	jne	SHORT $LN2@BuildVideo

; 1110 : 		{
; 1111 : 			// check for software device
; 1112 : 			DeviceManager::DDDriverInfo::D3DDeviceInfo *pD3DDI = pDI->GetDevice(i);

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDI$[ebp]
	call	?GetDevice@DDDriverInfo@DeviceManager@@QAEPAVD3DDeviceInfo@12@H@Z ; DeviceManager::DDDriverInfo::GetDevice
	mov	DWORD PTR _pD3DDI$1[ebp], eax

; 1113 : 			if(pD3DDI && !pD3DDI->IsHardware())

	cmp	DWORD PTR _pD3DDI$1[ebp], 0
	je	SHORT $LN2@BuildVideo
	mov	ecx, DWORD PTR _pD3DDI$1[ebp]
	call	?IsHardware@D3DDeviceInfo@DDDriverInfo@DeviceManager@@QAE_NXZ ; DeviceManager::DDDriverInfo::D3DDeviceInfo::IsHardware
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@BuildVideo

; 1114 : 			{
; 1115 : 				i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 1116 : 				continue;

	jmp	SHORT $LN4@BuildVideo
$LN2@BuildVideo:

; 1117 : 			}
; 1118 : 		}
; 1119 : 
; 1120 : 		strcpy(buf2,buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1121 : 		i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 1122 : 
; 1123 : 		lbox->AddItem(i,C_TYPE_ITEM,buf2);

	lea	edx, DWORD PTR _buf2$[ebp]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1124 : 	}

	jmp	$LN4@BuildVideo
$LN3@BuildVideo:

; 1125 : 
; 1126 : 	ShiAssert(i>0);
; 1127 : 	lbox->SetValue(value);

	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1128 : 	lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN6@BuildVideo:

; 1129 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?BuildVideoCardList@@YAXPAVC_ListBox@@@Z ENDP		; BuildVideoCardList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_pos$ = -16						; size = 4
tv154 = -12						; size = 4
_ebox$ = -8						; size = 4
_slider$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SfxLevelCB@@YAXJFPAVC_Base@@@Z PROC			; SfxLevelCB

; 1069 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 1070 : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN2@SfxLevelCB

; 1071 : 		return;

	jmp	$LN3@SfxLevelCB
$LN2@SfxLevelCB:

; 1072 : 	
; 1073 : 	C_Slider	*slider;
; 1074 : 	slider = (C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 1075 : 	int pos;
; 1076 : 	pos = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 4.0f);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv154[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv154[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40800000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _pos$[ebp], eax

; 1077 : 		
; 1078 : 	C_EditBox *ebox;
; 1079 : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1080 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN1@SfxLevelCB

; 1081 : 	{
; 1082 : 		ebox->SetInteger(pos + 1);

	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1083 : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@SfxLevelCB:
$LN3@SfxLevelCB:

; 1084 : 	}
; 1085 : 
; 1086 : 	
; 1087 : }//SfxLevelCB

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SfxLevelCB@@YAXJFPAVC_Base@@@Z ENDP			; SfxLevelCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_bsplist$1 = -96					; size = 4
$T2 = -92						; size = 4
_disagglvl$3 = -88					; size = 4
tv476 = -84						; size = 4
tv480 = -80						; size = 4
tv478 = -76						; size = 4
tv235 = -72						; size = 4
_terrdist$4 = -68					; size = 4
_button$5 = -64						; size = 4
$T6 = -60						; size = 4
_ebox$ = -56						; size = 4
_tslider$7 = -52					; size = 4
_i$8 = -48						; size = 4
_step$ = -44						; size = 4
_cur$9 = -40						; size = 4
_terrlvl$10 = -36					; size = 2
_i$11 = -32						; size = 4
_renderer$12 = -28					; size = 4
_viewpt$13 = -24					; size = 4
_slider$ = -20						; size = 4
_pos$14 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TerrainDetailCB@@YAXJFPAVC_Base@@@Z PROC		; TerrainDetailCB

; 851  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 852  : 	C_Slider *slider;
; 853  : 	static int prevpos = -1;
; 854  : 
; 855  : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN24@TerrainDet

; 856  : 		return;

	jmp	$LN25@TerrainDet
$LN24@TerrainDet:

; 857  : 
; 858  : 	slider=(C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 859  : 
; 860  : 	C_EditBox *ebox;
; 861  : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 862  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN23@TerrainDet

; 863  : 	{
; 864  : 		ebox->SetInteger(FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*6.0F*GraphicSettingMult  + 1.5F));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv476[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv476[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40c00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 865  : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN23@TerrainDet:

; 866  : 	}
; 867  : 
; 868  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN22@TerrainDet

; 869  : 		return;

	jmp	$LN25@TerrainDet
$LN22@TerrainDet:

; 870  : 	
; 871  : 	int step;
; 872  : 	step = (slider->GetSliderMax()-slider->GetSliderMin())/(6*GraphicSettingMult);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	ecx, DWORD PTR ?GraphicSettingMult@@3HA	; GraphicSettingMult
	imul	ecx, 6
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _step$[ebp], eax

; 873  : 
; 874  : 	if(abs(slider->GetSliderPos() - prevpos) > step - 1)

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	sub	eax, DWORD PTR ?prevpos@?1??TerrainDetailCB@@YAXJFPAVC_Base@@@Z@4HA
	push	eax
	call	?abs@@YAJJ@Z				; abs
	add	esp, 4
	mov	edx, DWORD PTR _step$[ebp]
	sub	edx, 1
	cmp	eax, edx
	jle	$LN21@TerrainDet

; 875  : 	{
; 876  : 		SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 877  : 
; 878  : 		int disagglvl;
; 879  : 		short terrlvl;
; 880  : 		float terrdist;
; 881  : 		RenderOTW	*renderer;
; 882  : 		RViewPoint	*viewpt;
; 883  : 		C_BSPList	*bsplist;
; 884  : 		BSPLIST		*cur;
; 885  : 		Tpoint		pos;
; 886  : 		
; 887  : 		prevpos = slider->GetSliderPos();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	DWORD PTR ?prevpos@?1??TerrainDetailCB@@YAXJFPAVC_Base@@@Z@4HA, eax

; 888  : 
; 889  : 		if(slider->GetSliderPos() > 2*step){

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	edx, DWORD PTR _step$[ebp]
	shl	edx, 1
	cmp	eax, edx
	jle	SHORT $LN20@TerrainDet

; 890  : 			terrdist = 40.0f + ( (float)slider->GetSliderPos()/step - 2) * 10.0f;

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _step$[ebp]
	divss	xmm0, xmm1
	subss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR _terrdist$4[ebp], xmm0

; 891  : 			terrlvl = 0;

	xor	eax, eax
	mov	WORD PTR _terrlvl$10[ebp], ax

; 892  : 		}
; 893  : 		else {

	jmp	SHORT $LN19@TerrainDet
$LN20@TerrainDet:

; 894  : 			terrdist = 40.0f;

	movss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR _terrdist$4[ebp], xmm0

; 895  : 			terrlvl = static_cast<short>(FloatToInt32(2.0F - ((float)slider->GetSliderPos()/step)));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _step$[ebp]
	divss	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@40000000
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR _terrlvl$10[ebp], ax
$LN19@TerrainDet:

; 896  : 		}
; 897  : 					
; 898  : 		F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 899  : 		if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	$LN18@TerrainDet

; 900  : 		{
; 901  : 			C_Slider *tslider;
; 902  : 			C_Button *button;
; 903  : 
; 904  : 			renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$12[ebp], eax

; 905  : 			viewpt = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _viewpt$13[ebp], eax

; 906  : 			
; 907  : 			viewpt->GetPos(&pos);

	lea	edx, DWORD PTR _pos$14[ebp]
	push	edx
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	call	?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z	; TViewPoint::GetPos

; 908  : 			
; 909  : 			//SetupViewer->Cleanup();
; 910  : 			bsplist = SetupViewer->GetBSPList();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ ; C_3dViewer::GetBSPList
	mov	DWORD PTR _bsplist$1[ebp], eax

; 911  : 			cur=bsplist->GetFirst();

	mov	ecx, DWORD PTR _bsplist$1[ebp]
	call	?GetFirst@C_BSPList@@QAEPAUUI_BSPList@@XZ ; C_BSPList::GetFirst
	mov	DWORD PTR _cur$9[ebp], eax
$LN17@TerrainDet:

; 912  : 			while(cur)

	cmp	DWORD PTR _cur$9[ebp], 0
	je	SHORT $LN16@TerrainDet

; 913  : 			{
; 914  : 				if(((DrawableBSP*)cur->object)->InDisplayList())

	mov	eax, DWORD PTR _cur$9[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?InDisplayList@DrawableObject@@QAEHXZ	; DrawableObject::InDisplayList
	test	eax, eax
	je	SHORT $LN15@TerrainDet

; 915  : 					viewpt->RemoveObject(cur->object);

	mov	ecx, DWORD PTR _cur$9[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject
$LN15@TerrainDet:

; 916  : 				cur=cur->Next;

	mov	eax, DWORD PTR _cur$9[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _cur$9[ebp], ecx

; 917  : 			}

	jmp	SHORT $LN17@TerrainDet
$LN16@TerrainDet:

; 918  : 
; 919  : 			viewpt->RemoveObject(Smoke);

	mov	edx, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	push	edx
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject

; 920  : 			delete Smoke;

	mov	eax, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN27@TerrainDet
	push	1
	mov	edx, DWORD PTR $T6[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv235[ebp], eax
	jmp	SHORT $LN28@TerrainDet
$LN27@TerrainDet:
	mov	DWORD PTR tv235[ebp], 0
$LN28@TerrainDet:

; 921  : 			Smoke = NULL;

	mov	DWORD PTR ?Smoke@@3PAVDrawable2D@@A, 0	; Smoke

; 922  : 			viewpt->Cleanup();

	mov	eax, DWORD PTR _viewpt$13[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax

; 923  : 			//viewpt = new RViewPoint;
; 924  : 			viewpt->Setup(terrdist*FEET_PER_KM,terrlvl,4,DisplayOptions.bZBuffering);

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	push	ecx
	push	4
	movsx	edx, WORD PTR _terrlvl$10[ebp]
	push	edx
	movss	xmm0, DWORD PTR _terrdist$4[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	call	?Setup@RViewPoint@@QAEXMHH_N@Z		; RViewPoint::Setup

; 925  : 			viewpt->Update(&pos);

	lea	eax, DWORD PTR _pos$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _viewpt$13[ebp]
	call	?Update@RViewPoint@@QAEXPBUTpoint@@@Z	; RViewPoint::Update

; 926  : 			
; 927  : 			renderer->Cleanup();

	mov	ecx, DWORD PTR _renderer$12[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _renderer$12[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 928  : 
; 929  : 			renderer->Setup(gMainHandler->GetFront(),viewpt);

	mov	ecx, DWORD PTR _viewpt$13[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetFront@C_Handler@@QAEPAVImageBuffer@@XZ ; C_Handler::GetFront
	push	eax
	mov	edx, DWORD PTR _renderer$12[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _renderer$12[ebp]
	mov	edx, DWORD PTR [eax+144]
	call	edx

; 930  : 
; 931  : 			//reset all values for new renderer
; 932  : 			tslider = (C_Slider *)control->Parent_->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tslider$7[ebp], eax

; 933  : 			if(tslider)

	cmp	DWORD PTR _tslider$7[ebp], 0
	je	SHORT $LN14@TerrainDet

; 934  : 			{
; 935  : 				renderer->SetObjectDetail((float)tslider->GetSliderPos()/(tslider->GetSliderMax()-tslider->GetSliderMin())*1.5f + 0.5f);

	mov	ecx, DWORD PTR _tslider$7[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _tslider$7[ebp]
	movss	DWORD PTR tv478[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _tslider$7[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv478[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3fc00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, DWORD PTR _renderer$12[ebp]
	call	?SetObjectDetail@Render3D@@QAEXM@Z	; Render3D::SetObjectDetail
$LN14@TerrainDet:

; 936  : 			}
; 937  : 
; 938  : /*			tslider = (C_Slider *)control->Parent_->FindControl(TEXTURE_DISTANCE);
; 939  : 			if(tslider)
; 940  : 			{
; 941  : 				renderer->SetTerrainTextureLevel(FloatToInt32((float)tslider->GetSliderPos()/(tslider->GetSliderMax()-tslider->GetSliderMin())* 4.0f));
; 942  : 			}
; 943  : 
; 944  : 			button = (C_Button *)control->Parent_->FindControl(OBJECT_TEXTURES);
; 945  : 			if(button)
; 946  : 			{
; 947  : 				if(button->GetState())
; 948  : 					renderer->SetObjectTextureState( TRUE );
; 949  : 				else
; 950  : 					renderer->SetObjectTextureState( FALSE );
; 951  : 			}
; 952  : 			button = (C_Button *)control->Parent_->FindControl(BILINEAR_FILTERING);
; 953  : 
; 954  : 			if(button)
; 955  : 			{
; 956  : 				if(button->GetState())
; 957  : 					renderer->SetFilteringMode( TRUE );
; 958  : 				else
; 959  : 					renderer->SetFilteringMode( FALSE );
; 960  : 			}
; 961  : */			
; 962  : 
; 963  : /*			button = (C_Button *)control->Parent_->FindControl(ALPHA_BLENDING);
; 964  : 			if(button)
; 965  : 			{
; 966  : 				if(button->GetState())
; 967  : 					renderer->SetAlphaMode( TRUE );
; 968  : 				else
; 969  : 					renderer->SetAlphaMode( FALSE );
; 970  : 			}
; 971  : */
; 972  : 			button = (C_Button *)control->Parent_->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$5[ebp], eax

; 973  : 			if(button)

	cmp	DWORD PTR _button$5[ebp], 0
	je	SHORT $LN11@TerrainDet

; 974  : 			{
; 975  : 				if(button->GetState())

	mov	edx, DWORD PTR _button$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$5[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	je	SHORT $LN12@TerrainDet

; 976  : 					renderer->SetHazeMode( TRUE );

	push	1
	mov	ecx, DWORD PTR _renderer$12[ebp]
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode

; 977  : 				else

	jmp	SHORT $LN11@TerrainDet
$LN12@TerrainDet:

; 978  : 					renderer->SetHazeMode( FALSE );

	push	0
	mov	ecx, DWORD PTR _renderer$12[ebp]
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode
$LN11@TerrainDet:

; 979  : 			}
; 980  : 
; 981  : /*			button = (C_Button *)control->Parent_->FindControl(GOUROUD);
; 982  : 			if(button)
; 983  : 			{
; 984  : 				if(button->GetState())
; 985  : 					renderer->SetSmoothShadingMode( TRUE );
; 986  : 				else
; 987  : 					renderer->SetSmoothShadingMode( FALSE );
; 988  : 			}
; 989  : */
; 990  : 
; 991  : 			InitializeViewer((C_Window *)control->Parent_, renderer);

	mov	ecx, DWORD PTR _renderer$12[ebp]
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?InitializeViewer@@YAXPAVC_Window@@PAVRenderOTW@@@Z ; InitializeViewer
	add	esp, 8

; 992  : 
; 993  : 			SetupViewer->Viewport((C_Window *)control->Parent_,2);

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 994  : 
; 995  : 			slider=(C_Slider *)control->Parent_->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 996  : 			if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN6@TerrainDet

; 997  : 			{
; 998  : 				disagglvl = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 5 + 0.5F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv480[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv480[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40a00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _disagglvl$3[ebp], eax

; 999  : 			
; 1000 : 				if(NumFeatures)

	movsx	ecx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	test	ecx, ecx
	je	SHORT $LN6@TerrainDet

; 1001 : 				{
; 1002 : 					for(int i=0;i<NumFeatures;i++)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN8@TerrainDet
$LN7@TerrainDet:
	mov	edx, DWORD PTR _i$11[ebp]
	add	edx, 1
	mov	DWORD PTR _i$11[ebp], edx
$LN8@TerrainDet:
	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	cmp	DWORD PTR _i$11[ebp], eax
	jge	SHORT $LN6@TerrainDet

; 1003 : 					{
; 1004 : 						if(Features[i].Priority <= disagglvl)

	mov	ecx, DWORD PTR _i$11[ebp]
	imul	ecx, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR _disagglvl$3[ebp]
	mov	edx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	comiss	xmm0, DWORD PTR [edx+ecx+4]
	jb	SHORT $LN5@TerrainDet

; 1005 : 							SetupViewer->AddToView(i + 100);

	mov	eax, DWORD PTR _i$11[ebp]
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?AddToView@C_3dViewer@@QAEHJ@Z		; C_3dViewer::AddToView
$LN5@TerrainDet:

; 1006 : 					}

	jmp	SHORT $LN7@TerrainDet
$LN6@TerrainDet:

; 1007 : 				}
; 1008 : 			}
; 1009 : 			
; 1010 : 			if(NumObjects)

	movsx	ecx, WORD PTR ?NumObjects@@3FA		; NumObjects
	test	ecx, ecx
	je	SHORT $LN1@TerrainDet

; 1011 : 			{
; 1012 : 				for(int i=0;i<NumObjects;i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN3@TerrainDet
$LN2@TerrainDet:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN3@TerrainDet:
	movsx	eax, WORD PTR ?NumObjects@@3FA		; NumObjects
	cmp	DWORD PTR _i$8[ebp], eax
	jge	SHORT $LN1@TerrainDet

; 1013 : 				{	
; 1014 : 					SetupViewer->AddToView(i);

	mov	ecx, DWORD PTR _i$8[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?AddToView@C_3dViewer@@QAEHJ@Z		; C_3dViewer::AddToView

; 1015 : 				}

	jmp	SHORT $LN2@TerrainDet
$LN1@TerrainDet:

; 1016 : 			}
; 1017 : 
; 1018 : 			InsertSmokeCloud();

	call	?InsertSmokeCloud@@YAXXZ		; InsertSmokeCloud

; 1019 : 			
; 1020 : 			SetCursor(gCursors[CRSR_F16]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4
$LN18@TerrainDet:

; 1021 : 		}
; 1022 : 		F4LeaveCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 1023 : 		
; 1024 : 			
; 1025 : 		
; 1026 : 		control->Parent_->RefreshWindow();

	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN21@TerrainDet:
$LN25@TerrainDet:

; 1027 : 	}
; 1028 : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?TerrainDetailCB@@YAXJFPAVC_Base@@@Z ENDP		; TerrainDetailCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv179 = -20						; size = 4
_scale$ = -16						; size = 4
_ebox$ = -12						; size = 4
_slider$ = -8						; size = 4
_list$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VehicleSizeCB@@YAXJFPAVC_Base@@@Z PROC			; VehicleSizeCB

; 802  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi

; 803  : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN7@VehicleSiz

; 804  : 		return;

	jmp	$LN8@VehicleSiz
$LN7@VehicleSiz:

; 805  : 
; 806  : 	C_Slider	*slider;
; 807  : 	BSPLIST		*list;
; 808  : 	int			scale;
; 809  : 
; 810  : 	slider=(C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 811  : 	scale = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 4 + 1);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv179[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv179[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40800000
	addss	xmm1, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _scale$[ebp], eax

; 812  : 
; 813  : 	C_EditBox *ebox;
; 814  : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 815  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN6@VehicleSiz

; 816  : 	{
; 817  : 		ebox->SetInteger(scale);

	mov	eax, DWORD PTR _scale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 818  : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@VehicleSiz:

; 819  : 	}
; 820  : 
; 821  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN5@VehicleSiz

; 822  : 		return;

	jmp	SHORT $LN8@VehicleSiz
$LN5@VehicleSiz:

; 823  : 
; 824  : 	
; 825  : 	static int	prevscale;
; 826  : 
; 827  : 	
; 828  : 	if(prevscale != scale)

	mov	ecx, DWORD PTR ?prevscale@?8??VehicleSizeCB@@YAXJFPAVC_Base@@@Z@4HA
	cmp	ecx, DWORD PTR _scale$[ebp]
	je	SHORT $LN4@VehicleSiz

; 829  : 	{
; 830  : 		list = ((C_BSPList	*)SetupViewer->GetBSPList())->Root_;

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ ; C_3dViewer::GetBSPList
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _list$[ebp], edx
$LN3@VehicleSiz:

; 831  : 		
; 832  : 		while(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN2@VehicleSiz

; 833  : 		{
; 834  : 			if(list->ID < 100)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax], 100			; 00000064H
	jge	SHORT $LN1@VehicleSiz

; 835  : 				list->object->SetScale((float)scale);

	cvtsi2ss xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?SetScale@DrawableObject@@QAEXM@Z	; DrawableObject::SetScale
$LN1@VehicleSiz:

; 836  : 
; 837  : 			list = list->Next;

	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _list$[ebp], eax

; 838  : 		}

	jmp	SHORT $LN3@VehicleSiz
$LN2@VehicleSiz:

; 839  : 		
; 840  : 		prevscale = scale;

	mov	ecx, DWORD PTR _scale$[ebp]
	mov	DWORD PTR ?prevscale@?8??VehicleSizeCB@@YAXJFPAVC_Base@@@Z@4HA, ecx
$LN4@VehicleSiz:

; 841  : 	}
; 842  : 	
; 843  : 	//have the rendered view update with new settings
; 844  : 	control->Parent_->RefreshWindow();

	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN8@VehicleSiz:

; 845  : 	
; 846  : 	
; 847  : 	
; 848  : }//VehicleSizeCB

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?VehicleSizeCB@@YAXJFPAVC_Base@@@Z ENDP			; VehicleSizeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_renderer$ = -24					; size = 4
_detail$ = -20						; size = 4
tv189 = -16						; size = 4
tv187 = -12						; size = 4
_ebox$ = -8						; size = 4
_slider$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ObjectDetailCB@@YAXJFPAVC_Base@@@Z PROC		; ObjectDetailCB

; 772  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 773  : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN3@ObjectDeta

; 774  : 		return;

	jmp	$LN4@ObjectDeta
$LN3@ObjectDeta:

; 775  : 
; 776  : 	float detail;
; 777  : 	C_Slider    *slider;
; 778  : 	slider=(C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 779  : 
; 780  : 	C_EditBox *ebox;
; 781  : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 782  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN2@ObjectDeta

; 783  : 	{
; 784  : 		ebox->SetInteger(FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*6*GraphicSettingMult + 1.5f));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv187[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv187[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40c00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 785  : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@ObjectDeta:

; 786  : 	}
; 787  : 
; 788  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN1@ObjectDeta

; 789  : 		return;

	jmp	SHORT $LN4@ObjectDeta
$LN1@ObjectDeta:

; 790  : 
; 791  : 	RenderOTW	*renderer;	
; 792  : 	renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$[ebp], eax

; 793  : 	detail = ((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*1.5f*GraphicSettingMult);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv189[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv189[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3fc00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	movss	DWORD PTR _detail$[ebp], xmm1

; 794  : 	renderer->SetObjectDetail(detail);

	push	ecx
	movss	xmm0, DWORD PTR _detail$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetObjectDetail@Render3D@@QAEXM@Z	; Render3D::SetObjectDetail

; 795  : 	
; 796  : 	//have the rendered view update with new settings
; 797  : 	control->Parent_->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN4@ObjectDeta:

; 798  : 	
; 799  : }//VehicleDetailCB

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectDetailCB@@YAXJFPAVC_Base@@@Z ENDP		; ObjectDetailCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv155 = -12						; size = 4
_ebox$ = -8						; size = 4
_slider$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PlayerBubbleCB@@YAXJFPAVC_Base@@@Z PROC		; PlayerBubbleCB

; 754  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi

; 755  : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN2@PlayerBubb

; 756  : 		return;

	jmp	$LN3@PlayerBubb
$LN2@PlayerBubb:

; 757  : 
; 758  : 	C_Slider    *slider;
; 759  : 	slider=(C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 760  : 
; 761  : 	C_EditBox *ebox;
; 762  : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 763  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN1@PlayerBubb

; 764  : 	{
; 765  : 		ebox->SetInteger(FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*6*GraphicSettingMult + 1.5f));

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv155[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv155[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40c00000
	cvtsi2ss xmm0, DWORD PTR ?GraphicSettingMult@@3HA ; GraphicSettingMult
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR __real@3fc00000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 766  : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@PlayerBubb:
$LN3@PlayerBubb:

; 767  : 	}
; 768  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?PlayerBubbleCB@@YAXJFPAVC_Base@@@Z ENDP		; PlayerBubbleCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv219 = -24						; size = 4
_ebox$ = -20						; size = 4
_slider$ = -16						; size = 4
_objdetail$ = -12					; size = 4
_i$1 = -8						; size = 4
_i$2 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?BuildingDetailCB@@YAXJFPAVC_Base@@@Z PROC		; BuildingDetailCB

; 696  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 697  : 	C_Slider *slider;
; 698  : 	int		objdetail;
; 699  : 	static int prevdetail = -1;
; 700  : 	
; 701  : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN16@BuildingDe

; 702  : 		return;

	jmp	$LN17@BuildingDe
$LN16@BuildingDe:

; 703  : 
; 704  : 	slider = (C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _slider$[ebp], ecx

; 705  : 	objdetail = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 5 + 0.5F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv219[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv219[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40a00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _objdetail$[ebp], eax

; 706  : 		
; 707  : 	C_EditBox *ebox;
; 708  : 	ebox = (C_EditBox *)control->Parent_->FindControl(slider->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 709  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN15@BuildingDe

; 710  : 	{
; 711  : 		ebox->SetInteger(objdetail + 1);

	mov	eax, DWORD PTR _objdetail$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 712  : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN15@BuildingDe:

; 713  : 	}
; 714  : 
; 715  : 	F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 716  : 
; 717  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN14@BuildingDe

; 718  : 	{
; 719  : 		F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 720  : 		return;

	jmp	$LN17@BuildingDe
$LN14@BuildingDe:

; 721  : 	}
; 722  : 	
; 723  : 	if(NumFeatures)

	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	test	eax, eax
	je	$LN13@BuildingDe

; 724  : 	{
; 725  : 		
; 726  : 		if(prevdetail < objdetail)

	mov	ecx, DWORD PTR ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA
	cmp	ecx, DWORD PTR _objdetail$[ebp]
	jge	SHORT $LN12@BuildingDe

; 727  : 		{
; 728  : 			if(NumFeatures)

	movsx	edx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	test	edx, edx
	je	SHORT $LN8@BuildingDe

; 729  : 			{
; 730  : 				for(int i=0;i<NumFeatures;i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN10@BuildingDe
$LN9@BuildingDe:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN10@BuildingDe:
	movsx	ecx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	cmp	DWORD PTR _i$2[ebp], ecx
	jge	SHORT $LN8@BuildingDe

; 731  : 				{
; 732  : 					if((Features[i].Priority <= objdetail) && (Features[i].Priority > prevdetail))

	mov	edx, DWORD PTR _i$2[ebp]
	imul	edx, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR _objdetail$[ebp]
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	comiss	xmm0, DWORD PTR [eax+edx+4]
	jb	SHORT $LN7@BuildingDe
	mov	ecx, DWORD PTR _i$2[ebp]
	imul	ecx, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA
	mov	edx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	movss	xmm1, DWORD PTR [edx+ecx+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN7@BuildingDe

; 733  : 						SetupViewer->AddToView(i + 100);

	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?AddToView@C_3dViewer@@QAEHJ@Z		; C_3dViewer::AddToView
$LN7@BuildingDe:

; 734  : 				}

	jmp	SHORT $LN9@BuildingDe
$LN8@BuildingDe:

; 735  : 			}
; 736  : 		}

	jmp	SHORT $LN2@BuildingDe
$LN12@BuildingDe:

; 737  : 		else if(prevdetail > objdetail)

	mov	ecx, DWORD PTR ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA
	cmp	ecx, DWORD PTR _objdetail$[ebp]
	jle	SHORT $LN2@BuildingDe

; 738  : 		{
; 739  : 			for(int i=0;i<NumFeatures;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@BuildingDe
$LN3@BuildingDe:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@BuildingDe:
	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	cmp	DWORD PTR _i$1[ebp], eax
	jge	SHORT $LN2@BuildingDe

; 740  : 			{
; 741  : 				if((Features[i].Priority > objdetail) && (Features[i].Priority <= prevdetail))

	mov	ecx, DWORD PTR _i$1[ebp]
	imul	ecx, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR _objdetail$[ebp]
	mov	edx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	movss	xmm1, DWORD PTR [edx+ecx+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN1@BuildingDe
	mov	eax, DWORD PTR _i$1[ebp]
	imul	eax, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA
	mov	ecx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	comiss	xmm0, DWORD PTR [ecx+eax+4]
	jb	SHORT $LN1@BuildingDe

; 742  : 					RemoveObjFromView(i+100);	

	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 100				; 00000064H
	push	edx
	call	?RemoveObjFromView@@YAXH@Z		; RemoveObjFromView
	add	esp, 4
$LN1@BuildingDe:

; 743  : 			}

	jmp	SHORT $LN3@BuildingDe
$LN2@BuildingDe:

; 744  : 		}
; 745  : 		prevdetail = objdetail;

	mov	eax, DWORD PTR _objdetail$[ebp]
	mov	DWORD PTR ?prevdetail@?1??BuildingDetailCB@@YAXJFPAVC_Base@@@Z@4HA, eax
$LN13@BuildingDe:

; 746  : 	}
; 747  : 	
; 748  : 	control->Parent_->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 749  : 	F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4
$LN17@BuildingDe:

; 750  : 	
; 751  : }//BuildingDetailCB

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?BuildingDetailCB@@YAXJFPAVC_Base@@@Z ENDP		; BuildingDetailCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_tVP$1 = -12						; size = 4
_bsplist$ = -8						; size = 4
_list$ = -4						; size = 4
_objID$ = 8						; size = 4
?RemoveObjFromView@@YAXH@Z PROC				; RemoveObjFromView

; 664  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 665  : 	C_BSPList *bsplist;
; 666  : 	BSPLIST	  *list;
; 667  : 
; 668  : 	F4EnterCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 669  : 
; 670  : 	bsplist = SetupViewer->GetBSPList();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ ; C_3dViewer::GetBSPList
	mov	DWORD PTR _bsplist$[ebp], eax

; 671  : 	// I don't think this will happen, but time is short so lets be safe...
; 672  : 	if (!bsplist)	return;

	cmp	DWORD PTR _bsplist$[ebp], 0
	jne	SHORT $LN5@RemoveObjF
	jmp	SHORT $LN6@RemoveObjF
$LN5@RemoveObjF:

; 673  : 
; 674  : 	list = bsplist->Root_;

	mov	ecx, DWORD PTR _bsplist$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _list$[ebp], edx
$LN4@RemoveObjF:

; 675  : 	
; 676  : 	while (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN3@RemoveObjF

; 677  : 	{
; 678  : 		if(list->ID == objID)

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _objID$[ebp]
	jne	SHORT $LN2@RemoveObjF

; 679  : 			break;

	jmp	SHORT $LN3@RemoveObjF
$LN2@RemoveObjF:

; 680  : 		list = list->Next;

	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _list$[ebp], eax

; 681  : 	}

	jmp	SHORT $LN4@RemoveObjF
$LN3@RemoveObjF:

; 682  : 
; 683  : 	if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN1@RemoveObjF

; 684  : 	{
; 685  : 		RViewPoint *tVP;
; 686  : 
; 687  : 		tVP = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _tVP$1[ebp], eax

; 688  : 
; 689  : 		tVP->RemoveObject(list->object);

	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _tVP$1[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject
$LN1@RemoveObjF:

; 690  : 	}
; 691  : 
; 692  : 	F4LeaveCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
$LN6@RemoveObjF:

; 693  : 	
; 694  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveObjFromView@@YAXH@Z ENDP				; RemoveObjFromView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_renderer$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?BilinearFilterCB@@YAXJFPAVC_Base@@@Z PROC		; BilinearFilterCB

; 617  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 618  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@BilinearFi

; 619  : 		return;

	jmp	SHORT $LN5@BilinearFi
$LN4@BilinearFi:

; 620  : 	
; 621  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN3@BilinearFi

; 622  : 		return;

	jmp	SHORT $LN5@BilinearFi
$LN3@BilinearFi:

; 623  : 	
; 624  : 	RenderOTW	*renderer;
; 625  : 	
; 626  : 	renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$[ebp], eax

; 627  : 	
; 628  : 	if(((C_Button *)control)->GetState())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN2@BilinearFi

; 629  : 		renderer->SetFilteringMode( TRUE );

	push	1
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetFilteringMode@RenderOTW@@QAEXH@Z	; RenderOTW::SetFilteringMode

; 630  : 	else

	jmp	SHORT $LN1@BilinearFi
$LN2@BilinearFi:

; 631  : 		renderer->SetFilteringMode( FALSE );

	push	0
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetFilteringMode@RenderOTW@@QAEXH@Z	; RenderOTW::SetFilteringMode
$LN1@BilinearFi:

; 632  : 	
; 633  : 	control->Parent_->RefreshClient(2);

	push	2
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN5@BilinearFi:

; 634  : 	
; 635  : 	//have the rendered view update with new settings
; 636  : 	
; 637  : }//BilinearFilterCB

	mov	esp, ebp
	pop	ebp
	ret	0
?BilinearFilterCB@@YAXJFPAVC_Base@@@Z ENDP		; BilinearFilterCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_renderer$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?RealWeatherShadowsCB@@YAXJFPAVC_Base@@@Z PROC		; RealWeatherShadowsCB

; 597  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 598  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@RealWeathe

; 599  : 		return;

	jmp	SHORT $LN5@RealWeathe
$LN4@RealWeathe:

; 600  : 	
; 601  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN3@RealWeathe

; 602  : 		return;

	jmp	SHORT $LN5@RealWeathe
$LN3@RealWeathe:

; 603  : 	
; 604  : 	RenderOTW	*renderer;
; 605  : 	
; 606  : 	renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$[ebp], eax

; 607  : 
; 608  : 	if(((C_Button *)control)->GetState())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN2@RealWeathe

; 609  : 			PlayerOptions.SetDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetDispFlag

; 610  : 	else

	jmp	SHORT $LN1@RealWeathe
$LN2@RealWeathe:

; 611  : 			PlayerOptions.ClearDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearDispFlag
$LN1@RealWeathe:

; 612  : 	
; 613  : 	control->Parent_->RefreshClient(2);

	push	2
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN5@RealWeathe:

; 614  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RealWeatherShadowsCB@@YAXJFPAVC_Base@@@Z ENDP		; RealWeatherShadowsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_renderer$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HazingCB@@YAXJFPAVC_Base@@@Z PROC			; HazingCB

; 573  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 574  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@HazingCB

; 575  : 		return;

	jmp	SHORT $LN5@HazingCB
$LN4@HazingCB:

; 576  : 	
; 577  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN3@HazingCB

; 578  : 		return;

	jmp	SHORT $LN5@HazingCB
$LN3@HazingCB:

; 579  : 	
; 580  : 	RenderOTW	*renderer;
; 581  : 	
; 582  : 	renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$[ebp], eax

; 583  : 	
; 584  : 	if(((C_Button *)control)->GetState())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN2@HazingCB

; 585  : 		renderer->SetHazeMode( 1 );

	push	1
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode

; 586  : 	else

	jmp	SHORT $LN1@HazingCB
$LN2@HazingCB:

; 587  : 		renderer->SetHazeMode( 0 );

	push	0
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode
$LN1@HazingCB:

; 588  : 	
; 589  : 	control->Parent_->RefreshClient(2);

	push	2
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN5@HazingCB:

; 590  : 	
; 591  : 	//have the rendered view update with new settings
; 592  : 	
; 593  : }//HazingCB

	mov	esp, ebp
	pop	ebp
	ret	0
?HazingCB@@YAXJFPAVC_Base@@@Z ENDP			; HazingCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?GouraudCB@@YAXJFPAVC_Base@@@Z PROC			; GouraudCB

; 548  : {

	push	ebp
	mov	ebp, esp

; 549  : /*	if(hittype != C_TYPE_LMOUSEUP)
; 550  : 		return;
; 551  : 	
; 552  : 	if(SetupViewer == NULL)
; 553  : 		return;
; 554  : 	
; 555  : 	RenderOTW	*renderer;
; 556  : 	
; 557  : 	renderer = SetupViewer->GetRendOTW();
; 558  : 	
; 559  : 	if(((C_Button *)control)->GetState())
; 560  : 		renderer->SetSmoothShadingMode( 1 );
; 561  : 	else
; 562  : 		renderer->SetSmoothShadingMode( 0 );
; 563  : 	
; 564  : 	control->Parent_->RefreshClient(2);
; 565  : 	
; 566  : 	
; 567  : 	control->Parent_->RefreshClient(2);
; 568  : 	//have the rendered view update with new settings
; 569  : */
; 570  : }//GouraudCB

	pop	ebp
	ret	0
?GouraudCB@@YAXJFPAVC_Base@@@Z ENDP			; GouraudCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ScalingCB@@YAXJFPAVC_Base@@@Z PROC			; ScalingCB

; 542  : {

	push	ebp
	mov	ebp, esp

; 543  : 	if(hittype != C_TYPE_LMOUSEUP)
; 544  : 		return;
; 545  : }

	pop	ebp
	ret	0
?ScalingCB@@YAXJFPAVC_Base@@@Z ENDP			; ScalingCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv192 = -32						; size = 4
$T1 = -28						; size = 4
tv186 = -24						; size = 4
$T2 = -20						; size = 4
_viewpt$3 = -16						; size = 4
$T4 = -12						; size = 4
$T5 = -8						; size = 4
_text$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?RenderViewCB@@YAXJFPAVC_Base@@@Z PROC			; RenderViewCB

; 403  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 404  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@RenderView

; 405  : 		return;

	jmp	$LN7@RenderView
$LN6@RenderView:

; 406  : 	C_Text		*text;
; 407  : 
; 408  : 	if(((C_Button *)control)->GetState())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN5@RenderView

; 409  : 	{
; 410  : 		text = (C_Text *)control->Parent_->FindControl(LOADING);

	push	70094					; 000111ceH
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 411  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN4@RenderView

; 412  : 		{
; 413  : 			text->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 414  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@RenderView:

; 415  : 		}
; 416  : 		//Sleep(100);
; 417  : 		//STPRender(control);
; 418  : 		PostMessage(gMainHandler->GetAppWnd(),FM_STP_START_RENDER,0,(LPARAM)control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	push	0
	push	1056					; 00000420H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16

; 419  : 	}
; 420  : 	else

	jmp	$LN7@RenderView
$LN5@RenderView:

; 421  : 	{
; 422  : 		if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	$LN7@RenderView

; 423  : 		{
; 424  : 			if(!ready)

	cmp	DWORD PTR ?ready@@3HA, 0		; ready
	jne	SHORT $LN1@RenderView

; 425  : 			{
; 426  : 				((C_Button *)control)->SetState(C_STATE_1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 427  : 				((C_Button *)control)->Refresh();

	mov	eax, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 428  : 				return;

	jmp	$LN7@RenderView
$LN1@RenderView:

; 429  : 			}
; 430  : 
; 431  : 			ready = FALSE;

	mov	DWORD PTR ?ready@@3HA, 0		; ready

; 432  : 			F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 433  : 
; 434  : 			RViewPoint	*viewpt;
; 435  : 			viewpt = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _viewpt$3[ebp], eax

; 436  : 			viewpt->RemoveObject(Smoke);

	mov	edx, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	push	edx
	mov	ecx, DWORD PTR _viewpt$3[ebp]
	call	?RemoveObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::RemoveObject

; 437  : 			delete Smoke;

	mov	eax, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@RenderView
	push	1
	mov	edx, DWORD PTR $T5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN10@RenderView
$LN9@RenderView:
	mov	DWORD PTR tv186[ebp], 0
$LN10@RenderView:

; 438  : 			Smoke = NULL;

	mov	DWORD PTR ?Smoke@@3PAVDrawable2D@@A, 0	; Smoke

; 439  : 			SetupViewer->Cleanup();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 440  : 			delete SetupViewer;

	mov	eax, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN11@RenderView
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv192[ebp], eax
	jmp	SHORT $LN12@RenderView
$LN11@RenderView:
	mov	DWORD PTR tv192[ebp], 0
$LN12@RenderView:

; 441  : 			SetupViewer = NULL;

	mov	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer

; 442  : 			
; 443  : 			F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 444  : 			//control->Parent_->RefreshClient(2);
; 445  : 			control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN7@RenderView:

; 446  : 		}
; 447  : 	}
; 448  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RenderViewCB@@YAXJFPAVC_Base@@@Z ENDP			; RenderViewCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
$T2 = -132						; size = 4
tv435 = -128						; size = 4
$T3 = -124						; size = 4
tv82 = -120						; size = 4
$T4 = -116						; size = 4
_renderer$5 = -112					; size = 4
_objdetail$6 = -108					; size = 4
tv307 = -104						; size = 4
$T7 = -100						; size = 4
_viewpt$8 = -96						; size = 4
_terrdist$9 = -92					; size = 4
_i$10 = -88						; size = 4
_mid$11 = -84						; size = 4
_i$12 = -80						; size = 4
_text$ = -76						; size = 4
_terrlvl$13 = -72					; size = 2
_slider$14 = -68					; size = 4
_pos$15 = -64						; size = 12
_View$16 = -52						; size = 36
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_control$ = 8						; size = 4
?STPRender@@YAXPAVC_Base@@@Z PROC			; STPRender

; 297  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?STPRender@@YAXPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 298  : 	C_Text		*text=NULL;

	mov	DWORD PTR _text$[ebp], 0

; 299  : 	
; 300  : 	if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	$LN16@STPRender

; 301  : 	{
; 302  : 		SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 303  : 
; 304  : 		RenderOTW	*renderer=NULL;

	mov	DWORD PTR _renderer$5[ebp], 0

; 305  : 		RViewPoint	*viewpt=NULL;

	mov	DWORD PTR _viewpt$8[ebp], 0

; 306  : 		ViewPos		View = {0.0f};

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _View$16[ebp], xmm0
	xor	edx, edx
	mov	DWORD PTR _View$16[ebp+4], edx
	mov	DWORD PTR _View$16[ebp+8], edx
	mov	DWORD PTR _View$16[ebp+12], edx
	mov	DWORD PTR _View$16[ebp+16], edx
	mov	DWORD PTR _View$16[ebp+20], edx
	mov	DWORD PTR _View$16[ebp+24], edx
	mov	DWORD PTR _View$16[ebp+28], edx
	mov	DWORD PTR _View$16[ebp+32], edx

; 307  : 		C_Slider	*slider=NULL;

	mov	DWORD PTR _slider$14[ebp], 0

; 308  : 		Tpoint		pos={0.0F};

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$15[ebp], xmm0
	xor	eax, eax
	mov	DWORD PTR _pos$15[ebp+4], eax
	mov	DWORD PTR _pos$15[ebp+8], eax

; 309  : 		int			objdetail=0;

	mov	DWORD PTR _objdetail$6[ebp], 0

; 310  : 		
; 311  : 		F4EnterCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 312  : 
; 313  : 		SetupViewer=new C_3dViewer;

	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN19@STPRender
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_3dViewer@@QAE@XZ			; C_3dViewer::C_3dViewer
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN20@STPRender
$LN19@STPRender:
	mov	DWORD PTR tv82[ebp], 0
$LN20@STPRender:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, eax ; SetupViewer

; 314  : 		SetupViewer->Setup();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Setup@C_3dViewer@@QAEHXZ		; C_3dViewer::Setup

; 315  : 		SetupViewer->Viewport(control->Parent_,2); // use client 2 for this window

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 316  : 
; 317  : 		short terrlvl=0;

	xor	eax, eax
	mov	WORD PTR _terrlvl$13[ebp], ax

; 318  : 		float terrdist=40.0F;

	movss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR _terrdist$9[ebp], xmm0

; 319  : 
; 320  : 		slider=(C_Slider *)control->Parent_->FindControl(TERRAIN_DETAIL);

	push	70098					; 000111d2H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$14[ebp], eax

; 321  : 		if(slider != NULL)

	cmp	DWORD PTR _slider$14[ebp], 0
	je	$LN13@STPRender

; 322  : 		{
; 323  : 			int mid;
; 324  : 			mid = (slider->GetSliderMax()-slider->GetSliderMin())/2;

	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$11[ebp], eax

; 325  : 		
; 326  : 			if(slider->GetSliderPos() > mid)

	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cmp	eax, DWORD PTR _mid$11[ebp]
	jle	SHORT $LN14@STPRender

; 327  : 			{
; 328  : 				terrdist = (40.0f + ((float)slider->GetSliderPos() - mid)/mid * 40.0f);

	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _mid$11[ebp]
	subss	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR _mid$11[ebp]
	divss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@42200000
	addss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR _terrdist$9[ebp], xmm0

; 329  : 				terrlvl = 0;

	xor	edx, edx
	mov	WORD PTR _terrlvl$13[ebp], dx

; 330  : 			}
; 331  : 			else 

	jmp	SHORT $LN13@STPRender
$LN14@STPRender:

; 332  : 			{
; 333  : 				terrdist = 40.0f;

	movss	xmm0, DWORD PTR __real@42200000
	movss	DWORD PTR _terrdist$9[ebp], xmm0

; 334  : 				terrlvl = static_cast<short>(FloatToInt32(2 - ((float)slider->GetSliderPos()/mid * 2)));

	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR _mid$11[ebp]
	divss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@40000000
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR _terrlvl$13[ebp], ax
$LN13@STPRender:

; 335  : 			}
; 336  : 		}
; 337  : 		SetupViewer->SetTextureLevels(terrlvl,4);

	push	4
	movsx	eax, WORD PTR _terrlvl$13[ebp]
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?SetTextureLevels@C_3dViewer@@QAEXJJ@Z	; C_3dViewer::SetTextureLevels

; 338  : 		SetupViewer->SetViewDistance(terrdist * FEET_PER_KM);

	movss	xmm0, DWORD PTR _terrdist$9[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?SetViewDistance@C_3dViewer@@QAEXM@Z	; C_3dViewer::SetViewDistance

; 339  : 		
; 340  : 		
; 341  : 		LoadObjects( View, control->Parent_ );

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	lea	eax, DWORD PTR _View$16[ebp]
	push	eax
	call	?LoadObjects@@YAXAAUViewPos@@PAVC_Window@@@Z ; LoadObjects

; 342  : 		SetupViewer->SetPosition(View.Xpos * FEET_PER_KM, View.Ypos * FEET_PER_KM, View.Zpos);

	add	esp, 4
	movss	xmm0, DWORD PTR _View$16[ebp+8]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _View$16[ebp+4]
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _View$16[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?SetPosition@C_3dViewer@@QAEXMMM@Z	; C_3dViewer::SetPosition

; 343  : 		SetupViewer->SetCamera(View.CamX, View.CamY, View.CamZ, View.CamYaw, View.CamPitch, View.CamRoll );

	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+16]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+12]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+20]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+32]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+28]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _View$16[ebp+24]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?SetCamera@C_3dViewer@@QAEXMMMMMM@Z	; C_3dViewer::SetCamera

; 344  : 		SetupViewer->InitOTW(30.0f,FALSE);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?InitOTW@C_3dViewer@@QAEHMH@Z		; C_3dViewer::InitOTW

; 345  : 
; 346  : 		viewpt = SetupViewer->GetVP();		

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _viewpt$8[ebp], eax

; 347  : 		viewpt->GetPos(&pos);

	lea	ecx, DWORD PTR _pos$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _viewpt$8[ebp]
	call	?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z	; TViewPoint::GetPos

; 348  : 		
; 349  : 		renderer = SetupViewer->GetRendOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ; C_3dViewer::GetRendOTW
	mov	DWORD PTR _renderer$5[ebp], eax

; 350  : 		InitializeViewer((C_Window *)control->Parent_, renderer);

	mov	edx, DWORD PTR _renderer$5[ebp]
	push	edx
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?InitializeViewer@@YAXPAVC_Window@@PAVRenderOTW@@@Z ; InitializeViewer
	add	esp, 8

; 351  : 		
; 352  : 		slider=(C_Slider *)control->Parent_->FindControl(DISAGG_LEVEL);

	push	70096					; 000111d0H
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$14[ebp], eax

; 353  : 		if(slider != NULL)

	cmp	DWORD PTR _slider$14[ebp], 0
	je	SHORT $LN12@STPRender

; 354  : 		{
; 355  : 			objdetail = FloatToInt32((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin()) * 5 + 0.5F);

	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$14[ebp]
	movss	DWORD PTR tv435[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$14[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv435[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40a00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _objdetail$6[ebp], eax
$LN12@STPRender:

; 356  : 		}
; 357  : 		
; 358  : 		if(NumObjects)

	movsx	eax, WORD PTR ?NumObjects@@3FA		; NumObjects
	test	eax, eax
	je	SHORT $LN8@STPRender

; 359  : 		{
; 360  : 			for(int i=0;i<NumObjects;i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN10@STPRender
$LN9@STPRender:
	mov	ecx, DWORD PTR _i$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$10[ebp], ecx
$LN10@STPRender:
	movsx	edx, WORD PTR ?NumObjects@@3FA		; NumObjects
	cmp	DWORD PTR _i$10[ebp], edx
	jge	SHORT $LN8@STPRender

; 361  : 			{	
; 362  : 				SetupViewer->AddToView(i);

	mov	eax, DWORD PTR _i$10[ebp]
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?AddToView@C_3dViewer@@QAEHJ@Z		; C_3dViewer::AddToView

; 363  : 			}

	jmp	SHORT $LN9@STPRender
$LN8@STPRender:

; 364  : 		}
; 365  : 		
; 366  : 		if(NumFeatures)

	movsx	ecx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	test	ecx, ecx
	je	SHORT $LN4@STPRender

; 367  : 		{
; 368  : 			for(int i=0;i<NumFeatures;i++)

	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN6@STPRender
$LN5@STPRender:
	mov	edx, DWORD PTR _i$12[ebp]
	add	edx, 1
	mov	DWORD PTR _i$12[ebp], edx
$LN6@STPRender:
	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	cmp	DWORD PTR _i$12[ebp], eax
	jge	SHORT $LN4@STPRender

; 369  : 			{
; 370  : 				if(Features[i].Priority <= objdetail)

	mov	ecx, DWORD PTR _i$12[ebp]
	imul	ecx, 24					; 00000018H
	cvtsi2ss xmm0, DWORD PTR _objdetail$6[ebp]
	mov	edx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	comiss	xmm0, DWORD PTR [edx+ecx+4]
	jb	SHORT $LN3@STPRender

; 371  : 					SetupViewer->AddToView(i + 100);

	mov	eax, DWORD PTR _i$12[ebp]
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?AddToView@C_3dViewer@@QAEHJ@Z		; C_3dViewer::AddToView
$LN3@STPRender:

; 372  : 			}

	jmp	SHORT $LN5@STPRender
$LN4@STPRender:

; 373  : 		}
; 374  : 
; 375  : 		InsertSmokeCloud();

	call	?InsertSmokeCloud@@YAXXZ		; InsertSmokeCloud

; 376  : 		
; 377  : 		TheLoader.WaitForLoader();

	mov	ecx, OFFSET ?TheLoader@@3VLoader@@A	; TheLoader
	call	?WaitForLoader@Loader@@QAEXXZ		; Loader::WaitForLoader

; 378  : 
; 379  : 		F4LeaveCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 380  : 
; 381  : 		
; 382  : 
; 383  : 		text = (C_Text *)control->Parent_->FindControl(LOADING);

	push	70094					; 000111ceH
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 384  : 		if(text)

	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN2@STPRender

; 385  : 		{
; 386  : 			text->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 387  : 			text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@STPRender:

; 388  : 		}
; 389  : 		
; 390  : 		if(!tmpVpoint)

	cmp	DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A, 0 ; tmpVpoint
	jne	$LN1@STPRender

; 391  : 		{
; 392  : 			tmpVpoint = new RViewPoint;

	push	272					; 00000110H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN21@STPRender
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0RViewPoint@@QAE@XZ			; RViewPoint::RViewPoint
	mov	DWORD PTR tv307[ebp], eax
	jmp	SHORT $LN22@STPRender
$LN21@STPRender:
	mov	DWORD PTR tv307[ebp], 0
$LN22@STPRender:
	mov	ecx, DWORD PTR tv307[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A, edx ; tmpVpoint

; 393  : 			tmpVpoint->Setup(80.0f*FEET_PER_KM,0,4,DisplayOptions.bZBuffering);

	movzx	eax, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	push	eax
	push	4
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@48801fcd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A ; tmpVpoint
	call	?Setup@RViewPoint@@QAEXMHH_N@Z		; RViewPoint::Setup

; 394  : 			tmpVpoint->Update(&pos);

	lea	ecx, DWORD PTR _pos$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?tmpVpoint@@3PAVRViewPoint@@A ; tmpVpoint
	call	?Update@RViewPoint@@QAEXPBUTpoint@@@Z	; RViewPoint::Update
$LN1@STPRender:

; 395  : 		}
; 396  : 		SetCursor(gCursors[CRSR_F16]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 397  : 		control->Parent_->RefreshClient(2);

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 398  : 		ready = TRUE;

	mov	DWORD PTR ?ready@@3HA, 1		; ready
$LN16@STPRender:

; 399  : 	}	
; 400  : }//STPRender

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?STPRender@@YAXPAVC_Base@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?STPRender@@YAXPAVC_Base@@@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?STPRender@@YAXPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?STPRender@@YAXPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?STPRender@@YAXPAVC_Base@@@Z ENDP			; STPRender
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv405 = -372						; size = 8
$T1 = -364						; size = 4
$T2 = -360						; size = 4
tv456 = -356						; size = 4
$T3 = -352						; size = 4
$T4 = -348						; size = 4
tv402 = -344						; size = 4
_scale$ = -340						; size = 4
_Temp$ = -336						; size = 4
_slider$ = -332						; size = 4
_list$ = -328						; size = 4
_fp$ = -324						; size = 4
_i$5 = -320						; size = 4
_i$6 = -316						; size = 4
_rot$ = -312						; size = 36
_pos$ = -276						; size = 12
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_View$ = 8						; size = 4
_win$ = 12						; size = 4
?LoadObjects@@YAXAAUViewPos@@PAVC_Window@@@Z PROC	; LoadObjects

; 219  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 220  : 	FILE		*fp;
; 221  : 	BSPLIST		*list;
; 222  : 	float		Temp;
; 223  : 	Trotation	rot = IMatrix;

	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	lea	edi, DWORD PTR _rot$[ebp]
	rep movsd

; 224  : 	Tpoint		pos = {0.0f};

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$[ebp], xmm0
	xor	eax, eax
	mov	DWORD PTR _pos$[ebp+4], eax
	mov	DWORD PTR _pos$[ebp+8], eax

; 225  : 	char		filename[MAX_PATH];
; 226  : 	float		scale = 1.0F;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _scale$[ebp], xmm0

; 227  : 	C_Slider	*slider;
; 228  : 
; 229  : 	sprintf(filename,"%s\\config\\viewer.dat",FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BF@PDMKBDM@?$CFs?2config?2viewer?4dat?$AA@
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 230  : 	fp = fopen(filename,"rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 231  : 	if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN1@LoadObject

; 232  : 	{
; 233  : 		fread(&View,sizeof(ViewPos),1,fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	36					; 00000024H
	mov	ecx, DWORD PTR _View$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 234  : 		
; 235  : 		fread(&Temp,sizeof(float),1,fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1
	push	4
	lea	eax, DWORD PTR _Temp$[ebp]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 236  : 		
; 237  : 		if(Objects)

	cmp	DWORD PTR ?Objects@@3PAUObjectPos@@A, 0	; Objects
	je	SHORT $LN12@LoadObject

; 238  : 			delete [] Objects;

	mov	ecx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN12@LoadObject:

; 239  : 		
; 240  : 		NumObjects = static_cast<short>(FloatToInt32(Temp));

	push	ecx
	movss	xmm0, DWORD PTR _Temp$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR ?NumObjects@@3FA, ax		; NumObjects

; 241  : 		
; 242  : 		Objects = new ObjectPos[NumObjects];

	movsx	eax, WORD PTR ?NumObjects@@3FA		; NumObjects
	xor	ecx, ecx
	mov	edx, 28					; 0000001cH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?Objects@@3PAUObjectPos@@A, eax ; Objects

; 243  : 		
; 244  : 		fread(Objects,sizeof(ObjectPos),NumObjects,fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	movsx	edx, WORD PTR ?NumObjects@@3FA		; NumObjects
	push	edx
	push	28					; 0000001cH
	mov	eax, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 245  : 		
; 246  : 		fread(&Temp,sizeof(float),1,fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	push	4
	lea	edx, DWORD PTR _Temp$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 247  : 		
; 248  : 		if(Features)

	cmp	DWORD PTR ?Features@@3PAUFeaturePos@@A, 0 ; Features
	je	SHORT $LN11@LoadObject

; 249  : 			delete [] Features;

	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN11@LoadObject:

; 250  : 
; 251  : 		NumFeatures = static_cast<short>(FloatToInt32(Temp));

	push	ecx
	movss	xmm0, DWORD PTR _Temp$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	WORD PTR ?NumFeatures@@3FA, ax		; NumFeatures

; 252  : 
; 253  : 		Features = new FeaturePos[NumFeatures];

	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	xor	ecx, ecx
	mov	edx, 24					; 00000018H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR ?Features@@3PAUFeaturePos@@A, eax ; Features

; 254  : 		
; 255  : 		fread(Features,sizeof(FeaturePos),NumFeatures,fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	movsx	edx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	push	edx
	push	24					; 00000018H
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 256  : 		
; 257  : 		fclose(fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fclose
	add	esp, 4

; 258  : 		
; 259  : 		fp = NULL;

	mov	DWORD PTR _fp$[ebp], 0

; 260  : 		
; 261  : 		slider=(C_Slider *)win->FindControl(VEHICLE_SIZE);

	push	70078					; 000111beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 262  : 		if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN10@LoadObject

; 263  : 		{
; 264  : 			scale = ((float)slider->GetSliderPos()/(float)(slider->GetSliderMax()-slider->GetSliderMin()) * 4.0F + 1.0F);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv456[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv456[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40800000
	addss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR _scale$[ebp], xmm1
$LN10@LoadObject:

; 265  : 		}
; 266  : 
; 267  : 		if(NumObjects)

	movsx	edx, WORD PTR ?NumObjects@@3FA		; NumObjects
	test	edx, edx
	je	$LN6@LoadObject

; 268  : 			{
; 269  : 				for(int i=0;i<NumObjects;i++)

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN8@LoadObject
$LN7@LoadObject:
	mov	eax, DWORD PTR _i$6[ebp]
	add	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
$LN8@LoadObject:
	movsx	ecx, WORD PTR ?NumObjects@@3FA		; NumObjects
	cmp	DWORD PTR _i$6[ebp], ecx
	jge	$LN6@LoadObject

; 270  : 				{
; 271  : 					PositandOrientSetData(View.Xpos * FEET_PER_KM + Objects[i].Xpos ,View.Ypos * FEET_PER_KM + Objects[i].Ypos,
; 272  : 						Objects[i].Zpos,Objects[i].Pitch,Objects[i].Roll,Objects[i].Yaw,&pos,&rot);

	lea	edx, DWORD PTR _rot$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$6[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+24]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _i$6[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+20]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _i$6[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _i$6[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+12]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _View$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR __real@454cffae
	mov	ecx, DWORD PTR _i$6[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	addss	xmm0, DWORD PTR [edx+ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _View$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR __real@454cffae
	mov	ecx, DWORD PTR _i$6[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	addss	xmm0, DWORD PTR [edx+ecx+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?PositandOrientSetData@@YAXMMMMMMPAUTpoint@@PAUTrotation@@@Z ; PositandOrientSetData
	add	esp, 32					; 00000020H

; 273  : 					list = SetupViewer->LoadBSP(i,FloatToInt32(Objects[i].VisID),TRUE);

	push	1
	mov	eax, DWORD PTR _i$6[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _i$6[ebp]
	push	edx
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?LoadBSP@C_3dViewer@@QAEPAUUI_BSPList@@JHH@Z ; C_3dViewer::LoadBSP
	mov	DWORD PTR _list$[ebp], eax

; 274  : 					((DrawableBSP*)list->object)->Update(&pos,&rot);

	lea	eax, DWORD PTR _rot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?Update@DrawableBSP@@QAEXPBUTpoint@@PBUTrotation@@@Z ; DrawableBSP::Update

; 275  : 					if(Objects[i].VisID == MapVisId(VIS_F16C))

	mov	esi, DWORD PTR _i$6[ebp]
	imul	esi, 28					; 0000001cH
	push	1052					; 0000041cH
	call	?MapVisId@@YAKK@Z			; MapVisId
	add	esp, 4
	mov	DWORD PTR tv402[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv402[ebp]
	mov	eax, DWORD PTR tv402[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv405[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv405[ebp]
	mov	ecx, DWORD PTR ?Objects@@3PAUObjectPos@@A ; Objects
	movss	xmm1, DWORD PTR [ecx+esi]
	ucomiss	xmm1, xmm0
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@LoadObject

; 276  : 						((DrawableBSP*)list->object)->SetSwitchMask(10, TRUE);

	push	1
	push	10					; 0000000aH
	mov	edx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?SetSwitchMask@DrawableBSP@@QAEXHK@Z	; DrawableBSP::SetSwitchMask
$LN5@LoadObject:

; 277  : 					list->object->SetScale(scale); 

	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?SetScale@DrawableObject@@QAEXM@Z	; DrawableObject::SetScale

; 278  : 				}

	jmp	$LN7@LoadObject
$LN6@LoadObject:

; 279  : 			}
; 280  : 			
; 281  : 		if(NumFeatures)

	movsx	ecx, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	test	ecx, ecx
	je	$LN1@LoadObject

; 282  : 		{
; 283  : 			for(int i=0;i<NumFeatures;i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN3@LoadObject
$LN2@LoadObject:
	mov	edx, DWORD PTR _i$5[ebp]
	add	edx, 1
	mov	DWORD PTR _i$5[ebp], edx
$LN3@LoadObject:
	movsx	eax, WORD PTR ?NumFeatures@@3FA		; NumFeatures
	cmp	DWORD PTR _i$5[ebp], eax
	jge	$LN1@LoadObject

; 284  : 			{
; 285  : 				PositandOrientSetData(View.Xpos * FEET_PER_KM + Features[i].Xpos ,View.Ypos * FEET_PER_KM + Features[i].Ypos,
; 286  : 					Features[i].Zpos,0.0f,0.0f,Features[i].Facing,&pos,&rot);

	lea	ecx, DWORD PTR _rot$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$5[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+20]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _i$5[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _View$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR __real@454cffae
	mov	edx, DWORD PTR _i$5[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	addss	xmm0, DWORD PTR [eax+edx+12]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _View$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR __real@454cffae
	mov	edx, DWORD PTR _i$5[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	addss	xmm0, DWORD PTR [eax+edx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?PositandOrientSetData@@YAXMMMMMMPAUTpoint@@PAUTrotation@@@Z ; PositandOrientSetData

; 287  : 				list = SetupViewer->LoadBuilding(i + 100,FloatToInt32(Features[i].VisID),&pos,0.0f);

	add	esp, 28					; 0000001cH
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$5[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR ?Features@@3PAUFeaturePos@@A ; Features
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?LoadBuilding@C_3dViewer@@QAEPAUUI_BSPList@@JHPAUTpoint@@M@Z ; C_3dViewer::LoadBuilding
	mov	DWORD PTR _list$[ebp], eax

; 288  : 				((DrawableBSP*)list->object)->Update(&pos,&rot);

	lea	edx, DWORD PTR _rot$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?Update@DrawableBSP@@QAEXPBUTpoint@@PBUTrotation@@@Z ; DrawableBSP::Update

; 289  : 			}

	jmp	$LN2@LoadObject
$LN1@LoadObject:

; 290  : 		}
; 291  : 
; 292  : 	}
; 293  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadObjects@@YAXAAUViewPos@@PAVC_Window@@@Z ENDP	; LoadObjects
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_VP$2 = -384						; size = 4
_scale$3 = -380						; size = 4
$T4 = -376						; size = 4
tv137 = -372						; size = 4
$T5 = -368						; size = 4
_fp$ = -364						; size = 4
_rot$6 = -360						; size = 36
_View$7 = -324						; size = 36
_pos$8 = -288						; size = 12
_filename$ = -276					; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InsertSmokeCloud@@YAXXZ PROC				; InsertSmokeCloud

; 189  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InsertSmokeCloud@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 190  : 	FILE		*fp;
; 191  : 	char		filename[MAX_PATH];
; 192  : 
; 193  : 	sprintf(filename,"%s\\config\\viewer.dat",FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0BF@PDMKBDM@?$CFs?2config?2viewer?4dat?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 194  : 	fp = fopen(filename,"rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 195  : 	if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN1@InsertSmok

; 196  : 	{
; 197  : 		ViewPos View;
; 198  : 		Trotation	rot = IMatrix;

	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	lea	edi, DWORD PTR _rot$6[ebp]
	rep movsd

; 199  : 		Tpoint		pos = {0.0f};

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$8[ebp], xmm0
	xor	edx, edx
	mov	DWORD PTR _pos$8[ebp+4], edx
	mov	DWORD PTR _pos$8[ebp+8], edx

; 200  : 		float		scale = 100.0F;

	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _scale$3[ebp], xmm0

; 201  : 		RViewPoint *VP;
; 202  : 
; 203  : 		fread(&View,sizeof(ViewPos),1,fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	36					; 00000024H
	lea	ecx, DWORD PTR _View$7[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 204  : 		fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 205  : 		fp = NULL;

	mov	DWORD PTR _fp$[ebp], 0

; 206  : 
; 207  : 		VP = SetupViewer->GetVP();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ	; C_3dViewer::GetVP
	mov	DWORD PTR _VP$2[ebp], eax

; 208  : 		
; 209  : 		PositandOrientSetData(View.Xpos * FEET_PER_KM+ 300,View.Ypos * FEET_PER_KM - 100,
; 210  : 						View.CamZ + View.Zpos + 100,0,0,0,&pos,&rot);

	lea	eax, DWORD PTR _rot$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$8[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _View$7[ebp+32]
	addss	xmm0, DWORD PTR _View$7[ebp+8]
	addss	xmm0, DWORD PTR __real@42c80000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _View$7[ebp+4]
	mulss	xmm0, DWORD PTR __real@454cffae
	subss	xmm0, DWORD PTR __real@42c80000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _View$7[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	addss	xmm0, DWORD PTR __real@43960000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?PositandOrientSetData@@YAXMMMMMMPAUTpoint@@PAUTrotation@@@Z ; PositandOrientSetData
	add	esp, 32					; 00000020H

; 211  : 
; 212  : 		Smoke = new Drawable2D(DRAW2D_SMOKECLOUD1,scale,&pos);

	push	296					; 00000128H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN4@InsertSmok
	lea	edx, DWORD PTR _pos$8[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _scale$3[ebp]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0Drawable2D@@QAE@HMPAUTpoint@@@Z	; Drawable2D::Drawable2D
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN5@InsertSmok
$LN4@InsertSmok:
	mov	DWORD PTR tv137[ebp], 0
$LN5@InsertSmok:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR ?Smoke@@3PAVDrawable2D@@A, ecx ; Smoke

; 213  : 		
; 214  : 		VP->InsertObject(Smoke);

	mov	edx, DWORD PTR ?Smoke@@3PAVDrawable2D@@A ; Smoke
	push	edx
	mov	ecx, DWORD PTR _VP$2[ebp]
	call	?InsertObject@RViewPoint@@QAEXPAVDrawableObject@@@Z ; RViewPoint::InsertObject
$LN1@InsertSmok:

; 215  : 	}
; 216  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InsertSmokeCloud@@YAXXZ$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InsertSmokeCloud@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InsertSmokeCloud@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InsertSmokeCloud@@YAXXZ ENDP				; InsertSmokeCloud
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv201 = -12						; size = 4
_slider$ = -8						; size = 4
_button$ = -4						; size = 4
_win$ = 8						; size = 4
_renderer$ = 12						; size = 4
?InitializeViewer@@YAXPAVC_Window@@PAVRenderOTW@@@Z PROC ; InitializeViewer

; 118  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi

; 119  : 	C_Slider	*slider;
; 120  : 	C_Button	*button;
; 121  : 	
; 122  : 	slider=(C_Slider *)win->FindControl(OBJECT_DETAIL);

	push	70097					; 000111d1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _slider$[ebp], eax

; 123  : 	if(slider != NULL)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN8@Initialize

; 124  : 	{
; 125  : 		renderer->SetObjectDetail((float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin())*1.5f + 0.5f);

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	movss	DWORD PTR tv201[ebp], xmm0
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	cvtsi2ss xmm0, esi
	movss	xmm1, DWORD PTR tv201[ebp]
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3fc00000
	addss	xmm1, DWORD PTR __real@3f000000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetObjectDetail@Render3D@@QAEXM@Z	; Render3D::SetObjectDetail
$LN8@Initialize:

; 126  : 	}
; 127  : 
; 128  : /*	slider=(C_Slider *)win->FindControl(TEXTURE_DISTANCE);
; 129  : 	if(slider != NULL)
; 130  : 	{
; 131  : 		float sliderPos;
; 132  : 		sliderPos = (float)slider->GetSliderPos()/(slider->GetSliderMax()-slider->GetSliderMin());
; 133  : 		renderer->SetTerrainTextureLevel( (int)floor(sliderPos * 4.0f) );
; 134  : 	}
; 135  : */	
; 136  : /*	button=(C_Button *)win->FindControl(OBJECT_TEXTURES);
; 137  : 	if(button != NULL)
; 138  : 	{
; 139  : 		renderer->SetObjectTextureState( button->GetState() );
; 140  : 	}
; 141  : */	
; 142  : 
; 143  : 	//JAM 16Jan04
; 144  : 	button=(C_Button *)win->FindControl(SETUP_SPECULAR_LIGHTING);

	push	70311					; 000112a7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 145  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN5@Initialize

; 146  : 	{
; 147  : 		if(button->GetState() == C_STATE_1)

	mov	eax, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN6@Initialize

; 148  : 			DisplayOptions.bSpecularLighting = true;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19, 1

; 149  : 		else

	jmp	SHORT $LN5@Initialize
$LN6@Initialize:

; 150  : 			DisplayOptions.bSpecularLighting = false;

	mov	BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+19, 0
$LN5@Initialize:

; 151  : 	}
; 152  : 
; 153  : 	//JAM 07Dec03
; 154  : 	button=(C_Button *)win->FindControl(SETUP_REALWEATHER_SHADOWS);

	push	70219					; 0001124bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 155  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN2@Initialize

; 156  : 	{
; 157  : 		if(button->GetState() == C_STATE_1)

	mov	edx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	SHORT $LN3@Initialize

; 158  : 			PlayerOptions.SetDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetDispFlag

; 159  : 		else

	jmp	SHORT $LN2@Initialize
$LN3@Initialize:

; 160  : 			PlayerOptions.ClearDispFlag(DISP_SHADOWS);

	push	8
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::ClearDispFlag
$LN2@Initialize:

; 161  : 	}
; 162  : /*
; 163  : 	button=(C_Button *)win->FindControl(BILINEAR_FILTERING);
; 164  : 	if(button != NULL)
; 165  : 	{
; 166  : 		renderer->SetFilteringMode( button->GetState() );
; 167  : 	}
; 168  : */	
; 169  : 	button=(C_Button *)win->FindControl(HAZING);

	push	70080					; 000111c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _button$[ebp], eax

; 170  : 	if(button != NULL)

	cmp	DWORD PTR _button$[ebp], 0
	je	SHORT $LN1@Initialize

; 171  : 	{
; 172  : 		renderer->SetHazeMode(button->GetState());

	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?SetHazeMode@RenderOTW@@QAEXH@Z		; RenderOTW::SetHazeMode
$LN1@Initialize:

; 173  : 	}
; 174  : 
; 175  : /*	button=(C_Button *)win->FindControl(GOUROUD);
; 176  : 	if(button != NULL)
; 177  : 	{
; 178  : 		renderer->SetSmoothShadingMode(button->GetState());
; 179  : 	}
; 180  : 
; 181  : 	button=(C_Button *)win->FindControl(ALPHA_BLENDING);
; 182  : 	if(button != NULL)
; 183  : 	{
; 184  : 		renderer->SetAlphaMode( button->GetState() );
; 185  : 	}*/
; 186  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?InitializeViewer@@YAXPAVC_Window@@PAVRenderOTW@@@Z ENDP ; InitializeViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?STPDisplayCB@@YAXJFPAVC_Base@@@Z PROC			; STPDisplayCB

; 110  : {

	push	ebp
	mov	ebp, esp

; 111  : 	F4EnterCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 112  : 	if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	SHORT $LN1@STPDisplay

; 113  : 		SetupViewer->ViewOTW();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?ViewOTW@C_3dViewer@@QAEHXZ		; C_3dViewer::ViewOTW
$LN1@STPDisplay:

; 114  : 	F4LeaveCriticalSection(SetupCritSection);

	mov	ecx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	ecx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 115  : }//DisplayCB

	pop	ebp
	ret	0
?STPDisplayCB@@YAXJFPAVC_Base@@@Z ENDP			; STPDisplayCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?STPViewTimerCB@@YAXJFPAVC_Base@@@Z PROC		; STPViewTimerCB

; 98   : {

	push	ebp
	mov	ebp, esp

; 99   : 	control->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 100  : 	if(control->GetFlags() & C_BIT_ABSOLUTE)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 262144				; 00040000H
	je	SHORT $LN2@STPViewTim

; 101  : 	{
; 102  : 		control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 103  : 	}
; 104  : 	else

	jmp	SHORT $LN3@STPViewTim
$LN2@STPViewTim:

; 105  : 		control->Parent_->RefreshClient(control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN3@STPViewTim:

; 106  : }//ViewTimerCB

	pop	ebp
	ret	0
?STPViewTimerCB@@YAXJFPAVC_Base@@@Z ENDP		; STPViewTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
_win$ = 8						; size = 4
?STPMoveRendererCB@@YAXPAVC_Window@@@Z PROC		; STPMoveRendererCB

; 92   : {

	push	ebp
	mov	ebp, esp

; 93   : 	if(SetupViewer)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	je	SHORT $LN2@STPMoveRen

; 94   : 		SetupViewer->Viewport(win,2);

	push	2
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport
$LN2@STPMoveRen:

; 95   : }//MoveRendererCB

	pop	ebp
	ret	0
?STPMoveRendererCB@@YAXPAVC_Window@@@Z ENDP		; STPMoveRendererCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
?STPLeaveCrit@@YAXXZ PROC				; STPLeaveCrit

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	F4LeaveCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4

; 89   : }

	pop	ebp
	ret	0
?STPLeaveCrit@@YAXXZ ENDP				; STPLeaveCrit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
?STPEnterCrit@@YAXXZ PROC				; STPEnterCrit

; 82   : {

	push	ebp
	mov	ebp, esp

; 83   : 	F4EnterCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 84   : }

	pop	ebp
	ret	0
?STPEnterCrit@@YAXXZ ENDP				; STPEnterCrit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\setup\graphicstab.cpp
_TEXT	SEGMENT
tv247 = -52						; size = 4
tv241 = -48						; size = 4
tv235 = -44						; size = 4
tv229 = -40						; size = 4
tv219 = -36						; size = 4
tv213 = -32						; size = 4
_win$ = -28						; size = 4
_newYaw$1 = -24						; size = 4
_yawChg$2 = -20						; size = 4
_pitchChg$3 = -16					; size = 4
_newAlt$4 = -12						; size = 4
_newPitch$5 = -8					; size = 4
_altChg$6 = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?ChangeViewpointCB@@YAXJFPAVC_Base@@@Z PROC		; ChangeViewpointCB

; 453  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 454  : 	static int count = 0;
; 455  : 	
; 456  : 	C_Window	*win;
; 457  : 	
; 458  : 	if(ready)

	cmp	DWORD PTR ?ready@@3HA, 0		; ready
	je	$LN18@ChangeView

; 459  : 	{
; 460  : 		// Update the Joystick control
; 461  : 		GetJoystickInput();

	call	?GetJoystickInput@@YAXXZ		; GetJoystickInput

; 462  : 
; 463  : 		if ( IO.digital[0] || ((count %= 3) == 0) )

	mov	eax, 2
	imul	eax, 0
	movsx	ecx, WORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[eax+616]
	test	ecx, ecx
	jne	SHORT $LN16@ChangeView
	mov	eax, DWORD PTR ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA, edx
	cmp	DWORD PTR ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA, 0
	jne	$LN15@ChangeView
$LN16@ChangeView:

; 464  : 		{
; 465  : 			win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 466  : 			if(win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN15@ChangeView

; 467  : 			{
; 468  : 				//Leave=UI_Enter(control->Parent_);
; 469  : 				F4EnterCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4EnterCriticalSection
	add	esp, 4

; 470  : 				if(SetupViewer == NULL)

	cmp	DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A, 0 ; SetupViewer
	jne	SHORT $LN14@ChangeView

; 471  : 				{
; 472  : 					F4LeaveCriticalSection(SetupCritSection);

	mov	eax, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4

; 473  : 					//UI_Leave(Leave);
; 474  : 					return;

	jmp	$LN19@ChangeView
$LN14@ChangeView:

; 475  : 				}
; 476  : 			
; 477  : 					
; 478  : 			
; 479  : 				float pitchChg = 0.0f,yawChg = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pitchChg$3[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _yawChg$2[ebp], xmm0

; 480  : 				float altChg = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _altChg$6[ebp], xmm0

; 481  : 				float newPitch=0.0f, newYaw=0.0f, newAlt;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _newPitch$5[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _newYaw$1[ebp], xmm0

; 482  : 			
; 483  : 				//gMainHandler->EnterCriticalSection();
; 484  : // Retro 31Dec2003
; 485  : extern AxisMapping AxisMap;
; 486  : 				if (AxisMap.FlightControlDevice != -1)

	cmp	DWORD PTR ?AxisMap@@3UAxisMapping@@A, -1
	je	$LN10@ChangeView

; 487  : 					if(IO.digital[(AxisMap.FlightControlDevice-SIM_JOYSTICK1)*SIMLIB_MAX_DIGITAL])

	mov	ecx, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	sub	ecx, 2
	shl	ecx, 5
	movsx	edx, WORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[ecx*2+616]
	test	edx, edx
	je	$LN10@ChangeView

; 488  : 				{
; 489  : 					pitchChg = IO.analog[AXIS_PITCH].engrValue * PITCH_CHG;

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[eax+16]
	mulss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pitchChg$3[ebp], xmm0

; 490  : 					yawChg = IO.analog[AXIS_ROLL].engrValue * YAW_CHG;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	xmm0, DWORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[ecx+16]
	mulss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _yawChg$2[ebp], xmm0

; 491  : 					altChg = 1.0f - IO.analog[AXIS_THROTTLE].engrValue;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[edx+16]
	movss	DWORD PTR _altChg$6[ebp], xmm0

; 492  : 					
; 493  : 					if(IO.digital[((AxisMap.FlightControlDevice-SIM_JOYSTICK1)*SIMLIB_MAX_DIGITAL)+1])

	mov	eax, DWORD PTR ?AxisMap@@3UAxisMapping@@A
	sub	eax, 2
	shl	eax, 5
	movsx	ecx, WORD PTR ?IO@@3VSIMLIB_IO_CLASS@@A[eax*2+618]
	test	ecx, ecx
	je	SHORT $LN11@ChangeView

; 494  : 					{
; 495  : 						altChg = altChg * altChg * ALT_CHG;

	movss	xmm0, DWORD PTR _altChg$6[ebp]
	mulss	xmm0, DWORD PTR _altChg$6[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	movss	DWORD PTR _altChg$6[ebp], xmm0

; 496  : 					}
; 497  : 					else

	jmp	SHORT $LN10@ChangeView
$LN11@ChangeView:

; 498  : 					{
; 499  : 						altChg = altChg * altChg * ALT_CHG * -1;

	movss	xmm0, DWORD PTR _altChg$6[ebp]
	mulss	xmm0, DWORD PTR _altChg$6[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _altChg$6[ebp], xmm0
$LN10@ChangeView:

; 500  : 					}
; 501  : 				}
; 502  : 				
; 503  : 				if(fabs(pitchChg)<0.5)

	push	ecx
	movss	xmm0, DWORD PTR _pitchChg$3[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv213[ebp]
	movss	xmm0, DWORD PTR tv213[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN9@ChangeView

; 504  : 					pitchChg = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pitchChg$3[ebp], xmm0
$LN9@ChangeView:

; 505  : 				newPitch = SetupViewer->GetCameraPitch() + pitchChg;

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetCameraPitch@C_3dViewer@@QAEMXZ	; C_3dViewer::GetCameraPitch
	fstp	DWORD PTR tv219[ebp]
	movss	xmm0, DWORD PTR tv219[ebp]
	addss	xmm0, DWORD PTR _pitchChg$3[ebp]
	movss	DWORD PTR _newPitch$5[ebp], xmm0

; 506  : 				
; 507  : 				if(newPitch > 90.0f)

	movss	xmm0, DWORD PTR _newPitch$5[ebp]
	comiss	xmm0, DWORD PTR __real@42b40000
	jbe	SHORT $LN8@ChangeView

; 508  : 					newPitch = 90.0f;

	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR _newPitch$5[ebp], xmm0
	jmp	SHORT $LN6@ChangeView
$LN8@ChangeView:

; 509  : 				else if(newPitch < -90.0f)

	movss	xmm0, DWORD PTR __real@c2b40000
	comiss	xmm0, DWORD PTR _newPitch$5[ebp]
	jbe	SHORT $LN6@ChangeView

; 510  : 					newPitch = -90.0f;

	movss	xmm0, DWORD PTR __real@c2b40000
	movss	DWORD PTR _newPitch$5[ebp], xmm0
$LN6@ChangeView:

; 511  : 				
; 512  : 				if(fabs(yawChg) < 0.5)

	push	ecx
	movss	xmm0, DWORD PTR _yawChg$2[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv229[ebp]
	movss	xmm0, DWORD PTR tv229[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN5@ChangeView

; 513  : 					yawChg = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _yawChg$2[ebp], xmm0
$LN5@ChangeView:

; 514  : 				newYaw = SetupViewer->GetCameraHeading() + yawChg;

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetCameraHeading@C_3dViewer@@QAEMXZ	; C_3dViewer::GetCameraHeading
	fstp	DWORD PTR tv235[ebp]
	movss	xmm0, DWORD PTR tv235[ebp]
	addss	xmm0, DWORD PTR _yawChg$2[ebp]
	movss	DWORD PTR _newYaw$1[ebp], xmm0

; 515  : 				
; 516  : 				if(fabs(altChg) < .5f)

	push	ecx
	movss	xmm0, DWORD PTR _altChg$6[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv241[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR tv241[ebp]
	jbe	SHORT $LN4@ChangeView

; 517  : 					altChg = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _altChg$6[ebp], xmm0
$LN4@ChangeView:

; 518  : 				
; 519  : 				newAlt = altChg + SetupViewer->GetCameraZ();

	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetCameraZ@C_3dViewer@@QAEMXZ		; C_3dViewer::GetCameraZ
	fstp	DWORD PTR tv247[ebp]
	movss	xmm0, DWORD PTR tv247[ebp]
	addss	xmm0, DWORD PTR _altChg$6[ebp]
	movss	DWORD PTR _newAlt$4[ebp], xmm0

; 520  : 				
; 521  : 				if(newAlt > MIN_ALT)

	movss	xmm0, DWORD PTR _newAlt$4[ebp]
	comiss	xmm0, DWORD PTR __real@c1200000
	jbe	SHORT $LN3@ChangeView

; 522  : 					newAlt = MIN_ALT;

	movss	xmm0, DWORD PTR __real@c1200000
	movss	DWORD PTR _newAlt$4[ebp], xmm0
	jmp	SHORT $LN1@ChangeView
$LN3@ChangeView:

; 523  : 				else if(newAlt < MAX_ALT)

	movss	xmm0, DWORD PTR __real@c7435000
	comiss	xmm0, DWORD PTR _newAlt$4[ebp]
	jbe	SHORT $LN1@ChangeView

; 524  : 					newAlt = MAX_ALT;

	movss	xmm0, DWORD PTR __real@c7435000
	movss	DWORD PTR _newAlt$4[ebp], xmm0
$LN1@ChangeView:

; 525  : 				
; 526  : 				
; 527  : 				SetupViewer->SetCamera(SetupViewer->GetCameraX(),SetupViewer->GetCameraY(),
; 528  : 					newAlt,newYaw,newPitch,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _newPitch$5[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _newYaw$1[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _newAlt$4[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetCameraY@C_3dViewer@@QAEMXZ		; C_3dViewer::GetCameraY
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?GetCameraX@C_3dViewer@@QAEMXZ		; C_3dViewer::GetCameraX
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?SetupViewer@@3PAVC_3dViewer@@A ; SetupViewer
	call	?SetCamera@C_3dViewer@@QAEXMMMMMM@Z	; C_3dViewer::SetCamera

; 529  : 				
; 530  : 				//win->RefreshClient(2);
; 531  : 				F4LeaveCriticalSection(SetupCritSection);

	mov	edx, DWORD PTR ?SetupCritSection@@3PAUF4CSECTIONHANDLE@@A ; SetupCritSection
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 532  : 				//UI_Leave(Leave);
; 533  : 				win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN15@ChangeView:

; 534  : 			}
; 535  : 			
; 536  : 		}
; 537  : 		count++;

	mov	eax, DWORD PTR ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA
	add	eax, 1
	mov	DWORD PTR ?count@?1??ChangeViewpointCB@@YAXJFPAVC_Base@@@Z@4HA, eax
$LN18@ChangeView:
$LN19@ChangeView:

; 538  : 	}
; 539  : }//ChangeViewpointCB

	mov	esp, ebp
	pop	ebp
	ret	0
?ChangeViewpointCB@@YAXJFPAVC_Base@@@Z ENDP		; ChangeViewpointCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rviewpnt.h
;	COMDAT ??0RViewPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0RViewPoint@@QAE@XZ PROC				; RViewPoint::RViewPoint, COMDAT
; _this$ = ecx

; 24   : 	RViewPoint()	{ objectLists = NULL; nObjectLists = 0; weather = NULL; bZBuffering = FALSE; }; //JAM 10Nov03

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RViewPoint@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TViewPoint@@QAE@XZ			; TViewPoint::TViewPoint
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RViewPoint@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0ObjectDisplayList@@QAE@XZ		; ObjectDisplayList::ObjectDisplayList
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+248], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RViewPoint@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TViewPoint@@QAE@XZ			; TViewPoint::~TViewPoint
__unwindfunclet$??0RViewPoint@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RViewPoint@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RViewPoint@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RViewPoint@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RViewPoint@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__ehhandler$??0RViewPoint@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RViewPoint@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RViewPoint@@QAE@XZ ENDP				; RViewPoint::RViewPoint
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z PROC		; TViewPoint::GetPos, COMDAT
; _this$ = ecx

; 119  : 	void	GetPos( Tpoint *p )		{ *p = pos; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPos@TViewPoint@@QAEXPAUTpoint@@@Z ENDP		; TViewPoint::GetPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ??1TViewPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1TViewPoint@@QAE@XZ PROC				; TViewPoint::~TViewPoint, COMDAT
; _this$ = ecx

; 33   : 	~TViewPoint()	{ if (nLists != 0)  Cleanup(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TViewPoint@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN2@TViewPoint
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@TViewPoint@@UAEXXZ		; TViewPoint::Cleanup
$LN2@TViewPoint:
	mov	esp, ebp
	pop	ebp
	ret	0
??1TViewPoint@@QAE@XZ ENDP				; TViewPoint::~TViewPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ??0TViewPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0TViewPoint@@QAE@XZ PROC				; TViewPoint::TViewPoint, COMDAT
; _this$ = ecx

; 32   : 	TViewPoint()	{ nLists = 0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TViewPoint@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0TViewPoint@@QAE@XZ ENDP				; TViewPoint::TViewPoint
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ PROC	; C_3dViewer::GetBSPList, COMDAT
; _this$ = ecx

; 111  : 		C_BSPList *GetBSPList() { return(objects_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBSPList@C_3dViewer@@QAEPAVC_BSPList@@XZ ENDP	; C_3dViewer::GetBSPList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ PROC		; C_3dViewer::GetVP, COMDAT
; _this$ = ecx

; 93   : 		RViewPoint *GetVP() { return(viewPoint_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVP@C_3dViewer@@QAEPAVRViewPoint@@XZ ENDP		; C_3dViewer::GetVP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ PROC	; C_3dViewer::GetRendOTW, COMDAT
; _this$ = ecx

; 92   : 		RenderOTW *GetRendOTW() { return(rendOTW_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRendOTW@C_3dViewer@@QAEPAVRenderOTW@@XZ ENDP	; C_3dViewer::GetRendOTW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetCameraZ@C_3dViewer@@QAEMXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?GetCameraZ@C_3dViewer@@QAEMXZ PROC			; C_3dViewer::GetCameraZ, COMDAT
; _this$ = ecx

; 90   : 		float GetCameraZ() { return(CameraPos_.z); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+44]
	movss	DWORD PTR tv69[ebp], xmm0
	fld	DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCameraZ@C_3dViewer@@QAEMXZ ENDP			; C_3dViewer::GetCameraZ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetCameraY@C_3dViewer@@QAEMXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?GetCameraY@C_3dViewer@@QAEMXZ PROC			; C_3dViewer::GetCameraY, COMDAT
; _this$ = ecx

; 89   : 		float GetCameraY() { return(CameraPos_.y); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR tv69[ebp], xmm0
	fld	DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCameraY@C_3dViewer@@QAEMXZ ENDP			; C_3dViewer::GetCameraY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetCameraX@C_3dViewer@@QAEMXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?GetCameraX@C_3dViewer@@QAEMXZ PROC			; C_3dViewer::GetCameraX, COMDAT
; _this$ = ecx

; 88   : 		float GetCameraX() { return(CameraPos_.x); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR tv69[ebp], xmm0
	fld	DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCameraX@C_3dViewer@@QAEMXZ ENDP			; C_3dViewer::GetCameraX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetCameraPitch@C_3dViewer@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetCameraPitch@C_3dViewer@@QAEMXZ PROC			; C_3dViewer::GetCameraPitch, COMDAT
; _this$ = ecx

; 86   : 		float GetCameraPitch() { return(CameraPitch_); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+108]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCameraPitch@C_3dViewer@@QAEMXZ ENDP			; C_3dViewer::GetCameraPitch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?GetCameraHeading@C_3dViewer@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetCameraHeading@C_3dViewer@@QAEMXZ PROC		; C_3dViewer::GetCameraHeading, COMDAT
; _this$ = ecx

; 85   : 		float GetCameraHeading() { return(CameraHeading_); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCameraHeading@C_3dViewer@@QAEMXZ ENDP		; C_3dViewer::GetCameraHeading
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?SetTextureLevels@C_3dViewer@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?SetTextureLevels@C_3dViewer@@QAEXJJ@Z PROC		; C_3dViewer::SetTextureLevels, COMDAT
; _this$ = ecx

; 78   : 		void SetTextureLevels(long min,long max) { MinTexture_=min; MaxTexture_=max; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _min$[ebp]
	mov	DWORD PTR [eax+124], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _max$[ebp]
	mov	DWORD PTR [edx+128], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTextureLevels@C_3dViewer@@QAEXJJ@Z ENDP		; C_3dViewer::SetTextureLevels
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ?SetViewDistance@C_3dViewer@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
?SetViewDistance@C_3dViewer@@QAEXM@Z PROC		; C_3dViewer::SetViewDistance, COMDAT
; _this$ = ecx

; 69   : 		void SetViewDistance(float d) { ViewDistance_=d; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [eax+116], xmm0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetViewDistance@C_3dViewer@@QAEXM@Z ENDP		; C_3dViewer::SetViewDistance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??0C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0C_3dViewer@@QAE@XZ PROC				; C_3dViewer::C_3dViewer, COMDAT
; _this$ = ecx

; 37   : 		C_3dViewer()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		{
; 39   : 			rend3d_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 			rendOTW_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 41   : 			viewPoint_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 42   : 			objects_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 43   : 			l=-1.0f; t=1.0f;r=1.0f;b=-1.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+132], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+136], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+140], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+144], xmm0

; 44   : 			viewPos_.x=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+24], xmm0

; 45   : 			viewPos_.y=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0

; 46   : 			viewPos_.z=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+32], xmm0

; 47   : 			zeroPos_=viewPos_;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 48   : 			currentPos_=viewPos_;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 49   : 			CameraPos_=viewPos_;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx

; 50   : 			currentRot_=IMatrix;

	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 60					; 0000003cH
	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	rep movsd

; 51   : 			CameraHeading_=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+104], xmm0

; 52   : 			CameraPitch_=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+108], xmm0

; 53   : 			CameraRoll_=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+112], xmm0

; 54   : 			ViewDistance_=10.0f * FEET_PER_KM;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@47001fcd
	movss	DWORD PTR [edx+116], xmm0

; 55   : 			Time_=12l * 60l * 60l * 1000l;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 43200000		; 02932e00H

; 56   : 			MinTexture_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 57   : 			MaxTexture_=1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 1

; 58   : 			Weather_=0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+156], xmm0

; 59   : //			TextureLevel_=2;
; 60   : //			SmoothShading_=TRUE;
; 61   : 			sw=800; sh=600;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [ecx+148], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [edx+152], xmm0

; 62   : 			LockOnView_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0

; 63   : 			m_pImgGray = NULL;	// OW

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 0

; 64   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cbsplist.h
;	COMDAT ?GetFirst@C_BSPList@@QAEPAUUI_BSPList@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirst@C_BSPList@@QAEPAUUI_BSPList@@XZ PROC		; C_BSPList::GetFirst, COMDAT
; _this$ = ecx

; 79   : 		BSPLIST *GetFirst() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirst@C_BSPList@@QAEPAUUI_BSPList@@XZ ENDP		; C_BSPList::GetFirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?InDisplayList@DrawableObject@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?InDisplayList@DrawableObject@@QAEHXZ PROC		; DrawableObject::InDisplayList, COMDAT
; _this$ = ecx

; 51   : 	BOOL	InDisplayList( void )	{ return (parentList != NULL); };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN3@InDisplayL
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@InDisplayL
$LN3@InDisplayL:
	mov	DWORD PTR tv66[ebp], 0
$LN4@InDisplayL:
	mov	eax, DWORD PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?InDisplayList@DrawableObject@@QAEHXZ ENDP		; DrawableObject::InDisplayList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetScale@DrawableObject@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?SetScale@DrawableObject@@QAEXM@Z PROC			; DrawableObject::SetScale, COMDAT
; _this$ = ecx

; 34   :     { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   :         radius = (s/scale)*radius; 

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	divss	xmm0, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+16], xmm0

; 36   :         scale = s; 

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [eax+20], xmm0

; 37   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
?SetScale@DrawableObject@@QAEXM@Z ENDP			; DrawableObject::SetScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ?SetFilteringMode@RenderOTW@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetFilteringMode@RenderOTW@@QAEXH@Z PROC		; RenderOTW::SetFilteringMode, COMDAT
; _this$ = ecx

; 140  : 	void SetFilteringMode( BOOL state )			{ filtering = state; SetupStates(); };	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+263104], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupStates@RenderOTW@@IAEXXZ		; RenderOTW::SetupStates
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFilteringMode@RenderOTW@@QAEXH@Z ENDP		; RenderOTW::SetFilteringMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ?SetHazeMode@RenderOTW@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetHazeMode@RenderOTW@@QAEXH@Z PROC			; RenderOTW::SetHazeMode, COMDAT
; _this$ = ecx

; 122  : 	void SetHazeMode( BOOL state )				{ hazed = state; SetupStates(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+263096], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupStates@RenderOTW@@IAEXXZ		; RenderOTW::SetupStates
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHazeMode@RenderOTW@@QAEXH@Z ENDP			; RenderOTW::SetHazeMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::ClearDispFlag, COMDAT
; _this$ = ecx

; 191  : 	void ClearDispFlag (int flag)							{DispFlags &= ~flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearDispFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::ClearDispFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetDispFlag@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetDispFlag@PlayerOptionsClass@@QAEXH@Z PROC		; PlayerOptionsClass::SetDispFlag, COMDAT
; _this$ = ecx

; 190  : 	void SetDispFlag (int flag)								{DispFlags |= flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDispFlag@PlayerOptionsClass@@QAEXH@Z ENDP		; PlayerOptionsClass::SetDispFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ShadowsOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?ShadowsOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::ShadowsOn, COMDAT
; _this$ = ecx

; 120  : 	int ShadowsOn(void)										{ return (DispFlags & DISP_SHADOWS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8
	je	SHORT $LN3@ShadowsOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@ShadowsOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@ShadowsOn
$LN3@ShadowsOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@ShadowsOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ShadowsOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::ShadowsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?HazingOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?HazingOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::HazingOn, COMDAT
; _this$ = ecx

; 115  : 	int HazingOn (void)										{ return (DispFlags & DISP_HAZING) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	je	SHORT $LN3@HazingOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@HazingOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@HazingOn
$LN3@HazingOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@HazingOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?HazingOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::HazingOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GouraudOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?GouraudOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::GouraudOn, COMDAT
; _this$ = ecx

; 114  : 	int GouraudOn (void)									{ return (DispFlags & DISP_GOURAUD) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	je	SHORT $LN3@GouraudOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@GouraudOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@GouraudOn
$LN3@GouraudOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@GouraudOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GouraudOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::GouraudOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetFront@C_Handler@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFront@C_Handler@@QAEPAVImageBuffer@@XZ PROC		; C_Handler::GetFront, COMDAT
; _this$ = ecx

; 242  : 		ImageBuffer *GetFront() { return(Front_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFront@C_Handler@@QAEPAVImageBuffer@@XZ ENDP		; C_Handler::GetFront
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdlib.h
;	COMDAT ?abs@@YAJJ@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?abs@@YAJJ@Z PROC					; abs, COMDAT

; 485  :     {

	push	ebp
	mov	ebp, esp

; 486  :         return labs(_X);

	mov	eax, DWORD PTR __X$[ebp]
	push	eax
	call	_labs
	add	esp, 4

; 487  :     }

	pop	ebp
	ret	0
?abs@@YAJJ@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 517  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
END
