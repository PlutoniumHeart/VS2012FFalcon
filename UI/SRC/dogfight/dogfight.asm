; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\dogfight\dogfight.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?gDogfightControl@@3PAVC_Base@@A		; gDogfightControl
PUBLIC	?gDogfightBites@@3PAVC_SoundBite@@A		; gDogfightBites
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?gCurDogfightFile@@3PADA			; gCurDogfightFile
PUBLIC	?DFExcludeList@@3PAPADA				; DFExcludeList
PUBLIC	??_C@_08IIACKFCG@New?5Game?$AA@			; `string'
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?calltable@@3PAY04EA				; calltable
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?DFAIPlanesDef@@3PAUDF_AIRPLANE_TYPE@@A		; DFAIPlanesDef
PUBLIC	?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A		; DFAIPlanes
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?gDogfightControl@@3PAVC_Base@@A DD 01H DUP (?)		; gDogfightControl
?gDogfightBites@@3PAVC_SoundBite@@A DD 01H DUP (?)	; gDogfightBites
_AddToTeam DW	01H DUP (?)
	ALIGN	4

?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A DD 01H DUP (?)	; DFAIPlanes
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ??_C@_08IIACKFCG@New?5Game?$AA@
CONST	SEGMENT
??_C@_08IIACKFCG@New?5Game?$AA@ DB 'New Game', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?gCurDogfightFile@@3PADA DB 'campaign\save\New Game.dfs', 00H ; gCurDogfightFile
	ORG $+233
?DFExcludeList@@3PAPADA DD FLAT:??_C@_08IIACKFCG@New?5Game?$AA@ ; DFExcludeList
	DD	00H
?calltable@@3PAY04EA DB 00H				; calltable
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	079H
	DB	05bH
	DB	078H
	DB	08dH
	DB	095H
	DB	07H
	DB	058H
	DB	052H
	DB	07bH
	DB	087H
	DB	01H
	DB	015H
	DB	080H
	DB	020H
	DB	010H
	DB	016H
	DB	03aH
	DB	069H
	DB	085H
	DB	045H
	ORG $+3
_DFTeamIconResID DD 021af104cH
	DD	021af104dH
	DD	021af103cH
	DD	021af103dH
	DD	021af0fecH
	DD	021af0fedH
	DD	021af104cH
	DD	021af104dH
	DD	021af102cH
	DD	021af102dH
?DFAIPlanesDef@@3PAUDF_AIRPLANE_TYPE@@A DB 00H		; DFAIPlanesDef
	DB	00H
	DB	00H
	DB	00H
	DD	0526dH
	DD	00H
	DD	00H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DD	05270H
	DD	01H
	DD	02752H
	DB	01H
	DB	03H
	DB	01H
	DB	05H
	DD	0527dH
	DD	02H
	DD	02773H
	DB	05H
	DB	01H
	DB	02H
	DB	04H
	DD	052bcH
	DD	04H
	DD	02753H
	DB	05H
	DB	01H
	DB	03H
	DB	04H
	DD	052bdH
	DD	05H
	DD	02753H
	DB	01H
	DB	0bH
	DB	03H
	DB	01H
	DD	052afH
	DD	06H
	DD	02754H
	DB	01H
	DB	0bH
	DB	0eH
	DB	01H
	DD	052b1H
	DD	07H
	DD	02771H
	DB	01H
	DB	04H
	DB	01H
	DB	06H
	DD	05280H
	DD	01a3H
	DD	0278dH
	DB	01H
	DB	04H
	DB	03H
	DB	06H
	DD	05282H
	DD	09H
	DD	02755H
	DB	01H
	DB	0bH
	DB	07H
	DB	01H
	DD	052b4H
	DD	0aH
	DD	02756H
	DB	05H
	DB	03H
	DB	02H
	DB	0eH
	DD	052c6H
	DD	0bH
	DD	02757H
	DB	01H
	DB	03H
	DB	03H
	DB	05H
	DD	0527fH
	DD	028H
	DD	02772H
	DB	01H
	DB	05H
	DB	01H
	DB	07H
	DD	05288H
	DD	01a1H
	DD	0275dH
	DB	01H
	DB	05H
	DB	02H
	DB	07H
	DD	05289H
	DD	02aH
	DD	02758H
	DB	01H
	DB	06H
	DB	05H
	DB	08H
	DD	0528eH
	DD	02dH
	DD	0275dH
	DB	01H
	DB	02H
	DB	05H
	DB	03H
	DD	05274H
	DD	023H
	DD	0275dH
	DB	01H
	DB	06H
	DB	06H
	DB	08H
	DD	0528fH
	DD	02eH
	DD	0275eH
	DB	01H
	DB	06H
	DB	02H
	DB	08H
	DD	0528bH
	DD	02bH
	DD	0275aH
	DB	01H
	DB	06H
	DB	03H
	DB	08H
	DD	0528cH
	DD	02cH
	DD	0275bH
	DB	01H
	DB	07H
	DB	02H
	DB	09H
	DD	0529bH
	DD	038H
	DD	0275bH
	DB	01H
	DB	07H
	DB	03H
	DB	09H
	DD	0529cH
	DD	039H
	DD	02751H
	DB	01H
	DB	07H
	DB	07H
	DB	09H
	DD	0529dH
	DD	03aH
	DD	0275cH
	DB	01H
	DB	07H
	DB	06H
	DB	09H
	DD	0529eH
	DD	03bH
	DD	0275cH
	DB	01H
	DB	06H
	DB	04H
	DB	08H
	DD	0528dH
	DD	01a0H
	DD	0278aH
	DB	01H
	DB	07H
	DB	01H
	DB	09H
	DD	0529aH
	DD	037H
	DD	02759H
	DB	01H
	DB	02H
	DB	06H
	DB	03H
	DD	05275H
	DD	024H
	DD	02758H
	DB	01H
	DB	02H
	DB	08H
	DB	03H
	DD	05277H
	DD	025H
	DD	0275fH
	DB	01H
	DB	0bH
	DB	0bH
	DB	01H
	DD	052b8H
	DD	040H
	DD	02760H
	DB	05H
	DB	01H
	DB	05H
	DB	04H
	DD	052bfH
	DD	041H
	DD	02761H
	DB	01H
	DB	0aH
	DB	02H
	DB	0dH
	DD	052a9H
	DD	03dH
	DD	02762H
	DB	01H
	DB	0aH
	DB	01H
	DB	0dH
	DD	052a8H
	DD	0133H
	DD	02760H
	DB	01H
	DB	0aH
	DB	04H
	DB	0dH
	DD	052abH
	DD	03eH
	DD	02763H
	DB	05H
	DB	02H
	DB	01H
	DB	0cH
	DD	052c3H
	DD	043H
	DD	02764H
	DB	05H
	DB	01H
	DB	06H
	DB	04H
	DD	052c0H
	DD	042H
	DD	02765H
	DB	01H
	DB	06H
	DB	0aH
	DB	08H
	DD	05292H
	DD	031H
	DD	02766H
	DB	01H
	DB	06H
	DB	0bH
	DB	08H
	DD	05293H
	DD	032H
	DD	02767H
	DB	01H
	DB	06H
	DB	0cH
	DB	08H
	DD	05294H
	DD	033H
	DD	02768H
	DB	01H
	DB	06H
	DB	0dH
	DB	08H
	DD	05295H
	DD	034H
	DD	02769H
	DB	01H
	DB	06H
	DB	0eH
	DB	08H
	DD	05296H
	DD	035H
	DD	0276aH
	DB	05H
	DB	02H
	DB	02H
	DB	0cH
	DD	052c4H
	DD	044H
	DD	0276bH
	DB	01H
	DB	02H
	DB	0cH
	DB	03H
	DD	0527bH
	DD	027H
	DD	0276cH
	DB	01H
	DB	06H
	DB	01H
	DB	08H
	DD	05299H
	DD	036H
	DD	0276dH
	DB	01H
	DB	04H
	DB	04H
	DB	06H
	DD	05284H
	DD	029H
	DD	0276eH
	DB	01H
	DB	0aH
	DB	05H
	DB	0dH
	DD	052acH
	DD	03fH
	DD	0276eH
	DB	01H
	DB	04H
	DB	07H
	DB	06H
	DD	05287H
	DD	01a2H
	DD	0278cH
	DB	05H
	DB	03H
	DB	05H
	DB	0eH
	DD	052c9H
	DD	045H
	DD	0276fH
	DB	05H
	DB	03H
	DB	06H
	DB	0eH
	DD	052caH
	DD	046H
	DD	02770H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	?strstr@@YAPADPADPBD@Z				; strstr
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?Type@VuEntity@@QBEGXZ				; VuEntity::Type
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	?GetText@O_Output@@QAEPADXZ			; O_Output::GetText
PUBLIC	?SetParent@C_Base@@QAEXPAVC_Window@@@Z		; C_Base::SetParent
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetW@C_Base@@QAEJXZ				; C_Base::GetW
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetParent@C_Base@@QAEPAVC_Window@@XZ		; C_Base::GetParent
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	?GetMinInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetMinInteger
PUBLIC	?GetMaxInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetMaxInteger
PUBLIC	?GetInteger@C_EditBox@@QAEJXZ			; C_EditBox::GetInteger
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback
PUBLIC	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback
PUBLIC	?SetHour@C_Clock@@QAEXJ@Z			; C_Clock::SetHour
PUBLIC	?SetMinute@C_Clock@@QAEXJ@Z			; C_Clock::SetMinute
PUBLIC	?SetSecond@C_Clock@@QAEXJ@Z			; C_Clock::SetSecond
PUBLIC	?GetHour@C_Clock@@QAEJXZ			; C_Clock::GetHour
PUBLIC	?GetMinute@C_Clock@@QAEJXZ			; C_Clock::GetMinute
PUBLIC	?GetSecond@C_Clock@@QAEJXZ			; C_Clock::GetSecond
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?SetClientFlags@C_Window@@QAEXJJ@Z		; C_Window::SetClientFlags
PUBLIC	?GetControlList@C_Window@@QAEPAUControlListStr@@XZ ; C_Window::GetControlList
PUBLIC	?GetGroup@C_Window@@QAEJXZ			; C_Window::GetGroup
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?SetSlot@C_Pilot@@QAEXF@Z			; C_Pilot::SetSlot
PUBLIC	?GetSlot@C_Pilot@@QAEFXZ			; C_Pilot::GetSlot
PUBLIC	?SetSkill@C_Pilot@@QAEXF@Z			; C_Pilot::SetSkill
PUBLIC	?GetSkill@C_Pilot@@QAEFXZ			; C_Pilot::GetSkill
PUBLIC	?SetPlayer@C_Pilot@@QAEXF@Z			; C_Pilot::SetPlayer
PUBLIC	?GetPlayer@C_Pilot@@QAEFXZ			; C_Pilot::GetPlayer
PUBLIC	?SetVUID@C_Pilot@@QAEXVVU_ID@@@Z		; C_Pilot::SetVUID
PUBLIC	?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ		; C_Pilot::GetVUID
PUBLIC	?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ	; C_Dog_Flight::GetAircraft
PUBLIC	?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z		; C_Dog_Flight::SetVUID
PUBLIC	?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ		; C_Dog_Flight::GetVUID
PUBLIC	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ	; RulesClass::GetRules
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
PUBLIC	?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerCallsign
PUBLIC	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
PUBLIC	?GetAceFactor@FalconSessionEntity@@QBEMXZ	; FalconSessionEntity::GetAceFactor
PUBLIC	?GetAircraftNum@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetAircraftNum
PUBLIC	?GetPilotSlot@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetPilotSlot
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ	; UIComms::GetGame
PUBLIC	?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z ; DogfightClass::SetGameType
PUBLIC	?SetNumRadarMissiles@DogfightClass@@QAEXE@Z	; DogfightClass::SetNumRadarMissiles
PUBLIC	?SetNumRearAspectMissiles@DogfightClass@@QAEXE@Z ; DogfightClass::SetNumRearAspectMissiles
PUBLIC	?SetNumAllAspectMissiles@DogfightClass@@QAEXE@Z	; DogfightClass::SetNumAllAspectMissiles
PUBLIC	?GetNumRadarMissiles@DogfightClass@@QBEEXZ	; DogfightClass::GetNumRadarMissiles
PUBLIC	?GetNumRearAspectMissiles@DogfightClass@@QBEEXZ	; DogfightClass::GetNumRearAspectMissiles
PUBLIC	?GetNumAllAspectMissiles@DogfightClass@@QBEEXZ	; DogfightClass::GetNumAllAspectMissiles
PUBLIC	?SetFlag@DogfightClass@@QAEXH@Z			; DogfightClass::SetFlag
PUBLIC	?UnSetFlag@DogfightClass@@QAEXH@Z		; DogfightClass::UnSetFlag
PUBLIC	?IsSetFlag@DogfightClass@@QAEHH@Z		; DogfightClass::IsSetFlag
PUBLIC	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
PUBLIC	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	?IsLoaded@CampaignClass@@QAEHXZ			; CampaignClass::IsLoaded
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	?GetSPType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSPType
PUBLIC	?CheckFlyButton@@YAXXZ				; CheckFlyButton
PUBLIC	?CheckDelButtons@@YAXXZ				; CheckDelButtons
PUBLIC	?ClearDFTeamLists@@YAXXZ			; ClearDFTeamLists
PUBLIC	?ConvertDFIDtoTeam@@YAFJ@Z			; ConvertDFIDtoTeam
PUBLIC	?GetPlaneListID@@YAEJ@Z				; GetPlaneListID
PUBLIC	?GetACIDFromFlight@@YAJPAVFlightClass@@@Z	; GetACIDFromFlight
PUBLIC	?DeleteGroupList@@YAXJ@Z			; DeleteGroupList
PUBLIC	?CreateDogfightCB@@YAXXZ			; CreateDogfightCB
PUBLIC	?CancelDogfightCB@@YAXXZ			; CancelDogfightCB
PUBLIC	?ReallyJoinDogfightCB@@YAXXZ			; ReallyJoinDogfightCB
PUBLIC	?JoinDogfightCB@@YAXJFPAVC_Base@@@Z		; JoinDogfightCB
PUBLIC	?CopyDFSettingsToWindow@@YAXXZ			; CopyDFSettingsToWindow
PUBLIC	?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z	; AddDogfightPlayerCB
PUBLIC	?AddDogfightAIPlane@@YAXPAVFlightClass@@HHH@Z	; AddDogfightAIPlane
PUBLIC	?LeaveDogfight@@YAXXZ				; LeaveDogfight
PUBLIC	?MapXtoRatio@@YAMPAVC_Cursor@@@Z		; MapXtoRatio
PUBLIC	?MapYtoRatio@@YAMPAVC_Cursor@@@Z		; MapYtoRatio
PUBLIC	?RatiotoMapX@@YAJMPAVC_Cursor@@@Z		; RatiotoMapX
PUBLIC	?RatiotoMapY@@YAJMPAVC_Cursor@@@Z		; RatiotoMapY
PUBLIC	?LoadDfPlanes@@YAXXZ				; LoadDfPlanes
PUBLIC	?FindSquadronType@@YAHJJ@Z			; FindSquadronType
PUBLIC	?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z	; FillListBoxWithACTypes
PUBLIC	?SetCurrentGameState@@YAXPAVC_TreeList@@F@Z	; SetCurrentGameState
PUBLIC	?GameHasStarted@@YAXXZ				; GameHasStarted
PUBLIC	?DogfightJoinSuccess@@YAXXZ			; DogfightJoinSuccess
PUBLIC	?RemoveDogfightPlane@@YAXXZ			; RemoveDogfightPlane
PUBLIC	?ClearAllTreeStates@@YAXXZ			; ClearAllTreeStates
PUBLIC	?SelectDogfightFlightCB@@YAXJFPAVC_Base@@@Z	; SelectDogfightFlightCB
PUBLIC	?SelectDogfightPilotCB@@YAXJFPAVC_Base@@@Z	; SelectDogfightPilotCB
PUBLIC	?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z	; SelectDogfightItemCB
PUBLIC	?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z ; MakePilot
PUBLIC	?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ; MakeFlight
PUBLIC	?UpdateFlight@@YAXPAVC_Dog_Flight@@PAVFlightClass@@@Z ; UpdateFlight
PUBLIC	?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z ; AddDogfightPilot
PUBLIC	?AddDogfightFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ; AddDogfightFlight
PUBLIC	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
PUBLIC	?ClearOldDFInfo@@YAXJ@Z				; ClearOldDFInfo
PUBLIC	?BuildDFPlayerList@@YAXXZ			; BuildDFPlayerList
PUBLIC	?AddDogfightFlightCB@@YAXJFPAVC_Base@@@Z	; AddDogfightFlightCB
PUBLIC	?AddDogfightAICB@@YAXJFPAVC_Base@@@Z		; AddDogfightAICB
PUBLIC	?RemoveAICB@@YAXJFPAVC_Base@@@Z			; RemoveAICB
PUBLIC	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z		; PositionSlider
PUBLIC	?UpdateDogfightWindows@@YAXXZ			; UpdateDogfightWindows
PUBLIC	?CopyDFSettingsToSelectWindow@@YAXXZ		; CopyDFSettingsToSelectWindow
PUBLIC	?CopyDFSettingsFromWindow@@YAXXZ		; CopyDFSettingsFromWindow
PUBLIC	?LoadDogFightWindows@@YAXXZ			; LoadDogFightWindows
PUBLIC	?ClearDFTeamButtons@@YAXXZ			; ClearDFTeamButtons
PUBLIC	?EnableDFTeamGroup@@YAXXZ			; EnableDFTeamGroup
PUBLIC	?InfoButtonCB@@YAXJFPAVC_Base@@@Z		; InfoButtonCB
PUBLIC	?SaveItCB@@YAXJFPAVC_Base@@@Z			; SaveItCB
PUBLIC	?VerifySaveItCB@@YAXJFPAVC_Base@@@Z		; VerifySaveItCB
PUBLIC	?SelectDFGameFileCB@@YAXJFPAVC_Base@@@Z		; SelectDFGameFileCB
PUBLIC	?LoadRadioCB@@YAXJFPAVC_Base@@@Z		; LoadRadioCB
PUBLIC	?JoinRadioCB@@YAXJFPAVC_Base@@@Z		; JoinRadioCB
PUBLIC	?MapXtoSimX@@YAMPAVC_Cursor@@@Z			; MapXtoSimX
PUBLIC	?MapYtoSimY@@YAMPAVC_Cursor@@@Z			; MapYtoSimY
PUBLIC	?SimXtoMapX@@YAJMPAVC_Cursor@@@Z		; SimXtoMapX
PUBLIC	?SimYtoMapY@@YAJMPAVC_Cursor@@@Z		; SimYtoMapY
PUBLIC	?SaveResultsFileCB@@YAXJFPAVC_Base@@@Z		; SaveResultsFileCB
PUBLIC	?VerifySaveResultsFileCB@@YAXJFPAVC_Base@@@Z	; VerifySaveResultsFileCB
PUBLIC	?SaveResultsCB@@YAXJFPAVC_Base@@@Z		; SaveResultsCB
PUBLIC	?CleanupDebriefCB@@YAXJFPAVC_Base@@@Z		; CleanupDebriefCB
PUBLIC	?SeeDFFilesCB@@YAXJFPAVC_Base@@@Z		; SeeDFFilesCB
PUBLIC	?SeeDFGamesCB@@YAXJFPAVC_Base@@@Z		; SeeDFGamesCB
PUBLIC	?DogfightChangeTimeCB@@YAXJFPAVC_Base@@@Z	; DogfightChangeTimeCB
PUBLIC	?DeleteCurrentFileCB@@YAXJFPAVC_Base@@@Z	; DeleteCurrentFileCB
PUBLIC	?DeleteVerifyFileCB@@YAXJFPAVC_Base@@@Z		; DeleteVerifyFileCB
PUBLIC	?EndDogfightCB@@YAXJFPAVC_Base@@@Z		; EndDogfightCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03LCKPACKD@lst?$AA@			; `string'
PUBLIC	??_C@_08IKEJDFGO@teplanes?$AA@			; `string'
PUBLIC	??_C@_09DBKLODDO@te?9planes?$AA@		; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0DK@MMLHLGJN@?1?1?5Type?5SubType?5Specific?5UnitSub@ ; `string'
PUBLIC	??_C@_0BO@NCAHNLBG@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5d?5?$CF4d?5?$CF8d?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@KDLAMACB@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5ld?5?$CF4ld?5?$CF8ld?$AA@ ; `string'
PUBLIC	??_C@_07HMOCDNDG@Instant?$AA@			; `string'
PUBLIC	??_C@_0BI@IFJFODFC@Joining?5Dogfight?5game?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EKNFIOIH@Joining?5Dogfight?5game?4?5?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@ECBFCKHO@Create?5new?5Dogfight?5game?4?5?6?$AA@ ; `string'
PUBLIC	??_C@_07JOOPIDMD@?$CI?$CF4?42f?$CJ?$AA@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_09HNIKKFO@Super?5Fly?$AA@			; `string'
PUBLIC	??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_09MFBLKFGK@Unlimited?$AA@			; `string'
PUBLIC	??_C@_0L@KNMPGINM@df_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@OAIHMMOM@df_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@HNLBAOJL@df_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0BI@NDDGOFDA@art?2dgft?2play?2uiddf?4scf?$AA@ ; `string'
PUBLIC	??_C@_0L@FBKOMOFA@df_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@		; `string'
PUBLIC	??_C@_09OMGIEDEG@?$CFs?2?$CFs?4dfs?$AA@		; `string'
PUBLIC	??_C@_08DDPAHDML@?$CFs?2?$CK?4dfs?$AA@		; `string'
PUBLIC	??_C@_03CCLHNNBA@dfs?$AA@			; `string'
PUBLIC	??_C@_09OBJDIODK@?$CFs?2?$CFs?4DFS?$AA@		; `string'
PUBLIC	??_C@_0O@NKHDAPJK@?2New?5Game?4dfs?$AA@		; `string'
PUBLIC	??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@ ; `string'
PUBLIC	??_C@_04CGMDHGLL@?4LST?$AA@			; `string'
PUBLIC	??_C@_06GAEFPKPA@?$CFs?4lst?$AA@		; `string'
PUBLIC	??_C@_05PHBEAGFF@?$CK?4LST?$AA@			; `string'
PUBLIC	??_C@_0O@OLPMMGMM@?2new?5game?4dfs?$AA@		; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@392c987a
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@454cffae
PUBLIC	__real@45bde1b0
PUBLIC	__real@bf800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_strstr:PROC
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fopen:PROC
EXTRN	_fprintf:PROC
EXTRN	_sscanf:PROC
EXTRN	_sprintf:PROC
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_realloc:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z:PROC ; VuSessionEntity::JoinGame
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z:PROC ; VuSessionsIterator::VuSessionsIterator
EXTRN	??1VuSessionsIterator@@UAE@XZ:PROC		; VuSessionsIterator::~VuSessionsIterator
EXTRN	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetFirst
EXTRN	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetNext
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?GetUserPtr@C_Base@@QAEPAXJ@Z:PROC		; C_Base::GetUserPtr
EXTRN	?GetText@C_Button@@QAEPADF@Z:PROC		; C_Button::GetText
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z:PROC		; C_ListBox::AddItem
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC ; C_TreeList::AddChildItem
EXTRN	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z:PROC	; C_TreeList::Find
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	??0C_EditBox@@QAE@XZ:PROC			; C_EditBox::C_EditBox
EXTRN	??1C_EditBox@@UAE@XZ:PROC			; C_EditBox::~C_EditBox
EXTRN	?Setup@C_EditBox@@QAEXJF@Z:PROC			; C_EditBox::Setup
EXTRN	?Cleanup@C_EditBox@@UAEXXZ:PROC			; C_EditBox::Cleanup
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	?SetText@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetText
EXTRN	?SetInteger@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetInteger
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	??0C_TimerHook@@QAE@XZ:PROC			; C_TimerHook::C_TimerHook
EXTRN	?Setup@C_TimerHook@@QAEXJF@Z:PROC		; C_TimerHook::Setup
EXTRN	?SetTime@C_Clock@@QAEXJ@Z:PROC			; C_Clock::SetTime
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?ParseSoundBite@C_Parser@@QAEPAVC_SoundBite@@PAD@Z:PROC ; C_Parser::ParseSoundBite
EXTRN	?ScanClientAreas@C_Window@@QAEXXZ:PROC		; C_Window::ScanClientAreas
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?RemoveControl@C_Window@@QAEPAUControlListStr@@PAU2@@Z:PROC ; C_Window::RemoveControl
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?EnterCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::EnterCritical
EXTRN	?LeaveCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::LeaveCritical
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?DropControl@C_Handler@@QAEXXZ:PROC		; C_Handler::DropControl
EXTRN	??0C_Pilot@@QAE@XZ:PROC				; C_Pilot::C_Pilot
EXTRN	?Setup@C_Pilot@@QAEXJF@Z:PROC			; C_Pilot::Setup
EXTRN	?SetCallsign@C_Pilot@@QAEXFFPAD@Z:PROC		; C_Pilot::SetCallsign
EXTRN	??0C_Dog_Flight@@QAE@XZ:PROC			; C_Dog_Flight::C_Dog_Flight
EXTRN	?Setup@C_Dog_Flight@@QAEXJF@Z:PROC		; C_Dog_Flight::Setup
EXTRN	?SetIcon@C_Dog_Flight@@QAEXFFPAVIMAGE_RSC@@0@Z:PROC ; C_Dog_Flight::SetIcon
EXTRN	?SetCallsign@C_Dog_Flight@@QAEXFFPAD@Z:PROC	; C_Dog_Flight::SetCallsign
EXTRN	?SetAircraft@C_Dog_Flight@@QAEXFFPAD@Z:PROC	; C_Dog_Flight::SetAircraft
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	?GetClassID@@YAHEEEEEEEE@Z:PROC			; GetClassID
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z:PROC ; FalconSessionEntity::SetPlayerSquadron
EXTRN	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z:PROC ; FalconSessionEntity::SetPlayerFlight
EXTRN	?SetCountry@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetCountry
EXTRN	?SetPilotSlot@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetPilotSlot
EXTRN	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::SaveOptions
EXTRN	?ComplyWRules@PlayerOptionsClass@@QAEXPAURulesStruct@@@Z:PROC ; PlayerOptionsClass::ComplyWRules
EXTRN	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z:PROC ; UIComms::LookAtGame
EXTRN	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ:PROC ; UIComms::GetTargetGame
EXTRN	?ApplySettings@DogfightClass@@QAEXXZ:PROC	; DogfightClass::ApplySettings
EXTRN	?SendSettings@DogfightClass@@QAEXPAVFalconSessionEntity@@@Z:PROC ; DogfightClass::SendSettings
EXTRN	?RequestSettings@DogfightClass@@QAEXPAVFalconGameEntity@@@Z:PROC ; DogfightClass::RequestSettings
EXTRN	?ReadyToStart@DogfightClass@@QAEHXZ:PROC	; DogfightClass::ReadyToStart
EXTRN	?SetFilename@DogfightClass@@QAEXPAD@Z:PROC	; DogfightClass::SetFilename
EXTRN	?LoadSettings@DogfightClass@@QAEXXZ:PROC	; DogfightClass::LoadSettings
EXTRN	?SaveSettings@DogfightClass@@QAEXPAD@Z:PROC	; DogfightClass::SaveSettings
EXTRN	?EndCampaign@CampaignClass@@QAEXXZ:PROC		; CampaignClass::EndCampaign
EXTRN	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z:PROC	; RequestACSlot
EXTRN	?LeaveACSlot@@YAXPAVFlightClass@@E@Z:PROC	; LeaveACSlot
EXTRN	?RequestTeamChange@@YAXPAVFlightClass@@H@Z:PROC	; RequestTeamChange
EXTRN	?GetFirstEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z:PROC ; GetFirstEntity
EXTRN	?GetNextEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z:PROC ; GetNextEntity
EXTRN	?SetDead@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetDead
EXTRN	?SetAborted@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetAborted
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetCallsign@@YAXHHPAD@Z:PROC			; GetCallsign
EXTRN	?CompressCampaignUntilTakeoff@@YAHPAVFlightClass@@@Z:PROC ; CompressCampaignUntilTakeoff
EXTRN	?StartCampaignGame@@YAXHH@Z:PROC		; StartCampaignGame
EXTRN	?DisplayJoinStatusWindow@@YAXH@Z:PROC		; DisplayJoinStatusWindow
EXTRN	?SetupInfoWindow@@YAXP6AXXZ0@Z:PROC		; SetupInfoWindow
EXTRN	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC	; AreYouSure
EXTRN	?CheckExclude@@YAHPAD0QAPAD0@Z:PROC		; CheckExclude
EXTRN	?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z:PROC	; VerifyDelete
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?ChangeTimeCB@@YAXJFPAVC_Base@@@Z:PROC		; ChangeTimeCB
EXTRN	?GenericTimerCB@@YAXJFPAVC_Base@@@Z:PROC	; GenericTimerCB
EXTRN	?BlinkCommsButtonTimerCB@@YAXJFPAVC_Base@@@Z:PROC ; BlinkCommsButtonTimerCB
EXTRN	?ProcessEventList@@YAXPAVC_Window@@J@Z:PROC	; ProcessEventList
EXTRN	?DisplayDogfightResults@@YAXXZ:PROC		; DisplayDogfightResults
EXTRN	?SetSingle_Comms_Ctrls@@YAXXZ:PROC		; SetSingle_Comms_Ctrls
EXTRN	?StartTreeSearch@@YAPAVTREELIST@@VVU_ID@@PAV1@PAVC_TreeList@@@Z:PROC ; StartTreeSearch
EXTRN	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z:PROC ; GetFileListTree
EXTRN	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z:PROC ; SaveAFile
EXTRN	?SaveDogfightResults@@YAXPAD@Z:PROC		; SaveDogfightResults
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?FileNameSortCB@@YAHPAVTREELIST@@0@Z:PROC	; FileNameSortCB
EXTRN	?Uni_Float@@YAXPAD@Z:PROC			; Uni_Float
EXTRN	?DelDFSFileCB@@YAXJFPAVC_Base@@@Z:PROC		; DelDFSFileCB
EXTRN	?DelLSTFileCB@@YAXJFPAVC_Base@@@Z:PROC		; DelLSTFileCB
EXTRN	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z:PROC ; SetDeleteCallback
EXTRN	?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z:PROC ; OpenTacticalReferenceCB
EXTRN	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenLogBookCB
EXTRN	?OpenCommsCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenCommsCB
EXTRN	?OpenSetupCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenSetupCB
EXTRN	?ACMIButtonCB@@YAXJFPAVC_Base@@@Z:PROC		; ACMIButtonCB
EXTRN	?RebuildGameTree@@YAXXZ:PROC			; RebuildGameTree
EXTRN	?DogfightMenuSetup@@YAXXZ:PROC			; DogfightMenuSetup
EXTRN	?SendChatStringCB@@YAXJFPAVC_Base@@@Z:PROC	; SendChatStringCB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuPlayerPoolGroup@@3PAVVuGameEntity@@A:DWORD	; vuPlayerPoolGroup
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?FalconCampaignSaveDirectory@@3PADA:BYTE	; FalconCampaignSaveDirectory
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?SimDogfight@@3VDogfightClass@@A:BYTE		; SimDogfight
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?AllRealList@@3PAVVuLinkedList@@A:DWORD		; AllRealList
EXTRN	?AllCampList@@3PAVVuLinkedList@@A:DWORD		; AllCampList
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gUI_ScenarioName@@3PADA:BYTE			; gUI_ScenarioName
EXTRN	?gCurrentFlightID@@3VVU_ID@@A:QWORD		; gCurrentFlightID
EXTRN	?gCurrentAircraftNum@@3FA:WORD			; gCurrentAircraftNum
EXTRN	?MainLastGroup@@3HA:DWORD			; MainLastGroup
EXTRN	?DFLoaded@@3HA:DWORD				; DFLoaded
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?DogfightGames@@3PAVC_TreeList@@A:DWORD		; DogfightGames
EXTRN	?CurrRules@@3VRulesClass@@A:BYTE		; CurrRules
EXTRN	?g_bEmptyFilenameFix@@3_NA:BYTE			; g_bEmptyFilenameFix
EXTRN	?DogfightTeamNames@@3PAY0BE@DA:BYTE		; DogfightTeamNames
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@45bde1b0
CONST	SEGMENT
__real@45bde1b0 DD 045bde1b0r			; 6076.21
CONST	ENDS
;	COMDAT __real@454cffae
CONST	SEGMENT
__real@454cffae DD 0454cffaer			; 3279.98
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@392c987a
CONST	SEGMENT
__real@392c987a DD 0392c987ar			; 0.0001646
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OLPMMGMM@?2new?5game?4dfs?$AA@
CONST	SEGMENT
??_C@_0O@OLPMMGMM@?2new?5game?4dfs?$AA@ DB '\new game.dfs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PHBEAGFF@?$CK?4LST?$AA@
CONST	SEGMENT
??_C@_05PHBEAGFF@?$CK?4LST?$AA@ DB '*.LST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GAEFPKPA@?$CFs?4lst?$AA@
CONST	SEGMENT
??_C@_06GAEFPKPA@?$CFs?4lst?$AA@ DB '%s.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGMDHGLL@?4LST?$AA@
CONST	SEGMENT
??_C@_04CGMDHGLL@?4LST?$AA@ DB '.LST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@ DB '( is commiting'
	DB	' now )', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKHDAPJK@?2New?5Game?4dfs?$AA@
CONST	SEGMENT
??_C@_0O@NKHDAPJK@?2New?5Game?4dfs?$AA@ DB '\New Game.dfs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OBJDIODK@?$CFs?2?$CFs?4DFS?$AA@
CONST	SEGMENT
??_C@_09OBJDIODK@?$CFs?2?$CFs?4DFS?$AA@ DB '%s\%s.DFS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCLHNNBA@dfs?$AA@
CONST	SEGMENT
??_C@_03CCLHNNBA@dfs?$AA@ DB 'dfs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DDPAHDML@?$CFs?2?$CK?4dfs?$AA@
CONST	SEGMENT
??_C@_08DDPAHDML@?$CFs?2?$CK?4dfs?$AA@ DB '%s\*.dfs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OMGIEDEG@?$CFs?2?$CFs?4dfs?$AA@
CONST	SEGMENT
??_C@_09OMGIEDEG@?$CFs?2?$CFs?4dfs?$AA@ DB '%s\%s.dfs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@
CONST	SEGMENT
??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@ DB '%s\*.DFS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBKOMOFA@df_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0L@FBKOMOFA@df_scf?4lst?$AA@ DB 'df_scf.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDDGOFDA@art?2dgft?2play?2uiddf?4scf?$AA@
CONST	SEGMENT
??_C@_0BI@NDDGOFDA@art?2dgft?2play?2uiddf?4scf?$AA@ DB 'art\dgft\play\uid'
	DB	'df.scf', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HNLBAOJL@df_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0L@HNLBAOJL@df_snd?4lst?$AA@ DB 'df_snd.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OAIHMMOM@df_art?4lst?$AA@
CONST	SEGMENT
??_C@_0L@OAIHMMOM@df_art?4lst?$AA@ DB 'df_art.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KNMPGINM@df_res?4lst?$AA@
CONST	SEGMENT
??_C@_0L@KNMPGINM@df_res?4lst?$AA@ DB 'df_res.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFBLKFGK@Unlimited?$AA@
CONST	SEGMENT
??_C@_09MFBLKFGK@Unlimited?$AA@ DB 'Unlimited', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@ DB '%1ld %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNIKKFO@Super?5Fly?$AA@
CONST	SEGMENT
??_C@_09HNIKKFO@Super?5Fly?$AA@ DB 'Super Fly', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JOOPIDMD@?$CI?$CF4?42f?$CJ?$AA@
CONST	SEGMENT
??_C@_07JOOPIDMD@?$CI?$CF4?42f?$CJ?$AA@ DB '(%4.2f)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ECBFCKHO@Create?5new?5Dogfight?5game?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BM@ECBFCKHO@Create?5new?5Dogfight?5game?4?5?6?$AA@ DB 'Create new '
	DB	'Dogfight game. ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EKNFIOIH@Joining?5Dogfight?5game?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BJ@EKNFIOIH@Joining?5Dogfight?5game?4?5?6?$AA@ DB 'Joining Dogfigh'
	DB	't game. ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IFJFODFC@Joining?5Dogfight?5game?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@IFJFODFC@Joining?5Dogfight?5game?4?6?$AA@ DB 'Joining Dogfight '
	DB	'game.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMOCDNDG@Instant?$AA@
CONST	SEGMENT
??_C@_07HMOCDNDG@Instant?$AA@ DB 'Instant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KDLAMACB@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5ld?5?$CF4ld?5?$CF8ld?$AA@
CONST	SEGMENT
??_C@_0CA@KDLAMACB@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5ld?5?$CF4ld?5?$CF8ld?$AA@ DB '%'
	DB	'7d %7d %8d %11d %5ld %4ld %8ld', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NCAHNLBG@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5d?5?$CF4d?5?$CF8d?6?$AA@
CONST	SEGMENT
??_C@_0BO@NCAHNLBG@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5d?5?$CF4d?5?$CF8d?6?$AA@ DB '%'
	DB	'7d %7d %8d %11d %5d %4d %8d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MMLHLGJN@?1?1?5Type?5SubType?5Specific?5UnitSub@
CONST	SEGMENT
??_C@_0DK@MMLHLGJN@?1?1?5Type?5SubType?5Specific?5UnitSub@ DB '// Type Su'
	DB	'bType Specific UnitSubType    ID text UnitIcon', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09DBKLODDO@te?9planes?$AA@
CONST	SEGMENT
??_C@_09DBKLODDO@te?9planes?$AA@ DB 'te-planes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IKEJDFGO@teplanes?$AA@
CONST	SEGMENT
??_C@_08IKEJDFGO@teplanes?$AA@ DB 'teplanes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCKPACKD@lst?$AA@
CONST	SEGMENT
??_C@_03LCKPACKD@lst?$AA@ DB 'lst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?LoadDogFightWindows@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadDogFightWindows@@YAXXZ$0
__unwindtable$?BuildDFPlayerList@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildDFPlayerList@@YAXXZ$0
__unwindtable$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z$0
__unwindtable$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z$0
__unwindtable$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z$0
__unwindtable$?FindSquadronType@@YAHJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindSquadronType@@YAHJJ@Z$0
__ehfuncinfo$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadDogFightWindows@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadDogFightWindows@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildDFPlayerList@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildDFPlayerList@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FindSquadronType@@YAHJJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindSquadronType@@YAHJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?EndDogfightCB@@YAXJFPAVC_Base@@@Z PROC			; EndDogfightCB

; 3000 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3001 : 	F4CSECTIONHANDLE *Leave;
; 3002 : 
; 3003 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@EndDogfigh

; 3004 : 		return;

	jmp	SHORT $LN2@EndDogfigh
$LN1@EndDogfigh:

; 3005 : 
; 3006 : 	LeaveDogfight();

	call	?LeaveDogfight@@YAXXZ			; LeaveDogfight

; 3007 : 
; 3008 : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 3009 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 3010 : 	gMainHandler->EnableWindowGroup(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 3011 : 	gMainHandler->EnableWindowGroup(MainLastGroup);

	mov	eax, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 3012 : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@EndDogfigh:

; 3013 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndDogfightCB@@YAXJFPAVC_Base@@@Z ENDP			; EndDogfightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?DeleteVerifyFileCB@@YAXJFPAVC_Base@@@Z PROC		; DeleteVerifyFileCB

; 2991 : {

	push	ebp
	mov	ebp, esp

; 2992 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@DeleteVeri

; 2993 : 		return;

	jmp	SHORT $LN3@DeleteVeri
$LN2@DeleteVeri:

; 2994 : 
; 2995 : 	if(!CheckExclude(gCurDogfightFile,FalconCampUserSaveDirectory,DFExcludeList,"dfs"))

	push	OFFSET ??_C@_03CCLHNNBA@dfs?$AA@
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN3@DeleteVeri

; 2996 : 		VerifyDelete(0,DeleteCurrentFileCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?DeleteCurrentFileCB@@YAXJFPAVC_Base@@@Z ; DeleteCurrentFileCB
	push	0
	call	?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z ; VerifyDelete
	add	esp, 12					; 0000000cH
$LN3@DeleteVeri:

; 2997 : }

	pop	ebp
	ret	0
?DeleteVerifyFileCB@@YAXJFPAVC_Base@@@Z ENDP		; DeleteVerifyFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -272						; size = 4
_tree$ = -268						; size = 4
_path$1 = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DeleteCurrentFileCB@@YAXJFPAVC_Base@@@Z PROC		; DeleteCurrentFileCB

; 2952 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2953 : 	C_TreeList *tree;
; 2954 : 	C_Window *win;
; 2955 : 
; 2956 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@DeleteCurr

; 2957 : 		return;

	jmp	$LN6@DeleteCurr
$LN5@DeleteCurr:

; 2958 : 
; 2959 : 	win=gMainHandler->FindWindow(DF_LOAD_WIN);

	push	20050					; 00004e52H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2960 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN4@DeleteCurr

; 2961 : 		return;

	jmp	$LN6@DeleteCurr
$LN4@DeleteCurr:

; 2962 : 
; 2963 : 	gMainHandler->HideWindow(control->Parent_); // Close Verify Window

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2964 : 
; 2965 : 	if(!CheckExclude(gCurDogfightFile,FalconCampUserSaveDirectory,DFExcludeList,"dfs"))

	push	OFFSET ??_C@_03CCLHNNBA@dfs?$AA@
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN6@DeleteCurr

; 2966 : 	{
; 2967 : 		DeleteFile(gCurDogfightFile);

	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	DWORD PTR __imp__DeleteFileA@4

; 2968 : 		_tcscpy(gCurDogfightFile,FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	_strcpy
	add	esp, 8

; 2969 : 		_tcscat(gCurDogfightFile,"\\new game.dfs");

	push	OFFSET ??_C@_0O@OLPMMGMM@?2new?5game?4dfs?$AA@
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	_strcat
	add	esp, 8

; 2970 : 
; 2971 : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 2972 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN6@DeleteCurr

; 2973 : 		{
; 2974 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2975 : 			tree->SetUserNumber(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2976 : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 2977 : 			tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 2978 : 			tree->SetCallback(SelectDFSettingsFileCB);

	push	OFFSET ?SelectDFSettingsFileCB@@YAXJFPAVC_Base@@@Z ; SelectDFSettingsFileCB
	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2979 : 			char path[_MAX_PATH];
; 2980 : 			sprintf (path, "%s\\*.DFS", FalconCampaignSaveDirectory);

	push	OFFSET ?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	push	OFFSET ??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@
	lea	ecx, DWORD PTR _path$1[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2981 : 
; 2982 : 			GetFileListTree(tree,path, DFExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	lea	edx, DWORD PTR _path$1[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 2983 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2984 : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN6@DeleteCurr

; 2985 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN6@DeleteCurr:

; 2986 : 		}
; 2987 : 	}
; 2988 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteCurrentFileCB@@YAXJFPAVC_Base@@@Z ENDP		; DeleteCurrentFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DogfightChangeTimeCB@@YAXJFPAVC_Base@@@Z PROC		; DogfightChangeTimeCB

; 2934 : {

	push	ebp
	mov	ebp, esp

; 2935 : 	if(hittype != C_TYPE_LMOUSEUP && hittype != C_TYPE_REPEAT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@DogfightCh
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN2@DogfightCh

; 2936 : 		return;

	jmp	SHORT $LN3@DogfightCh
$LN2@DogfightCh:

; 2937 : 
; 2938 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@DogfightCh
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN1@DogfightCh

; 2939 : 	{
; 2940 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2941 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2942 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2943 : 		return;

	jmp	SHORT $LN3@DogfightCh
$LN1@DogfightCh:

; 2944 : 	}
; 2945 : 
; 2946 : 	ChangeTimeCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?ChangeTimeCB@@YAXJFPAVC_Base@@@Z	; ChangeTimeCB
	add	esp, 12					; 0000000cH

; 2947 : 
; 2948 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow
$LN3@DogfightCh:

; 2949 : }

	pop	ebp
	ret	0
?DogfightChangeTimeCB@@YAXJFPAVC_Base@@@Z ENDP		; DogfightChangeTimeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SeeDFGamesCB@@YAXJFPAVC_Base@@@Z PROC			; SeeDFGamesCB

; 2922 : {

	push	ebp
	mov	ebp, esp

; 2923 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SeeDFGames

; 2924 : 		return;

	jmp	SHORT $LN3@SeeDFGames
$LN2@SeeDFGames:

; 2925 : 
; 2926 : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN1@SeeDFGames

; 2927 : 		gMainHandler->EnableWindowGroup(6001);

	push	6001					; 00001771H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN1@SeeDFGames:

; 2928 : 
; 2929 : 	control->Parent_->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 2930 : 	control->Parent_->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN3@SeeDFGames:

; 2931 : }

	pop	ebp
	ret	0
?SeeDFGamesCB@@YAXJFPAVC_Base@@@Z ENDP			; SeeDFGamesCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_tree$ = -268						; size = 4
_path$1 = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SeeDFFilesCB@@YAXJFPAVC_Base@@@Z PROC			; SeeDFFilesCB

; 2895 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2896 : 	C_TreeList *tree;
; 2897 : 
; 2898 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SeeDFFiles

; 2899 : 		return;

	jmp	$LN4@SeeDFFiles
$LN3@SeeDFFiles:

; 2900 : 
; 2901 : 	tree=(C_TreeList*)control->Parent_->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 2902 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN2@SeeDFFiles

; 2903 : 	{
; 2904 : 		tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2905 : 		tree->SetUserNumber(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2906 : 		tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 2907 : 		tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 2908 : 		tree->SetCallback(SelectDFSettingsFileCB);

	push	OFFSET ?SelectDFSettingsFileCB@@YAXJFPAVC_Base@@@Z ; SelectDFSettingsFileCB
	mov	edx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 2909 : 		char path[_MAX_PATH];
; 2910 : 		sprintf (path, "%s\\*.DFS", FalconCampaignSaveDirectory);

	push	OFFSET ?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	push	OFFSET ??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@
	lea	eax, DWORD PTR _path$1[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2911 : 		GetFileListTree(tree,path,DFExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	lea	ecx, DWORD PTR _path$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 2912 : 		tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2913 : 		if(tree->Parent_)

	mov	eax, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN2@SeeDFFiles

; 2914 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@SeeDFFiles:

; 2915 : 	}
; 2916 : 
; 2917 : 	control->Parent_->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 2918 : 	control->Parent_->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN4@SeeDFFiles:

; 2919 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SeeDFFilesCB@@YAXJFPAVC_Base@@@Z ENDP			; SeeDFFilesCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CleanupDebriefCB@@YAXJFPAVC_Base@@@Z PROC		; CleanupDebriefCB

; 2886 : {

	push	ebp
	mov	ebp, esp

; 2887 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CleanupDeb

; 2888 : 		return;

	jmp	SHORT $LN2@CleanupDeb
$LN1@CleanupDeb:

; 2889 : 
; 2890 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@CleanupDeb:

; 2891 : //	ClearPilotList();
; 2892 : }

	pop	ebp
	ret	0
?CleanupDebriefCB@@YAXJFPAVC_Base@@@Z ENDP		; CleanupDebriefCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?SaveResultsCB@@YAXJFPAVC_Base@@@Z PROC			; SaveResultsCB

; 2877 : {

	push	ebp
	mov	ebp, esp

; 2878 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SaveResult

; 2879 : 		return;

	jmp	SHORT $LN2@SaveResult
$LN1@SaveResult:

; 2880 : 
; 2881 : 	SetDeleteCallback(DelLSTFileCB);

	push	OFFSET ?DelLSTFileCB@@YAXJFPAVC_Base@@@Z ; DelLSTFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 2882 : 	SaveAFile(TXT_SAVE_RESULTS,"*.LST",NULL,VerifySaveResultsFileCB,CloseWindowCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?VerifySaveResultsFileCB@@YAXJFPAVC_Base@@@Z ; VerifySaveResultsFileCB
	push	0
	push	OFFSET ??_C@_05PHBEAGFF@?$CK?4LST?$AA@
	push	238					; 000000eeH
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H
$LN2@SaveResult:

; 2883 : }

	pop	ebp
	ret	0
?SaveResultsCB@@YAXJFPAVC_Base@@@Z ENDP			; SaveResultsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_fp$ = -272						; size = 4
_ebox$ = -268						; size = 4
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VerifySaveResultsFileCB@@YAXJFPAVC_Base@@@Z PROC	; VerifySaveResultsFileCB

; 2843 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2844 : 	C_EditBox *ebox;
; 2845 : 	_TCHAR fname[MAX_PATH];
; 2846 : 	FILE *fp;
; 2847 : 
; 2848 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@VerifySave

; 2849 : 		return;

	jmp	$LN7@VerifySave
$LN6@VerifySave:

; 2850 : 
; 2851 : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2852 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN7@VerifySave

; 2853 : 	{
; 2854 : 		//dpc EmptyFilenameSaveFix, modified by MN - added a warning to enter a filename
; 2855 : 		if (g_bEmptyFilenameFix)

	movzx	edx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	edx, edx
	je	SHORT $LN4@VerifySave

; 2856 : 		{
; 2857 : 			if (_tcslen(ebox->GetText()) == 0)

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@VerifySave

; 2858 : 			{
; 2859 : 				AreYouSure(TXT_WARNING, TXT_ENTER_FILENAME,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	467					; 000001d3H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2860 : 				return;

	jmp	$LN7@VerifySave
$LN4@VerifySave:

; 2861 : 			}
; 2862 : 		}
; 2863 : 		//end EmptyFilenameSaveFix
; 2864 : 		_stprintf(fname,"%s.lst",ebox->GetText ());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ??_C@_06GAEFPKPA@?$CFs?4lst?$AA@
	lea	eax, DWORD PTR _fname$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2865 : 		fp=fopen(fname,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 2866 : 		if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN2@VerifySave

; 2867 : 		{
; 2868 : 			fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 2869 : 			AreYouSure(TXT_WARNING,TXT_FILE_EXISTS,SaveResultsFileCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?SaveResultsFileCB@@YAXJFPAVC_Base@@@Z ; SaveResultsFileCB
	push	241					; 000000f1H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2870 : 		}
; 2871 : 		else

	jmp	SHORT $LN7@VerifySave
$LN2@VerifySave:

; 2872 : 			SaveResultsFileCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?SaveResultsFileCB@@YAXJFPAVC_Base@@@Z	; SaveResultsFileCB
	add	esp, 12					; 0000000cH
$LN7@VerifySave:

; 2873 : 	}
; 2874 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?VerifySaveResultsFileCB@@YAXJFPAVC_Base@@@Z ENDP	; VerifySaveResultsFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ebox$ = -272						; size = 4
_win$ = -268						; size = 4
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SaveResultsFileCB@@YAXJFPAVC_Base@@@Z PROC		; SaveResultsFileCB

; 2814 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2815 : 	C_EditBox *ebox;
; 2816 : 	_TCHAR fname[MAX_PATH];
; 2817 : 	C_Window *win;
; 2818 : 
; 2819 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@SaveResult

; 2820 : 		return;

	jmp	$LN5@SaveResult
$LN4@SaveResult:

; 2821 : 
; 2822 : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2823 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN3@SaveResult

; 2824 : 		return;

	jmp	$LN5@SaveResult
$LN3@SaveResult:

; 2825 : 
; 2826 : 	gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2827 : 	gMainHandler->HideWindow(control->Parent_);

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2828 : 
; 2829 : 	ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2830 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN5@SaveResult

; 2831 : 	{
; 2832 : 		_tcscpy(fname,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 2833 : 		if(fname[0] == 0)

	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _fname$[ebp+edx]
	test	eax, eax
	jne	SHORT $LN1@SaveResult

; 2834 : 			return;

	jmp	SHORT $LN5@SaveResult
$LN1@SaveResult:

; 2835 : 
; 2836 : 		_tcscat(fname,".LST");

	push	OFFSET ??_C@_04CGMDHGLL@?4LST?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 2837 : 
; 2838 : 		SaveDogfightResults(fname);

	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	call	?SaveDogfightResults@@YAXPAD@Z		; SaveDogfightResults
	add	esp, 4
$LN5@SaveResult:

; 2839 : 	}
; 2840 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveResultsFileCB@@YAXJFPAVC_Base@@@Z ENDP		; SaveResultsFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_flight$ = -228						; size = 4
_control$ = -224					; size = 184
_buffer$ = -40						; size = 21
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?DogfightFlyCB@@YAXJFPAVC_Base@@@Z PROC			; DogfightFlyCB

; 2775 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2776 : 	Flight flight;
; 2777 : 
; 2778 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@DogfightFl

; 2779 : 		return;

	jmp	$LN5@DogfightFl
$LN4@DogfightFl:

; 2780 : 
; 2781 : 	flight = FalconLocalSession->GetPlayerFlight();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _flight$[ebp], eax

; 2782 : 	if (!flight)

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN3@DogfightFl

; 2783 : 		return;

	jmp	$LN5@DogfightFl
$LN3@DogfightFl:

; 2784 : 
; 2785 : //	TheCampaign.MissionEvaluator->PreMissionEval(flight,FalconLocalSession->GetPilotSlot());
; 2786 : 
; 2787 : 	// Trigger the campaign to compress time and takeoff.
; 2788 : 	flight->SetAborted(0);

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetAborted@UnitClass@@QAEXH@Z		; UnitClass::SetAborted

; 2789 : 	flight->SetDead(0);

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetDead@UnitClass@@QAEXH@Z		; UnitClass::SetDead

; 2790 : 	if (!CompressCampaignUntilTakeoff(flight))

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?CompressCampaignUntilTakeoff@@YAHPAVFlightClass@@@Z ; CompressCampaignUntilTakeoff
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@DogfightFl

; 2791 : 		return;

	jmp	$LN5@DogfightFl
$LN2@DogfightFl:

; 2792 : 
; 2793 : // 2002-03-09 MN Send a "[Commiting now]" message to the chat windows
; 2794 : 	enum { PSEUDO_CONTROL_DF				= 565419998 };
; 2795 : 
; 2796 : 	C_EditBox control;

	lea	ecx, DWORD PTR _control$[ebp]
	call	??0C_EditBox@@QAE@XZ			; C_EditBox::C_EditBox
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2797 : 	control.Setup(PSEUDO_CONTROL_DF,39);

	push	39					; 00000027H
	push	565419998				; 21b39fdeH
	lea	ecx, DWORD PTR _control$[ebp]
	call	?Setup@C_EditBox@@QAEXJF@Z		; C_EditBox::Setup

; 2798 : 	_TCHAR buffer[21];
; 2799 : 	_stprintf(buffer,"( is commiting now )");

	push	OFFSET ??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 2800 : 	control.SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _control$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 2801 : 
; 2802 : 	SendChatStringCB(0, DIK_RETURN, &control);

	lea	ecx, DWORD PTR _control$[ebp]
	push	ecx
	push	28					; 0000001cH
	push	0
	call	?SendChatStringCB@@YAXJFPAVC_Base@@@Z	; SendChatStringCB
	add	esp, 12					; 0000000cH

; 2803 : 	control.Cleanup();

	lea	ecx, DWORD PTR _control$[ebp]
	call	?Cleanup@C_EditBox@@UAEXXZ		; C_EditBox::Cleanup

; 2804 : 
; 2805 : 	// Force Compliance... since they already agreed before
; 2806 : 	if ((gCommsMgr) && (gCommsMgr->Online ()))

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN1@DogfightFl
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@DogfightFl

; 2807 : 	{
; 2808 : 		PlayerOptions.ComplyWRules(CurrRules.GetRules());

	mov	ecx, OFFSET ?CurrRules@@3VRulesClass@@A	; CurrRules
	call	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ; RulesClass::GetRules
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ComplyWRules@PlayerOptionsClass@@QAEXPAURulesStruct@@@Z ; PlayerOptionsClass::ComplyWRules

; 2809 : 		PlayerOptions.SaveOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::SaveOptions
$LN1@DogfightFl:

; 2810 : 	}
; 2811 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _control$[ebp]
	call	??1C_EditBox@@UAE@XZ			; C_EditBox::~C_EditBox
$LN5@DogfightFl:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _control$[ebp]
	jmp	??1C_EditBox@@UAE@XZ			; C_EditBox::~C_EditBox
__ehhandler$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DogfightFlyCB@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DogfightFlyCB@@YAXJFPAVC_Base@@@Z ENDP			; DogfightFlyCB
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_mapy$ = -8						; size = 4
_ratio$ = -4						; size = 4
_simy$ = 8						; size = 4
_crsr$ = 12						; size = 4
?SimYtoMapY@@YAJMPAVC_Cursor@@@Z PROC			; SimYtoMapY

; 2734 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2735 : 	float	ratio = 0.5F;

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2736 : 	int		mapy;
; 2737 : 
; 2738 : 	if (TheCampaign.TheaterSizeY)

	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	test	eax, eax
	je	SHORT $LN1@SimYtoMapY

; 2739 : 		ratio = 1.0F - (simy / (TheCampaign.TheaterSizeY * FEET_PER_KM));

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	xmm1, DWORD PTR _simy$[ebp]
	divss	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	movss	DWORD PTR _ratio$[ebp], xmm0
$LN1@SimYtoMapY:

; 2740 : 	mapy = FloatToInt32((crsr->MaxY_-crsr->MinY_) * ratio);

	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+120]
	mov	ecx, DWORD PTR _crsr$[ebp]
	movsx	edx, WORD PTR [ecx+116]
	sub	eax, edx
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _ratio$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _mapy$[ebp], eax

; 2741 : 	return mapy;

	mov	eax, DWORD PTR _mapy$[ebp]

; 2742 : //	simy = (simy * 1000.0F) / FEET_PER_KM;
; 2743 : //	return -1 * FloatToInt32(((simy * ((crsr->MaxY_-crsr->MinY_)*256.0f)) /  4096.0F) + crsr->MinY_ + (crsr->GetH()/2) - (crsr->MaxY_-crsr->MinY_));
; 2744 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SimYtoMapY@@YAJMPAVC_Cursor@@@Z ENDP			; SimYtoMapY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_mapx$ = -8						; size = 4
_ratio$ = -4						; size = 4
_simx$ = 8						; size = 4
_crsr$ = 12						; size = 4
?SimXtoMapX@@YAJMPAVC_Cursor@@@Z PROC			; SimXtoMapX

; 2721 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2722 : 	float	ratio = 0.5F;

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2723 : 	int		mapx;
; 2724 : 
; 2725 : 	if (TheCampaign.TheaterSizeX)

	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	test	eax, eax
	je	SHORT $LN1@SimXtoMapX

; 2726 : 		ratio = simx / (TheCampaign.TheaterSizeX * FEET_PER_KM);

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	xmm1, DWORD PTR _simx$[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _ratio$[ebp], xmm1
$LN1@SimXtoMapX:

; 2727 : 	mapx = FloatToInt32((crsr->MaxX_-crsr->MinX_) * ratio);

	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+118]
	mov	ecx, DWORD PTR _crsr$[ebp]
	movsx	edx, WORD PTR [ecx+114]
	sub	eax, edx
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _ratio$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _mapx$[ebp], eax

; 2728 : 	return mapx;

	mov	eax, DWORD PTR _mapx$[ebp]

; 2729 : //	simx = (simx * 1000.0F) / FEET_PER_KM;
; 2730 : //	return FloatToInt32(((simx * ((crsr->MaxX_-crsr->MinX_)*256.0f)) /  3072.0F) - (crsr->GetW()/2) + crsr->MinX_);
; 2731 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SimXtoMapX@@YAJMPAVC_Cursor@@@Z ENDP			; SimXtoMapX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ypos$ = -8						; size = 4
_ratio$ = -4						; size = 4
_crsr$ = 8						; size = 4
?MapYtoSimY@@YAMPAVC_Cursor@@@Z PROC			; MapYtoSimY

; 2708 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 2709 : 	float ypos,ratio;
; 2710 : 
; 2711 : 	ratio = (float)(crsr->MaxY_ - crsr->GetY()) / (float)(crsr->MaxY_-crsr->MinY_);

	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	esi, WORD PTR [eax+120]
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	sub	esi, eax
	cvtsi2ss xmm0, esi
	mov	ecx, DWORD PTR _crsr$[ebp]
	movsx	edx, WORD PTR [ecx+120]
	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+116]
	sub	edx, ecx
	cvtsi2ss xmm1, edx
	divss	xmm0, xmm1
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2712 : 	ypos = TheCampaign.TheaterSizeY * FEET_PER_KM * ratio;

	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR __real@454cffae
	mulss	xmm0, DWORD PTR _ratio$[ebp]
	movss	DWORD PTR _ypos$[ebp], xmm0

; 2713 : 	return ypos;

	fld	DWORD PTR _ypos$[ebp]

; 2714 : 	// KCK: This is cut and paste from peter's code. I don't pretend to understand how it works.
; 2715 : //	ypos = (((crsr->MaxY_-crsr->MinY_) - (crsr->GetY()+(crsr->GetH()/2)-crsr->MinY_)) * 4096.0f) / ((crsr->MaxY_-crsr->MinY_)*256.0f);
; 2716 : //	ypos *= FEET_PER_KM / 1000.0F;
; 2717 : //	return ypos;
; 2718 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MapYtoSimY@@YAMPAVC_Cursor@@@Z ENDP			; MapYtoSimY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_xpos$ = -8						; size = 4
_ratio$ = -4						; size = 4
_crsr$ = 8						; size = 4
?MapXtoSimX@@YAMPAVC_Cursor@@@Z PROC			; MapXtoSimX

; 2695 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2696 : 	float xpos,ratio;
; 2697 : 
; 2698 : 	ratio = (float)crsr->GetX() / (float)(crsr->MaxX_-crsr->MinX_);

	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+118]
	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+114]
	sub	ecx, eax
	cvtsi2ss xmm1, ecx
	divss	xmm0, xmm1
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2699 : 	xpos = TheCampaign.TheaterSizeX * FEET_PER_KM * ratio;

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	mulss	xmm0, DWORD PTR _ratio$[ebp]
	movss	DWORD PTR _xpos$[ebp], xmm0

; 2700 : 	return xpos;

	fld	DWORD PTR _xpos$[ebp]

; 2701 : 	// KCK: This is cut and paste from peter's code. I don't pretend to understand how it works.
; 2702 : //	xpos = ((crsr->GetX()+(crsr->GetW()/2)-crsr->MinX_) * 3072.0f) / ((crsr->MaxX_-crsr->MinX_)*256.0f);
; 2703 : //	xpos *= FEET_PER_KM / 1000.0F;
; 2704 : //	return xpos;
; 2705 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapXtoSimX@@YAMPAVC_Cursor@@@Z ENDP			; MapXtoSimX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?MoveGameLocationCB@@YAXJFPAVC_Base@@@Z PROC		; MoveGameLocationCB

; 2680 : {

	push	ebp
	mov	ebp, esp

; 2681 : 	if(hittype != C_TYPE_LDROP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 73					; 00000049H
	je	SHORT $LN2@MoveGameLo

; 2682 : 		return;

	jmp	SHORT $LN3@MoveGameLo
$LN2@MoveGameLo:

; 2683 : 
; 2684 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@MoveGameLo
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN1@MoveGameLo

; 2685 : 	{
; 2686 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2687 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2688 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2689 : 		return;

	jmp	SHORT $LN3@MoveGameLo
$LN1@MoveGameLo:

; 2690 : 	}
; 2691 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow
$LN3@MoveGameLo:

; 2692 : }

	pop	ebp
	ret	0
?MoveGameLocationCB@@YAXJFPAVC_Base@@@Z ENDP		; MoveGameLocationCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ToggleECMCB@@YAXJFPAVC_Base@@@Z PROC			; ToggleECMCB

; 2665 : {

	push	ebp
	mov	ebp, esp

; 2666 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@ToggleECMC

; 2667 : 		return;

	jmp	SHORT $LN3@ToggleECMC
$LN2@ToggleECMC:

; 2668 : 
; 2669 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@ToggleECMC
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN1@ToggleECMC

; 2670 : 	{
; 2671 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2672 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2673 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2674 : 		return;

	jmp	SHORT $LN3@ToggleECMC
$LN1@ToggleECMC:

; 2675 : 	}
; 2676 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow
$LN3@ToggleECMC:

; 2677 : }

	pop	ebp
	ret	0
?ToggleECMCB@@YAXJFPAVC_Base@@@Z ENDP			; ToggleECMCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ToggleGunCB@@YAXJFPAVC_Base@@@Z PROC			; ToggleGunCB

; 2650 : {

	push	ebp
	mov	ebp, esp

; 2651 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@ToggleGunC

; 2652 : 		return;

	jmp	SHORT $LN3@ToggleGunC
$LN2@ToggleGunC:

; 2653 : 
; 2654 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@ToggleGunC
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN1@ToggleGunC

; 2655 : 	{
; 2656 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2657 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2658 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2659 : 		return;

	jmp	SHORT $LN3@ToggleGunC
$LN1@ToggleGunC:

; 2660 : 	}
; 2661 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow
$LN3@ToggleGunC:

; 2662 : }

	pop	ebp
	ret	0
?ToggleGunCB@@YAXJFPAVC_Base@@@Z ENDP			; ToggleGunCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?JoinRadioCB@@YAXJFPAVC_Base@@@Z PROC			; JoinRadioCB

; 2630 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2631 : 	C_Window *win;
; 2632 : 
; 2633 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@JoinRadioC

; 2634 : 		return;

	jmp	SHORT $LN5@JoinRadioC
$LN4@JoinRadioC:

; 2635 : 
; 2636 : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN3@JoinRadioC

; 2637 : 	{
; 2638 : 		win=gMainHandler->FindWindow(PB_WIN);

	push	60004					; 0000ea64H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2639 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@JoinRadioC

; 2640 : 			gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN3@JoinRadioC:

; 2641 : 	}
; 2642 : 
; 2643 : 	if(DogfightGames)

	cmp	DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A, 0 ; DogfightGames
	je	SHORT $LN1@JoinRadioC

; 2644 : 		DogfightGames->RecalcSize();

	mov	ecx, DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A ; DogfightGames
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize
$LN1@JoinRadioC:

; 2645 : 	control->Parent_->RefreshClient(0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 2646 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton
$LN5@JoinRadioC:

; 2647 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?JoinRadioCB@@YAXJFPAVC_Base@@@Z ENDP			; JoinRadioCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?LoadRadioCB@@YAXJFPAVC_Base@@@Z PROC			; LoadRadioCB

; 2620 : {

	push	ebp
	mov	ebp, esp

; 2621 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@LoadRadioC

; 2622 : 		return;

	jmp	SHORT $LN2@LoadRadioC
$LN1@LoadRadioC:

; 2623 : 
; 2624 : 	// Probably don't want to load settings until after we load the campaign
; 2625 : //	LoadDFSettingsCB(ID,hittype,control);
; 2626 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton
$LN2@LoadRadioC:

; 2627 : }

	pop	ebp
	ret	0
?LoadRadioCB@@YAXJFPAVC_Base@@@Z ENDP			; LoadRadioCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_game$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?SelectDFGameFileCB@@YAXJFPAVC_Base@@@Z PROC		; SelectDFGameFileCB

; 2606 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2607 : 	FalconGameEntity	*game = NULL;		// KCK: Need to get game associated with button

	mov	DWORD PTR _game$[ebp], 0

; 2608 : 
; 2609 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@SelectDFGa

; 2610 : 		return;

	jmp	SHORT $LN3@SelectDFGa
$LN2@SelectDFGa:

; 2611 : 
; 2612 : 	if (!game)

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN1@SelectDFGa

; 2613 : 		return;

	jmp	SHORT $LN3@SelectDFGa
$LN1@SelectDFGa:

; 2614 : 
; 2615 : 	// Request Settings here
; 2616 : 	SimDogfight.RequestSettings(game);

	mov	ecx, DWORD PTR _game$[ebp]
	push	ecx
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?RequestSettings@DogfightClass@@QAEXPAVFalconGameEntity@@@Z ; DogfightClass::RequestSettings
$LN3@SelectDFGa:

; 2617 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDFGameFileCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectDFGameFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?SaveDFSettingsCB@@YAXJFPAVC_Base@@@Z PROC		; SaveDFSettingsCB

; 2546 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2547 : 	_TCHAR fname[MAX_PATH];
; 2548 : 
; 2549 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SaveDFSett

; 2550 : 		return;

	jmp	SHORT $LN2@SaveDFSett
$LN1@SaveDFSett:

; 2551 : 
; 2552 : 	SetDeleteCallback(DelDFSFileCB);

	push	OFFSET ?DelDFSFileCB@@YAXJFPAVC_Base@@@Z ; DelDFSFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 2553 : 	_stprintf(fname,"%s\\*.dfs",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_08DDPAHDML@?$CFs?2?$CK?4dfs?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2554 : 	SaveAFile(TXT_SAVE_DOGFIGHT,fname,DFExcludeList,VerifySaveItCB,CloseWindowCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?VerifySaveItCB@@YAXJFPAVC_Base@@@Z ; VerifySaveItCB
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	push	237					; 000000edH
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H
$LN2@SaveDFSett:

; 2555 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveDFSettingsCB@@YAXJFPAVC_Base@@@Z ENDP		; SaveDFSettingsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_fp$ = -272						; size = 4
_ebox$ = -268						; size = 4
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VerifySaveItCB@@YAXJFPAVC_Base@@@Z PROC		; VerifySaveItCB

; 2504 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2505 : 	C_EditBox *ebox;
; 2506 : 	FILE *fp;
; 2507 : 	char	filename[MAX_PATH];
; 2508 : 
; 2509 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@VerifySave

; 2510 : 		return;

	jmp	$LN11@VerifySave
$LN10@VerifySave:

; 2511 : 
; 2512 : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2513 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN11@VerifySave

; 2514 : 	{
; 2515 : 		//dpc EmptyFilenameSaveFix, modified by MN - added a warning to enter a filename
; 2516 : 		if (g_bEmptyFilenameFix)

	movzx	edx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	edx, edx
	je	SHORT $LN8@VerifySave

; 2517 : 		{
; 2518 : 			if (_tcslen(ebox->GetText()) == 0)

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@VerifySave

; 2519 : 			{
; 2520 : 				AreYouSure(TXT_WARNING, TXT_ENTER_FILENAME,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	467					; 000001d3H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2521 : 				return;

	jmp	$LN11@VerifySave
$LN8@VerifySave:

; 2522 : 			}
; 2523 : 		}
; 2524 : 		//end EmptyFilenameSaveFix
; 2525 : 		_stprintf(filename,"%s\\%s.dfs",FalconCampUserSaveDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09OMGIEDEG@?$CFs?2?$CFs?4dfs?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 2526 : 		fp=fopen(filename,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 2527 : 		if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN6@VerifySave

; 2528 : 		{
; 2529 : 			fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 2530 : 			if(CheckExclude(filename,FalconCampUserSaveDirectory,DFExcludeList,"dfs"))

	push	OFFSET ??_C@_03CCLHNNBA@dfs?$AA@
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@VerifySave

; 2531 : 				AreYouSure(TXT_ERROR,TXT_CANT_OVERWRITE,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	249					; 000000f9H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2532 : 			else

	jmp	SHORT $LN4@VerifySave
$LN5@VerifySave:

; 2533 : 				AreYouSure(TXT_WARNING,TXT_FILE_EXISTS,SaveItCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?SaveItCB@@YAXJFPAVC_Base@@@Z	; SaveItCB
	push	241					; 000000f1H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H
$LN4@VerifySave:

; 2534 : 		}
; 2535 : 		else

	jmp	SHORT $LN11@VerifySave
$LN6@VerifySave:

; 2536 : 		{
; 2537 : 			if(CheckExclude(filename,FalconCampUserSaveDirectory,DFExcludeList,"dfs"))

	push	OFFSET ??_C@_03CCLHNNBA@dfs?$AA@
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@VerifySave

; 2538 : 				AreYouSure(TXT_ERROR,TXT_CANT_OVERWRITE,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	249					; 000000f9H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2539 : 			else

	jmp	SHORT $LN11@VerifySave
$LN2@VerifySave:

; 2540 : 				SaveItCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?SaveItCB@@YAXJFPAVC_Base@@@Z		; SaveItCB
	add	esp, 12					; 0000000cH
$LN11@VerifySave:

; 2541 : 		}
; 2542 : 	}
; 2543 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?VerifySaveItCB@@YAXJFPAVC_Base@@@Z ENDP		; VerifySaveItCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ebox$ = -276						; size = 4
_win$ = -272						; size = 4
_tree$ = -268						; size = 4
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SaveItCB@@YAXJFPAVC_Base@@@Z PROC			; SaveItCB

; 2463 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2464 : 	C_EditBox *ebox;
; 2465 : 	C_Window *win;
; 2466 : 	C_TreeList *tree;
; 2467 : 	char	filename[MAX_PATH];
; 2468 : 
; 2469 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@SaveItCB

; 2470 : 		return;

	jmp	$LN7@SaveItCB
$LN6@SaveItCB:

; 2471 : 
; 2472 : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2473 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN5@SaveItCB

; 2474 : 		return;

	jmp	$LN7@SaveItCB
$LN5@SaveItCB:

; 2475 : 
; 2476 : 	gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2477 : 	gMainHandler->HideWindow(control->Parent_);

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2478 : 
; 2479 : 	ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2480 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN4@SaveItCB

; 2481 : 	{
; 2482 : 		_stprintf(filename,"%s\\%s.dfs",FalconCampUserSaveDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09OMGIEDEG@?$CFs?2?$CFs?4dfs?$AA@
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2483 : 
; 2484 : 		// SAVE SETTINGS HERE
; 2485 : 		SimDogfight.SaveSettings(filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SaveSettings@DogfightClass@@QAEXPAD@Z	; DogfightClass::SaveSettings
$LN4@SaveItCB:

; 2486 : 	}
; 2487 : 	win=gMainHandler->FindWindow(DF_LOAD_WIN);

	push	20050					; 00004e52H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2488 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@SaveItCB

; 2489 : 	{
; 2490 : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 2491 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN7@SaveItCB

; 2492 : 		{
; 2493 : 			_stprintf(filename,"%s\\*.dfs",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_08DDPAHDML@?$CFs?2?$CK?4dfs?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2494 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2495 : 			GetFileListTree(tree,filename,DFExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 2496 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2497 : 			if(tree->Parent_)

	mov	eax, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN7@SaveItCB

; 2498 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN7@SaveItCB:

; 2499 : 		}
; 2500 : 	}
; 2501 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveItCB@@YAXJFPAVC_Base@@@Z ENDP			; SaveItCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_gameID$ = -8						; size = 8
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?InfoButtonCB@@YAXJFPAVC_Base@@@Z PROC			; InfoButtonCB

; 2452 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2453 : 	VU_ID gameID;

	lea	ecx, DWORD PTR _gameID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2454 : 
; 2455 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@InfoButton

; 2456 : 		return;

	jmp	SHORT $LN2@InfoButton
$LN1@InfoButton:

; 2457 : 
; 2458 : 	SetupInfoWindow(NULL,NULL);

	push	0
	push	0
	call	?SetupInfoWindow@@YAXP6AXXZ0@Z		; SetupInfoWindow
	add	esp, 8

; 2459 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@InfoButton:

; 2460 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InfoButtonCB@@YAXJFPAVC_Base@@@Z ENDP			; InfoButtonCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
?EnableDFTeamGroup@@YAXXZ PROC				; EnableDFTeamGroup

; 2447 : {

	push	ebp
	mov	ebp, esp

; 2448 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton

; 2449 : }

	pop	ebp
	ret	0
?EnableDFTeamGroup@@YAXXZ ENDP				; EnableDFTeamGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?ClearDFTeamButtons@@YAXXZ PROC				; ClearDFTeamButtons

; 2335 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2336 : 	C_Window *win;
; 2337 : 	C_Button *btn;
; 2338 : 
; 2339 : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2340 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN18@ClearDFTea

; 2341 : 	{
; 2342 : 		btn=(C_Button *)win->FindControl(DF_CRIMSON);

	push	21231					; 000052efH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2343 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN16@ClearDFTea

; 2344 : 		{
; 2345 : 			if(btn->GetState())

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN16@ClearDFTea

; 2346 : 			{
; 2347 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2348 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@ClearDFTea:

; 2349 : 			}
; 2350 : 		}
; 2351 : 
; 2352 : 		btn=(C_Button *)win->FindControl(DF_SHARK);

	push	21232					; 000052f0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2353 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN14@ClearDFTea

; 2354 : 		{
; 2355 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN14@ClearDFTea

; 2356 : 			{
; 2357 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2358 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@ClearDFTea:

; 2359 : 			}
; 2360 : 		}
; 2361 : 
; 2362 : 		btn=(C_Button *)win->FindControl(DF_TIGER);

	push	21234					; 000052f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2363 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN12@ClearDFTea

; 2364 : 		{
; 2365 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN12@ClearDFTea

; 2366 : 			{
; 2367 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2368 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@ClearDFTea:

; 2369 : 			}
; 2370 : 		}
; 2371 : 
; 2372 : 		btn=(C_Button *)win->FindControl(DF_VIPER);

	push	21233					; 000052f1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2373 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN10@ClearDFTea

; 2374 : 		{
; 2375 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN10@ClearDFTea

; 2376 : 			{
; 2377 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2378 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@ClearDFTea:

; 2379 : 			}
; 2380 : 		}
; 2381 : 
; 2382 : 		btn=(C_Button *)win->FindControl(DF_MARK_CRIMSON);

	push	21235					; 000052f3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2383 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@ClearDFTea

; 2384 : 		{
; 2385 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN8@ClearDFTea

; 2386 : 			{
; 2387 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2388 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@ClearDFTea:

; 2389 : 			}
; 2390 : 		}
; 2391 : 
; 2392 : 		btn=(C_Button *)win->FindControl(DF_MARK_SHARK);

	push	21236					; 000052f4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2393 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@ClearDFTea

; 2394 : 		{
; 2395 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN6@ClearDFTea

; 2396 : 			{
; 2397 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2398 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@ClearDFTea:

; 2399 : 			}
; 2400 : 		}
; 2401 : 
; 2402 : 		btn=(C_Button *)win->FindControl(DF_MARK_TIGER);

	push	21238					; 000052f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2403 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@ClearDFTea

; 2404 : 		{
; 2405 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN4@ClearDFTea

; 2406 : 			{
; 2407 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2408 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@ClearDFTea:

; 2409 : 			}
; 2410 : 		}
; 2411 : 
; 2412 : 		btn=(C_Button *)win->FindControl(DF_MARK_VIPER);

	push	21237					; 000052f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2413 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN18@ClearDFTea

; 2414 : 		{
; 2415 : 			if(btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN18@ClearDFTea

; 2416 : 			{
; 2417 : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2418 : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN18@ClearDFTea:

; 2419 : 			}
; 2420 : 		}
; 2421 : 	}
; 2422 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDFTeamButtons@@YAXXZ ENDP				; ClearDFTeamButtons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_temp$ = -28						; size = 4
tv74 = -24						; size = 4
_sldr$ = -20						; size = 4
_winme$ = -16						; size = 4
_step$ = -12						; size = 4
_value$ = -8						; size = 4
_ebox$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z PROC		; DogFightSLDRCB

; 2193 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2194 : 	C_Slider *sldr=NULL;

	mov	DWORD PTR _sldr$[ebp], 0

; 2195 : 	C_Window *winme=NULL;

	mov	DWORD PTR _winme$[ebp], 0

; 2196 : 	C_EditBox *ebox=NULL;

	mov	DWORD PTR _ebox$[ebp], 0

; 2197 : 	long value=0,step=0,temp=0;

	mov	DWORD PTR _value$[ebp], 0
	mov	DWORD PTR _step$[ebp], 0
	mov	DWORD PTR _temp$[ebp], 0

; 2198 : 
; 2199 : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN19@DogFightSL

; 2200 : 		return;

	jmp	$LN20@DogFightSL
$LN19@DogFightSL:

; 2201 : 
; 2202 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN18@DogFightSL
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN18@DogFightSL

; 2203 : 	{
; 2204 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2205 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2206 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2207 : 		return;

	jmp	$LN20@DogFightSL
$LN18@DogFightSL:

; 2208 : 	}
; 2209 : 
; 2210 : 	winme=control->Parent_;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _winme$[ebp], edx

; 2211 : 
; 2212 : 	ebox=NULL;

	mov	DWORD PTR _ebox$[ebp], 0

; 2213 : 	switch(ID)

	mov	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	sub	ecx, 20138				; 00004eaaH
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 5
	ja	$LN16@DogFightSL
	mov	edx, DWORD PTR tv74[ebp]
	jmp	DWORD PTR $LN22@DogFightSL[edx*4]
$LN15@DogFightSL:

; 2214 : 	{
; 2215 : 		case RADAR_SLIDER:
; 2216 : 			ebox=(C_EditBox *)winme->FindControl(RADAR_READOUT);

	push	20102					; 00004e86H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2217 : 			step=2;

	mov	DWORD PTR _step$[ebp], 2

; 2218 : 			break;

	jmp	SHORT $LN16@DogFightSL
$LN14@DogFightSL:

; 2219 : 		case ALLIR_SLIDER:
; 2220 : 			ebox=(C_EditBox *)winme->FindControl(ALLIR_READOUT);

	push	20106					; 00004e8aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2221 : 			step=2;

	mov	DWORD PTR _step$[ebp], 2

; 2222 : 			break;

	jmp	SHORT $LN16@DogFightSL
$LN13@DogFightSL:

; 2223 : 		case RIR_SLIDER:
; 2224 : 			ebox=(C_EditBox *)winme->FindControl(RIR_READOUT);

	push	20110					; 00004e8eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2225 : 			step=2;

	mov	DWORD PTR _step$[ebp], 2

; 2226 : 			break;

	jmp	SHORT $LN16@DogFightSL
$LN12@DogFightSL:

; 2227 : 		case RANGE_SLIDER:
; 2228 : 			ebox=(C_EditBox *)winme->FindControl(RANGE_READOUT);

	push	20118					; 00004e96H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2229 : 			step=5;

	mov	DWORD PTR _step$[ebp], 5

; 2230 : 			break;

	jmp	SHORT $LN16@DogFightSL
$LN11@DogFightSL:

; 2231 : 		case ALTITUDE_SLIDER:
; 2232 : 			ebox=(C_EditBox *)winme->FindControl(ALTITUDE_READOUT);

	push	20122					; 00004e9aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2233 : 			step=1000;

	mov	DWORD PTR _step$[ebp], 1000		; 000003e8H

; 2234 : 			break;

	jmp	SHORT $LN16@DogFightSL
$LN10@DogFightSL:

; 2235 : 		case MP_SLIDER:
; 2236 : 			ebox=(C_EditBox *)winme->FindControl(MP_READOUT);

	push	20135					; 00004ea7H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2237 : 			step=1;

	mov	DWORD PTR _step$[ebp], 1
$LN16@DogFightSL:

; 2238 : 			break;
; 2239 : 	}
; 2240 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN9@DogFightSL

; 2241 : 	{
; 2242 : 		sldr=(C_Slider *)control;

	mov	eax, DWORD PTR _control$[ebp]
	mov	DWORD PTR _sldr$[ebp], eax

; 2243 : 		value=((ebox->GetMaxInteger()-ebox->GetMinInteger()) * sldr->GetSliderPos() / (sldr->GetSliderMax() - sldr->GetSliderMin()))+1;

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	mov	esi, eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	sub	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	imul	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	edi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	edi, eax
	mov	eax, esi
	cdq
	idiv	edi
	add	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 2244 : 		value+=ebox->GetMinInteger();

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	add	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax

; 2245 : 		if(step > 1)

	cmp	DWORD PTR _step$[ebp], 1
	jle	SHORT $LN8@DogFightSL

; 2246 : 			temp=value % step;

	mov	eax, DWORD PTR _value$[ebp]
	cdq
	idiv	DWORD PTR _step$[ebp]
	mov	DWORD PTR _temp$[ebp], edx

; 2247 : 		else

	jmp	SHORT $LN7@DogFightSL
$LN8@DogFightSL:

; 2248 : 			temp=step;

	mov	ecx, DWORD PTR _step$[ebp]
	mov	DWORD PTR _temp$[ebp], ecx
$LN7@DogFightSL:

; 2249 : 		value -= temp;

	mov	edx, DWORD PTR _value$[ebp]
	sub	edx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _value$[ebp], edx

; 2250 : 
; 2251 : 		if(ebox->GetInteger() == value)

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	cmp	eax, DWORD PTR _value$[ebp]
	jne	SHORT $LN6@DogFightSL

; 2252 : 			return;

	jmp	$LN20@DogFightSL
$LN6@DogFightSL:

; 2253 : 
; 2254 : 		// Minimum starting range
; 2255 : 		if (ID == RANGE_SLIDER && value < 5)

	cmp	DWORD PTR _ID$[ebp], 20141		; 00004eadH
	jne	SHORT $LN5@DogFightSL
	cmp	DWORD PTR _value$[ebp], 5
	jge	SHORT $LN5@DogFightSL

; 2256 : 			value = 5;

	mov	DWORD PTR _value$[ebp], 5
$LN5@DogFightSL:

; 2257 : 
; 2258 : 		ebox->SetInteger(value);

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 2259 : 		PositionSlider(sldr,value,ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H

; 2260 : 
; 2261 : 		if(ID == MP_SLIDER)

	cmp	DWORD PTR _ID$[ebp], 20143		; 00004eafH
	jne	SHORT $LN4@DogFightSL

; 2262 : 		{
; 2263 : 			if(value > 100)

	cmp	DWORD PTR _value$[ebp], 100		; 00000064H
	jle	SHORT $LN3@DogFightSL

; 2264 : 			{
; 2265 : 				ebox->SetText(TXT_FOREVER);

	push	251					; 000000fbH
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXJ@Z		; C_EditBox::SetText
	jmp	SHORT $LN4@DogFightSL
$LN3@DogFightSL:

; 2266 : 			}
; 2267 : 			else if(value < 1)

	cmp	DWORD PTR _value$[ebp], 1
	jge	SHORT $LN4@DogFightSL

; 2268 : 			{
; 2269 : 				value=1;

	mov	DWORD PTR _value$[ebp], 1

; 2270 : 				ebox->SetInteger(value);

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN4@DogFightSL:

; 2271 : 			}
; 2272 : 		}
; 2273 : 		ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@DogFightSL:

; 2274 : 	}
; 2275 : 	
; 2276 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow
$LN20@DogFightSL:

; 2277 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@DogFightSL:
	DD	$LN15@DogFightSL
	DD	$LN14@DogFightSL
	DD	$LN13@DogFightSL
	DD	$LN12@DogFightSL
	DD	$LN11@DogFightSL
	DD	$LN10@DogFightSL
?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ENDP		; DogFightSLDRCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T2 = -304						; size = 4
tv95 = -300						; size = 4
$T3 = -296						; size = 4
_ID$ = -292						; size = 4
_win$ = -288						; size = 4
_tmr$ = -284						; size = 4
_tree$ = -280						; size = 4
_path$4 = -276						; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadDogFightWindows@@YAXXZ PROC			; LoadDogFightWindows

; 2123 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadDogFightWindows@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2124 : 	C_Window *win;
; 2125 : 	C_TreeList *tree;
; 2126 : 	C_TimerHook *tmr;
; 2127 : 	long ID;
; 2128 : 
; 2129 : 	if(!DFLoaded)

	cmp	DWORD PTR ?DFLoaded@@3HA, 0		; DFLoaded
	jne	$LN11@LoadDogFig

; 2130 : 	{
; 2131 : 		if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN10@LoadDogFig

; 2132 : 			gMainParser->LoadImageList("df_res.lst");

	push	OFFSET ??_C@_0L@KNMPGINM@df_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 2133 : 		else

	jmp	SHORT $LN9@LoadDogFig
$LN10@LoadDogFig:

; 2134 : 			gMainParser->LoadImageList("df_art.lst");

	push	OFFSET ??_C@_0L@OAIHMMOM@df_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN9@LoadDogFig:

; 2135 : 		gMainParser->LoadSoundList("df_snd.lst");

	push	OFFSET ??_C@_0L@HNLBAOJL@df_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 2136 : 		if(!gDogfightBites)

	cmp	DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A, 0 ; gDogfightBites
	jne	SHORT $LN8@LoadDogFig

; 2137 : 			gDogfightBites=gMainParser->ParseSoundBite("art\\dgft\\play\\uiddf.scf");

	push	OFFSET ??_C@_0BI@NDDGOFDA@art?2dgft?2play?2uiddf?4scf?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?ParseSoundBite@C_Parser@@QAEPAVC_SoundBite@@PAD@Z ; C_Parser::ParseSoundBite
	mov	DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A, eax ; gDogfightBites
$LN8@LoadDogFig:

; 2138 : 		gMainParser->LoadWindowList("df_scf.lst");	// Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0L@FBKOMOFA@df_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 2139 : 
; 2140 : 		ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN7@LoadDogFig:

; 2141 : 		while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN6@LoadDogFig

; 2142 : 		{
; 2143 : 			HookupDogFightControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupDogFightControls@@YAXJ@Z		; HookupDogFightControls
	add	esp, 4

; 2144 : 			ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 2145 : 		}

	jmp	SHORT $LN7@LoadDogFig
$LN6@LoadDogFig:

; 2146 : 		win=gMainHandler->FindWindow(DGFT_MAIN_SCREEN);

	push	20002					; 00004e22H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2147 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN5@LoadDogFig

; 2148 : 		{
; 2149 : 			tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN14@LoadDogFig
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN15@LoadDogFig
$LN14@LoadDogFig:
	mov	DWORD PTR tv95[ebp], 0
$LN15@LoadDogFig:
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$[ebp], edx

; 2150 : 			tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 2151 : 			tmr->SetUpdateCallback(GenericTimerCB);

	push	OFFSET ?GenericTimerCB@@YAXJFPAVC_Base@@@Z ; GenericTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 2152 : 			tmr->SetRefreshCallback(BlinkCommsButtonTimerCB);

	push	OFFSET ?BlinkCommsButtonTimerCB@@YAXJFPAVC_Base@@@Z ; BlinkCommsButtonTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 2153 : 			tmr->SetUserNumber(_UI95_TIMER_DELAY_,1*_UI95_TICKS_PER_SECOND_); // Timer activates every 2 seconds (Only when this window is open)

	push	10					; 0000000aH
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2154 : 
; 2155 : 			win->AddControl(tmr);

	mov	eax, DWORD PTR _tmr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN5@LoadDogFig:

; 2156 : 		}
; 2157 : 		DFLoaded++;

	mov	ecx, DWORD PTR ?DFLoaded@@3HA		; DFLoaded
	add	ecx, 1
	mov	DWORD PTR ?DFLoaded@@3HA, ecx		; DFLoaded
$LN11@LoadDogFig:

; 2158 : 	}
; 2159 : 
; 2160 : 	_tcscpy(DogfightTeamNames[1],gStringMgr->GetString(TXT_CRIMSONFLIGHT));

	push	12					; 0000000cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, 20					; 00000014H
	shl	edx, 0
	add	edx, OFFSET ?DogfightTeamNames@@3PAY0BE@DA ; DogfightTeamNames
	push	edx
	call	_strcpy
	add	esp, 8

; 2161 : 	_tcscpy(DogfightTeamNames[2],gStringMgr->GetString(TXT_SHARKFLIGHT));

	push	29					; 0000001dH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, 20					; 00000014H
	shl	eax, 1
	add	eax, OFFSET ?DogfightTeamNames@@3PAY0BE@DA ; DogfightTeamNames
	push	eax
	call	_strcpy
	add	esp, 8

; 2162 : 	_tcscpy(DogfightTeamNames[3],gStringMgr->GetString(TXT_VIPREFLIGHT));

	push	30					; 0000001eH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, 20					; 00000014H
	imul	ecx, 3
	add	ecx, OFFSET ?DogfightTeamNames@@3PAY0BE@DA ; DogfightTeamNames
	push	ecx
	call	_strcpy
	add	esp, 8

; 2163 : 	_tcscpy(DogfightTeamNames[4],gStringMgr->GetString(TXT_TIGERFLIGHT));

	push	31					; 0000001fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, 20					; 00000014H
	shl	edx, 2
	add	edx, OFFSET ?DogfightTeamNames@@3PAY0BE@DA ; DogfightTeamNames
	push	edx
	call	_strcpy
	add	esp, 8

; 2164 : 	SetDogFightStartup();

	call	?SetDogFightStartup@@YAXXZ		; SetDogFightStartup

; 2165 : 
; 2166 : 	SetSingle_Comms_Ctrls();

	call	?SetSingle_Comms_Ctrls@@YAXXZ		; SetSingle_Comms_Ctrls

; 2167 : 	if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN4@LoadDogFig

; 2168 : 		RebuildGameTree();

	call	?RebuildGameTree@@YAXXZ			; RebuildGameTree
$LN4@LoadDogFig:

; 2169 : 
; 2170 : 	win=gMainHandler->FindWindow(DF_LOAD_WIN);

	push	20050					; 00004e52H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2171 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN12@LoadDogFig

; 2172 : 	{
; 2173 : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 2174 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN12@LoadDogFig

; 2175 : 		{
; 2176 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2177 : 			tree->SetUserNumber(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2178 : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 2179 : 			tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 2180 : 			tree->SetCallback(SelectDFSettingsFileCB);

	push	OFFSET ?SelectDFSettingsFileCB@@YAXJFPAVC_Base@@@Z ; SelectDFSettingsFileCB
	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2181 : 			char path[_MAX_PATH];
; 2182 : 			sprintf (path, "%s\\*.DFS", FalconCampaignSaveDirectory);

	push	OFFSET ?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	push	OFFSET ??_C@_08DOALLOLH@?$CFs?2?$CK?4DFS?$AA@
	lea	ecx, DWORD PTR _path$4[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2183 : 
; 2184 : 			GetFileListTree(tree, path, DFExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?DFExcludeList@@3PAPADA		; DFExcludeList
	lea	edx, DWORD PTR _path$4[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 2185 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2186 : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN12@LoadDogFig

; 2187 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN12@LoadDogFig:

; 2188 : 		}
; 2189 : 	}
; 2190 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadDogFightWindows@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadDogFightWindows@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadDogFightWindows@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadDogFightWindows@@YAXXZ ENDP			; LoadDogFightWindows
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?SetDogFightStartup@@YAXXZ PROC				; SetDogFightStartup

; 2098 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2099 : 	C_Window *win;
; 2100 : 
; 2101 : 	if((MainLastGroup == 2000))

	cmp	DWORD PTR ?MainLastGroup@@3HA, 2000	; MainLastGroup, 000007d0H
	jne	SHORT $LN3@SetDogFigh

; 2102 : 	{
; 2103 : 		// these functions (with scoring) MUST be in this order to work properly
; 2104 : 		win=gMainHandler->FindWindow(DF_DBRF_WIN);

	push	21070					; 0000524eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2105 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@SetDogFigh

; 2106 : 		{
; 2107 : 			ProcessEventList(win,1);

	push	1
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?ProcessEventList@@YAXPAVC_Window@@J@Z	; ProcessEventList
	add	esp, 8

; 2108 : 
; 2109 : 			DisplayDogfightResults();

	call	?DisplayDogfightResults@@YAXXZ		; DisplayDogfightResults

; 2110 : 			win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 2111 : 			win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 2112 : 			gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 2113 : 
; 2114 : 			CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2115 : 			gMainHandler->EnableWindowGroup(2020);

	push	2020					; 000007e4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN3@SetDogFigh:

; 2116 : 		}
; 2117 : 	}
; 2118 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetDogFightStartup@@YAXXZ ENDP				; SetDogFightStartup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?DFGameModeCB@@YAXJFPAVC_Base@@@Z PROC			; DFGameModeCB

; 2044 : {

	push	ebp
	mov	ebp, esp

; 2045 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@DFGameMode

; 2046 : 		return;

	jmp	SHORT $LN3@DFGameMode
$LN2@DFGameMode:

; 2047 : 
; 2048 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@DFGameMode
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN1@DFGameMode

; 2049 : 	{
; 2050 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2051 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 2052 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 2053 : 		return;

	jmp	SHORT $LN3@DFGameMode
$LN1@DFGameMode:

; 2054 : 	}
; 2055 : 
; 2056 : 	CopyDFSettingsFromWindow();

	call	?CopyDFSettingsFromWindow@@YAXXZ	; CopyDFSettingsFromWindow

; 2057 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton
$LN3@DFGameMode:

; 2058 : }

	pop	ebp
	ret	0
?DFGameModeCB@@YAXJFPAVC_Base@@@Z ENDP			; DFGameModeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv263 = -28						; size = 4
_lbox$ = -24						; size = 4
_crsr$ = -20						; size = 4
_clk$ = -16						; size = 4
_btn$ = -12						; size = 4
_win$ = -8						; size = 4
_ebox$ = -4						; size = 4
?CopyDFSettingsFromWindow@@YAXXZ PROC			; CopyDFSettingsFromWindow

; 1938 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 1939 : 	C_Window *win;
; 1940 : 	C_Cursor *crsr;
; 1941 : 	C_ListBox *lbox;
; 1942 : 	C_EditBox *ebox;
; 1943 : 	C_Button *btn;
; 1944 : 	C_Clock *clk;
; 1945 : 
; 1946 : 	if(!gMainHandler) return;

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN27@CopyDFSett
	jmp	$LN28@CopyDFSett
$LN27@CopyDFSett:

; 1947 : 
; 1948 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN26@CopyDFSett
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN26@CopyDFSett

; 1949 : 		return;

	jmp	$LN28@CopyDFSett
$LN26@CopyDFSett:

; 1950 : 
; 1951 : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 1952 : 
; 1953 : 	// Now the main window
; 1954 : 	win=gMainHandler->FindWindow(DF_SETTINGS_WIN);

	push	20100					; 00004e84H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1955 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@CopyDFSett

; 1956 : 	{
; 1957 : 		ebox=(C_EditBox *)win->FindControl(RADAR_READOUT);

	push	20102					; 00004e86H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1958 : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1959 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN24@CopyDFSett

; 1960 : 			SimDogfight.SetNumRadarMissiles(static_cast<uchar>(ebox->GetInteger()));

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetNumRadarMissiles@DogfightClass@@QAEXE@Z ; DogfightClass::SetNumRadarMissiles
$LN24@CopyDFSett:

; 1961 : 		ebox=(C_EditBox *)win->FindControl(ALLIR_READOUT);

	push	20106					; 00004e8aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1962 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN23@CopyDFSett

; 1963 : 			SimDogfight.SetNumAllAspectMissiles(static_cast<uchar>(ebox->GetInteger()));

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetNumAllAspectMissiles@DogfightClass@@QAEXE@Z ; DogfightClass::SetNumAllAspectMissiles
$LN23@CopyDFSett:

; 1964 : 		ebox=(C_EditBox *)win->FindControl(RIR_READOUT);

	push	20110					; 00004e8eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1965 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN22@CopyDFSett

; 1966 : 			SimDogfight.SetNumRearAspectMissiles(static_cast<uchar>(ebox->GetInteger()));

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetNumRearAspectMissiles@DogfightClass@@QAEXE@Z ; DogfightClass::SetNumRearAspectMissiles
$LN22@CopyDFSett:

; 1967 : 		ebox=(C_EditBox *)win->FindControl(RANGE_READOUT);

	push	20118					; 00004e96H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1968 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN21@CopyDFSett

; 1969 : 			SimDogfight.startRange = ebox->GetInteger() * NM_TO_FT;

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@45bde1b0
	movss	DWORD PTR ?SimDogfight@@3VDogfightClass@@A+16, xmm0
$LN21@CopyDFSett:

; 1970 : 		ebox=(C_EditBox *)win->FindControl(ALTITUDE_READOUT);

	push	20122					; 00004e9aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1971 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN20@CopyDFSett

; 1972 : 			SimDogfight.startAltitude = ebox->GetInteger() * -1.0F;

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR ?SimDogfight@@3VDogfightClass@@A+20, xmm0
$LN20@CopyDFSett:

; 1973 : 		ebox=(C_EditBox *)win->FindControl(MP_READOUT);

	push	20135					; 00004ea7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1974 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN19@CopyDFSett

; 1975 : 			SimDogfight.rounds = static_cast<uchar>(ebox->GetInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	mov	BYTE PTR ?SimDogfight@@3VDogfightClass@@A+44, al
$LN19@CopyDFSett:

; 1976 : 		btn=(C_Button *)win->FindControl(GUN_CTRL);

	push	20114					; 00004e92H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1977 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN16@CopyDFSett

; 1978 : 		{
; 1979 : 			if (btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN17@CopyDFSett

; 1980 : 				SimDogfight.SetFlag(DF_UNLIMITED_GUNS);

	push	1
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetFlag@DogfightClass@@QAEXH@Z		; DogfightClass::SetFlag

; 1981 : 			else

	jmp	SHORT $LN16@CopyDFSett
$LN17@CopyDFSett:

; 1982 : 				SimDogfight.UnSetFlag(DF_UNLIMITED_GUNS);

	push	1
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?UnSetFlag@DogfightClass@@QAEXH@Z	; DogfightClass::UnSetFlag
$LN16@CopyDFSett:

; 1983 : 		}
; 1984 : 		btn=(C_Button *)win->FindControl(ECM_CTRL);

	push	21932					; 000055acH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1985 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN13@CopyDFSett

; 1986 : 		{
; 1987 : 			if (btn->GetState())

	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	je	SHORT $LN14@CopyDFSett

; 1988 : 				SimDogfight.SetFlag(DF_ECM_AVAIL);

	push	2
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetFlag@DogfightClass@@QAEXH@Z		; DogfightClass::SetFlag

; 1989 : 			else

	jmp	SHORT $LN13@CopyDFSett
$LN14@CopyDFSett:

; 1990 : 				SimDogfight.UnSetFlag(DF_ECM_AVAIL);

	push	2
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?UnSetFlag@DogfightClass@@QAEXH@Z	; DogfightClass::UnSetFlag
$LN13@CopyDFSett:

; 1991 : 		}
; 1992 : 	}
; 1993 : 	win=gMainHandler->FindWindow(DF_MAP_WIN);

	push	21060					; 00005244H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1994 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN11@CopyDFSett

; 1995 : 	{
; 1996 : 		//sfr: another temporary hack to check this
; 1997 : 		//crsr=(C_Cursor*)win->FindControl(10049);
; 1998 : 		crsr=(C_Cursor*)win->FindControl(DF_MAP_CURSOR);		

	push	21062					; 00005246H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _crsr$[ebp], eax

; 1999 : 		if(crsr)

	cmp	DWORD PTR _crsr$[ebp], 0
	je	SHORT $LN11@CopyDFSett

; 2000 : 		{
; 2001 : 			SimDogfight.xRatio = MapXtoRatio(crsr);

	mov	ecx, DWORD PTR _crsr$[ebp]
	push	ecx
	call	?MapXtoRatio@@YAMPAVC_Cursor@@@Z	; MapXtoRatio
	add	esp, 4
	fstp	DWORD PTR ?SimDogfight@@3VDogfightClass@@A+32

; 2002 : 			SimDogfight.yRatio = MapYtoRatio(crsr);

	mov	edx, DWORD PTR _crsr$[ebp]
	push	edx
	call	?MapYtoRatio@@YAMPAVC_Cursor@@@Z	; MapYtoRatio
	add	esp, 4
	fstp	DWORD PTR ?SimDogfight@@3VDogfightClass@@A+36
$LN11@CopyDFSett:

; 2003 : 		}
; 2004 : 	}
; 2005 : 	win=gMainHandler->FindWindow(DF_SETTINGS_WIN);

	push	20100					; 00004e84H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2006 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@CopyDFSett

; 2007 : 	{
; 2008 : 		lbox=(C_ListBox *)win->FindControl(DF_GAME_TYPE);

	push	21226					; 000052eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2009 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN7@CopyDFSett

; 2010 : 		{
; 2011 : 			switch (lbox->GetTextID())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv263[ebp], eax
	cmp	DWORD PTR tv263[ebp], 21228		; 000052ecH
	je	SHORT $LN6@CopyDFSett
	cmp	DWORD PTR tv263[ebp], 21229		; 000052edH
	je	SHORT $LN5@CopyDFSett
	jmp	SHORT $LN4@CopyDFSett
$LN6@CopyDFSett:

; 2012 : 			{
; 2013 : 				case DF_GAME_TEAM_MATCH:
; 2014 : 					SimDogfight.SetGameType(dog_TeamMatchplay);

	push	2
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z ; DogfightClass::SetGameType

; 2015 : 					break;

	jmp	SHORT $LN7@CopyDFSett
$LN5@CopyDFSett:

; 2016 : 				case DF_GAME_TEAM_FURBALL:
; 2017 : 					SimDogfight.SetGameType(dog_TeamFurball);

	push	1
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z ; DogfightClass::SetGameType

; 2018 : 					break;

	jmp	SHORT $LN7@CopyDFSett
$LN4@CopyDFSett:

; 2019 : 				default: 
; 2020 : 					SimDogfight.SetGameType(dog_Furball);

	push	0
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z ; DogfightClass::SetGameType
$LN7@CopyDFSett:

; 2021 : 					break;
; 2022 : 			}
; 2023 : 		}
; 2024 : 	}
; 2025 : 	win=gMainHandler->FindWindow(DF_PLAY_SUA_WIN);

	push	21880					; 00005578H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2026 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CopyDFSett

; 2027 : 	{
; 2028 : 		clk=(C_Clock*)win->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 2029 : 		if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN2@CopyDFSett

; 2030 : 			SimDogfight.startTime = clk->GetHour() * CampaignHours + clk->GetMinute() * CampaignMinutes + clk->GetSecond() * CampaignSeconds;

	mov	ecx, DWORD PTR _clk$[ebp]
	call	?GetHour@C_Clock@@QAEJXZ		; C_Clock::GetHour
	mov	esi, eax
	imul	esi, 3600000				; 0036ee80H
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?GetMinute@C_Clock@@QAEJXZ		; C_Clock::GetMinute
	imul	eax, 60000				; 0000ea60H
	add	esi, eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?GetSecond@C_Clock@@QAEJXZ		; C_Clock::GetSecond
	imul	eax, 1000				; 000003e8H
	add	esi, eax
	mov	DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12, esi
$LN2@CopyDFSett:

; 2031 : 	}
; 2032 : 	UpdateDogfightWindows();

	call	?UpdateDogfightWindows@@YAXXZ		; UpdateDogfightWindows

; 2033 : 
; 2034 : 	if (TheCampaign.IsLoaded())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN1@CopyDFSett

; 2035 : 	{
; 2036 : 		SimDogfight.ApplySettings();

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?ApplySettings@DogfightClass@@QAEXXZ	; DogfightClass::ApplySettings

; 2037 : 		SimDogfight.SendSettings(NULL);

	push	0
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SendSettings@DogfightClass@@QAEXPAVFalconSessionEntity@@@Z ; DogfightClass::SendSettings
$LN1@CopyDFSett:

; 2038 : 	}
; 2039 : 	DogfightMenuSetup();

	call	?DogfightMenuSetup@@YAXXZ		; DogfightMenuSetup

; 2040 : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN28@CopyDFSett:

; 2041 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyDFSettingsFromWindow@@YAXXZ ENDP			; CopyDFSettingsFromWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_clk$ = -8						; size = 4
_crsr$ = -4						; size = 4
?CopyDFSettingsToSelectWindow@@YAXXZ PROC		; CopyDFSettingsToSelectWindow

; 1900 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1901 : 	C_Window *win;
; 1902 : 	C_Clock *clk;
; 1903 : 	C_Cursor *crsr;
; 1904 : 
; 1905 : 	if (!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN5@CopyDFSett

; 1906 : 		return;

	jmp	$LN6@CopyDFSett
$LN5@CopyDFSett:

; 1907 : 
; 1908 : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 1909 : 	win=gMainHandler->FindWindow(DF_SUA_WIN);

	push	20006					; 00004e26H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1910 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@CopyDFSett

; 1911 : 	{
; 1912 : 		// Copy in the time
; 1913 : 		clk=(C_Clock*)win->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1914 : 		if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN3@CopyDFSett

; 1915 : 		{
; 1916 : 			clk->SetHour(SimDogfight.startTime/CampaignHours);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetHour@C_Clock@@QAEXJ@Z		; C_Clock::SetHour

; 1917 : 			clk->SetMinute((SimDogfight.startTime/CampaignMinutes)%60);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	push	edx
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetMinute@C_Clock@@QAEXJ@Z		; C_Clock::SetMinute

; 1918 : 			clk->SetSecond((SimDogfight.startTime/CampaignSeconds)%60);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	push	edx
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetSecond@C_Clock@@QAEXJ@Z		; C_Clock::SetSecond

; 1919 : 			clk->Refresh();

	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN3@CopyDFSett:

; 1920 : 		}
; 1921 : 	}
; 1922 : 	// Update the map too.
; 1923 : 	win=gMainHandler->FindWindow(DF_MAP_WIN);

	push	21060					; 00005244H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1924 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@CopyDFSett

; 1925 : 	{
; 1926 : 		crsr=(C_Cursor*)win->FindControl(DF_MAP_CURSOR);

	push	21062					; 00005246H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _crsr$[ebp], eax

; 1927 : 		if(crsr)

	cmp	DWORD PTR _crsr$[ebp], 0
	je	SHORT $LN1@CopyDFSett

; 1928 : 		{
; 1929 : 			crsr->SetXY(RatiotoMapX(SimDogfight.xRatio,crsr),RatiotoMapY(SimDogfight.yRatio,crsr));

	mov	eax, DWORD PTR _crsr$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+36
	movss	DWORD PTR [esp], xmm0
	call	?RatiotoMapY@@YAJMPAVC_Cursor@@@Z	; RatiotoMapY
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _crsr$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+32
	movss	DWORD PTR [esp], xmm0
	call	?RatiotoMapX@@YAJMPAVC_Cursor@@@Z	; RatiotoMapX
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _crsr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 1930 : 			crsr->Refresh();

	mov	eax, DWORD PTR _crsr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@CopyDFSett:

; 1931 : 		}
; 1932 : 	}
; 1933 : 	UpdateDogfightWindows();

	call	?UpdateDogfightWindows@@YAXXZ		; UpdateDogfightWindows

; 1934 : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN6@CopyDFSett:

; 1935 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CopyDFSettingsToSelectWindow@@YAXXZ ENDP		; CopyDFSettingsToSelectWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv78 = -12						; size = 4
_btn$ = -8						; size = 4
_win$ = -4						; size = 4
?UpdateDogfightWindows@@YAXXZ PROC			; UpdateDogfightWindows

; 1700 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1701 : 	C_Window *win;
; 1702 : 	C_Button *btn;
; 1703 : 
; 1704 : 	win=gMainHandler->FindWindow(DF_GAME_HEADER_WIN);

	push	21924					; 000055a4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1705 : 	if (win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN10@UpdateDogf

; 1706 : 		{
; 1707 : 		btn=(C_Button *)win->FindControl(DF_GAME_TITLE);

	push	21923					; 000055a3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1708 : 		if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN9@UpdateDogf

; 1709 : 			{
; 1710 : 			switch (SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv78[ebp], eax
	cmp	DWORD PTR tv78[ebp], 1
	je	SHORT $LN6@UpdateDogf
	cmp	DWORD PTR tv78[ebp], 2
	je	SHORT $LN5@UpdateDogf
	jmp	SHORT $LN4@UpdateDogf
$LN6@UpdateDogf:

; 1711 : 				{
; 1712 : 				case dog_TeamFurball:
; 1713 : 					btn->SetState(1);

	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1714 : 					break;

	jmp	SHORT $LN9@UpdateDogf
$LN5@UpdateDogf:

; 1715 : 				case dog_TeamMatchplay:
; 1716 : 					btn->SetState(2);

	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1717 : 					break;

	jmp	SHORT $LN9@UpdateDogf
$LN4@UpdateDogf:

; 1718 : 				default:
; 1719 : 					btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN9@UpdateDogf:

; 1720 : 					break;
; 1721 : 				}
; 1722 : 			}
; 1723 : 		btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@UpdateDogf:

; 1724 : 		}
; 1725 : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1726 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN11@UpdateDogf

; 1727 : 		{
; 1728 : 		if(SimDogfight.GetGameType() != dog_Furball)

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	test	eax, eax
	je	SHORT $LN2@UpdateDogf

; 1729 : 			{
; 1730 : 			win->HideCluster(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1731 : 			win->UnHideCluster(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1732 : 			win->SetClientFlags(C_STATE_0,C_BIT_ENABLED);

	push	2048					; 00000800H
	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1733 : 			win->SetClientFlags(C_STATE_1,C_BIT_ENABLED);

	push	2048					; 00000800H
	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1734 : 			win->SetClientFlags(C_STATE_2,C_BIT_ENABLED);

	push	2048					; 00000800H
	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1735 : 			win->SetClientFlags(C_STATE_3,C_BIT_ENABLED);

	push	2048					; 00000800H
	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1736 : 			win->SetClientFlags(C_STATE_4,0);

	push	0
	push	4
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1737 : 			}
; 1738 : 		else

	jmp	SHORT $LN1@UpdateDogf
$LN2@UpdateDogf:

; 1739 : 			{
; 1740 : 			win->HideCluster(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1741 : 			win->UnHideCluster(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1742 : 			win->SetClientFlags(C_STATE_0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1743 : 			win->SetClientFlags(C_STATE_1,0);

	push	0
	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1744 : 			win->SetClientFlags(C_STATE_2,0);

	push	0
	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1745 : 			win->SetClientFlags(C_STATE_3,0);

	push	0
	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags

; 1746 : 			win->SetClientFlags(C_STATE_4,C_BIT_ENABLED);

	push	2048					; 00000800H
	push	4
	mov	ecx, DWORD PTR _win$[ebp]
	call	?SetClientFlags@C_Window@@QAEXJJ@Z	; C_Window::SetClientFlags
$LN1@UpdateDogf:

; 1747 : 			}
; 1748 : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN11@UpdateDogf:

; 1749 : 		}
; 1750 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateDogfightWindows@@YAXXZ ENDP			; UpdateDogfightWindows
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_pos$ = -4						; size = 4
_slider$ = 8						; size = 4
_value$ = 12						; size = 4
_minv$ = 16						; size = 4
_maxv$ = 20						; size = 4
?PositionSlider@@YAXPAVC_Slider@@JJJ@Z PROC		; PositionSlider

; 1688 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 1689 : 	int pos;
; 1690 : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN2@PositionSl

; 1691 : 	{
; 1692 : 		pos=((slider->GetSliderMax()-slider->GetSliderMin()) * (value-minv)) / (maxv-minv+1) + 1;

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR _minv$[ebp]
	imul	esi, eax
	mov	ecx, DWORD PTR _maxv$[ebp]
	sub	ecx, DWORD PTR _minv$[ebp]
	add	ecx, 1
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax

; 1693 : 		slider->Refresh();

	mov	edx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1694 : 		slider->SetSliderPos(pos);

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1695 : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@PositionSl:

; 1696 : 	}
; 1697 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?PositionSlider@@YAXPAVC_Slider@@JJJ@Z ENDP		; PositionSlider
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_flight$ = -12						; size = 4
tv81 = -8						; size = 4
_teamid$ = -4						; size = 2
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?RemoveAICB@@YAXJFPAVC_Base@@@Z PROC			; RemoveAICB

; 1644 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1645 : 	Flight flight;
; 1646 : 	short teamid=0;

	xor	eax, eax
	mov	WORD PTR _teamid$[ebp], ax

; 1647 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN13@RemoveAICB

; 1648 : 		return;

	jmp	$LN14@RemoveAICB
$LN13@RemoveAICB:

; 1649 : 
; 1650 : 	flight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 1651 : 	if(!flight)

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN12@RemoveAICB

; 1652 : 		return;

	jmp	$LN14@RemoveAICB
$LN12@RemoveAICB:

; 1653 : 
; 1654 : 	if(gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN11@RemoveAICB
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN11@RemoveAICB

; 1655 : 	{
; 1656 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 1657 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 1658 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 1659 : 		return;

	jmp	$LN14@RemoveAICB
$LN11@RemoveAICB:

; 1660 : 	}
; 1661 : 
; 1662 : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	mov	edx, DWORD PTR tv81[ebp]
	sub	edx, 21884				; 0000557cH
	mov	DWORD PTR tv81[ebp], edx
	cmp	DWORD PTR tv81[ebp], 4
	ja	SHORT $LN9@RemoveAICB
	mov	eax, DWORD PTR tv81[ebp]
	jmp	DWORD PTR $LN16@RemoveAICB[eax*4]
$LN8@RemoveAICB:

; 1663 : 	{
; 1664 : 		case DEL_CRIMSON_PLANE:
; 1665 : 			teamid=1;

	mov	ecx, 1
	mov	WORD PTR _teamid$[ebp], cx

; 1666 : 			break;

	jmp	SHORT $LN9@RemoveAICB
$LN7@RemoveAICB:

; 1667 : 		case DEL_SHARK_PLANE:
; 1668 : 			teamid=2;

	mov	edx, 2
	mov	WORD PTR _teamid$[ebp], dx

; 1669 : 			break;

	jmp	SHORT $LN9@RemoveAICB
$LN6@RemoveAICB:

; 1670 : 		case DEL_TBIRD_PLANE:
; 1671 : 			teamid=3;

	mov	eax, 3
	mov	WORD PTR _teamid$[ebp], ax

; 1672 : 			break;

	jmp	SHORT $LN9@RemoveAICB
$LN5@RemoveAICB:

; 1673 : 		case DEL_TIGER_PLANE:
; 1674 : 			teamid=4;

	mov	ecx, 4
	mov	WORD PTR _teamid$[ebp], cx

; 1675 : 			break;

	jmp	SHORT $LN9@RemoveAICB
$LN4@RemoveAICB:

; 1676 : 		case DEL_FURBALL_PLANE:
; 1677 : 			teamid=-1;

	or	edx, -1
	mov	WORD PTR _teamid$[ebp], dx
$LN9@RemoveAICB:

; 1678 : 			break;
; 1679 : 	}
; 1680 : 
; 1681 : 	if(teamid == -1)

	movsx	eax, WORD PTR _teamid$[ebp]
	cmp	eax, -1
	jne	SHORT $LN3@RemoveAICB

; 1682 : 		RemoveDogfightPlane();

	call	?RemoveDogfightPlane@@YAXXZ		; RemoveDogfightPlane
	jmp	SHORT $LN14@RemoveAICB
$LN3@RemoveAICB:

; 1683 : 	else if(flight->GetTeam() == teamid)

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	movsx	edx, WORD PTR _teamid$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN14@RemoveAICB

; 1684 : 		RemoveDogfightPlane();

	call	?RemoveDogfightPlane@@YAXXZ		; RemoveDogfightPlane
$LN14@RemoveAICB:

; 1685 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@RemoveAICB:
	DD	$LN8@RemoveAICB
	DD	$LN7@RemoveAICB
	DD	$LN6@RemoveAICB
	DD	$LN5@RemoveAICB
	DD	$LN4@RemoveAICB
?RemoveAICB@@YAXJFPAVC_Base@@@Z ENDP			; RemoveAICB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv74 = -12						; size = 4
_lbox$ = -8						; size = 4
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AddDogfightAICB@@YAXJFPAVC_Base@@@Z PROC		; AddDogfightAICB

; 1594 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1595 : 	C_Window *win;
; 1596 : 	C_ListBox *lbox;
; 1597 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN11@AddDogfigh

; 1598 : 		return;

	jmp	$LN12@AddDogfigh
$LN11@AddDogfigh:

; 1599 : 
; 1600 : 	if(gCommsMgr && gCommsMgr->Online() && SimDogfight.GetDogfightGameStatus() != dog_Waiting)

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN10@AddDogfigh
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN10@AddDogfigh
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ; DogfightClass::GetDogfightGameStatus
	test	eax, eax
	je	SHORT $LN10@AddDogfigh

; 1601 : 	{
; 1602 : 		GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 1603 : 		gMainHandler->DropControl();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DropControl@C_Handler@@QAEXXZ		; C_Handler::DropControl

; 1604 : 		CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 1605 : 		return;

	jmp	$LN12@AddDogfigh
$LN10@AddDogfigh:

; 1606 : 	}
; 1607 : 
; 1608 : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv74[ebp]
	sub	edx, 21875				; 00005573H
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 6
	ja	SHORT $LN8@AddDogfigh
	mov	eax, DWORD PTR tv74[ebp]
	jmp	DWORD PTR $LN14@AddDogfigh[eax*4]
$LN7@AddDogfigh:

; 1609 : 	{
; 1610 : 		case ADD_CRIMSON_PLANE:
; 1611 : 			AddToTeam=DF_CRIMSON_CALLS;

	mov	ecx, 21915				; 0000559bH
	mov	WORD PTR _AddToTeam, cx

; 1612 : 			break;

	jmp	SHORT $LN8@AddDogfigh
$LN6@AddDogfigh:

; 1613 : 		case ADD_SHARK_PLANE:
; 1614 : 			AddToTeam=DF_SHARK_CALLS;

	mov	edx, 21916				; 0000559cH
	mov	WORD PTR _AddToTeam, dx

; 1615 : 			break;

	jmp	SHORT $LN8@AddDogfigh
$LN5@AddDogfigh:

; 1616 : 		case ADD_USA_PLANE:
; 1617 : 			AddToTeam=DF_TBIRD_CALLS;

	mov	eax, 21917				; 0000559dH
	mov	WORD PTR _AddToTeam, ax

; 1618 : 			break;

	jmp	SHORT $LN8@AddDogfigh
$LN4@AddDogfigh:

; 1619 : 		case ADD_TIGER_PLANE:
; 1620 : 			AddToTeam=DF_TIGER_CALLS;

	mov	ecx, 21914				; 0000559aH
	mov	WORD PTR _AddToTeam, cx

; 1621 : 			break;

	jmp	SHORT $LN8@AddDogfigh
$LN3@AddDogfigh:

; 1622 : 		case ADD_FURBALL_PLANE:
; 1623 : 			AddToTeam=DF_FURBALL_CALLS;

	mov	edx, 21913				; 00005599H
	mov	WORD PTR _AddToTeam, dx
$LN8@AddDogfigh:

; 1624 : 			break;
; 1625 : 	}
; 1626 : 
; 1627 : 	win=gMainHandler->FindWindow(DF_FLIGHT_WIN);

	push	21920					; 000055a0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1628 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@AddDogfigh

; 1629 : 	{
; 1630 : 		lbox=(C_ListBox*)win->FindControl(AddToTeam);

	movsx	eax, WORD PTR _AddToTeam
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1631 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN2@AddDogfigh

; 1632 : 		{
; 1633 : 			win->HideCluster(lbox->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1634 : 			win->HideCluster(lbox->GetUserNumber(2));

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1635 : 			win->HideCluster(lbox->GetUserNumber(3));

	push	3
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1636 : 			win->HideCluster(lbox->GetUserNumber(4));

	push	4
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1637 : 			win->UnHideCluster(lbox->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN2@AddDogfigh:

; 1638 : 		}
; 1639 : 	}
; 1640 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN12@AddDogfigh:

; 1641 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@AddDogfigh:
	DD	$LN7@AddDogfigh
	DD	$LN6@AddDogfigh
	DD	$LN5@AddDogfigh
	DD	$LN4@AddDogfigh
	DD	$LN8@AddDogfigh
	DD	$LN8@AddDogfigh
	DD	$LN3@AddDogfigh
?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ENDP		; AddDogfightAICB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_type$ = -48						; size = 4
tv168 = -44						; size = 4
_callgroup$ = -40					; size = 4
tv78 = -36						; size = 4
_skill$ = -32						; size = 4
_idx$ = -28						; size = 4
_acid$ = -24						; size = 4
_value$ = -20						; size = 4
tv94 = -16						; size = 4
_flight$ = -12						; size = 4
_teamid$ = -8						; size = 4
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AddDogfightFlightCB@@YAXJFPAVC_Base@@@Z PROC		; AddDogfightFlightCB

; 1518 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 1519 : 	Flight	flight=NULL;

	mov	DWORD PTR _flight$[ebp], 0

; 1520 : 	long	teamid=0,skill=0,acid=0,idx=0,type=0,callgroup=0;

	mov	DWORD PTR _teamid$[ebp], 0
	mov	DWORD PTR _skill$[ebp], 0
	mov	DWORD PTR _acid$[ebp], 0
	mov	DWORD PTR _idx$[ebp], 0
	mov	DWORD PTR _type$[ebp], 0
	mov	DWORD PTR _callgroup$[ebp], 0

; 1521 : 	C_ListBox *lbox=NULL;

	mov	DWORD PTR _lbox$[ebp], 0

; 1522 : 	long value=0;

	mov	DWORD PTR _value$[ebp], 0

; 1523 : 
; 1524 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN22@AddDogfigh

; 1525 : 		return;

	jmp	$LN23@AddDogfigh
$LN22@AddDogfigh:

; 1526 : 
; 1527 : 	if (!FalconLocalGame || FalconLocalSession->Game() == vuPlayerPoolGroup)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN25@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN26@AddDogfigh
$LN25@AddDogfigh:
	mov	DWORD PTR tv78[ebp], 0
$LN26@AddDogfigh:
	cmp	DWORD PTR tv78[ebp], 0
	je	SHORT $LN20@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	jne	SHORT $LN21@AddDogfigh
$LN20@AddDogfigh:

; 1528 : 		return;

	jmp	$LN23@AddDogfigh
$LN21@AddDogfigh:

; 1529 : 
; 1530 : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 1531 : 	switch(AddToTeam)

	movsx	edx, WORD PTR _AddToTeam
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	sub	eax, 21913				; 00005599H
	mov	DWORD PTR tv94[ebp], eax
	cmp	DWORD PTR tv94[ebp], 4
	ja	SHORT $LN18@AddDogfigh
	mov	ecx, DWORD PTR tv94[ebp]
	jmp	DWORD PTR $LN27@AddDogfigh[ecx*4]
$LN17@AddDogfigh:

; 1532 : 	{
; 1533 : 		case DF_CRIMSON_CALLS:
; 1534 : 			teamid=1;

	mov	DWORD PTR _teamid$[ebp], 1

; 1535 : 			break;

	jmp	SHORT $LN18@AddDogfigh
$LN16@AddDogfigh:

; 1536 : 		case DF_SHARK_CALLS:
; 1537 : 			teamid=2;

	mov	DWORD PTR _teamid$[ebp], 2

; 1538 : 			break;

	jmp	SHORT $LN18@AddDogfigh
$LN15@AddDogfigh:

; 1539 : 		case DF_TBIRD_CALLS:
; 1540 : 			teamid=3;

	mov	DWORD PTR _teamid$[ebp], 3

; 1541 : 			break;

	jmp	SHORT $LN18@AddDogfigh
$LN14@AddDogfigh:

; 1542 : 		case DF_TIGER_CALLS:
; 1543 : 			teamid=4;

	mov	DWORD PTR _teamid$[ebp], 4

; 1544 : 			break;

	jmp	SHORT $LN18@AddDogfigh
$LN13@AddDogfigh:

; 1545 : 		case DF_FURBALL_CALLS:
; 1546 : 			teamid=0;

	mov	DWORD PTR _teamid$[ebp], 0
$LN18@AddDogfigh:

; 1547 : 			break;
; 1548 : 	}
; 1549 : 
; 1550 : 	lbox=(C_ListBox*)control->Parent_->FindControl(AddToTeam);

	movsx	edx, WORD PTR _AddToTeam
	push	edx
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1551 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN12@AddDogfigh

; 1552 : 		value=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _value$[ebp], eax
$LN12@AddDogfigh:

; 1553 : 
; 1554 : 	if(teamid)

	cmp	DWORD PTR _teamid$[ebp], 0
	je	SHORT $LN11@AddDogfigh

; 1555 : 		callgroup=value-1;

	mov	ecx, DWORD PTR _value$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _callgroup$[ebp], ecx

; 1556 : 	else

	jmp	SHORT $LN10@AddDogfigh
$LN11@AddDogfigh:

; 1557 : 	{
; 1558 : 		callgroup=0;

	mov	DWORD PTR _callgroup$[ebp], 0

; 1559 : 		teamid=value;

	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _teamid$[ebp], edx
$LN10@AddDogfigh:

; 1560 : 	}
; 1561 : 
; 1562 : 	lbox=(C_ListBox*)control->Parent_->FindControl(DF_AIRCRAFT_TYPE);

	push	21919					; 0000559fH
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1563 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN9@AddDogfigh

; 1564 : 		acid=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _acid$[ebp], eax

; 1565 : 	else

	jmp	SHORT $LN8@AddDogfigh
$LN9@AddDogfigh:

; 1566 : 		acid=DF_AC_F16C;

	mov	DWORD PTR _acid$[ebp], 21148		; 0000529cH
$LN8@AddDogfigh:

; 1567 : 
; 1568 : 	lbox=(C_ListBox*)control->Parent_->FindControl(DF_SKILL);

	push	21918					; 0000559eH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1569 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN7@AddDogfigh

; 1570 : 		skill=lbox->GetTextID()-1;

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	sub	eax, 1
	mov	DWORD PTR _skill$[ebp], eax

; 1571 : 	else

	jmp	SHORT $LN6@AddDogfigh
$LN7@AddDogfigh:

; 1572 : 		skill=0;

	mov	DWORD PTR _skill$[ebp], 0
$LN6@AddDogfigh:

; 1573 : 
; 1574 : 	switch (SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv168[ebp], eax
	cmp	DWORD PTR tv168[ebp], 0
	jle	SHORT $LN1@AddDogfigh
	cmp	DWORD PTR tv168[ebp], 2
	jle	SHORT $LN3@AddDogfigh
	jmp	SHORT $LN1@AddDogfigh
$LN3@AddDogfigh:

; 1575 : 	{
; 1576 : 		case dog_TeamMatchplay:
; 1577 : 		case dog_TeamFurball:
; 1578 : 			flight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 1579 : 			if(flight && flight->GetTeam() != teamid)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN2@AddDogfigh
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	ecx, DWORD PTR _teamid$[ebp]
	je	SHORT $LN2@AddDogfigh

; 1580 : 				flight=NULL;

	mov	DWORD PTR _flight$[ebp], 0
$LN2@AddDogfigh:

; 1581 : 			break;

	jmp	SHORT $LN4@AddDogfigh
$LN1@AddDogfigh:

; 1582 : 		default:
; 1583 : 			flight=NULL;

	mov	DWORD PTR _flight$[ebp], 0
$LN4@AddDogfigh:

; 1584 : 			break;
; 1585 : 	}
; 1586 : 	idx = GetPlaneListID(acid);

	mov	edx, DWORD PTR _acid$[ebp]
	push	edx
	call	?GetPlaneListID@@YAEJ@Z			; GetPlaneListID
	add	esp, 4
	movzx	eax, al
	mov	DWORD PTR _idx$[ebp], eax

; 1587 : 	type = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_FLIGHT,DFAIPlanes[idx].UnitSType,DFAIPlanes[idx].SPType,VU_ANY,VU_ANY,VU_ANY) + VU_LAST_ENTITY_TYPE;

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	eax, BYTE PTR [edx+ecx+2]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	eax, BYTE PTR [edx+ecx+3]
	push	eax
	push	1
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	add	eax, 100				; 00000064H
	mov	DWORD PTR _type$[ebp], eax

; 1588 : 	AddDogfightAIPlane (flight, type, skill, teamid);

	mov	ecx, DWORD PTR _teamid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _skill$[ebp]
	push	edx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?AddDogfightAIPlane@@YAXPAVFlightClass@@HHH@Z ; AddDogfightAIPlane
	add	esp, 16					; 00000010H

; 1589 : 
; 1590 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN23@AddDogfigh:

; 1591 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@AddDogfigh:
	DD	$LN13@AddDogfigh
	DD	$LN14@AddDogfigh
	DD	$LN17@AddDogfigh
	DD	$LN16@AddDogfigh
	DD	$LN15@AddDogfigh
?AddDogfightFlightCB@@YAXJFPAVC_Base@@@Z ENDP		; AddDogfightFlightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_game$ = -12						; size = 4
_tmpID$ = -8						; size = 4
_item$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectDogfightGameCB@@YAXJFPAVC_Base@@@Z PROC		; SelectDogfightGameCB

; 1446 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1447 : 	VU_ID *tmpID;
; 1448 : 	FalconGameEntity *game;
; 1449 : 	TREELIST *item;
; 1450 : 
; 1451 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN9@SelectDogf

; 1452 : 		return;

	jmp	$LN10@SelectDogf
$LN9@SelectDogf:

; 1453 : 
; 1454 : 	item=((C_TreeList *)control)->GetLastItem();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 1455 : 	if(item == NULL) return;

	cmp	DWORD PTR _item$[ebp], 0
	jne	SHORT $LN8@SelectDogf
	jmp	$LN10@SelectDogf
$LN8@SelectDogf:

; 1456 : 	if(item->Item_ == NULL) return;

	mov	ecx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	jne	SHORT $LN7@SelectDogf
	jmp	$LN10@SelectDogf
$LN7@SelectDogf:

; 1457 : 	if(gCommsMgr->GetGame() != vuPlayerPoolGroup)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetGame
	cmp	eax, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	SHORT $LN6@SelectDogf

; 1458 : 		return;

	jmp	$LN10@SelectDogf
$LN6@SelectDogf:

; 1459 : 
; 1460 : 	if(item->Type_ == C_TYPE_MENU)

	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+4], 49			; 00000031H
	jne	$LN10@SelectDogf

; 1461 : 	{
; 1462 : 		if(!item->Item_->GetState())

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	jne	SHORT $LN4@SelectDogf

; 1463 : 		{
; 1464 : 			((C_TreeList *)control)->SetAllControlStates(0,((C_TreeList *)control)->GetRoot());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 1465 : 			item->Item_->SetState(1);

	push	1
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1466 : 			item->Item_->Refresh();

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1467 : 			tmpID=(VU_ID *)item->Item_->GetUserPtr(_UI95_VU_ID_SLOT_);

	push	6
	mov	ecx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetUserPtr@C_Base@@QAEPAXJ@Z		; C_Base::GetUserPtr
	mov	DWORD PTR _tmpID$[ebp], eax

; 1468 : 			if(tmpID)

	cmp	DWORD PTR _tmpID$[ebp], 0
	je	SHORT $LN3@SelectDogf

; 1469 : 			{
; 1470 : 				game=(FalconGameEntity*)vuDatabase->Find(*tmpID);

	mov	edx, DWORD PTR _tmpID$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _game$[ebp], eax

; 1471 : 				gCommsMgr->LookAtGame(game);

	mov	edx, DWORD PTR _game$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame
$LN3@SelectDogf:

; 1472 : 				if(game)
; 1473 : 				{
; 1474 : //					if(game->GetGameType() == game_Dogfight)
; 1475 : //						gCommsMgr->RequestSettings(game->Id());
; 1476 : 				}
; 1477 : 			}
; 1478 : 		}
; 1479 : 		else

	jmp	SHORT $LN10@SelectDogf
$LN4@SelectDogf:

; 1480 : 		{
; 1481 : 			item->Item_->SetState(0);

	push	0
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 1482 : 			item->Item_->Refresh();

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1483 : 			gCommsMgr->LookAtGame(NULL);

	push	0
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame

; 1484 : 			ClearDFTeamLists();

	call	?ClearDFTeamLists@@YAXXZ		; ClearDFTeamLists
$LN10@SelectDogf:

; 1485 : 		}
; 1486 : 	}
; 1487 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDogfightGameCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectDogfightGameCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_listit$ = -100						; size = 12
$T2 = -88						; size = 8
$T3 = -80						; size = 8
_team$ = -72						; size = 4
tv288 = -68						; size = 4
_flist$ = -64						; size = 4
tv215 = -60						; size = 4
tv158 = -56						; size = 4
_timestamp$ = -52					; size = 4
_furplt$ = -48						; size = 4
_teamplt$ = -44						; size = 4
_tlist$ = -40						; size = 4
_furflt$ = -36						; size = 4
_teamflt$ = -32						; size = 4
_win$ = -28						; size = 4
_unit$ = -24						; size = 4
_ac$ = -20						; size = 4
_flight$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?BuildDFPlayerList@@YAXXZ PROC				; BuildDFPlayerList

; 1263 : void BuildDFPlayerList(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildDFPlayerList@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1264 : 	VuListIterator	listit(AllRealList);

	mov	eax, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	push	eax
	lea	ecx, DWORD PTR _listit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1265 : 	Unit			unit;
; 1266 : 	Flight			flight;
; 1267 : 	int				ac,team;
; 1268 : 	C_Window		*win;
; 1269 : 	C_TreeList		*flist,*tlist;
; 1270 : 	C_Pilot			*furplt,*teamplt;
; 1271 : 	C_Dog_Flight	*furflt,*teamflt;
; 1272 : 	long			timestamp;
; 1273 : 
; 1274 : 	if(!gMainHandler) 

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN34@BuildDFPla

; 1275 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _listit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	jmp	$LN35@BuildDFPla
$LN34@BuildDFPla:

; 1276 : 
; 1277 : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1278 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN33@BuildDFPla

; 1279 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _listit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	jmp	$LN35@BuildDFPla
$LN33@BuildDFPla:

; 1280 : 
; 1281 : 	ClearAllTreeStates();

	call	?ClearAllTreeStates@@YAXXZ		; ClearAllTreeStates

; 1282 : 
; 1283 : 	timestamp=GetCurrentTime();

	call	DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR _timestamp$[ebp], eax

; 1284 : 	unit = (Unit)listit.GetFirst();

	lea	ecx, DWORD PTR _listit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _unit$[ebp], eax
$LN32@BuildDFPla:

; 1285 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	$LN31@BuildDFPla

; 1286 : 		{
; 1287 : 		if (unit->IsFlight() && !unit->IsDead())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	$LN30@BuildDFPla
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+552]
	call	eax
	test	eax, eax
	jne	$LN30@BuildDFPla

; 1288 : 			{
; 1289 : 			// Add this flight and all aircraft to our trees
; 1290 : 			flight = (Flight)unit;

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _flight$[ebp], ecx

; 1291 : 
; 1292 : 			// Add FLIGHT to Furball Tree
; 1293 : 			flist=(C_TreeList *)win->FindControl(FURBALL_TREE);

	push	21804					; 0000552cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _flist$[ebp], eax

; 1294 : 			furflt=AddDogfightFlight(flist, flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _flist$[ebp]
	push	eax
	call	?AddDogfightFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ; AddDogfightFlight
	add	esp, 8
	mov	DWORD PTR _furflt$[ebp], eax

; 1295 : 			if(furflt)

	cmp	DWORD PTR _furflt$[ebp], 0
	je	SHORT $LN29@BuildDFPla

; 1296 : 				furflt->SetUserNumber(0,timestamp);

	mov	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _furflt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN29@BuildDFPla:

; 1297 : 
; 1298 : 			// Add FLIGHT to Team Tree
; 1299 : 			team=flight->GetTeam();

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 1300 : 			switch(team)

	mov	ecx, DWORD PTR _team$[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	cmp	DWORD PTR tv158[ebp], 1
	je	SHORT $LN26@BuildDFPla
	cmp	DWORD PTR tv158[ebp], 2
	je	SHORT $LN25@BuildDFPla
	cmp	DWORD PTR tv158[ebp], 3
	je	SHORT $LN24@BuildDFPla
	jmp	SHORT $LN23@BuildDFPla
$LN26@BuildDFPla:

; 1301 : 			{
; 1302 : 				case 1:
; 1303 : 					tlist=(C_TreeList *)win->FindControl(CRIMSON_TREE);

	push	21800					; 00005528H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tlist$[ebp], eax

; 1304 : 					break;

	jmp	SHORT $LN27@BuildDFPla
$LN25@BuildDFPla:

; 1305 : 				case 2:
; 1306 : 					tlist=(C_TreeList *)win->FindControl(SHARK_TREE);

	push	21801					; 00005529H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tlist$[ebp], eax

; 1307 : 					break;

	jmp	SHORT $LN27@BuildDFPla
$LN24@BuildDFPla:

; 1308 : 				case 3:
; 1309 : 					tlist=(C_TreeList *)win->FindControl(VIPER_TREE);

	push	21802					; 0000552aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tlist$[ebp], eax

; 1310 : 					break;

	jmp	SHORT $LN27@BuildDFPla
$LN23@BuildDFPla:

; 1311 : 				case 4:
; 1312 : 				default:
; 1313 : 					tlist=(C_TreeList *)win->FindControl(TIGER_TREE);

	push	21803					; 0000552bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tlist$[ebp], eax
$LN27@BuildDFPla:

; 1314 : 					break;
; 1315 : 			}
; 1316 : 			teamflt=AddDogfightFlight(tlist, flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _tlist$[ebp]
	push	eax
	call	?AddDogfightFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ; AddDogfightFlight
	add	esp, 8
	mov	DWORD PTR _teamflt$[ebp], eax

; 1317 : 			if(teamflt)

	cmp	DWORD PTR _teamflt$[ebp], 0
	je	SHORT $LN22@BuildDFPla

; 1318 : 				teamflt->SetUserNumber(0,timestamp);

	mov	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _teamflt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN22@BuildDFPla:

; 1319 : 
; 1320 : 			if(gCurrentFlightID == flight->Id())

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, OFFSET ?gCurrentFlightID@@3VVU_ID@@A ; gCurrentFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@BuildDFPla

; 1321 : 			{
; 1322 : 				switch (SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv215[ebp], eax
	cmp	DWORD PTR tv215[ebp], 0
	jle	SHORT $LN16@BuildDFPla
	cmp	DWORD PTR tv215[ebp], 2
	jle	SHORT $LN18@BuildDFPla
	jmp	SHORT $LN16@BuildDFPla
$LN18@BuildDFPla:

; 1323 : 				{
; 1324 : 					case dog_TeamFurball:
; 1325 : 					case dog_TeamMatchplay:
; 1326 : 						if(teamflt)

	cmp	DWORD PTR _teamflt$[ebp], 0
	je	SHORT $LN17@BuildDFPla

; 1327 : 							teamflt->SetState(1);

	push	1
	mov	ecx, DWORD PTR _teamflt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _teamflt$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN17@BuildDFPla:

; 1328 : 						break;

	jmp	SHORT $LN21@BuildDFPla
$LN16@BuildDFPla:

; 1329 : 					default:
; 1330 : 						if(furflt)

	cmp	DWORD PTR _furflt$[ebp], 0
	je	SHORT $LN21@BuildDFPla

; 1331 : 							furflt->SetState(1);

	push	1
	mov	ecx, DWORD PTR _furflt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _furflt$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN21@BuildDFPla:

; 1332 : 						break;
; 1333 : 				}
; 1334 : 			}
; 1335 : 			for (ac=0; ac<PILOTS_PER_FLIGHT; ac++)

	mov	DWORD PTR _ac$[ebp], 0
	jmp	SHORT $LN14@BuildDFPla
$LN13@BuildDFPla:
	mov	ecx, DWORD PTR _ac$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ac$[ebp], ecx
$LN14@BuildDFPla:
	cmp	DWORD PTR _ac$[ebp], 4
	jge	$LN30@BuildDFPla

; 1336 : 			{
; 1337 : 				if (flight->pilots[ac] != NO_PILOT || flight->player_slots[ac] != NO_PILOT)

	mov	edx, DWORD PTR _flight$[ebp]
	add	edx, DWORD PTR _ac$[ebp]
	movzx	eax, BYTE PTR [edx+412]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN10@BuildDFPla
	mov	ecx, DWORD PTR _flight$[ebp]
	add	ecx, DWORD PTR _ac$[ebp]
	movzx	edx, BYTE PTR [ecx+420]
	cmp	edx, 255				; 000000ffH
	je	$LN11@BuildDFPla
$LN10@BuildDFPla:

; 1338 : 				{
; 1339 : 					// Add PLAYER to Furball Tree
; 1340 : 					furplt=AddDogfightPilot(flist, flight, ac);

	mov	eax, DWORD PTR _ac$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flist$[ebp]
	push	edx
	call	?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z ; AddDogfightPilot
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _furplt$[ebp], eax

; 1341 : 					if(furplt)

	cmp	DWORD PTR _furplt$[ebp], 0
	je	SHORT $LN9@BuildDFPla

; 1342 : 						furplt->SetUserNumber(0,timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _furplt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN9@BuildDFPla:

; 1343 : 
; 1344 : 					// Add PLAYER to Team Tree
; 1345 : 					teamplt=AddDogfightPilot(tlist, flight, ac);

	mov	ecx, DWORD PTR _ac$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _tlist$[ebp]
	push	eax
	call	?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z ; AddDogfightPilot
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _teamplt$[ebp], eax

; 1346 : 					if(teamplt)

	cmp	DWORD PTR _teamplt$[ebp], 0
	je	SHORT $LN8@BuildDFPla

; 1347 : 						teamplt->SetUserNumber(0,timestamp);

	mov	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _teamplt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN8@BuildDFPla:

; 1348 : 
; 1349 : 					if(gCurrentFlightID == flight->Id() && gCurrentAircraftNum == ac)

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, OFFSET ?gCurrentFlightID@@3VVU_ID@@A ; gCurrentFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@BuildDFPla
	movsx	ecx, WORD PTR ?gCurrentAircraftNum@@3FA	; gCurrentAircraftNum
	cmp	ecx, DWORD PTR _ac$[ebp]
	jne	SHORT $LN11@BuildDFPla

; 1350 : 					{
; 1351 : 						switch (SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv288[ebp], eax
	cmp	DWORD PTR tv288[ebp], 0
	jle	SHORT $LN2@BuildDFPla
	cmp	DWORD PTR tv288[ebp], 2
	jle	SHORT $LN4@BuildDFPla
	jmp	SHORT $LN2@BuildDFPla
$LN4@BuildDFPla:

; 1352 : 						{
; 1353 : 							case dog_TeamFurball:
; 1354 : 							case dog_TeamMatchplay:
; 1355 : 								if(teamplt)

	cmp	DWORD PTR _teamplt$[ebp], 0
	je	SHORT $LN3@BuildDFPla

; 1356 : 									teamplt->SetState(1);

	push	1
	mov	edx, DWORD PTR _teamplt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _teamplt$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN3@BuildDFPla:

; 1357 : 								break;

	jmp	SHORT $LN11@BuildDFPla
$LN2@BuildDFPla:

; 1358 : 							default:
; 1359 : 								if(furplt)

	cmp	DWORD PTR _furplt$[ebp], 0
	je	SHORT $LN11@BuildDFPla

; 1360 : 									furplt->SetState(1);

	push	1
	mov	eax, DWORD PTR _furplt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _furplt$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN11@BuildDFPla:

; 1361 : 								break;
; 1362 : 						}
; 1363 : 					}
; 1364 : 				}
; 1365 : 			}

	jmp	$LN13@BuildDFPla
$LN30@BuildDFPla:

; 1366 : 		}
; 1367 : 		unit = (Unit)listit.GetNext();

	lea	ecx, DWORD PTR _listit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _unit$[ebp], eax

; 1368 : 	}

	jmp	$LN32@BuildDFPla
$LN31@BuildDFPla:

; 1369 : 	// Erase everything with UserNumber(0) != timestamp
; 1370 : 	ClearOldDFInfo(timestamp);

	mov	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	call	?ClearOldDFInfo@@YAXJ@Z			; ClearOldDFInfo
	add	esp, 4

; 1371 : 	CheckDelButtons();

	call	?CheckDelButtons@@YAXXZ			; CheckDelButtons

; 1372 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton

; 1373 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _listit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN35@BuildDFPla:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildDFPlayerList@@YAXXZ$0:
	lea	ecx, DWORD PTR _listit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?BuildDFPlayerList@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildDFPlayerList@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildDFPlayerList@@YAXXZ ENDP				; BuildDFPlayerList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_tree$ = -4						; size = 4
_timestamp$ = 8						; size = 4
?ClearOldDFInfo@@YAXJ@Z PROC				; ClearOldDFInfo

; 1213 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1214 : 	C_Window *win;
; 1215 : 	C_TreeList *tree;
; 1216 : 
; 1217 : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1218 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN12@ClearOldDF

; 1219 : 	{
; 1220 : 		tree=(C_TreeList *)win->FindControl(FURBALL_TREE);

	push	21804					; 0000552cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1221 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN10@ClearOldDF

; 1222 : 		{
; 1223 : 			EraseOldLimbs(tree,tree->GetRoot(),timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	push	ecx
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH

; 1224 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1225 : 			if(tree->Parent_)

	mov	edx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $LN10@ClearOldDF

; 1226 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN10@ClearOldDF:

; 1227 : 		}
; 1228 : 		tree=(C_TreeList *)win->FindControl(CRIMSON_TREE);

	push	21800					; 00005528H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1229 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN8@ClearOldDF

; 1230 : 		{
; 1231 : 			EraseOldLimbs(tree,tree->GetRoot(),timestamp);

	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH

; 1232 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1233 : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN8@ClearOldDF

; 1234 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN8@ClearOldDF:

; 1235 : 		}
; 1236 : 		tree=(C_TreeList *)win->FindControl(SHARK_TREE);

	push	21801					; 00005529H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1237 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN6@ClearOldDF

; 1238 : 		{
; 1239 : 			EraseOldLimbs(tree,tree->GetRoot(),timestamp);

	mov	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH

; 1240 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1241 : 			if(tree->Parent_)

	mov	eax, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN6@ClearOldDF

; 1242 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN6@ClearOldDF:

; 1243 : 		}
; 1244 : 		tree=(C_TreeList *)win->FindControl(TIGER_TREE);

	push	21803					; 0000552bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1245 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@ClearOldDF

; 1246 : 		{
; 1247 : 			EraseOldLimbs(tree,tree->GetRoot(),timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	push	ecx
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH

; 1248 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1249 : 			if(tree->Parent_)

	mov	edx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $LN4@ClearOldDF

; 1250 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@ClearOldDF:

; 1251 : 		}
; 1252 : 		tree=(C_TreeList *)win->FindControl(VIPER_TREE);

	push	21802					; 0000552aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1253 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN12@ClearOldDF

; 1254 : 		{
; 1255 : 			EraseOldLimbs(tree,tree->GetRoot(),timestamp);

	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH

; 1256 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1257 : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN12@ClearOldDF

; 1258 : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN12@ClearOldDF:

; 1259 : 		}
; 1260 : 	}
; 1261 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearOldDFInfo@@YAXJ@Z ENDP				; ClearOldDFInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_cur$ = -8						; size = 4
_item$ = -4						; size = 4
_tree$ = 8						; size = 4
_first$ = 12						; size = 4
_timestamp$ = 16					; size = 4
?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z PROC	; EraseOldLimbs

; 1193 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1194 : 	TREELIST *item,*cur;
; 1195 : 
; 1196 : 	cur=first;

	mov	eax, DWORD PTR _first$[ebp]
	mov	DWORD PTR _cur$[ebp], eax
$LN6@EraseOldLi:

; 1197 : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN7@EraseOldLi

; 1198 : 	{
; 1199 : 		item=cur;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR _item$[ebp], ecx

; 1200 : 		cur=cur->Next;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR _cur$[ebp], eax

; 1201 : 		if(item->Item_ && item->Item_->GetUserNumber(0) != timestamp)

	mov	ecx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN4@EraseOldLi
	push	0
	mov	edx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, DWORD PTR _timestamp$[ebp]
	je	SHORT $LN4@EraseOldLi

; 1202 : 		{
; 1203 : 			if(item->Child)

	mov	eax, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN3@EraseOldLi

; 1204 : 				tree->DeleteBranch(item->Child);

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN3@EraseOldLi:

; 1205 : 			tree->DeleteItem(item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem
	jmp	SHORT $LN2@EraseOldLi
$LN4@EraseOldLi:

; 1206 : 		}
; 1207 : 		else if(item->Child)

	mov	ecx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN2@EraseOldLi

; 1208 : 			EraseOldLimbs(tree,item->Child,timestamp);

	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ; EraseOldLimbs
	add	esp, 12					; 0000000cH
$LN2@EraseOldLi:

; 1209 : 	}

	jmp	SHORT $LN6@EraseOldLi
$LN7@EraseOldLi:

; 1210 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EraseOldLimbs@@YAXPAVC_TreeList@@PAVTREELIST@@J@Z ENDP	; EraseOldLimbs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_dfflight$ = -12					; size = 4
_item$ = -8						; size = 4
_ID$ = -4						; size = 4
_list$ = 8						; size = 4
_flight$ = 12						; size = 4
?AddDogfightFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z PROC ; AddDogfightFlight

; 1158 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1159 : 	C_Dog_Flight	*dfflight;
; 1160 : 	TREELIST		*item;
; 1161 : 	long			ID;
; 1162 : 
; 1163 : 	// Create a unique ID
; 1164 : 	ID  = flight->GetTeam() << 24;

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _ID$[ebp], ecx

; 1165 : 	ID |= flight->callsign_id << 16;

	mov	edx, DWORD PTR _flight$[ebp]
	movzx	eax, BYTE PTR [edx+425]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _ID$[ebp], eax

; 1166 : 	ID |= flight->callsign_num << 8;

	mov	ecx, DWORD PTR _flight$[ebp]
	movzx	edx, BYTE PTR [ecx+426]
	shl	edx, 8
	or	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _ID$[ebp], edx

; 1167 : 
; 1168 : 	if (!list)

	cmp	DWORD PTR _list$[ebp], 0
	jne	SHORT $LN4@AddDogfigh

; 1169 : 		return(NULL);

	xor	eax, eax
	jmp	$LN5@AddDogfigh
$LN4@AddDogfigh:

; 1170 : 	item=list->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _item$[ebp], eax

; 1171 : 	if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN3@AddDogfigh

; 1172 : 	{
; 1173 : 		UpdateFlight((C_Dog_Flight*)item->Item_,flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?UpdateFlight@@YAXPAVC_Dog_Flight@@PAVFlightClass@@@Z ; UpdateFlight
	add	esp, 8

; 1174 : 		return((C_Dog_Flight*)item->Item_);

	mov	ecx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	jmp	SHORT $LN5@AddDogfigh
$LN3@AddDogfigh:

; 1175 : 	}
; 1176 : 
; 1177 : 	dfflight=MakeFlight(list,flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ; MakeFlight
	add	esp, 8
	mov	DWORD PTR _dfflight$[ebp], eax

; 1178 : 			
; 1179 : 	if(!dfflight)

	cmp	DWORD PTR _dfflight$[ebp], 0
	jne	SHORT $LN2@AddDogfigh

; 1180 : 		return(NULL);

	xor	eax, eax
	jmp	SHORT $LN5@AddDogfigh
$LN2@AddDogfigh:

; 1181 : 
; 1182 : 	item=list->CreateItem(ID,C_TYPE_MENU,dfflight);

	mov	ecx, DWORD PTR _dfflight$[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1183 : 	list->AddItem(list->GetRoot(),item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 1184 : 	list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1185 : 
; 1186 : 	if(list->GetParent())

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	test	eax, eax
	je	SHORT $LN1@AddDogfigh

; 1187 : 		list->GetParent()->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@AddDogfigh:

; 1188 : 
; 1189 : 	return(dfflight);

	mov	eax, DWORD PTR _dfflight$[ebp]
$LN5@AddDogfigh:

; 1190 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddDogfightFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ENDP ; AddDogfightFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_sit$2 = -80						; size = 12
$T3 = -68						; size = 4
_str$ = -64						; size = 4
tv221 = -60						; size = 4
tv202 = -56						; size = 4
tv143 = -52						; size = 4
_count$ = -48						; size = 4
_fltctrl$ = -44						; size = 4
_cur$ = -40						; size = 4
_found$ = -36						; size = 4
_flt$ = -32						; size = 4
_item$ = -28						; size = 4
_session$4 = -24					; size = 4
_ID$ = -20						; size = 4
_pilot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
_flight$ = 12						; size = 4
_ac$ = 16						; size = 4
?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z PROC ; AddDogfightPilot

; 1034 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1035 : 	C_Pilot			*pilot;
; 1036 : 	C_Dog_Flight	*fltctrl;
; 1037 : 	TREELIST		*item,*flt,*cur;
; 1038 : 	_TCHAR			*str;
; 1039 : 	long			ID,count;
; 1040 : 	int				found=0;

	mov	DWORD PTR _found$[ebp], 0

; 1041 : 
; 1042 : 	// Create a unique ID
; 1043 : 	ID  = flight->GetTeam() << 24;

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _ID$[ebp], ecx

; 1044 : 	ID |= flight->callsign_id << 16;

	mov	edx, DWORD PTR _flight$[ebp]
	movzx	eax, BYTE PTR [edx+425]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _ID$[ebp], eax

; 1045 : 	ID |= flight->callsign_num << 8;

	mov	ecx, DWORD PTR _flight$[ebp]
	movzx	edx, BYTE PTR [ecx+426]
	shl	edx, 8
	or	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _ID$[ebp], edx

; 1046 : 	ID |= (ac+1);

	mov	eax, DWORD PTR _ac$[ebp]
	add	eax, 1
	or	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR _ID$[ebp], eax

; 1047 : 
; 1048 : 	if (!list)

	cmp	DWORD PTR _list$[ebp], 0
	jne	SHORT $LN29@AddDogfigh

; 1049 : 		return(NULL);

	xor	eax, eax
	jmp	$LN30@AddDogfigh
$LN29@AddDogfigh:

; 1050 : 	item=list->Find(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _item$[ebp], eax

; 1051 : 	if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN28@AddDogfigh

; 1052 : 	{
; 1053 : 		pilot=(C_Pilot*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _pilot$[ebp], eax

; 1054 : 		if(pilot)

	cmp	DWORD PTR _pilot$[ebp], 0
	je	$LN28@AddDogfigh

; 1055 : 		{
; 1056 : 			if(!pilot->GetPlayer())

	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?GetPlayer@C_Pilot@@QAEFXZ		; C_Pilot::GetPlayer
	movsx	ecx, ax
	test	ecx, ecx
	jne	$LN26@AddDogfigh

; 1057 : 			{
; 1058 : 				if(pilot->GetSkill() != flight->pilots[ac])

	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?GetSkill@C_Pilot@@QAEFXZ		; C_Pilot::GetSkill
	movsx	edx, ax
	mov	eax, DWORD PTR _flight$[ebp]
	add	eax, DWORD PTR _ac$[ebp]
	movzx	ecx, BYTE PTR [eax+412]
	cmp	edx, ecx
	je	$LN26@AddDogfigh

; 1059 : 				{
; 1060 : 					switch(flight->pilots[ac])

	mov	edx, DWORD PTR _flight$[ebp]
	add	edx, DWORD PTR _ac$[ebp]
	movzx	eax, BYTE PTR [edx+412]
	mov	DWORD PTR tv143[ebp], eax
	cmp	DWORD PTR tv143[ebp], 4
	ja	$LN26@AddDogfigh
	mov	ecx, DWORD PTR tv143[ebp]
	jmp	DWORD PTR $LN38@AddDogfigh[ecx*4]
$LN22@AddDogfigh:

; 1061 : 					{
; 1062 : 						case 0:
; 1063 : 							pilot->SetCallsign(0,0,gStringMgr->GetString(TXT_RECRUIT));

	push	161					; 000000a1H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign

; 1064 : 							break;

	jmp	SHORT $LN26@AddDogfigh
$LN21@AddDogfigh:

; 1065 : 						case 1:
; 1066 : 							pilot->SetCallsign(0,0,gStringMgr->GetString(TXT_CADET));

	push	160					; 000000a0H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign

; 1067 : 							break;

	jmp	SHORT $LN26@AddDogfigh
$LN20@AddDogfigh:

; 1068 : 						case 2:
; 1069 : 							pilot->SetCallsign(0,0,gStringMgr->GetString(TXT_ROOKIE));

	push	159					; 0000009fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign

; 1070 : 							break;

	jmp	SHORT $LN26@AddDogfigh
$LN19@AddDogfigh:

; 1071 : 						case 3:
; 1072 : 							pilot->SetCallsign(0,0,gStringMgr->GetString(TXT_VETERAN));

	push	158					; 0000009eH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign

; 1073 : 							break;

	jmp	SHORT $LN26@AddDogfigh
$LN18@AddDogfigh:

; 1074 : 						case 4:
; 1075 : 							pilot->SetCallsign(0,0,gStringMgr->GetString(TXT_ACE));

	push	157					; 0000009dH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign
$LN26@AddDogfigh:

; 1076 : 							break;
; 1077 : 					}
; 1078 : 				}
; 1079 : 			}
; 1080 : 			return(pilot);

	mov	eax, DWORD PTR _pilot$[ebp]
	jmp	$LN30@AddDogfigh
$LN28@AddDogfigh:

; 1081 : 		}
; 1082 : 	}
; 1083 : 
; 1084 : 	flt=list->Find(ID & 0xffffff00);

	mov	edx, DWORD PTR _ID$[ebp]
	and	edx, -256				; ffffff00H
	push	edx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?Find@C_TreeList@@QAEPAVTREELIST@@J@Z	; C_TreeList::Find
	mov	DWORD PTR _flt$[ebp], eax

; 1085 : 	if(!flt)

	cmp	DWORD PTR _flt$[ebp], 0
	jne	SHORT $LN17@AddDogfigh

; 1086 : 		return(NULL);

	xor	eax, eax
	jmp	$LN30@AddDogfigh
$LN17@AddDogfigh:

; 1087 : 
; 1088 : 	if (flight->player_slots[ac] != 255)

	mov	eax, DWORD PTR _flight$[ebp]
	add	eax, DWORD PTR _ac$[ebp]
	movzx	ecx, BYTE PTR [eax+420]
	cmp	ecx, 255				; 000000ffH
	je	$LN16@AddDogfigh

; 1089 : 	{
; 1090 : 		if (FalconLocalGame)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN32@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv202[ebp], eax
	jmp	SHORT $LN33@AddDogfigh
$LN32@AddDogfigh:
	mov	DWORD PTR tv202[ebp], 0
$LN33@AddDogfigh:
	cmp	DWORD PTR tv202[ebp], 0
	je	$LN15@AddDogfigh

; 1091 : 		{
; 1092 : 			// Add a player pilot
; 1093 : 			FalconSessionEntity	*session;
; 1094 : 			VuSessionsIterator	sit(FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN34@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv221[ebp], eax
	jmp	SHORT $LN35@AddDogfigh
$LN34@AddDogfigh:
	mov	DWORD PTR tv221[ebp], 0
$LN35@AddDogfigh:
	mov	ecx, DWORD PTR tv221[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sit$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1095 : 
; 1096 : 			// Find this player's session
; 1097 : 			session = (FalconSessionEntity*) sit.GetFirst();

	lea	ecx, DWORD PTR _sit$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$4[ebp], eax
$LN14@AddDogfigh:

; 1098 : 			while (session && !found)

	cmp	DWORD PTR _session$4[ebp], 0
	je	SHORT $LN13@AddDogfigh
	cmp	DWORD PTR _found$[ebp], 0
	jne	SHORT $LN13@AddDogfigh

; 1099 : 			{
; 1100 : 				if (session->GetAircraftNum() == ac && session->GetPlayerFlight() == flight && session->GetPilotSlot() == flight->player_slots[ac])

	mov	ecx, DWORD PTR _session$4[ebp]
	call	?GetAircraftNum@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetAircraftNum
	movzx	edx, al
	cmp	edx, DWORD PTR _ac$[ebp]
	jne	SHORT $LN12@AddDogfigh
	mov	ecx, DWORD PTR _session$4[ebp]
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	cmp	eax, DWORD PTR _flight$[ebp]
	jne	SHORT $LN12@AddDogfigh
	mov	ecx, DWORD PTR _session$4[ebp]
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	eax, al
	mov	ecx, DWORD PTR _flight$[ebp]
	add	ecx, DWORD PTR _ac$[ebp]
	movzx	edx, BYTE PTR [ecx+420]
	cmp	eax, edx
	jne	SHORT $LN12@AddDogfigh

; 1101 : 					found = 1;

	mov	DWORD PTR _found$[ebp], 1

; 1102 : 				else

	jmp	SHORT $LN11@AddDogfigh
$LN12@AddDogfigh:

; 1103 : 					session = (FalconSessionEntity*) sit.GetNext();

	lea	ecx, DWORD PTR _sit$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$4[ebp], eax
$LN11@AddDogfigh:

; 1104 : 			}

	jmp	SHORT $LN14@AddDogfigh
$LN13@AddDogfigh:

; 1105 : 
; 1106 : 			if (!found)

	cmp	DWORD PTR _found$[ebp], 0
	jne	SHORT $LN10@AddDogfigh

; 1107 : 				return(NULL);

	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sit$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN30@AddDogfigh
$LN10@AddDogfigh:

; 1108 : 
; 1109 : 			pilot=MakePilot(list,flight,session,ac,-1);

	push	-1
	mov	eax, DWORD PTR _ac$[ebp]
	push	eax
	mov	ecx, DWORD PTR _session$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z ; MakePilot
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pilot$[ebp], eax

; 1110 : 			pilot->SetPlayer(1);

	push	1
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetPlayer@C_Pilot@@QAEXF@Z		; C_Pilot::SetPlayer

; 1111 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sit$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator

; 1112 : 		else

	jmp	SHORT $LN9@AddDogfigh
$LN15@AddDogfigh:

; 1113 : 		{
; 1114 : 			return NULL;

	xor	eax, eax
	jmp	$LN30@AddDogfigh
$LN9@AddDogfigh:

; 1115 : 		}
; 1116 : 	}
; 1117 : 	else

	jmp	SHORT $LN8@AddDogfigh
$LN16@AddDogfigh:

; 1118 : 	{
; 1119 : 		// Add an AI pilot
; 1120 : 
; 1121 : 		pilot=MakePilot(list,flight,NULL,ac,flight->pilots[ac]);

	mov	ecx, DWORD PTR _flight$[ebp]
	add	ecx, DWORD PTR _ac$[ebp]
	movzx	edx, BYTE PTR [ecx+412]
	push	edx
	mov	eax, DWORD PTR _ac$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	push	edx
	call	?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z ; MakePilot
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pilot$[ebp], eax

; 1122 : 		pilot->SetPlayer(0);

	push	0
	mov	ecx, DWORD PTR _pilot$[ebp]
	call	?SetPlayer@C_Pilot@@QAEXF@Z		; C_Pilot::SetPlayer
$LN8@AddDogfigh:

; 1123 : 	}
; 1124 : 			
; 1125 : 	if(!pilot)

	cmp	DWORD PTR _pilot$[ebp], 0
	jne	SHORT $LN7@AddDogfigh

; 1126 : 		return(NULL);

	xor	eax, eax
	jmp	$LN30@AddDogfigh
$LN7@AddDogfigh:

; 1127 : 
; 1128 : 	item=list->CreateItem(ID,C_TYPE_ITEM,pilot);

	mov	eax, DWORD PTR _pilot$[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1129 : 	list->AddChildItem(flt,item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	eax, DWORD PTR _flt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddChildItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddChildItem

; 1130 : 
; 1131 : 	// Kludge to update the # planes in dogfight
; 1132 : 	fltctrl=(C_Dog_Flight*)flt->Item_;

	mov	ecx, DWORD PTR _flt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _fltctrl$[ebp], edx

; 1133 : 	if(fltctrl)

	cmp	DWORD PTR _fltctrl$[ebp], 0
	je	SHORT $LN6@AddDogfigh

; 1134 : 	{
; 1135 : 		count=0;

	mov	DWORD PTR _count$[ebp], 0

; 1136 : 		cur=flt->Child;

	mov	eax, DWORD PTR _flt$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _cur$[ebp], ecx
$LN5@AddDogfigh:

; 1137 : 		while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN4@AddDogfigh

; 1138 : 		{
; 1139 : 			count++;

	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx

; 1140 : 			cur=cur->Next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _cur$[ebp], ecx

; 1141 : 		};

	jmp	SHORT $LN5@AddDogfigh
$LN4@AddDogfigh:

; 1142 : 
; 1143 : 		if(fltctrl->GetAircraft())

	mov	ecx, DWORD PTR _fltctrl$[ebp]
	call	?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ ; C_Dog_Flight::GetAircraft
	test	eax, eax
	je	SHORT $LN6@AddDogfigh

; 1144 : 		{
; 1145 : 			str=fltctrl->GetAircraft()->GetText();

	mov	ecx, DWORD PTR _fltctrl$[ebp]
	call	?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ ; C_Dog_Flight::GetAircraft
	mov	ecx, eax
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	mov	DWORD PTR _str$[ebp], eax

; 1146 : 			if(str)

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN6@AddDogfigh

; 1147 : 				str[0]=static_cast<char>(count + '0');

	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 48					; 00000030H
	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _str$[ebp]
	mov	BYTE PTR [ecx+eax], dl
$LN6@AddDogfigh:

; 1148 : 		}
; 1149 : 	}
; 1150 : 	list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1151 : 
; 1152 : 	if(list->GetParent())

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	test	eax, eax
	je	SHORT $LN1@AddDogfigh

; 1153 : 		list->GetParent()->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@AddDogfigh:

; 1154 : 	return(pilot);

	mov	eax, DWORD PTR _pilot$[ebp]
$LN30@AddDogfigh:

; 1155 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN38@AddDogfigh:
	DD	$LN22@AddDogfigh
	DD	$LN21@AddDogfigh
	DD	$LN20@AddDogfigh
	DD	$LN19@AddDogfigh
	DD	$LN18@AddDogfigh
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z$0:
	lea	ecx, DWORD PTR _sit$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddDogfightPilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@H@Z ENDP ; AddDogfightPilot
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T1 = -96						; size = 8
$T2 = -88						; size = 8
_ACID$ = -80						; size = 4
_h$ = -76						; size = 4
_w$ = -72						; size = 4
_team$ = -68						; size = 4
_iconresdark$ = -64					; size = 4
_iconreslite$ = -60					; size = 4
_idx$ = -56						; size = 4
_lite$ = -52						; size = 4
_dark$ = -48						; size = 4
_callbuf$ = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_newflt$ = 8						; size = 4
_flight$ = 12						; size = 4
?UpdateFlight@@YAXPAVC_Dog_Flight@@PAVFlightClass@@@Z PROC ; UpdateFlight

; 976  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 977  : 	long team,ACID;
; 978  : 	long idx,w,h;
; 979  : 	C_Resmgr		*iconresdark,*iconreslite;
; 980  : 	IMAGE_RSC		*dark=NULL,*lite=NULL;

	mov	DWORD PTR _dark$[ebp], 0
	mov	DWORD PTR _lite$[ebp], 0

; 981  : 	_TCHAR		callbuf[40];
; 982  : 
; 983  : 	if(!newflt)

	cmp	DWORD PTR _newflt$[ebp], 0
	jne	SHORT $LN8@UpdateFlig

; 984  : 		return;

	jmp	$LN9@UpdateFlig
$LN8@UpdateFlig:

; 985  : 
; 986  : 	// 2002-03-02 ADDED BY S.G. HACK so MP dogfights client sets their class_ptr since they don't get messages to set it.
; 987  : 	flight->class_data = (UnitClassDataType*) Falcon4ClassTable[flight->Type() - VU_LAST_ENTITY_TYPE].dataPtr;

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+eax+77]
	mov	DWORD PTR [ecx+236], eax

; 988  : 	// END OF ADDED SECTION
; 989  : 
; 990  : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 991  : 	team = flight->GetTeam();

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	DWORD PTR _team$[ebp], ecx

; 992  : 	ACID = GetACIDFromFlight(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?GetACIDFromFlight@@YAJPAVFlightClass@@@Z ; GetACIDFromFlight
	add	esp, 4
	mov	DWORD PTR _ACID$[ebp], eax

; 993  : 
; 994  : 	idx=GetPlaneListID(ACID);

	mov	eax, DWORD PTR _ACID$[ebp]
	push	eax
	call	?GetPlaneListID@@YAEJ@Z			; GetPlaneListID
	add	esp, 4
	movzx	ecx, al
	mov	DWORD PTR _idx$[ebp], ecx

; 995  : 	iconresdark=gImageMgr->GetImageRes(DFTeamIconResID[team][0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconresdark$[ebp], eax

; 996  : 	iconreslite=gImageMgr->GetImageRes(DFTeamIconResID[team][1]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconreslite$[ebp], eax

; 997  : 
; 998  : 	newflt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?Setup@C_Dog_Flight@@QAEXJF@Z		; C_Dog_Flight::Setup

; 999  : 	newflt->SetVUID(flight->Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z	; C_Dog_Flight::SetVUID

; 1000 : 
; 1001 : 	// Find AC_Icon in database
; 1002 : 	if(iconresdark)

	cmp	DWORD PTR _iconresdark$[ebp], 0
	je	SHORT $LN7@UpdateFlig

; 1003 : 	{
; 1004 : 		dark=(IMAGE_RSC*)iconresdark->Find(DFAIPlanes[idx].IconID);

	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	ecx, DWORD PTR _iconresdark$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _dark$[ebp], eax

; 1005 : 		if(dark->Header->Type != _RSC_IS_IMAGE_)

	mov	eax, DWORD PTR _dark$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	je	SHORT $LN7@UpdateFlig

; 1006 : 			dark=NULL;

	mov	DWORD PTR _dark$[ebp], 0
$LN7@UpdateFlig:

; 1007 : 	}
; 1008 : 	if(iconreslite)

	cmp	DWORD PTR _iconreslite$[ebp], 0
	je	SHORT $LN5@UpdateFlig

; 1009 : 	{
; 1010 : 		lite=(IMAGE_RSC*)iconreslite->Find(DFAIPlanes[idx].IconID);

	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	mov	ecx, DWORD PTR _iconreslite$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _lite$[ebp], eax

; 1011 : 		if(!lite || lite->Header->Type != _RSC_IS_IMAGE_)

	cmp	DWORD PTR _lite$[ebp], 0
	je	SHORT $LN3@UpdateFlig
	mov	edx, DWORD PTR _lite$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 100			; 00000064H
	je	SHORT $LN5@UpdateFlig
$LN3@UpdateFlig:

; 1012 : 			lite=NULL;

	mov	DWORD PTR _lite$[ebp], 0
$LN5@UpdateFlig:

; 1013 : 	}
; 1014 : 
; 1015 : 	if(dark)

	cmp	DWORD PTR _dark$[ebp], 0
	je	SHORT $LN2@UpdateFlig

; 1016 : 	{
; 1017 : 		w=dark->Header->w;

	mov	ecx, DWORD PTR _dark$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+44]
	mov	DWORD PTR _w$[ebp], eax

; 1018 : 		h=dark->Header->h;

	mov	ecx, DWORD PTR _dark$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+46]
	mov	DWORD PTR _h$[ebp], eax

; 1019 : 		newflt->SetIcon(static_cast<short>(18-w/2),static_cast<short>(15-h/2),dark,lite);

	mov	ecx, DWORD PTR _lite$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dark$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, 15					; 0000000fH
	sub	ecx, eax
	push	ecx
	mov	eax, DWORD PTR _w$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, 18					; 00000012H
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetIcon@C_Dog_Flight@@QAEXFFPAVIMAGE_RSC@@0@Z ; C_Dog_Flight::SetIcon

; 1020 : 	}
; 1021 : 	else

	jmp	SHORT $LN1@UpdateFlig
$LN2@UpdateFlig:

; 1022 : 		newflt->SetIcon(0,0,dark,lite);

	mov	eax, DWORD PTR _lite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dark$[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetIcon@C_Dog_Flight@@QAEXFFPAVIMAGE_RSC@@0@Z ; C_Dog_Flight::SetIcon
$LN1@UpdateFlig:

; 1023 : 	GetCallsign (flight->callsign_id, flight->callsign_num, callbuf);

	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	movzx	ecx, BYTE PTR [eax+426]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	movzx	eax, BYTE PTR [edx+425]
	push	eax
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH

; 1024 : 	newflt->SetCallsign(34,2,callbuf);

	lea	ecx, DWORD PTR _callbuf$[ebp]
	push	ecx
	push	2
	push	34					; 00000022H
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetCallsign@C_Dog_Flight@@QAEXFFPAD@Z	; C_Dog_Flight::SetCallsign

; 1025 : 
; 1026 : 	_stprintf(callbuf,"%1ld %s",flight->GetTotalVehicles(),gStringMgr->GetString(DFAIPlanes[idx].TextID));

	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	ecx, DWORD PTR [eax+edx+8]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	push	eax
	push	OFFSET ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1027 : 
; 1028 : 	newflt->SetAircraft(34,16,callbuf);

	lea	eax, DWORD PTR _callbuf$[ebp]
	push	eax
	push	16					; 00000010H
	push	34					; 00000022H
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetAircraft@C_Dog_Flight@@QAEXFFPAD@Z	; C_Dog_Flight::SetAircraft

; 1029 : 	newflt->SetVUID(flight->Id());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z	; C_Dog_Flight::SetVUID
$LN9@UpdateFlig:

; 1030 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateFlight@@YAXPAVC_Dog_Flight@@PAVFlightClass@@@Z ENDP ; UpdateFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T2 = -124						; size = 8
$T3 = -116						; size = 8
_h$ = -108						; size = 4
_ACID$ = -104						; size = 4
_w$ = -100						; size = 4
$T4 = -96						; size = 4
tv131 = -92						; size = 4
$T5 = -88						; size = 4
_iconreslite$ = -84					; size = 4
_team$ = -80						; size = 4
_iconresdark$ = -76					; size = 4
_idx$ = -72						; size = 4
_lite$ = -68						; size = 4
_dark$ = -64						; size = 4
_newflt$ = -60						; size = 4
_callbuf$ = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
_flight$ = 12						; size = 4
?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z PROC ; MakeFlight

; 917  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 918  : 	long team,ACID;
; 919  : 	long idx,w,h;
; 920  : 	C_Dog_Flight	*newflt;
; 921  : 	C_Resmgr		*iconresdark,*iconreslite;
; 922  : 	IMAGE_RSC		*dark=NULL,*lite=NULL;

	mov	DWORD PTR _dark$[ebp], 0
	mov	DWORD PTR _lite$[ebp], 0

; 923  : 	_TCHAR		callbuf[40];
; 924  : 
; 925  : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 926  : 	team = flight->GetTeam();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	DWORD PTR _team$[ebp], ecx

; 927  : 	ACID = GetACIDFromFlight(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?GetACIDFromFlight@@YAJPAVFlightClass@@@Z ; GetACIDFromFlight
	add	esp, 4
	mov	DWORD PTR _ACID$[ebp], eax

; 928  : 
; 929  : 	idx=GetPlaneListID(ACID);

	mov	eax, DWORD PTR _ACID$[ebp]
	push	eax
	call	?GetPlaneListID@@YAEJ@Z			; GetPlaneListID
	add	esp, 4
	movzx	ecx, al
	mov	DWORD PTR _idx$[ebp], ecx

; 930  : 	iconresdark=gImageMgr->GetImageRes(DFTeamIconResID[team][0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconresdark$[ebp], eax

; 931  : 	iconreslite=gImageMgr->GetImageRes(DFTeamIconResID[team][1]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconreslite$[ebp], eax

; 932  : 
; 933  : 	newflt=new C_Dog_Flight;

	push	148					; 00000094H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN11@MakeFlight
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_Dog_Flight@@QAE@XZ			; C_Dog_Flight::C_Dog_Flight
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN12@MakeFlight
$LN11@MakeFlight:
	mov	DWORD PTR tv131[ebp], 0
$LN12@MakeFlight:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _newflt$[ebp], eax

; 934  : 	ShiAssert (newflt);
; 935  : 	newflt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?Setup@C_Dog_Flight@@QAEXJF@Z		; C_Dog_Flight::Setup

; 936  : 	newflt->SetVUID(flight->Id());

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z	; C_Dog_Flight::SetVUID

; 937  : 
; 938  : 	// Find AC_Icon in database
; 939  : 	if(iconresdark)

	cmp	DWORD PTR _iconresdark$[ebp], 0
	je	SHORT $LN8@MakeFlight

; 940  : 	{
; 941  : 		dark=(IMAGE_RSC*)iconresdark->Find(DFAIPlanes[idx].IconID);

	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	eax, DWORD PTR [edx+ecx+12]
	push	eax
	mov	ecx, DWORD PTR _iconresdark$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _dark$[ebp], eax

; 942  : 		if(!dark || dark->Header->Type != _RSC_IS_IMAGE_)

	cmp	DWORD PTR _dark$[ebp], 0
	je	SHORT $LN6@MakeFlight
	mov	ecx, DWORD PTR _dark$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx], 100			; 00000064H
	je	SHORT $LN8@MakeFlight
$LN6@MakeFlight:

; 943  : 			dark=NULL;

	mov	DWORD PTR _dark$[ebp], 0
$LN8@MakeFlight:

; 944  : 	}
; 945  : 	if(iconreslite)

	cmp	DWORD PTR _iconreslite$[ebp], 0
	je	SHORT $LN5@MakeFlight

; 946  : 	{
; 947  : 		lite=(IMAGE_RSC*)iconreslite->Find(DFAIPlanes[idx].IconID);

	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	ecx, DWORD PTR _iconreslite$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _lite$[ebp], eax

; 948  : 		if(!lite || lite->Header->Type != _RSC_IS_IMAGE_)

	cmp	DWORD PTR _lite$[ebp], 0
	je	SHORT $LN3@MakeFlight
	mov	eax, DWORD PTR _lite$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	je	SHORT $LN5@MakeFlight
$LN3@MakeFlight:

; 949  : 			lite=NULL;

	mov	DWORD PTR _lite$[ebp], 0
$LN5@MakeFlight:

; 950  : 	}
; 951  : 
; 952  : 	if(dark)

	cmp	DWORD PTR _dark$[ebp], 0
	je	SHORT $LN2@MakeFlight

; 953  : 	{
; 954  : 		w=dark->Header->w;

	mov	edx, DWORD PTR _dark$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+44]
	mov	DWORD PTR _w$[ebp], ecx

; 955  : 		h=dark->Header->h;

	mov	edx, DWORD PTR _dark$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	mov	DWORD PTR _h$[ebp], ecx

; 956  : 		newflt->SetIcon(static_cast<short>(18-w/2),static_cast<short>(15-h/2),dark,lite);

	mov	edx, DWORD PTR _lite$[ebp]
	push	edx
	mov	eax, DWORD PTR _dark$[ebp]
	push	eax
	mov	eax, DWORD PTR _h$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, 15					; 0000000fH
	sub	ecx, eax
	push	ecx
	mov	eax, DWORD PTR _w$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, 18					; 00000012H
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetIcon@C_Dog_Flight@@QAEXFFPAVIMAGE_RSC@@0@Z ; C_Dog_Flight::SetIcon

; 957  : 	}
; 958  : 	else

	jmp	SHORT $LN1@MakeFlight
$LN2@MakeFlight:

; 959  : 		newflt->SetIcon(0,0,dark,lite);

	mov	eax, DWORD PTR _lite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dark$[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetIcon@C_Dog_Flight@@QAEXFFPAVIMAGE_RSC@@0@Z ; C_Dog_Flight::SetIcon
$LN1@MakeFlight:

; 960  : 	GetCallsign (flight->callsign_id, flight->callsign_num, callbuf);

	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	movzx	ecx, BYTE PTR [eax+426]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	movzx	eax, BYTE PTR [edx+425]
	push	eax
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH

; 961  : 	newflt->SetCallsign(34,2,callbuf);

	lea	ecx, DWORD PTR _callbuf$[ebp]
	push	ecx
	push	2
	push	34					; 00000022H
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetCallsign@C_Dog_Flight@@QAEXFFPAD@Z	; C_Dog_Flight::SetCallsign

; 962  : 
; 963  : 	_stprintf(callbuf,"%1ld %s",flight->GetTotalVehicles(),gStringMgr->GetString(DFAIPlanes[idx].TextID));

	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	ecx, DWORD PTR [eax+edx+8]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	push	eax
	push	OFFSET ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 964  : 
; 965  : 	newflt->SetAircraft(34,16,callbuf);

	lea	eax, DWORD PTR _callbuf$[ebp]
	push	eax
	push	16					; 00000010H
	push	34					; 00000022H
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetAircraft@C_Dog_Flight@@QAEXFFPAD@Z	; C_Dog_Flight::SetAircraft

; 966  : 	newflt->SetVUID(flight->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z	; C_Dog_Flight::SetVUID

; 967  : 	newflt->SetFont(list->GetFont());

	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 968  : 	newflt->SetParent(list->GetParent());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	call	?SetParent@C_Base@@QAEXPAVC_Window@@@Z	; C_Base::SetParent

; 969  : 	newflt->SetSubParents(list->GetParent());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	eax, DWORD PTR [edx+172]
	call	eax

; 970  : 	newflt->SetMenu(DF_FLIGHT_POPUP);

	push	21259					; 0000530bH
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newflt$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 971  : 	return(newflt);

	mov	eax, DWORD PTR _newflt$[ebp]

; 972  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeFlight@@YAPAVC_Dog_Flight@@PAVC_TreeList@@PAVFlightClass@@@Z ENDP ; MakeFlight
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T2 = -116						; size = 8
_idx$ = -108						; size = 4
_iconresdark$ = -104					; size = 4
_iconreslite$ = -100					; size = 4
_ACID$ = -96						; size = 4
$T3 = -92						; size = 4
tv131 = -88						; size = 4
_team$ = -84						; size = 4
$T4 = -80						; size = 4
tv143 = -76						; size = 4
_newpilot$ = -72					; size = 4
_callbuf$ = -68						; size = 40
_acefactor$ = -28					; size = 10
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
_flight$ = 12						; size = 4
_session$ = 16						; size = 4
_acnum$ = 20						; size = 4
_skill$ = 24						; size = 4
?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z PROC ; MakePilot

; 851  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 852  : 	long team,ACID;
; 853  : 	long idx;
; 854  : 	C_Resmgr	*iconresdark,*iconreslite;
; 855  : 	C_Pilot		*newpilot;
; 856  : 	_TCHAR		callbuf[40];
; 857  : 	_TCHAR      acefactor[10];
; 858  : 
; 859  : 	team = flight->GetTeam();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	DWORD PTR _team$[ebp], ecx

; 860  : 	ACID = GetACIDFromFlight(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?GetACIDFromFlight@@YAJPAVFlightClass@@@Z ; GetACIDFromFlight
	add	esp, 4
	mov	DWORD PTR _ACID$[ebp], eax

; 861  : 
; 862  : 	idx=GetPlaneListID(ACID);

	mov	eax, DWORD PTR _ACID$[ebp]
	push	eax
	call	?GetPlaneListID@@YAEJ@Z			; GetPlaneListID
	add	esp, 4
	movzx	ecx, al
	mov	DWORD PTR _idx$[ebp], ecx

; 863  : 	iconresdark=gImageMgr->GetImageRes(DFTeamIconResID[team][0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconresdark$[ebp], eax

; 864  : 	iconreslite=gImageMgr->GetImageRes(DFTeamIconResID[team][1]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _DFTeamIconResID[edx+eax*8]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _iconreslite$[ebp], eax

; 865  : 
; 866  : 	newpilot=new C_Pilot;

	push	136					; 00000088H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN15@MakePilot
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_Pilot@@QAE@XZ			; C_Pilot::C_Pilot
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN16@MakePilot
$LN15@MakePilot:
	mov	DWORD PTR tv131[ebp], 0
$LN16@MakePilot:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _newpilot$[ebp], eax

; 867  : 	ShiAssert (newpilot);
; 868  : 	newpilot->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?Setup@C_Pilot@@QAEXJF@Z		; C_Pilot::Setup

; 869  : 	newpilot->SetVUID(flight->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?SetVUID@C_Pilot@@QAEXVVU_ID@@@Z	; C_Pilot::SetVUID

; 870  : 
; 871  : //	GetCallsign (flight->callsign_id, flight->callsign_num, buffer);
; 872  : 	// Set Callsign
; 873  : 	switch (skill)

	mov	ecx, DWORD PTR _skill$[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	mov	edx, DWORD PTR tv143[ebp]
	add	edx, 1
	mov	DWORD PTR tv143[ebp], edx
	cmp	DWORD PTR tv143[ebp], 5
	ja	$LN11@MakePilot
	mov	eax, DWORD PTR tv143[ebp]
	jmp	DWORD PTR $LN19@MakePilot[eax*4]
$LN10@MakePilot:

; 874  : 	{
; 875  : 		case -1:
; 876  : 			_tcscpy(callbuf,session->GetPlayerCallsign());

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerCallsign
	push	eax
	lea	ecx, DWORD PTR _callbuf$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 877  : 			_stprintf(acefactor,"(%4.2f)",session->GetAceFactor());

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetAceFactor
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_07JOOPIDMD@?$CI?$CF4?42f?$CJ?$AA@
	lea	edx, DWORD PTR _acefactor$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 878  : 			Uni_Float(acefactor);

	lea	eax, DWORD PTR _acefactor$[ebp]
	push	eax
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 879  : 			_tcscat(callbuf,acefactor);

	lea	ecx, DWORD PTR _acefactor$[ebp]
	push	ecx
	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 880  : 			break;

	jmp	$LN11@MakePilot
$LN9@MakePilot:

; 881  : 		case 0:
; 882  : 			_stprintf(callbuf,"%s",gStringMgr->GetString(TXT_RECRUIT));

	push	161					; 000000a1H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	eax, DWORD PTR _callbuf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 883  : 			break;

	jmp	$LN11@MakePilot
$LN8@MakePilot:

; 884  : 		case 1:
; 885  : 			_stprintf(callbuf,"%s",gStringMgr->GetString(TXT_CADET));

	push	160					; 000000a0H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	ecx, DWORD PTR _callbuf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 886  : 			break;

	jmp	SHORT $LN11@MakePilot
$LN7@MakePilot:

; 887  : 		case 2:
; 888  : 			_stprintf(callbuf,"%s",gStringMgr->GetString(TXT_ROOKIE));

	push	159					; 0000009fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	edx, DWORD PTR _callbuf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 889  : 			break;

	jmp	SHORT $LN11@MakePilot
$LN6@MakePilot:

; 890  : 		case 3:
; 891  : 			_stprintf(callbuf,"%s",gStringMgr->GetString(TXT_VETERAN));

	push	158					; 0000009eH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	eax, DWORD PTR _callbuf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 892  : 			break;

	jmp	SHORT $LN11@MakePilot
$LN5@MakePilot:

; 893  : 		case 4:
; 894  : 			_stprintf(callbuf,"%s",gStringMgr->GetString(TXT_ACE));

	push	157					; 0000009dH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	ecx, DWORD PTR _callbuf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN11@MakePilot:

; 895  : 			break;
; 896  : 	}
; 897  : 	newpilot->SetSkill(static_cast<short>(skill));

	movzx	edx, WORD PTR _skill$[ebp]
	push	edx
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?SetSkill@C_Pilot@@QAEXF@Z		; C_Pilot::SetSkill

; 898  : 	newpilot->SetCallsign(0,0,callbuf);

	lea	eax, DWORD PTR _callbuf$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?SetCallsign@C_Pilot@@QAEXFFPAD@Z	; C_Pilot::SetCallsign

; 899  : 	newpilot->SetFont(list->GetFont());

	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 900  : 	newpilot->SetParent(list->GetParent());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?SetParent@C_Base@@QAEXPAVC_Window@@@Z	; C_Base::SetParent

; 901  : 	newpilot->SetSubParents(list->GetParent());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	eax, DWORD PTR [edx+172]
	call	eax

; 902  : 	newpilot->SetSlot(static_cast<short>(acnum));

	movzx	ecx, WORD PTR _acnum$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newpilot$[ebp]
	call	?SetSlot@C_Pilot@@QAEXF@Z		; C_Pilot::SetSlot

; 903  : 	if(skill == -1)

	cmp	DWORD PTR _skill$[ebp], -1
	jne	SHORT $LN4@MakePilot

; 904  :    {
; 905  :       if (strstr(LogBook.Callsign(), "Super Fly"))

	push	OFFSET ??_C@_09HNIKKFO@Super?5Fly?$AA@
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	call	?strstr@@YAPADPADPBD@Z			; strstr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@MakePilot

; 906  :    		newpilot->SetMenu(DF_AI_PILOT_POPUP);

	push	21260					; 0000530cH
	mov	edx, DWORD PTR _newpilot$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	edx, DWORD PTR [eax+64]
	call	edx

; 907  :       else

	jmp	SHORT $LN2@MakePilot
$LN3@MakePilot:

; 908  :          newpilot->SetMenu(DF_PLAYER_POPUP);

	push	21261					; 0000530dH
	mov	eax, DWORD PTR _newpilot$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
$LN2@MakePilot:

; 909  :    }
; 910  : 	else

	jmp	SHORT $LN1@MakePilot
$LN4@MakePilot:

; 911  : 		newpilot->SetMenu(DF_AI_PILOT_POPUP);

	push	21260					; 0000530cH
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newpilot$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
$LN1@MakePilot:

; 912  : 	return(newpilot);

	mov	eax, DWORD PTR _newpilot$[ebp]

; 913  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@MakePilot:
	DD	$LN10@MakePilot
	DD	$LN9@MakePilot
	DD	$LN8@MakePilot
	DD	$LN7@MakePilot
	DD	$LN6@MakePilot
	DD	$LN5@MakePilot
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakePilot@@YAPAVC_Pilot@@PAVC_TreeList@@PAVFlightClass@@PAVFalconSessionEntity@@HH@Z ENDP ; MakePilot
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_tree$ = -8						; size = 4
_item$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z PROC		; SelectDogfightItemCB

; 818  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 819  : 	C_TreeList *tree;
; 820  : 	TREELIST *item;
; 821  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@SelectDogf

; 822  : 		return;

	jmp	$LN7@SelectDogf
$LN6@SelectDogf:

; 823  : 
; 824  : 	tree=(C_TreeList *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 825  : 	if(!tree)

	cmp	DWORD PTR _tree$[ebp], 0
	jne	SHORT $LN5@SelectDogf

; 826  : 		return;

	jmp	SHORT $LN7@SelectDogf
$LN5@SelectDogf:

; 827  : 
; 828  : 	item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 829  : 	if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@SelectDogf

; 830  : 	{
; 831  : 		ClearAllTreeStates();

	call	?ClearAllTreeStates@@YAXXZ		; ClearAllTreeStates

; 832  : 		if(item->Type_ == C_TYPE_MENU)

	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+4], 49			; 00000031H
	jne	SHORT $LN3@SelectDogf

; 833  : 			SelectDogfightFlightCB(item->ID_,hittype,item->Item_);

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?SelectDogfightFlightCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightFlightCB
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@SelectDogf
$LN3@SelectDogf:

; 834  : 		else if(item->Type_ == C_TYPE_ITEM)

	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+4], 50			; 00000032H
	jne	SHORT $LN4@SelectDogf

; 835  : 		{
; 836  : 			item->Parent->Item_->SetState(1);

	push	1
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 837  : 			SelectDogfightPilotCB(item->ID_,hittype,item->Item_);

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?SelectDogfightPilotCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightPilotCB
	add	esp, 12					; 0000000cH
$LN4@SelectDogf:

; 838  : 		}
; 839  : 	}
; 840  : 	CheckDelButtons();

	call	?CheckDelButtons@@YAXXZ			; CheckDelButtons
$LN7@SelectDogf:

; 841  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectDogfightItemCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectDogfightPilotCB@@YAXJFPAVC_Base@@@Z PROC		; SelectDogfightPilotCB

; 798  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 799  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SelectDogf

; 800  : 		return;

	jmp	$LN4@SelectDogf
$LN3@SelectDogf:

; 801  : 
; 802  : 	if (((C_Pilot*)control)->GetVUID() == gCurrentFlightID)

	push	OFFSET ?gCurrentFlightID@@3VVU_ID@@A	; gCurrentFlightID
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ	; C_Pilot::GetVUID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@SelectDogf

; 803  : 	{
; 804  : 		gCurrentAircraftNum = -1;

	or	eax, -1
	mov	WORD PTR ?gCurrentAircraftNum@@3FA, ax	; gCurrentAircraftNum

; 805  : 		gCurrentFlightID = FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, edx

; 806  : 		control->SetState(0);

	push	0
	mov	eax, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 807  : 	}
; 808  : 	else

	jmp	SHORT $LN4@SelectDogf
$LN2@SelectDogf:

; 809  : 	{
; 810  : 		gCurrentFlightID = ((C_Pilot*)control)->GetVUID();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ	; C_Pilot::GetVUID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, eax

; 811  : 		gCurrentAircraftNum = ((C_Pilot*)control)->GetSlot();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetSlot@C_Pilot@@QAEFXZ		; C_Pilot::GetSlot
	mov	WORD PTR ?gCurrentAircraftNum@@3FA, ax	; gCurrentAircraftNum

; 812  : 		control->SetState(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN4@SelectDogf:

; 813  : 	}
; 814  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDogfightPilotCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectDogfightPilotCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectDogfightFlightCB@@YAXJFPAVC_Base@@@Z PROC	; SelectDogfightFlightCB

; 781  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 782  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SelectDogf

; 783  : 		return;

	jmp	SHORT $LN4@SelectDogf
$LN3@SelectDogf:

; 784  : 	if(((C_Dog_Flight*)control)->GetVUID() == gCurrentFlightID)

	push	OFFSET ?gCurrentFlightID@@3VVU_ID@@A	; gCurrentFlightID
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ	; C_Dog_Flight::GetVUID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@SelectDogf

; 785  : 	{
; 786  : 		gCurrentFlightID = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, ecx

; 787  : 		control->SetState(0);

	push	0
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 788  : 	}
; 789  : 	else

	jmp	SHORT $LN1@SelectDogf
$LN2@SelectDogf:

; 790  : 	{
; 791  : 		gCurrentFlightID = ((C_Dog_Flight*)control)->GetVUID();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ	; C_Dog_Flight::GetVUID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, edx

; 792  : 		control->SetState(1);

	push	1
	mov	eax, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN1@SelectDogf:

; 793  : 	}
; 794  : 	gCurrentAircraftNum=-1;

	or	ecx, -1
	mov	WORD PTR ?gCurrentAircraftNum@@3FA, cx	; gCurrentAircraftNum
$LN4@SelectDogf:

; 795  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDogfightFlightCB@@YAXJFPAVC_Base@@@Z ENDP	; SelectDogfightFlightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_tree$ = -4						; size = 4
?ClearAllTreeStates@@YAXXZ PROC				; ClearAllTreeStates

; 670  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 671  : 	C_Window *win;
; 672  : 	C_TreeList *tree;
; 673  : 
; 674  : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 675  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@ClearAllTr

; 676  : 	{
; 677  : 		tree=(C_TreeList*)win->FindControl(FURBALL_TREE);

	push	21804					; 0000552cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 678  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN5@ClearAllTr

; 679  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates
$LN5@ClearAllTr:

; 680  : 		tree=(C_TreeList*)win->FindControl(CRIMSON_TREE);

	push	21800					; 00005528H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 681  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@ClearAllTr

; 682  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates
$LN4@ClearAllTr:

; 683  : 		tree=(C_TreeList*)win->FindControl(SHARK_TREE);

	push	21801					; 00005529H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 684  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN3@ClearAllTr

; 685  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates
$LN3@ClearAllTr:

; 686  : 		tree=(C_TreeList*)win->FindControl(TIGER_TREE);

	push	21803					; 0000552bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 687  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN2@ClearAllTr

; 688  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates
$LN2@ClearAllTr:

; 689  : 		tree=(C_TreeList*)win->FindControl(VIPER_TREE);

	push	21802					; 0000552aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 690  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN7@ClearAllTr

; 691  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates
$LN7@ClearAllTr:

; 692  : 	}
; 693  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllTreeStates@@YAXXZ ENDP				; ClearAllTreeStates
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_flight$ = -4						; size = 4
?RemoveDogfightPlane@@YAXXZ PROC			; RemoveDogfightPlane

; 657  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 658  : 	Flight flight;
; 659  : 
; 660  : 	// gCurrentFlightID is the ID of the SELECTED flight
; 661  : 	// gCurrentAircraftNum is the ID of the SELECTED aircraft (or potentially, first AI in flight)
; 662  : 	flight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 663  : 	if(flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN1@RemoveDogf

; 664  : 		LeaveACSlot (flight, static_cast<uchar>(gCurrentAircraftNum));

	movzx	edx, BYTE PTR ?gCurrentAircraftNum@@3FA
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?LeaveACSlot@@YAXPAVFlightClass@@E@Z	; LeaveACSlot
	add	esp, 8
$LN1@RemoveDogf:

; 665  : 	gCurrentAircraftNum=-1;

	or	ecx, -1
	mov	WORD PTR ?gCurrentAircraftNum@@3FA, cx	; gCurrentAircraftNum

; 666  : 	CheckDelButtons();

	call	?CheckDelButtons@@YAXXZ			; CheckDelButtons

; 667  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveDogfightPlane@@YAXXZ ENDP			; RemoveDogfightPlane
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_win$ = -4						; size = 4
?DogfightJoinSuccess@@YAXXZ PROC			; DogfightJoinSuccess

; 574  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 575  : 	C_Window
; 576  : 		*win;
; 577  : 
; 578  : 	F4CSECTIONHANDLE *Leave;
; 579  : 
; 580  : 	F4Assert(gDogfightControl);
; 581  : 
; 582  : 	Leave=UI_Enter(gDogfightControl->Parent_);

	mov	eax, DWORD PTR ?gDogfightControl@@3PAVC_Base@@A ; gDogfightControl
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 583  : 	gMainHandler->DisableWindowGroup(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 584  : 	gMainHandler->DisableWindowGroup(gDogfightControl->GetParent()->GetGroup());

	mov	ecx, DWORD PTR ?gDogfightControl@@3PAVC_Base@@A ; gDogfightControl
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 585  : 	gMainHandler->EnableWindowGroup(gDogfightControl->GetGroup());

	mov	ecx, DWORD PTR ?gDogfightControl@@3PAVC_Base@@A ; gDogfightControl
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 586  : 
; 587  : 	win=gMainHandler->FindWindow(COMMLINK_WIN);

	push	19600					; 00004c90H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 588  : 	if (win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@DogfightJo

; 589  : 	{
; 590  : 		gMainHandler->HideWindow (win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@DogfightJo:

; 591  : 	}
; 592  : 	gDogfightControl = NULL;

	mov	DWORD PTR ?gDogfightControl@@3PAVC_Base@@A, 0 ; gDogfightControl

; 593  : 
; 594  : 	SetCurrentGameState(DogfightGames,C_STATE_2);

	push	2
	mov	eax, DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A ; DogfightGames
	push	eax
	call	?SetCurrentGameState@@YAXPAVC_TreeList@@F@Z ; SetCurrentGameState
	add	esp, 8

; 595  : 	AddDogfightPlayerCB(DF_CRIMSON,C_TYPE_LMOUSEUP,NULL);

	push	0
	push	52					; 00000034H
	push	21231					; 000052efH
	call	?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	add	esp, 12					; 0000000cH

; 596  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 597  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?DogfightJoinSuccess@@YAXXZ ENDP			; DogfightJoinSuccess
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_game$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DogfightBeginCB@@YAXJFPAVC_Base@@@Z PROC		; DogfightBeginCB

; 531  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 532  : 	FalconGameEntity	*game;
; 533  : 
; 534  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@DogfightBe

; 535  : 		return;

	jmp	$LN7@DogfightBe
$LN6@DogfightBe:

; 536  : 
; 537  : 	if(gCommsMgr == NULL)

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	jne	SHORT $LN5@DogfightBe

; 538  : 		return;

	jmp	SHORT $LN7@DogfightBe
$LN5@DogfightBe:

; 539  : 
; 540  : 	gDogfightControl = control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR ?gDogfightControl@@3PAVC_Base@@A, ecx ; gDogfightControl

; 541  : 
; 542  : 	// This is the callback made by the 2 icons on the LOAD toolbar...
; 543  : 	// Figure out which function to call based upon what the user
; 544  : 	// has done
; 545  : 
; 546  : 	// KCK: Really, we shouldn't do anything (except maybe show a 
; 547  : 	// 'connecting to game' dialog for the multiplayer case) UNTIL
; 548  : 	// we've successfully joined/loaded the game.
; 549  : 	game = (FalconGameEntity*)gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 550  : 	if (game)

	cmp	DWORD PTR _game$[ebp], 0
	je	SHORT $LN4@DogfightBe

; 551  : 	{
; 552  : 		// We've got a game selected, so actually, we're joining
; 553  : 		// Send the join request
; 554  : 		MonoPrint("Joining Dogfight game. \n"); 

	push	OFFSET ??_C@_0BJ@EKNFIOIH@Joining?5Dogfight?5game?4?5?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 555  : 		JoinDogfightCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?JoinDogfightCB@@YAXJFPAVC_Base@@@Z	; JoinDogfightCB
	add	esp, 12					; 0000000cH

; 556  : 	}
; 557  : 	else

	jmp	SHORT $LN7@DogfightBe
$LN4@DogfightBe:

; 558  : 	{
; 559  : 		// Either call create dogfight for local case, or pop up
; 560  : 		// a rules dialog and then create a dogfight.
; 561  : 		MonoPrint("Create new Dogfight game. \n"); 

	push	OFFSET ??_C@_0BM@ECBFCKHO@Create?5new?5Dogfight?5game?4?5?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 562  : 		if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN2@DogfightBe

; 563  : 			SetupInfoWindow(CreateDogfightCB,CancelDogfightCB);

	push	OFFSET ?CancelDogfightCB@@YAXXZ		; CancelDogfightCB
	push	OFFSET ?CreateDogfightCB@@YAXXZ		; CreateDogfightCB
	call	?SetupInfoWindow@@YAXP6AXXZ0@Z		; SetupInfoWindow
	add	esp, 8

; 564  : 		else

	jmp	SHORT $LN7@DogfightBe
$LN2@DogfightBe:

; 565  : 			CreateDogfightCB();

	call	?CreateDogfightCB@@YAXXZ		; CreateDogfightCB
$LN7@DogfightBe:

; 566  : 	}
; 567  : 
; 568  : 	// KCK: Everything else is done as a result of a successfull load,
; 569  : 	// which calls the function below...
; 570  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DogfightBeginCB@@YAXJFPAVC_Base@@@Z ENDP		; DogfightBeginCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
?GameHasStarted@@YAXXZ PROC				; GameHasStarted

; 511  : {

	push	ebp
	mov	ebp, esp

; 512  : 	AreYouSure(TXT_ERROR,TXT_GAMEHASSTARTED,NULL,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	0
	push	24					; 00000018H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 513  : }

	pop	ebp
	ret	0
?GameHasStarted@@YAXXZ ENDP				; GameHasStarted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
tv130 = -12						; size = 4
tv76 = -8						; size = 4
_group$ = -4						; size = 4
_tree$ = 8						; size = 4
_state$ = 12						; size = 2
?SetCurrentGameState@@YAXPAVC_TreeList@@F@Z PROC	; SetCurrentGameState

; 451  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 452  : 	TREELIST *group;
; 453  : 
; 454  : 	if(gCommsMgr->Online() && tree)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	$LN4@SetCurrent
	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN4@SetCurrent

; 455  : 	{
; 456  : 		if (vuLocalGame != vuPlayerPoolGroup)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@SetCurrent
	mov	DWORD PTR tv76[ebp], 0
	jmp	SHORT $LN7@SetCurrent
$LN6@SetCurrent:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv76[ebp], eax
$LN7@SetCurrent:
	mov	ecx, DWORD PTR tv76[ebp]
	cmp	ecx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	$LN4@SetCurrent

; 457  : 		{
; 458  : 			group=StartTreeSearch(FalconLocalGame->Id(),tree->GetRoot(),tree);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@SetCurrent
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN9@SetCurrent
$LN8@SetCurrent:
	mov	DWORD PTR tv130[ebp], 0
$LN9@SetCurrent:
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv130[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?StartTreeSearch@@YAPAVTREELIST@@VVU_ID@@PAV1@PAVC_TreeList@@@Z ; StartTreeSearch
	add	esp, 16					; 00000010H
	mov	DWORD PTR _group$[ebp], eax

; 459  : 			if(group && group->Item_)

	cmp	DWORD PTR _group$[ebp], 0
	je	SHORT $LN4@SetCurrent
	mov	ecx, DWORD PTR _group$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN4@SetCurrent

; 460  : 			{
; 461  : 				group->Item_->SetState(state);

	movzx	edx, WORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR _group$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _group$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 462  : 				group->Item_->Refresh();

	mov	eax, DWORD PTR _group$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _group$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN4@SetCurrent:

; 463  : 			}
; 464  : 		}
; 465  : 	}
; 466  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetCurrentGameState@@YAXPAVC_TreeList@@F@Z ENDP	; SetCurrentGameState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ID$ = -8						; size = 4
_i$ = -4						; size = 2
_lbox$ = 8						; size = 4
?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z PROC	; FillListBoxWithACTypes

; 399  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 400  : 	short i;
; 401  : 	long ID;
; 402  : 
; 403  : 	i=1;

	mov	eax, 1
	mov	WORD PTR _i$[ebp], ax

; 404  : 
; 405  : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes
$LN6@FillListBo:

; 406  : 	while(DFAIPlanes && DFAIPlanes[i].Type)//ctd fix

	cmp	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, 0 ; DFAIPlanes
	je	$LN7@FillListBo
	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	$LN7@FillListBo

; 407  : 	{
; 408  : 		ID = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_SQUADRON,DFAIPlanes[i].UnitSType,DFAIPlanes[i].SPType,VU_ANY,VU_ANY,VU_ANY);

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	eax, BYTE PTR [edx+ecx+2]
	push	eax
	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	eax, BYTE PTR [edx+ecx+3]
	push	eax
	push	3
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _ID$[ebp], eax

; 409  : 		if(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN4@FillListBo

; 410  : 		{
; 411  : 			ID += VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _ID$[ebp]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _ID$[ebp], ecx

; 412  : 
; 413  : 			if(!(TheCampaign.Flags & CAMP_TACTICAL_EDIT))

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	jne	SHORT $LN3@FillListBo

; 414  : 			{
; 415  : 				if(FindSquadronType(ID,FalconLocalSession->GetTeam()))

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?FindSquadronType@@YAHJJ@Z		; FindSquadronType
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@FillListBo

; 416  : 					lbox->AddItem(ID,C_TYPE_ITEM,DFAIPlanes[i].TextID);

	movsx	edx, WORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	ecx, DWORD PTR [eax+edx+8]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z	; C_ListBox::AddItem
$LN2@FillListBo:

; 417  : 			}
; 418  : 			else

	jmp	SHORT $LN4@FillListBo
$LN3@FillListBo:

; 419  : 				lbox->AddItem(ID,C_TYPE_ITEM,DFAIPlanes[i].TextID);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z	; C_ListBox::AddItem
$LN4@FillListBo:

; 420  : 		}
; 421  : 		i++;

	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx

; 422  : 	}

	jmp	$LN6@FillListBo
$LN7@FillListBo:

; 423  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z ENDP	; FillListBoxWithACTypes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_iter$ = -36						; size = 12
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_entity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ClassID$ = 8						; size = 4
_teamid$ = 12						; size = 4
?FindSquadronType@@YAHJJ@Z PROC				; FindSquadronType

; 373  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindSquadronType@@YAHJJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 374  : 	VuListIterator iter(AllCampList);

	mov	eax, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 375  : 	CampEntity entity;
; 376  : 
; 377  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 378  : 
; 379  : 	entity=GetFirstEntity(&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetFirstEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z ; GetFirstEntity
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax
$LN4@FindSquadr:

; 380  : 	while(entity)

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN3@FindSquadr

; 381  : 	{
; 382  : 		if(entity->GetTeam() == teamid && entity->IsSquadron() && !entity->IsDead())

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _teamid$[ebp]
	jne	SHORT $LN2@FindSquadr
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN2@FindSquadr
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+212]
	call	eax
	test	eax, eax
	jne	SHORT $LN2@FindSquadr

; 383  : 		{
; 384  : 			if(entity->Type() == ClassID)

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	ecx, ax
	cmp	ecx, DWORD PTR _ClassID$[ebp]
	jne	SHORT $LN2@FindSquadr

; 385  : 			{
; 386  : 				CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 387  : 				return(TRUE);

	mov	DWORD PTR $T3[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN5@FindSquadr
$LN2@FindSquadr:

; 388  : 			}
; 389  : 		}
; 390  : 		entity=GetNextEntity(&iter);

	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	call	?GetNextEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z ; GetNextEntity
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax

; 391  : 	}

	jmp	$LN4@FindSquadr
$LN3@FindSquadr:

; 392  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 393  : 
; 394  : 	return(FALSE);

	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T2[ebp]
$LN5@FindSquadr:

; 395  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindSquadronType@@YAHJJ@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?FindSquadronType@@YAHJJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindSquadronType@@YAHJJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindSquadronType@@YAHJJ@Z ENDP				; FindSquadronType
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_SType$1 = -164						; size = 4
_SPType$2 = -160					; size = 4
_UnitSType$3 = -156					; size = 4
_Type$4 = -152						; size = 4
_maxdf$ = -148						; size = 4
_fp$ = -144						; size = 4
_i$5 = -140						; size = 4
_curdf$ = -136						; size = 4
_buf$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
?LoadDfPlanes@@YAXXZ PROC				; LoadDfPlanes

; 301  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 302  :     if (DFAIPlanes != NULL)

	cmp	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, 0 ; DFAIPlanes
	je	SHORT $LN14@LoadDfPlan

; 303  : 	return;

	jmp	$LN15@LoadDfPlan
$LN14@LoadDfPlan:

; 304  :     FILE *fp = OpenCampFile("teplanes", "lst", "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_08IKEJDFGO@teplanes?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 305  : 	if (fp == NULL)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN13@LoadDfPlan

; 306  : 	{
; 307  : 		fp = OpenCampFile("te-planes", "lst", "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_09DBKLODDO@te?9planes?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax
$LN13@LoadDfPlan:

; 308  : 	}
; 309  :     if (fp == NULL) 

	cmp	DWORD PTR _fp$[ebp], 0
	jne	$LN12@LoadDfPlan

; 310  : 	{
; 311  : 		DFAIPlanes = DFAIPlanesDef;

	mov	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, OFFSET ?DFAIPlanesDef@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes, DFAIPlanesDef

; 312  : 		fp = OpenCampFile("teplanes", "lst", "w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_08IKEJDFGO@teplanes?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 313  : 		fprintf (fp, "// Type SubType Specific UnitSubType    ID text UnitIcon\n");

	push	OFFSET ??_C@_0DK@MMLHLGJN@?1?1?5Type?5SubType?5Specific?5UnitSub@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 314  : 		for (int i = 0; DFAIPlanes[i].ID != 0; i++) 

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN11@LoadDfPlan
$LN10@LoadDfPlan:
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN11@LoadDfPlan:
	mov	edx, DWORD PTR _i$5[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	cmp	DWORD PTR [eax+edx+4], 0
	je	$LN9@LoadDfPlan

; 315  : 		{
; 316  : 		    fprintf (fp, "%7d %7d %8d %11d %5d %4d %8d\n", 
; 317  : 			DFAIPlanes[i].Type, 
; 318  : 			DFAIPlanes[i].SType, 
; 319  : 			DFAIPlanes[i].SPType, 
; 320  : 			DFAIPlanes[i].UnitSType, 
; 321  : 			DFAIPlanes[i].ID, 
; 322  : 			DFAIPlanes[i].TextID, 
; 323  : 			DFAIPlanes[i].IconID);

	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	eax, DWORD PTR [edx+ecx+12]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	eax, DWORD PTR [edx+ecx+8]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	eax, DWORD PTR [edx+ecx+4]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx+3]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx+2]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx+1]
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx]
	push	eax
	push	OFFSET ??_C@_0BO@NCAHNLBG@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5d?5?$CF4d?5?$CF8d?6?$AA@
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fprintf
	add	esp, 36					; 00000024H

; 324  : 		}

	jmp	$LN10@LoadDfPlan
$LN9@LoadDfPlan:

; 325  : 		fclose (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 326  : 		return;

	jmp	$LN15@LoadDfPlan
$LN12@LoadDfPlan:

; 327  :     }
; 328  :     int maxdf = 0, curdf = 0;

	mov	DWORD PTR _maxdf$[ebp], 0
	mov	DWORD PTR _curdf$[ebp], 0
$LN8@LoadDfPlan:

; 329  :     char buf[128];
; 330  :     while (fgets(buf, sizeof buf, fp)) {

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	128					; 00000080H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN7@LoadDfPlan

; 331  : 	if (buf[0] == '#' || buf[0] == '/' || buf[0] == '\r' || buf[0] == '\n')

	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buf$[ebp+edx]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN5@LoadDfPlan
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buf$[ebp+ecx]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN5@LoadDfPlan
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _buf$[ebp+eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN5@LoadDfPlan
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buf$[ebp+edx]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN6@LoadDfPlan
$LN5@LoadDfPlan:

; 332  : 	    continue;

	jmp	SHORT $LN8@LoadDfPlan
$LN6@LoadDfPlan:

; 333  : 	if (curdf >= maxdf - 2) { // time to grow the array

	mov	ecx, DWORD PTR _maxdf$[ebp]
	sub	ecx, 2
	cmp	DWORD PTR _curdf$[ebp], ecx
	jl	SHORT $LN4@LoadDfPlan

; 334  : 	    if (DFAIPlanes == NULL)

	cmp	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, 0 ; DFAIPlanes
	jne	SHORT $LN3@LoadDfPlan

; 335  : 		DFAIPlanes = (DF_AIRPLANE_TYPE*)calloc (maxdf = 10, sizeof *DFAIPlanes);

	mov	DWORD PTR _maxdf$[ebp], 10		; 0000000aH
	push	16					; 00000010H
	mov	edx, DWORD PTR _maxdf$[ebp]
	push	edx
	call	_calloc
	add	esp, 8
	mov	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, eax ; DFAIPlanes

; 336  : 	    else {

	jmp	SHORT $LN4@LoadDfPlan
$LN3@LoadDfPlan:

; 337  : 		maxdf *= 2;

	mov	eax, DWORD PTR _maxdf$[ebp]
	shl	eax, 1
	mov	DWORD PTR _maxdf$[ebp], eax

; 338  : 		DFAIPlanes = (DF_AIRPLANE_TYPE*)realloc(DFAIPlanes, maxdf * sizeof(*DFAIPlanes));

	mov	ecx, DWORD PTR _maxdf$[ebp]
	shl	ecx, 4
	push	ecx
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	push	edx
	call	_realloc
	add	esp, 8
	mov	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, eax ; DFAIPlanes
$LN4@LoadDfPlan:

; 339  : 	    }
; 340  : 	}
; 341  : 	int Type, SType, SPType, UnitSType;
; 342  : 	if (sscanf (buf, "%7d %7d %8d %11d %5ld %4ld %8ld", 
; 343  : 	    &Type, 
; 344  : 	    &SType, 
; 345  : 	    &SPType, 
; 346  : 	    &UnitSType, 
; 347  : 	    &DFAIPlanes[curdf].ID, 
; 348  : 	    &DFAIPlanes[curdf].TextID, 
; 349  : 	    &DFAIPlanes[curdf].IconID) != 7) {

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	lea	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	lea	edx, DWORD PTR [ecx+eax+8]
	push	edx
	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	lea	eax, DWORD PTR _UnitSType$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _SPType$2[ebp]
	push	ecx
	lea	edx, DWORD PTR _SType$1[ebp]
	push	edx
	lea	eax, DWORD PTR _Type$4[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@KDLAMACB@?$CF7d?5?$CF7d?5?$CF8d?5?$CF11d?5?$CF5ld?5?$CF4ld?5?$CF8ld?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sscanf
	add	esp, 36					; 00000024H
	cmp	eax, 7
	je	SHORT $LN1@LoadDfPlan

; 350  : 	    ShiWarning("Bad format file teplanes.lst");
; 351  : 	    free (DFAIPlanes);

	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	push	edx
	call	_free
	add	esp, 4

; 352  : 	    DFAIPlanes = DFAIPlanesDef;

	mov	DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A, OFFSET ?DFAIPlanesDef@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes, DFAIPlanesDef

; 353  : 	    break;

	jmp	$LN7@LoadDfPlan
$LN1@LoadDfPlan:

; 354  : 	}
; 355  : 	DFAIPlanes[curdf].Type = Type; 

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	dl, BYTE PTR _Type$4[ebp]
	mov	BYTE PTR [ecx+eax], dl

; 356  : 	DFAIPlanes[curdf].SType = SType; 

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	dl, BYTE PTR _SType$1[ebp]
	mov	BYTE PTR [ecx+eax+1], dl

; 357  : 	DFAIPlanes[curdf].SPType = SPType; 

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	dl, BYTE PTR _SPType$2[ebp]
	mov	BYTE PTR [ecx+eax+2], dl

; 358  : 	DFAIPlanes[curdf].UnitSType = UnitSType; 

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	dl, BYTE PTR _UnitSType$3[ebp]
	mov	BYTE PTR [ecx+eax+3], dl

; 359  : 
; 360  : 	curdf ++;

	mov	eax, DWORD PTR _curdf$[ebp]
	add	eax, 1
	mov	DWORD PTR _curdf$[ebp], eax

; 361  : 	DFAIPlanes[curdf].Type = 0;

	mov	ecx, DWORD PTR _curdf$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	BYTE PTR [edx+ecx], 0

; 362  : 	DFAIPlanes[curdf].ID = 0; // JB 010531

	mov	eax, DWORD PTR _curdf$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	DWORD PTR [ecx+eax+4], 0

; 363  :     }

	jmp	$LN8@LoadDfPlan
$LN7@LoadDfPlan:

; 364  : 	
; 365  :     fclose (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4
$LN15@LoadDfPlan:

; 366  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadDfPlanes@@YAXXZ ENDP				; LoadDfPlanes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_mapy$ = -4						; size = 4
_ratio$ = 8						; size = 4
_crsr$ = 12						; size = 4
?RatiotoMapY@@YAJMPAVC_Cursor@@@Z PROC			; RatiotoMapY

; 2768 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 2769 : 	int		mapy;
; 2770 : 	mapy = FloatToInt32((crsr->MaxY_-crsr->MinY_) * (1.0F - ratio)) - crsr->GetH()/2;

	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+120]
	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+116]
	sub	ecx, eax
	cvtsi2ss xmm0, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _ratio$[ebp]
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	esi, eax
	mov	DWORD PTR _mapy$[ebp], esi

; 2771 : 	return mapy;

	mov	eax, DWORD PTR _mapy$[ebp]

; 2772 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?RatiotoMapY@@YAJMPAVC_Cursor@@@Z ENDP			; RatiotoMapY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_mapx$ = -4						; size = 4
_ratio$ = 8						; size = 4
_crsr$ = 12						; size = 4
?RatiotoMapX@@YAJMPAVC_Cursor@@@Z PROC			; RatiotoMapX

; 2761 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 2762 : 	int		mapx;
; 2763 : 	mapx = FloatToInt32((crsr->MaxX_-crsr->MinX_) * ratio) - crsr->GetW()/2;

	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+118]
	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+114]
	sub	ecx, eax
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR _ratio$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	esi, eax
	mov	DWORD PTR _mapx$[ebp], esi

; 2764 : 	return mapx;

	mov	eax, DWORD PTR _mapx$[ebp]

; 2765 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?RatiotoMapX@@YAJMPAVC_Cursor@@@Z ENDP			; RatiotoMapX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ratio$ = -4						; size = 4
_crsr$ = 8						; size = 4
?MapYtoRatio@@YAMPAVC_Cursor@@@Z PROC			; MapYtoRatio

; 2754 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi

; 2755 : 	float ratio;
; 2756 : 	ratio = (float)(crsr->MaxY_ - (crsr->GetY()+crsr->GetH()/2)) / (float)(crsr->MaxY_-crsr->MinY_);

	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	esi, WORD PTR [eax+120]
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	edi, eax
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	cdq
	sub	eax, edx
	sar	eax, 1
	add	edi, eax
	sub	esi, edi
	cvtsi2ss xmm0, esi
	mov	ecx, DWORD PTR _crsr$[ebp]
	movsx	edx, WORD PTR [ecx+120]
	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+116]
	sub	edx, ecx
	cvtsi2ss xmm1, edx
	divss	xmm0, xmm1
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2757 : 	return ratio;

	fld	DWORD PTR _ratio$[ebp]

; 2758 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MapYtoRatio@@YAMPAVC_Cursor@@@Z ENDP			; MapYtoRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_ratio$ = -4						; size = 4
_crsr$ = 8						; size = 4
?MapXtoRatio@@YAMPAVC_Cursor@@@Z PROC			; MapXtoRatio

; 2747 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 2748 : 	float ratio;
; 2749 : 	ratio = (float)(crsr->GetX()+crsr->GetW()/2) / (float)(crsr->MaxX_-crsr->MinX_);

	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _crsr$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	cvtsi2ss xmm0, esi
	mov	eax, DWORD PTR _crsr$[ebp]
	movsx	ecx, WORD PTR [eax+118]
	mov	edx, DWORD PTR _crsr$[ebp]
	movsx	eax, WORD PTR [edx+114]
	sub	ecx, eax
	cvtsi2ss xmm1, ecx
	divss	xmm0, xmm1
	movss	DWORD PTR _ratio$[ebp], xmm0

; 2750 : 	return ratio;

	fld	DWORD PTR _ratio$[ebp]

; 2751 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MapXtoRatio@@YAMPAVC_Cursor@@@Z ENDP			; MapXtoRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv76 = -4						; size = 4
?LeaveDogfight@@YAXXZ PROC				; LeaveDogfight

; 2425 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2426 : 	TheCampaign.EndCampaign();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign

; 2427 : 	if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN2@LeaveDogfi

; 2428 : 	{
; 2429 : 		if (vuLocalGame != vuPlayerPoolGroup)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@LeaveDogfi
	mov	DWORD PTR tv76[ebp], 0
	jmp	SHORT $LN6@LeaveDogfi
$LN5@LeaveDogfi:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv76[ebp], eax
$LN6@LeaveDogfi:
	mov	ecx, DWORD PTR tv76[ebp]
	cmp	ecx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	SHORT $LN1@LeaveDogfi

; 2430 : 		{
; 2431 : 			SetCurrentGameState(DogfightGames,C_STATE_0);

	push	0
	mov	edx, DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A ; DogfightGames
	push	edx
	call	?SetCurrentGameState@@YAXPAVC_TreeList@@F@Z ; SetCurrentGameState
	add	esp, 8

; 2432 : 			vuLocalSessionEntity->JoinGame(vuPlayerPoolGroup);

	mov	eax, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
$LN1@LeaveDogfi:

; 2433 : 		}
; 2434 : 		gCommsMgr->LookAtGame(NULL);

	push	0
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame
$LN2@LeaveDogfi:

; 2435 : 	}
; 2436 : 	ClearDFTeamLists();

	call	?ClearDFTeamLists@@YAXXZ		; ClearDFTeamLists

; 2437 : 	ClearDFTeamButtons();

	call	?ClearDFTeamButtons@@YAXXZ		; ClearDFTeamButtons

; 2438 : 	FalconLocalSession->SetPlayerSquadron(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 2439 : 	FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 2440 : 	FalconLocalSession->SetCountry(255);

	push	255					; 000000ffH
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetCountry@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetCountry

; 2441 : 	FalconLocalSession->SetPilotSlot(255);

	push	255					; 000000ffH
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPilotSlot@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetPilotSlot

; 2442 : 	SendMessage(gMainHandler->GetAppWnd(),FM_SHUTDOWN_CAMPAIGN,0,0);

	push	0
	push	0
	push	1042					; 00000412H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__SendMessageA@16

; 2443 : 	CheckFlyButton();

	call	?CheckFlyButton@@YAXXZ			; CheckFlyButton

; 2444 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LeaveDogfight@@YAXXZ ENDP				; LeaveDogfight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_flight$ = 8						; size = 4
_type$ = 12						; size = 4
_skill$ = 16						; size = 4
_team$ = 20						; size = 4
?AddDogfightAIPlane@@YAXPAVFlightClass@@HHH@Z PROC	; AddDogfightAIPlane

; 651  : {

	push	ebp
	mov	ebp, esp

; 652  : 	RequestACSlot (flight, static_cast<uchar>(team), 0, static_cast<uchar>(skill), type, 0);

	push	0
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _skill$[ebp]
	push	ecx
	push	0
	movzx	edx, BYTE PTR _team$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H

; 653  : }

	pop	ebp
	ret	0
?AddDogfightAIPlane@@YAXPAVFlightClass@@HHH@Z ENDP	; AddDogfightAIPlane
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_type$ = -20						; size = 4
_idx$ = -16						; size = 4
tv78 = -12						; size = 4
_flight$ = -8						; size = 4
_teamid$ = -1						; size = 1
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z PROC		; AddDogfightPlayerCB

; 609  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 610  : 	Flight			flight;
; 611  : 	int				idx, type;
; 612  : 	uchar			teamid;
; 613  : 
; 614  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@AddDogfigh

; 615  : 		return;

	jmp	$LN11@AddDogfigh
$LN10@AddDogfigh:

; 616  : 
; 617  : 	// If we're not yet in a game, this equates to host
; 618  : 	if (!FalconLocalGame || FalconLocalSession->Game() == vuPlayerPoolGroup)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN14@AddDogfigh
$LN13@AddDogfigh:
	mov	DWORD PTR tv78[ebp], 0
$LN14@AddDogfigh:
	cmp	DWORD PTR tv78[ebp], 0
	je	SHORT $LN8@AddDogfigh
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	jne	SHORT $LN9@AddDogfigh
$LN8@AddDogfigh:

; 619  : 		return;

	jmp	$LN11@AddDogfigh
$LN9@AddDogfigh:

; 620  : 
; 621  : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 622  : 	flight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 623  : 	teamid = static_cast<uchar>(ConvertDFIDtoTeam(ID));

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?ConvertDFIDtoTeam@@YAFJ@Z		; ConvertDFIDtoTeam
	add	esp, 4
	mov	BYTE PTR _teamid$[ebp], al

; 624  : 	idx = GetPlaneListID(DF_AC_F16C);

	push	21148					; 0000529cH
	call	?GetPlaneListID@@YAEJ@Z			; GetPlaneListID
	add	esp, 4
	movzx	edx, al
	mov	DWORD PTR _idx$[ebp], edx

; 625  : 	type = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_FLIGHT,DFAIPlanes[idx].UnitSType,DFAIPlanes[idx].SPType,VU_ANY,VU_ANY,VU_ANY) + VU_LAST_ENTITY_TYPE;

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	edx, BYTE PTR [ecx+eax+2]
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movzx	edx, BYTE PTR [ecx+eax+3]
	push	edx
	push	1
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	add	eax, 100				; 00000064H
	mov	DWORD PTR _type$[ebp], eax

; 626  : 
; 627  : 	// For the furball buttons:
; 628  : 	// a) Change team of selected flight   OR
; 629  : 	// b) Request a new player flight
; 630  : 	if (ID == DF_MARK_CRIMSON || ID == DF_MARK_SHARK || ID == DF_MARK_VIPER || ID == DF_MARK_TIGER)

	cmp	DWORD PTR _ID$[ebp], 21235		; 000052f3H
	je	SHORT $LN6@AddDogfigh
	cmp	DWORD PTR _ID$[ebp], 21236		; 000052f4H
	je	SHORT $LN6@AddDogfigh
	cmp	DWORD PTR _ID$[ebp], 21237		; 000052f5H
	je	SHORT $LN6@AddDogfigh
	cmp	DWORD PTR _ID$[ebp], 21238		; 000052f6H
	jne	SHORT $LN7@AddDogfigh
$LN6@AddDogfigh:

; 631  : 		{
; 632  : 		if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN5@AddDogfigh

; 633  : 			RequestTeamChange(flight, teamid);

	movzx	eax, BYTE PTR _teamid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?RequestTeamChange@@YAXPAVFlightClass@@H@Z ; RequestTeamChange
	add	esp, 8

; 634  : 		else

	jmp	SHORT $LN4@AddDogfigh
$LN5@AddDogfigh:

; 635  : 			RequestACSlot (NULL, teamid, 0, 0, type, 1);

	push	1
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	push	0
	push	0
	movzx	eax, BYTE PTR _teamid$[ebp]
	push	eax
	push	0
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H
$LN4@AddDogfigh:

; 636  : 		}
; 637  : 	// For non-furball buttons:
; 638  : 	// a) Request to join selected flight if same team  OR
; 639  : 	// b) Request a new player flight
; 640  : 	else

	jmp	SHORT $LN11@AddDogfigh
$LN7@AddDogfigh:

; 641  : 		{
; 642  : 		if (flight && flight->GetTeam() == teamid)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN2@AddDogfigh
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	movzx	edx, BYTE PTR _teamid$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN2@AddDogfigh

; 643  : 			RequestACSlot (flight, flight->GetTeam(), 0, 0, (flight->Type()-VU_LAST_ENTITY_TYPE), 1);

	push	1
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	sub	eax, 100				; 00000064H
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H

; 644  : 		else

	jmp	SHORT $LN11@AddDogfigh
$LN2@AddDogfigh:

; 645  : 			RequestACSlot (NULL, teamid, 0, 0, type, 1);

	push	1
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	push	0
	push	0
	movzx	ecx, BYTE PTR _teamid$[ebp]
	push	ecx
	push	0
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H
$LN11@AddDogfigh:

; 646  : 		}
; 647  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ENDP		; AddDogfightPlayerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv348 = -32						; size = 4
_clk$ = -28						; size = 4
_lbox$ = -24						; size = 4
_crsr$ = -20						; size = 4
_btn$ = -16						; size = 4
_sldr$ = -12						; size = 4
_win$ = -8						; size = 4
_ebox$ = -4						; size = 4
?CopyDFSettingsToWindow@@YAXXZ PROC			; CopyDFSettingsToWindow

; 1753 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 1754 : 	C_Window *win;
; 1755 : 	C_EditBox *ebox;
; 1756 : 	C_Button *btn;
; 1757 : 	C_Slider *sldr;
; 1758 : 	C_ListBox *lbox;
; 1759 : 	C_Cursor *crsr;
; 1760 : 	C_Clock *clk;
; 1761 : 
; 1762 : 	if (!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN33@CopyDFSett

; 1763 : 		return;

	jmp	$LN34@CopyDFSett
$LN33@CopyDFSett:

; 1764 : 
; 1765 : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 1766 : 	win=gMainHandler->FindWindow(DF_SETTINGS_WIN);

	push	20100					; 00004e84H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1767 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN8@CopyDFSett

; 1768 : 	{
; 1769 : 		ebox=(C_EditBox *)win->FindControl(RADAR_READOUT);

	push	20102					; 00004e86H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1770 : 		ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1771 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN30@CopyDFSett

; 1772 : 		{
; 1773 : 			ebox->SetInteger(SimDogfight.GetNumRadarMissiles());

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetNumRadarMissiles@DogfightClass@@QBEEXZ ; DogfightClass::GetNumRadarMissiles
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1774 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1775 : 			sldr=(C_Slider *)win->FindControl(RADAR_SLIDER);

	push	20138					; 00004eaaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1776 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN30@CopyDFSett

; 1777 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN30@CopyDFSett:

; 1778 : 		}
; 1779 : 		ebox=(C_EditBox *)win->FindControl(ALLIR_READOUT);

	push	20106					; 00004e8aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1780 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN28@CopyDFSett

; 1781 : 		{
; 1782 : 			ebox->SetInteger(SimDogfight.GetNumAllAspectMissiles());

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetNumAllAspectMissiles@DogfightClass@@QBEEXZ ; DogfightClass::GetNumAllAspectMissiles
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1783 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1784 : 			sldr=(C_Slider *)win->FindControl(ALLIR_SLIDER);

	push	20139					; 00004eabH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1785 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN28@CopyDFSett

; 1786 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN28@CopyDFSett:

; 1787 : 		}
; 1788 : 		ebox=(C_EditBox *)win->FindControl(RIR_READOUT);

	push	20110					; 00004e8eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1789 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN26@CopyDFSett

; 1790 : 		{
; 1791 : 			ebox->SetInteger(SimDogfight.GetNumRearAspectMissiles());

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetNumRearAspectMissiles@DogfightClass@@QBEEXZ ; DogfightClass::GetNumRearAspectMissiles
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1792 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1793 : 			sldr=(C_Slider *)win->FindControl(RIR_SLIDER);

	push	20140					; 00004eacH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1794 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN26@CopyDFSett

; 1795 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN26@CopyDFSett:

; 1796 : 		}
; 1797 : 		ebox=(C_EditBox *)win->FindControl(RANGE_READOUT);

	push	20118					; 00004e96H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1798 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN24@CopyDFSett

; 1799 : 		{
; 1800 : 			ebox->SetInteger(static_cast<long>(SimDogfight.startRange * FT_TO_NM));

	movss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+16
	mulss	xmm0, DWORD PTR __real@392c987a
	cvttss2si ecx, xmm0
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1801 : 			ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1802 : 			sldr=(C_Slider *)win->FindControl(RANGE_SLIDER);

	push	20141					; 00004eadH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1803 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN24@CopyDFSett

; 1804 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN24@CopyDFSett:

; 1805 : 		}
; 1806 : 		ebox=(C_EditBox *)win->FindControl(ALTITUDE_READOUT);

	push	20122					; 00004e9aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1807 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN22@CopyDFSett

; 1808 : 		{
; 1809 : 			ebox->SetInteger(FloatToInt32(-1.0F*SimDogfight.startAltitude));

	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+20
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1810 : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1811 : 			sldr=(C_Slider *)win->FindControl(ALTITUDE_SLIDER);

	push	20142					; 00004eaeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1812 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN22@CopyDFSett

; 1813 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN22@CopyDFSett:

; 1814 : 		}
; 1815 : 		ebox=(C_EditBox *)win->FindControl(MP_READOUT);

	push	20135					; 00004ea7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1816 : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN18@CopyDFSett

; 1817 : 		{
; 1818 : 			if(SimDogfight.rounds)

	movzx	edx, BYTE PTR ?SimDogfight@@3VDogfightClass@@A+44
	test	edx, edx
	je	SHORT $LN20@CopyDFSett

; 1819 : 				ebox->SetInteger(SimDogfight.rounds);

	movzx	eax, BYTE PTR ?SimDogfight@@3VDogfightClass@@A+44
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger

; 1820 : 			else

	jmp	SHORT $LN19@CopyDFSett
$LN20@CopyDFSett:

; 1821 : 				ebox->SetText("Unlimited");

	push	OFFSET ??_C@_09MFBLKFGK@Unlimited?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN19@CopyDFSett:

; 1822 : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1823 : 			sldr=(C_Slider *)win->FindControl(MP_SLIDER);

	push	20143					; 00004eafH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1824 : 			if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN18@CopyDFSett

; 1825 : 				PositionSlider(sldr,ebox->GetInteger(),ebox->GetMinInteger(),ebox->GetMaxInteger());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMaxInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMaxInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetMinInteger@C_EditBox@@QAEJXZ	; C_EditBox::GetMinInteger
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN18@CopyDFSett:

; 1826 : 		}
; 1827 : 
; 1828 : 		lbox=(C_ListBox *)win->FindControl(DF_GAME_TYPE);

	push	21226					; 000052eaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1829 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN17@CopyDFSett

; 1830 : 		{
; 1831 : 			switch(SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv348[ebp], eax
	cmp	DWORD PTR tv348[ebp], 0
	je	SHORT $LN14@CopyDFSett
	cmp	DWORD PTR tv348[ebp], 1
	je	SHORT $LN13@CopyDFSett
	cmp	DWORD PTR tv348[ebp], 2
	je	SHORT $LN12@CopyDFSett
	jmp	SHORT $LN15@CopyDFSett
$LN14@CopyDFSett:

; 1832 : 			{
; 1833 : 				case dog_Furball:
; 1834 : 					lbox->SetValue(DF_GAME_FURBALL);

	push	21230					; 000052eeH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1835 : 					break;

	jmp	SHORT $LN15@CopyDFSett
$LN13@CopyDFSett:

; 1836 : 				case dog_TeamFurball:
; 1837 : 					lbox->SetValue(DF_GAME_TEAM_FURBALL);

	push	21229					; 000052edH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1838 : 					break;

	jmp	SHORT $LN15@CopyDFSett
$LN12@CopyDFSett:

; 1839 : 				case dog_TeamMatchplay:
; 1840 : 					lbox->SetValue(DF_GAME_TEAM_MATCH);

	push	21228					; 000052ecH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN15@CopyDFSett:

; 1841 : 					break;
; 1842 : 			}
; 1843 : 			lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN17@CopyDFSett:

; 1844 : 		}
; 1845 : 		btn=(C_Button *)win->FindControl(GUN_CTRL);

	push	20114					; 00004e92H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1846 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN11@CopyDFSett

; 1847 : 		{
; 1848 : 			if(SimDogfight.IsSetFlag(DF_UNLIMITED_GUNS))

	push	1
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?IsSetFlag@DogfightClass@@QAEHH@Z	; DogfightClass::IsSetFlag
	test	eax, eax
	je	SHORT $LN10@CopyDFSett

; 1849 : 				btn->SetState(1);

	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1850 : 			else

	jmp	SHORT $LN9@CopyDFSett
$LN10@CopyDFSett:

; 1851 : 				btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN9@CopyDFSett:

; 1852 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@CopyDFSett:

; 1853 : 		}
; 1854 : 		btn=(C_Button *)win->FindControl(ECM_CTRL);

	push	21932					; 000055acH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1855 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@CopyDFSett

; 1856 : 		{
; 1857 : 			if(SimDogfight.IsSetFlag(DF_ECM_AVAIL))

	push	2
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?IsSetFlag@DogfightClass@@QAEHH@Z	; DogfightClass::IsSetFlag
	test	eax, eax
	je	SHORT $LN7@CopyDFSett

; 1858 : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1859 : 			else

	jmp	SHORT $LN6@CopyDFSett
$LN7@CopyDFSett:

; 1860 : 				btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN6@CopyDFSett:

; 1861 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@CopyDFSett:

; 1862 : 		}
; 1863 : 	}
; 1864 : 	win=gMainHandler->FindWindow(DF_MAP_WIN);

	push	21060					; 00005244H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1865 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@CopyDFSett

; 1866 : 	{
; 1867 : 		crsr=(C_Cursor*)win->FindControl(DF_MAP_CURSOR);

	push	21062					; 00005246H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _crsr$[ebp], eax

; 1868 : 		if(crsr)

	cmp	DWORD PTR _crsr$[ebp], 0
	je	SHORT $LN4@CopyDFSett

; 1869 : 		{
; 1870 : 			crsr->SetXY(RatiotoMapX(SimDogfight.xRatio,crsr),RatiotoMapY(SimDogfight.yRatio,crsr));

	mov	ecx, DWORD PTR _crsr$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+36
	movss	DWORD PTR [esp], xmm0
	call	?RatiotoMapY@@YAJMPAVC_Cursor@@@Z	; RatiotoMapY
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _crsr$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+32
	movss	DWORD PTR [esp], xmm0
	call	?RatiotoMapX@@YAJMPAVC_Cursor@@@Z	; RatiotoMapX
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _crsr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 1871 : 			crsr->Refresh();

	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@CopyDFSett:

; 1872 : 		}
; 1873 : 	}
; 1874 : 	win=gMainHandler->FindWindow(DF_PLAY_SUA_WIN);

	push	21880					; 00005578H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1875 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CopyDFSett

; 1876 : 	{
; 1877 : 		clk=(C_Clock*)win->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1878 : 		if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN2@CopyDFSett

; 1879 : 		{
; 1880 : 			clk->SetHour(SimDogfight.startTime/CampaignHours);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetHour@C_Clock@@QAEXJ@Z		; C_Clock::SetHour

; 1881 : 			clk->SetMinute((SimDogfight.startTime/CampaignMinutes)%60);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	push	edx
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetMinute@C_Clock@@QAEXJ@Z		; C_Clock::SetMinute

; 1882 : 			clk->SetSecond((SimDogfight.startTime/CampaignSeconds)%60);

	mov	eax, DWORD PTR ?SimDogfight@@3VDogfightClass@@A+12
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	push	edx
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetSecond@C_Clock@@QAEXJ@Z		; C_Clock::SetSecond

; 1883 : 			clk->Refresh();

	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN2@CopyDFSett:

; 1884 : 		}
; 1885 : 	}
; 1886 : 	UpdateDogfightWindows();

	call	?UpdateDogfightWindows@@YAXXZ		; UpdateDogfightWindows

; 1887 : 
; 1888 : 	if (TheCampaign.IsLoaded())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN1@CopyDFSett

; 1889 : 		BuildDFPlayerList();

	call	?BuildDFPlayerList@@YAXXZ		; BuildDFPlayerList
$LN1@CopyDFSett:

; 1890 : 
; 1891 : 	DogfightMenuSetup();

	call	?DogfightMenuSetup@@YAXXZ		; DogfightMenuSetup

; 1892 : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN34@CopyDFSett:

; 1893 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CopyDFSettingsToWindow@@YAXXZ ENDP			; CopyDFSettingsToWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_game$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?JoinDogfightCB@@YAXJFPAVC_Base@@@Z PROC		; JoinDogfightCB

; 470  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 471  : 	FalconGameEntity	*game;
; 472  : 	C_Window			*win;
; 473  : 
; 474  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@JoinDogfig

; 475  : 		return;

	jmp	$LN7@JoinDogfig
$LN6@JoinDogfig:

; 476  : 
; 477  : 	if(gCommsMgr == NULL)

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	jne	SHORT $LN5@JoinDogfig

; 478  : 		return;

	jmp	SHORT $LN7@JoinDogfig
$LN5@JoinDogfig:

; 479  : 
; 480  : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN4@JoinDogfig

; 481  : 	{
; 482  : 		win=gMainHandler->FindWindow(PB_WIN);

	push	60004					; 0000ea64H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 483  : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@JoinDogfig

; 484  : 			gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN3@JoinDogfig:

; 485  : 		return;

	jmp	SHORT $LN7@JoinDogfig
$LN4@JoinDogfig:

; 486  : 	}
; 487  : 
; 488  : 	game = (FalconGameEntity*)gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 489  : 	if (!game)

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN2@JoinDogfig

; 490  : 		return;

	jmp	SHORT $LN7@JoinDogfig
$LN2@JoinDogfig:

; 491  : 
; 492  : 	win=gMainHandler->FindWindow(INFO_WIN);

	push	5004					; 0000138cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 493  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@JoinDogfig

; 494  : 	{
; 495  : 		SetupInfoWindow(ReallyJoinDogfightCB,CancelDogfightCB);

	push	OFFSET ?CancelDogfightCB@@YAXXZ		; CancelDogfightCB
	push	OFFSET ?ReallyJoinDogfightCB@@YAXXZ	; ReallyJoinDogfightCB
	call	?SetupInfoWindow@@YAXP6AXXZ0@Z		; SetupInfoWindow
	add	esp, 8
$LN7@JoinDogfig:

; 496  : 	}
; 497  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?JoinDogfightCB@@YAXJFPAVC_Base@@@Z ENDP		; JoinDogfightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
?ReallyJoinDogfightCB@@YAXXZ PROC			; ReallyJoinDogfightCB

; 516  : {

	push	ebp
	mov	ebp, esp

; 517  : //	if ((SimDogfight.GetDogfightGameStatus() >= dog_Starting) && (SimDogfight.GetGameType() == dog_TeamMatchplay))
; 518  : //	{
; 519  : //		GameHasStarted();
; 520  : //		return;
; 521  : //	}
; 522  : 
; 523  : 	MonoPrint("Joining Dogfight game.\n"); 

	push	OFFSET ??_C@_0BI@IFJFODFC@Joining?5Dogfight?5game?4?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 524  : 
; 525  : 	DisplayJoinStatusWindow (0);

	push	0
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 526  : 
; 527  : 	StartCampaignGame (FALSE, game_Dogfight);

	push	2
	push	0
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8

; 528  : }

	pop	ebp
	ret	0
?ReallyJoinDogfightCB@@YAXXZ ENDP			; ReallyJoinDogfightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
?CancelDogfightCB@@YAXXZ PROC				; CancelDogfightCB

; 507  : {

	push	ebp
	mov	ebp, esp

; 508  : }

	pop	ebp
	ret	0
?CancelDogfightCB@@YAXXZ ENDP				; CancelDogfightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
?CreateDogfightCB@@YAXXZ PROC				; CreateDogfightCB

; 501  : {

	push	ebp
	mov	ebp, esp

; 502  : 	_tcscpy(gUI_ScenarioName,"Instant");

	push	OFFSET ??_C@_07HMOCDNDG@Instant?$AA@
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 503  : 	StartCampaignGame (TRUE, game_Dogfight);

	push	2
	push	1
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8

; 504  : }

	pop	ebp
	ret	0
?CreateDogfightCB@@YAXXZ ENDP				; CreateDogfightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
_item$ = -12						; size = 4
_btn$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectDFSettingsFileCB@@YAXJFPAVC_Base@@@Z PROC	; SelectDFSettingsFileCB

; 2559 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2560 : 	C_TreeList *tree;
; 2561 : 	TREELIST *item;
; 2562 : 	C_Button   *btn;
; 2563 : 
; 2564 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN7@SelectDFSe

; 2565 : 		return;

	jmp	$LN9@SelectDFSe
$LN7@SelectDFSe:

; 2566 : 
; 2567 : 	tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 2568 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN9@SelectDFSe

; 2569 : 	{
; 2570 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2571 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN9@SelectDFSe

; 2572 : 		{
; 2573 : 			btn=(C_Button*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn$[ebp], eax

; 2574 : 
; 2575 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN9@SelectDFSe

; 2576 : 			{
; 2577 : 				if(!btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN3@SelectDFSe

; 2578 : 				{
; 2579 : 					tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 2580 : 					btn->SetState(1);

	push	1
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2581 : 					tree->Refresh();

	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2582 : 					_stprintf(gCurDogfightFile,"%s\\%s.DFS",FalconCampUserSaveDirectory,btn->GetText(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09OBJDIODK@?$CFs?2?$CFs?4DFS?$AA@
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	_sprintf
	add	esp, 16					; 00000010H

; 2583 : 					SimDogfight.SetFilename(gCurDogfightFile);

	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?SetFilename@DogfightClass@@QAEXPAD@Z	; DogfightClass::SetFilename

; 2584 : 					SimDogfight.LoadSettings();

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?LoadSettings@DogfightClass@@QAEXXZ	; DogfightClass::LoadSettings

; 2585 : 					CopyDFSettingsToSelectWindow();

	call	?CopyDFSettingsToSelectWindow@@YAXXZ	; CopyDFSettingsToSelectWindow

; 2586 : 				}
; 2587 : 				else

	jmp	SHORT $LN2@SelectDFSe
$LN3@SelectDFSe:

; 2588 : 				{
; 2589 : 					tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 2590 : 					tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2591 : 					gCurDogfightFile[0]=0;

	mov	ecx, 1
	imul	ecx, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN10@SelectDFSe
	jmp	SHORT $LN11@SelectDFSe
$LN10@SelectDFSe:
	call	___report_rangecheckfailure
$LN11@SelectDFSe:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR ?gCurDogfightFile@@3PADA[edx], 0
$LN2@SelectDFSe:

; 2592 : 				}
; 2593 : 
; 2594 : 				if(gCurDogfightFile[0] == 0)

	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR ?gCurDogfightFile@@3PADA[eax]
	test	ecx, ecx
	jne	SHORT $LN9@SelectDFSe

; 2595 : 				{
; 2596 : 					_tcscpy(gCurDogfightFile,FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	_strcpy
	add	esp, 8

; 2597 : 					_tcscat(gCurDogfightFile,"\\New Game.dfs");

	push	OFFSET ??_C@_0O@NKHDAPJK@?2New?5Game?4dfs?$AA@
	push	OFFSET ?gCurDogfightFile@@3PADA		; gCurDogfightFile
	call	_strcat
	add	esp, 8
$LN9@SelectDFSe:

; 2598 : 				}
; 2599 : 			}
; 2600 : 		}
; 2601 : 	}
; 2602 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectDFSettingsFileCB@@YAXJFPAVC_Base@@@Z ENDP	; SelectDFSettingsFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_crsr$ = -28						; size = 4
_lbox$ = -24						; size = 4
_clk$ = -20						; size = 4
_tree$ = -16						; size = 4
_sldr$ = -12						; size = 4
_winme$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?HookupDogFightControls@@YAXJ@Z PROC			; HookupDogFightControls

; 3016 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3017 : 	C_Window *winme;
; 3018 : 	C_Button *ctrl;
; 3019 : 	C_Slider *sldr;
; 3020 : 	C_ListBox *lbox;
; 3021 : 	C_Clock *clk;
; 3022 : 	C_Cursor *crsr;
; 3023 : 	C_TreeList *tree;
; 3024 : 
; 3025 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 3026 : 
; 3027 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN60@HookupDogF

; 3028 : 		return;

	jmp	$LN61@HookupDogF
$LN60@HookupDogF:

; 3029 : 
; 3030 : // DF_SUA Callbacks
; 3031 : 	// Time/Date CB
; 3032 : 	clk=(C_Clock *)winme->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 3033 : 	if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN59@HookupDogF

; 3034 : 	{
; 3035 : 		clk->SetTime(12 * 60 * 60);

	push	43200					; 0000a8c0H
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 3036 : 		clk->Refresh();

	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN59@HookupDogF:

; 3037 : 	}
; 3038 : 	ctrl=(C_Button *)winme->FindControl(TIME_EARLIER);

	push	10054					; 00002746H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3039 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN58@HookupDogF

; 3040 : 		ctrl->SetCallback(DogfightChangeTimeCB);

	push	OFFSET ?DogfightChangeTimeCB@@YAXJFPAVC_Base@@@Z ; DogfightChangeTimeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN58@HookupDogF:

; 3041 : 
; 3042 : 	ctrl=(C_Button *)winme->FindControl(TIME_LATER);

	push	10055					; 00002747H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3043 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN57@HookupDogF

; 3044 : 		ctrl->SetCallback(DogfightChangeTimeCB);

	push	OFFSET ?DogfightChangeTimeCB@@YAXJFPAVC_Base@@@Z ; DogfightChangeTimeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN57@HookupDogF:

; 3045 : 
; 3046 : // DF_MAIN_WINDOW callbacks
; 3047 : 
; 3048 : 	ctrl=(C_Button *)winme->FindControl(DGFT_SAVE_CTRL);

	push	21889					; 00005581H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3049 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN56@HookupDogF

; 3050 : 		ctrl->SetCallback(SaveDFSettingsCB);

	push	OFFSET ?SaveDFSettingsCB@@YAXJFPAVC_Base@@@Z ; SaveDFSettingsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN56@HookupDogF:

; 3051 : 
; 3052 : 	ctrl=(C_Button *)winme->FindControl(DGFT_RESTORE_CTRL);

	push	21890					; 00005582H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3053 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN55@HookupDogF

; 3054 : 		ctrl->SetCallback(NULL);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN55@HookupDogF:

; 3055 : 
; 3056 : 	ctrl=(C_Button *)winme->FindControl(TACREF_CTRL);

	push	10052					; 00002744H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3057 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN54@HookupDogF

; 3058 : 		ctrl->SetCallback(OpenTacticalReferenceCB);

	push	OFFSET ?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z ; OpenTacticalReferenceCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN54@HookupDogF:

; 3059 : 
; 3060 : 	ctrl=(C_Button *)winme->FindControl(LB_MAIN_CTRL);

	push	50003					; 0000c353H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3061 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN53@HookupDogF

; 3062 : 		ctrl->SetCallback(OpenLogBookCB);

	push	OFFSET ?OpenLogBookCB@@YAXJFPAVC_Base@@@Z ; OpenLogBookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN53@HookupDogF:

; 3063 : 
; 3064 : 	ctrl=(C_Button *)winme->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3065 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN52@HookupDogF

; 3066 : 		ctrl->SetCallback(OpenCommsCB);

	push	OFFSET ?OpenCommsCB@@YAXJFPAVC_Base@@@Z	; OpenCommsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN52@HookupDogF:

; 3067 : 
; 3068 : 	ctrl=(C_Button *)winme->FindControl(SP_MAIN_CTRL);

	push	70003					; 00011173H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3069 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN51@HookupDogF

; 3070 : 		ctrl->SetCallback(OpenSetupCB);

	push	OFFSET ?OpenSetupCB@@YAXJFPAVC_Base@@@Z	; OpenSetupCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN51@HookupDogF:

; 3071 : 
; 3072 : 	ctrl=(C_Button *)winme->FindControl(DGFT_EXIT_CTRL);

	push	21891					; 00005583H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3073 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN50@HookupDogF

; 3074 : 		ctrl->SetCallback(EndDogfightCB);

	push	OFFSET ?EndDogfightCB@@YAXJFPAVC_Base@@@Z ; EndDogfightCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN50@HookupDogF:

; 3075 : 
; 3076 : 	ctrl=(C_Button *)winme->FindControl(ACMI_CTRL);

	push	10047					; 0000273fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3077 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN49@HookupDogF

; 3078 : 		ctrl->SetCallback(ACMIButtonCB);

	push	OFFSET ?ACMIButtonCB@@YAXJFPAVC_Base@@@Z ; ACMIButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN49@HookupDogF:

; 3079 : 
; 3080 : // DF_HDR Callback
; 3081 : 
; 3082 : 	// Hook up Close Button
; 3083 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3084 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN48@HookupDogF

; 3085 : 		ctrl->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN48@HookupDogF:

; 3086 : 
; 3087 : // DF_MAKE A GAME
; 3088 : 	ctrl=(C_Button *)winme->FindControl(DF_OFFLINE_CTRL);

	push	21930					; 000055aaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3089 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN47@HookupDogF

; 3090 : 		ctrl->SetCallback(DogfightBeginCB);

	push	OFFSET ?DogfightBeginCB@@YAXJFPAVC_Base@@@Z ; DogfightBeginCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN47@HookupDogF:

; 3091 : 
; 3092 : // DF_MAKE A GAME
; 3093 : 	ctrl=(C_Button *)winme->FindControl(DF_HOST_CTRL);

	push	20323					; 00004f63H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3094 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN46@HookupDogF

; 3095 : 		ctrl->SetCallback(DogfightBeginCB);

	push	OFFSET ?DogfightBeginCB@@YAXJFPAVC_Base@@@Z ; DogfightBeginCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN46@HookupDogF:

; 3096 : 
; 3097 : //DF_SET window callbacks
; 3098 : 
; 3099 : 	sldr=(C_Slider *)winme->FindControl(RADAR_SLIDER);

	push	20138					; 00004eaaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3100 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN45@HookupDogF

; 3101 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN45@HookupDogF:

; 3102 : 
; 3103 : 	sldr=(C_Slider *)winme->FindControl(ALLIR_SLIDER);

	push	20139					; 00004eabH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3104 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN44@HookupDogF

; 3105 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN44@HookupDogF:

; 3106 : 
; 3107 : 	sldr=(C_Slider *)winme->FindControl(RIR_SLIDER);

	push	20140					; 00004eacH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3108 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN43@HookupDogF

; 3109 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN43@HookupDogF:

; 3110 : 
; 3111 : 	sldr=(C_Slider *)winme->FindControl(RANGE_SLIDER);

	push	20141					; 00004eadH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3112 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN42@HookupDogF

; 3113 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN42@HookupDogF:

; 3114 : 
; 3115 : 	sldr=(C_Slider *)winme->FindControl(ALTITUDE_SLIDER);

	push	20142					; 00004eaeH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3116 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN41@HookupDogF

; 3117 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN41@HookupDogF:

; 3118 : 
; 3119 : 	sldr=(C_Slider *)winme->FindControl(MP_SLIDER);

	push	20143					; 00004eafH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3120 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN40@HookupDogF

; 3121 : 		sldr->SetCallback(DogFightSLDRCB);

	push	OFFSET ?DogFightSLDRCB@@YAXJFPAVC_Base@@@Z ; DogFightSLDRCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN40@HookupDogF:

; 3122 : 
; 3123 : 	ctrl=(C_Button *)winme->FindControl(GUN_CTRL);

	push	20114					; 00004e92H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3124 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN39@HookupDogF

; 3125 : 		ctrl->SetCallback(ToggleGunCB);

	push	OFFSET ?ToggleGunCB@@YAXJFPAVC_Base@@@Z	; ToggleGunCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN39@HookupDogF:

; 3126 : 
; 3127 : 	ctrl=(C_Button *)winme->FindControl(ECM_CTRL);

	push	21932					; 000055acH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3128 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN38@HookupDogF

; 3129 : 		ctrl->SetCallback(ToggleECMCB);

	push	OFFSET ?ToggleECMCB@@YAXJFPAVC_Base@@@Z	; ToggleECMCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN38@HookupDogF:

; 3130 : 
; 3131 : 	lbox=(C_ListBox *)winme->FindControl(DF_GAME_TYPE);

	push	21226					; 000052eaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3132 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN37@HookupDogF

; 3133 : 		lbox->SetCallback(DFGameModeCB);

	push	OFFSET ?DFGameModeCB@@YAXJFPAVC_Base@@@Z ; DFGameModeCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN37@HookupDogF:

; 3134 : 
; 3135 : //	DF_LOAD Callbacks
; 3136 : 
; 3137 : 	ctrl=(C_Button *)winme->FindControl(DF_LOAD_CTRL);

	push	20320					; 00004f60H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3138 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN36@HookupDogF

; 3139 : 		ctrl->SetCallback(SeeDFFilesCB);

	push	OFFSET ?SeeDFFilesCB@@YAXJFPAVC_Base@@@Z ; SeeDFFilesCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN36@HookupDogF:

; 3140 : 
; 3141 : 	ctrl=(C_Button *)winme->FindControl(DF_JOIN_CTRL);

	push	20310					; 00004f56H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3142 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN35@HookupDogF

; 3143 : 		ctrl->SetCallback(SeeDFGamesCB);

	push	OFFSET ?SeeDFGamesCB@@YAXJFPAVC_Base@@@Z ; SeeDFGamesCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN35@HookupDogF:

; 3144 : 
; 3145 : 	ctrl=(C_Button *)winme->FindControl(DF_SAVE_CTRL);

	push	20321					; 00004f61H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3146 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN34@HookupDogF

; 3147 : 		ctrl->SetCallback(SaveDFSettingsCB);

	push	OFFSET ?SaveDFSettingsCB@@YAXJFPAVC_Base@@@Z ; SaveDFSettingsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN34@HookupDogF:

; 3148 : 
; 3149 : //	DF_TOOL Callbacks
; 3150 : 
; 3151 : 	ctrl=(C_Button *)winme->FindControl(SINGLE_FLY_CTRL);

	push	2000000					; 001e8480H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3152 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN33@HookupDogF

; 3153 : 		ctrl->SetCallback(DogfightFlyCB);

	push	OFFSET ?DogfightFlyCB@@YAXJFPAVC_Base@@@Z ; DogfightFlyCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN33@HookupDogF:

; 3154 : 
; 3155 : 	ctrl=(C_Button *)winme->FindControl(COMMS_FLY_CTRL);

	push	2000001					; 001e8481H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3156 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN32@HookupDogF

; 3157 : 		ctrl->SetCallback(DogfightFlyCB);

	push	OFFSET ?DogfightFlyCB@@YAXJFPAVC_Base@@@Z ; DogfightFlyCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN32@HookupDogF:

; 3158 : 
; 3159 : //	DF_TEAMS Callbacks
; 3160 : 
; 3161 : 	// Team play stuff
; 3162 : 	ctrl=(C_Button *)winme->FindControl(DF_CRIMSON);

	push	21231					; 000052efH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3163 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN31@HookupDogF

; 3164 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN31@HookupDogF:

; 3165 : 
; 3166 : 	ctrl=(C_Button *)winme->FindControl(DF_SHARK);

	push	21232					; 000052f0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3167 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN30@HookupDogF

; 3168 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN30@HookupDogF:

; 3169 : 
; 3170 : 	ctrl=(C_Button *)winme->FindControl(DF_VIPER);

	push	21233					; 000052f1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3171 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN29@HookupDogF

; 3172 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN29@HookupDogF:

; 3173 : 
; 3174 : 	ctrl=(C_Button *)winme->FindControl(DF_TIGER);

	push	21234					; 000052f2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3175 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN28@HookupDogF

; 3176 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN28@HookupDogF:

; 3177 : 
; 3178 : 	// On your own stuff
; 3179 : 	ctrl=(C_Button *)winme->FindControl(DF_MARK_CRIMSON);

	push	21235					; 000052f3H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3180 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN27@HookupDogF

; 3181 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN27@HookupDogF:

; 3182 : 
; 3183 : 	ctrl=(C_Button *)winme->FindControl(DF_MARK_SHARK);

	push	21236					; 000052f4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3184 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN26@HookupDogF

; 3185 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN26@HookupDogF:

; 3186 : 
; 3187 : 	ctrl=(C_Button *)winme->FindControl(DF_MARK_VIPER);

	push	21237					; 000052f5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3188 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN25@HookupDogF

; 3189 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN25@HookupDogF:

; 3190 : 
; 3191 : 	ctrl=(C_Button *)winme->FindControl(DF_MARK_TIGER);

	push	21238					; 000052f6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3192 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN24@HookupDogF

; 3193 : 		ctrl->SetCallback(AddDogfightPlayerCB);

	push	OFFSET ?AddDogfightPlayerCB@@YAXJFPAVC_Base@@@Z ; AddDogfightPlayerCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN24@HookupDogF:

; 3194 : 
; 3195 : 	ctrl=(C_Button*)winme->FindControl(ADD_CRIMSON_PLANE);

	push	21875					; 00005573H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3196 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN23@HookupDogF

; 3197 : 		ctrl->SetCallback(AddDogfightAICB);

	push	OFFSET ?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ; AddDogfightAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN23@HookupDogF:

; 3198 : 
; 3199 : 	ctrl=(C_Button*)winme->FindControl(ADD_SHARK_PLANE);

	push	21876					; 00005574H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3200 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN22@HookupDogF

; 3201 : 		ctrl->SetCallback(AddDogfightAICB);

	push	OFFSET ?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ; AddDogfightAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN22@HookupDogF:

; 3202 : 
; 3203 : 	ctrl=(C_Button*)winme->FindControl(ADD_USA_PLANE);

	push	21877					; 00005575H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3204 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN21@HookupDogF

; 3205 : 		ctrl->SetCallback(AddDogfightAICB);

	push	OFFSET ?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ; AddDogfightAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN21@HookupDogF:

; 3206 : 
; 3207 : 	ctrl=(C_Button*)winme->FindControl(ADD_TIGER_PLANE);

	push	21878					; 00005576H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3208 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN20@HookupDogF

; 3209 : 		ctrl->SetCallback(AddDogfightAICB);

	push	OFFSET ?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ; AddDogfightAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN20@HookupDogF:

; 3210 : 
; 3211 : 	ctrl=(C_Button*)winme->FindControl(ADD_FURBALL_PLANE);

	push	21881					; 00005579H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3212 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN19@HookupDogF

; 3213 : 		ctrl->SetCallback(AddDogfightAICB);

	push	OFFSET ?AddDogfightAICB@@YAXJFPAVC_Base@@@Z ; AddDogfightAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupDogF:

; 3214 : 
; 3215 : 	ctrl=(C_Button*)winme->FindControl(DEL_CRIMSON_PLANE);

	push	21884					; 0000557cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3216 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN18@HookupDogF

; 3217 : 		ctrl->SetCallback(RemoveAICB);

	push	OFFSET ?RemoveAICB@@YAXJFPAVC_Base@@@Z	; RemoveAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupDogF:

; 3218 : 
; 3219 : 	ctrl=(C_Button*)winme->FindControl(DEL_SHARK_PLANE);

	push	21885					; 0000557dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3220 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@HookupDogF

; 3221 : 		ctrl->SetCallback(RemoveAICB);

	push	OFFSET ?RemoveAICB@@YAXJFPAVC_Base@@@Z	; RemoveAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupDogF:

; 3222 : 
; 3223 : 	ctrl=(C_Button*)winme->FindControl(DEL_TBIRD_PLANE);

	push	21886					; 0000557eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3224 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupDogF

; 3225 : 		ctrl->SetCallback(RemoveAICB);

	push	OFFSET ?RemoveAICB@@YAXJFPAVC_Base@@@Z	; RemoveAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupDogF:

; 3226 : 
; 3227 : 	ctrl=(C_Button*)winme->FindControl(DEL_TIGER_PLANE);

	push	21887					; 0000557fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3228 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@HookupDogF

; 3229 : 		ctrl->SetCallback(RemoveAICB);

	push	OFFSET ?RemoveAICB@@YAXJFPAVC_Base@@@Z	; RemoveAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupDogF:

; 3230 : 
; 3231 : 	ctrl=(C_Button*)winme->FindControl(DEL_FURBALL_PLANE);

	push	21888					; 00005580H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3232 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupDogF

; 3233 : 		ctrl->SetCallback(RemoveAICB);

	push	OFFSET ?RemoveAICB@@YAXJFPAVC_Base@@@Z	; RemoveAICB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupDogF:

; 3234 : 
; 3235 : 	ctrl=(C_Button*)winme->FindControl(OK_FLIGHT);

	push	21922					; 000055a2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3236 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN13@HookupDogF

; 3237 : 		ctrl->SetCallback(AddDogfightFlightCB);

	push	OFFSET ?AddDogfightFlightCB@@YAXJFPAVC_Base@@@Z ; AddDogfightFlightCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupDogF:

; 3238 : 
; 3239 : 	ctrl=(C_Button*)winme->FindControl(CANCEL_FLIGHT);

	push	21921					; 000055a1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3240 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN12@HookupDogF

; 3241 : 		ctrl->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupDogF:

; 3242 : 
; 3243 : // Tree stuff for dogfight players
; 3244 : 	tree=(C_TreeList *)winme->FindControl(CRIMSON_TREE);

	push	21800					; 00005528H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3245 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN11@HookupDogF

; 3246 : 		tree->SetCallback(SelectDogfightItemCB);

	push	OFFSET ?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightItemCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupDogF:

; 3247 : 
; 3248 : 	tree=(C_TreeList *)winme->FindControl(SHARK_TREE);

	push	21801					; 00005529H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3249 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN10@HookupDogF

; 3250 : 		tree->SetCallback(SelectDogfightItemCB);

	push	OFFSET ?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightItemCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupDogF:

; 3251 : 
; 3252 : 	tree=(C_TreeList *)winme->FindControl(VIPER_TREE);

	push	21802					; 0000552aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3253 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN9@HookupDogF

; 3254 : 		tree->SetCallback(SelectDogfightItemCB);

	push	OFFSET ?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightItemCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupDogF:

; 3255 : 
; 3256 : 	tree=(C_TreeList *)winme->FindControl(TIGER_TREE);

	push	21803					; 0000552bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3257 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN8@HookupDogF

; 3258 : 		tree->SetCallback(SelectDogfightItemCB);

	push	OFFSET ?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightItemCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupDogF:

; 3259 : 
; 3260 : 	tree=(C_TreeList *)winme->FindControl(FURBALL_TREE);

	push	21804					; 0000552cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3261 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN7@HookupDogF

; 3262 : 		tree->SetCallback(SelectDogfightItemCB);

	push	OFFSET ?SelectDogfightItemCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightItemCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupDogF:

; 3263 : 
; 3264 : //	DF_MAP Callbacks
; 3265 : 	// sfr: hack to fix
; 3266 : 	//crsr=(C_Cursor *)winme->FindControl(10049);
; 3267 : 	crsr=(C_Cursor *)winme->FindControl(DF_MAP_CURSOR);

	push	21062					; 00005246H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _crsr$[ebp], eax

; 3268 : 	if(crsr)

	cmp	DWORD PTR _crsr$[ebp], 0
	je	SHORT $LN6@HookupDogF

; 3269 : 		crsr->SetCallback(MoveGameLocationCB);

	push	OFFSET ?MoveGameLocationCB@@YAXJFPAVC_Base@@@Z ; MoveGameLocationCB
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _crsr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupDogF:

; 3270 : 
; 3271 : //	Debriefing callbacks
; 3272 : 	ctrl=(C_Button *)winme->FindControl(DF_CLOSE_WINDOW);

	push	20020					; 00004e34H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3273 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@HookupDogF

; 3274 : 		ctrl->SetCallback(CleanupDebriefCB);

	push	OFFSET ?CleanupDebriefCB@@YAXJFPAVC_Base@@@Z ; CleanupDebriefCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupDogF:

; 3275 : 
; 3276 : 	ctrl=(C_Button *)winme->FindControl(DF_SAVE_DBRF_CTRL);

	push	21091					; 00005263H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3277 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@HookupDogF

; 3278 : 		ctrl->SetCallback(SaveResultsCB);

	push	OFFSET ?SaveResultsCB@@YAXJFPAVC_Base@@@Z ; SaveResultsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupDogF:

; 3279 : 
; 3280 : // Delete File button
; 3281 : 	ctrl=(C_Button *)winme->FindControl(DGFT_DELETE);

	push	21931					; 000055abH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3282 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupDogF

; 3283 : 		ctrl->SetCallback(DeleteVerifyFileCB);

	push	OFFSET ?DeleteVerifyFileCB@@YAXJFPAVC_Base@@@Z ; DeleteVerifyFileCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupDogF:

; 3284 : 
; 3285 : // Help GUIDE thing
; 3286 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3287 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@HookupDogF

; 3288 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@HookupDogF:

; 3289 : 
; 3290 : 	tree=(C_TreeList *)winme->FindControl(DOGFIGHT_TREE);

	push	21805					; 0000552dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 3291 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN61@HookupDogF

; 3292 : 	{
; 3293 : 		DogfightGames=tree;

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A, ecx ; DogfightGames

; 3294 : 		DogfightGames->SetCallback(SelectDogfightGameCB);

	push	OFFSET ?SelectDogfightGameCB@@YAXJFPAVC_Base@@@Z ; SelectDogfightGameCB
	mov	edx, DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A ; DogfightGames
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A ; DogfightGames
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN61@HookupDogF:

; 3295 : 	}
; 3296 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HookupDogFightControls@@YAXJ@Z ENDP			; HookupDogFightControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_Leave$ = -12						; size = 4
_win$ = -8						; size = 4
_winctrls$ = -4						; size = 4
_ID$ = 8						; size = 4
?DeleteGroupList@@YAXJ@Z PROC				; DeleteGroupList

; 1383 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1384 : 	C_Window *win;
; 1385 : 	CONTROLLIST *winctrls;
; 1386 : 	F4CSECTIONHANDLE* Leave;
; 1387 : 
; 1388 : // Clear controls from window with the userdata[_UI95_DELGROUP_SLOT_] == _UI95_DELGROUP_ID_
; 1389 : 
; 1390 : 	win=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1391 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN6@DeleteGrou

; 1392 : 	{
; 1393 : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1394 : 		winctrls=win->GetControlList();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetControlList@C_Window@@QAEPAUControlListStr@@XZ ; C_Window::GetControlList
	mov	DWORD PTR _winctrls$[ebp], eax
$LN4@DeleteGrou:

; 1395 : 		while(winctrls)

	cmp	DWORD PTR _winctrls$[ebp], 0
	je	SHORT $LN3@DeleteGrou

; 1396 : 		{
; 1397 : 			if(winctrls->Control_->GetUserNumber(_UI95_DELGROUP_SLOT_) == _UI95_DELGROUP_ID_)

	push	7
	mov	edx, DWORD PTR _winctrls$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 5551212				; 0054b46cH
	jne	SHORT $LN2@DeleteGrou

; 1398 : 			{
; 1399 : 				winctrls=win->RemoveControl(winctrls);

	mov	eax, DWORD PTR _winctrls$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RemoveControl@C_Window@@QAEPAUControlListStr@@PAU2@@Z ; C_Window::RemoveControl
	mov	DWORD PTR _winctrls$[ebp], eax

; 1400 : 			}
; 1401 : 			else

	jmp	SHORT $LN1@DeleteGrou
$LN2@DeleteGrou:

; 1402 : 				winctrls=winctrls->Next;

	mov	ecx, DWORD PTR _winctrls$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _winctrls$[ebp], edx
$LN1@DeleteGrou:

; 1403 : 		}

	jmp	SHORT $LN4@DeleteGrou
$LN3@DeleteGrou:

; 1404 : 		UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN6@DeleteGrou:

; 1405 : 	}
; 1406 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteGroupList@@YAXJ@Z ENDP				; DeleteGroupList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_sptype$ = -3						; size = 1
_stype$ = -2						; size = 1
_i$ = -1						; size = 1
_flight$ = 8						; size = 4
?GetACIDFromFlight@@YAJPAVFlightClass@@@Z PROC		; GetACIDFromFlight

; 1430 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1431 : 	uchar i,stype = flight->GetSType(),sptype = flight->GetSPType();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	mov	BYTE PTR _stype$[ebp], al
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetSPType@CampBaseClass@@QBEEXZ	; CampBaseClass::GetSPType
	mov	BYTE PTR _sptype$[ebp], al

; 1432 : 
; 1433 : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 1434 : 	i=0;

	mov	BYTE PTR _i$[ebp], 0
$LN3@GetACIDFro:

; 1435 : 	while(DFAIPlanes[i].ID && i < 255)

	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	cmp	DWORD PTR [ecx+eax+4], 0
	je	$LN2@GetACIDFro
	movzx	edx, BYTE PTR _i$[ebp]
	cmp	edx, 255				; 000000ffH
	jge	$LN2@GetACIDFro

; 1436 : 	{
; 1437 : 		if(DFAIPlanes[i].UnitSType && DFAIPlanes[i].SPType && DFAIPlanes[i].UnitSType == stype && DFAIPlanes[i].SPType == sptype)

	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	edx, BYTE PTR [ecx+eax+3]
	test	edx, edx
	je	SHORT $LN1@GetACIDFro
	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	edx, BYTE PTR [ecx+eax+2]
	test	edx, edx
	je	SHORT $LN1@GetACIDFro
	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	edx, BYTE PTR [ecx+eax+3]
	movzx	eax, BYTE PTR _stype$[ebp]
	cmp	edx, eax
	jne	SHORT $LN1@GetACIDFro
	movzx	ecx, BYTE PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	movsx	eax, BYTE PTR [edx+ecx+2]
	movzx	ecx, BYTE PTR _sptype$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@GetACIDFro

; 1438 : 			return(DFAIPlanes[i].ID);

	movzx	edx, BYTE PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	eax, DWORD PTR [eax+edx+4]
	jmp	SHORT $LN4@GetACIDFro
$LN1@GetACIDFro:

; 1439 : 		i++;

	mov	cl, BYTE PTR _i$[ebp]
	add	cl, 1
	mov	BYTE PTR _i$[ebp], cl

; 1440 : 	}

	jmp	$LN3@GetACIDFro
$LN2@GetACIDFro:

; 1441 : 	return(0);

	xor	eax, eax
$LN4@GetACIDFro:

; 1442 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetACIDFromFlight@@YAJPAVFlightClass@@@Z ENDP		; GetACIDFromFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_i$ = -1						; size = 1
_ID$ = 8						; size = 4
?GetPlaneListID@@YAEJ@Z PROC				; GetPlaneListID

; 1415 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1416 : 	uchar i;
; 1417 : 
; 1418 : 	LoadDfPlanes();

	call	?LoadDfPlanes@@YAXXZ			; LoadDfPlanes

; 1419 : 	i=0;

	mov	BYTE PTR _i$[ebp], 0
$LN3@GetPlaneLi:

; 1420 : 	while(DFAIPlanes[i].ID && i < 255)

	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	cmp	DWORD PTR [ecx+eax+4], 0
	je	SHORT $LN2@GetPlaneLi
	movzx	edx, BYTE PTR _i$[ebp]
	cmp	edx, 255				; 000000ffH
	jge	SHORT $LN2@GetPlaneLi

; 1421 : 	{
; 1422 : 		if(DFAIPlanes[i].ID == ID)

	movzx	eax, BYTE PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR ?DFAIPlanes@@3PAUDF_AIRPLANE_TYPE@@A ; DFAIPlanes
	mov	edx, DWORD PTR [ecx+eax+4]
	cmp	edx, DWORD PTR _ID$[ebp]
	jne	SHORT $LN1@GetPlaneLi

; 1423 : 			return(i);

	mov	al, BYTE PTR _i$[ebp]
	jmp	SHORT $LN4@GetPlaneLi
$LN1@GetPlaneLi:

; 1424 : 		i++;

	mov	al, BYTE PTR _i$[ebp]
	add	al, 1
	mov	BYTE PTR _i$[ebp], al

; 1425 : 	}

	jmp	SHORT $LN3@GetPlaneLi
$LN2@GetPlaneLi:

; 1426 : 	return(0);

	xor	al, al
$LN4@GetPlaneLi:

; 1427 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlaneListID@@YAEJ@Z ENDP				; GetPlaneListID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_ID$ = 8						; size = 4
?ConvertDFIDtoTeam@@YAFJ@Z PROC				; ConvertDFIDtoTeam

; 1490 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1491 : 	switch(ID)

	mov	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 21875		; 00005573H
	jg	SHORT $LN9@ConvertDFI
	cmp	DWORD PTR tv64[ebp], 21875		; 00005573H
	je	SHORT $LN4@ConvertDFI
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 21231				; 000052efH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 7
	ja	SHORT $LN5@ConvertDFI
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN10@ConvertDFI[edx*4]
$LN9@ConvertDFI:
	cmp	DWORD PTR tv64[ebp], 21876		; 00005574H
	je	SHORT $LN3@ConvertDFI
	cmp	DWORD PTR tv64[ebp], 21877		; 00005575H
	je	SHORT $LN2@ConvertDFI
	cmp	DWORD PTR tv64[ebp], 21878		; 00005576H
	je	SHORT $LN1@ConvertDFI
	jmp	SHORT $LN5@ConvertDFI
$LN4@ConvertDFI:

; 1492 : 	{
; 1493 : 		case DF_CRIMSON:
; 1494 : 		case ADD_CRIMSON_PLANE:
; 1495 : 		case DF_MARK_CRIMSON:
; 1496 : 			return(1);

	mov	eax, 1
	jmp	SHORT $LN7@ConvertDFI

; 1497 : 			break;

	jmp	SHORT $LN5@ConvertDFI
$LN3@ConvertDFI:

; 1498 : 		case DF_SHARK:
; 1499 : 		case ADD_SHARK_PLANE:
; 1500 : 		case DF_MARK_SHARK:
; 1501 : 			return(2);

	mov	eax, 2
	jmp	SHORT $LN7@ConvertDFI

; 1502 : 			break;

	jmp	SHORT $LN5@ConvertDFI
$LN2@ConvertDFI:

; 1503 : 		case DF_VIPER:
; 1504 : 		case ADD_USA_PLANE:
; 1505 : 		case DF_MARK_VIPER:
; 1506 : 			return(3);

	mov	eax, 3
	jmp	SHORT $LN7@ConvertDFI

; 1507 : 			break;

	jmp	SHORT $LN5@ConvertDFI
$LN1@ConvertDFI:

; 1508 : 		case DF_TIGER:
; 1509 : 		case ADD_TIGER_PLANE:
; 1510 : 		case DF_MARK_TIGER:
; 1511 : 			return(4);

	mov	eax, 4
	jmp	SHORT $LN7@ConvertDFI
$LN5@ConvertDFI:

; 1512 : 			break;
; 1513 : 	}
; 1514 : 	return(0);

	xor	eax, eax
$LN7@ConvertDFI:

; 1515 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@ConvertDFI:
	DD	$LN4@ConvertDFI
	DD	$LN3@ConvertDFI
	DD	$LN2@ConvertDFI
	DD	$LN1@ConvertDFI
	DD	$LN4@ConvertDFI
	DD	$LN3@ConvertDFI
	DD	$LN2@ConvertDFI
	DD	$LN1@ConvertDFI
?ConvertDFIDtoTeam@@YAFJ@Z ENDP				; ConvertDFIDtoTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_list$ = -4						; size = 4
?ClearDFTeamLists@@YAXXZ PROC				; ClearDFTeamLists

; 2280 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2281 : 	C_Window *win;
; 2282 : 	C_TreeList *list;
; 2283 : 
; 2284 : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2285 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN12@ClearDFTea

; 2286 : 	{
; 2287 : 		list=(C_TreeList *)win->FindControl(CRIMSON_TREE);

	push	21800					; 00005528H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2288 : 		if(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN10@ClearDFTea

; 2289 : 		{
; 2290 : 			list->DeleteBranch(list->GetRoot());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2291 : 			list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2292 : 			if(!(list->GetFlags() & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN10@ClearDFTea

; 2293 : 				win->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN10@ClearDFTea:

; 2294 : 		}
; 2295 : 
; 2296 : 		list=(C_TreeList *)win->FindControl(SHARK_TREE);

	push	21801					; 00005529H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2297 : 		if(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN8@ClearDFTea

; 2298 : 		{
; 2299 : 			list->DeleteBranch(list->GetRoot());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2300 : 			list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2301 : 			if(!(list->GetFlags() & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN8@ClearDFTea

; 2302 : 				win->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN8@ClearDFTea:

; 2303 : 		}
; 2304 : 
; 2305 : 		list=(C_TreeList *)win->FindControl(TIGER_TREE);

	push	21803					; 0000552bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2306 : 		if(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN6@ClearDFTea

; 2307 : 		{
; 2308 : 			list->DeleteBranch(list->GetRoot());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2309 : 			list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2310 : 			if(!(list->GetFlags() & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN6@ClearDFTea

; 2311 : 				win->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN6@ClearDFTea:

; 2312 : 		}
; 2313 : 
; 2314 : 		list=(C_TreeList *)win->FindControl(VIPER_TREE);

	push	21802					; 0000552aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2315 : 		if(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN4@ClearDFTea

; 2316 : 		{
; 2317 : 			list->DeleteBranch(list->GetRoot());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2318 : 			list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2319 : 			if(!(list->GetFlags() & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN4@ClearDFTea

; 2320 : 				win->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@ClearDFTea:

; 2321 : 		}
; 2322 : 
; 2323 : 		list=(C_TreeList *)win->FindControl(FURBALL_TREE);

	push	21804					; 0000552cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2324 : 		if(list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN12@ClearDFTea

; 2325 : 		{
; 2326 : 			list->DeleteBranch(list->GetRoot());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2327 : 			list->RecalcSize();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2328 : 			if(!(list->GetFlags() & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN12@ClearDFTea

; 2329 : 				win->RefreshClient(list->GetClient());

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN12@ClearDFTea:

; 2330 : 		}
; 2331 : 	}
; 2332 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDFTeamLists@@YAXXZ ENDP				; ClearDFTeamLists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv238 = -20						; size = 4
tv248 = -16						; size = 4
_flight$ = -12						; size = 4
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?CheckDelButtons@@YAXXZ PROC				; CheckDelButtons

; 696  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 697  : 	Flight flight;
; 698  : 	C_Window *win;
; 699  : 	C_Button *btn;
; 700  : 
; 701  : 	win=gMainHandler->FindWindow(DF_TEAM_WIN);

	push	20400					; 00004fb0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 702  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN23@CheckDelBu

; 703  : 	{
; 704  : 		btn=(C_Button*)win->FindControl(DEL_FURBALL_PLANE);

	push	21888					; 00005580H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 705  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN21@CheckDelBu

; 706  : 		{
; 707  : 			btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 708  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN21@CheckDelBu:

; 709  : 		}
; 710  : 		btn=(C_Button*)win->FindControl(DEL_CRIMSON_PLANE);

	push	21884					; 0000557cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 711  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN20@CheckDelBu

; 712  : 		{
; 713  : 			btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 714  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@CheckDelBu:

; 715  : 		}
; 716  : 		btn=(C_Button*)win->FindControl(DEL_SHARK_PLANE);

	push	21885					; 0000557dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 717  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN19@CheckDelBu

; 718  : 		{
; 719  : 			btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 720  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN19@CheckDelBu:

; 721  : 		}
; 722  : 		btn=(C_Button*)win->FindControl(DEL_TBIRD_PLANE);

	push	21886					; 0000557eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 723  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN18@CheckDelBu

; 724  : 		{
; 725  : 			btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 726  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN18@CheckDelBu:

; 727  : 		}
; 728  : 		btn=(C_Button*)win->FindControl(DEL_TIGER_PLANE);

	push	21887					; 0000557fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 729  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN17@CheckDelBu

; 730  : 		{
; 731  : 			btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 732  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN17@CheckDelBu:

; 733  : 		}
; 734  : 		if(gCurrentFlightID == FalconNullId || gCurrentAircraftNum < 0)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?gCurrentFlightID@@3VVU_ID@@A ; gCurrentFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@CheckDelBu
	movsx	edx, WORD PTR ?gCurrentAircraftNum@@3FA	; gCurrentAircraftNum
	test	edx, edx
	jge	SHORT $LN16@CheckDelBu
$LN15@CheckDelBu:

; 735  : 			return;

	jmp	$LN23@CheckDelBu
$LN16@CheckDelBu:

; 736  : 		flight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 737  : 		if(flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN23@CheckDelBu

; 738  : 		{
; 739  : 			if(flight->player_slots[gCurrentAircraftNum] == 255)

	movsx	edx, WORD PTR ?gCurrentAircraftNum@@3FA	; gCurrentAircraftNum
	mov	eax, DWORD PTR _flight$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+420]
	cmp	ecx, 255				; 000000ffH
	jne	$LN23@CheckDelBu

; 740  : 			{
; 741  : 				switch (SimDogfight.GetGameType())

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	mov	DWORD PTR tv238[ebp], eax
	cmp	DWORD PTR tv238[ebp], 0
	jle	$LN2@CheckDelBu
	cmp	DWORD PTR tv238[ebp], 2
	jle	SHORT $LN10@CheckDelBu
	jmp	$LN2@CheckDelBu
$LN10@CheckDelBu:

; 742  : 				{
; 743  : 					case dog_TeamFurball:
; 744  : 					case dog_TeamMatchplay:
; 745  : 						switch(flight->GetTeam())

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR tv248[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv248[ebp], ecx
	cmp	DWORD PTR tv248[ebp], 3
	ja	SHORT $LN8@CheckDelBu
	mov	edx, DWORD PTR tv248[ebp]
	jmp	DWORD PTR $LN25@CheckDelBu[edx*4]
$LN7@CheckDelBu:

; 746  : 						{
; 747  : 							case 1:
; 748  : 								btn=(C_Button*)win->FindControl(DEL_CRIMSON_PLANE);

	push	21884					; 0000557cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 749  : 								break;

	jmp	SHORT $LN8@CheckDelBu
$LN6@CheckDelBu:

; 750  : 							case 2:
; 751  : 								btn=(C_Button*)win->FindControl(DEL_SHARK_PLANE);

	push	21885					; 0000557dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 752  : 								break;

	jmp	SHORT $LN8@CheckDelBu
$LN5@CheckDelBu:

; 753  : 							case 3:
; 754  : 								btn=(C_Button*)win->FindControl(DEL_TBIRD_PLANE);

	push	21886					; 0000557eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 755  : 								break;

	jmp	SHORT $LN8@CheckDelBu
$LN4@CheckDelBu:

; 756  : 							case 4:
; 757  : 								btn=(C_Button*)win->FindControl(DEL_TIGER_PLANE);

	push	21887					; 0000557fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax
$LN8@CheckDelBu:

; 758  : 								break;
; 759  : 						}
; 760  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@CheckDelBu

; 761  : 						{
; 762  : 							btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 763  : 							btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@CheckDelBu:

; 764  : 						}
; 765  : 						break;

	jmp	SHORT $LN23@CheckDelBu
$LN2@CheckDelBu:

; 766  : 					default:
; 767  : 						btn=(C_Button*)win->FindControl(DEL_FURBALL_PLANE);

	push	21888					; 00005580H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 768  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN23@CheckDelBu

; 769  : 						{
; 770  : 							btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 771  : 							btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN23@CheckDelBu:

; 772  : 						}
; 773  : 						break;
; 774  : 				}
; 775  : 			}
; 776  : 		}
; 777  : 	}
; 778  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN25@CheckDelBu:
	DD	$LN7@CheckDelBu
	DD	$LN6@CheckDelBu
	DD	$LN5@CheckDelBu
	DD	$LN4@CheckDelBu
?CheckDelButtons@@YAXXZ ENDP				; CheckDelButtons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\dogfight\dogfight.cpp
_TEXT	SEGMENT
tv188 = -28						; size = 4
tv174 = -24						; size = 4
tv140 = -20						; size = 4
_Enabled$ = -16						; size = 4
_win$ = -12						; size = 4
_btn2$ = -8						; size = 4
_btn1$ = -4						; size = 4
?CheckFlyButton@@YAXXZ PROC				; CheckFlyButton

; 2061 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 2062 : 	C_Window *win;
; 2063 : 	C_Button *btn1,*btn2;
; 2064 : 	BOOL Enabled;
; 2065 : 
; 2066 : 	win=gMainHandler->FindWindow(DF_PLAY_TOOLBAR_WIN);

	push	21883					; 0000557bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2067 : 	if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN6@CheckFlyBu

; 2068 : 		return;

	jmp	$LN7@CheckFlyBu
$LN6@CheckFlyBu:

; 2069 : 
; 2070 : 	btn1=(C_Button *)win->FindControl(SINGLE_FLY_CTRL);

	push	2000000					; 001e8480H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn1$[ebp], eax

; 2071 : 	btn2=(C_Button *)win->FindControl(COMMS_FLY_CTRL);

	push	2000001					; 001e8481H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn2$[ebp], eax

; 2072 : 
; 2073 : 	if(btn1 == NULL || btn2 == NULL)

	cmp	DWORD PTR _btn1$[ebp], 0
	je	SHORT $LN4@CheckFlyBu
	cmp	DWORD PTR _btn2$[ebp], 0
	jne	SHORT $LN5@CheckFlyBu
$LN4@CheckFlyBu:

; 2074 : 		return;

	jmp	$LN7@CheckFlyBu
$LN5@CheckFlyBu:

; 2075 : 
; 2076 : 	btn1->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn1$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn1$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 2077 : 	btn2->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 2078 : 
; 2079 : 	Enabled=FALSE;

	mov	DWORD PTR _Enabled$[ebp], 0

; 2080 : 
; 2081 : 	if (vuLocalGame != vuPlayerPoolGroup && FalconLocalSession->GetTeam() != 255 && FalconLocalSession->GetPilotSlot() != 255)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@CheckFlyBu
	mov	DWORD PTR tv140[ebp], 0
	jmp	SHORT $LN10@CheckFlyBu
$LN9@CheckFlyBu:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv140[ebp], eax
$LN10@CheckFlyBu:
	mov	edx, DWORD PTR tv140[ebp]
	cmp	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	SHORT $LN3@CheckFlyBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN3@CheckFlyBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	ecx, al
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN3@CheckFlyBu

; 2082 : 		Enabled=TRUE;

	mov	DWORD PTR _Enabled$[ebp], 1
$LN3@CheckFlyBu:

; 2083 : 
; 2084 : 	// In dogfight games, check ready state
; 2085 : 	if (FalconLocalGame && FalconLocalGame->GetGameType() == game_Dogfight && !SimDogfight.ReadyToStart())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@CheckFlyBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN12@CheckFlyBu
$LN11@CheckFlyBu:
	mov	DWORD PTR tv174[ebp], 0
$LN12@CheckFlyBu:
	cmp	DWORD PTR tv174[ebp], 0
	je	SHORT $LN2@CheckFlyBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@CheckFlyBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN14@CheckFlyBu
$LN13@CheckFlyBu:
	mov	DWORD PTR tv188[ebp], 0
$LN14@CheckFlyBu:
	mov	ecx, DWORD PTR tv188[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	jne	SHORT $LN2@CheckFlyBu
	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?ReadyToStart@DogfightClass@@QAEHXZ	; DogfightClass::ReadyToStart
	test	eax, eax
	jne	SHORT $LN2@CheckFlyBu

; 2086 : 		Enabled = FALSE;

	mov	DWORD PTR _Enabled$[ebp], 0
$LN2@CheckFlyBu:

; 2087 : 
; 2088 : 	if(Enabled)

	cmp	DWORD PTR _Enabled$[ebp], 0
	je	SHORT $LN1@CheckFlyBu

; 2089 : 	{
; 2090 : 		btn1->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn1$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2091 : 		btn2->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN1@CheckFlyBu:

; 2092 : 	}
; 2093 : 	btn1->Refresh();

	mov	ecx, DWORD PTR _btn1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn1$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2094 : 	btn2->Refresh();

	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn2$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@CheckFlyBu:

; 2095 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CheckFlyButton@@YAXXZ ENDP				; CheckFlyButton
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSPType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSPType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSPType, COMDAT
; _this$ = ecx

; 291  : 	uchar GetSPType (void) const						{	return (EntityType())->classInfo_[VU_SPTYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 2
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSPType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSPType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsLoaded@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLoaded@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsLoaded, COMDAT
; _this$ = ecx

; 177  : 	int IsLoaded (void)										{ return Flags & CAMP_LOADED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLoaded@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ PROC ; DogfightClass::GetDogfightGameStatus, COMDAT
; _this$ = ecx

; 92   : 		DogfightStatus GetDogfightGameStatus (void)		{ return gameStatus; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDogfightGameStatus@DogfightClass@@QAE?AW4DogfightStatus@@XZ ENDP ; DogfightClass::GetDogfightGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ PROC ; DogfightClass::GetGameType, COMDAT
; _this$ = ecx

; 90   : 		DogfightType GetGameType (void)					{ return gameType; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ENDP ; DogfightClass::GetGameType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?IsSetFlag@DogfightClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_flag$ = 8						; size = 4
?IsSetFlag@DogfightClass@@QAEHH@Z PROC			; DogfightClass::IsSetFlag, COMDAT
; _this$ = ecx

; 85   : 		int  IsSetFlag (int flag)						{ return (flags & flag) ? 1 : 0;};

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	and	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN3@IsSetFlag
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsSetFlag
$LN3@IsSetFlag:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsSetFlag:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSetFlag@DogfightClass@@QAEHH@Z ENDP			; DogfightClass::IsSetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?UnSetFlag@DogfightClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?UnSetFlag@DogfightClass@@QAEXH@Z PROC			; DogfightClass::UnSetFlag, COMDAT
; _this$ = ecx

; 84   : 		void UnSetFlag (int flag)						{ flags &= ~flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+40]
	and	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+40], dx
	mov	esp, ebp
	pop	ebp
	ret	4
?UnSetFlag@DogfightClass@@QAEXH@Z ENDP			; DogfightClass::UnSetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?SetFlag@DogfightClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetFlag@DogfightClass@@QAEXH@Z PROC			; DogfightClass::SetFlag, COMDAT
; _this$ = ecx

; 83   : 		void SetFlag (int flag)							{ flags |= flag;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlag@DogfightClass@@QAEXH@Z ENDP			; DogfightClass::SetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetNumAllAspectMissiles@DogfightClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumAllAspectMissiles@DogfightClass@@QBEEXZ PROC	; DogfightClass::GetNumAllAspectMissiles, COMDAT
; _this$ = ecx

; 80   : 		uchar GetNumAllAspectMissiles() const           { return numAllAspectMissiles;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumAllAspectMissiles@DogfightClass@@QBEEXZ ENDP	; DogfightClass::GetNumAllAspectMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetNumRearAspectMissiles@DogfightClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumRearAspectMissiles@DogfightClass@@QBEEXZ PROC	; DogfightClass::GetNumRearAspectMissiles, COMDAT
; _this$ = ecx

; 79   : 		uchar GetNumRearAspectMissiles() const          { return numRearAspectMissiles;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+47]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumRearAspectMissiles@DogfightClass@@QBEEXZ ENDP	; DogfightClass::GetNumRearAspectMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetNumRadarMissiles@DogfightClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumRadarMissiles@DogfightClass@@QBEEXZ PROC		; DogfightClass::GetNumRadarMissiles, COMDAT
; _this$ = ecx

; 78   : 		uchar GetNumRadarMissiles() const               { return numRadarMissiles;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+46]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumRadarMissiles@DogfightClass@@QBEEXZ ENDP		; DogfightClass::GetNumRadarMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?SetNumAllAspectMissiles@DogfightClass@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newAll$ = 8						; size = 1
?SetNumAllAspectMissiles@DogfightClass@@QAEXE@Z PROC	; DogfightClass::SetNumAllAspectMissiles, COMDAT
; _this$ = ecx

; 76   : 		void SetNumAllAspectMissiles (uchar newAll)		{ numAllAspectMissiles = newAll;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newAll$[ebp]
	mov	BYTE PTR [eax+48], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumAllAspectMissiles@DogfightClass@@QAEXE@Z ENDP	; DogfightClass::SetNumAllAspectMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?SetNumRearAspectMissiles@DogfightClass@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newRear$ = 8						; size = 1
?SetNumRearAspectMissiles@DogfightClass@@QAEXE@Z PROC	; DogfightClass::SetNumRearAspectMissiles, COMDAT
; _this$ = ecx

; 75   : 		void SetNumRearAspectMissiles (uchar newRear)   { numRearAspectMissiles = newRear;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newRear$[ebp]
	mov	BYTE PTR [eax+47], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumRearAspectMissiles@DogfightClass@@QAEXE@Z ENDP	; DogfightClass::SetNumRearAspectMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?SetNumRadarMissiles@DogfightClass@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newRadar$ = 8						; size = 1
?SetNumRadarMissiles@DogfightClass@@QAEXE@Z PROC	; DogfightClass::SetNumRadarMissiles, COMDAT
; _this$ = ecx

; 74   : 		void SetNumRadarMissiles (uchar newRadar)		{ numRadarMissiles = newRadar;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newRadar$[ebp]
	mov	BYTE PTR [eax+46], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNumRadarMissiles@DogfightClass@@QAEXE@Z ENDP	; DogfightClass::SetNumRadarMissiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z PROC	; DogfightClass::SetGameType, COMDAT
; _this$ = ecx

; 69   : 		void SetGameType (DogfightType type)			{ gameType = type; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGameType@DogfightClass@@QAEXW4DogfightType@@@Z ENDP	; DogfightClass::SetGameType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv79 = -4						; size = 4
?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ PROC		; UIComms::GetGame, COMDAT
; _this$ = ecx

; 124  : 		VuGameEntity* GetGame()			{ return FalconLocalGame; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@GetGame
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@GetGame
$LN3@GetGame:
	mov	DWORD PTR tv79[ebp], 0
$LN4@GetGame:
	mov	eax, DWORD PTR tv79[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@UIComms@@QAEPAVVuGameEntity@@XZ ENDP		; UIComms::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPilotSlot@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotSlot@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetPilotSlot, COMDAT
; _this$ = ecx

; 146  : 	uchar GetPilotSlot (void) const               { return pilotSlot; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+512]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotSlot@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetAircraftNum@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAircraftNum@FalconSessionEntity@@QBEEXZ PROC	; FalconSessionEntity::GetAircraftNum, COMDAT
; _this$ = ecx

; 145  : 	uchar GetAircraftNum (void) const             { return aircraftNum; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+511]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAircraftNum@FalconSessionEntity@@QBEEXZ ENDP	; FalconSessionEntity::GetAircraftNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetAceFactor@FalconSessionEntity@@QBEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetAceFactor@FalconSessionEntity@@QBEMXZ PROC		; FalconSessionEntity::GetAceFactor, COMDAT
; _this$ = ecx

; 141  : 	float GetAceFactor() const                    { return(AceFactor); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+488]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAceFactor@FalconSessionEntity@@QBEMXZ ENDP		; FalconSessionEntity::GetAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ PROC ; FalconSessionEntity::GetPlayerFlight, COMDAT
; _this$ = ecx

; 139  : 	FlightClass* GetPlayerFlight(void) const      { return playerFlightPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ENDP ; FalconSessionEntity::GetPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ PROC	; FalconSessionEntity::GetPlayerCallsign, COMDAT
; _this$ = ecx

; 132  : 	_TCHAR* GetPlayerCallsign(void)               { return callSign; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ENDP	; FalconSessionEntity::GetPlayerCallsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\rules.h
;	COMDAT ?GetRules@RulesClass@@QAEPAURulesStruct@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ PROC	; RulesClass::GetRules, COMDAT
; _this$ = ecx

; 49   : 		RulesStruct* GetRules(void)								{return (this);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ENDP	; RulesClass::GetRules
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cdogflt.h
;	COMDAT ?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ PROC		; C_Dog_Flight::GetVUID, COMDAT
; _this$ = ecx

; 61   : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Dog_Flight@@QAE?AVVU_ID@@XZ ENDP		; C_Dog_Flight::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cdogflt.h
;	COMDAT ?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z PROC		; C_Dog_Flight::SetVUID, COMDAT
; _this$ = ecx

; 60   : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+128], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+132], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Dog_Flight@@QAEXVVU_ID@@@Z ENDP		; C_Dog_Flight::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cdogflt.h
;	COMDAT ?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ PROC	; C_Dog_Flight::GetAircraft, COMDAT
; _this$ = ecx

; 53   : 		O_Output *GetAircraft()		{ return(Aircraft_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+144]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAircraft@C_Dog_Flight@@QAEPAVO_Output@@XZ ENDP	; C_Dog_Flight::GetAircraft
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ PROC			; C_Pilot::GetVUID, COMDAT
; _this$ = ecx

; 61   : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR [eax+128]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Pilot@@QAE?AVVU_ID@@XZ ENDP			; C_Pilot::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?SetVUID@C_Pilot@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetVUID@C_Pilot@@QAEXVVU_ID@@@Z PROC			; C_Pilot::SetVUID, COMDAT
; _this$ = ecx

; 60   : 		void SetVUID(VU_ID id) { vuID=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+124], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+128], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVUID@C_Pilot@@QAEXVVU_ID@@@Z ENDP			; C_Pilot::SetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?GetPlayer@C_Pilot@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayer@C_Pilot@@QAEFXZ PROC				; C_Pilot::GetPlayer, COMDAT
; _this$ = ecx

; 48   : 		short GetPlayer() { return(isplayer_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+122]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayer@C_Pilot@@QAEFXZ ENDP				; C_Pilot::GetPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?SetPlayer@C_Pilot@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_isplayer$ = 8						; size = 2
?SetPlayer@C_Pilot@@QAEXF@Z PROC			; C_Pilot::SetPlayer, COMDAT
; _this$ = ecx

; 47   : 		void SetPlayer(short isplayer) { isplayer_=isplayer; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _isplayer$[ebp]
	mov	WORD PTR [eax+122], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayer@C_Pilot@@QAEXF@Z ENDP			; C_Pilot::SetPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?GetSkill@C_Pilot@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSkill@C_Pilot@@QAEFXZ PROC				; C_Pilot::GetSkill, COMDAT
; _this$ = ecx

; 46   : 		short GetSkill() { return(skill_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+118]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSkill@C_Pilot@@QAEFXZ ENDP				; C_Pilot::GetSkill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?SetSkill@C_Pilot@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_skill$ = 8						; size = 2
?SetSkill@C_Pilot@@QAEXF@Z PROC				; C_Pilot::SetSkill, COMDAT
; _this$ = ecx

; 45   : 		void SetSkill(short skill) { skill_=skill; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _skill$[ebp]
	mov	WORD PTR [eax+118], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSkill@C_Pilot@@QAEXF@Z ENDP				; C_Pilot::SetSkill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?GetSlot@C_Pilot@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSlot@C_Pilot@@QAEFXZ PROC				; C_Pilot::GetSlot, COMDAT
; _this$ = ecx

; 44   : 		short GetSlot() { return(slot_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSlot@C_Pilot@@QAEFXZ ENDP				; C_Pilot::GetSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cpilot.h
;	COMDAT ?SetSlot@C_Pilot@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_slot$ = 8						; size = 2
?SetSlot@C_Pilot@@QAEXF@Z PROC				; C_Pilot::SetSlot, COMDAT
; _this$ = ecx

; 43   : 		void SetSlot(short slot) { slot_=slot; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _slot$[ebp]
	mov	WORD PTR [eax+120], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSlot@C_Pilot@@QAEXF@Z ENDP				; C_Pilot::SetSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetGroup@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Window@@QAEJXZ PROC				; C_Window::GetGroup, COMDAT
; _this$ = ecx

; 317  : 		long GetGroup(void) { return(Group_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Window@@QAEJXZ ENDP				; C_Window::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetControlList@C_Window@@QAEPAUControlListStr@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetControlList@C_Window@@QAEPAUControlListStr@@XZ PROC	; C_Window::GetControlList, COMDAT
; _this$ = ecx

; 285  : 		CONTROLLIST *GetControlList() { return(Controls_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4304]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetControlList@C_Window@@QAEPAUControlListStr@@XZ ENDP	; C_Window::GetControlList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?SetClientFlags@C_Window@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Client$ = 8						; size = 4
_flags$ = 12						; size = 4
?SetClientFlags@C_Window@@QAEXJJ@Z PROC			; C_Window::SetClientFlags, COMDAT
; _this$ = ecx

; 273  : 		void SetClientFlags(long Client,long flags) {  if(Client < WIN_MAX_CLIENTS) ClientFlags_[Client]=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _Client$[ebp], 8
	jge	SHORT $LN2@SetClientF
	mov	eax, DWORD PTR _Client$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [ecx+eax*4+72], edx
$LN2@SetClientF:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetClientFlags@C_Window@@QAEXJJ@Z ENDP			; C_Window::SetClientFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetSecond@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSecond@C_Clock@@QAEJXZ PROC				; C_Clock::GetSecond, COMDAT
; _this$ = ecx

; 72   : 		long GetSecond()			{ if(Second_) return(Second_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN1@GetSecond
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetSecond
$LN1@GetSecond:
	xor	eax, eax
$LN2@GetSecond:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSecond@C_Clock@@QAEJXZ ENDP				; C_Clock::GetSecond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetMinute@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinute@C_Clock@@QAEJXZ PROC				; C_Clock::GetMinute, COMDAT
; _this$ = ecx

; 71   : 		long GetMinute()			{ if(Minute_) return(Minute_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN1@GetMinute
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetMinute
$LN1@GetMinute:
	xor	eax, eax
$LN2@GetMinute:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinute@C_Clock@@QAEJXZ ENDP				; C_Clock::GetMinute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetHour@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHour@C_Clock@@QAEJXZ PROC				; C_Clock::GetHour, COMDAT
; _this$ = ecx

; 70   : 		long GetHour()				{ if(Hour_) return(Hour_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN1@GetHour
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetHour
$LN1@GetHour:
	xor	eax, eax
$LN2@GetHour:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHour@C_Clock@@QAEJXZ ENDP				; C_Clock::GetHour
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetSecond@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sc$ = 8						; size = 4
?SetSecond@C_Clock@@QAEXJ@Z PROC			; C_Clock::SetSecond, COMDAT
; _this$ = ecx

; 65   : 		void SetSecond(long sc)		{ if(Second_) Second_->SetInteger(sc); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN2@SetSecond
	mov	ecx, DWORD PTR _sc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetSecond:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSecond@C_Clock@@QAEXJ@Z ENDP			; C_Clock::SetSecond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetMinute@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mn$ = 8						; size = 4
?SetMinute@C_Clock@@QAEXJ@Z PROC			; C_Clock::SetMinute, COMDAT
; _this$ = ecx

; 64   : 		void SetMinute(long mn)		{ if(Minute_) Minute_->SetInteger(mn); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN2@SetMinute
	mov	ecx, DWORD PTR _mn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetMinute:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMinute@C_Clock@@QAEXJ@Z ENDP			; C_Clock::SetMinute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetHour@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hr$ = 8						; size = 4
?SetHour@C_Clock@@QAEXJ@Z PROC				; C_Clock::SetHour, COMDAT
; _this$ = ecx

; 63   : 		void SetHour(long hr)		{ if(Hour_) Hour_->SetInteger(hr); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@SetHour
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetHour:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHour@C_Clock@@QAEXJ@Z ENDP				; C_Clock::SetHour
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetRefreshCallback, COMDAT
; _this$ = ecx

; 33   : 		void SetRefreshCallback(void (*routine)(long ID,short hittype,C_Base *control)) { RefreshCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetRefreshCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetUpdateCallback, COMDAT
; _this$ = ecx

; 32   : 		void SetUpdateCallback(void (*routine)(long ID,short hittype,C_Base *control)) { UpdateCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ceditbox.h
;	COMDAT ?GetInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInteger@C_EditBox@@QAEJXZ PROC			; C_EditBox::GetInteger, COMDAT
; _this$ = ecx

; 71   : 		long GetInteger() { return(Integer_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInteger@C_EditBox@@QAEJXZ ENDP			; C_EditBox::GetInteger
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ceditbox.h
;	COMDAT ?GetMaxInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxInteger@C_EditBox@@QAEJXZ PROC			; C_EditBox::GetMaxInteger, COMDAT
; _this$ = ecx

; 64   : 		long GetMaxInteger(void) { return(MaxInteger_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxInteger@C_EditBox@@QAEJXZ ENDP			; C_EditBox::GetMaxInteger
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ceditbox.h
;	COMDAT ?GetMinInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinInteger@C_EditBox@@QAEJXZ PROC			; C_EditBox::GetMinInteger, COMDAT
; _this$ = ecx

; 61   : 		long GetMinInteger(void) { return(MinInteger_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinInteger@C_EditBox@@QAEJXZ ENDP			; C_EditBox::GetMinInteger
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetParent@C_Base@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@C_Base@@QAEPAVC_Window@@XZ PROC		; C_Base::GetParent, COMDAT
; _this$ = ecx

; 149  : 		C_Window *GetParent()		{ return(Parent_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParent@C_Base@@QAEPAVC_Window@@XZ ENDP		; C_Base::GetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetW@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@C_Base@@QAEJXZ PROC				; C_Base::GetW, COMDAT
; _this$ = ecx

; 143  : 		long GetW()					{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@C_Base@@QAEJXZ ENDP				; C_Base::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetParent@C_Base@@QAEXPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_win$ = 8						; size = 4
?SetParent@C_Base@@QAEXPAVC_Window@@@Z PROC		; C_Base::SetParent, COMDAT
; _this$ = ecx

; 115  : 		void SetParent(C_Window *win)							{ Parent_=win; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParent@C_Base@@QAEXPAVC_Window@@@Z ENDP		; C_Base::SetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@O_Output@@QAEPADXZ PROC			; O_Output::GetText, COMDAT
; _this$ = ecx

; 151  : 		_TCHAR *GetText()				{ return(Label_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@O_Output@@QAEPADXZ ENDP			; O_Output::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Type@VuEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuEntity@@QBEGXZ PROC				; VuEntity::Type, COMDAT
; _this$ = ecx

; 154  : 	ushort Type() const       { return share_.entityType_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuEntity@@QBEGXZ ENDP				; VuEntity::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h
;	COMDAT ?strstr@@YAPADPADPBD@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?strstr@@YAPADPADPBD@Z PROC				; strstr, COMDAT

; 224  : 	{ return (char*)strstr((const char*)_Str, _SubStr); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __SubStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	_strstr
	add	esp, 8
	pop	ebp
	ret	0
?strstr@@YAPADPADPBD@Z ENDP				; strstr
_TEXT	ENDS
END
