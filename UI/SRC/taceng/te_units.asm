; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\taceng\te_units.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?gATOPackageSelected@@3HA			; gATOPackageSelected
PUBLIC	?gATOSquadronSelected@@3HA			; gATOSquadronSelected
PUBLIC	?gLastAircraftType@@3HA				; gLastAircraftType
PUBLIC	?gLastAirbase@@3HA				; gLastAirbase
PUBLIC	?gLastRole@@3HA					; gLastRole
PUBLIC	?WeAreAddingPackage@@3HA			; WeAreAddingPackage
PUBLIC	?EdittingPackage@@3HA				; EdittingPackage
PUBLIC	?gLastTarget@@3PAVCampBaseClass@@A		; gLastTarget
PUBLIC	?gLastPilotSkill@@3HA				; gLastPilotSkill
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?gSelectedTeam@@3EA				; gSelectedTeam
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?new_package_target@@3PAVCampBaseClass@@A	; new_package_target
PUBLIC	?gPackageTOT@@3KA				; gPackageTOT
PUBLIC	?gTakeoffTime@@3KA				; gTakeoffTime
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?MapX@@3FA					; MapX
PUBLIC	?MapY@@3FA					; MapY
PUBLIC	?new_package@@3PAVPackageClass@@A		; new_package
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?new_flight@@3PAVFlightClass@@A			; new_flight
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?table_of_equipment_def@@3PAUtoe@@A		; table_of_equipment_def
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?table_of_equipment@@3PAUtoe@@A			; table_of_equipment
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?gATOPackageSelected@@3HA DD 01H DUP (?)		; gATOPackageSelected
?gATOSquadronSelected@@3HA DD 01H DUP (?)		; gATOSquadronSelected
?gLastAircraftType@@3HA DD 01H DUP (?)			; gLastAircraftType
?gLastAirbase@@3HA DD 01H DUP (?)			; gLastAirbase
?gLastRole@@3HA DD 01H DUP (?)				; gLastRole
?WeAreAddingPackage@@3HA DD 01H DUP (?)			; WeAreAddingPackage
?EdittingPackage@@3HA DD 01H DUP (?)			; EdittingPackage
?gLastTarget@@3PAVCampBaseClass@@A DD 01H DUP (?)	; gLastTarget
?gLastPilotSkill@@3HA DD 01H DUP (?)			; gLastPilotSkill
?new_package_target@@3PAVCampBaseClass@@A DD 01H DUP (?) ; new_package_target
?gPackageTOT@@3KA DD 01H DUP (?)			; gPackageTOT
?gTakeoffTime@@3KA DD 01H DUP (?)			; gTakeoffTime
?MapX@@3FA DW	01H DUP (?)				; MapX
	ALIGN	4

?MapY@@3FA DW	01H DUP (?)				; MapY
	ALIGN	4

?new_package@@3PAVPackageClass@@A DD 01H DUP (?)	; new_package
?new_flight@@3PAVFlightClass@@A DD 01H DUP (?)		; new_flight
_gLastEquipment DD 01H DUP (?)
_last_stype DD	01H DUP (?)
_gPackagePriority DD 01H DUP (?)
?table_of_equipment@@3PAUtoe@@A DD 01H DUP (?)		; table_of_equipment
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
_DATA	SEGMENT
?gSelectedTeam@@3EA DB 01H				; gSelectedTeam
	ORG $+3
_gLastUnitType DD 0ffffffffH
_first_stype DD	01H
_AtoMissStr DD	00H
	DD	051H
	DD	057H
	DD	052H
	DD	058H
	DD	053H
	DD	054H
	DD	055H
	DD	056H
	DD	059H
	DD	05aH
?table_of_equipment_def@@3PAUtoe@@A DD 01H		; table_of_equipment_def
	DB	03H
	DB	02H
	ORG $+2
	DD	01H
	DB	03H
	DB	03H
	ORG $+2
	DD	01H
	DB	03H
	DB	04H
	ORG $+2
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	01H
	DB	01H
	DB	03H
	ORG $+2
	DD	01H
	DB	06H
	DB	02H
	ORG $+2
	DD	01H
	DB	07H
	DB	02H
	ORG $+2
	DD	01H
	DB	09H
	DB	02H
	ORG $+2
	DD	01H
	DB	0bH
	DB	02H
	ORG $+2
	DD	01H
	DB	0eH
	DB	02H
	ORG $+2
	DD	02H
	DB	01H
	DB	01H
	ORG $+2
	DD	02H
	DB	01H
	DB	04H
	ORG $+2
	DD	02H
	DB	01H
	DB	05H
	ORG $+2
	DD	02H
	DB	01H
	DB	06H
	ORG $+2
	DD	02H
	DB	02H
	DB	03H
	ORG $+2
	DD	02H
	DB	03H
	DB	01H
	ORG $+2
	DD	02H
	DB	03H
	DB	05H
	ORG $+2
	DD	02H
	DB	06H
	DB	03H
	ORG $+2
	DD	02H
	DB	07H
	DB	03H
	ORG $+2
	DD	02H
	DB	09H
	DB	03H
	ORG $+2
	DD	02H
	DB	09H
	DB	06H
	ORG $+2
	DD	02H
	DB	0aH
	DB	01H
	ORG $+2
	DD	02H
	DB	0bH
	DB	03H
	ORG $+2
	DD	02H
	DB	0bH
	DB	01H
	ORG $+2
	DD	02H
	DB	0cH
	DB	04H
	ORG $+2
	DD	02H
	DB	0cH
	DB	01H
	ORG $+2
	DD	02H
	DB	0eH
	DB	01H
	ORG $+2
	DD	03H
	DB	01H
	DB	0eH
	ORG $+2
	DD	03H
	DB	01H
	DB	08H
	ORG $+2
	DD	03H
	DB	01H
	DB	09H
	ORG $+2
	DD	03H
	DB	03H
	DB	06H
	ORG $+2
	DD	03H
	DB	06H
	DB	04H
	ORG $+2
	DD	03H
	DB	07H
	DB	04H
	ORG $+2
	DD	03H
	DB	08H
	DB	03H
	ORG $+2
	DD	03H
	DB	09H
	DB	04H
	ORG $+2
	DD	03H
	DB	0bH
	DB	04H
	ORG $+2
	DD	03H
	DB	0eH
	DB	04H
	ORG $+2
	DD	04H
	DB	01H
	DB	0aH
	ORG $+2
	DD	04H
	DB	01H
	DB	0bH
	ORG $+2
	DD	04H
	DB	01H
	DB	0cH
	ORG $+2
	DD	04H
	DB	02H
	DB	01H
	ORG $+2
	DD	04H
	DB	03H
	DB	07H
	ORG $+2
	DD	04H
	DB	03H
	DB	08H
	ORG $+2
	DD	04H
	DB	03H
	DB	09H
	ORG $+2
	DD	04H
	DB	05H
	DB	02H
	ORG $+2
	DD	04H
	DB	06H
	DB	05H
	ORG $+2
	DD	04H
	DB	07H
	DB	05H
	ORG $+2
	DD	04H
	DB	08H
	DB	02H
	ORG $+2
	DD	04H
	DB	09H
	DB	05H
	ORG $+2
	DD	04H
	DB	0cH
	DB	03H
	ORG $+2
	DD	04H
	DB	0cH
	DB	02H
	ORG $+2
	DD	04H
	DB	0bH
	DB	05H
	ORG $+2
	DD	04H
	DB	0aH
	DB	02H
	ORG $+2
	DD	04H
	DB	0aH
	DB	03H
	ORG $+2
	DD	04H
	DB	0aH
	DB	04H
	ORG $+2
	DD	04H
	DB	0eH
	DB	03H
	ORG $+2
	DD	05H
	DB	01H
	DB	07H
	ORG $+2
	DD	05H
	DB	01H
	DB	0dH
	ORG $+2
	DD	05H
	DB	02H
	DB	02H
	ORG $+2
	DD	05H
	DB	03H
	DB	0aH
	ORG $+2
	DD	05H
	DB	03H
	DB	0bH
	ORG $+2
	DD	05H
	DB	04H
	DB	01H
	ORG $+2
	DD	05H
	DB	05H
	DB	01H
	ORG $+2
	DD	05H
	DB	06H
	DB	01H
	ORG $+2
	DD	05H
	DB	07H
	DB	01H
	ORG $+2
	DD	05H
	DB	08H
	DB	01H
	ORG $+2
	DD	05H
	DB	09H
	DB	01H
	ORG $+2
	DD	05H
	DB	0aH
	DB	05H
	ORG $+2
	DD	05H
	DB	0bH
	DB	06H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
_DATA	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate
PUBLIC	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::OwnerId
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?SetWPFlag@WayPointClass@@QAEXK@Z		; WayPointClass::SetWPFlag
PUBLIC	?UnSetWPFlag@WayPointClass@@QAEXK@Z		; WayPointClass::UnSetWPFlag
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetWPFlags@WayPointClass@@QAEKXZ		; WayPointClass::GetWPFlags
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	?GetWPDepartureTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPDepartureTime
PUBLIC	?GetWPLocation@WayPointClass@@QBEXPAF0@Z	; WayPointClass::GetWPLocation
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetType
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	?GetSPType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSPType
PUBLIC	?SamSite@ObjectiveClass@@QAEHXZ			; ObjectiveClass::SamSite
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	?Moving@UnitClass@@QBEHXZ			; UnitClass::Moving
PUBLIC	?SetUnitDestination@UnitClass@@QAEXFF@Z		; UnitClass::SetUnitDestination
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?GetFlag@TeamClass@@QAEHXZ			; TeamClass::GetFlag
PUBLIC	?GetColor@TeamClass@@QAEHXZ			; TeamClass::GetColor
PUBLIC	?GetECM@PackageClass@@QAE?AVVU_ID@@XZ		; PackageClass::GetECM
PUBLIC	?SetECM@PackageClass@@QAEXVVU_ID@@@Z		; PackageClass::SetECM
PUBLIC	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
PUBLIC	?GetUnitPackage@FlightClass@@QAEPAVPackageClass@@XZ ; FlightClass::GetUnitPackage
PUBLIC	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?_GetCType_@C_Base@@QAEFXZ			; C_Base::_GetCType_
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetRoot@C_ListBox@@QAEPAVLISTBOX@@XZ		; C_ListBox::GetRoot
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	?GetInteger@C_EditBox@@QAEJXZ			; C_EditBox::GetInteger
PUBLIC	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z		; C_PopupMgr::GetCurrentXY
PUBLIC	?SetHour@C_Clock@@QAEXJ@Z			; C_Clock::SetHour
PUBLIC	?SetMinute@C_Clock@@QAEXJ@Z			; C_Clock::SetMinute
PUBLIC	?SetSecond@C_Clock@@QAEXJ@Z			; C_Clock::SetSecond
PUBLIC	?GetHour@C_Clock@@QAEJXZ			; C_Clock::GetHour
PUBLIC	?GetMinute@C_Clock@@QAEJXZ			; C_Clock::GetMinute
PUBLIC	?GetSecond@C_Clock@@QAEJXZ			; C_Clock::GetSecond
PUBLIC	?GetX@C_Window@@QAEFXZ				; C_Window::GetX
PUBLIC	?GetY@C_Window@@QAEFXZ				; C_Window::GetY
PUBLIC	?GetGroup@C_Window@@QAEJXZ			; C_Window::GetGroup
PUBLIC	?GetVUID@C_ATO_Flight@@QAE?AVVU_ID@@XZ		; C_ATO_Flight::GetVUID
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?hookup_new_squad_window@@YAXPAVC_Window@@@Z	; hookup_new_squad_window
PUBLIC	?hookup_new_battalion_window@@YAXPAVC_Window@@@Z ; hookup_new_battalion_window
PUBLIC	?GetMaxY@C_Map@@QAEMXZ				; C_Map::GetMaxY
PUBLIC	?GetMapScale@C_Map@@QAEMXZ			; C_Map::GetMapScale
PUBLIC	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z		; C_Map::GetMapRelativeXY
PUBLIC	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z	; GlobalPositioningSystem::SetAllowed
PUBLIC	?GetAllowed@GlobalPositioningSystem@@QAEJXZ	; GlobalPositioningSystem::GetAllowed
PUBLIC	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ		; UI_Refresher::GetID
PUBLIC	?DeleteFlightFromPackage@@YAXJFPAVC_Base@@@Z	; DeleteFlightFromPackage
PUBLIC	?tac_select_role@@YAXJFPAVC_Base@@@Z		; tac_select_role
PUBLIC	?tac_select_target@@YAXJFPAVC_Base@@@Z		; tac_select_target
PUBLIC	?tac_select_squadron@@YAXJFPAVC_Base@@@Z	; tac_select_squadron
PUBLIC	?tac_select_squadron_aircraft@@YAXJFPAVC_Base@@@Z ; tac_select_squadron_aircraft
PUBLIC	?tac_select_squadron_airbase@@YAXJFPAVC_Base@@@Z ; tac_select_squadron_airbase
PUBLIC	?tactical_cancel_package@@YAXJFPAVC_Base@@@Z	; tactical_cancel_package
PUBLIC	?tactical_make_package@@YAXJFPAVC_Base@@@Z	; tactical_make_package
PUBLIC	?tactical_make_flight@@YAXJFPAVC_Base@@@Z	; tactical_make_flight
PUBLIC	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z	; tactical_add_flight
PUBLIC	?DiscardPackage@@YAXJFPAVC_Base@@@Z		; DiscardPackage
PUBLIC	?KeepPackage@@YAXJFPAVC_Base@@@Z		; KeepPackage
PUBLIC	?SetPackageTimes@@YAXPAVPackageClass@@KK@Z	; SetPackageTimes
PUBLIC	?tac_select_aircraft@@YAXJFPAVC_Base@@@Z	; tac_select_aircraft
PUBLIC	?tactical_update_package@@YAXXZ			; tactical_update_package
PUBLIC	?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z		; ChangePackTimeCB
PUBLIC	?tac_select_skill@@YAXJFPAVC_Base@@@Z		; tac_select_skill
PUBLIC	?RefreshMapOnChange@@YAXXZ			; RefreshMapOnChange
PUBLIC	?display_air_units@@YAXPAVUnitClass@@@Z		; display_air_units
PUBLIC	?display_land_units@@YAXPAVUnitClass@@@Z	; display_land_units
PUBLIC	?tactical_release_flight@@YAXJFPAVC_Base@@@Z	; tactical_release_flight
PUBLIC	?tactical_create_battalion@@YAXJFPAVC_Base@@@Z	; tactical_create_battalion
PUBLIC	?LoadTEUnits@@YAXXZ				; LoadTEUnits
PUBLIC	?PickTeamColors@@YAXXZ				; PickTeamColors
PUBLIC	?PickTeamCB@@YAXJFPAVC_Base@@@Z			; PickTeamCB
PUBLIC	?tactical_show_ato_window@@YAXXZ		; tactical_show_ato_window
PUBLIC	?tactical_show_oob_window@@YAXXZ		; tactical_show_oob_window
PUBLIC	?tactical_new_flight_select@@YAXJFPAVC_Base@@@Z	; tactical_new_flight_select
PUBLIC	?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z ; FillListBoxWithSquadrons
PUBLIC	?tactical_make_squadron@@YAPAVSquadronClass@@VVU_ID@@J@Z ; tactical_make_squadron
PUBLIC	?tactical_add_squadron@@YAXVVU_ID@@@Z		; tactical_add_squadron
PUBLIC	?LockTakeoffTimeCB@@YAXJFPAVC_Base@@@Z		; LockTakeoffTimeCB
PUBLIC	?LockTimeOnTargetCB@@YAXJFPAVC_Base@@@Z		; LockTimeOnTargetCB
PUBLIC	?SetupPackageControls@@YAXPAVC_Window@@PAVC_Base@@@Z ; SetupPackageControls
PUBLIC	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z	; tactical_add_package
PUBLIC	?tactical_edit_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_edit_package
PUBLIC	?Open_Flight_WindowCB@@YAXJFPAVC_Base@@@Z	; Open_Flight_WindowCB
PUBLIC	?EditFlightInPackage@@YAXJFPAVC_Base@@@Z	; EditFlightInPackage
PUBLIC	?tac_select_airbase@@YAXJFPAVC_Base@@@Z		; tac_select_airbase
PUBLIC	?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_battalion
PUBLIC	?FindValidObjective@@YAPAVObjectiveClass@@PAVBattalionClass@@VVU_ID@@FF@Z ; FindValidObjective
PUBLIC	?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z ; tactical_set_orders
PUBLIC	?delete_all_units_for_team@@YAXH@Z		; delete_all_units_for_team
PUBLIC	?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z ; tactical_remove_squadron
PUBLIC	?get_tactical_number_of_aircraft@@YAHH@Z	; get_tactical_number_of_aircraft
PUBLIC	?get_tactical_number_of_f16s@@YAHH@Z		; get_tactical_number_of_f16s
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01GFHCPBMG@C?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?gLastBattalionObjID@@3VVU_ID@@A		; gLastBattalionObjID
PUBLIC	?gLastAirbaseID@@3VVU_ID@@A			; gLastAirbaseID
PUBLIC	?gNewSelectFlight@@3VVU_ID@@A			; gNewSelectFlight
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03LCKPACKD@lst?$AA@			; `string'
PUBLIC	??_C@_07HGANLNA@teunits?$AA@			; `string'
PUBLIC	??_C@_08OOPBIIGF@te?9units?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BK@OAKILGHM@?1?1?5Side?5SubType?5Specific?6?$AA@ ; `string'
PUBLIC	??_C@_0N@CHIPHDHO@?$CF7d?5?$CF7d?5?$CF8d?6?$AA@	; `string'
PUBLIC	??_C@_0M@GNOHDNGP@?$CF7d?5?$CF7d?5?$CF8d?$AA@	; `string'
PUBLIC	??_C@_07PAINCAHD@?$CFs?5?$CF1ld?$AA@		; `string'
PUBLIC	??_C@_01FHEEJDEE@A?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01DDCIFGEA@E?$AA@				; `string'
PUBLIC	??_C@_01BIAFAFID@F?$AA@				; `string'
PUBLIC	??_C@_0BN@CJJCFJGN@Selected?5Squadron?5NOT?5found?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@CNFBLDPB@Error?5planning?5flight?4?5Aborting?6@ ; `string'
PUBLIC	??_C@_07FCJAGJJB@?$CFs?5?9?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_07BKILGK@?$CFd?5x?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_09GLGPCFLJ@DELETE?5?$DO?5?$AA@		; `string'
PUBLIC	??_C@_0O@LEJHJIPK@Flight?5?$CFd?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BD@NLMFIEDO@Release?5Flight?5?$CFd?6?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@7f7fffff
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fprintf:PROC
EXTRN	_sscanf:PROC
EXTRN	_sprintf:PROC
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_realloc:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?F4IsBadReadPtr@@YA_NPBXI@Z:PROC		; F4IsBadReadPtr
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Insert
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	?SetOwner@FalconEntity@@QAEXPAVFalconSessionEntity@@@Z:PROC ; FalconEntity::SetOwner
EXTRN	?DoFullUpdate@FalconEntity@@QAEXXZ:PROC		; FalconEntity::DoFullUpdate
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	?GetClassID@@YAHEEEEEEEE@Z:PROC			; GetClassID
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??0WayPointClass@@QAE@FFHHKKEH@Z:PROC		; WayPointClass::WayPointClass
EXTRN	?InsertWP@WayPointClass@@QAEXPAV1@@Z:PROC	; WayPointClass::InsertWP
EXTRN	?SetWPTimes@@YAKPAVWayPointClass@@JH@Z:PROC	; SetWPTimes
EXTRN	??0MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::MissionRequestClass
EXTRN	??1MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::~MissionRequestClass
EXTRN	?Remove@CampBaseClass@@QAEHXZ:PROC		; CampBaseClass::Remove
EXTRN	?SetLocation@CampBaseClass@@QAEXFF@Z:PROC	; CampBaseClass::SetLocation
EXTRN	?SetSpotted@CampBaseClass@@QAEXEKH@Z:PROC	; CampBaseClass::SetSpotted
EXTRN	?SetEmitting@CampBaseClass@@QAEXH@Z:PROC	; CampBaseClass::SetEmitting
EXTRN	?GetFirstEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z:PROC ; GetFirstEntity
EXTRN	?GetNextEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z:PROC ; GetNextEntity
EXTRN	?GetBestTarget@ObjectiveClass@@QAEEXZ:PROC	; ObjectiveClass::GetBestTarget
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	?SetCurrentWaypoint@UnitClass@@QAEXG@Z:PROC	; UnitClass::SetCurrentWaypoint
EXTRN	?MakeUnitDirty@UnitClass@@QAEXW4Dirty_Unit@@W4Dirtyness@@@Z:PROC ; UnitClass::MakeUnitDirty
EXTRN	?SetFinal@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetFinal
EXTRN	?GetUnitDestination@UnitClass@@QAEXPAF0@Z:PROC	; UnitClass::GetUnitDestination
EXTRN	?GetVehicleID@UnitClass@@QAEFH@Z:PROC		; UnitClass::GetVehicleID
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?BuildElements@UnitClass@@QAEXXZ:PROC		; UnitClass::BuildElements
EXTRN	?KillUnit@UnitClass@@QAEXXZ:PROC		; UnitClass::KillUnit
EXTRN	?AddWPAfter@UnitClass@@QAEPAVWayPointClass@@PAV2@FFHHKHE@Z:PROC ; UnitClass::AddWPAfter
EXTRN	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetFirstUnit
EXTRN	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetNextUnit
EXTRN	?NewUnit@@YAPAVUnitClass@@HHHHPAV1@@Z:PROC	; NewUnit
EXTRN	?NewBattalion@@YAPAVBattalionClass@@HPAVUnitClass@@@Z:PROC ; NewBattalion
EXTRN	?DistSqu@@YAHFFFF@Z:PROC			; DistSqu
EXTRN	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z:PROC ; FindEntity
EXTRN	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z:PROC ; GetEntityByCampID
EXTRN	?FindNearestObjective@@YAPAVObjectiveClass@@FFPAMF@Z:PROC ; FindNearestObjective
EXTRN	?GridToSim@@YAMF@Z:PROC				; GridToSim
EXTRN	?SimToGrid@@YAFM@Z:PROC				; SimToGrid
EXTRN	?GetRoE@@YAHEEH@Z:PROC				; GetRoE
EXTRN	?SetPackageFlags@PackageClass@@QAEXK@Z:PROC	; PackageClass::SetPackageFlags
EXTRN	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z:PROC ; PackageClass::RecordFlightAddition
EXTRN	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z:PROC ; PackageClass::CancelFlight
EXTRN	?SetTEPilotRating@PilotClass@@QAEXE@Z:PROC	; PilotClass::SetTEPilotRating
EXTRN	?GetCallsign@@YAXHHPAD@Z:PROC			; GetCallsign
EXTRN	?NewFlight@@YAPAVFlightClass@@HPAVUnitClass@@0@Z:PROC ; NewFlight
EXTRN	?RegroupFlight@@YAHPAVFlightClass@@@Z:PROC	; RegroupFlight
EXTRN	?InitPilots@SquadronClass@@QAEXXZ:PROC		; SquadronClass::InitPilots
EXTRN	?FindAvailableAircraft@SquadronClass@@QAEHPAVMissionRequestClass@@@Z:PROC ; SquadronClass::FindAvailableAircraft
EXTRN	?NewSquadron@@YAPAVSquadronClass@@H@Z:PROC	; NewSquadron
EXTRN	?ReadIndexedString@@YAXHPADH@Z:PROC		; ReadIndexedString
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z:PROC	; C_ListBox::AddItem
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z:PROC		; C_ListBox::AddItem
EXTRN	?RemoveAllItems@C_ListBox@@QAEXXZ:PROC		; C_ListBox::RemoveAllItems
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?DeleteItem@C_TreeList@@QAEXJ@Z:PROC		; C_TreeList::DeleteItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?SetItemState@C_PopupList@@QAEXJF@Z:PROC	; C_PopupList::SetItemState
EXTRN	?SetText@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetText
EXTRN	?SetInteger@C_EditBox@@QAEXJ@Z:PROC		; C_EditBox::SetInteger
EXTRN	?SetColor@C_Line@@QAEXK@Z:PROC			; C_Line::SetColor
EXTRN	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z:PROC ; C_PopupMgr::GetMenu
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z:PROC ; C_Map::SetCurrentWaypointList
EXTRN	?RemoveAllWaypoints@C_Map@@QAEXF@Z:PROC		; C_Map::RemoveAllWaypoints
EXTRN	?DrawMap@C_Map@@QAEXXZ:PROC			; C_Map::DrawMap
EXTRN	?Find@GlobalPositioningSystem@@QAEPAXJ@Z:PROC	; GlobalPositioningSystem::Find
EXTRN	?Update@GlobalPositioningSystem@@QAEXXZ:PROC	; GlobalPositioningSystem::Update
EXTRN	?AddIndexedStringToBuffer@@YAXHPAD@Z:PROC	; AddIndexedStringToBuffer
EXTRN	?AddLocationToBuffer@@YAXDFFPAD@Z:PROC		; AddLocationToBuffer
EXTRN	??0FalconCampDataMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconCampDataMessage::FalconCampDataMessage
EXTRN	?FindUnitSupportRole@@YAHPAVUnitClass@@@Z:PROC	; FindUnitSupportRole
EXTRN	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z:PROC	; MenuToggleUnitCB
EXTRN	?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z:PROC ; FillListBoxWithACTypes
EXTRN	?IsValidMission@@YAHHH@Z:PROC			; IsValidMission
EXTRN	?IsValidTarget@@YAHEHPAVCampBaseClass@@@Z:PROC	; IsValidTarget
EXTRN	?GetMissionFromTarget@@YAHEHPAVCampBaseClass@@@Z:PROC ; GetMissionFromTarget
EXTRN	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC	; AreYouSure
EXTRN	?fixup_unit@@YAXPAVUnitClass@@@Z:PROC		; fixup_unit
EXTRN	?SetupFlightSpecificControls@@YAXPAVFlightClass@@@Z:PROC ; SetupFlightSpecificControls
EXTRN	?ChangeTimeCB@@YAXJFPAVC_Base@@@Z:PROC		; ChangeTimeCB
EXTRN	?BuildATOFlightInfo@@YAPAVC_ATO_Flight@@PAVFlightClass@@@Z:PROC ; BuildATOFlightInfo
EXTRN	?MissionToATOMiss@@YAHH@Z:PROC			; MissionToATOMiss
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?MissionData@@3PAUMissionDataType@@A:BYTE	; MissionData
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AllAirList@@3PAVVuLinkedList@@A:DWORD		; AllAirList
EXTRN	?AllObjList@@3PAVVuLinkedList@@A:DWORD		; AllObjList
EXTRN	?AllCampList@@3PAVVuLinkedList@@A:DWORD		; AllCampList
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?OBJ_GROUND_PATH_MAX_SEARCH@@3FA:WORD		; OBJ_GROUND_PATH_MAX_SEARCH
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?MissStr@@3PAY0BE@DA:BYTE			; MissStr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gPopupMgr@@3PAVC_PopupMgr@@A:DWORD		; gPopupMgr
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?TeamColorList@@3PAKA:BYTE			; TeamColorList
EXTRN	?gGps@@3PAVGlobalPositioningSystem@@A:DWORD	; gGps
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	?gSelectedATOFlight@@3VVU_ID@@A:QWORD		; gSelectedATOFlight
EXTRN	?gActiveFlightID@@3VVU_ID@@A:QWORD		; gActiveFlightID
EXTRN	?gCurrentFlightID@@3VVU_ID@@A:QWORD		; gCurrentFlightID
EXTRN	?gSelectedFlightID@@3VVU_ID@@A:QWORD		; gSelectedFlightID
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?gLastBattalionObjID@@3VVU_ID@@A DQ 01H DUP (?)		; gLastBattalionObjID
?gLastAirbaseID@@3VVU_ID@@A DQ 01H DUP (?)		; gLastAirbaseID
?gNewSelectFlight@@3VVU_ID@@A DQ 01H DUP (?)		; gNewSelectFlight
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NLMFIEDO@Release?5Flight?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BD@NLMFIEDO@Release?5Flight?5?$CFd?6?$AA@ DB 'Release Flight %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LEJHJIPK@Flight?5?$CFd?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@LEJHJIPK@Flight?5?$CFd?5?$CFd?6?$AA@ DB 'Flight %d %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLGPCFLJ@DELETE?5?$DO?5?$AA@
CONST	SEGMENT
??_C@_09GLGPCFLJ@DELETE?5?$DO?5?$AA@ DB 'DELETE > ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07BKILGK@?$CFd?5x?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07BKILGK@?$CFd?5x?5?$CFs?$AA@ DB '%d x %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCJAGJJB@?$CFs?5?9?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07FCJAGJJB@?$CFs?5?9?5?$CFs?$AA@ DB '%s - %s', 00H ; `string'
CONST	ENDS
;	COMDAT ?last_equip@?1??update_new_battalion_window@@YAXXZ@4HA
_DATA	SEGMENT
?last_equip@?1??update_new_battalion_window@@YAXXZ@4HA DD 0ffffffffH ; `update_new_battalion_window'::`2'::last_equip
_DATA	ENDS
;	COMDAT ?batt@?1??update_new_battalion_window@@YAXXZ@4PAHA
_DATA	SEGMENT
?batt@?1??update_new_battalion_window@@YAXXZ@4PAHA DD 0791fH ; `update_new_battalion_window'::`2'::batt
	DD	07920H
	DD	07921H
	DD	07922H
	DD	07923H
	DD	07924H
	DD	07925H
	DD	07926H
_DATA	ENDS
;	COMDAT ??_C@_0CB@CNFBLDPB@Error?5planning?5flight?4?5Aborting?6@
CONST	SEGMENT
??_C@_0CB@CNFBLDPB@Error?5planning?5flight?4?5Aborting?6@ DB 'Error plann'
	DB	'ing flight. Aborting', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CJJCFJGN@Selected?5Squadron?5NOT?5found?6?$AA@
CONST	SEGMENT
??_C@_0BN@CJJCFJGN@Selected?5Squadron?5NOT?5found?6?$AA@ DB 'Selected Squ'
	DB	'adron NOT found', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01BIAFAFID@F?$AA@
CONST	SEGMENT
??_C@_01BIAFAFID@F?$AA@ DB 'F', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DDCIFGEA@E?$AA@
CONST	SEGMENT
??_C@_01DDCIFGEA@E?$AA@ DB 'E', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FHEEJDEE@A?$AA@
CONST	SEGMENT
??_C@_01FHEEJDEE@A?$AA@ DB 'A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PAINCAHD@?$CFs?5?$CF1ld?$AA@
CONST	SEGMENT
??_C@_07PAINCAHD@?$CFs?5?$CF1ld?$AA@ DB '%s %1ld', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNOHDNGP@?$CF7d?5?$CF7d?5?$CF8d?$AA@
CONST	SEGMENT
??_C@_0M@GNOHDNGP@?$CF7d?5?$CF7d?5?$CF8d?$AA@ DB '%7d %7d %8d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHIPHDHO@?$CF7d?5?$CF7d?5?$CF8d?6?$AA@
CONST	SEGMENT
??_C@_0N@CHIPHDHO@?$CF7d?5?$CF7d?5?$CF8d?6?$AA@ DB '%7d %7d %8d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OAKILGHM@?1?1?5Side?5SubType?5Specific?6?$AA@
CONST	SEGMENT
??_C@_0BK@OAKILGHM@?1?1?5Side?5SubType?5Specific?6?$AA@ DB '// Side SubTy'
	DB	'pe Specific', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OOPBIIGF@te?9units?$AA@
CONST	SEGMENT
??_C@_08OOPBIIGF@te?9units?$AA@ DB 'te-units', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGANLNA@teunits?$AA@
CONST	SEGMENT
??_C@_07HGANLNA@teunits?$AA@ DB 'teunits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCKPACKD@lst?$AA@
CONST	SEGMENT
??_C@_03LCKPACKD@lst?$AA@ DB 'lst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT
??_C@_01GFHCPBMG@C?$AA@ DB 'C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?get_tactical_number_of_f16s@@YAHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_tactical_number_of_f16s@@YAHH@Z$0
__unwindtable$?get_tactical_number_of_aircraft@@YAHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_tactical_number_of_aircraft@@YAHH@Z$0
__unwindtable$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z$0
__unwindtable$?delete_all_units_for_team@@YAXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?delete_all_units_for_team@@YAXH@Z$0
__unwindtable$?tactical_add_squadron@@YAXVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_add_squadron@@YAXVVU_ID@@@Z$0
__unwindtable$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z$0
__unwindtable$?tactical_make_flight@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_make_flight@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?tactical_make_package@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_make_package@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?tac_select_squadron@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tac_select_squadron@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?tac_select_role@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tac_select_role@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z$1
__ehfuncinfo$?get_tactical_number_of_f16s@@YAHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_tactical_number_of_f16s@@YAHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?get_tactical_number_of_aircraft@@YAHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_tactical_number_of_aircraft@@YAHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?delete_all_units_for_team@@YAXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?delete_all_units_for_team@@YAXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tactical_add_squadron@@YAXVVU_ID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tactical_add_squadron@@YAXVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tactical_make_flight@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tactical_make_flight@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tactical_make_package@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tactical_make_package@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tac_select_squadron@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tac_select_squadron@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?tac_select_role@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tac_select_role@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gLastBattalionObjID$initializer$ DD FLAT:??__EgLastBattalionObjID@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gLastAirbaseID$initializer$ DD FLAT:??__EgLastAirbaseID@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gNewSelectFlight$initializer$ DD FLAT:??__EgNewSelectFlight@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_iter$ = -52						; size = 12
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_type$ = -32						; size = 4
_flight$ = -28						; size = 4
_squadron$ = -24					; size = 4
_num$ = -20						; size = 4
_unit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_team$ = 8						; size = 4
?get_tactical_number_of_f16s@@YAHH@Z PROC		; get_tactical_number_of_f16s

; 2941 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_tactical_number_of_f16s@@YAHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2942 : 	VuListIterator
; 2943 : 		iter (AllAirList);

	mov	eax, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2944 : 
; 2945 : 	Squadron
; 2946 : 		squadron;
; 2947 : 
; 2948 : 	Flight
; 2949 : 		flight;
; 2950 : 
; 2951 : 	Unit
; 2952 : 		unit;
; 2953 : 
; 2954 : 	int
; 2955 : 		num,
; 2956 : 		type;
; 2957 : 
; 2958 : 	if (!TeamInfo[team])

	mov	ecx, DWORD PTR _team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	jne	SHORT $LN10@get_tactic

; 2959 : 	{
; 2960 : 		return 0;

	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN11@get_tactic
$LN10@get_tactic:

; 2961 : 	}
; 2962 : 
; 2963 : 	unit = GetFirstUnit (&iter);

	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2964 : 
; 2965 : 	num = 0;

	mov	DWORD PTR _num$[ebp], 0
$LN9@get_tactic:

; 2966 : 
; 2967 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	$LN8@get_tactic

; 2968 : 	{
; 2969 : 		type = unit->GetType ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	mov	DWORD PTR _type$[ebp], eax

; 2970 : 
; 2971 : 		if (type == TYPE_SQUADRON)

	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN7@get_tactic

; 2972 : 		{
; 2973 : 			squadron = (Squadron) unit;

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _squadron$[ebp], ecx

; 2974 : 
; 2975 : 			if (squadron->GetTeam () == team)

	mov	edx, DWORD PTR _squadron$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _squadron$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _team$[ebp]
	jne	SHORT $LN6@get_tactic

; 2976 : 			{
; 2977 : 				if (squadron->GetVehicleID (0) == 0xad)

	push	0
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movsx	ecx, ax
	cmp	ecx, 173				; 000000adH
	jne	SHORT $LN6@get_tactic

; 2978 : 				{
; 2979 : 					num += squadron->GetTotalVehicles();

	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	add	eax, DWORD PTR _num$[ebp]
	mov	DWORD PTR _num$[ebp], eax
$LN6@get_tactic:

; 2980 : 				}
; 2981 : 			}
; 2982 : 		}

	jmp	SHORT $LN4@get_tactic
$LN7@get_tactic:

; 2983 : 		else if (type == TYPE_FLIGHT)

	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN4@get_tactic

; 2984 : 		{
; 2985 : 			flight = (Flight) unit;

	mov	edx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _flight$[ebp], edx

; 2986 : 
; 2987 : 			if (flight->GetTeam () == team)

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	ecx, DWORD PTR _team$[ebp]
	jne	SHORT $LN4@get_tactic

; 2988 : 			{
; 2989 : 				if (flight->GetVehicleID (0) == 0xad)

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movsx	edx, ax
	cmp	edx, 173				; 000000adH
	jne	SHORT $LN4@get_tactic

; 2990 : 				{
; 2991 : 					num += flight->GetTotalVehicles ();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	add	eax, DWORD PTR _num$[ebp]
	mov	DWORD PTR _num$[ebp], eax
$LN4@get_tactic:

; 2992 : 				}
; 2993 : 			}
; 2994 : 		}
; 2995 : 
; 2996 : 		unit = GetNextUnit (&iter);

	lea	eax, DWORD PTR _iter$[ebp]
	push	eax
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2997 : 	}

	jmp	$LN9@get_tactic
$LN8@get_tactic:

; 2998 : 
; 2999 : 	return num;

	mov	ecx, DWORD PTR _num$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T2[ebp]
$LN11@get_tactic:

; 3000 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?get_tactical_number_of_f16s@@YAHH@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?get_tactical_number_of_f16s@@YAHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_tactical_number_of_f16s@@YAHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_tactical_number_of_f16s@@YAHH@Z ENDP		; get_tactical_number_of_f16s
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_iter$ = -52						; size = 12
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_type$ = -32						; size = 4
_flight$ = -28						; size = 4
_squadron$ = -24					; size = 4
_num$ = -20						; size = 4
_unit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_team$ = 8						; size = 4
?get_tactical_number_of_aircraft@@YAHH@Z PROC		; get_tactical_number_of_aircraft

; 2881 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_tactical_number_of_aircraft@@YAHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2882 : 	VuListIterator
; 2883 : 		iter (AllAirList);

	mov	eax, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2884 : 
; 2885 : 	Squadron
; 2886 : 		squadron;
; 2887 : 
; 2888 : 	Flight
; 2889 : 		flight;
; 2890 : 
; 2891 : 	Unit
; 2892 : 		unit;
; 2893 : 
; 2894 : 	int
; 2895 : 		num,
; 2896 : 		type;
; 2897 : 
; 2898 : 	if (!TeamInfo[team])

	mov	ecx, DWORD PTR _team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	jne	SHORT $LN8@get_tactic

; 2899 : 	{
; 2900 : 		return 0;

	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN9@get_tactic
$LN8@get_tactic:

; 2901 : 	}
; 2902 : 
; 2903 : 	unit = GetFirstUnit (&iter);

	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2904 : 
; 2905 : 	num = 0;

	mov	DWORD PTR _num$[ebp], 0
$LN7@get_tactic:

; 2906 : 
; 2907 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	$LN6@get_tactic

; 2908 : 	{
; 2909 : 		type = unit->GetType ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	mov	DWORD PTR _type$[ebp], eax

; 2910 : 
; 2911 : 		if (type == TYPE_SQUADRON)

	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN5@get_tactic

; 2912 : 		{
; 2913 : 			squadron = (Squadron) unit;

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _squadron$[ebp], ecx

; 2914 : 
; 2915 : 			if (squadron->GetTeam () == team)

	mov	edx, DWORD PTR _squadron$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _squadron$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _team$[ebp]
	jne	SHORT $LN4@get_tactic

; 2916 : 			{
; 2917 : 				num += squadron->GetTotalVehicles ();

	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	add	eax, DWORD PTR _num$[ebp]
	mov	DWORD PTR _num$[ebp], eax
$LN4@get_tactic:

; 2918 : 			}
; 2919 : 		}

	jmp	SHORT $LN3@get_tactic
$LN5@get_tactic:

; 2920 : 		else if (type == TYPE_FLIGHT)

	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN3@get_tactic

; 2921 : 		{
; 2922 : 			flight = (Flight) unit;

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _flight$[ebp], ecx

; 2923 : 
; 2924 : 			if (flight->GetTeam () == team)

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _team$[ebp]
	jne	SHORT $LN3@get_tactic

; 2925 : 			{
; 2926 : 				num += flight->GetTotalVehicles ();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	add	eax, DWORD PTR _num$[ebp]
	mov	DWORD PTR _num$[ebp], eax
$LN3@get_tactic:

; 2927 : 			}
; 2928 : 		}
; 2929 : 
; 2930 : 		unit = GetNextUnit (&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2931 : 	}

	jmp	$LN7@get_tactic
$LN6@get_tactic:

; 2932 : 
; 2933 : 	return num;

	mov	edx, DWORD PTR _num$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T2[ebp]
$LN9@get_tactic:

; 2934 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?get_tactical_number_of_aircraft@@YAHH@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?get_tactical_number_of_aircraft@@YAHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_tactical_number_of_aircraft@@YAHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_tactical_number_of_aircraft@@YAHH@Z ENDP		; get_tactical_number_of_aircraft
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_iter$ = -40						; size = 12
_type$ = -28						; size = 4
tv147 = -24						; size = 4
_unit$ = -20						; size = 4
_flight$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_squadron$ = 8						; size = 4
?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z PROC	; tactical_remove_squadron

; 2822 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2823 : 	VuListIterator
; 2824 : 		iter (AllAirList);

	mov	eax, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2825 : 
; 2826 : 	Flight
; 2827 : 		flight;
; 2828 : 
; 2829 : 	int
; 2830 : 		type;
; 2831 : 
; 2832 : 	Unit
; 2833 : 		unit;
; 2834 : 
; 2835 : 	unit = GetFirstUnit (&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2836 : 
; 2837 : 	gMapMgr->RemoveAllWaypoints (squadron->GetTeam ());

	mov	edx, DWORD PTR _squadron$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _squadron$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	ax, al
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RemoveAllWaypoints@C_Map@@QAEXF@Z	; C_Map::RemoveAllWaypoints
$LN5@tactical_r:

; 2838 : 
; 2839 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	$LN4@tactical_r

; 2840 : 	{
; 2841 : 		type = unit->GetType ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	edx, al
	mov	DWORD PTR _type$[ebp], edx

; 2842 : 
; 2843 : 		if (type == TYPE_FLIGHT)

	cmp	DWORD PTR _type$[ebp], 1
	jne	$LN3@tactical_r

; 2844 : 		{
; 2845 : 			flight = (Flight) unit;

	mov	eax, DWORD PTR _unit$[ebp]
	mov	DWORD PTR _flight$[ebp], eax

; 2846 : 
; 2847 : 			if (flight->GetUnitSquadron () == squadron)

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+696]
	call	eax
	cmp	eax, DWORD PTR _squadron$[ebp]
	jne	SHORT $LN2@tactical_r

; 2848 : 			{
; 2849 : 				MonoPrint ("DELETE > ");

	push	OFFSET ??_C@_09GLGPCFLJ@DELETE?5?$DO?5?$AA@
	call	_MonoPrint
	add	esp, 4
$LN2@tactical_r:

; 2850 : 			}
; 2851 : 
; 2852 : 			MonoPrint
; 2853 : 			(
; 2854 : 				"Flight %d %d\n",
; 2855 : 				flight->GetCampID (),
; 2856 : 				flight->GetUnitPackage ()->GetCampID ()
; 2857 : 			);

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetUnitPackage@FlightClass@@QAEPAVPackageClass@@XZ ; FlightClass::GetUnitPackage
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	push	OFFSET ??_C@_0O@LEJHJIPK@Flight?5?$CFd?5?$CFd?6?$AA@
	call	_MonoPrint
	add	esp, 12					; 0000000cH

; 2858 : 
; 2859 : //			gMapMgr->SetWaypointList (flight->Id ());
; 2860 : 
; 2861 : 			if (flight->GetUnitSquadron () == squadron)

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+696]
	call	eax
	cmp	eax, DWORD PTR _squadron$[ebp]
	jne	SHORT $LN3@tactical_r

; 2862 : 			{
; 2863 : 				RegroupFlight(flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?RegroupFlight@@YAHPAVFlightClass@@@Z	; RegroupFlight
	add	esp, 4
$LN3@tactical_r:

; 2864 : 				//flight->Remove ();
; 2865 : 			}
; 2866 : 		}
; 2867 : 
; 2868 : 		unit = GetNextUnit (&iter);

	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2869 : 	}

	jmp	$LN5@tactical_r
$LN4@tactical_r:

; 2870 : 
; 2871 : 	MonoPrint ("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2872 : 
; 2873 : 	gGps->Update ();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 2874 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tactical_remove_squadron@@YAXPAVSquadronClass@@@Z ENDP	; tactical_remove_squadron
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_iter$ = -28						; size = 12
_unit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_old_team$ = 8						; size = 4
?delete_all_units_for_team@@YAXH@Z PROC			; delete_all_units_for_team

; 2791 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?delete_all_units_for_team@@YAXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2792 : 	VuListIterator
; 2793 : 		iter (AllAirList);

	mov	eax, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2794 : 
; 2795 : 	Unit
; 2796 : 		unit;
; 2797 : 
; 2798 : 	unit = GetFirstUnit (&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax
$LN3@delete_all:

; 2799 : 
; 2800 : 	while (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	SHORT $LN2@delete_all

; 2801 : 	{
; 2802 : 		if (unit->GetTeam () == old_team)

	mov	edx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _old_team$[ebp]
	jne	SHORT $LN1@delete_all

; 2803 : 		{
; 2804 : 			unit->Remove ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?Remove@CampBaseClass@@QAEHXZ		; CampBaseClass::Remove
$LN1@delete_all:

; 2805 : 		}
; 2806 : 
; 2807 : 		unit = GetNextUnit (&iter);

	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _unit$[ebp], eax

; 2808 : 	}

	jmp	SHORT $LN3@delete_all
$LN2@delete_all:

; 2809 : 
; 2810 : 	gMapMgr->RemoveAllWaypoints (static_cast<short>(old_team));

	movzx	edx, WORD PTR _old_team$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RemoveAllWaypoints@C_Map@@QAEXF@Z	; C_Map::RemoveAllWaypoints

; 2811 : 
; 2812 : 	MonoPrint ("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2813 : 
; 2814 : 	gGps->Update ();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 2815 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?delete_all_units_for_team@@YAXH@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?delete_all_units_for_team@@YAXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?delete_all_units_for_team@@YAXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?delete_all_units_for_team@@YAXH@Z ENDP			; delete_all_units_for_team
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T2 = -180						; size = 8
$T3 = -172						; size = 8
$T4 = -164						; size = 8
$T5 = -156						; size = 8
$T6 = -148						; size = 8
$T7 = -140						; size = 8
$T8 = -132						; size = 8
$T9 = -124						; size = 8
$T10 = -116						; size = 8
$T11 = -108						; size = 8
_tmpId$12 = -100					; size = 8
_oldgs$ = -92						; size = 4
$T13 = -88						; size = 4
_nw$ = -84						; size = 4
$T14 = -80						; size = 4
_host$15 = -76						; size = 4
$T16 = -72						; size = 4
tv399 = -68						; size = 4
$T17 = -64						; size = 4
$T18 = -60						; size = 4
tv371 = -56						; size = 4
tv334 = -52						; size = 4
_msg$19 = -48						; size = 4
_role$ = -44						; size = 4
_dataptr$20 = -40					; size = 4
_o$ = -36						; size = 4
_xd$ = -32						; size = 2
_yd$ = -28						; size = 2
_wp$ = -24						; size = 4
_x$ = -20						; size = 2
_y$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_bat$ = 8						; size = 4
_obj$ = 12						; size = 8
_tx$ = 20						; size = 2
_ty$ = 24						; size = 2
?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z PROC ; tactical_set_orders

; 2449 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 168				; 000000a8H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2450 : 	Objective		o;
; 2451 : 	WayPoint		wp,nw;
; 2452 : 	GridIndex		x,y,xd,yd;
; 2453 : 	int				role,oldgs;
; 2454 : 
; 2455 : 	o = FindValidObjective(bat, obj, tx, ty);

	movzx	eax, WORD PTR _ty$[ebp]
	push	eax
	movzx	ecx, WORD PTR _tx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bat$[ebp]
	push	ecx
	call	?FindValidObjective@@YAPAVObjectiveClass@@PAVBattalionClass@@VVU_ID@@FF@Z ; FindValidObjective
	add	esp, 20					; 00000014H
	mov	DWORD PTR _o$[ebp], eax

; 2456 : 	if (!o || !bat){

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN22@tactical_s
	cmp	DWORD PTR _bat$[ebp], 0
	jne	SHORT $LN23@tactical_s
$LN22@tactical_s:

; 2457 : 		return;

	jmp	$LN24@tactical_s
$LN23@tactical_s:

; 2458 : 	}
; 2459 : 
; 2460 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2461 : 
; 2462 : 	if (o->GetTeam() == bat->GetTeam()){

	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	esi, al
	mov	eax, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	jne	$LN21@tactical_s

; 2463 : 		role = bat->GetUnitNormalRole();

	mov	edx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax+668]
	call	edx
	mov	DWORD PTR _role$[ebp], eax

; 2464 : 		if (role == GRO_AIRDEFENSE && o->SamSite())

	cmp	DWORD PTR _role$[ebp], 5
	jne	SHORT $LN20@tactical_s
	mov	ecx, DWORD PTR _o$[ebp]
	call	?SamSite@ObjectiveClass@@QAEHXZ		; ObjectiveClass::SamSite
	test	eax, eax
	je	SHORT $LN20@tactical_s

; 2465 : 			bat->SetUnitOrders(GORD_AIRDEFENSE,o->Id());

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	9
	mov	eax, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
	jmp	$LN19@tactical_s
$LN20@tactical_s:

; 2466 : 		else if (role == GRO_FIRESUPPORT)

	cmp	DWORD PTR _role$[ebp], 6
	jne	SHORT $LN18@tactical_s

; 2467 : 			bat->SetUnitOrders(GORD_SUPPORT,o->Id());

	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	7
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
	jmp	SHORT $LN19@tactical_s
$LN18@tactical_s:

; 2468 : 		else if (role == GRO_DEFENSE || role == GRO_ATTACK || role == GRO_RECON)

	cmp	DWORD PTR _role$[ebp], 4
	je	SHORT $LN15@tactical_s
	cmp	DWORD PTR _role$[ebp], 1
	je	SHORT $LN15@tactical_s
	cmp	DWORD PTR _role$[ebp], 8
	jne	SHORT $LN16@tactical_s
$LN15@tactical_s:

; 2469 : 			bat->SetUnitOrders(GORD_DEFEND,o->Id());

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	6
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax

; 2470 : 		else

	jmp	SHORT $LN19@tactical_s
$LN16@tactical_s:

; 2471 : 			bat->SetUnitOrders(GORD_RESERVE,o->Id());

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	0
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN19@tactical_s:

; 2472 : 	}
; 2473 : 	else{

	jmp	SHORT $LN13@tactical_s
$LN21@tactical_s:

; 2474 : 		bat->SetUnitOrders(GORD_CAPTURE,o->Id());

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	1
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN13@tactical_s:

; 2475 : 	}
; 2476 : 
; 2477 : 	o->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2478 : 	bat->SetUnitDestination(x,y);

	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination

; 2479 : 	if (bat->GetMovementType() != NoMove)

	mov	edx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax+228]
	call	edx
	test	eax, eax
	je	$LN12@tactical_s

; 2480 : 	{
; 2481 : 		oldgs = OBJ_GROUND_PATH_MAX_SEARCH;

	movsx	eax, WORD PTR ?OBJ_GROUND_PATH_MAX_SEARCH@@3FA ; OBJ_GROUND_PATH_MAX_SEARCH
	mov	DWORD PTR _oldgs$[ebp], eax

; 2482 : 		OBJ_GROUND_PATH_MAX_SEARCH = MAX_SEARCH;

	mov	ecx, 2000				; 000007d0H
	mov	WORD PTR ?OBJ_GROUND_PATH_MAX_SEARCH@@3FA, cx ; OBJ_GROUND_PATH_MAX_SEARCH

; 2483 : 		bat->BuildMission();

	mov	edx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax+728]
	call	edx

; 2484 : 		OBJ_GROUND_PATH_MAX_SEARCH = static_cast<short>(oldgs);

	mov	ax, WORD PTR _oldgs$[ebp]
	mov	WORD PTR ?OBJ_GROUND_PATH_MAX_SEARCH@@3FA, ax ; OBJ_GROUND_PATH_MAX_SEARCH

; 2485 : 		bat->GetLocation(&xd,&yd);

	lea	ecx, DWORD PTR _yd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _xd$[ebp]
	push	edx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2486 : 
; 2487 : 		// Tack on a waypoint at our current location, if we don't have one
; 2488 : 		wp = bat->GetFirstUnitWP();

	mov	ecx, DWORD PTR _bat$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 2489 : 		if (wp){

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN11@tactical_s

; 2490 : 			wp->GetWPLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation
$LN11@tactical_s:

; 2491 : 		}
; 2492 : 		if (!wp || x != xd || y != yd){

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN9@tactical_s
	movsx	edx, WORD PTR _x$[ebp]
	movsx	eax, WORD PTR _xd$[ebp]
	cmp	edx, eax
	jne	SHORT $LN9@tactical_s
	movsx	ecx, WORD PTR _y$[ebp]
	movsx	edx, WORD PTR _yd$[ebp]
	cmp	ecx, edx
	je	SHORT $LN10@tactical_s
$LN9@tactical_s:

; 2493 : 			wp = bat->AddWPAfter(NULL, xd, yd, 0, 0, TheCampaign.CurrentTime, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	eax
	push	0
	push	0
	movzx	ecx, WORD PTR _yd$[ebp]
	push	ecx
	movzx	edx, WORD PTR _xd$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?AddWPAfter@UnitClass@@QAEPAVWayPointClass@@PAV2@FFHHKHE@Z ; UnitClass::AddWPAfter
	mov	DWORD PTR _wp$[ebp], eax
$LN10@tactical_s:

; 2494 : 		}
; 2495 : 		// Tack on a waypoint at our destination location, if we don't have one or need at least two waypoints
; 2496 : 		bat->GetUnitDestination(&xd,&yd);

	lea	eax, DWORD PTR _yd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xd$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination
$LN8@tactical_s:

; 2497 : 		while (wp && wp->GetNextWP()){

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN7@tactical_s
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	test	eax, eax
	je	SHORT $LN7@tactical_s

; 2498 : 			wp = wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 2499 : 		}

	jmp	SHORT $LN8@tactical_s
$LN7@tactical_s:

; 2500 : 		wp->GetWPLocation(&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 2501 : 		if (x != xd || y != yd || wp == bat->GetFirstUnitWP()){

	movsx	ecx, WORD PTR _x$[ebp]
	movsx	edx, WORD PTR _xd$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN5@tactical_s
	movsx	eax, WORD PTR _y$[ebp]
	movsx	ecx, WORD PTR _yd$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN5@tactical_s
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	cmp	DWORD PTR _wp$[ebp], eax
	jne	SHORT $LN6@tactical_s
$LN5@tactical_s:

; 2502 : 			nw = new WayPointClass (xd, yd, 0, 0, wp->GetWPDepartureTime() + 30 * CampaignMinutes, 0, 0, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN26@tactical_s
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	add	eax, 1800000				; 001b7740H
	push	eax
	push	0
	push	0
	movzx	edx, WORD PTR _yd$[ebp]
	push	edx
	movzx	eax, WORD PTR _xd$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T17[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv334[ebp], eax
	jmp	SHORT $LN27@tactical_s
$LN26@tactical_s:
	mov	DWORD PTR tv334[ebp], 0
$LN27@tactical_s:
	mov	ecx, DWORD PTR tv334[ebp]
	mov	DWORD PTR $T16[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T16[ebp]
	mov	DWORD PTR _nw$[ebp], edx

; 2503 : 			wp->InsertWP(nw);

	mov	eax, DWORD PTR _nw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?InsertWP@WayPointClass@@QAEXPAV1@@Z	; WayPointClass::InsertWP
$LN6@tactical_s:

; 2504 : 		}
; 2505 : 	}
; 2506 : 	else {

	jmp	SHORT $LN4@tactical_s
$LN12@tactical_s:

; 2507 : 		bat->SetLocation(x,y);

	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation
$LN4@tactical_s:

; 2508 : 	}
; 2509 : 
; 2510 : 	// If we don't own this unit, send the orders to the host
; 2511 : 	if (!bat->IsLocal()) {

	mov	ecx, DWORD PTR _bat$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	$LN3@tactical_s

; 2512 : 		FalconSessionEntity		*host = (FalconSessionEntity*) vuDatabase->Find(FalconLocalGame->OwnerId());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN28@tactical_s
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv371[ebp], eax
	jmp	SHORT $LN29@tactical_s
$LN28@tactical_s:
	mov	DWORD PTR tv371[ebp], 0
$LN29@tactical_s:
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR tv371[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _host$15[ebp], eax

; 2513 : 		FalconCampDataMessage	*msg = new FalconCampDataMessage(bat->Id(),host);

	push	58					; 0000003aH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T18[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN30@tactical_s
	push	1
	mov	eax, DWORD PTR _host$15[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T18[ebp]
	call	??0FalconCampDataMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconCampDataMessage::FalconCampDataMessage
	mov	DWORD PTR tv399[ebp], eax
	jmp	SHORT $LN31@tactical_s
$LN30@tactical_s:
	mov	DWORD PTR tv399[ebp], 0
$LN31@tactical_s:
	mov	ecx, DWORD PTR tv399[ebp]
	mov	DWORD PTR $T14[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T14[ebp]
	mov	DWORD PTR _msg$19[ebp], edx

; 2514 : 		uchar					*dataptr;
; 2515 : 		VU_ID					tmpId;

	lea	ecx, DWORD PTR _tmpId$12[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2516 : 
; 2517 : 		msg->dataBlock.type = FalconCampDataMessage::campOrdersData;

	mov	eax, DWORD PTR _msg$19[ebp]
	mov	DWORD PTR [eax+48], 2

; 2518 : 		// Encode objective and location
; 2519 : 		msg->dataBlock.size = sizeof(tmpId) + sizeof(x) + sizeof(y);

	mov	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _msg$19[ebp]
	mov	WORD PTR [edx+52], cx

; 2520 : 		msg->dataBlock.data = dataptr = new uchar[msg->dataBlock.size];

	mov	eax, DWORD PTR _msg$19[ebp]
	movzx	ecx, WORD PTR [eax+52]
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	edx, DWORD PTR $T13[ebp]
	mov	DWORD PTR _dataptr$20[ebp], edx
	mov	eax, DWORD PTR _msg$19[ebp]
	mov	ecx, DWORD PTR _dataptr$20[ebp]
	mov	DWORD PTR [eax+54], ecx

; 2521 : 		tmpId = o->Id();

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _tmpId$12[ebp], ecx
	mov	DWORD PTR _tmpId$12[ebp+4], edx

; 2522 : 		memcpy(dataptr, &tmpId, sizeof(tmpId));		dataptr += sizeof(tmpId);

	push	8
	lea	eax, DWORD PTR _tmpId$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataptr$20[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _dataptr$20[ebp]
	add	edx, 8
	mov	DWORD PTR _dataptr$20[ebp], edx

; 2523 : 		memcpy(dataptr, &x, sizeof(x));				dataptr += sizeof(x);	

	push	2
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataptr$20[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _dataptr$20[ebp]
	add	edx, 2
	mov	DWORD PTR _dataptr$20[ebp], edx

; 2524 : 		memcpy(dataptr, &y, sizeof(y));				dataptr += sizeof(y);	

	push	2
	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataptr$20[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _dataptr$20[ebp]
	add	edx, 2
	mov	DWORD PTR _dataptr$20[ebp], edx

; 2525 : 		FalconSendMessage(msg,TRUE);

	push	1
	mov	eax, DWORD PTR _msg$19[ebp]
	push	eax
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 2526 : 	}
; 2527 : 	else {

	jmp	SHORT $LN2@tactical_s
$LN3@tactical_s:

; 2528 : 		// Otherwise dirty the necessary data
; 2529 : 		//bat->MakeUnitDirty (DIRTY_WP_LIST, DDP[177].priority);
; 2530 : 		bat->MakeUnitDirty (DIRTY_WP_LIST, SEND_NOW);

	push	65536					; 00010000H
	push	8192					; 00002000H
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?MakeUnitDirty@UnitClass@@QAEXW4Dirty_Unit@@W4Dirtyness@@@Z ; UnitClass::MakeUnitDirty

; 2531 : 		//bat->MakeUnitDirty (DIRTY_DESTINATION, DDP[178].priority);
; 2532 : 		bat->MakeUnitDirty (DIRTY_DESTINATION, SEND_NOW);

	push	65536					; 00010000H
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?MakeUnitDirty@UnitClass@@QAEXW4Dirty_Unit@@W4Dirtyness@@@Z ; UnitClass::MakeUnitDirty

; 2533 : 		//bat->MakeUnitDirty (DIRTY_WAYPOINT, DDP[179].priority);
; 2534 : 		bat->MakeUnitDirty (DIRTY_WAYPOINT, SEND_NOW);

	push	65536					; 00010000H
	push	1
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?MakeUnitDirty@UnitClass@@QAEXW4Dirty_Unit@@W4Dirtyness@@@Z ; UnitClass::MakeUnitDirty
$LN2@tactical_s:

; 2535 : 	}
; 2536 : 
; 2537 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2538 : 	if (gActiveFlightID == bat->Id()){

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, OFFSET ?gActiveFlightID@@3VVU_ID@@A ; gActiveFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN24@tactical_s

; 2539 : 		gMapMgr->SetCurrentWaypointList(bat->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _bat$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList

; 2540 : 		RefreshMapOnChange();

	call	?RefreshMapOnChange@@YAXXZ		; RefreshMapOnChange
$LN24@tactical_s:

; 2541 : 	}
; 2542 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z$0:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z$1:
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z ENDP ; tactical_set_orders
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_o$ = -4						; size = 4
_bat$ = 8						; size = 4
_current_obj$ = 12					; size = 8
_x$ = 20						; size = 2
_y$ = 24						; size = 2
?FindValidObjective@@YAPAVObjectiveClass@@PAVBattalionClass@@VVU_ID@@FF@Z PROC ; FindValidObjective

; 2420 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2421 : 	Objective		o = (Objective)vuDatabase->Find(current_obj);

	mov	eax, DWORD PTR _current_obj$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _current_obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _o$[ebp], eax

; 2422 : 	//float			last=-1.0F;
; 2423 : 
; 2424 : 	// Non-mobile battalions always snap to their objectives
; 2425 : 	// So clear their objective
; 2426 : 	if (bat->GetMovementType() == NoMove){

	mov	edx, DWORD PTR _bat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _bat$[ebp]
	mov	edx, DWORD PTR [eax+228]
	call	edx
	test	eax, eax
	jne	SHORT $LN2@FindValidO

; 2427 : 		gLastBattalionObjID = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A+4, ecx

; 2428 : 		o = NULL;

	mov	DWORD PTR _o$[ebp], 0
$LN2@FindValidO:

; 2429 : 	}
; 2430 : 
; 2431 : 	// Snap battalion to nearest objective
; 2432 : 	/*KCK: Commented out as per a beta-tester request. Let's see how it works
; 2433 : 	if (bat->GetUnitNormalRole() == GRO_AIRDEFENSE)
; 2434 : 		{
; 2435 : 		// Air defense units need to snap to SAM sites
; 2436 : 		if (!o)
; 2437 : 			o = FindNearestObjective(x,y,&last,999);
; 2438 : 		while (o && !o->SamSite())
; 2439 : 			o = FindNearestObjective(x,y,&last,999);
; 2440 : 		}
; 2441 : 	*/
; 2442 : 	if (!o){

	cmp	DWORD PTR _o$[ebp], 0
	jne	SHORT $LN1@FindValidO

; 2443 : 		o = FindNearestObjective(x, y, NULL, 999);

	push	999					; 000003e7H
	push	0
	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	call	?FindNearestObjective@@YAPAVObjectiveClass@@FFPAMF@Z ; FindNearestObjective
	add	esp, 16					; 00000010H
	mov	DWORD PTR _o$[ebp], eax
$LN1@FindValidO:

; 2444 : 	}
; 2445 : 	return o;

	mov	eax, DWORD PTR _o$[ebp]

; 2446 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindValidObjective@@YAPAVObjectiveClass@@PAVBattalionClass@@VVU_ID@@FF@Z ENDP ; FindValidObjective
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -44						; size = 8
_maxy$ = -36						; size = 4
_my$ = -32						; size = 4
_mx$ = -28						; size = 4
_scale$ = -24						; size = 4
_win$ = -20						; size = 4
_ent$ = -16						; size = 4
_lbox$ = -12						; size = 4
_y$ = -8						; size = 2
_x$ = -4						; size = 2
_id$ = 8						; size = 8
_caller$ = 16						; size = 4
?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z PROC	; tactical_add_battalion

; 2344 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi

; 2345 : 	C_ListBox		*lbox=NULL;

	mov	DWORD PTR _lbox$[ebp], 0

; 2346 : 	C_Window		*win=NULL;

	mov	DWORD PTR _win$[ebp], 0

; 2347 : 	short			x=0,y=0;

	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 2348 : 	float			mx,my,maxy,scale;
; 2349 : 	CampBaseClass	*ent=NULL;

	mov	DWORD PTR _ent$[ebp], 0

; 2350 : 
; 2351 : 	win=gMainHandler->FindWindow(NEW_BATT_WIN);

	push	31006					; 0000791eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2352 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN19@tactical_a

; 2353 : 		return;

	jmp	$LN20@tactical_a
$LN19@tactical_a:

; 2354 : 
; 2355 : 	if(caller->_GetCType_() == _CNTL_POPUPLIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16392				; 00004008H
	jne	SHORT $LN18@tactical_a

; 2356 : 	{
; 2357 : 		gPopupMgr->GetCurrentXY (&x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z	; C_PopupMgr::GetCurrentXY

; 2358 : 		gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
	jmp	$LN16@tactical_a
$LN18@tactical_a:

; 2359 : 	}
; 2360 : 	else if(caller->_GetCType_() == _CNTL_MAP_MOVER_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16405				; 00004015H
	jne	SHORT $LN16@tactical_a

; 2361 : 	{
; 2362 : 		x=static_cast<short>(((C_MapMover*)caller)->GetRelX() + caller->GetX() + caller->Parent_->GetX());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _x$[ebp], si

; 2363 : 		y=static_cast<short>(((C_MapMover*)caller)->GetRelY() + caller->GetY() + caller->Parent_->GetY());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _y$[ebp], si

; 2364 : 		gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
$LN16@tactical_a:

; 2365 : 	}
; 2366 : 
; 2367 : 	scale = gMapMgr->GetMapScale ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapScale@C_Map@@QAEMXZ		; C_Map::GetMapScale
	fstp	DWORD PTR _scale$[ebp]

; 2368 : 	maxy = gMapMgr->GetMaxY ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR _maxy$[ebp]

; 2369 : 	mx = x / scale;

	movsx	ecx, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR _mx$[ebp], xmm0

; 2370 : 	my = maxy - y / scale;

	movsx	edx, WORD PTR _y$[ebp]
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	xmm1, DWORD PTR _maxy$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _my$[ebp], xmm1

; 2371 : 
; 2372 : 	MapX = SimToGrid (mx);

	push	ecx
	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapX@@3FA, ax			; MapX

; 2373 : 	MapY = SimToGrid (my);

	push	ecx
	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapY@@3FA, ax			; MapY

; 2374 : 
; 2375 : 	// Determine target (or target location)
; 2376 : 	ent=(CampEntity) vuDatabase->Find(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 2377 : 	if (ent && ent->IsObjective())

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN15@tactical_a
	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN15@tactical_a

; 2378 : 	{
; 2379 : 		ent->GetLocation(&MapX,&MapY);

	push	OFFSET ?MapY@@3FA			; MapY
	push	OFFSET ?MapX@@3FA			; MapX
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2380 : 		gLastBattalionObjID = ent->Id();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A+4, edx

; 2381 : 	}
; 2382 : 	else

	jmp	SHORT $LN14@tactical_a
$LN15@tactical_a:

; 2383 : 	{
; 2384 : 		gLastBattalionObjID = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A+4, ecx

; 2385 : 		MapX = SimToGrid (mx);

	push	ecx
	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapX@@3FA, ax			; MapX

; 2386 : 		MapY = SimToGrid (my);

	push	ecx
	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapY@@3FA, ax			; MapY
$LN14@tactical_a:

; 2387 : 	}
; 2388 : 
; 2389 : 	// Setup list box for our team (or last equipment choice)
; 2390 : 	lbox = (C_ListBox *) win->FindControl (UNIT_TOE);

	push	13536					; 000034e0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2391 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN3@tactical_a

; 2392 : 	{
; 2393 : 		// KCK Hack: Convert from flags to his equipment table
; 2394 : 		if (gLastEquipment)

	cmp	DWORD PTR _gLastEquipment, 0
	je	SHORT $LN12@tactical_a

; 2395 : 			lbox->SetValue (gLastEquipment);

	mov	edx, DWORD PTR _gLastEquipment
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	$LN3@tactical_a
$LN12@tactical_a:

; 2396 : 		else if (TeamInfo[gSelectedTeam]->GetFlag() == COUN_RUSSIA)

	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	cmp	eax, 4
	jne	SHORT $LN10@tactical_a

; 2397 : 			lbox->SetValue (toe_soviet);

	push	4
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN3@tactical_a
$LN10@tactical_a:

; 2398 : 		else if (TeamInfo[gSelectedTeam]->GetFlag() == COUN_CHINA)

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	cmp	eax, 5
	jne	SHORT $LN8@tactical_a

; 2399 : 			lbox->SetValue (toe_chinese);

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN3@tactical_a
$LN8@tactical_a:

; 2400 : 		else if (TeamInfo[gSelectedTeam]->GetFlag() == COUN_SOUTH_KOREA)

	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	cmp	eax, 2
	jne	SHORT $LN6@tactical_a

; 2401 : 			lbox->SetValue (toe_rok);

	push	3
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
	jmp	SHORT $LN3@tactical_a
$LN6@tactical_a:

; 2402 : 		else if (TeamInfo[gSelectedTeam]->GetFlag() == COUN_NORTH_KOREA)

	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	cmp	eax, 6
	jne	SHORT $LN4@tactical_a

; 2403 : 			lbox->SetValue (toe_dprk);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 2404 : 		else

	jmp	SHORT $LN3@tactical_a
$LN4@tactical_a:

; 2405 : 			lbox->SetValue (toe_us);

	push	5
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN3@tactical_a:

; 2406 : 	}
; 2407 : 
; 2408 : 	if (gLastEquipment && gLastUnitType != -1)

	cmp	DWORD PTR _gLastEquipment, 0
	je	SHORT $LN1@tactical_a
	cmp	DWORD PTR _gLastUnitType, -1
	je	SHORT $LN1@tactical_a

; 2409 : 	{
; 2410 : 		lbox = (C_ListBox *) win->FindControl (UNIT_TYPE);

	push	31005					; 0000791dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2411 : 		if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN1@tactical_a

; 2412 : 			lbox->SetValue(gLastUnitType);

	mov	ecx, DWORD PTR _gLastUnitType
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN1@tactical_a:

; 2413 : 	}
; 2414 : 
; 2415 : 	update_new_battalion_window ();

	call	?update_new_battalion_window@@YAXXZ	; update_new_battalion_window

; 2416 : 	gMainHandler->EnableWindowGroup (32000);

	push	32000					; 00007d00H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN20@tactical_a:

; 2417 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z ENDP	; tactical_add_battalion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_airbase@@YAXJFPAVC_Base@@@Z PROC		; tac_select_airbase

; 1826 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1827 : 	C_ListBox *lbox;
; 1828 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@tac_select

; 1829 : 		return;

	jmp	SHORT $LN3@tac_select
$LN2@tac_select:

; 1830 : 
; 1831 : 	lbox=(C_ListBox*)control->Parent_->FindControl(TAC_AIRBASE_LIST);

	push	40048					; 00009c70H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1832 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN3@tac_select

; 1833 : 		gLastAirbase = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?gLastAirbase@@3HA, eax	; gLastAirbase
$LN3@tac_select:

; 1834 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_airbase@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_airbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?EditFlightInPackage@@YAXJFPAVC_Base@@@Z PROC		; EditFlightInPackage

; 1417 : {

	push	ebp
	mov	ebp, esp

; 1418 : 	if(hittype != C_TYPE_LMOUSEUP)
; 1419 : 		return;
; 1420 : }

	pop	ebp
	ret	0
?EditFlightInPackage@@YAXJFPAVC_Base@@@Z ENDP		; EditFlightInPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 8
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?Open_Flight_WindowCB@@YAXJFPAVC_Base@@@Z PROC		; Open_Flight_WindowCB

; 1406 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1407 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@Open_Fligh

; 1408 : 		return;

	jmp	SHORT $LN4@Open_Fligh
$LN3@Open_Fligh:

; 1409 : 
; 1410 : 	if (new_package_target)

	cmp	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
	je	SHORT $LN2@Open_Fligh

; 1411 : 		tactical_add_flight(new_package_target->Id(),control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_flight
	add	esp, 12					; 0000000cH

; 1412 : 	else

	jmp	SHORT $LN4@Open_Fligh
$LN2@Open_Fligh:

; 1413 : 		tactical_add_flight(FalconNullId,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	call	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_flight
	add	esp, 12					; 0000000cH
$LN4@Open_Fligh:

; 1414 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Open_Flight_WindowCB@@YAXJFPAVC_Base@@@Z ENDP		; Open_Flight_WindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_item$1 = -20						; size = 4
_atoflt$2 = -16						; size = 4
_win$ = -12						; size = 4
_flight$ = -8						; size = 4
_tree$ = -4						; size = 4
_id$ = 8						; size = 8
_caller$ = 16						; size = 4
?tactical_edit_package@@YAXVVU_ID@@PAVC_Base@@@Z PROC	; tactical_edit_package

; 1343 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1344 : 	C_Window	*win;
; 1345 : 	C_TreeList	*tree;
; 1346 : 	Flight		flight;
; 1347 : 
; 1348 : 	new_package = (Package) vuDatabase->Find(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, eax ; new_package

; 1349 : 	if (!new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	jne	SHORT $LN10@tactical_e

; 1350 : 		return;

	jmp	$LN11@tactical_e
$LN10@tactical_e:

; 1351 : 
; 1352 : 	EdittingPackage=1;

	mov	DWORD PTR ?EdittingPackage@@3HA, 1	; EdittingPackage

; 1353 : 	WeAreAddingPackage=1;

	mov	DWORD PTR ?WeAreAddingPackage@@3HA, 1	; WeAreAddingPackage

; 1354 : 	gTakeoffTime = gPackageTOT = 0;

	mov	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	mov	edx, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	mov	DWORD PTR ?gTakeoffTime@@3KA, edx	; gTakeoffTime

; 1355 : 	gNewSelectFlight=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, ecx

; 1356 : 
; 1357 : 	gLastTarget = new_package_target = (CampBaseClass*) vuDatabase->Find(new_package->GetMissionRequest()->targetID);

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	edx, DWORD PTR [eax+12]
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, eax ; new_package_target
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A, ecx ; gLastTarget

; 1358 : 	if (new_package_target)

	cmp	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
	je	SHORT $LN9@tactical_e

; 1359 : 		new_package_target->GetLocation(&MapX,&MapY);

	push	OFFSET ?MapY@@3FA			; MapY
	push	OFFSET ?MapX@@3FA			; MapX
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1360 : 	else

	jmp	SHORT $LN8@tactical_e
$LN9@tactical_e:

; 1361 : 		new_package->GetLocation(&MapX,&MapY);

	push	OFFSET ?MapY@@3FA			; MapY
	push	OFFSET ?MapX@@3FA			; MapX
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation
$LN8@tactical_e:

; 1362 : 
; 1363 : 	// Determine default mission type
; 1364 : 	flight = (Flight)new_package->GetFirstUnitElement();

	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+996]
	call	edx
	mov	DWORD PTR _flight$[ebp], eax

; 1365 : 	if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN7@tactical_e

; 1366 : 		gLastRole = flight->GetUnitMission();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	mov	DWORD PTR ?gLastRole@@3HA, eax		; gLastRole
$LN7@tactical_e:

; 1367 : 
; 1368 : 	tactical_update_package();

	call	?tactical_update_package@@YAXXZ		; tactical_update_package

; 1369 : 
; 1370 : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1371 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@tactical_e

; 1372 : 		{
; 1373 : 		// Clear any old flight trees
; 1374 : 		tree=(C_TreeList *)win->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1375 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN6@tactical_e

; 1376 : 			{
; 1377 : 			C_ATO_Flight *atoflt;
; 1378 : 			TREELIST *item;
; 1379 : 
; 1380 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1381 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1382 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 1383 : 			tree->SetCallback(tactical_new_flight_select);

	push	OFFSET ?tactical_new_flight_select@@YAXJFPAVC_Base@@@Z ; tactical_new_flight_select
	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1384 : 		
; 1385 : 			// Add current flights
; 1386 : 			flight = (Flight)new_package->GetFirstUnitElement();

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _flight$[ebp], eax
$LN4@tactical_e:

; 1387 : 			while (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN3@tactical_e

; 1388 : 			{
; 1389 : 				atoflt=BuildATOFlightInfo(flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?BuildATOFlightInfo@@YAPAVC_ATO_Flight@@PAVFlightClass@@@Z ; BuildATOFlightInfo
	add	esp, 4
	mov	DWORD PTR _atoflt$2[ebp], eax

; 1390 : 				if(atoflt)

	cmp	DWORD PTR _atoflt$2[ebp], 0
	je	SHORT $LN2@tactical_e

; 1391 : 				{
; 1392 : 					item=tree->CreateItem(flight->GetCampID(),C_TYPE_ITEM,atoflt);

	mov	edx, DWORD PTR _atoflt$2[ebp]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$1[ebp], eax

; 1393 : 					if(item)

	cmp	DWORD PTR _item$1[ebp], 0
	je	SHORT $LN2@tactical_e

; 1394 : 						tree->AddItem (tree->GetRoot(), item);

	mov	edx, DWORD PTR _item$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN2@tactical_e:

; 1395 : 				}
; 1396 : 				flight = (Flight)new_package->GetNextUnitElement();

	mov	eax, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+1000]
	call	eax
	mov	DWORD PTR _flight$[ebp], eax

; 1397 : 			}

	jmp	SHORT $LN4@tactical_e
$LN3@tactical_e:

; 1398 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1399 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN6@tactical_e:

; 1400 : 		}
; 1401 : 	}
; 1402 : 	SetupPackageControls (win, caller);

	mov	eax, DWORD PTR _caller$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetupPackageControls@@YAXPAVC_Window@@PAVC_Base@@@Z ; SetupPackageControls
	add	esp, 8
$LN11@tactical_e:

; 1403 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_edit_package@@YAXVVU_ID@@PAVC_Base@@@Z ENDP	; tactical_edit_package
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_my$ = -36						; size = 4
_mx$ = -32						; size = 4
_maxy$ = -28						; size = 4
_scale$ = -24						; size = 4
_win$ = -20						; size = 4
_ent$ = -16						; size = 4
_tree$ = -12						; size = 4
_y$ = -8						; size = 2
_x$ = -4						; size = 2
_id$ = 8						; size = 8
_caller$ = 16						; size = 4
?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z PROC	; tactical_add_package

; 1276 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi

; 1277 : 	C_Window	*win=NULL;

	mov	DWORD PTR _win$[ebp], 0

; 1278 : 	C_TreeList	*tree=NULL;

	mov	DWORD PTR _tree$[ebp], 0

; 1279 : 	CampEntity	ent=NULL;

	mov	DWORD PTR _ent$[ebp], 0

; 1280 : 	GridIndex	x=0,y=0;

	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 1281 : 	float		mx,my,maxy,scale;
; 1282 : 
; 1283 : 	EdittingPackage=0;

	mov	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage

; 1284 : 	WeAreAddingPackage=1;

	mov	DWORD PTR ?WeAreAddingPackage@@3HA, 1	; WeAreAddingPackage

; 1285 : 	if(caller->_GetCType_() == _CNTL_POPUPLIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16392				; 00004008H
	jne	SHORT $LN8@tactical_a

; 1286 : 	{
; 1287 : 		gPopupMgr->GetCurrentXY (&x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z	; C_PopupMgr::GetCurrentXY

; 1288 : 		gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
	jmp	$LN6@tactical_a
$LN8@tactical_a:

; 1289 : 	}
; 1290 : 	else if(caller->_GetCType_() == _CNTL_MAP_MOVER_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16405				; 00004015H
	jne	SHORT $LN6@tactical_a

; 1291 : 	{
; 1292 : 		x=static_cast<short>(((C_MapMover*)caller)->GetRelX() + caller->GetX() + caller->Parent_->GetX());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _x$[ebp], si

; 1293 : 		y=static_cast<short>(((C_MapMover*)caller)->GetRelY() + caller->GetY() + caller->Parent_->GetY());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _y$[ebp], si

; 1294 : 		gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
$LN6@tactical_a:

; 1295 : 	}
; 1296 : 
; 1297 : 	gTakeoffTime = gPackageTOT = 0;

	mov	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	mov	ecx, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	mov	DWORD PTR ?gTakeoffTime@@3KA, ecx	; gTakeoffTime

; 1298 : 	new_package = NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package

; 1299 : 	gNewSelectFlight=FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, eax

; 1300 : 	scale = gMapMgr->GetMapScale ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapScale@C_Map@@QAEMXZ		; C_Map::GetMapScale
	fstp	DWORD PTR _scale$[ebp]

; 1301 : 	maxy = gMapMgr->GetMaxY ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR _maxy$[ebp]

; 1302 : 
; 1303 : 	mx = x / scale;

	movsx	ecx, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR _mx$[ebp], xmm0

; 1304 : 	my = maxy - y / scale;

	movsx	edx, WORD PTR _y$[ebp]
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	xmm1, DWORD PTR _maxy$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _my$[ebp], xmm1

; 1305 : 
; 1306 : 	// Determine target (or target location)
; 1307 : 	ent=(CampEntity) vuDatabase->Find(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1308 : 	if (ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN5@tactical_a

; 1309 : 		{
; 1310 : 		gLastTarget = new_package_target = ent;

	mov	edx, DWORD PTR _ent$[ebp]
	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, edx ; new_package_target
	mov	eax, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A, eax ; gLastTarget

; 1311 : 		new_package_target->GetLocation(&MapX,&MapY);

	push	OFFSET ?MapY@@3FA			; MapY
	push	OFFSET ?MapX@@3FA			; MapX
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1312 : 		}
; 1313 : 	else

	jmp	SHORT $LN4@tactical_a
$LN5@tactical_a:

; 1314 : 		{
; 1315 : 		MapX = SimToGrid (mx);

	push	ecx
	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapX@@3FA, ax			; MapX

; 1316 : 		MapY = SimToGrid (my);

	push	ecx
	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapY@@3FA, ax			; MapY

; 1317 : 		new_package_target = NULL;

	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
$LN4@tactical_a:

; 1318 : 		}
; 1319 : 
; 1320 : 	// Determine default mission type
; 1321 : 	if (!gLastAircraftType)

	cmp	DWORD PTR ?gLastAircraftType@@3HA, 0	; gLastAircraftType
	jne	SHORT $LN3@tactical_a

; 1322 : 		gLastAircraftType = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_SQUADRON,STYPE_UNIT_FIGHTER_BOMBER,SPTYPE_F16C,VU_ANY,VU_ANY,VU_ANY) + VU_LAST_ENTITY_TYPE;

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	push	3
	push	9
	push	3
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	add	eax, 100				; 00000064H
	mov	DWORD PTR ?gLastAircraftType@@3HA, eax	; gLastAircraftType
$LN3@tactical_a:

; 1323 : 	gLastRole = GetMissionFromTarget (gSelectedTeam, gLastAircraftType-VU_LAST_ENTITY_TYPE, ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	sub	edx, 100				; 00000064H
	push	edx
	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	eax
	call	?GetMissionFromTarget@@YAHEHPAVCampBaseClass@@@Z ; GetMissionFromTarget
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?gLastRole@@3HA, eax		; gLastRole

; 1324 : 	
; 1325 : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1326 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@tactical_a

; 1327 : 	{
; 1328 : 		// Clear any old flight trees
; 1329 : 		tree=(C_TreeList *)win->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1330 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN1@tactical_a

; 1331 : 		{
; 1332 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1333 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1334 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@tactical_a:

; 1335 : 		}
; 1336 : 		SetupPackageControls (win, caller);

	mov	eax, DWORD PTR _caller$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetupPackageControls@@YAXPAVC_Window@@PAVC_Base@@@Z ; SetupPackageControls
	add	esp, 8
$LN2@tactical_a:

; 1337 : 	}
; 1338 : 
; 1339 : 	tactical_update_package();

	call	?tactical_update_package@@YAXXZ		; tactical_update_package

; 1340 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ENDP	; tactical_add_package
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_min$1 = -108						; size = 4
_flight$2 = -104					; size = 4
_sec$3 = -100						; size = 4
_min$4 = -96						; size = 4
_sec$5 = -92						; size = 4
_edit$ = -88						; size = 4
_hr$6 = -84						; size = 4
_hr$7 = -80						; size = 4
_tot$ = -76						; size = 4
_i$ = -72						; size = 4
_takeoff$ = -68						; size = 4
_w$8 = -64						; size = 4
_txt$ = -60						; size = 4
_lbox$ = -56						; size = 4
_clock$ = -52						; size = 4
_btn$ = -48						; size = 4
_buffer$9 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_win$ = 8						; size = 4
_caller$ = 12						; size = 4
?SetupPackageControls@@YAXPAVC_Window@@PAVC_Base@@@Z PROC ; SetupPackageControls

; 1026 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1027 : 	C_Button	*btn;
; 1028 : 	C_ListBox	*lbox;
; 1029 : 	C_Clock		*clock;
; 1030 : 	C_Text		*txt;
; 1031 : 	C_EditBox	*edit;
; 1032 : 	int			i;
; 1033 : 	CampaignTime	takeoff,tot;
; 1034 : 
; 1035 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN58@SetupPacka

; 1036 : 		return;

	jmp	$LN59@SetupPacka
$LN58@SetupPacka:

; 1037 : 
; 1038 : 	// Initial clock times based off of either current time or actual package statistics
; 1039 : 	takeoff = TheCampaign.CurrentTime+2*CampaignMinutes;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	eax, 120000				; 0001d4c0H
	mov	DWORD PTR _takeoff$[ebp], eax

; 1040 : 	tot = TheCampaign.CurrentTime+30*CampaignMinutes;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	ecx, 1800000				; 001b7740H
	mov	DWORD PTR _tot$[ebp], ecx

; 1041 : 	if (new_package && new_package->GetUnitElement(0))

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	$LN57@SetupPacka
	push	0
	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+888]
	call	edx
	test	eax, eax
	je	SHORT $LN57@SetupPacka

; 1042 : 		{
; 1043 : 		// Set times based off of first flight in package
; 1044 : 		Flight			flight = (Flight) new_package->GetUnitElement(0);

	push	0
	mov	eax, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+888]
	call	eax
	mov	DWORD PTR _flight$2[ebp], eax

; 1045 : 		WayPoint		w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$2[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$8[ebp], eax

; 1046 : 		if (w)

	cmp	DWORD PTR _w$8[ebp], 0
	je	SHORT $LN55@SetupPacka

; 1047 : 			takeoff = w->GetWPDepartureTime();

	mov	ecx, DWORD PTR _w$8[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	DWORD PTR _takeoff$[ebp], eax
$LN55@SetupPacka:

; 1048 : 		while (w && !(w->GetWPFlags() & WPF_TARGET))

	cmp	DWORD PTR _w$8[ebp], 0
	je	SHORT $LN54@SetupPacka
	mov	ecx, DWORD PTR _w$8[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	jne	SHORT $LN54@SetupPacka

; 1049 : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$8[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$8[ebp], eax
	jmp	SHORT $LN55@SetupPacka
$LN54@SetupPacka:

; 1050 : 		if (w)

	cmp	DWORD PTR _w$8[ebp], 0
	je	SHORT $LN57@SetupPacka

; 1051 : 			tot = w->GetWPArrivalTime();

	mov	ecx, DWORD PTR _w$8[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	mov	DWORD PTR _tot$[ebp], eax
$LN57@SetupPacka:

; 1052 : 		}
; 1053 : 
; 1054 : 	// sfr: addpackage
; 1055 : 	if(/*!(TheCampaign.Flags & (CAMP_TACTICAL|CAMP_TACTICAL_EDIT)) ||*/
; 1056 : 	  (EdittingPackage && !(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && takeoff < TheCampaign.CurrentTime))

	cmp	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage
	je	$LN52@SetupPacka
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	jne	$LN52@SetupPacka
	mov	edx, DWORD PTR _takeoff$[ebp]
	cmp	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	jae	$LN52@SetupPacka

; 1057 : 	{
; 1058 : 		// Disable these controls in campaign, or in run mode if the package has departed
; 1059 : 		btn=(C_Button*)win->FindControl(ADD_PACKAGE_FLIGHT);

	push	40076					; 00009c8cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1060 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN51@SetupPacka

; 1061 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN51@SetupPacka:

; 1062 : 		btn=(C_Button*)win->FindControl(DELETE_PACKAGE_FLIGHT);

	push	40078					; 00009c8eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1063 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN50@SetupPacka

; 1064 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN50@SetupPacka:

; 1065 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1066 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN49@SetupPacka

; 1067 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN49@SetupPacka:

; 1068 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_INC);

	push	40058					; 00009c7aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1069 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN48@SetupPacka

; 1070 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN48@SetupPacka:

; 1071 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_DEC);

	push	40059					; 00009c7bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1072 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN47@SetupPacka

; 1073 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN47@SetupPacka:

; 1074 : 		btn=(C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1075 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN46@SetupPacka

; 1076 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN46@SetupPacka:

; 1077 : 		btn=(C_Button*)win->FindControl(PAK_TOT_INC);

	push	40066					; 00009c82H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1078 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN45@SetupPacka

; 1079 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN45@SetupPacka:

; 1080 : 		btn=(C_Button*)win->FindControl(PAK_TOT_DEC);

	push	40067					; 00009c83H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1081 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN44@SetupPacka

; 1082 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN44@SetupPacka:

; 1083 : 		clock=(C_Clock*)win->FindControl(PAK_TAKEOFF_TIME);

	push	40057					; 00009c79H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1084 : 		if(clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	SHORT $LN43@SetupPacka

; 1085 : 			clock->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN43@SetupPacka:

; 1086 : 		clock=(C_Clock*)win->FindControl(PAK_TOT_TIME);

	push	40065					; 00009c81H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1087 : 		if(clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	SHORT $LN42@SetupPacka

; 1088 : 			clock->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN42@SetupPacka:

; 1089 : 	}
; 1090 : 	else

	jmp	$LN41@SetupPacka
$LN52@SetupPacka:

; 1091 : 	{
; 1092 : 		// These controls are allowed in tactical engagement unless we're editing a package in run mode
; 1093 : 		btn=(C_Button*)win->FindControl(ADD_PACKAGE_FLIGHT);

	push	40076					; 00009c8cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1094 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN40@SetupPacka

; 1095 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN40@SetupPacka:

; 1096 : 		btn=(C_Button*)win->FindControl(DELETE_PACKAGE_FLIGHT);

	push	40078					; 00009c8eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1097 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN39@SetupPacka

; 1098 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN39@SetupPacka:

; 1099 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1100 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN38@SetupPacka

; 1101 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN38@SetupPacka:

; 1102 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_INC);

	push	40058					; 00009c7aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1103 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN37@SetupPacka

; 1104 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN37@SetupPacka:

; 1105 : 		btn=(C_Button*)win->FindControl(PAK_TAKEOFF_DEC);

	push	40059					; 00009c7bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1106 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN36@SetupPacka

; 1107 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN36@SetupPacka:

; 1108 : 		btn=(C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1109 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN35@SetupPacka

; 1110 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN35@SetupPacka:

; 1111 : 		btn=(C_Button*)win->FindControl(PAK_TOT_INC);

	push	40066					; 00009c82H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1112 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN34@SetupPacka

; 1113 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN34@SetupPacka:

; 1114 : 		btn=(C_Button*)win->FindControl(PAK_TOT_DEC);

	push	40067					; 00009c83H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1115 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN33@SetupPacka

; 1116 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN33@SetupPacka:

; 1117 : 		clock=(C_Clock*)win->FindControl(PAK_TAKEOFF_TIME);

	push	40057					; 00009c79H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1118 : 		if(clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	SHORT $LN32@SetupPacka

; 1119 : 			clock->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN32@SetupPacka:

; 1120 : 		clock=(C_Clock*)win->FindControl(PAK_TOT_TIME);

	push	40065					; 00009c81H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1121 : 		if(clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	SHORT $LN41@SetupPacka

; 1122 : 			clock->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN41@SetupPacka:

; 1123 : 	}
; 1124 : 
; 1125 : 	if (!EdittingPackage)

	cmp	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage
	jne	SHORT $LN30@SetupPacka

; 1126 : 	{
; 1127 : 		// These buttons are only allowed if creating a new package
; 1128 : 		btn=(C_Button*)win->FindControl(CANCEL_PACK);

	push	40079					; 00009c8fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1129 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN29@SetupPacka

; 1130 : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN29@SetupPacka:

; 1131 : 	}
; 1132 : 	else

	jmp	SHORT $LN28@SetupPacka
$LN30@SetupPacka:

; 1133 : 	{
; 1134 : 		btn=(C_Button*)win->FindControl(CANCEL_PACK);

	push	40079					; 00009c8fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1135 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN28@SetupPacka

; 1136 : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN28@SetupPacka:

; 1137 : 	}
; 1138 : 
; 1139 : 	if (TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	SHORT $LN26@SetupPacka

; 1140 : 	{
; 1141 : 		// These are allowed always in tactical engagement
; 1142 : 		lbox=(C_ListBox*)win->FindControl(PACKAGE_PRIORITY_LIST);

	push	40091					; 00009c9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1143 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN25@SetupPacka

; 1144 : 			lbox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN25@SetupPacka:

; 1145 : 	}
; 1146 : 	else

	jmp	SHORT $LN24@SetupPacka
$LN26@SetupPacka:

; 1147 : 	{
; 1148 : 		lbox=(C_ListBox*)win->FindControl(PACKAGE_PRIORITY_LIST);

	push	40091					; 00009c9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1149 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN24@SetupPacka

; 1150 : 			lbox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN24@SetupPacka:

; 1151 : 	}
; 1152 : 
; 1153 : 	if(EdittingPackage && new_package)

	cmp	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage
	je	SHORT $LN22@SetupPacka
	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN22@SetupPacka

; 1154 : 	{
; 1155 : 		_TCHAR buffer[40];
; 1156 : 
; 1157 : 		txt=(C_Text*)win->FindControl(PACKAGE_DESIGNATOR);

	push	40055					; 00009c77H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1158 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN21@SetupPacka

; 1159 : 		{
; 1160 : 			_stprintf(buffer,"%s %1ld",gStringMgr->GetString(TXT_PACKAGE),new_package->GetCampID());

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	push	91					; 0000005bH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_07PAINCAHD@?$CFs?5?$CF1ld?$AA@
	lea	edx, DWORD PTR _buffer$9[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1161 : 			txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1162 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN21@SetupPacka:

; 1163 : 		}
; 1164 : 	}
; 1165 : 	else

	jmp	SHORT $LN20@SetupPacka
$LN22@SetupPacka:

; 1166 : 	{
; 1167 : 		txt=(C_Text*)win->FindControl(PACKAGE_DESIGNATOR);

	push	40055					; 00009c77H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1168 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN20@SetupPacka

; 1169 : 		{
; 1170 : 			txt->SetText(TXT_ADD_PACKAGE_UC);

	push	402					; 00000192H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 1171 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@SetupPacka:

; 1172 : 		}
; 1173 : 	}
; 1174 : 
; 1175 : 	// Set Package Type listbox
; 1176 : 	lbox=(C_ListBox *)win->FindControl(TAC_PACKAGE_TYPE);

	push	40040					; 00009c68H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1177 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN18@SetupPacka

; 1178 : 		{
; 1179 : 		for (i=1;i<=ATO_OTHER;i++)

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN17@SetupPacka
$LN16@SetupPacka:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN17@SetupPacka:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jg	SHORT $LN18@SetupPacka

; 1180 : 			lbox->AddItem(i,C_TYPE_ITEM,AtoMissStr[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _AtoMissStr[edx*4]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z	; C_ListBox::AddItem
	jmp	SHORT $LN16@SetupPacka
$LN18@SetupPacka:

; 1181 : 		}
; 1182 : 
; 1183 : 	// Initialize takeoff time to now
; 1184 : 	clock=(C_Clock*)win->FindControl(PAK_TAKEOFF_TIME);

	push	40057					; 00009c79H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1185 : 	if (clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	$LN14@SetupPacka

; 1186 : 		{
; 1187 : 		int				hr,min,sec;
; 1188 : 		hr = takeoff / CampaignHours;

	mov	eax, DWORD PTR _takeoff$[ebp]
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	mov	DWORD PTR _hr$7[ebp], eax

; 1189 : 		hr = hr % 24;

	mov	eax, DWORD PTR _hr$7[ebp]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _hr$7[ebp], edx

; 1190 : 		min = (takeoff / CampaignMinutes) % 60;

	mov	eax, DWORD PTR _takeoff$[ebp]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _min$1[ebp], edx

; 1191 : 		sec = (takeoff / CampaignSeconds) % 60;

	mov	eax, DWORD PTR _takeoff$[ebp]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _sec$5[ebp], edx

; 1192 : 		clock->SetHour(hr);

	mov	edx, DWORD PTR _hr$7[ebp]
	push	edx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetHour@C_Clock@@QAEXJ@Z		; C_Clock::SetHour

; 1193 : 		clock->SetMinute(min);

	mov	eax, DWORD PTR _min$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetMinute@C_Clock@@QAEXJ@Z		; C_Clock::SetMinute

; 1194 : 		clock->SetSecond(sec);

	mov	ecx, DWORD PTR _sec$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetSecond@C_Clock@@QAEXJ@Z		; C_Clock::SetSecond

; 1195 : 		clock->Refresh ();

	mov	edx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN14@SetupPacka:

; 1196 : 		}
; 1197 : 
; 1198 : 	// Initialize takeoff time to now plus estimated time to target
; 1199 : 	clock=(C_Clock*)win->FindControl(PAK_TOT_TIME);

	push	40065					; 00009c81H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 1200 : 	if (clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	$LN13@SetupPacka

; 1201 : 		{
; 1202 : 		int				hr,min,sec;
; 1203 : 		hr = tot / CampaignHours;

	mov	eax, DWORD PTR _tot$[ebp]
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	mov	DWORD PTR _hr$6[ebp], eax

; 1204 : 		hr = hr % 24;

	mov	eax, DWORD PTR _hr$6[ebp]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _hr$6[ebp], edx

; 1205 : 		min = (tot / CampaignMinutes) % 60;

	mov	eax, DWORD PTR _tot$[ebp]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _min$4[ebp], edx

; 1206 : 		sec = (tot / CampaignSeconds) % 60;

	mov	eax, DWORD PTR _tot$[ebp]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _sec$3[ebp], edx

; 1207 : 		clock->SetHour(hr);

	mov	edx, DWORD PTR _hr$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetHour@C_Clock@@QAEXJ@Z		; C_Clock::SetHour

; 1208 : 		clock->SetMinute(min);

	mov	eax, DWORD PTR _min$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetMinute@C_Clock@@QAEXJ@Z		; C_Clock::SetMinute

; 1209 : 		clock->SetSecond(sec);

	mov	ecx, DWORD PTR _sec$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetSecond@C_Clock@@QAEXJ@Z		; C_Clock::SetSecond

; 1210 : 		clock->Refresh ();

	mov	edx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN13@SetupPacka:

; 1211 : 		}
; 1212 : 
; 1213 : 	// Initial package day edit
; 1214 : 	edit = (C_EditBox*)win->FindControl(PACKAGE_DAY);

	push	40090					; 00009c9aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _edit$[ebp], eax

; 1215 : 	if (edit)

	cmp	DWORD PTR _edit$[ebp], 0
	je	SHORT $LN12@SetupPacka

; 1216 : 		edit->SetText((takeoff / CampaignDay) + 1);

	mov	eax, DWORD PTR _takeoff$[ebp]
	xor	edx, edx
	mov	ecx, 86400000				; 05265c00H
	div	ecx
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _edit$[ebp]
	call	?SetText@C_EditBox@@QAEXJ@Z		; C_EditBox::SetText
$LN12@SetupPacka:

; 1217 : 
; 1218 : 	// Initialize priority list box
; 1219 : 	lbox=(C_ListBox *)win->FindControl(PACKAGE_PRIORITY_LIST);

	push	40091					; 00009c9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1220 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN11@SetupPacka

; 1221 : 		{
; 1222 : 		lbox->AddItem(1,C_TYPE_ITEM,"A");

	push	OFFSET ??_C@_01FHEEJDEE@A?$AA@
	push	50					; 00000032H
	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1223 : 		lbox->AddItem(2,C_TYPE_ITEM,"B");

	push	OFFSET ??_C@_01HMGJMAIH@B?$AA@
	push	50					; 00000032H
	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1224 : 		lbox->AddItem(3,C_TYPE_ITEM,"C");

	push	OFFSET ??_C@_01GFHCPBMG@C?$AA@
	push	50					; 00000032H
	push	3
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1225 : 		lbox->AddItem(4,C_TYPE_ITEM,"D");

	push	OFFSET ??_C@_01CKDDGHAB@D?$AA@
	push	50					; 00000032H
	push	4
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1226 : 		lbox->AddItem(5,C_TYPE_ITEM,"E");

	push	OFFSET ??_C@_01DDCIFGEA@E?$AA@
	push	50					; 00000032H
	push	5
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1227 : 		lbox->AddItem(6,C_TYPE_ITEM,"F");

	push	OFFSET ??_C@_01BIAFAFID@F?$AA@
	push	50					; 00000032H
	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1228 : 		lbox->SetValue(1);

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN11@SetupPacka:

; 1229 : 		}
; 1230 : 
; 1231 : 	// Setup time lock buttons
; 1232 : 	btn = (C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1233 : 	if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN10@SetupPacka

; 1234 : 		btn->SetCallback(LockTakeoffTimeCB);

	push	OFFSET ?LockTakeoffTimeCB@@YAXJFPAVC_Base@@@Z ; LockTakeoffTimeCB
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN10@SetupPacka:

; 1235 : 
; 1236 : 	btn = (C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1237 : 	if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN9@SetupPacka

; 1238 : 		{
; 1239 : 		btn->SetCallback(LockTimeOnTargetCB);

	push	OFFSET ?LockTimeOnTargetCB@@YAXJFPAVC_Base@@@Z ; LockTimeOnTargetCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1240 : 		if (!btn->GetState())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN9@SetupPacka

; 1241 : 			LockTakeoffTimeCB (0,C_TYPE_LMOUSEUP,NULL);

	push	0
	push	52					; 00000034H
	push	0
	call	?LockTakeoffTimeCB@@YAXJFPAVC_Base@@@Z	; LockTakeoffTimeCB
	add	esp, 12					; 0000000cH
$LN9@SetupPacka:

; 1242 : 		}
; 1243 : 
; 1244 : 	// Setup cancel and ok
; 1245 : 	btn=(C_Button*)win->FindControl(CANCEL_PACK);

	push	40079					; 00009c8fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1246 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@SetupPacka

; 1247 : 		btn->SetCallback(DiscardPackage);

	push	OFFSET ?DiscardPackage@@YAXJFPAVC_Base@@@Z ; DiscardPackage
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN7@SetupPacka:

; 1248 : 
; 1249 : 	btn=(C_Button*)win->FindControl(OK_PACK);

	push	40080					; 00009c90H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1250 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@SetupPacka

; 1251 : 		btn->SetCallback(KeepPackage);

	push	OFFSET ?KeepPackage@@YAXJFPAVC_Base@@@Z	; KeepPackage
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@SetupPacka:

; 1252 : 
; 1253 : 	btn=(C_Button*)win->FindControl(PAK_TOT_DEC);

	push	40067					; 00009c83H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1254 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@SetupPacka

; 1255 : 		btn->SetCallback(ChangePackTimeCB);

	push	OFFSET ?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z ; ChangePackTimeCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@SetupPacka:

; 1256 : 
; 1257 : 	btn=(C_Button*)win->FindControl(PAK_TOT_INC);

	push	40066					; 00009c82H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1258 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@SetupPacka

; 1259 : 		btn->SetCallback(ChangePackTimeCB);

	push	OFFSET ?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z ; ChangePackTimeCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@SetupPacka:

; 1260 : 
; 1261 : 	btn=(C_Button*)win->FindControl(PAK_TAKEOFF_DEC);

	push	40059					; 00009c7bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1262 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@SetupPacka

; 1263 : 		btn->SetCallback(ChangePackTimeCB);

	push	OFFSET ?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z ; ChangePackTimeCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@SetupPacka:

; 1264 : 
; 1265 : 	btn=(C_Button*)win->FindControl(PAK_TAKEOFF_INC);

	push	40058					; 00009c7aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1266 : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@SetupPacka

; 1267 : 		btn->SetCallback(ChangePackTimeCB);

	push	OFFSET ?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z ; ChangePackTimeCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@SetupPacka:

; 1268 : 
; 1269 : 	if(caller->_GetCType_() != _CNTL_BUTTON_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16387				; 00004003H
	je	SHORT $LN59@SetupPacka

; 1270 : 		gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN59@SetupPacka:

; 1271 : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetupPackageControls@@YAXPAVC_Window@@PAVC_Base@@@Z ENDP ; SetupPackageControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?LockTimeOnTargetCB@@YAXJFPAVC_Base@@@Z PROC		; LockTimeOnTargetCB

; 854  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 855  : 	C_Button	*btn;
; 856  : 	C_Window	*win;
; 857  : 
; 858  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@LockTimeOn

; 859  : 		return;

	jmp	$LN7@LockTimeOn
$LN6@LockTimeOn:

; 860  : 
; 861  : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 862  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@LockTimeOn

; 863  : 	{
; 864  : 		btn = (C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 865  : 		if (btn && btn->GetState() == 1)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@LockTimeOn
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN4@LockTimeOn

; 866  : 		{
; 867  : 			// Clear lock on TOT, if any
; 868  : 			btn = (C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 869  : 			if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@LockTimeOn

; 870  : 				{
; 871  : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 872  : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@LockTimeOn:

; 873  : 				}
; 874  : 		}
; 875  : 		else

	jmp	SHORT $LN7@LockTimeOn
$LN4@LockTimeOn:

; 876  : 		{
; 877  : 			btn = (C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 878  : 			if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@LockTimeOn

; 879  : 				{
; 880  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 881  : 				btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@LockTimeOn:

; 882  : 				}
; 883  : 		}
; 884  : 	}
; 885  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LockTimeOnTargetCB@@YAXJFPAVC_Base@@@Z ENDP		; LockTimeOnTargetCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?LockTakeoffTimeCB@@YAXJFPAVC_Base@@@Z PROC		; LockTakeoffTimeCB

; 820  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 821  : 	C_Button	*btn;
; 822  : 	C_Window	*win;
; 823  : 
; 824  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@LockTakeof

; 825  : 		return;

	jmp	$LN7@LockTakeof
$LN6@LockTakeof:

; 826  : 
; 827  : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 828  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@LockTakeof

; 829  : 	{
; 830  : 		btn = (C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 831  : 		if (btn && btn->GetState() == 1)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@LockTakeof
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN4@LockTakeof

; 832  : 		{
; 833  : 			// Clear lock on TOT, if any
; 834  : 			btn = (C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 835  : 			if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@LockTakeof

; 836  : 				{
; 837  : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 838  : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@LockTakeof:

; 839  : 				}
; 840  : 		}
; 841  : 		else

	jmp	SHORT $LN7@LockTakeof
$LN4@LockTakeof:

; 842  : 		{
; 843  : 			btn = (C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 844  : 			if (btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@LockTakeof

; 845  : 				{
; 846  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 847  : 				btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@LockTakeof:

; 848  : 				}
; 849  : 		}
; 850  : 	}
; 851  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LockTakeoffTimeCB@@YAXJFPAVC_Base@@@Z ENDP		; LockTakeoffTimeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T2 = -132						; size = 8
_ait$3 = -124						; size = 12
_win$ = -112						; size = 4
_airbase$ = -108					; size = 4
_lbox$ = -104						; size = 4
_o$4 = -100						; size = 4
_name$5 = -96						; size = 80
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 8
?tactical_add_squadron@@YAXVVU_ID@@@Z PROC		; tactical_add_squadron

; 713  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tactical_add_squadron@@YAXVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 714  : 	C_ListBox		*lbox;
; 715  : 	C_Window		*win;
; 716  : 	CampBaseClass*	airbase;
; 717  : 
; 718  : 	win = gMainHandler->FindWindow(NEW_SQUAD_WIN); 

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 719  : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN10@tactical_a

; 720  : 		return;

	jmp	$LN11@tactical_a
$LN10@tactical_a:

; 721  : 
; 722  : 	airbase = (CampBaseClass*) FindEntity(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _airbase$[ebp], eax

; 723  : 	if (!airbase || !airbase->IsObjective() || airbase->GetType() != TYPE_AIRBASE)

	cmp	DWORD PTR _airbase$[ebp], 0
	je	SHORT $LN8@tactical_a
	mov	edx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN8@tactical_a
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 1
	je	SHORT $LN9@tactical_a
$LN8@tactical_a:

; 724  : 		// KCK: Should probably just pick one
; 725  : 		return;

	jmp	$LN11@tactical_a
$LN9@tactical_a:

; 726  : 
; 727  : 	lbox=(C_ListBox*)win->FindControl(TAC_AIRCRAFT_TYPE);

	push	40046					; 00009c6eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 728  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN7@tactical_a

; 729  : 	{
; 730  : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 731  : 		FillListBoxWithACTypes(lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	call	?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z ; FillListBoxWithACTypes
	add	esp, 4

; 732  : 		lbox->SetValue(gLastAircraftType);

	mov	edx, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN7@tactical_a:

; 733  : 	}
; 734  : 
; 735  : 	// Setup the airbase list box
; 736  : 	gLastAirbaseID = airbase->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A+4, edx

; 737  : 	gLastAirbase = airbase->GetCampID();

	mov	eax, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	DWORD PTR ?gLastAirbase@@3HA, ecx	; gLastAirbase

; 738  : 	lbox=(C_ListBox*)win->FindControl(TAC_AIRBASE_LIST);

	push	40048					; 00009c70H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 739  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN6@tactical_a

; 740  : 		{
; 741  : 		VuListIterator	ait(AllObjList);

	mov	edx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	edx
	lea	ecx, DWORD PTR _ait$3[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 742  : 		Objective		o;
; 743  : 		_TCHAR			name[80];
; 744  : 
; 745  : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 746  : 		o = (Objective) ait.GetFirst();

	lea	ecx, DWORD PTR _ait$3[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$4[ebp], eax
$LN5@tactical_a:

; 747  : 		while (o)

	cmp	DWORD PTR _o$4[ebp], 0
	je	$LN4@tactical_a

; 748  : 			{
; 749  : 			if (o->GetType() == TYPE_AIRBASE && GetRoE(gSelectedTeam,o->GetTeam(),ROE_AIR_USE_BASES) == ROE_ALLOWED)

	mov	ecx, DWORD PTR _o$4[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 1
	jne	$LN3@tactical_a
	push	9
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN3@tactical_a

; 750  : 				{
; 751  : 				// Add airbase name to listbox
; 752  : 				o->GetName(name,79,TRUE);

	push	1
	push	79					; 0000004fH
	lea	eax, DWORD PTR _name$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 753  : 				lbox->AddItem(o->GetCampID(),C_TYPE_ITEM,name);

	lea	ecx, DWORD PTR _name$5[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _o$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 754  : 				if (!gLastAirbase)

	cmp	DWORD PTR ?gLastAirbase@@3HA, 0		; gLastAirbase
	jne	SHORT $LN2@tactical_a

; 755  : 					gLastAirbase = o->GetCampID();

	mov	ecx, DWORD PTR _o$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	DWORD PTR ?gLastAirbase@@3HA, ecx	; gLastAirbase
$LN2@tactical_a:

; 756  : 				if (o->GetCampID() == gLastAirbase)

	mov	edx, DWORD PTR _o$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$4[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, DWORD PTR ?gLastAirbase@@3HA	; gLastAirbase
	jne	SHORT $LN3@tactical_a

; 757  : 					lbox->SetValue(gLastAirbase);

	mov	ecx, DWORD PTR ?gLastAirbase@@3HA	; gLastAirbase
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN3@tactical_a:

; 758  : 				}
; 759  : 			o = (Objective) ait.GetNext();

	lea	ecx, DWORD PTR _ait$3[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$4[ebp], eax

; 760  : 			}

	jmp	$LN5@tactical_a
$LN4@tactical_a:

; 761  : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 762  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ait$3[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN6@tactical_a:

; 763  : 
; 764  : 	gMainHandler->EnableWindowGroup (31000);

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN11@tactical_a:

; 765  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tactical_add_squadron@@YAXVVU_ID@@@Z$0:
	lea	ecx, DWORD PTR _ait$3[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?tactical_add_squadron@@YAXVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tactical_add_squadron@@YAXVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tactical_add_squadron@@YAXVVU_ID@@@Z ENDP		; tactical_add_squadron
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
_new_squadron$ = -16					; size = 4
_airbase$ = -12						; size = 4
_x$ = -8						; size = 2
_y$ = -4						; size = 2
_id$ = 8						; size = 8
_ac_type$ = 16						; size = 4
?tactical_make_squadron@@YAPAVSquadronClass@@VVU_ID@@J@Z PROC ; tactical_make_squadron

; 681  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 682  : 	GridIndex		x,y;
; 683  : 	CampBaseClass*	airbase;
; 684  : 	Squadron		new_squadron;
; 685  : 
; 686  : 	airbase = (CampBaseClass*) FindEntity(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _airbase$[ebp], eax

; 687  : 	if (!airbase || !airbase->IsObjective() || airbase->GetType() != TYPE_AIRBASE)

	cmp	DWORD PTR _airbase$[ebp], 0
	je	SHORT $LN1@tactical_m
	mov	edx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN1@tactical_m
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 1
	je	SHORT $LN2@tactical_m
$LN1@tactical_m:

; 688  : 		// KCK: Should probably just pick one
; 689  : 		return NULL;

	xor	eax, eax
	jmp	$LN3@tactical_m
$LN2@tactical_m:

; 690  : 
; 691  : 	gLastAirbaseID = airbase->Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A+4, eax

; 692  : 	gLastAirbase = airbase->GetCampID();

	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	DWORD PTR ?gLastAirbase@@3HA, ecx	; gLastAirbase

; 693  : 
; 694  : 	new_squadron = NewSquadron(ac_type);

	mov	edx, DWORD PTR _ac_type$[ebp]
	push	edx
	call	?NewSquadron@@YAPAVSquadronClass@@H@Z	; NewSquadron
	add	esp, 4
	mov	DWORD PTR _new_squadron$[ebp], eax

; 695  : 	new_squadron->SetOwner(airbase->GetOwner());

	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	mov	eax, DWORD PTR [edx+320]
	call	eax

; 696  : 	new_squadron->SetUnitAirbase(airbase->Id());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	mov	eax, DWORD PTR [edx+632]
	call	eax

; 697  : 	new_squadron->BuildElements();

	mov	ecx, DWORD PTR _new_squadron$[ebp]
	call	?BuildElements@UnitClass@@QAEXXZ	; UnitClass::BuildElements

; 698  : 	airbase->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 699  : 	new_squadron->SetLocation(x,y);

	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 700  : 
; 701  : 	new_squadron->SetSendCreate(VuEntity::VU_SC_SEND_OOB);

	push	2
	mov	ecx, DWORD PTR _new_squadron$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 702  : 	vuDatabase->/*Quick*/Insert(new_squadron);

	mov	edx, DWORD PTR _new_squadron$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 703  : 	// 2000-11-17 ADDED BY S.G. NEED TO CALL InitPilots AGAIN SO THE SKILL ARE SET FOR THE TEAM.
; 704  : 	// THE FIRST TIME IT WAS CALLED, THE TEAM WASN'T KNOWN SO THE SKILLS WERE 'GENERIC'.
; 705  : 	new_squadron->InitPilots();

	mov	ecx, DWORD PTR _new_squadron$[ebp]
	call	?InitPilots@SquadronClass@@QAEXXZ	; SquadronClass::InitPilots

; 706  : 	// END OF ADDED SECTION
; 707  : 
; 708  : 	return new_squadron;

	mov	eax, DWORD PTR _new_squadron$[ebp]
$LN3@tactical_m:

; 709  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_make_squadron@@YAPAVSquadronClass@@VVU_ID@@J@Z ENDP ; tactical_make_squadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_id$ = -100						; size = 8
_iter$ = -92						; size = 12
_sq$ = -80						; size = 4
_count$ = -76						; size = 2
_entity$ = -72						; size = 4
_buffer$ = -68						; size = 50
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lbox$ = 8						; size = 4
_team$ = 12						; size = 4
_aircraft_dindex$ = 16					; size = 4
?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z PROC	; FillListBoxWithSquadrons

; 602  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 603  : 	VU_ID id=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _id$[ebp], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _id$[ebp+4], ecx

; 604  : 	_TCHAR buffer[50];
; 605  : 	VuListIterator iter(AllAirList);

	mov	edx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	edx
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 606  : 	CampEntity entity,sq=NULL;

	mov	DWORD PTR _sq$[ebp], 0

; 607  : 	short count=0;

	xor	eax, eax
	mov	WORD PTR _count$[ebp], ax

; 608  : 
; 609  : 	if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	je	SHORT $LN6@FillListBo

; 610  : 	{
; 611  : 		// Add the new item
; 612  : 		lbox->AddItem(1,C_TYPE_ITEM,TXT_NEW);

	push	151					; 00000097H
	push	50					; 00000032H
	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFJ@Z	; C_ListBox::AddItem

; 613  : 		lbox->SetValue(1);

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN6@FillListBo:

; 614  : 	}
; 615  : 
; 616  : 	// Add the squadrons
; 617  : 	entity=GetFirstEntity(&iter);

	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	call	?GetFirstEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z ; GetFirstEntity
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax
$LN5@FillListBo:

; 618  : 	while(entity)

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN4@FillListBo

; 619  : 		{
; 620  : 		if(entity->IsSquadron())

	mov	eax, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	$LN3@FillListBo

; 621  : 			{
; 622  : 			if(entity->GetTeam() == team && entity->GetSType() == Falcon4ClassTable[aircraft_dindex].vuClassData.classInfo_[VU_STYPE] && entity->GetSPType() == Falcon4ClassTable[aircraft_dindex].vuClassData.classInfo_[VU_SPTYPE])

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	ecx, DWORD PTR _team$[ebp]
	jne	$LN3@FillListBo
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	edx, al
	mov	eax, DWORD PTR _aircraft_dindex$[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	imul	ecx, 3
	movzx	eax, BYTE PTR [eax+ecx+8]
	cmp	edx, eax
	jne	$LN3@FillListBo
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetSPType@CampBaseClass@@QBEEXZ	; CampBaseClass::GetSPType
	movzx	ecx, al
	mov	edx, DWORD PTR _aircraft_dindex$[ebp]
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	shl	eax, 2
	movzx	edx, BYTE PTR [edx+eax+8]
	cmp	ecx, edx
	jne	SHORT $LN3@FillListBo

; 623  : 				{
; 624  : 				entity->GetName(buffer,40,FALSE);

	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 625  : 				lbox->AddItem(entity->GetCampID(),C_TYPE_ITEM,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 626  : 				if(!count)

	movsx	ecx, WORD PTR _count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@FillListBo

; 627  : 					{
; 628  : 					lbox->SetValue(entity->GetCampID());

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 629  : 					sq = entity;

	mov	ecx, DWORD PTR _entity$[ebp]
	mov	DWORD PTR _sq$[ebp], ecx
$LN1@FillListBo:

; 630  : 					}
; 631  : 				count++;

	mov	dx, WORD PTR _count$[ebp]
	add	dx, 1
	mov	WORD PTR _count$[ebp], dx
$LN3@FillListBo:

; 632  : 				}
; 633  : 			}
; 634  : 		entity=GetNextEntity(&iter);

	lea	eax, DWORD PTR _iter$[ebp]
	push	eax
	call	?GetNextEntity@@YAPAVCampBaseClass@@PAVVuListIterator@@@Z ; GetNextEntity
	add	esp, 4
	mov	DWORD PTR _entity$[ebp], eax

; 635  : 		}

	jmp	$LN5@FillListBo
$LN4@FillListBo:

; 636  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z ENDP	; FillListBoxWithSquadrons
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_tree$ = -8						; size = 4
_item$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tactical_new_flight_select@@YAXJFPAVC_Base@@@Z PROC	; tactical_new_flight_select

; 581  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 582  : 	C_TreeList *tree;
; 583  : 	TREELIST *item;
; 584  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@tactical_n

; 585  : 		return;

	jmp	SHORT $LN4@tactical_n
$LN3@tactical_n:

; 586  : 
; 587  : 	if(!control)

	cmp	DWORD PTR _control$[ebp], 0
	jne	SHORT $LN2@tactical_n

; 588  : 		return;

	jmp	SHORT $LN4@tactical_n
$LN2@tactical_n:

; 589  : 
; 590  : 	tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 591  : 	item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 592  : 	tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 593  : 	if(item && item->Item_)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN1@tactical_n
	mov	edx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN1@tactical_n

; 594  : 	{
; 595  : 		item->Item_->SetState(1);

	push	1
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 596  : 		gNewSelectFlight=((C_ATO_Flight*)item->Item_)->GetVUID();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetVUID@C_ATO_Flight@@QAE?AVVU_ID@@XZ	; C_ATO_Flight::GetVUID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, edx
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, eax
$LN1@tactical_n:

; 597  : 	}
; 598  : 	tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@tactical_n:

; 599  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_new_flight_select@@YAXJFPAVC_Base@@@Z ENDP	; tactical_new_flight_select
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
?tactical_show_oob_window@@YAXXZ PROC			; tactical_show_oob_window

; 570  : {

	push	ebp
	mov	ebp, esp

; 571  : 	gGps->SetAllowed(gGps->GetAllowed() | UR_OOB);

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetAllowed@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetAllowed
	or	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetAllowed

; 572  : 
; 573  : 	gMainHandler->EnableWindowGroup (7009);

	push	7009					; 00001b61H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 574  : }

	pop	ebp
	ret	0
?tactical_show_oob_window@@YAXXZ ENDP			; tactical_show_oob_window
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
?tactical_show_ato_window@@YAXXZ PROC			; tactical_show_ato_window

; 558  : {

	push	ebp
	mov	ebp, esp

; 559  : 	gGps->SetAllowed(gGps->GetAllowed() | UR_ATO | UR_SQUADRON);

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetAllowed@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetAllowed
	or	eax, 4
	or	eax, 8
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetAllowed

; 560  : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 561  : 
; 562  : 	gMainHandler->EnableWindowGroup (7001);

	push	7001					; 00001b59H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 563  : }

	pop	ebp
	ret	0
?tactical_show_ato_window@@YAXXZ ENDP			; tactical_show_ato_window
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_StartTeam$ = -4					; size = 2
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?PickTeamCB@@YAXJFPAVC_Base@@@Z PROC			; PickTeamCB

; 535  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 536  : 	short StartTeam;
; 537  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@PickTeamCB

; 538  : 		return;

	jmp	SHORT $LN7@PickTeamCB
$LN6@PickTeamCB:

; 539  : 
; 540  : 	StartTeam=gSelectedTeam;

	movzx	cx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	WORD PTR _StartTeam$[ebp], cx
$LN5@PickTeamCB:

; 541  : 	do
; 542  : 	{
; 543  : 		gSelectedTeam++;

	mov	dl, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	add	dl, 1
	mov	BYTE PTR ?gSelectedTeam@@3EA, dl	; gSelectedTeam

; 544  : 		if(gSelectedTeam >= NUM_TEAMS)

	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	cmp	eax, 8
	jl	SHORT $LN4@PickTeamCB

; 545  : 			gSelectedTeam=1;

	mov	BYTE PTR ?gSelectedTeam@@3EA, 1		; gSelectedTeam
$LN4@PickTeamCB:

; 546  : 	}
; 547  : 	while(!TeamInfo[gSelectedTeam] && gSelectedTeam != StartTeam);

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	jne	SHORT $LN3@PickTeamCB
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	movsx	eax, WORD PTR _StartTeam$[ebp]
	cmp	edx, eax
	jne	SHORT $LN5@PickTeamCB
$LN3@PickTeamCB:

; 548  : 
; 549  : 	gLastEquipment = 0;

	mov	DWORD PTR _gLastEquipment, 0

; 550  : 	PickTeamColors();

	call	?PickTeamColors@@YAXXZ			; PickTeamColors
$LN7@PickTeamCB:

; 551  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickTeamCB@@YAXJFPAVC_Base@@@Z ENDP			; PickTeamCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_line$ = -8						; size = 4
_btn$ = -4						; size = 4
?PickTeamColors@@YAXXZ PROC				; PickTeamColors

; 465  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 466  : 	C_Window *win;
; 467  : 	C_Button *btn;
; 468  : 	C_Line *line;
; 469  : 
; 470  : 	win=gMainHandler->FindWindow(TAC_EDIT_WIN);

	push	30516					; 00007734H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 471  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN12@PickTeamCo

; 472  : 	{
; 473  : 		btn=(C_Button*)win->FindControl(TEAM_SELECTOR);

	push	40002					; 00009c42H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 474  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN11@PickTeamCo

; 475  : 		{
; 476  : 			btn->SetState(gSelectedTeam);

	movzx	ax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 477  : 			btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@PickTeamCo:

; 478  : 		}
; 479  : 		line=(C_Line*)win->FindControl(TEAM_COLOR);

	push	40001					; 00009c41H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 480  : 		if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN12@PickTeamCo

; 481  : 		{
; 482  : 			if (gSelectedTeam >= 0 && 
; 483  : 			    !F4IsBadReadPtr(TeamInfo[gSelectedTeam], sizeof *TeamInfo) && 
; 484  : 			    TeamInfo[gSelectedTeam]->GetColor() >= 0 && 
; 485  : 			    TeamInfo[gSelectedTeam]->GetColor() < NUM_TEAM_COLORS)

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	test	ecx, ecx
	jl	SHORT $LN9@PickTeamCo
	push	4
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	push	eax
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@PickTeamCo
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	test	eax, eax
	jl	SHORT $LN9@PickTeamCo
	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	cmp	eax, 8
	jge	SHORT $LN9@PickTeamCo

; 486  : 				line->SetColor(TeamColorList[TeamInfo[gSelectedTeam]->GetColor()]);

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	edx
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetColor@C_Line@@QAEXK@Z		; C_Line::SetColor
$LN9@PickTeamCo:

; 487  : 			line->Refresh();

	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@PickTeamCo:

; 488  : 		}
; 489  : 	}
; 490  : 
; 491  : 	win=gMainHandler->FindWindow(TAC_PUA_MAP);

	push	30800					; 00007850H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 492  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN8@PickTeamCo

; 493  : 	{
; 494  : 		btn=(C_Button*)win->FindControl(TEAM_SELECTOR);

	push	40002					; 00009c42H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 495  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@PickTeamCo

; 496  : 		{
; 497  : 			btn->SetState(gSelectedTeam);

	movzx	cx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 498  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@PickTeamCo:

; 499  : 		}
; 500  : 		line=(C_Line*)win->FindControl(TEAM_COLOR);

	push	40001					; 00009c41H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 501  : 		if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN8@PickTeamCo

; 502  : 		{
; 503  : 			if (gSelectedTeam >= 0 && 
; 504  : 			    !F4IsBadReadPtr(TeamInfo[gSelectedTeam], sizeof *TeamInfo) && 
; 505  : 			    TeamInfo[gSelectedTeam]->GetColor() >= 0 &&
; 506  : 			    TeamInfo[gSelectedTeam]->GetColor() < NUM_TEAM_COLORS)

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	test	ecx, ecx
	jl	SHORT $LN5@PickTeamCo
	push	4
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	push	eax
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@PickTeamCo
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	test	eax, eax
	jl	SHORT $LN5@PickTeamCo
	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	cmp	eax, 8
	jge	SHORT $LN5@PickTeamCo

; 507  : 				line->SetColor(TeamColorList[TeamInfo[gSelectedTeam]->GetColor()]);

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	edx
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetColor@C_Line@@QAEXK@Z		; C_Line::SetColor
$LN5@PickTeamCo:

; 508  : 			line->Refresh();

	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@PickTeamCo:

; 509  : 		}
; 510  : 	}
; 511  : 
; 512  : 	win=gMainHandler->FindWindow(TAC_FULLMAP_WIN);

	push	30806					; 00007856H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 513  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@PickTeamCo

; 514  : 	{
; 515  : 		btn=(C_Button*)win->FindControl(TEAM_SELECTOR);

	push	40002					; 00009c42H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 516  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@PickTeamCo

; 517  : 		{
; 518  : 			btn->SetState(gSelectedTeam);

	movzx	cx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 519  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@PickTeamCo:

; 520  : 		}
; 521  : 		line=(C_Line*)win->FindControl(TEAM_COLOR);

	push	40001					; 00009c41H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 522  : 		if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	$LN13@PickTeamCo

; 523  : 		{
; 524  : 			if (gSelectedTeam >= 0 && 
; 525  : 			    !F4IsBadReadPtr(TeamInfo[gSelectedTeam], sizeof *TeamInfo) && 
; 526  : 			    TeamInfo[gSelectedTeam]->GetColor() >= 0 && 
; 527  : 			    TeamInfo[gSelectedTeam]->GetColor() < NUM_TEAM_COLORS)

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	test	ecx, ecx
	jl	SHORT $LN1@PickTeamCo
	push	4
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	push	eax
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@PickTeamCo
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	test	eax, eax
	jl	SHORT $LN1@PickTeamCo
	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	cmp	eax, 8
	jge	SHORT $LN1@PickTeamCo

; 528  : 				line->SetColor(TeamColorList[TeamInfo[gSelectedTeam]->GetColor()]);

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	edx
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetColor@C_Line@@QAEXK@Z		; C_Line::SetColor
$LN1@PickTeamCo:

; 529  : 			line->Refresh();

	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN13@PickTeamCo:

; 530  : 		}
; 531  : 	}
; 532  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickTeamColors@@YAXXZ ENDP				; PickTeamColors
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_side$1 = -160						; size = 4
_SPType$2 = -156					; size = 4
_SType$3 = -152						; size = 4
_i$4 = -148						; size = 4
_maxdf$ = -144						; size = 4
_curdf$ = -140						; size = 4
_fp$ = -136						; size = 4
_buf$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
?LoadTEUnits@@YAXXZ PROC				; LoadTEUnits

; 308  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 309  :     if (table_of_equipment != NULL)

	cmp	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, 0 ; table_of_equipment
	je	SHORT $LN14@LoadTEUnit

; 310  : 	return;

	jmp	$LN15@LoadTEUnit
$LN14@LoadTEUnit:

; 311  :     FILE *fp = OpenCampFile("teunits", "lst", "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_07HGANLNA@teunits?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 312  : 
; 313  : 	if (fp == NULL)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN13@LoadTEUnit

; 314  : 		fp = OpenCampFile("te-units", "lst", "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_08OOPBIIGF@te?9units?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax
$LN13@LoadTEUnit:

; 315  : 
; 316  :     if (fp == NULL) 

	cmp	DWORD PTR _fp$[ebp], 0
	jne	$LN12@LoadTEUnit

; 317  : 	{
; 318  : 	table_of_equipment = table_of_equipment_def;

	mov	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, OFFSET ?table_of_equipment_def@@3PAUtoe@@A ; table_of_equipment, table_of_equipment_def

; 319  : 	fp = OpenCampFile("teunits", "lst", "w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	OFFSET ??_C@_07HGANLNA@teunits?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 320  : 	fprintf (fp, "// Side SubType Specific\n");

	push	OFFSET ??_C@_0BK@OAKILGHM@?1?1?5Side?5SubType?5Specific?6?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 321  : 	for (int i = 0; table_of_equipment[i].side != 0; i++) 

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN11@LoadTEUnit
$LN10@LoadTEUnit:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN11@LoadTEUnit:
	mov	edx, DWORD PTR _i$4[ebp]
	mov	eax, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	cmp	DWORD PTR [eax+edx*8], 0
	je	SHORT $LN9@LoadTEUnit

; 322  : 	{
; 323  : 	    fprintf (fp, "%7d %7d %8d\n", 
; 324  : 		table_of_equipment[i].side, 
; 325  : 		table_of_equipment[i].stype, 
; 326  : 		table_of_equipment[i].sptype);

	mov	ecx, DWORD PTR _i$4[ebp]
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movsx	eax, BYTE PTR [edx+ecx*8+5]
	push	eax
	mov	ecx, DWORD PTR _i$4[ebp]
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movsx	eax, BYTE PTR [edx+ecx*8+4]
	push	eax
	mov	ecx, DWORD PTR _i$4[ebp]
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	eax, DWORD PTR [edx+ecx*8]
	push	eax
	push	OFFSET ??_C@_0N@CHIPHDHO@?$CF7d?5?$CF7d?5?$CF8d?6?$AA@
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fprintf
	add	esp, 20					; 00000014H

; 327  : 	}

	jmp	SHORT $LN10@LoadTEUnit
$LN9@LoadTEUnit:

; 328  : 	fclose (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 329  : 	return;

	jmp	$LN15@LoadTEUnit
$LN12@LoadTEUnit:

; 330  :     }
; 331  :     int maxdf = 0, curdf = 0;

	mov	DWORD PTR _maxdf$[ebp], 0
	mov	DWORD PTR _curdf$[ebp], 0
$LN8@LoadTEUnit:

; 332  :     char buf[128];
; 333  :     while (fgets(buf, sizeof buf, fp)) {

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	128					; 00000080H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN7@LoadTEUnit

; 334  : 	if (buf[0] == '#' || buf[0] == '/' || buf[0] == '\r' || buf[0] == '\n')

	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buf$[ebp+edx]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN5@LoadTEUnit
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buf$[ebp+ecx]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN5@LoadTEUnit
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _buf$[ebp+eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN5@LoadTEUnit
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buf$[ebp+edx]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN6@LoadTEUnit
$LN5@LoadTEUnit:

; 335  : 	    continue;

	jmp	SHORT $LN8@LoadTEUnit
$LN6@LoadTEUnit:

; 336  : 	if (curdf >= maxdf - 2) { // time to grow the array

	mov	ecx, DWORD PTR _maxdf$[ebp]
	sub	ecx, 2
	cmp	DWORD PTR _curdf$[ebp], ecx
	jl	SHORT $LN4@LoadTEUnit

; 337  : 	    if (table_of_equipment == NULL)

	cmp	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, 0 ; table_of_equipment
	jne	SHORT $LN3@LoadTEUnit

; 338  : 		   table_of_equipment = (toe*)calloc (maxdf = 10, sizeof *table_of_equipment);

	mov	DWORD PTR _maxdf$[ebp], 10		; 0000000aH
	push	8
	mov	edx, DWORD PTR _maxdf$[ebp]
	push	edx
	call	_calloc
	add	esp, 8
	mov	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, eax ; table_of_equipment

; 339  : 	    else 

	jmp	SHORT $LN4@LoadTEUnit
$LN3@LoadTEUnit:

; 340  : 		{
; 341  : 		   maxdf *= 2;

	mov	eax, DWORD PTR _maxdf$[ebp]
	shl	eax, 1
	mov	DWORD PTR _maxdf$[ebp], eax

; 342  :    		   table_of_equipment = (toe*)realloc(table_of_equipment, maxdf * sizeof(*table_of_equipment));

	mov	ecx, DWORD PTR _maxdf$[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	push	edx
	call	_realloc
	add	esp, 8
	mov	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, eax ; table_of_equipment
$LN4@LoadTEUnit:

; 343  : 	    }
; 344  : 	}
; 345  : 	int SType, SPType;
; 346  : 	table_of_equipment_manufacturers side;
; 347  : 	if (sscanf (buf, "%7d %7d %8d", 
; 348  : 	    &side, 
; 349  : 	    &SType, 
; 350  : 	    &SPType) != 3) 

	lea	eax, DWORD PTR _SPType$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _SType$3[ebp]
	push	ecx
	lea	edx, DWORD PTR _side$1[ebp]
	push	edx
	push	OFFSET ??_C@_0M@GNOHDNGP@?$CF7d?5?$CF7d?5?$CF8d?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sscanf
	add	esp, 20					; 00000014H
	cmp	eax, 3
	je	SHORT $LN1@LoadTEUnit

; 351  : 		{
; 352  : 	       ShiWarning("Bad format file teunits.lst");
; 353  : 	       free (table_of_equipment);

	mov	ecx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	push	ecx
	call	_free
	add	esp, 4

; 354  : 	       table_of_equipment = table_of_equipment_def;

	mov	DWORD PTR ?table_of_equipment@@3PAUtoe@@A, OFFSET ?table_of_equipment_def@@3PAUtoe@@A ; table_of_equipment, table_of_equipment_def

; 355  : 	       break;

	jmp	$LN7@LoadTEUnit
$LN1@LoadTEUnit:

; 356  : 		}
; 357  : 	table_of_equipment[curdf].side = side; 

	mov	edx, DWORD PTR _curdf$[ebp]
	mov	eax, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	ecx, DWORD PTR _side$1[ebp]
	mov	DWORD PTR [eax+edx*8], ecx

; 358  : 	table_of_equipment[curdf].stype = SType; 

	mov	edx, DWORD PTR _curdf$[ebp]
	mov	eax, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	cl, BYTE PTR _SType$3[ebp]
	mov	BYTE PTR [eax+edx*8+4], cl

; 359  : 	table_of_equipment[curdf].sptype = SPType; 

	mov	edx, DWORD PTR _curdf$[ebp]
	mov	eax, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	cl, BYTE PTR _SPType$2[ebp]
	mov	BYTE PTR [eax+edx*8+5], cl

; 360  : 	curdf ++;

	mov	edx, DWORD PTR _curdf$[ebp]
	add	edx, 1
	mov	DWORD PTR _curdf$[ebp], edx

; 361  : 	table_of_equipment[curdf].side = toe_unknown;

	mov	eax, DWORD PTR _curdf$[ebp]
	mov	ecx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	DWORD PTR [ecx+eax*8], 0

; 362  : 	table_of_equipment[curdf].stype = 0; 

	mov	edx, DWORD PTR _curdf$[ebp]
	mov	eax, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	BYTE PTR [eax+edx*8+4], 0

; 363  : 	table_of_equipment[curdf].sptype = 0;

	mov	ecx, DWORD PTR _curdf$[ebp]
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	BYTE PTR [edx+ecx*8+5], 0

; 364  :     }

	jmp	$LN8@LoadTEUnit
$LN7@LoadTEUnit:

; 365  : 	
; 366  :     fclose (fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$LN15@LoadTEUnit:

; 367  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTEUnits@@YAXXZ ENDP				; LoadTEUnits
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
;	COMDAT ??__EgNewSelectFlight@@YAXXZ
text$yc	SEGMENT
??__EgNewSelectFlight@@YAXXZ PROC			; `dynamic initializer for 'gNewSelectFlight'', COMDAT

; 258  : 	gNewSelectFlight;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gNewSelectFlight@@3VVU_ID@@A ; gNewSelectFlight
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EgNewSelectFlight@@YAXXZ ENDP			; `dynamic initializer for 'gNewSelectFlight''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
;	COMDAT ??__EgLastAirbaseID@@YAXXZ
text$yc	SEGMENT
??__EgLastAirbaseID@@YAXXZ PROC				; `dynamic initializer for 'gLastAirbaseID'', COMDAT

; 257  : 	gLastAirbaseID,

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gLastAirbaseID@@3VVU_ID@@A	; gLastAirbaseID
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EgLastAirbaseID@@YAXXZ ENDP				; `dynamic initializer for 'gLastAirbaseID''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
;	COMDAT ??__EgLastBattalionObjID@@YAXXZ
text$yc	SEGMENT
??__EgLastBattalionObjID@@YAXXZ PROC			; `dynamic initializer for 'gLastBattalionObjID'', COMDAT

; 256  : 	gLastBattalionObjID,

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gLastBattalionObjID@@3VVU_ID@@A ; gLastBattalionObjID
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EgLastBattalionObjID@@YAXXZ ENDP			; `dynamic initializer for 'gLastBattalionObjID''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_list$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?set_battalion_type@@YAXJFPAVC_Base@@@Z PROC		; set_battalion_type

; 2625 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2626 : 	C_ListBox	*list;
; 2627 : 
; 2628 : 	if (hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@set_battal

; 2629 : 		return;

	jmp	SHORT $LN3@set_battal
$LN2@set_battal:

; 2630 : 
; 2631 : 	list = (C_ListBox *) ctrl;

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	DWORD PTR _list$[ebp], ecx

; 2632 : 	if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN1@set_battal

; 2633 : 		gLastUnitType = list->GetTextID();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _gLastUnitType, eax
$LN1@set_battal:

; 2634 : 
; 2635 : 	update_new_battalion_window ();

	call	?update_new_battalion_window@@YAXXZ	; update_new_battalion_window
$LN3@set_battal:

; 2636 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?set_battalion_type@@YAXJFPAVC_Base@@@Z ENDP		; set_battalion_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_list$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?set_battalion_table_of_equipment@@YAXJFPAVC_Base@@@Z PROC ; set_battalion_table_of_equipment

; 2612 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2613 : 	C_ListBox		*list;
; 2614 : 
; 2615 : 	if (hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN1@set_battal

; 2616 : 		return;

	jmp	SHORT $LN2@set_battal
$LN1@set_battal:

; 2617 : 
; 2618 : 	list = (C_ListBox *) ctrl;

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	DWORD PTR _list$[ebp], ecx

; 2619 : 	gLastEquipment = list->GetTextID();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _gLastEquipment, eax

; 2620 : 
; 2621 : 	update_new_battalion_window ();

	call	?update_new_battalion_window@@YAXXZ	; update_new_battalion_window
$LN2@set_battal:

; 2622 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?set_battalion_table_of_equipment@@YAXJFPAVC_Base@@@Z ENDP ; set_battalion_table_of_equipment
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_cancel_battalion@@YAXJFPAVC_Base@@@Z PROC	; tactical_cancel_battalion

; 2604 : {

	push	ebp
	mov	ebp, esp

; 2605 : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@tactical_c

; 2606 : 		return;

	jmp	SHORT $LN2@tactical_c
$LN1@tactical_c:

; 2607 : 
; 2608 : 	gMainHandler->DisableWindowGroup (32000);

	push	32000					; 00007d00H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@tactical_c:

; 2609 : }

	pop	ebp
	ret	0
?tactical_cancel_battalion@@YAXJFPAVC_Base@@@Z ENDP	; tactical_cancel_battalion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_o$ = -24						; size = 4
_tid$ = -20						; size = 4
_i$1 = -16						; size = 4
_new_battalion$ = -12					; size = 4
_x$ = -8						; size = 2
_y$ = -4						; size = 2
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_create_battalion@@YAXJFPAVC_Base@@@Z PROC	; tactical_create_battalion

; 2545 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2546 : 	Battalion		new_battalion;
; 2547 : 	int				tid;
; 2548 : 	Objective		o;
; 2549 : 	GridIndex		x,y;
; 2550 : 
; 2551 : 	LoadTEUnits();

	call	?LoadTEUnits@@YAXXZ			; LoadTEUnits

; 2552 : 
; 2553 : 	if (gLastUnitType < 0)

	cmp	DWORD PTR _gLastUnitType, 0
	jge	SHORT $LN11@tactical_c

; 2554 : 		return;

	jmp	$LN12@tactical_c
$LN11@tactical_c:

; 2555 : 	
; 2556 : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@tactical_c

; 2557 : 		return;

	jmp	$LN12@tactical_c
$LN10@tactical_c:

; 2558 : 
; 2559 : 	tid = GetClassID (DOMAIN_LAND,CLASS_UNIT,TYPE_BATTALION,table_of_equipment[gLastUnitType].stype,table_of_equipment[gLastUnitType].sptype,0,0,0);

	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _gLastUnitType
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	eax, BYTE PTR [edx+ecx*8+5]
	push	eax
	mov	ecx, DWORD PTR _gLastUnitType
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	eax, BYTE PTR [edx+ecx*8+4]
	push	eax
	push	1
	push	6
	push	3
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _tid$[ebp], eax

; 2560 : 	if (!tid)

	cmp	DWORD PTR _tid$[ebp], 0
	jne	SHORT $LN9@tactical_c

; 2561 : 		return;

	jmp	$LN12@tactical_c
$LN9@tactical_c:

; 2562 : 
; 2563 : 	new_battalion = NewBattalion(tid+VU_LAST_ENTITY_TYPE, NULL);

	push	0
	mov	ecx, DWORD PTR _tid$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	call	?NewBattalion@@YAPAVBattalionClass@@HPAVUnitClass@@@Z ; NewBattalion
	add	esp, 8
	mov	DWORD PTR _new_battalion$[ebp], eax

; 2564 : 	if (!new_battalion)

	cmp	DWORD PTR _new_battalion$[ebp], 0
	jne	SHORT $LN8@tactical_c

; 2565 : 		return;

	jmp	$LN12@tactical_c
$LN8@tactical_c:

; 2566 : 
; 2567 : 	new_battalion->SetOwner (gSelectedTeam);

	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	edx
	mov	eax, DWORD PTR _new_battalion$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	mov	eax, DWORD PTR [edx+320]
	call	eax

; 2568 : 
; 2569 : 	// Snap battalion to nearest objective
; 2570 : 	o = FindValidObjective(new_battalion, gLastBattalionObjID, MapX, MapY);

	movzx	ecx, WORD PTR ?MapY@@3FA		; MapY
	push	ecx
	movzx	edx, WORD PTR ?MapX@@3FA		; MapX
	push	edx
	mov	eax, DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A
	push	ecx
	mov	edx, DWORD PTR _new_battalion$[ebp]
	push	edx
	call	?FindValidObjective@@YAPAVObjectiveClass@@PAVBattalionClass@@VVU_ID@@FF@Z ; FindValidObjective
	add	esp, 20					; 00000014H
	mov	DWORD PTR _o$[ebp], eax

; 2571 : 	if (o){

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN7@tactical_c

; 2572 : 		o->GetLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2573 : 		new_battalion->SetLocation (x, y);

	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 2574 : 		new_battalion->SetUnitDestination (x,y);

	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination

; 2575 : 	}
; 2576 : 	else {

	jmp	SHORT $LN6@tactical_c
$LN7@tactical_c:

; 2577 : 		new_battalion->SetLocation (MapX, MapY);

	movzx	eax, WORD PTR ?MapY@@3FA		; MapY
	push	eax
	movzx	ecx, WORD PTR ?MapX@@3FA		; MapX
	push	ecx
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 2578 : 		new_battalion->SetUnitDestination (MapX, MapY);

	movzx	edx, WORD PTR ?MapY@@3FA		; MapY
	push	edx
	movzx	eax, WORD PTR ?MapX@@3FA		; MapX
	push	eax
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination
$LN6@tactical_c:

; 2579 : 	}
; 2580 : 	tactical_set_orders(new_battalion, gLastBattalionObjID, MapX, MapY);

	movzx	ecx, WORD PTR ?MapY@@3FA		; MapY
	push	ecx
	movzx	edx, WORD PTR ?MapX@@3FA		; MapX
	push	edx
	mov	eax, DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gLastBattalionObjID@@3VVU_ID@@A
	push	ecx
	mov	edx, DWORD PTR _new_battalion$[ebp]
	push	edx
	call	?tactical_set_orders@@YAXPAVBattalionClass@@VVU_ID@@FF@Z ; tactical_set_orders
	add	esp, 20					; 00000014H

; 2581 : 	
; 2582 : 	if (new_battalion->GetFirstUnitWP())

	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	test	eax, eax
	je	SHORT $LN5@tactical_c

; 2583 : 		new_battalion->SetCurrentWaypoint(1);

	push	1
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetCurrentWaypoint@UnitClass@@QAEXG@Z	; UnitClass::SetCurrentWaypoint
$LN5@tactical_c:

; 2584 : 	new_battalion->BuildElements();

	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?BuildElements@UnitClass@@QAEXXZ	; UnitClass::BuildElements

; 2585 : 	new_battalion->SetFinal(1);

	push	1
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 2586 : 	// sfr: new insertion
; 2587 : 	new_battalion->SetSendCreate(VuEntity::VU_SC_SEND_OOB);

	push	2
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 2588 : 	vuDatabase->/*Quick*/Insert(new_battalion);

	mov	eax, DWORD PTR _new_battalion$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 2589 : 
; 2590 : 	new_battalion->SetEmitting(0);

	push	0
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetEmitting@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetEmitting

; 2591 : 	if (new_battalion->GetRadarType() != RDR_NO_RADAR)

	mov	ecx, DWORD PTR _new_battalion$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	mov	eax, DWORD PTR [edx+292]
	call	eax
	test	eax, eax
	je	SHORT $LN4@tactical_c

; 2592 : 		new_battalion->SetEmitting(1);

	push	1
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetEmitting@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetEmitting
$LN4@tactical_c:

; 2593 : 	for (int i=0; i<NUM_TEAMS; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@tactical_c
$LN2@tactical_c:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN3@tactical_c:
	cmp	DWORD PTR _i$1[ebp], 8
	jge	SHORT $LN1@tactical_c

; 2594 : 		new_battalion->SetSpotted (static_cast<uchar>(i), TheCampaign.CurrentTime);

	push	0
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	movzx	eax, BYTE PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_battalion$[ebp]
	call	?SetSpotted@CampBaseClass@@QAEXEKH@Z	; CampBaseClass::SetSpotted
	jmp	SHORT $LN2@tactical_c
$LN1@tactical_c:

; 2595 : 
; 2596 : 	gMainHandler->DisableWindowGroup (32000);

	push	32000					; 00007d00H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 2597 : 	display_land_units(new_battalion);

	mov	ecx, DWORD PTR _new_battalion$[ebp]
	push	ecx
	call	?display_land_units@@YAXPAVUnitClass@@@Z ; display_land_units
	add	esp, 4

; 2598 : 	update_new_battalion_window ();

	call	?update_new_battalion_window@@YAXXZ	; update_new_battalion_window

; 2599 : // MN 2002-01-04 show up the battalion faster
; 2600 : 	RefreshMapOnChange();

	call	?RefreshMapOnChange@@YAXXZ		; RefreshMapOnChange
$LN12@tactical_c:

; 2601 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_create_battalion@@YAXJFPAVC_Base@@@Z ENDP	; tactical_create_battalion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -240						; size = 4
_tid$ = -236						; size = 4
_win$ = -232						; size = 4
_equipment$ = -228					; size = 4
_vc$ = -224						; size = 4
_text$ = -220						; size = 4
_list$ = -216						; size = 4
_prev$ = -212						; size = 4
_uc$ = -208						; size = 4
_loop$ = -204						; size = 4
_num$ = -200						; size = 64
_buffer$ = -136						; size = 100
_types$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?update_new_battalion_window@@YAXXZ PROC		; update_new_battalion_window

; 2639 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2640 : 	C_Window		*win;
; 2641 : 	C_Text			*text;
; 2642 : 	C_ListBox		*list;
; 2643 : 	UnitClassDataType		*uc;
; 2644 : 	VehicleClassDataType	*vc;
; 2645 : 	short			types[VEHICLE_GROUPS_PER_UNIT];
; 2646 : 	static int		batt[8] = {BATT_VEH1,BATT_VEH2,BATT_VEH3,BATT_VEH4,BATT_VEH5,BATT_VEH6,BATT_VEH7,BATT_VEH8};
; 2647 : 	static int		last_equip = -1;
; 2648 : 	int				num[VEHICLE_GROUPS_PER_UNIT],tid,equipment=-1,prev,loop;

	mov	DWORD PTR _equipment$[ebp], -1

; 2649 : 	_TCHAR			buffer[100];
; 2650 : 
; 2651 : 	win = gMainHandler->FindWindow (NEW_BATT_WIN);

	push	31006					; 0000791eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2652 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN33@update_new

; 2653 : 		return;

	jmp	$LN35@update_new
$LN33@update_new:

; 2654 : 
; 2655 : 	LoadTEUnits();

	call	?LoadTEUnits@@YAXXZ			; LoadTEUnits

; 2656 : 
; 2657 : 	list = (C_ListBox *) win->FindControl (UNIT_TOE);

	push	13536					; 000034e0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2658 : 	if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN32@update_new

; 2659 : 		equipment = list->GetTextID();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _equipment$[ebp], eax
$LN32@update_new:

; 2660 : 
; 2661 : 	if (last_equip != equipment || gLastUnitType < 0)

	mov	eax, DWORD PTR ?last_equip@?1??update_new_battalion_window@@YAXXZ@4HA
	cmp	eax, DWORD PTR _equipment$[ebp]
	jne	SHORT $LN30@update_new
	cmp	DWORD PTR _gLastUnitType, 0
	jge	$LN31@update_new
$LN30@update_new:

; 2662 : 	{
; 2663 : 		gLastEquipment = last_equip = equipment;

	mov	ecx, DWORD PTR _equipment$[ebp]
	mov	DWORD PTR ?last_equip@?1??update_new_battalion_window@@YAXXZ@4HA, ecx
	mov	edx, DWORD PTR ?last_equip@?1??update_new_battalion_window@@YAXXZ@4HA
	mov	DWORD PTR _gLastEquipment, edx

; 2664 : 		gLastUnitType = -1;

	mov	DWORD PTR _gLastUnitType, -1

; 2665 : 		list = (C_ListBox *) win->FindControl (UNIT_TYPE);

	push	31005					; 0000791dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 2666 : 		if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	$LN31@update_new

; 2667 : 		{
; 2668 : 			// Rebuild the list of equipment
; 2669 : 			list->RemoveAllItems ();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 2670 : 			for (loop = 0; table_of_equipment[loop].side; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN28@update_new
$LN27@update_new:
	mov	eax, DWORD PTR _loop$[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$[ebp], eax
$LN28@update_new:
	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	cmp	DWORD PTR [edx+ecx*8], 0
	je	$LN26@update_new

; 2671 : 			{
; 2672 : 				if (table_of_equipment[loop].side == equipment)

	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	mov	edx, DWORD PTR [ecx+eax*8]
	cmp	edx, DWORD PTR _equipment$[ebp]
	jne	$LN25@update_new

; 2673 : 				{
; 2674 : 					tid = GetClassID (DOMAIN_LAND,CLASS_UNIT,TYPE_BATTALION,table_of_equipment[loop].stype,table_of_equipment[loop].sptype,0,0,0);

	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	edx, BYTE PTR [ecx+eax*8+5]
	push	edx
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	edx, BYTE PTR [ecx+eax*8+4]
	push	edx
	push	1
	push	6
	push	3
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _tid$[ebp], eax

; 2675 : 					if (tid)

	cmp	DWORD PTR _tid$[ebp], 0
	je	$LN24@update_new

; 2676 : 					{
; 2677 : 						uc = (UnitClassDataType*) Falcon4ClassTable[tid].dataPtr;

	mov	eax, DWORD PTR _tid$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, DWORD PTR [ecx+eax+77]
	mov	DWORD PTR _uc$[ebp], edx

; 2678 : 						if (uc)

	cmp	DWORD PTR _uc$[ebp], 0
	je	$LN24@update_new

; 2679 : 						{
; 2680 : 							vc = (VehicleClassDataType*) Falcon4ClassTable[uc->VehicleType[0]].dataPtr;

	mov	eax, 2
	imul	eax, 0
	mov	ecx, DWORD PTR _uc$[ebp]
	movsx	edx, WORD PTR [ecx+eax+68]
	imul	edx, 81					; 00000051H
	mov	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, DWORD PTR [eax+edx+77]
	mov	DWORD PTR _vc$[ebp], ecx

; 2681 : 							if ((vc) && (uc->VehicleType[0]))

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN24@update_new
	mov	edx, 2
	imul	edx, 0
	mov	eax, DWORD PTR _uc$[ebp]
	movsx	ecx, WORD PTR [eax+edx+68]
	test	ecx, ecx
	je	SHORT $LN24@update_new

; 2682 : 							{
; 2683 : 								sprintf (buffer, "%s - %s", uc->Name, vc->Name);

	mov	edx, DWORD PTR _vc$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _uc$[ebp]
	add	eax, 230				; 000000e6H
	push	eax
	push	OFFSET ??_C@_07FCJAGJJB@?$CFs?5?9?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2684 : 								list->AddItem (loop, C_TYPE_ITEM, buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _loop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem
$LN24@update_new:

; 2685 : 							}
; 2686 : 						}
; 2687 : 					}
; 2688 : 					// Record default
; 2689 : 					if (gLastUnitType < 0)

	cmp	DWORD PTR _gLastUnitType, 0
	jge	SHORT $LN25@update_new

; 2690 : 						gLastUnitType = loop;

	mov	ecx, DWORD PTR _loop$[ebp]
	mov	DWORD PTR _gLastUnitType, ecx
$LN25@update_new:

; 2691 : 				}
; 2692 : 			}

	jmp	$LN27@update_new
$LN26@update_new:

; 2693 : 			list->SetValue (gLastEquipment);

	mov	edx, DWORD PTR _gLastEquipment
	push	edx
	mov	ecx, DWORD PTR _list$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 2694 : 			list->Refresh();

	mov	eax, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN31@update_new:

; 2695 : 		}
; 2696 : 	}
; 2697 : 
; 2698 : 	tid = GetClassID (DOMAIN_LAND,CLASS_UNIT,TYPE_BATTALION,table_of_equipment[gLastUnitType].stype,table_of_equipment[gLastUnitType].sptype,0,0,0);

	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _gLastUnitType
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	eax, BYTE PTR [edx+ecx*8+5]
	push	eax
	mov	ecx, DWORD PTR _gLastUnitType
	mov	edx, DWORD PTR ?table_of_equipment@@3PAUtoe@@A ; table_of_equipment
	movzx	eax, BYTE PTR [edx+ecx*8+4]
	push	eax
	push	1
	push	6
	push	3
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _tid$[ebp], eax

; 2699 : 	uc = (UnitClassDataType*) Falcon4ClassTable[tid].dataPtr;

	mov	ecx, DWORD PTR _tid$[ebp]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+ecx+77]
	mov	DWORD PTR _uc$[ebp], eax

; 2700 : 
; 2701 : 	for (loop = 0; loop < VEHICLE_GROUPS_PER_UNIT; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN20@update_new
$LN19@update_new:
	mov	ecx, DWORD PTR _loop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _loop$[ebp], ecx
$LN20@update_new:
	cmp	DWORD PTR _loop$[ebp], 16		; 00000010H
	jge	SHORT $LN18@update_new

; 2702 : 	{
; 2703 : 		types[loop] = 0;

	mov	edx, DWORD PTR _loop$[ebp]
	shl	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 32			; 00000020H
	jae	SHORT $LN36@update_new
	jmp	SHORT $LN37@update_new
$LN36@update_new:
	call	___report_rangecheckfailure
$LN37@update_new:
	xor	eax, eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	WORD PTR _types$[ebp+ecx], ax

; 2704 : 		num[loop] = 0;

	mov	edx, DWORD PTR _loop$[ebp]
	mov	DWORD PTR _num$[ebp+edx*4], 0

; 2705 : 	}

	jmp	SHORT $LN19@update_new
$LN18@update_new:

; 2706 : 
; 2707 : 	if (uc)

	cmp	DWORD PTR _uc$[ebp], 0
	je	$LN35@update_new

; 2708 : 	{
; 2709 : 		for (loop = 0; loop < VEHICLE_GROUPS_PER_UNIT; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN16@update_new
$LN15@update_new:
	mov	eax, DWORD PTR _loop$[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$[ebp], eax
$LN16@update_new:
	cmp	DWORD PTR _loop$[ebp], 16		; 00000010H
	jge	$LN14@update_new

; 2710 : 		{
; 2711 : 			if (uc->NumElements[loop])

	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR _uc$[ebp]
	cmp	DWORD PTR [edx+ecx*4+4], 0
	je	$LN13@update_new

; 2712 : 			{
; 2713 : 				for (prev = 0; prev < VEHICLE_GROUPS_PER_UNIT; prev ++)

	mov	DWORD PTR _prev$[ebp], 0
	jmp	SHORT $LN12@update_new
$LN11@update_new:
	mov	eax, DWORD PTR _prev$[ebp]
	add	eax, 1
	mov	DWORD PTR _prev$[ebp], eax
$LN12@update_new:
	cmp	DWORD PTR _prev$[ebp], 16		; 00000010H
	jge	$LN13@update_new

; 2714 : 				{
; 2715 : 					if (types[prev] == uc->VehicleType[loop])

	mov	ecx, DWORD PTR _prev$[ebp]
	movsx	edx, WORD PTR _types$[ebp+ecx*2]
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movsx	eax, WORD PTR [ecx+eax*2+68]
	cmp	edx, eax
	jne	SHORT $LN9@update_new

; 2716 : 					{
; 2717 : 						num[prev] += uc->NumElements[loop];

	mov	ecx, DWORD PTR _prev$[ebp]
	mov	edx, DWORD PTR _num$[ebp+ecx*4]
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+4]
	mov	eax, DWORD PTR _prev$[ebp]
	mov	DWORD PTR _num$[ebp+eax*4], edx

; 2718 : 						break;

	jmp	SHORT $LN13@update_new
$LN9@update_new:

; 2719 : 					}
; 2720 : 
; 2721 : 					if (types[prev] == 0)

	mov	ecx, DWORD PTR _prev$[ebp]
	movsx	edx, WORD PTR _types$[ebp+ecx*2]
	test	edx, edx
	jne	SHORT $LN8@update_new

; 2722 : 					{
; 2723 : 						types[prev] = uc->VehicleType[loop];

	mov	eax, DWORD PTR _prev$[ebp]
	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR _uc$[ebp]
	mov	cx, WORD PTR [edx+ecx*2+68]
	mov	WORD PTR _types$[ebp+eax*2], cx

; 2724 : 						num[prev] = uc->NumElements[loop];

	mov	edx, DWORD PTR _prev$[ebp]
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _num$[ebp+edx*4], eax

; 2725 : 						break;

	jmp	SHORT $LN13@update_new
$LN8@update_new:

; 2726 : 					}
; 2727 : 				}

	jmp	$LN11@update_new
$LN13@update_new:

; 2728 : 			}
; 2729 : 		}

	jmp	$LN15@update_new
$LN14@update_new:

; 2730 : 
; 2731 : 		for (loop = 0; loop < VEHICLE_GROUPS_PER_UNIT; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN7@update_new
$LN6@update_new:
	mov	ecx, DWORD PTR _loop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _loop$[ebp], ecx
$LN7@update_new:
	cmp	DWORD PTR _loop$[ebp], 16		; 00000010H
	jge	$LN35@update_new

; 2732 : 		{
; 2733 : 			if (types[loop])

	mov	edx, DWORD PTR _loop$[ebp]
	movsx	eax, WORD PTR _types$[ebp+edx*2]
	test	eax, eax
	je	SHORT $LN4@update_new

; 2734 : 				vc = (VehicleClassDataType*) Falcon4ClassTable[types[loop]].dataPtr;

	mov	ecx, DWORD PTR _loop$[ebp]
	movsx	edx, WORD PTR _types$[ebp+ecx*2]
	imul	edx, 81					; 00000051H
	mov	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, DWORD PTR [eax+edx+77]
	mov	DWORD PTR _vc$[ebp], ecx
$LN4@update_new:

; 2735 : 
; 2736 : 			text = (C_Text *) win->FindControl (batt[loop]);

	mov	edx, DWORD PTR _loop$[ebp]
	mov	eax, DWORD PTR ?batt@?1??update_new_battalion_window@@YAXXZ@4PAHA[edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 2737 : 			if (text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN3@update_new

; 2738 : 			{
; 2739 : 				if (types[loop])

	mov	ecx, DWORD PTR _loop$[ebp]
	movsx	edx, WORD PTR _types$[ebp+ecx*2]
	test	edx, edx
	je	SHORT $LN2@update_new

; 2740 : 				{
; 2741 : 					vc = (VehicleClassDataType*) Falcon4ClassTable[types[loop]].dataPtr;

	mov	eax, DWORD PTR _loop$[ebp]
	movsx	ecx, WORD PTR _types$[ebp+eax*2]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+ecx+77]
	mov	DWORD PTR _vc$[ebp], eax

; 2742 : 					sprintf (buffer, "%d x %s", num[loop], vc->Name);

	mov	ecx, DWORD PTR _vc$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _loop$[ebp]
	mov	eax, DWORD PTR _num$[ebp+edx*4]
	push	eax
	push	OFFSET ??_C@_07BKILGK@?$CFd?5x?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2743 : 					text->SetText (buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2744 : 				}				
; 2745 : 				else

	jmp	SHORT $LN1@update_new
$LN2@update_new:

; 2746 : 					text->SetText ("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN1@update_new:

; 2747 : 				text->Refresh();

	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@update_new:

; 2748 : 			}
; 2749 : 		}

	jmp	$LN6@update_new
$LN35@update_new:

; 2750 : 	}
; 2751 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?update_new_battalion_window@@YAXXZ ENDP		; update_new_battalion_window
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_cancel_squadron@@YAXJFPAVC_Base@@@Z PROC	; tactical_cancel_squadron

; 804  : {

	push	ebp
	mov	ebp, esp

; 805  : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@tactical_c

; 806  : 		return;

	jmp	SHORT $LN2@tactical_c
$LN1@tactical_c:

; 807  : 
; 808  : 	gMainHandler->DisableWindowGroup (31000);

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@tactical_c:

; 809  : }

	pop	ebp
	ret	0
?tactical_cancel_squadron@@YAXJFPAVC_Base@@@Z ENDP	; tactical_cancel_squadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_squadron$ = -12					; size = 4
_menu$ = -8						; size = 4
_tid$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_create_squadron@@YAXJFPAVC_Base@@@Z PROC	; tactical_create_squadron

; 768  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 769  : 	int			tid;
; 770  : 	Squadron	squadron;
; 771  : 	C_PopupList *menu;
; 772  : 
; 773  : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@tactical_c

; 774  : 		return;

	jmp	$LN6@tactical_c
$LN5@tactical_c:

; 775  : 
; 776  : 	gMainHandler->DisableWindowGroup (31000);

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 777  : 
; 778  : 	tid = gLastAircraftType-VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	sub	ecx, 100				; 00000064H
	mov	DWORD PTR _tid$[ebp], ecx

; 779  : 	if (tid < 0)

	jns	SHORT $LN4@tactical_c

; 780  : 		tid = GetClassID (DOMAIN_AIR, CLASS_UNIT, TYPE_SQUADRON, STYPE_UNIT_FIGHTER_BOMBER,	SPTYPE_F16C,0,0,0);

	push	0
	push	0
	push	0
	push	3
	push	9
	push	3
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _tid$[ebp], eax
$LN4@tactical_c:

; 781  : 	if (!tid)

	cmp	DWORD PTR _tid$[ebp], 0
	jne	SHORT $LN3@tactical_c

; 782  : 		return;

	jmp	SHORT $LN6@tactical_c
$LN3@tactical_c:

; 783  : 
; 784  : 	squadron = tactical_make_squadron(gLastAirbaseID, tid+VU_LAST_ENTITY_TYPE);

	mov	edx, DWORD PTR _tid$[ebp]
	add	edx, 100				; 00000064H
	push	edx
	mov	eax, DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A
	push	ecx
	call	?tactical_make_squadron@@YAPAVSquadronClass@@VVU_ID@@J@Z ; tactical_make_squadron
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _squadron$[ebp], eax

; 785  : 	if (!squadron)

	cmp	DWORD PTR _squadron$[ebp], 0
	jne	SHORT $LN2@tactical_c

; 786  : 		return;

	jmp	SHORT $LN6@tactical_c
$LN2@tactical_c:

; 787  : 
; 788  : 	menu=gPopupMgr->GetMenu(MAP_POP);

	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z ; C_PopupMgr::GetMenu
	mov	DWORD PTR _menu$[ebp], eax

; 789  : 	if (!menu)

	cmp	DWORD PTR _menu$[ebp], 0
	jne	SHORT $LN1@tactical_c

; 790  : 		return;

	jmp	SHORT $LN6@tactical_c
$LN1@tactical_c:

; 791  : 
; 792  : 	// Make sure we can see this squadron
; 793  : 	menu->SetItemState(MID_UNITS_SQUAD_SQUADRON,1);

	push	1
	push	86049					; 00015021H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 794  : 	MenuToggleUnitCB(MID_UNITS_SQUAD_SQUADRON,0,menu);

	mov	edx, DWORD PTR _menu$[ebp]
	push	edx
	push	0
	push	86049					; 00015021H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH

; 795  : 
; 796  : 	display_air_units(squadron);

	mov	eax, DWORD PTR _squadron$[ebp]
	push	eax
	call	?display_air_units@@YAXPAVUnitClass@@@Z	; display_air_units
	add	esp, 4
$LN6@tactical_c:

; 797  : //	gGps->Update(); done by RefreshMapOnChange()
; 798  : // MN 2002-01-04 show up the squadron faster
; 799  : //	RefreshMapOnChange();
; 800  : 
; 801  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_create_squadron@@YAXJFPAVC_Base@@@Z ENDP	; tactical_create_squadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_team$ = -8						; size = 4
_flight$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_release_flight@@YAXJFPAVC_Base@@@Z PROC	; tactical_release_flight

; 3007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3008 : 	Flight
; 3009 : 		flight;
; 3010 : 
; 3011 : 	int
; 3012 : 		team;
; 3013 : 
; 3014 : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@tactical_r

; 3015 : 	{
; 3016 : 		return;

	jmp	SHORT $LN3@tactical_r
$LN2@tactical_r:

; 3017 : 	}
; 3018 : 
; 3019 : 	MonoPrint
; 3020 : 	(
; 3021 : 		"Release Flight %d\n",
; 3022 : 		gSelectedATOFlight.num_
; 3023 : 	);

	mov	ecx, DWORD PTR ?gSelectedATOFlight@@3VVU_ID@@A
	push	ecx
	push	OFFSET ??_C@_0BD@NLMFIEDO@Release?5Flight?5?$CFd?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 3024 : 
; 3025 : 	flight = (Flight) FindEntity (gSelectedATOFlight);

	mov	edx, DWORD PTR ?gSelectedATOFlight@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gSelectedATOFlight@@3VVU_ID@@A
	push	eax
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _flight$[ebp], eax

; 3026 : 
; 3027 : 	if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN3@tactical_r

; 3028 : 	{
; 3029 : 		team = flight->GetTeam ();

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	DWORD PTR _team$[ebp], ecx

; 3030 : 
; 3031 : 		flight->Remove ();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Remove@CampBaseClass@@QAEHXZ		; CampBaseClass::Remove

; 3032 : 
; 3033 : 		gMapMgr->RemoveAllWaypoints (static_cast<short>(team));

	movzx	edx, WORD PTR _team$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RemoveAllWaypoints@C_Map@@QAEXF@Z	; C_Map::RemoveAllWaypoints

; 3034 : 
; 3035 : 		gGps->Update ();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update
$LN3@tactical_r:

; 3036 : 	}
; 3037 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_release_flight@@YAXJFPAVC_Base@@@Z ENDP	; tactical_release_flight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_menu$ = -4						; size = 4
_u$ = 8							; size = 4
?display_land_units@@YAXPAVUnitClass@@@Z PROC		; display_land_units

; 2758 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2759 : 	C_PopupList *menu;
; 2760 : 
; 2761 : 	menu=gPopupMgr->GetMenu(MAP_POP);

	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z ; C_PopupMgr::GetMenu
	mov	DWORD PTR _menu$[ebp], eax

; 2762 : 	if (!menu)

	cmp	DWORD PTR _menu$[ebp], 0
	jne	SHORT $LN5@display_la

; 2763 : 		return;

	jmp	$LN6@display_la
$LN5@display_la:

; 2764 : 
; 2765 : 	// Make sure we can see this unit
; 2766 : 	menu->SetItemState(MID_UNITS_BAT,1);

	push	1
	push	86032					; 00015010H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2767 : 	MenuToggleUnitCB(MID_UNITS_BAT,0,menu);

	mov	eax, DWORD PTR _menu$[ebp]
	push	eax
	push	0
	push	86032					; 00015010H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH

; 2768 : 
; 2769 : 	if (u->GetUnitNormalRole() == GRO_AIRDEFENSE)

	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	eax, DWORD PTR [edx+668]
	call	eax
	cmp	eax, 5
	jne	SHORT $LN4@display_la

; 2770 : 	{
; 2771 : 		menu->SetItemState(MID_UNITS_AD,1);

	push	1
	push	86034					; 00015012H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2772 : 		MenuToggleUnitCB(MID_UNITS_AD,0,menu);

	mov	ecx, DWORD PTR _menu$[ebp]
	push	ecx
	push	0
	push	86034					; 00015012H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@display_la
$LN4@display_la:

; 2773 : 	}
; 2774 : 	else if (FindUnitSupportRole(u))

	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	call	?FindUnitSupportRole@@YAHPAVUnitClass@@@Z ; FindUnitSupportRole
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@display_la

; 2775 : 	{
; 2776 : 		menu->SetItemState(MID_UNITS_SUPPORT,1);

	push	1
	push	86035					; 00015013H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2777 : 		MenuToggleUnitCB(MID_UNITS_SUPPORT,0,menu);

	mov	eax, DWORD PTR _menu$[ebp]
	push	eax
	push	0
	push	86035					; 00015013H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH

; 2778 : 	}
; 2779 : 	else

	jmp	SHORT $LN6@display_la
$LN2@display_la:

; 2780 : 	{
; 2781 : 		menu->SetItemState(MID_UNITS_COMBAT,1);

	push	1
	push	86033					; 00015011H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2782 : 		MenuToggleUnitCB(MID_UNITS_COMBAT,0,menu);

	mov	ecx, DWORD PTR _menu$[ebp]
	push	ecx
	push	0
	push	86033					; 00015011H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
$LN6@display_la:

; 2783 : 	}
; 2784 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?display_land_units@@YAXPAVUnitClass@@@Z ENDP		; display_land_units
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_stype$ = -8						; size = 4
_menu$ = -4						; size = 4
_u$ = 8							; size = 4
?display_air_units@@YAXPAVUnitClass@@@Z PROC		; display_air_units

; 2266 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2267 : 	int			stype;
; 2268 : 	C_PopupList *menu;
; 2269 : 
; 2270 : 	menu=gPopupMgr->GetMenu(MAP_POP);

	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z ; C_PopupMgr::GetMenu
	mov	DWORD PTR _menu$[ebp], eax

; 2271 : 	if (!menu)

	cmp	DWORD PTR _menu$[ebp], 0
	jne	SHORT $LN11@display_ai

; 2272 : 		return;

	jmp	$LN12@display_ai
$LN11@display_ai:

; 2273 : 
; 2274 : 	// Make sure we can see this unit
; 2275 : 	stype = u->GetSType();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	eax, al
	mov	DWORD PTR _stype$[ebp], eax

; 2276 : 	if (stype == STYPE_UNIT_FIGHTER || stype == STYPE_UNIT_FIGHTER_BOMBER)

	cmp	DWORD PTR _stype$[ebp], 8
	je	SHORT $LN9@display_ai
	cmp	DWORD PTR _stype$[ebp], 9
	jne	SHORT $LN10@display_ai
$LN9@display_ai:

; 2277 : 	{
; 2278 : 		menu->SetItemState(MID_UNITS_SQUAD_FIGHTER,1);

	push	1
	push	86037					; 00015015H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2279 : 		MenuToggleUnitCB(MID_UNITS_SQUAD_FIGHTER,0,menu);

	mov	ecx, DWORD PTR _menu$[ebp]
	push	ecx
	push	0
	push	86037					; 00015015H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
	jmp	$LN12@display_ai
$LN10@display_ai:

; 2280 : 	}
; 2281 : 	else if (stype == STYPE_UNIT_BOMBER)

	cmp	DWORD PTR _stype$[ebp], 6
	jne	SHORT $LN7@display_ai

; 2282 : 	{
; 2283 : 		menu->SetItemState(MID_UNITS_SQUAD_BOMBER,1);

	push	1
	push	86040					; 00015018H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2284 : 		MenuToggleUnitCB(MID_UNITS_SQUAD_BOMBER,0,menu);

	mov	edx, DWORD PTR _menu$[ebp]
	push	edx
	push	0
	push	86040					; 00015018H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
	jmp	$LN12@display_ai
$LN7@display_ai:

; 2285 : 	}
; 2286 : 	else if (stype == STYPE_UNIT_ATTACK_HELO || stype == STYPE_UNIT_RECON_HELO || stype == STYPE_UNIT_TRANSPORT_HELO)

	cmp	DWORD PTR _stype$[ebp], 4
	je	SHORT $LN4@display_ai
	cmp	DWORD PTR _stype$[ebp], 12		; 0000000cH
	je	SHORT $LN4@display_ai
	cmp	DWORD PTR _stype$[ebp], 14		; 0000000eH
	jne	SHORT $LN5@display_ai
$LN4@display_ai:

; 2287 : 	{
; 2288 : 		menu->SetItemState(MID_UNITS_SQUAD_HELI,1);

	push	1
	push	86042					; 0001501aH
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2289 : 		MenuToggleUnitCB(MID_UNITS_SQUAD_HELI,0,menu);

	mov	eax, DWORD PTR _menu$[ebp]
	push	eax
	push	0
	push	86042					; 0001501aH
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN12@display_ai
$LN5@display_ai:

; 2290 : 	}
; 2291 : 	else if (stype == STYPE_UNIT_ATTACK)

	cmp	DWORD PTR _stype$[ebp], 3
	jne	SHORT $LN2@display_ai

; 2292 : 	{
; 2293 : 		menu->SetItemState(MID_UNITS_SQUAD_ATTACK,1);

	push	1
	push	86039					; 00015017H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2294 : 		MenuToggleUnitCB(MID_UNITS_SQUAD_ATTACK,0,menu);

	mov	ecx, DWORD PTR _menu$[ebp]
	push	ecx
	push	0
	push	86039					; 00015017H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH

; 2295 : 	}
; 2296 : 	else

	jmp	SHORT $LN12@display_ai
$LN2@display_ai:

; 2297 : 	{
; 2298 : 		menu->SetItemState(MID_UNITS_SQUAD_SUPPORT,1);

	push	1
	push	86041					; 00015019H
	mov	ecx, DWORD PTR _menu$[ebp]
	call	?SetItemState@C_PopupList@@QAEXJF@Z	; C_PopupList::SetItemState

; 2299 : 		MenuToggleUnitCB(MID_UNITS_SQUAD_SUPPORT,0,menu);

	mov	edx, DWORD PTR _menu$[ebp]
	push	edx
	push	0
	push	86041					; 00015019H
	call	?MenuToggleUnitCB@@YAXJFPAVC_Base@@@Z	; MenuToggleUnitCB
	add	esp, 12					; 0000000cH
$LN12@display_ai:

; 2300 : 	}
; 2301 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?display_air_units@@YAXPAVUnitClass@@@Z ENDP		; display_air_units
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
?RefreshMapOnChange@@YAXXZ PROC				; RefreshMapOnChange

; 95   : 	{

	push	ebp
	mov	ebp, esp

; 96   : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 97   : 	gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 98   : 	}

	pop	ebp
	ret	0
?RefreshMapOnChange@@YAXXZ ENDP				; RefreshMapOnChange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_mission$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_skill@@YAXJFPAVC_Base@@@Z PROC		; tac_select_skill

; 1667 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1668 :     int	mission = -1;

	mov	DWORD PTR _mission$[ebp], -1

; 1669 : 	C_Window *win;
; 1670 : 
; 1671 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@tac_select

; 1672 : 		return;

	jmp	SHORT $LN3@tac_select
$LN2@tac_select:

; 1673 : 
; 1674 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1675 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN1@tac_select

; 1676 : 		return;

	jmp	SHORT $LN3@tac_select
$LN1@tac_select:

; 1677 : 
; 1678 : 	gLastPilotSkill = ((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?gLastPilotSkill@@3HA, eax	; gLastPilotSkill
$LN3@tac_select:

; 1679 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_skill@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_skill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z PROC		; ChangePackTimeCB

; 888  : {

	push	ebp
	mov	ebp, esp

; 889  : 	ChangeTimeCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?ChangeTimeCB@@YAXJFPAVC_Base@@@Z	; ChangeTimeCB
	add	esp, 12					; 0000000cH

; 890  : 	if(hittype == C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	jne	SHORT $LN2@ChangePack

; 891  : 		tactical_update_package();

	call	?tactical_update_package@@YAXXZ		; tactical_update_package
$LN2@ChangePack:

; 892  : }

	pop	ebp
	ret	0
?ChangePackTimeCB@@YAXJFPAVC_Base@@@Z ENDP		; ChangePackTimeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_mn$1 = -144						; size = 4
_se$2 = -140						; size = 4
_hr$3 = -136						; size = 4
_edit$ = -132						; size = 4
_mn$4 = -128						; size = 4
_se$5 = -124						; size = 4
tv198 = -120						; size = 4
_element$ = -116					; size = 4
_text$ = -112						; size = 4
_start_day$ = -108					; size = 4
_hr$6 = -104						; size = 4
_btn$ = -100						; size = 4
_lbox$ = -96						; size = 4
_win$ = -92						; size = 4
_clock$ = -88						; size = 4
_buffer$7 = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
?tactical_update_package@@YAXXZ PROC			; tactical_update_package

; 895  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 896  : 	C_Window	*win;
; 897  : 	C_ListBox	*lbox;
; 898  : 	C_Text		*text;
; 899  : 	C_EditBox	*edit;
; 900  : 	C_Button	*btn;
; 901  : 	C_Clock		*clock;
; 902  : 	Unit		element = NULL;

	mov	DWORD PTR _element$[ebp], 0

; 903  : 	int			start_day = 0;

	mov	DWORD PTR _start_day$[ebp], 0

; 904  : 
; 905  : 	if (new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN26@tactical_u

; 906  : 		element = new_package->GetFirstUnitElement();

	mov	eax, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _element$[ebp], eax
$LN26@tactical_u:

; 907  : 
; 908  : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 909  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN27@tactical_u

; 910  : 	{
; 911  : 		text=(C_Text *)win->FindControl(PACKAGE_TARGET);

	push	40098					; 00009ca2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _text$[ebp], eax

; 912  : 		if (text)

	cmp	DWORD PTR _text$[ebp], 0
	je	$LN24@tactical_u

; 913  : 			{
; 914  : 			_TCHAR		buffer[80] = {0};

	mov	BYTE PTR _buffer$7[ebp], 0
	push	79					; 0000004fH
	push	0
	lea	ecx, DWORD PTR _buffer$7[ebp+1]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 915  : 			if (new_package_target)

	cmp	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
	je	SHORT $LN23@tactical_u

; 916  : 				{
; 917  : 				if (new_package_target->IsFlight())

	mov	edx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN22@tactical_u

; 918  : 					GetCallsign (((Flight)new_package_target)->callsign_id, ((Flight)new_package_target)->callsign_num, buffer);

	lea	eax, DWORD PTR _buffer$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	movzx	edx, BYTE PTR [ecx+426]
	push	edx
	mov	eax, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	movzx	ecx, BYTE PTR [eax+425]
	push	ecx
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH

; 919  : 				else

	jmp	SHORT $LN21@tactical_u
$LN22@tactical_u:

; 920  : 					new_package_target->GetName(buffer,79,FALSE);

	push	0
	push	79					; 0000004fH
	lea	edx, DWORD PTR _buffer$7[ebp]
	push	edx
	mov	eax, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN21@tactical_u:

; 921  : 				}
; 922  : 			else

	jmp	SHORT $LN20@tactical_u
$LN23@tactical_u:

; 923  : 				{
; 924  : 				// KCK: Need to figure out where we clicked
; 925  : 				AddLocationToBuffer ('n', MapX, MapY, buffer);

	lea	ecx, DWORD PTR _buffer$7[ebp]
	push	ecx
	movzx	edx, WORD PTR ?MapY@@3FA		; MapY
	push	edx
	movzx	eax, WORD PTR ?MapX@@3FA		; MapX
	push	eax
	push	110					; 0000006eH
	call	?AddLocationToBuffer@@YAXDFFPAD@Z	; AddLocationToBuffer
	add	esp, 16					; 00000010H
$LN20@tactical_u:

; 926  : 				}
; 927  : 			text->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$7[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 928  : 			text->Refresh();

	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN24@tactical_u:

; 929  : 			}
; 930  : 
; 931  : 		// Set Package Type listbox
; 932  : 		lbox=(C_ListBox *)win->FindControl(TAC_PACKAGE_TYPE);

	push	40040					; 00009c68H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 933  : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN19@tactical_u

; 934  : 		{
; 935  : 			if (element)

	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN18@tactical_u

; 936  : 				lbox->SetValue(MissionToATOMiss(element->GetUnitMission()));

	mov	ecx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _element$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	push	eax
	call	?MissionToATOMiss@@YAHH@Z		; MissionToATOMiss
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 937  : 			else

	jmp	SHORT $LN17@tactical_u
$LN18@tactical_u:

; 938  : 				lbox->SetValue(ATO_OTHER);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN17@tactical_u:

; 939  : 			lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN19@tactical_u:

; 940  : 		}
; 941  : 
; 942  : 		lbox=(C_ListBox *)win->FindControl(PACKAGE_PRIORITY_LIST);

	push	40091					; 00009c9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 943  : 		if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN16@tactical_u

; 944  : 			{
; 945  : 			gPackagePriority = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _gPackagePriority, eax

; 946  : 			switch(gPackagePriority)

	mov	ecx, DWORD PTR _gPackagePriority
	mov	DWORD PTR tv198[ebp], ecx
	mov	edx, DWORD PTR tv198[ebp]
	sub	edx, 1
	mov	DWORD PTR tv198[ebp], edx
	cmp	DWORD PTR tv198[ebp], 4
	ja	SHORT $LN8@tactical_u
	mov	eax, DWORD PTR tv198[ebp]
	jmp	DWORD PTR $LN29@tactical_u[eax*4]
$LN13@tactical_u:

; 947  : 				{
; 948  : 				case 1:
; 949  : 					gPackagePriority = 255;

	mov	DWORD PTR _gPackagePriority, 255	; 000000ffH

; 950  : 					break;

	jmp	SHORT $LN16@tactical_u
$LN12@tactical_u:

; 951  : 				case 2:
; 952  : 					gPackagePriority = 175;

	mov	DWORD PTR _gPackagePriority, 175	; 000000afH

; 953  : 					break;

	jmp	SHORT $LN16@tactical_u
$LN11@tactical_u:

; 954  : 				case 3:
; 955  : 					gPackagePriority = 125;

	mov	DWORD PTR _gPackagePriority, 125	; 0000007dH

; 956  : 					break;

	jmp	SHORT $LN16@tactical_u
$LN10@tactical_u:

; 957  : 				case 4:
; 958  : 					gPackagePriority = 75;

	mov	DWORD PTR _gPackagePriority, 75		; 0000004bH

; 959  : 					break;

	jmp	SHORT $LN16@tactical_u
$LN9@tactical_u:

; 960  : 				case 5:
; 961  : 					gPackagePriority = 5;

	mov	DWORD PTR _gPackagePriority, 5

; 962  : 					break;

	jmp	SHORT $LN16@tactical_u
$LN8@tactical_u:

; 963  : 				default:
; 964  : 					gPackagePriority = 0;

	mov	DWORD PTR _gPackagePriority, 0
$LN16@tactical_u:

; 965  : 					break;
; 966  : 				}
; 967  : 			}
; 968  : 
; 969  : 		edit = (C_EditBox*)win->FindControl(PACKAGE_DAY);

	push	40090					; 00009c9aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _edit$[ebp], eax

; 970  : 		if (edit)

	cmp	DWORD PTR _edit$[ebp], 0
	je	SHORT $LN7@tactical_u

; 971  : 			start_day = edit->GetInteger() - 1;

	mov	ecx, DWORD PTR _edit$[ebp]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	sub	eax, 1
	mov	DWORD PTR _start_day$[ebp], eax
$LN7@tactical_u:

; 972  : 		if (start_day < 0)

	cmp	DWORD PTR _start_day$[ebp], 0
	jge	SHORT $LN6@tactical_u

; 973  : 			start_day = 0;

	mov	DWORD PTR _start_day$[ebp], 0
$LN6@tactical_u:

; 974  : 		gTakeoffTime = gPackageTOT = 0;

	mov	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	mov	ecx, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	mov	DWORD PTR ?gTakeoffTime@@3KA, ecx	; gTakeoffTime

; 975  : 		btn = (C_Button*)win->FindControl(PAK_TOT_LOCK);

	push	40064					; 00009c80H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 976  : 		if (btn && btn->GetState() == 1)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN5@tactical_u
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	$LN5@tactical_u

; 977  : 			{
; 978  : 			// Get our _locked_ time on target
; 979  : 			clock=(C_Clock*)win->FindControl(PAK_TOT_TIME);

	push	40065					; 00009c81H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 980  : 			if (clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	SHORT $LN5@tactical_u

; 981  : 				{
; 982  : 				int hr,mn,se;
; 983  : 				hr = clock->GetHour();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetHour@C_Clock@@QAEJXZ		; C_Clock::GetHour
	mov	DWORD PTR _hr$3[ebp], eax

; 984  : 				mn = clock->GetMinute();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetMinute@C_Clock@@QAEJXZ		; C_Clock::GetMinute
	mov	DWORD PTR _mn$1[ebp], eax

; 985  : 				se = clock->GetSecond();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetSecond@C_Clock@@QAEJXZ		; C_Clock::GetSecond
	mov	DWORD PTR _se$2[ebp], eax

; 986  : 				gPackageTOT = start_day * CampaignDay + hr * CampaignHours + mn * CampaignMinutes + se * CampaignSeconds;

	mov	ecx, DWORD PTR _start_day$[ebp]
	imul	ecx, 86400000				; 05265c00H
	mov	edx, DWORD PTR _hr$3[ebp]
	imul	edx, 3600000				; 0036ee80H
	add	ecx, edx
	mov	eax, DWORD PTR _mn$1[ebp]
	imul	eax, 60000				; 0000ea60H
	add	ecx, eax
	mov	edx, DWORD PTR _se$2[ebp]
	imul	edx, 1000				; 000003e8H
	add	ecx, edx
	mov	DWORD PTR ?gPackageTOT@@3KA, ecx	; gPackageTOT

; 987  : 				// KCK: We should make sure the package times are all set to this
; 988  : 				// (in case the user changed this control after creating the flights)
; 989  : 				SetPackageTimes(new_package,0,gPackageTOT);

	mov	eax, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	push	eax
	push	0
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	push	ecx
	call	?SetPackageTimes@@YAXPAVPackageClass@@KK@Z ; SetPackageTimes
	add	esp, 12					; 0000000cH
$LN5@tactical_u:

; 990  : 				}
; 991  : 			}
; 992  : 		btn = (C_Button*)win->FindControl(PAK_TAKEOFF_LOCK);

	push	40056					; 00009c78H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 993  : 		if (btn && btn->GetState() == 1 && !gPackageTOT)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN27@tactical_u
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, 1
	jne	$LN27@tactical_u
	cmp	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	jne	$LN27@tactical_u

; 994  : 			{
; 995  : 			// Get our _locked_ takeoff time
; 996  : 			clock=(C_Clock*)win->FindControl(PAK_TAKEOFF_TIME);

	push	40057					; 00009c79H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clock$[ebp], eax

; 997  : 			if (clock)

	cmp	DWORD PTR _clock$[ebp], 0
	je	$LN27@tactical_u

; 998  : 				{
; 999  : 				int hr,mn,se;
; 1000 : 				hr = clock->GetHour();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetHour@C_Clock@@QAEJXZ		; C_Clock::GetHour
	mov	DWORD PTR _hr$6[ebp], eax

; 1001 : 				mn = clock->GetMinute();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetMinute@C_Clock@@QAEJXZ		; C_Clock::GetMinute
	mov	DWORD PTR _mn$4[ebp], eax

; 1002 : 				se = clock->GetSecond();

	mov	ecx, DWORD PTR _clock$[ebp]
	call	?GetSecond@C_Clock@@QAEJXZ		; C_Clock::GetSecond
	mov	DWORD PTR _se$5[ebp], eax

; 1003 : 				gTakeoffTime = start_day * CampaignDay + hr * CampaignHours + mn * CampaignMinutes + se * CampaignSeconds;

	mov	ecx, DWORD PTR _start_day$[ebp]
	imul	ecx, 86400000				; 05265c00H
	mov	edx, DWORD PTR _hr$6[ebp]
	imul	edx, 3600000				; 0036ee80H
	add	ecx, edx
	mov	eax, DWORD PTR _mn$4[ebp]
	imul	eax, 60000				; 0000ea60H
	add	ecx, eax
	mov	edx, DWORD PTR _se$5[ebp]
	imul	edx, 1000				; 000003e8H
	add	ecx, edx
	mov	DWORD PTR ?gTakeoffTime@@3KA, ecx	; gTakeoffTime

; 1004 : 				// Check for bad takeoff time in running mode
; 1005 : 				if(!(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && gTakeoffTime < TheCampaign.CurrentTime)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 524288				; 00080000H
	jne	$LN1@tactical_u
	mov	ecx, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	cmp	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	jae	$LN1@tactical_u

; 1006 : 					{
; 1007 : 					gTakeoffTime = TheCampaign.CurrentTime + CampaignSeconds;

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	edx, 1000				; 000003e8H
	mov	DWORD PTR ?gTakeoffTime@@3KA, edx	; gTakeoffTime

; 1008 : 					hr = gTakeoffTime / CampaignHours;

	mov	eax, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	mov	DWORD PTR _hr$6[ebp], eax

; 1009 : 					hr = hr % 24;

	mov	eax, DWORD PTR _hr$6[ebp]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _hr$6[ebp], edx

; 1010 : 					mn = (gTakeoffTime / CampaignMinutes) % 60;

	mov	eax, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _mn$4[ebp], edx

; 1011 : 					se = (gTakeoffTime / CampaignSeconds) % 60;

	mov	eax, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	xor	edx, edx
	mov	ecx, 60					; 0000003cH
	div	ecx
	mov	DWORD PTR _se$5[ebp], edx

; 1012 : 					clock->SetHour(hr);

	mov	edx, DWORD PTR _hr$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetHour@C_Clock@@QAEXJ@Z		; C_Clock::SetHour

; 1013 : 					clock->SetMinute(mn);

	mov	eax, DWORD PTR _mn$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetMinute@C_Clock@@QAEXJ@Z		; C_Clock::SetMinute

; 1014 : 					clock->SetSecond(se);

	mov	ecx, DWORD PTR _se$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _clock$[ebp]
	call	?SetSecond@C_Clock@@QAEXJ@Z		; C_Clock::SetSecond

; 1015 : 					clock->Refresh ();

	mov	edx, DWORD PTR _clock$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clock$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN1@tactical_u:

; 1016 : 					}
; 1017 : 				// KCK: We should make sure the package times are all set to this
; 1018 : 				// (in case the user changed this control after creating the flights)
; 1019 : 				SetPackageTimes(new_package,gTakeoffTime,0);

	push	0
	mov	eax, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	push	ecx
	call	?SetPackageTimes@@YAXPAVPackageClass@@KK@Z ; SetPackageTimes
	add	esp, 12					; 0000000cH
$LN27@tactical_u:

; 1020 : 				}
; 1021 : 			}
; 1022 : 	}
; 1023 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN29@tactical_u:
	DD	$LN13@tactical_u
	DD	$LN12@tactical_u
	DD	$LN11@tactical_u
	DD	$LN10@tactical_u
	DD	$LN9@tactical_u
?tactical_update_package@@YAXXZ ENDP			; tactical_update_package
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_ac_type$ = -20						; size = 4
_win$ = -16						; size = 4
_mission$ = -12						; size = 4
_i$ = -8						; size = 4
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_aircraft@@YAXJFPAVC_Base@@@Z PROC		; tac_select_aircraft

; 1614 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1615 : 	C_ListBox *lbox;
; 1616 : 	int	i,ac_type,mission = -1;

	mov	DWORD PTR _mission$[ebp], -1

; 1617 : 	C_Window *win;
; 1618 : 
; 1619 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN10@tac_select

; 1620 : 		return;

	jmp	$LN11@tac_select
$LN10@tac_select:

; 1621 : 
; 1622 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1623 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN9@tac_select

; 1624 : 		return;

	jmp	$LN11@tac_select
$LN9@tac_select:

; 1625 : 
; 1626 : 	gLastAircraftType = ((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?gLastAircraftType@@3HA, eax	; gLastAircraftType

; 1627 : 	ac_type = gLastAircraftType-VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	sub	ecx, 100				; 00000064H
	mov	DWORD PTR _ac_type$[ebp], ecx

; 1628 : 
; 1629 : 	// Everything else is based off of aircraft type
; 1630 : 
; 1631 : 	// Setup role listbox
; 1632 : 	lbox=(C_ListBox *)win->FindControl(TAC_ROLE);

	push	40036					; 00009c64H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1633 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN8@tac_select

; 1634 : 		{
; 1635 : 		// Clear old roles
; 1636 : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1637 : 		for (i=1;i<AMIS_OTHER;i++)

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN7@tac_select
$LN6@tac_select:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@tac_select:
	cmp	DWORD PTR _i$[ebp], 41			; 00000029H
	jge	SHORT $LN5@tac_select

; 1638 : 			{
; 1639 : 			if (IsValidMission(ac_type,i))

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ac_type$[ebp]
	push	ecx
	call	?IsValidMission@@YAHHH@Z		; IsValidMission
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@tac_select

; 1640 : 				{
; 1641 : 				lbox->AddItem(i,C_TYPE_ITEM,MissStr[i]);

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 20					; 00000014H
	add	edx, OFFSET ?MissStr@@3PAY0BE@DA	; MissStr
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1642 : 				if (mission < 0)

	cmp	DWORD PTR _mission$[ebp], 0
	jge	SHORT $LN3@tac_select

; 1643 : 					mission = i;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _mission$[ebp], ecx
$LN3@tac_select:

; 1644 : 				if (i == gLastRole)

	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR ?gLastRole@@3HA		; gLastRole
	jne	SHORT $LN4@tac_select

; 1645 : 					lbox->SetValue(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN4@tac_select:

; 1646 : 				}
; 1647 : 			}

	jmp	SHORT $LN6@tac_select
$LN5@tac_select:

; 1648 : 		lbox->SetCallback(tac_select_role);

	push	OFFSET ?tac_select_role@@YAXJFPAVC_Base@@@Z ; tac_select_role
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1649 : 		tac_select_role(mission,C_TYPE_SELECT,lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	push	28					; 0000001cH
	mov	edx, DWORD PTR _mission$[ebp]
	push	edx
	call	?tac_select_role@@YAXJFPAVC_Base@@@Z	; tac_select_role
	add	esp, 12					; 0000000cH
$LN8@tac_select:

; 1650 : 		}
; 1651 : 
; 1652 : 	// Setup Squadron listbox - list all squadrons of aircraft type above, plus "new"
; 1653 : 	lbox=(C_ListBox*)win->FindControl(TAC_SQUADRON_LIST);

	push	40050					; 00009c72H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1654 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN11@tac_select

; 1655 : 		{
; 1656 : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1657 : 		FillListBoxWithSquadrons(lbox,gSelectedTeam,ac_type);

	mov	eax, DWORD PTR _ac_type$[ebp]
	push	eax
	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	ecx
	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	call	?FillListBoxWithSquadrons@@YAXPAVC_ListBox@@JJ@Z ; FillListBoxWithSquadrons
	add	esp, 12					; 0000000cH

; 1658 : 		lbox->SetCallback(tac_select_squadron);

	push	OFFSET ?tac_select_squadron@@YAXJFPAVC_Base@@@Z ; tac_select_squadron
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1659 : 		// Now setup the airbase list (result of squadron selection)
; 1660 : 		tac_select_squadron(lbox->GetTextID(),C_TYPE_SELECT,lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	call	?tac_select_squadron@@YAXJFPAVC_Base@@@Z ; tac_select_squadron
	add	esp, 12					; 0000000cH
$LN11@tac_select:

; 1661 : 		}
; 1662 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_aircraft@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_aircraft
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_count$ = -16						; size = 4
_delta$ = -12						; size = 4
_w$ = -8						; size = 4
_flight$ = -4						; size = 4
_new_package$ = 8					; size = 4
_takeoffTime$ = 12					; size = 4
_targetTime$ = 16					; size = 4
?SetPackageTimes@@YAXPAVPackageClass@@KK@Z PROC		; SetPackageTimes

; 1572 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 1573 : 	Flight		flight;
; 1574 : 	WayPoint	w;
; 1575 : 	int			delta = 0, count = 0;

	mov	DWORD PTR _delta$[ebp], 0
	mov	DWORD PTR _count$[ebp], 0

; 1576 : 
; 1577 : 	if (!new_package)

	cmp	DWORD PTR _new_package$[ebp], 0
	jne	SHORT $LN12@SetPackage

; 1578 : 		return;

	jmp	$LN13@SetPackage
$LN12@SetPackage:

; 1579 : 
; 1580 : 	flight = (Flight) new_package->GetFirstUnitElement();

	mov	eax, DWORD PTR _new_package$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_package$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _flight$[ebp], eax
$LN11@SetPackage:

; 1581 : 	while (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN13@SetPackage

; 1582 : 		{
; 1583 : 		w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax

; 1584 : 		if (w && !flight->Moving())

	cmp	DWORD PTR _w$[ebp], 0
	je	$LN9@SetPackage
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Moving@UnitClass@@QBEHXZ		; UnitClass::Moving
	test	eax, eax
	jne	$LN9@SetPackage

; 1585 : 			{
; 1586 : 			if (takeoffTime)

	cmp	DWORD PTR _takeoffTime$[ebp], 0
	je	SHORT $LN8@SetPackage

; 1587 : 				delta = takeoffTime - w->GetWPDepartureTime();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	ecx, DWORD PTR _takeoffTime$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _delta$[ebp], ecx
$LN8@SetPackage:

; 1588 : 			if (count)

	cmp	DWORD PTR _count$[ebp], 0
	je	SHORT $LN7@SetPackage

; 1589 : 				delta += MissionData[flight->GetUnitMission()].separation * CampaignSeconds;

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+664]
	call	edx
	shl	eax, 5
	movsx	eax, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+14]
	imul	eax, 1000				; 000003e8H
	add	eax, DWORD PTR _delta$[ebp]
	mov	DWORD PTR _delta$[ebp], eax
	jmp	SHORT $LN6@SetPackage
$LN7@SetPackage:

; 1590 : 			else if (targetTime)

	cmp	DWORD PTR _targetTime$[ebp], 0
	je	SHORT $LN6@SetPackage
$LN4@SetPackage:

; 1591 : 				{
; 1592 : 				while (w && !(w->GetWPFlags() & WPF_TARGET))

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN3@SetPackage
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	jne	SHORT $LN3@SetPackage

; 1593 : 					w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax
	jmp	SHORT $LN4@SetPackage
$LN3@SetPackage:

; 1594 : 				if (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN6@SetPackage

; 1595 : 					delta = (targetTime + MissionData[flight->GetUnitMission()].separation*CampaignSeconds) - w->GetWPArrivalTime();

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	shl	eax, 5
	movsx	esi, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+14]
	imul	esi, 1000				; 000003e8H
	add	esi, DWORD PTR _targetTime$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	sub	esi, eax
	mov	DWORD PTR _delta$[ebp], esi
$LN6@SetPackage:

; 1596 : 				}
; 1597 : 			if (delta)

	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $LN9@SetPackage

; 1598 : 				SetWPTimes (flight->GetFirstUnitWP(), delta, 0);

	push	0
	mov	ecx, DWORD PTR _delta$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	push	eax
	call	?SetWPTimes@@YAKPAVWayPointClass@@JH@Z	; SetWPTimes
	add	esp, 12					; 0000000cH
$LN9@SetPackage:

; 1599 : 			}
; 1600 : 		count++;

	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx

; 1601 : 		flight = (Flight) new_package->GetNextUnitElement();

	mov	eax, DWORD PTR _new_package$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_package$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax
	mov	DWORD PTR _flight$[ebp], eax

; 1602 : 		}

	jmp	$LN11@SetPackage
$LN13@SetPackage:

; 1603 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SetPackageTimes@@YAXPAVPackageClass@@KK@Z ENDP		; SetPackageTimes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
_host$2 = -16						; size = 4
tv155 = -12						; size = 4
tv129 = -8						; size = 4
_element$3 = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?KeepPackage@@YAXJFPAVC_Base@@@Z PROC			; KeepPackage

; 1469 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1470 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@KeepPackag

; 1471 : 		return;

	jmp	$LN7@KeepPackag
$LN6@KeepPackag:

; 1472 : 
; 1473 : 	if (new_package && !new_package->GetFirstUnitElement())

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN5@KeepPackag
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+996]
	call	eax
	test	eax, eax
	jne	SHORT $LN5@KeepPackag

; 1474 : 		DiscardPackage(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?DiscardPackage@@YAXJFPAVC_Base@@@Z	; DiscardPackage
	add	esp, 12					; 0000000cH
$LN5@KeepPackag:

; 1475 : 
; 1476 : 	gNewSelectFlight=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, edx

; 1477 : 	if(new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	$LN4@KeepPackag

; 1478 : 	{
; 1479 : 		// If we're a client creating a package on the fly, we need to set the owner
; 1480 : 		// to the host and send a full update
; 1481 : 		new_package->SetFinal(1);

	push	1
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 1482 : 		if (!FalconLocalGame->IsLocal())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@KeepPackag
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN10@KeepPackag
$LN9@KeepPackag:
	mov	DWORD PTR tv129[ebp], 0
$LN10@KeepPackag:
	mov	ecx, DWORD PTR tv129[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@KeepPackag

; 1483 : 			{
; 1484 : 			FalconSessionEntity	*host = (FalconSessionEntity*) vuDatabase->Find(FalconLocalGame->OwnerId());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@KeepPackag
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN12@KeepPackag
$LN11@KeepPackag:
	mov	DWORD PTR tv155[ebp], 0
$LN12@KeepPackag:
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR tv155[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _host$2[ebp], eax

; 1485 : 			FalconEntity		*element;
; 1486 : 			new_package->DoFullUpdate();

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?DoFullUpdate@FalconEntity@@QAEXXZ	; FalconEntity::DoFullUpdate

; 1487 : 			new_package->FalconEntity::SetOwner(host);

	mov	eax, DWORD PTR _host$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetOwner@FalconEntity@@QAEXPAVFalconSessionEntity@@@Z ; FalconEntity::SetOwner

; 1488 : 			element = (FalconEntity*) new_package->GetFirstUnitElement();

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _element$3[ebp], eax
$LN2@KeepPackag:

; 1489 : 			while (element)

	cmp	DWORD PTR _element$3[ebp], 0
	je	SHORT $LN3@KeepPackag

; 1490 : 				{
; 1491 : 				element->DoFullUpdate();

	mov	ecx, DWORD PTR _element$3[ebp]
	call	?DoFullUpdate@FalconEntity@@QAEXXZ	; FalconEntity::DoFullUpdate

; 1492 : 				element->FalconEntity::SetOwner(host);

	mov	ecx, DWORD PTR _host$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _element$3[ebp]
	call	?SetOwner@FalconEntity@@QAEXPAVFalconSessionEntity@@@Z ; FalconEntity::SetOwner

; 1493 : 				element = (FalconEntity*) new_package->GetNextUnitElement();

	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+1000]
	call	edx
	mov	DWORD PTR _element$3[ebp], eax

; 1494 : 				}

	jmp	SHORT $LN2@KeepPackag
$LN3@KeepPackag:

; 1495 : 			}
; 1496 : 		new_package=NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
$LN4@KeepPackag:

; 1497 : 	}
; 1498 : 	EdittingPackage=0;

	mov	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage

; 1499 : 	new_package=NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package

; 1500 : 	WeAreAddingPackage=0;

	mov	DWORD PTR ?WeAreAddingPackage@@3HA, 0	; WeAreAddingPackage

; 1501 : 	gMainHandler->DisableWindowGroup(control->Parent_->GetGroup());

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN7@KeepPackag:

; 1502 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?KeepPackage@@YAXJFPAVC_Base@@@Z ENDP			; KeepPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DiscardPackage@@YAXJFPAVC_Base@@@Z PROC		; DiscardPackage

; 1449 : {

	push	ebp
	mov	ebp, esp

; 1450 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@DiscardPac

; 1451 : 		return;

	jmp	SHORT $LN3@DiscardPac
$LN2@DiscardPac:

; 1452 : 
; 1453 : //	if(!EdittingPackage)
; 1454 : //	{
; 1455 : 		gNewSelectFlight=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, edx

; 1456 : 		if (new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN1@DiscardPac

; 1457 : 		{
; 1458 : 			new_package->KillUnit();

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?KillUnit@UnitClass@@QAEXXZ		; UnitClass::KillUnit

; 1459 : 			new_package->Remove();

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?Remove@CampBaseClass@@QAEHXZ		; CampBaseClass::Remove
$LN1@DiscardPac:

; 1460 : 		}
; 1461 : //	}
; 1462 : 	EdittingPackage=0;

	mov	DWORD PTR ?EdittingPackage@@3HA, 0	; EdittingPackage

; 1463 : 	new_package=NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package

; 1464 : 	WeAreAddingPackage=0;

	mov	DWORD PTR ?WeAreAddingPackage@@3HA, 0	; WeAreAddingPackage

; 1465 : 	gMainHandler->DisableWindowGroup(control->Parent_->GetGroup());

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN3@DiscardPac:

; 1466 : }

	pop	ebp
	ret	0
?DiscardPackage@@YAXJFPAVC_Base@@@Z ENDP		; DiscardPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_maxy$ = -40						; size = 4
_my$ = -36						; size = 4
_mx$ = -32						; size = 4
_scale$ = -28						; size = 4
_ent$ = -24						; size = 4
_btn$ = -20						; size = 4
_win$ = -16						; size = 4
_lbox$ = -12						; size = 4
_y$ = -8						; size = 2
_x$ = -4						; size = 2
_id$ = 8						; size = 8
_caller$ = 16						; size = 4
?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z PROC	; tactical_add_flight

; 1856 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi

; 1857 : 	C_Window	*win=NULL;

	mov	DWORD PTR _win$[ebp], 0

; 1858 : 	C_ListBox	*lbox=NULL;

	mov	DWORD PTR _lbox$[ebp], 0

; 1859 : 	C_Button	*btn=NULL;

	mov	DWORD PTR _btn$[ebp], 0

; 1860 : 	CampEntity	ent=NULL;

	mov	DWORD PTR _ent$[ebp], 0

; 1861 : 	short		x=0,y=0;

	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 1862 : 	float		mx,my,maxy,scale;
; 1863 : 
; 1864 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1865 : 
; 1866 : 	if(caller->_GetCType_() == _CNTL_BUTTON_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16387				; 00004003H
	jne	SHORT $LN19@tactical_a

; 1867 : 		{
; 1868 : 		mx = GridToSim(MapX);

	movzx	eax, WORD PTR ?MapX@@3FA		; MapX
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _mx$[ebp]

; 1869 : 		my = GridToSim(MapY);

	movzx	ecx, WORD PTR ?MapY@@3FA		; MapY
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _my$[ebp]

; 1870 : 		if (win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN17@tactical_a

; 1871 : 			{
; 1872 : 			lbox = (C_ListBox *) win->FindControl (START_AT_LIST);

	push	40100					; 00009ca4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1873 : 			if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN17@tactical_a

; 1874 : 				lbox->SetValue(1);			// Default to "start at takeoff" for package add mode

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN17@tactical_a:

; 1875 : 			}
; 1876 : 		}
; 1877 : 	else

	jmp	$LN11@tactical_a
$LN19@tactical_a:

; 1878 : 		{
; 1879 : 		if(caller->_GetCType_() == _CNTL_POPUPLIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16392				; 00004008H
	jne	SHORT $LN15@tactical_a

; 1880 : 			{
; 1881 : 			gPopupMgr->GetCurrentXY (&x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z	; C_PopupMgr::GetCurrentXY

; 1882 : 			gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
	jmp	$LN13@tactical_a
$LN15@tactical_a:

; 1883 : 			}
; 1884 : 		else if(caller->_GetCType_() == _CNTL_MAP_MOVER_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16405				; 00004015H
	jne	SHORT $LN13@tactical_a

; 1885 : 			{
; 1886 : 			x=static_cast<short>(((C_MapMover*)caller)->GetRelX() + caller->GetX() + caller->Parent_->GetX());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _x$[ebp], si

; 1887 : 			y=static_cast<short>(((C_MapMover*)caller)->GetRelY() + caller->GetY() + caller->Parent_->GetY());

	mov	edx, DWORD PTR _caller$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _caller$[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _caller$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	add	esi, eax
	mov	eax, DWORD PTR _caller$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _y$[ebp], si

; 1888 : 			gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
$LN13@tactical_a:

; 1889 : 			}
; 1890 : 		gTakeoffTime = 0;

	mov	DWORD PTR ?gTakeoffTime@@3KA, 0		; gTakeoffTime

; 1891 : 		gPackageTOT = TheCampaign.CurrentTime + CampaignMinutes;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	ecx, 60000				; 0000ea60H
	mov	DWORD PTR ?gPackageTOT@@3KA, ecx	; gPackageTOT

; 1892 : 		scale = gMapMgr->GetMapScale ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapScale@C_Map@@QAEMXZ		; C_Map::GetMapScale
	fstp	DWORD PTR _scale$[ebp]

; 1893 : 		maxy = gMapMgr->GetMaxY ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR _maxy$[ebp]

; 1894 : 		mx = x / scale;

	movsx	edx, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR _mx$[ebp], xmm0

; 1895 : 		my = maxy - y / scale;

	movsx	eax, WORD PTR _y$[ebp]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	xmm1, DWORD PTR _maxy$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _my$[ebp], xmm1

; 1896 : 		new_package = NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package

; 1897 : 		if (win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN11@tactical_a

; 1898 : 			{
; 1899 : 			lbox = (C_ListBox *) win->FindControl (START_AT_LIST);

	push	40100					; 00009ca4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1900 : 			if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN11@tactical_a

; 1901 : 				lbox->SetValue(4);			// Default to "start at target" for direct add mode

	push	4
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN11@tactical_a:

; 1902 : 			}
; 1903 : 		}
; 1904 : 
; 1905 : 	// Determine target (or target location)
; 1906 : 	ent=(CampEntity) vuDatabase->Find(id);

	mov	ecx, DWORD PTR _id$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1907 : 	if (ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN10@tactical_a

; 1908 : 		{
; 1909 : 		gLastTarget = new_package_target = ent;

	mov	eax, DWORD PTR _ent$[ebp]
	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, eax ; new_package_target
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A, ecx ; gLastTarget

; 1910 : 		new_package_target->GetLocation(&MapX,&MapY);

	push	OFFSET ?MapY@@3FA			; MapY
	push	OFFSET ?MapX@@3FA			; MapX
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1911 : 		}
; 1912 : 	else

	jmp	SHORT $LN9@tactical_a
$LN10@tactical_a:

; 1913 : 		{
; 1914 : 		MapX = SimToGrid (mx);

	push	ecx
	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapX@@3FA, ax			; MapX

; 1915 : 		MapY = SimToGrid (my);

	push	ecx
	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapY@@3FA, ax			; MapY

; 1916 : 		new_package_target = NULL;

	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
$LN9@tactical_a:

; 1917 : 		}
; 1918 : 
; 1919 : 	// Determine default mission type
; 1920 : 	if (!gLastAircraftType)

	cmp	DWORD PTR ?gLastAircraftType@@3HA, 0	; gLastAircraftType
	jne	SHORT $LN8@tactical_a

; 1921 : 		gLastAircraftType = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_SQUADRON,STYPE_UNIT_FIGHTER_BOMBER,SPTYPE_F16C,VU_ANY,VU_ANY,VU_ANY) + VU_LAST_ENTITY_TYPE;

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	push	3
	push	9
	push	3
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	add	eax, 100				; 00000064H
	mov	DWORD PTR ?gLastAircraftType@@3HA, eax	; gLastAircraftType
$LN8@tactical_a:

; 1922 : 	gLastRole = GetMissionFromTarget (gSelectedTeam, gLastAircraftType-VU_LAST_ENTITY_TYPE, ent);

	mov	edx, DWORD PTR _ent$[ebp]
	push	edx
	mov	eax, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	sub	eax, 100				; 00000064H
	push	eax
	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	ecx
	call	?GetMissionFromTarget@@YAHEHPAVCampBaseClass@@@Z ; GetMissionFromTarget
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?gLastRole@@3HA, eax		; gLastRole

; 1923 : 
; 1924 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@tactical_a

; 1925 : 	{
; 1926 : 		// Setup aircraft type listbox
; 1927 : 		lbox=(C_ListBox*)win->FindControl(TAC_AIRCRAFT_TYPE);

	push	40046					; 00009c6eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1928 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN6@tactical_a

; 1929 : 			{
; 1930 : 			lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1931 : 			FillListBoxWithACTypes(lbox);

	mov	edx, DWORD PTR _lbox$[ebp]
	push	edx
	call	?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z ; FillListBoxWithACTypes
	add	esp, 4

; 1932 : 			if(!lbox->GetRoot())

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetRoot@C_ListBox@@QAEPAVLISTBOX@@XZ	; C_ListBox::GetRoot
	test	eax, eax
	jne	SHORT $LN5@tactical_a

; 1933 : 			{
; 1934 : 				AreYouSure(TXT_ERROR,TXT_NO_SQUADRONS_AVAIL,NULL,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	0
	push	404					; 00000194H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1935 : 				return;

	jmp	$LN20@tactical_a
$LN5@tactical_a:

; 1936 : 			}
; 1937 : 			// Select last type selected
; 1938 : 			lbox->SetValue(gLastAircraftType);

	mov	eax, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1939 : 			lbox->SetCallback(tac_select_aircraft);

	push	OFFSET ?tac_select_aircraft@@YAXJFPAVC_Base@@@Z ; tac_select_aircraft
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1940 : 			// Everything else is based off of aircraft type
; 1941 : 			tac_select_aircraft(0,C_TYPE_SELECT,lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	push	28					; 0000001cH
	push	0
	call	?tac_select_aircraft@@YAXJFPAVC_Base@@@Z ; tac_select_aircraft
	add	esp, 12					; 0000000cH
$LN6@tactical_a:

; 1942 : 			}
; 1943 : 		
; 1944 : // 2001-11-19 M.N. we want to have a pilots skill selection in the TE editor
; 1945 : 
; 1946 : 		if (!gLastPilotSkill)

	cmp	DWORD PTR ?gLastPilotSkill@@3HA, 0	; gLastPilotSkill
	jne	SHORT $LN4@tactical_a

; 1947 : 			gLastPilotSkill = 3; // Rookie as default

	mov	DWORD PTR ?gLastPilotSkill@@3HA, 3	; gLastPilotSkill
$LN4@tactical_a:

; 1948 : 
; 1949 : 		lbox=(C_ListBox*)win->FindControl(PILOT_SKILL);

	push	40905					; 00009fc9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1950 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN3@tactical_a

; 1951 : 		{
; 1952 : 			lbox->SetValue(gLastPilotSkill);

	mov	edx, DWORD PTR ?gLastPilotSkill@@3HA	; gLastPilotSkill
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1953 : 			lbox->SetCallback(tac_select_skill);

	push	OFFSET ?tac_select_skill@@YAXJFPAVC_Base@@@Z ; tac_select_skill
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1954 : 			tac_select_skill(0,C_TYPE_SELECT,lbox);

	mov	ecx, DWORD PTR _lbox$[ebp]
	push	ecx
	push	28					; 0000001cH
	push	0
	call	?tac_select_skill@@YAXJFPAVC_Base@@@Z	; tac_select_skill
	add	esp, 12					; 0000000cH
$LN3@tactical_a:

; 1955 : 		}
; 1956 : 
; 1957 : 		// Setup cancel and ok
; 1958 : 		btn=(C_Button*)win->FindControl(CANCEL_FLIGHT);

	push	21921					; 000055a1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1959 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@tactical_a

; 1960 : 			btn->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN2@tactical_a:

; 1961 : 
; 1962 : 		btn=(C_Button*)win->FindControl(OK_FLIGHT);

	push	21922					; 000055a2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1963 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN1@tactical_a

; 1964 : 			btn->SetCallback(tactical_make_flight);

	push	OFFSET ?tactical_make_flight@@YAXJFPAVC_Base@@@Z ; tactical_make_flight
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN1@tactical_a:

; 1965 : 
; 1966 : 		gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN7@tactical_a:
$LN20@tactical_a:

; 1967 : 	}
; 1968 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z ENDP	; tactical_add_flight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_pid$ = -276						; size = 8
$T2 = -268						; size = 8
$T3 = -260						; size = 8
$T4 = -252						; size = 8
$T5 = -244						; size = 8
$T6 = -236						; size = 8
$T7 = -228						; size = 8
$T8 = -220						; size = 8
$T9 = -212						; size = 8
_sid$ = -204						; size = 8
_uy$10 = -196						; size = 2
_error$ = -192						; size = 4
_acampid$ = -188					; size = 4
_done$ = -184						; size = 4
_cid$11 = -180						; size = 4
_unit$12 = -176						; size = 4
_item$13 = -172						; size = 4
_ac_type$ = -168					; size = 4
_atoflt$14 = -164					; size = 4
_scampid$ = -160					; size = 4
_y$ = -156						; size = 2
_ux$15 = -152						; size = 2
_num_vehicles$ = -148					; size = 4
_x$ = -144						; size = 2
_flights$ = -140					; size = 4
_tid$ = -136						; size = 4
_i$16 = -132						; size = 4
_target$ = -128						; size = 4
_start_at$ = -124					; size = 4
_urec$ = -120						; size = 4
_w$ = -116						; size = 4
_tree$17 = -112						; size = 4
_squadron$ = -108					; size = 4
_win$ = -104						; size = 4
_lbox$ = -100						; size = 4
_new_flight$ = -96					; size = 4
_mis$ = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tactical_make_flight@@YAXJFPAVC_Base@@@Z PROC		; tactical_make_flight

; 1972 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tactical_make_flight@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1973 : 	C_Window		*win;
; 1974 : 	UI_Refresher	*urec=NULL;

	mov	DWORD PTR _urec$[ebp], 0

; 1975 : 	Flight			new_flight=NULL;

	mov	DWORD PTR _new_flight$[ebp], 0

; 1976 : 	Squadron		squadron=NULL;

	mov	DWORD PTR _squadron$[ebp], 0

; 1977 : 	WayPoint		w;
; 1978 : 	C_ListBox		*lbox;
; 1979 : 	int				tid;
; 1980 : 	GridIndex		x,y;
; 1981 : 	int				num_vehicles=0,start_at=1,done=0,flights=0,error;

	mov	DWORD PTR _num_vehicles$[ebp], 0
	mov	DWORD PTR _start_at$[ebp], 1
	mov	DWORD PTR _done$[ebp], 0
	mov	DWORD PTR _flights$[ebp], 0

; 1982 : 	VU_ID			pid,sid;

	lea	ecx, DWORD PTR _pid$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	lea	ecx, DWORD PTR _sid$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1983 : 	long			scampid,acampid,ac_type=0;

	mov	DWORD PTR _ac_type$[ebp], 0

; 1984 : //	VehicleClassDataType	*vc=NULL;
; 1985 : 	CampEntity		target=NULL;

	mov	DWORD PTR _target$[ebp], 0

; 1986 : 	MissionRequestClass	mis;

	lea	ecx, DWORD PTR _mis$[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1987 : 
; 1988 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN64@tactical_m

; 1989 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN64@tactical_m:

; 1990 : 
; 1991 : 	gMainHandler->DisableWindowGroup(control->Parent_->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 1992 : 
; 1993 : 	// Create our package, if we don't current have one
; 1994 : 	if (!new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	jne	SHORT $LN63@tactical_m

; 1995 : 		tactical_make_package(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?tactical_make_package@@YAXJFPAVC_Base@@@Z ; tactical_make_package
	add	esp, 12					; 0000000cH
$LN63@tactical_m:

; 1996 : 
; 1997 : 	ShiAssert(new_package);
; 1998 : 	if (!new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	jne	SHORT $LN62@tactical_m

; 1999 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN62@tactical_m:

; 2000 : 
; 2001 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2002 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN61@tactical_m

; 2003 : 	{
; 2004 : 		lbox=(C_ListBox*)win->FindControl(TAC_AIRCRAFT_TYPE);

	push	40046					; 00009c6eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2005 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN60@tactical_m

; 2006 : 			ac_type=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _ac_type$[ebp], eax
$LN60@tactical_m:

; 2007 : 
; 2008 : 		lbox=(C_ListBox*)win->FindControl(TAC_SQUADRON_LIST);

	push	40050					; 00009c72H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2009 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN59@tactical_m

; 2010 : 		{
; 2011 : 			scampid=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _scampid$[ebp], eax

; 2012 : 			if(scampid == 1)

	cmp	DWORD PTR _scampid$[ebp], 1
	jne	SHORT $LN58@tactical_m

; 2013 : 			{
; 2014 : 				lbox=(C_ListBox*)win->FindControl(TAC_AIRBASE_LIST);

	push	40048					; 00009c70H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2015 : 				if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN57@tactical_m

; 2016 : 				{
; 2017 : 					acampid=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _acampid$[ebp], eax

; 2018 : 					urec=(UI_Refresher*)gGps->Find(acampid);

	mov	edx, DWORD PTR _acampid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 2019 : 					if(urec)

	cmp	DWORD PTR _urec$[ebp], 0
	je	SHORT $LN57@tactical_m

; 2020 : 						squadron = tactical_make_squadron (urec->GetID(),ac_type);

	mov	eax, DWORD PTR _ac_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?tactical_make_squadron@@YAPAVSquadronClass@@VVU_ID@@J@Z ; tactical_make_squadron
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _squadron$[ebp], eax
$LN57@tactical_m:

; 2021 : 				}
; 2022 : 			}
; 2023 : 			else

	jmp	SHORT $LN59@tactical_m
$LN58@tactical_m:

; 2024 : 			{
; 2025 : 				// Use this squadron
; 2026 : 				urec=(UI_Refresher*)gGps->Find(scampid);

	mov	ecx, DWORD PTR _scampid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 2027 : 				if(!urec)

	cmp	DWORD PTR _urec$[ebp], 0
	jne	SHORT $LN54@tactical_m

; 2028 : 				{
; 2029 : 					MonoPrint("Selected Squadron NOT found\n");

	push	OFFSET ??_C@_0BN@CJJCFJGN@Selected?5Squadron?5NOT?5found?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2030 : 					return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN54@tactical_m:

; 2031 : 				}
; 2032 : 				squadron=(Squadron)vuDatabase->Find(urec->GetID());

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _squadron$[ebp], eax
$LN59@tactical_m:

; 2033 : 			}
; 2034 : 		}
; 2035 : 		if (!squadron)

	cmp	DWORD PTR _squadron$[ebp], 0
	jne	SHORT $LN53@tactical_m

; 2036 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN53@tactical_m:

; 2037 : 
; 2038 : 		// Get our flight size
; 2039 : 		lbox = (C_ListBox *) win->FindControl (TAC_FLIGHT_SIZE);

	push	40042					; 00009c6aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2040 : 		if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN52@tactical_m

; 2041 : 			num_vehicles = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _num_vehicles$[ebp], eax
$LN52@tactical_m:

; 2042 : 		if (!num_vehicles)

	cmp	DWORD PTR _num_vehicles$[ebp], 0
	jne	SHORT $LN51@tactical_m

; 2043 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN51@tactical_m:

; 2044 : 
; 2045 : 		tactical_update_package();

	call	?tactical_update_package@@YAXXZ		; tactical_update_package

; 2046 : 
; 2047 : 		// Find our selected target
; 2048 : 		lbox = (C_ListBox *) win->FindControl (TARGET_LIST);

	push	40099					; 00009ca3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2049 : 		if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN50@tactical_m

; 2050 : 			{
; 2051 : 			int cid = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _cid$11[ebp], eax

; 2052 : 			if (cid < TAC_LOCATION)

	cmp	DWORD PTR _cid$11[ebp], 10000		; 00002710H
	jge	SHORT $LN49@tactical_m

; 2053 : 				target = GetEntityByCampID(cid);

	mov	eax, DWORD PTR _cid$11[ebp]
	push	eax
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _target$[ebp], eax

; 2054 : 			else

	jmp	SHORT $LN48@tactical_m
$LN49@tactical_m:

; 2055 : 				target = NULL;

	mov	DWORD PTR _target$[ebp], 0
$LN48@tactical_m:

; 2056 : 			// Set our package targe to our target if we're the first element
; 2057 : 			if (new_package && !new_package->GetFirstUnitElement())

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN50@tactical_m
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+996]
	call	eax
	test	eax, eax
	jne	SHORT $LN50@tactical_m

; 2058 : 				new_package_target = target;

	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, ecx ; new_package_target
$LN50@tactical_m:

; 2059 : 			}
; 2060 : 
; 2061 : 		lbox = (C_ListBox *) win->FindControl (START_AT_LIST);

	push	40100					; 00009ca4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2062 : 		if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN46@tactical_m

; 2063 : 			start_at = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _start_at$[ebp], eax
$LN46@tactical_m:

; 2064 : 
; 2065 : 		tid = GetClassID (DOMAIN_AIR,CLASS_UNIT,TYPE_FLIGHT,squadron->GetSType(),squadron->GetSPType(),0,0,0);

	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetSPType@CampBaseClass@@QBEEXZ	; CampBaseClass::GetSPType
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	eax, al
	push	eax
	push	1
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	DWORD PTR _tid$[ebp], eax

; 2066 : 		if (!tid)

	cmp	DWORD PTR _tid$[ebp], 0
	jne	SHORT $LN45@tactical_m

; 2067 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN45@tactical_m:

; 2068 : 
; 2069 : 		tid += VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _tid$[ebp]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _tid$[ebp], ecx

; 2070 : 		
; 2071 : // M.N. Set the squadron's pilot experience
; 2072 : 		int i;
; 2073 : 		for (i=0; i<PILOTS_PER_SQUADRON; i++)

	mov	DWORD PTR _i$16[ebp], 0
	jmp	SHORT $LN44@tactical_m
$LN43@tactical_m:
	mov	edx, DWORD PTR _i$16[ebp]
	add	edx, 1
	mov	DWORD PTR _i$16[ebp], edx
$LN44@tactical_m:
	cmp	DWORD PTR _i$16[ebp], 48		; 00000030H
	jge	SHORT $LN41@tactical_m

; 2074 : 		{
; 2075 : 			((Squadron)squadron)->GetPilotData(i)->SetTEPilotRating(gLastPilotSkill - 1);	// 0-4 = Recruit->Ace

	mov	eax, DWORD PTR ?gLastPilotSkill@@3HA	; gLastPilotSkill
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _i$16[ebp]
	push	ecx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ; SquadronClass::GetPilotData
	mov	ecx, eax
	call	?SetTEPilotRating@PilotClass@@QAEXE@Z	; PilotClass::SetTEPilotRating

; 2076 : 		}

	jmp	SHORT $LN43@tactical_m
$LN41@tactical_m:

; 2077 : 		
; 2078 : 		// Count current flights in package
; 2079 : 		while (new_package->GetUnitElement(flights))

	mov	edx, DWORD PTR _flights$[ebp]
	push	edx
	mov	eax, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx+888]
	call	eax
	test	eax, eax
	je	SHORT $LN40@tactical_m

; 2080 : 			flights++;

	mov	ecx, DWORD PTR _flights$[ebp]
	add	ecx, 1
	mov	DWORD PTR _flights$[ebp], ecx
	jmp	SHORT $LN41@tactical_m
$LN40@tactical_m:

; 2081 : 
; 2082 : 		// Add the new flight
; 2083 : 		new_flight = NewFlight(tid, new_package, squadron);

	mov	edx, DWORD PTR _squadron$[ebp]
	push	edx
	mov	eax, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	push	eax
	mov	ecx, DWORD PTR _tid$[ebp]
	push	ecx
	call	?NewFlight@@YAPAVFlightClass@@HPAVUnitClass@@0@Z ; NewFlight
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _new_flight$[ebp], eax

; 2084 : 		if (!new_flight)

	cmp	DWORD PTR _new_flight$[ebp], 0
	jne	SHORT $LN39@tactical_m

; 2085 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN39@tactical_m:

; 2086 : 
; 2087 : 		// Build the flight's mission request
; 2088 : 		mis = *(new_package->GetMissionRequest());

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, 19					; 00000013H
	mov	esi, eax
	lea	edi, DWORD PTR _mis$[ebp]
	rep movsd

; 2089 : 		mis.aircraft = static_cast<uchar>(num_vehicles);

	mov	dl, BYTE PTR _num_vehicles$[ebp]
	mov	BYTE PTR _mis$[ebp+61], dl

; 2090 : 		mis.priority = static_cast<short>(gPackagePriority);

	mov	ax, WORD PTR _gPackagePriority
	mov	WORD PTR _mis$[ebp+56], ax

; 2091 : 		lbox=(C_ListBox*)win->FindControl(TAC_ROLE);

	push	40036					; 00009c64H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2092 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN38@tactical_m

; 2093 : 			mis.mission = static_cast<uchar>(lbox->GetTextID());

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	BYTE PTR _mis$[ebp+60], al

; 2094 : 		else

	jmp	SHORT $LN37@tactical_m
$LN38@tactical_m:

; 2095 : 			mis.mission = AMIS_TRAINING;

	mov	BYTE PTR _mis$[ebp+60], 40		; 00000028H
$LN37@tactical_m:

; 2096 : 		if (!mis.tx || !mis.ty)

	movsx	ecx, WORD PTR _mis$[ebp+40]
	test	ecx, ecx
	je	SHORT $LN35@tactical_m
	movsx	edx, WORD PTR _mis$[ebp+42]
	test	edx, edx
	jne	SHORT $LN36@tactical_m
$LN35@tactical_m:

; 2097 : 			{
; 2098 : 			// This is probably a package being editing, and the target x,y have got nuked.
; 2099 : 			// We can get them from the package destination
; 2100 : 			new_package->GetUnitDestination(&mis.tx,&mis.ty);

	lea	eax, DWORD PTR _mis$[ebp+42]
	push	eax
	lea	ecx, DWORD PTR _mis$[ebp+40]
	push	ecx
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination
$LN36@tactical_m:

; 2101 : 			}
; 2102 : 
; 2103 : // 2001-04-07 HACK ADDED By S.G. IF WE ARE ADDING AN ECM FLIGHT, FLAG THE PACKAGE HAS HAVING ECM PROTECTION
; 2104 : // 2001-04-07 HACK ADDED By S.G. ALSO, WE MUST SET THE FLIGHT'S MISSION targetID TO WHATEVER TARGET WAS GIVEN IN 'target'
; 2105 : 		if (mis.mission == AMIS_ECM) {

	movzx	edx, BYTE PTR _mis$[ebp+60]
	cmp	edx, 31					; 0000001fH
	jne	SHORT $LN34@tactical_m

; 2106 : 			// Only if there's not already an ECM flight attached to it...
; 2107 : 			if (new_package->GetECM() == FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetECM@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetECM
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN34@tactical_m

; 2108 : 				new_package->SetECM(new_flight->Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetECM@PackageClass@@QAEXVVU_ID@@@Z	; PackageClass::SetECM
$LN34@tactical_m:

; 2109 : 		}
; 2110 : 
; 2111 : 		if (target)

	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN32@tactical_m

; 2112 : 			mis.targetID = target->Id();

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mis$[ebp+8], ecx
	mov	DWORD PTR _mis$[ebp+12], edx
$LN32@tactical_m:

; 2113 : // END OF ADDED SECTION
; 2114 : 
; 2115 : 		// Setup our 'fixed' time correctly
; 2116 : 		mis.tot = TheCampaign.CurrentTime;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR _mis$[ebp+36], eax

; 2117 : 		if (gPackageTOT)

	cmp	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	je	SHORT $LN31@tactical_m

; 2118 : 			{
; 2119 : 			// Locked time on target
; 2120 : 			mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$[ebp+58], 3

; 2121 : 			mis.tot = gPackageTOT;

	mov	ecx, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	mov	DWORD PTR _mis$[ebp+36], ecx
	jmp	SHORT $LN30@tactical_m
$LN31@tactical_m:

; 2122 : 			}
; 2123 : 		else if (start_at == 1)

	cmp	DWORD PTR _start_at$[ebp], 1
	jne	SHORT $LN29@tactical_m

; 2124 : 			{
; 2125 : 			mis.tot_type = TOT_TAKEOFF;

	mov	BYTE PTR _mis$[ebp+58], 10		; 0000000aH

; 2126 : 			if (gTakeoffTime)

	cmp	DWORD PTR ?gTakeoffTime@@3KA, 0		; gTakeoffTime
	je	SHORT $LN28@tactical_m

; 2127 : 				mis.tot = gTakeoffTime;

	mov	edx, DWORD PTR ?gTakeoffTime@@3KA	; gTakeoffTime
	mov	DWORD PTR _mis$[ebp+36], edx

; 2128 : 			else

	jmp	SHORT $LN27@tactical_m
$LN28@tactical_m:

; 2129 : 				mis.tot = TheCampaign.CurrentTime + CampaignMinutes;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	eax, 60000				; 0000ea60H
	mov	DWORD PTR _mis$[ebp+36], eax
$LN27@tactical_m:
	jmp	SHORT $LN30@tactical_m
$LN29@tactical_m:

; 2130 : 			}
; 2131 : 		else if (start_at == 2)

	cmp	DWORD PTR _start_at$[ebp], 2
	jne	SHORT $LN25@tactical_m

; 2132 : 			mis.tot_type = TOT_ENROUTE;

	mov	BYTE PTR _mis$[ebp+58], 11		; 0000000bH
	jmp	SHORT $LN30@tactical_m
$LN25@tactical_m:

; 2133 : 		else if (start_at == 3)

	cmp	DWORD PTR _start_at$[ebp], 3
	jne	SHORT $LN23@tactical_m

; 2134 : 			mis.tot_type = TOT_INGRESS;

	mov	BYTE PTR _mis$[ebp+58], 12		; 0000000cH

; 2135 : 		else

	jmp	SHORT $LN30@tactical_m
$LN23@tactical_m:

; 2136 : 			{
; 2137 : 			mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$[ebp+58], 3

; 2138 : 			mis.tot = TheCampaign.CurrentTime + CampaignMinutes;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	ecx, 60000				; 0000ea60H
	mov	DWORD PTR _mis$[ebp+36], ecx
$LN30@tactical_m:

; 2139 : 			}
; 2140 : 
; 2141 : 		if(!(TheCampaign.Flags & CAMP_TACTICAL_EDIT) && mis.tot < TheCampaign.CurrentTime)

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	jne	SHORT $LN21@tactical_m
	mov	eax, DWORD PTR _mis$[ebp+36]
	cmp	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	jae	SHORT $LN21@tactical_m

; 2142 : 			mis.tot = TheCampaign.CurrentTime + 3*CampaignSeconds;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	add	ecx, 3000				; 00000bb8H
	mov	DWORD PTR _mis$[ebp+36], ecx
$LN21@tactical_m:

; 2143 : 
; 2144 : 		// Adjust for additional flights (flights is # of previous flights in the package)
; 2145 : /*		if (MissionData[mis.mission].loitertime)
; 2146 : 			mis.tot += MissionData[mis.mission].loitertime * flights * CampaignMinutes;
; 2147 : 		else
; 2148 : 			mis.tot += (CampaignTime)((flights) * 10 *CampaignSeconds);
; 2149 : */
; 2150 : 		if (flights)

	cmp	DWORD PTR _flights$[ebp], 0
	je	SHORT $LN20@tactical_m

; 2151 : 			mis.tot += MissionData[mis.mission].separation * CampaignSeconds;

	movzx	edx, BYTE PTR _mis$[ebp+60]
	shl	edx, 5
	movsx	eax, WORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+14]
	imul	eax, 1000				; 000003e8H
	add	eax, DWORD PTR _mis$[ebp+36]
	mov	DWORD PTR _mis$[ebp+36], eax
$LN20@tactical_m:

; 2152 : 
; 2153 : 		// Set flight's location to home base for now
; 2154 : 		squadron->GetLocation (&x,&y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2155 : 		new_flight->SetLocation (x,y);

	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 2156 : 		new_flight->SetOwner (squadron->GetOwner ());

	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _new_flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_flight$[ebp]
	mov	eax, DWORD PTR [edx+320]
	call	eax

; 2157 : 		squadron->FindAvailableAircraft(&mis);

	lea	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?FindAvailableAircraft@SquadronClass@@QAEHPAVMissionRequestClass@@@Z ; SquadronClass::FindAvailableAircraft

; 2158 : 
; 2159 : 		if (mis.mission == AMIS_AIRCAV)

	movzx	edx, BYTE PTR _mis$[ebp+60]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN19@tactical_m

; 2160 : 			{
; 2161 : 			Unit		unit = (Unit) vuDatabase->Find(mis.requesterID);

	mov	eax, DWORD PTR _mis$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _unit$12[ebp], eax

; 2162 : 			GridIndex	ux,uy;
; 2163 : 			if (unit)

	cmp	DWORD PTR _unit$12[ebp], 0
	je	SHORT $LN18@tactical_m

; 2164 : 				{
; 2165 : 				unit->GetLocation(&ux,&uy);

	lea	edx, DWORD PTR _uy$10[ebp]
	push	edx
	lea	eax, DWORD PTR _ux$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$12[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2166 : 				mis.tx = static_cast<short>(ux + 20);

	movsx	ecx, WORD PTR _ux$15[ebp]
	add	ecx, 20					; 00000014H
	mov	WORD PTR _mis$[ebp+40], cx
$LN18@tactical_m:

; 2167 : 				}
; 2168 : 			if (start_at > 3)

	cmp	DWORD PTR _start_at$[ebp], 3
	jle	SHORT $LN19@tactical_m

; 2169 : 				mis.tot += 10 * CampaignMinutes; // Try and get us in front of our pickup point

	mov	edx, DWORD PTR _mis$[ebp+36]
	add	edx, 600000				; 000927c0H
	mov	DWORD PTR _mis$[ebp+36], edx
$LN19@tactical_m:

; 2170 : 			}
; 2171 : 
; 2172 : 		mis.flags |= REQF_ALLOW_ERRORS | REQF_TE_MISSION;

	mov	eax, DWORD PTR _mis$[ebp+44]
	or	eax, 6144				; 00001800H
	mov	DWORD PTR _mis$[ebp+44], eax

; 2173 : 		error = new_flight->BuildMission(&mis);

	lea	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _new_flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _new_flight$[ebp]
	mov	edx, DWORD PTR [eax+732]
	call	edx
	mov	DWORD PTR _error$[ebp], eax

; 2174 : 		if (error != PRET_SUCCESS)

	cmp	DWORD PTR _error$[ebp], 3
	je	SHORT $LN16@tactical_m

; 2175 : 			{
; 2176 : 			// Show an error message box notifying user this action was not able to be performed
; 2177 : 			// Errors are:	PRET_NO_ASSETS - The aircraft wern't available
; 2178 : 			//				PRET_ABORTED - Timing was impossible (takeoff before current time, for example)
; 2179 : 			MonoPrint("Error planning flight. Aborting\n");

	push	OFFSET ??_C@_0CB@CNFBLDPB@Error?5planning?5flight?4?5Aborting?6@
	call	_MonoPrint
	add	esp, 4

; 2180 : 			AreYouSure(TXT_FLIGHT_CANCELED,TXT_ERROR,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	242					; 000000f2H
	push	308					; 00000134H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2181 : 			new_package->CancelFlight(new_flight);

	mov	eax, DWORD PTR _new_flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight

; 2182 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN65@tactical_m
$LN16@tactical_m:

; 2183 : 			}
; 2184 : 
; 2185 : 		new_flight->SetUnitMissionTarget(mis.targetID);

	mov	ecx, DWORD PTR _mis$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _new_flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_flight$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax

; 2186 : 
; 2187 : 		// KCK: Traverse all waypoints and only lock the time of either the target or takeoff
; 2188 : 		w = new_flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN15@tactical_m:

; 2189 : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	$LN14@tactical_m

; 2190 : 			{
; 2191 : 			if (gTakeoffTime)

	cmp	DWORD PTR ?gTakeoffTime@@3KA, 0		; gTakeoffTime
	je	SHORT $LN13@tactical_m

; 2192 : 				{
; 2193 : 				if (w->GetWPAction() == WP_TAKEOFF)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 1
	jne	SHORT $LN12@tactical_m

; 2194 : 					w->SetWPFlag(WPF_TIME_LOCKED);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPFlag@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPFlag

; 2195 : 				else

	jmp	SHORT $LN11@tactical_m
$LN12@tactical_m:

; 2196 : 					w->UnSetWPFlag(WPF_TIME_LOCKED);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _w$[ebp]
	call	?UnSetWPFlag@WayPointClass@@QAEXK@Z	; WayPointClass::UnSetWPFlag
$LN11@tactical_m:

; 2197 : 				}
; 2198 : 			else

	jmp	SHORT $LN10@tactical_m
$LN13@tactical_m:

; 2199 : 				{
; 2200 : 				if ((w->GetWPFlags() & WPF_TARGET) && !done)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN9@tactical_m
	cmp	DWORD PTR _done$[ebp], 0
	jne	SHORT $LN9@tactical_m

; 2201 : 					{
; 2202 : 					w->SetWPFlag(WPF_TIME_LOCKED);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPFlag@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPFlag

; 2203 : 					done = 1;

	mov	DWORD PTR _done$[ebp], 1

; 2204 : 					}
; 2205 : 				else

	jmp	SHORT $LN10@tactical_m
$LN9@tactical_m:

; 2206 : 					w->UnSetWPFlag(WPF_TIME_LOCKED);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _w$[ebp]
	call	?UnSetWPFlag@WayPointClass@@QAEXK@Z	; WayPointClass::UnSetWPFlag
$LN10@tactical_m:

; 2207 : 				}
; 2208 : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 2209 : 			}

	jmp	$LN15@tactical_m
$LN14@tactical_m:

; 2210 : 
; 2211 : 		new_package->RecordFlightAddition(new_flight,&mis,0);

	push	0
	lea	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _new_flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition

; 2212 : 		new_flight->SetFinal(1);

	push	1
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 2213 : 		fixup_unit(new_flight);

	mov	eax, DWORD PTR _new_flight$[ebp]
	push	eax
	call	?fixup_unit@@YAXPAVUnitClass@@@Z	; fixup_unit
	add	esp, 4

; 2214 : 		gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 2215 : 
; 2216 : 		gMapMgr->SetCurrentWaypointList(new_flight->Id());

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList

; 2217 : 		SetupFlightSpecificControls(new_flight);

	mov	ecx, DWORD PTR _new_flight$[ebp]
	push	ecx
	call	?SetupFlightSpecificControls@@YAXPAVFlightClass@@@Z ; SetupFlightSpecificControls
	add	esp, 4

; 2218 : 		gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 2219 : 		gCurrentFlightID = new_flight->Id();

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, edx

; 2220 : 		gSelectedFlightID = new_flight->Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4, edx

; 2221 : 
; 2222 : 		if(WeAreAddingPackage)

	cmp	DWORD PTR ?WeAreAddingPackage@@3HA, 0	; WeAreAddingPackage
	je	$LN7@tactical_m

; 2223 : 		{
; 2224 : 			win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2225 : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@tactical_m

; 2226 : 			{
; 2227 : 				C_ATO_Flight *atoflt;
; 2228 : 				C_TreeList *tree;
; 2229 : 				TREELIST *item;
; 2230 : 				tree=(C_TreeList *)win->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$17[ebp], eax

; 2231 : 				if(tree)

	cmp	DWORD PTR _tree$17[ebp], 0
	je	$LN5@tactical_m

; 2232 : 				{
; 2233 : 					tree->SetCallback(tactical_new_flight_select);

	push	OFFSET ?tactical_new_flight_select@@YAXJFPAVC_Base@@@Z ; tactical_new_flight_select
	mov	eax, DWORD PTR _tree$17[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$17[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2234 : 
; 2235 : 					atoflt=BuildATOFlightInfo(new_flight);

	mov	ecx, DWORD PTR _new_flight$[ebp]
	push	ecx
	call	?BuildATOFlightInfo@@YAPAVC_ATO_Flight@@PAVFlightClass@@@Z ; BuildATOFlightInfo
	add	esp, 4
	mov	DWORD PTR _atoflt$14[ebp], eax

; 2236 : 					if(atoflt)

	cmp	DWORD PTR _atoflt$14[ebp], 0
	je	SHORT $LN4@tactical_m

; 2237 : 					{
; 2238 : 						item=tree->CreateItem(new_flight->GetCampID(),C_TYPE_ITEM,atoflt);

	mov	edx, DWORD PTR _atoflt$14[ebp]
	push	edx
	push	50					; 00000032H
	mov	eax, DWORD PTR _new_flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _new_flight$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _tree$17[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$13[ebp], eax

; 2239 : 						if(item)

	cmp	DWORD PTR _item$13[ebp], 0
	je	SHORT $LN4@tactical_m

; 2240 : 							tree->AddItem (tree->GetRoot (), item);

	mov	edx, DWORD PTR _item$13[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$17[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$17[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN4@tactical_m:

; 2241 : 					}
; 2242 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$17[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2243 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$17[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$17[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 2244 : 				}
; 2245 : 				else

	jmp	SHORT $LN6@tactical_m
$LN5@tactical_m:

; 2246 : 					new_package->SetLocation (MapX, MapY);

	movzx	edx, WORD PTR ?MapY@@3FA		; MapY
	push	edx
	movzx	eax, WORD PTR ?MapX@@3FA		; MapX
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation
$LN6@tactical_m:

; 2247 : 			}
; 2248 : 		}
; 2249 : 		else

	jmp	SHORT $LN61@tactical_m
$LN7@tactical_m:

; 2250 : 		{
; 2251 : 			new_package->SetFinal(1);

	push	1
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 2252 : 			new_package=NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
$LN61@tactical_m:

; 2253 : 		}
; 2254 : 	}
; 2255 : 	display_air_units(new_flight);

	mov	ecx, DWORD PTR _new_flight$[ebp]
	push	ecx
	call	?display_air_units@@YAXPAVUnitClass@@@Z	; display_air_units
	add	esp, 4

; 2256 : 	new_flight=NULL;

	mov	DWORD PTR _new_flight$[ebp], 0

; 2257 : // MN 2002-01-04 show up the flight faster
; 2258 : //	RefreshMapOnChange();
; 2259 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
$LN65@tactical_m:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tactical_make_flight@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _mis$[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$?tactical_make_flight@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tactical_make_flight@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tactical_make_flight@@YAXJFPAVC_Base@@@Z ENDP		; tactical_make_flight
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T2 = -116						; size = 8
_type$ = -108						; size = 4
_lbox$ = -104						; size = 4
_win$ = -100						; size = 4
_tree$ = -96						; size = 4
_mis$3 = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_make_package@@YAXJFPAVC_Base@@@Z PROC		; tactical_make_package

; 1507 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tactical_make_package@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1508 : 	C_Window *win;
; 1509 : 	C_ListBox *lbox;
; 1510 : 	C_TreeList *tree;
; 1511 : 	long type=0;//start_day=0,;

	mov	DWORD PTR _type$[ebp], 0

; 1512 : 
; 1513 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN9@tactical_m

; 1514 : 		return;

	jmp	$LN10@tactical_m
$LN9@tactical_m:

; 1515 : 
; 1516 : 	win=gMainHandler->FindWindow(PACKAGE_WIN);

	push	40075					; 00009c8bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1517 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@tactical_m

; 1518 : 	{
; 1519 : 		// Clear any previous lists
; 1520 : 		gNewSelectFlight=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, edx

; 1521 : 		tree=(C_TreeList *)win->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1522 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN7@tactical_m

; 1523 : 		{
; 1524 : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1525 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1526 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN7@tactical_m:

; 1527 : 		}
; 1528 : 
; 1529 : 		// Find type
; 1530 : 		lbox=(C_ListBox *)win->FindControl(TAC_PACKAGE_TYPE);

	push	40040					; 00009c68H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1531 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN6@tactical_m

; 1532 : 			type = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _type$[ebp], eax
$LN6@tactical_m:

; 1533 : 
; 1534 : 		new_package = (Package) NewUnit	(DOMAIN_AIR,TYPE_PACKAGE,0,0,NULL);

	push	0
	push	0
	push	0
	push	2
	push	2
	call	?NewUnit@@YAPAVUnitClass@@HHHHPAV1@@Z	; NewUnit
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, eax ; new_package

; 1535 : 
; 1536 : 		if (new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	$LN10@tactical_m

; 1537 : 		{
; 1538 : 			MissionRequestClass	mis;

	lea	ecx, DWORD PTR _mis$3[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1539 : 
; 1540 : 			// Set up our mission request
; 1541 : 			mis.who = gSelectedTeam;

	mov	dl, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	mov	BYTE PTR _mis$3[ebp+32], dl

; 1542 : 			if (new_package_target)

	cmp	DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A, 0 ; new_package_target
	je	SHORT $LN4@tactical_m

; 1543 : 				{
; 1544 : 				mis.targetID = mis.requesterID = new_package_target->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mis$3[ebp], ecx
	mov	DWORD PTR _mis$3[ebp+4], edx
	mov	eax, DWORD PTR _mis$3[ebp]
	mov	DWORD PTR _mis$3[ebp+8], eax
	mov	ecx, DWORD PTR _mis$3[ebp+4]
	mov	DWORD PTR _mis$3[ebp+12], ecx

; 1545 : 				if (new_package_target->IsObjective())

	mov	edx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN3@tactical_m

; 1546 : 					mis.target_num = ((Objective)new_package_target)->GetBestTarget();

	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	call	?GetBestTarget@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetBestTarget
	movzx	ax, al
	mov	WORD PTR _mis$3[ebp+50], ax
$LN3@tactical_m:

; 1547 : 				mis.vs = new_package_target->GetTeam();

	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?new_package_target@@3PAVCampBaseClass@@A ; new_package_target
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _mis$3[ebp+33], al
$LN4@tactical_m:

; 1548 : 				}
; 1549 : 			mis.tot = gPackageTOT;

	mov	ecx, DWORD PTR ?gPackageTOT@@3KA	; gPackageTOT
	mov	DWORD PTR _mis$3[ebp+36], ecx

; 1550 : 			if (gPackageTOT)

	cmp	DWORD PTR ?gPackageTOT@@3KA, 0		; gPackageTOT
	je	SHORT $LN2@tactical_m

; 1551 : 				mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$3[ebp+58], 3

; 1552 : 			else

	jmp	SHORT $LN1@tactical_m
$LN2@tactical_m:

; 1553 : 				mis.tot_type = TYPE_NE;

	mov	BYTE PTR _mis$3[ebp+58], 0
$LN1@tactical_m:

; 1554 : 			mis.tx = MapX;

	mov	dx, WORD PTR ?MapX@@3FA			; MapX
	mov	WORD PTR _mis$3[ebp+40], dx

; 1555 : 			mis.ty = MapY;

	mov	ax, WORD PTR ?MapY@@3FA			; MapY
	mov	WORD PTR _mis$3[ebp+42], ax

; 1556 : 			mis.mission = static_cast<uchar>(type);

	mov	cl, BYTE PTR _type$[ebp]
	mov	BYTE PTR _mis$3[ebp+60], cl

; 1557 : 			mis.priority = static_cast<short>(gPackagePriority);

	mov	dx, WORD PTR _gPackagePriority
	mov	WORD PTR _mis$3[ebp+56], dx

; 1558 : 			mis.aircraft = 2;

	mov	BYTE PTR _mis$3[ebp+61], 2

; 1559 : 			mis.flags |= REQF_ALLOW_ERRORS | REQF_TE_MISSION;

	mov	eax, DWORD PTR _mis$3[ebp+44]
	or	eax, 6144				; 00001800H
	mov	DWORD PTR _mis$3[ebp+44], eax

; 1560 : 
; 1561 : 			new_package->SetUnitDestination(MapX,MapY);

	movzx	ecx, WORD PTR ?MapY@@3FA		; MapY
	push	ecx
	movzx	edx, WORD PTR ?MapX@@3FA		; MapX
	push	edx
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination

; 1562 : 			new_package->SetLocation(MapX,MapY);

	movzx	eax, WORD PTR ?MapY@@3FA		; MapY
	push	eax
	movzx	ecx, WORD PTR ?MapX@@3FA		; MapX
	push	ecx
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1563 : 			*(new_package->GetMissionRequest()) = mis;

	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, 19					; 00000013H
	lea	esi, DWORD PTR _mis$3[ebp]
	mov	edi, eax
	rep movsd

; 1564 : 			new_package->SetPackageFlags(MissionData[mis.mission].flags);

	movzx	edx, BYTE PTR _mis$3[ebp+60]
	shl	edx, 5
	mov	eax, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+28]
	push	eax
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetPackageFlags@PackageClass@@QAEXK@Z	; PackageClass::SetPackageFlags

; 1565 : 			new_package->SetFinal(0);

	push	0
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 1566 : 			new_package->SetOwner (gSelectedTeam);

	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	ecx
	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+320]
	call	edx

; 1567 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$3[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
$LN10@tactical_m:

; 1568 : 	}
; 1569 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tactical_make_package@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _mis$3[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$?tactical_make_package@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tactical_make_package@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tactical_make_package@@YAXJFPAVC_Base@@@Z ENDP		; tactical_make_package
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_flt$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?tactical_cancel_package@@YAXJFPAVC_Base@@@Z PROC	; tactical_cancel_package

; 2308 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2309 : 	Flight flt;
; 2310 : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@tactical_c

; 2311 : 	{
; 2312 : 		return;

	jmp	$LN6@tactical_c
$LN5@tactical_c:

; 2313 : 	}
; 2314 : 
; 2315 : 	gMainHandler->DisableWindowGroup (ctrl->Parent_->GetGroup());

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 2316 : 
; 2317 : //  Delete the unwanted package
; 2318 : 	if (new_package)

	cmp	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
	je	SHORT $LN4@tactical_c

; 2319 : 	{
; 2320 : 		flt=(Flight)new_package->GetFirstUnitElement();

	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+996]
	call	edx
	mov	DWORD PTR _flt$[ebp], eax
$LN3@tactical_c:

; 2321 : 		while(flt)

	cmp	DWORD PTR _flt$[ebp], 0
	je	SHORT $LN2@tactical_c

; 2322 : 		{
; 2323 : 			if(flt->IsFlight())

	mov	eax, DWORD PTR _flt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN1@tactical_c

; 2324 : 			{
; 2325 : 				RegroupFlight(flt);

	mov	ecx, DWORD PTR _flt$[ebp]
	push	ecx
	call	?RegroupFlight@@YAHPAVFlightClass@@@Z	; RegroupFlight
	add	esp, 4

; 2326 : 				flt=(Flight)new_package->GetNextUnitElement();

	mov	edx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?new_package@@3PAVPackageClass@@A ; new_package
	mov	edx, DWORD PTR [eax+1000]
	call	edx
	mov	DWORD PTR _flt$[ebp], eax
$LN1@tactical_c:

; 2327 : 			}
; 2328 : 		}

	jmp	SHORT $LN3@tactical_c
$LN2@tactical_c:

; 2329 : 		new_package = NULL;

	mov	DWORD PTR ?new_package@@3PAVPackageClass@@A, 0 ; new_package
$LN4@tactical_c:

; 2330 : 	}
; 2331 : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update
$LN6@tactical_c:

; 2332 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_cancel_package@@YAXJFPAVC_Base@@@Z ENDP	; tactical_cancel_package
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_win$ = -8						; size = 4
_airbase$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_squadron_airbase@@YAXJFPAVC_Base@@@Z PROC	; tac_select_squadron_airbase

; 661  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 662  : 	C_Window		*win;
; 663  : 	CampBaseClass*	airbase;
; 664  : 
; 665  : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN3@tac_select

; 666  : 		return;

	jmp	$LN4@tac_select
$LN3@tac_select:

; 667  : 
; 668  : 	win=gMainHandler->FindWindow(NEW_SQUAD_WIN);

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 669  : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN2@tac_select

; 670  : 		return;

	jmp	SHORT $LN4@tac_select
$LN2@tac_select:

; 671  : 
; 672  : 	airbase = GetEntityByCampID(((C_ListBox*)control)->GetTextID());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _airbase$[ebp], eax

; 673  : 	if (airbase && airbase->IsObjective() && airbase->GetType() == TYPE_AIRBASE)

	cmp	DWORD PTR _airbase$[ebp], 0
	je	SHORT $LN4@tac_select
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN4@tac_select
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 1
	jne	SHORT $LN4@tac_select

; 674  : 		{
; 675  : 		gLastAirbaseID = airbase->Id();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?gLastAirbaseID@@3VVU_ID@@A+4, edx

; 676  : 		gLastAirbase = airbase->GetCampID();

	mov	eax, DWORD PTR _airbase$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _airbase$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	DWORD PTR ?gLastAirbase@@3HA, ecx	; gLastAirbase
$LN4@tac_select:

; 677  : 		}
; 678  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_squadron_airbase@@YAXJFPAVC_Base@@@Z ENDP	; tac_select_squadron_airbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_squadron_aircraft@@YAXJFPAVC_Base@@@Z PROC	; tac_select_squadron_aircraft

; 647  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 648  : 	C_Window	*win;
; 649  : 
; 650  : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@tac_select

; 651  : 		return;

	jmp	SHORT $LN3@tac_select
$LN2@tac_select:

; 652  : 
; 653  : 	win=gMainHandler->FindWindow(NEW_SQUAD_WIN);

	push	31000					; 00007918H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 654  : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN1@tac_select

; 655  : 		return;

	jmp	SHORT $LN3@tac_select
$LN1@tac_select:

; 656  : 
; 657  : 	gLastAircraftType = ((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?gLastAircraftType@@3HA, eax	; gLastAircraftType
$LN3@tac_select:

; 658  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_squadron_aircraft@@YAXJFPAVC_Base@@@Z ENDP	; tac_select_squadron_aircraft
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T2 = -208						; size = 8
_ait$3 = -200						; size = 12
_urec$ = -188						; size = 4
_dsq$4 = -184						; size = 4
_bdsq$5 = -180						; size = 4
_win$ = -176						; size = 4
_x$6 = -172						; size = 2
_y$7 = -168						; size = 2
_sqd$ = -164						; size = 4
_airbase$8 = -160					; size = 4
_lbox$ = -156						; size = 4
_o$9 = -152						; size = 4
_name$10 = -148						; size = 80
_buffer$ = -68						; size = 50
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_squadron@@YAXJFPAVC_Base@@@Z PROC		; tac_select_squadron

; 1747 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tac_select_squadron@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 196				; 000000c4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1748 : 	C_ListBox *lbox;
; 1749 : 	UI_Refresher *urec;
; 1750 : 	Squadron sqd;
; 1751 : 	C_Window *win;
; 1752 : 	_TCHAR buffer[50];
; 1753 : 
; 1754 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN14@tac_select

; 1755 : 		return;

	jmp	$LN15@tac_select
$LN14@tac_select:

; 1756 : 
; 1757 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1758 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN13@tac_select

; 1759 : 		return;

	jmp	$LN15@tac_select
$LN13@tac_select:

; 1760 : 
; 1761 : 	ID=((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _ID$[ebp], eax

; 1762 : 
; 1763 : 	// Now setup the airbase list
; 1764 : 	lbox=(C_ListBox*)win->FindControl(TAC_AIRBASE_LIST);

	push	40048					; 00009c70H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1765 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN12@tac_select

; 1766 : 		{
; 1767 : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1768 : 		// If we have a specific squadron selected, just show this airbase)
; 1769 : 		if (ID > 1)

	cmp	DWORD PTR _ID$[ebp], 1
	jle	$LN11@tac_select

; 1770 : 			{
; 1771 : 			CampEntity	airbase;
; 1772 : 
; 1773 : 			urec=(UI_Refresher*)gGps->Find(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 1774 : 			if(urec)

	cmp	DWORD PTR _urec$[ebp], 0
	je	SHORT $LN10@tac_select

; 1775 : 				sqd=(Squadron)vuDatabase->Find(urec->GetID());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sqd$[ebp], eax

; 1776 : 			else

	jmp	SHORT $LN9@tac_select
$LN10@tac_select:

; 1777 : 				sqd=NULL;

	mov	DWORD PTR _sqd$[ebp], 0
$LN9@tac_select:

; 1778 : 			if(sqd) // Don't use sqd if NULL

	cmp	DWORD PTR _sqd$[ebp], 0
	je	$LN7@tac_select

; 1779 : 			{
; 1780 : 				airbase = sqd->GetUnitAirbase();

	mov	eax, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _airbase$8[ebp], eax

; 1781 : 				//if(airbase)
; 1782 : 				if(airbase && !F4IsBadReadPtr(airbase, sizeof(CampBaseClass))) // JB 010326 CTD

	cmp	DWORD PTR _airbase$8[ebp], 0
	je	$LN7@tac_select
	push	184					; 000000b8H
	mov	ecx, DWORD PTR _airbase$8[ebp]
	push	ecx
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@tac_select

; 1783 : 				{
; 1784 : 					airbase->GetName(buffer,40,TRUE);

	push	1
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _airbase$8[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _airbase$8[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1785 : 					lbox->AddItem(airbase->GetCampID(),C_TYPE_ITEM,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _airbase$8[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _airbase$8[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1786 : 					lbox->SetValue(airbase->GetCampID());

	mov	ecx, DWORD PTR _airbase$8[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _airbase$8[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN7@tac_select:

; 1787 : 				}
; 1788 : 			}
; 1789 : 			}
; 1790 : 		// Otherwise, show all airbases owned by our team
; 1791 : 		else

	jmp	$LN6@tac_select
$LN11@tac_select:

; 1792 : 			{
; 1793 : 			VuListIterator	ait(AllObjList);

	mov	edx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	edx
	lea	ecx, DWORD PTR _ait$3[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1794 : 			Objective		o;
; 1795 : 			_TCHAR			name[80];
; 1796 : 			GridIndex		x,y;
; 1797 : 			float			dsq,bdsq=FLT_MAX;

	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR _bdsq$5[ebp], xmm0

; 1798 : 
; 1799 : 			o = (Objective) ait.GetFirst();

	lea	ecx, DWORD PTR _ait$3[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$9[ebp], eax
$LN5@tac_select:

; 1800 : 			while (o)

	cmp	DWORD PTR _o$9[ebp], 0
	je	$LN4@tac_select

; 1801 : 				{
; 1802 : 				if (o->GetType() == TYPE_AIRBASE && GetRoE(gSelectedTeam,o->GetTeam(),ROE_AIR_USE_BASES) == ROE_ALLOWED)

	mov	ecx, DWORD PTR _o$9[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 1
	jne	$LN1@tac_select
	push	9
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	$LN1@tac_select

; 1803 : 					{
; 1804 : 					// Add airbase name to listbox
; 1805 : 					o->GetName(name,79,TRUE);

	push	1
	push	79					; 0000004fH
	lea	eax, DWORD PTR _name$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1806 : 					lbox->AddItem(o->GetCampID(),C_TYPE_ITEM,name);

	lea	ecx, DWORD PTR _name$10[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _o$9[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1807 : 					o->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$7[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$9[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1808 : 					dsq = static_cast<float>(DistSqu(MapX,MapY,x,y));

	movzx	eax, WORD PTR _y$7[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$6[ebp]
	push	ecx
	movzx	edx, WORD PTR ?MapY@@3FA		; MapY
	push	edx
	movzx	eax, WORD PTR ?MapX@@3FA		; MapX
	push	eax
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dsq$4[ebp], xmm0

; 1809 : 					if (dsq < bdsq)

	movss	xmm0, DWORD PTR _bdsq$5[ebp]
	comiss	xmm0, DWORD PTR _dsq$4[ebp]
	jbe	SHORT $LN2@tac_select

; 1810 : 						{
; 1811 : 						gLastAirbase = o->GetCampID();

	mov	ecx, DWORD PTR _o$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	DWORD PTR ?gLastAirbase@@3HA, ecx	; gLastAirbase

; 1812 : 						bdsq = dsq;

	movss	xmm0, DWORD PTR _dsq$4[ebp]
	movss	DWORD PTR _bdsq$5[ebp], xmm0
$LN2@tac_select:

; 1813 : 						}
; 1814 : 					if (o->GetCampID() == gLastAirbase)

	mov	edx, DWORD PTR _o$9[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$9[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	cmp	eax, DWORD PTR ?gLastAirbase@@3HA	; gLastAirbase
	jne	SHORT $LN1@tac_select

; 1815 : 						lbox->SetValue(gLastAirbase);

	mov	ecx, DWORD PTR ?gLastAirbase@@3HA	; gLastAirbase
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN1@tac_select:

; 1816 : 					}
; 1817 : 				o = (Objective) ait.GetNext();

	lea	ecx, DWORD PTR _ait$3[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$9[ebp], eax

; 1818 : 				}

	jmp	$LN5@tac_select
$LN4@tac_select:

; 1819 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ait$3[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN6@tac_select:

; 1820 : 		gLastAirbase = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?gLastAirbase@@3HA, eax	; gLastAirbase

; 1821 : 		lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN12@tac_select:
$LN15@tac_select:

; 1822 : 		}
; 1823 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tac_select_squadron@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _ait$3[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?tac_select_squadron@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-200]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tac_select_squadron@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tac_select_squadron@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_squadron
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_cid$ = -8						; size = 4
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_target@@YAXJFPAVC_Base@@@Z PROC		; tac_select_target

; 1837 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1838 : 	C_ListBox *lbox;
; 1839 : 	int cid;
; 1840 : 
; 1841 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN3@tac_select

; 1842 : 		return;

	jmp	SHORT $LN4@tac_select
$LN3@tac_select:

; 1843 : 
; 1844 : 	lbox=(C_ListBox*)control->Parent_->FindControl(TARGET_LIST);

	push	40099					; 00009ca3H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1845 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@tac_select

; 1846 : 		{
; 1847 : 		cid = lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _cid$[ebp], eax

; 1848 : 		if (cid < TAC_LOCATION)

	cmp	DWORD PTR _cid$[ebp], 10000		; 00002710H
	jge	SHORT $LN4@tac_select

; 1849 : 			gLastTarget = GetEntityByCampID(cid);

	mov	edx, DWORD PTR _cid$[ebp]
	push	edx
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A, eax ; gLastTarget
$LN4@tac_select:

; 1850 : 		}
; 1851 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tac_select_target@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_target
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_cit$2 = -168						; size = 12
_win$ = -156						; size = 4
_mission$ = -152					; size = 4
_gott$3 = -148						; size = 4
_lbox$ = -144						; size = 4
_ent$4 = -140						; size = 4
_tmp$5 = -136						; size = 40
_buffer$6 = -96						; size = 80
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tac_select_role@@YAXJFPAVC_Base@@@Z PROC		; tac_select_role

; 1682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tac_select_role@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1683 : 	C_ListBox *lbox;
; 1684 : 	C_Window *win;
; 1685 : 	int	mission;
; 1686 : 
; 1687 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN14@tac_select

; 1688 : 		return;

	jmp	$LN15@tac_select
$LN14@tac_select:

; 1689 : 
; 1690 : 	win=gMainHandler->FindWindow(TAC_FLIGHT_WIN);

	push	40035					; 00009c63H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1691 : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN13@tac_select

; 1692 : 		return;

	jmp	$LN15@tac_select
$LN13@tac_select:

; 1693 : 
; 1694 : 	gLastRole = mission = ((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _mission$[ebp], eax
	mov	ecx, DWORD PTR _mission$[ebp]
	mov	DWORD PTR ?gLastRole@@3HA, ecx		; gLastRole

; 1695 : 
; 1696 : 	// Setup target listbox (based off of role)
; 1697 : 	lbox=(C_ListBox *)win->FindControl(TARGET_LIST);

	push	40099					; 00009ca3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1698 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN15@tac_select

; 1699 : 		{
; 1700 : 		VuListIterator	cit(AllCampList);

	mov	edx, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	push	edx
	lea	ecx, DWORD PTR _cit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1701 : 		CampEntity		ent;
; 1702 : 		_TCHAR			buffer[80] = {0};

	mov	BYTE PTR _buffer$6[ebp], 0
	push	79					; 0000004fH
	push	0
	lea	eax, DWORD PTR _buffer$6[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1703 : 		int				gott=0;

	mov	DWORD PTR _gott$3[ebp], 0

; 1704 : 
; 1705 : 		// Clear old targets
; 1706 : 		lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 1707 : 		// Check for location target
; 1708 : 		if (IsValidTarget(gSelectedTeam, mission, NULL))

	push	0
	mov	ecx, DWORD PTR _mission$[ebp]
	push	ecx
	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	edx
	call	?IsValidTarget@@YAHEHPAVCampBaseClass@@@Z ; IsValidTarget
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN11@tac_select

; 1709 : 			{
; 1710 : 			AddLocationToBuffer ('n', MapX, MapY, buffer);

	lea	eax, DWORD PTR _buffer$6[ebp]
	push	eax
	movzx	ecx, WORD PTR ?MapY@@3FA		; MapY
	push	ecx
	movzx	edx, WORD PTR ?MapX@@3FA		; MapX
	push	edx
	push	110					; 0000006eH
	call	?AddLocationToBuffer@@YAXDFFPAD@Z	; AddLocationToBuffer
	add	esp, 16					; 00000010H

; 1711 : 			lbox->AddItem(TAC_LOCATION,C_TYPE_ITEM,buffer);

	lea	eax, DWORD PTR _buffer$6[ebp]
	push	eax
	push	50					; 00000032H
	push	10000					; 00002710H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1712 : 			if (!gLastTarget)

	cmp	DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A, 0 ; gLastTarget
	jne	SHORT $LN10@tac_select

; 1713 : 				lbox->SetValue(TAC_LOCATION);

	push	10000					; 00002710H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN10@tac_select:

; 1714 : 			gott++;

	mov	ecx, DWORD PTR _gott$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _gott$3[ebp], ecx
$LN11@tac_select:

; 1715 : 			}
; 1716 : 		// Check all entities
; 1717 : 		ent = (CampEntity) cit.GetFirst();

	lea	ecx, DWORD PTR _cit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _ent$4[ebp], eax
$LN9@tac_select:

; 1718 : 		while (ent)

	cmp	DWORD PTR _ent$4[ebp], 0
	je	$LN8@tac_select

; 1719 : 			{
; 1720 : 			if (IsValidTarget(gSelectedTeam,mission,ent))

	mov	edx, DWORD PTR _ent$4[ebp]
	push	edx
	mov	eax, DWORD PTR _mission$[ebp]
	push	eax
	movzx	ecx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	ecx
	call	?IsValidTarget@@YAHEHPAVCampBaseClass@@@Z ; IsValidTarget
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN7@tac_select

; 1721 : 				{
; 1722 : 				if (ent->IsFlight())

	mov	edx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN6@tac_select

; 1723 : 					GetCallsign (((Flight)ent)->callsign_id, ((Flight)ent)->callsign_num, buffer);

	lea	eax, DWORD PTR _buffer$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$4[ebp]
	movzx	edx, BYTE PTR [ecx+426]
	push	edx
	mov	eax, DWORD PTR _ent$4[ebp]
	movzx	ecx, BYTE PTR [eax+425]
	push	ecx
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@tac_select
$LN6@tac_select:

; 1724 : 				else if (ent->IsObjective())

	mov	edx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN4@tac_select

; 1725 : 					ent->GetName(buffer,79,TRUE);

	push	1
	push	79					; 0000004fH
	lea	eax, DWORD PTR _buffer$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1726 : 				else

	jmp	SHORT $LN5@tac_select
$LN4@tac_select:

; 1727 : 					ent->GetName(buffer,79,FALSE);

	push	0
	push	79					; 0000004fH
	lea	ecx, DWORD PTR _buffer$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx
$LN5@tac_select:

; 1728 : 				lbox->AddItem(ent->GetCampID(),C_TYPE_ITEM,buffer);

	lea	eax, DWORD PTR _buffer$6[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1729 : 				if (ent == gLastTarget)

	mov	edx, DWORD PTR _ent$4[ebp]
	cmp	edx, DWORD PTR ?gLastTarget@@3PAVCampBaseClass@@A ; gLastTarget
	jne	SHORT $LN2@tac_select

; 1730 : 					lbox->SetValue(ent->GetCampID());

	mov	eax, DWORD PTR _ent$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$4[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN2@tac_select:

; 1731 : 				gott++;

	mov	edx, DWORD PTR _gott$3[ebp]
	add	edx, 1
	mov	DWORD PTR _gott$3[ebp], edx
$LN7@tac_select:

; 1732 : 				}
; 1733 : 			ent = (CampEntity) cit.GetNext();

	lea	ecx, DWORD PTR _cit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _ent$4[ebp], eax

; 1734 : 			}

	jmp	$LN9@tac_select
$LN8@tac_select:

; 1735 : 		if (!gott)

	cmp	DWORD PTR _gott$3[ebp], 0
	jne	SHORT $LN1@tac_select

; 1736 : 			{
; 1737 : 			_TCHAR	tmp[40];
; 1738 : 			ReadIndexedString(257,tmp,39);

	push	39					; 00000027H
	lea	eax, DWORD PTR _tmp$5[ebp]
	push	eax
	push	257					; 00000101H
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 1739 : 			lbox->AddItem(TAC_NOTARGET,C_TYPE_ITEM,tmp);

	lea	ecx, DWORD PTR _tmp$5[ebp]
	push	ecx
	push	50					; 00000032H
	push	10001					; 00002711H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 1740 : 			lbox->SetValue(TAC_NOTARGET);

	push	10001					; 00002711H
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN1@tac_select:

; 1741 : 			}
; 1742 : 		lbox->SetCallback(tac_select_target);

	push	OFFSET ?tac_select_target@@YAXJFPAVC_Base@@@Z ; tac_select_target
	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1743 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN15@tac_select:

; 1744 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tac_select_role@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _cit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?tac_select_role@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tac_select_role@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tac_select_role@@YAXJFPAVC_Base@@@Z ENDP		; tac_select_role
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_tree$ = -8						; size = 4
_flt$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?DeleteFlightFromPackage@@YAXJFPAVC_Base@@@Z PROC	; DeleteFlightFromPackage

; 1423 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1424 : 	Flight flt;
; 1425 : 	C_TreeList *tree;
; 1426 : 
; 1427 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@DeleteFlig

; 1428 : 		return;

	jmp	$LN4@DeleteFlig
$LN3@DeleteFlig:

; 1429 : 
; 1430 : 	tree=(C_TreeList*)control->Parent_->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1431 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN4@DeleteFlig

; 1432 : 	{
; 1433 : 		flt=(Flight)vuDatabase->Find(gNewSelectFlight);

	mov	edx, DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flt$[ebp], eax

; 1434 : 		if(flt)

	cmp	DWORD PTR _flt$[ebp], 0
	je	$LN4@DeleteFlig

; 1435 : 		{
; 1436 : 			tree->DeleteItem(flt->GetCampID());

	mov	ecx, DWORD PTR _flt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flt$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXJ@Z		; C_TreeList::DeleteItem

; 1437 : 			//flt->DisposeWayPoints();
; 1438 : 			gMapMgr->SetCurrentWaypointList(flt->Id());

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _flt$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetCurrentWaypointList@C_Map@@QAEHVVU_ID@@@Z ; C_Map::SetCurrentWaypointList

; 1439 : 			RegroupFlight(flt);

	mov	eax, DWORD PTR _flt$[ebp]
	push	eax
	call	?RegroupFlight@@YAHPAVFlightClass@@@Z	; RegroupFlight
	add	esp, 4

; 1440 : 			flt->Remove();

	mov	ecx, DWORD PTR _flt$[ebp]
	call	?Remove@CampBaseClass@@QAEHXZ		; CampBaseClass::Remove

; 1441 : 			gNewSelectFlight=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gNewSelectFlight@@3VVU_ID@@A+4, edx

; 1442 : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1443 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DeleteFlig:

; 1444 : 		}
; 1445 : 	}
; 1446 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteFlightFromPackage@@YAXJFPAVC_Base@@@Z ENDP	; DeleteFlightFromPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\urefresh.h
;	COMDAT ?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ PROC		; UI_Refresher::GetID, COMDAT
; _this$ = ecx

; 52   : 		VU_ID GetID() { return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ ENDP		; UI_Refresher::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?GetAllowed@GlobalPositioningSystem@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAllowed@GlobalPositioningSystem@@QAEJXZ PROC	; GlobalPositioningSystem::GetAllowed, COMDAT
; _this$ = ecx

; 74   : 		long GetAllowed()						{ return(Allowed_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAllowed@GlobalPositioningSystem@@QAEJXZ ENDP	; GlobalPositioningSystem::GetAllowed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sections$ = 8						; size = 4
?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetAllowed, COMDAT
; _this$ = ecx

; 73   : 		void SetAllowed(long sections)			{ Allowed_=sections; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sections$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetAllowed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMapRelativeXY@C_Map@@QAEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetMapRelativeXY@C_Map@@QAEXPAF0@Z PROC		; C_Map::GetMapRelativeXY, COMDAT
; _this$ = ecx

; 246  : 		{	

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 			if(DrawWindow_) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1124], 0
	je	SHORT $LN2@GetMapRela

; 248  : 			{
; 249  : 				*x = static_cast<short>(*x - DrawWindow_->GetX() - DrawWindow_->VX_[0]); 

	mov	ecx, DWORD PTR _x$[ebp]
	movsx	esi, WORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1124]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	cwde
	sub	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1124]
	mov	eax, 4
	imul	eax, 0
	sub	esi, DWORD PTR [edx+eax+480]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	WORD PTR [ecx], si

; 250  : 				*y = static_cast<short>(*y - DrawWindow_->GetY() - DrawWindow_->VY_[0]); 

	mov	edx, DWORD PTR _y$[ebp]
	movsx	esi, WORD PTR [edx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1124]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	sub	esi, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1124]
	mov	ecx, 4
	imul	ecx, 0
	sub	esi, DWORD PTR [eax+ecx+512]
	mov	edx, DWORD PTR _y$[ebp]
	mov	WORD PTR [edx], si
$LN2@GetMapRela:

; 251  : 			} 
; 252  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMapRelativeXY@C_Map@@QAEXPAF0@Z ENDP		; C_Map::GetMapRelativeXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMapScale@C_Map@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetMapScale@C_Map@@QAEMXZ PROC				; C_Map::GetMapScale, COMDAT
; _this$ = ecx

; 203  : 		float GetMapScale() { return(scale_); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+728]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMapScale@C_Map@@QAEMXZ ENDP				; C_Map::GetMapScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMaxY@C_Map@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetMaxY@C_Map@@QAEMXZ PROC				; C_Map::GetMaxY, COMDAT
; _this$ = ecx

; 202  : 		float GetMaxY() { return(maxy); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+732]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxY@C_Map@@QAEMXZ ENDP				; C_Map::GetMaxY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
$T1 = -112						; size = 4
$T2 = -108						; size = 4
$T3 = -104						; size = 4
$T4 = -100						; size = 4
$T5 = -96						; size = 4
_btn$ = -92						; size = 4
_list$ = -88						; size = 4
_buffer$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_win$ = 8						; size = 4
?hookup_new_battalion_window@@YAXPAVC_Window@@@Z PROC	; hookup_new_battalion_window

; 412  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 413  : 	C_Button	*btn;
; 414  : 	C_ListBox	*list;
; 415  : 	_TCHAR		buffer[80];
; 416  : 
; 417  : 	btn = (C_Button *) win->FindControl (CREATE_UNIT);

	push	31001					; 00007919H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 418  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@hookup_new

; 419  : 		btn->SetCallback (tactical_create_battalion);

	push	OFFSET ?tactical_create_battalion@@YAXJFPAVC_Base@@@Z ; tactical_create_battalion
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@hookup_new:

; 420  : 
; 421  : 	btn = (C_Button *) win->FindControl (CANCEL_UNIT);

	push	31002					; 0000791aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 422  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@hookup_new

; 423  : 		btn->SetCallback (tactical_cancel_battalion);

	push	OFFSET ?tactical_cancel_battalion@@YAXJFPAVC_Base@@@Z ; tactical_cancel_battalion
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@hookup_new:

; 424  : 
; 425  : 	btn = (C_Button *) win->FindControl (CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 426  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@hookup_new

; 427  : 		btn->SetCallback (tactical_cancel_battalion);

	push	OFFSET ?tactical_cancel_battalion@@YAXJFPAVC_Base@@@Z ; tactical_cancel_battalion
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@hookup_new:

; 428  : 
; 429  : 	list = (C_ListBox *) win->FindControl (UNIT_TOE);

	push	13536					; 000034e0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 430  : 	if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	$LN2@hookup_new

; 431  : 	{
; 432  : 		list->SetCallback (set_battalion_table_of_equipment);

	push	OFFSET ?set_battalion_table_of_equipment@@YAXJFPAVC_Base@@@Z ; set_battalion_table_of_equipment
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 433  : 		list->RemoveAllItems ();

	mov	ecx, DWORD PTR _list$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 434  : 		// Generate list of teams
; 435  : 		buffer[0] = 0;

	mov	ecx, 1
	imul	ecx, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 80			; 00000050H
	jae	SHORT $LN8@hookup_new
	jmp	SHORT $LN9@hookup_new
$LN8@hookup_new:
	call	___report_rangecheckfailure
$LN9@hookup_new:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _buffer$[ebp+edx], 0

; 436  : 		AddIndexedStringToBuffer(670, buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	670					; 0000029eH
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 437  : 		list->AddItem (toe_us, C_TYPE_ITEM, buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	50					; 00000032H
	push	5
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 438  : 		buffer[0] = 0;

	mov	edx, 1
	imul	edx, 0
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 80			; 00000050H
	jae	SHORT $LN10@hookup_new
	jmp	SHORT $LN11@hookup_new
$LN10@hookup_new:
	call	___report_rangecheckfailure
$LN11@hookup_new:
	mov	eax, DWORD PTR $T5[ebp]
	mov	BYTE PTR _buffer$[ebp+eax], 0

; 439  : 		AddIndexedStringToBuffer(671, buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	671					; 0000029fH
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 440  : 		list->AddItem (toe_soviet, C_TYPE_ITEM, buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	50					; 00000032H
	push	4
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 441  : 		buffer[0] = 0;

	mov	eax, 1
	imul	eax, 0
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 80			; 00000050H
	jae	SHORT $LN12@hookup_new
	jmp	SHORT $LN13@hookup_new
$LN12@hookup_new:
	call	___report_rangecheckfailure
$LN13@hookup_new:
	mov	ecx, DWORD PTR $T2[ebp]
	mov	BYTE PTR _buffer$[ebp+ecx], 0

; 442  : 		AddIndexedStringToBuffer(672, buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	672					; 000002a0H
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 443  : 		list->AddItem (toe_chinese, C_TYPE_ITEM, buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	50					; 00000032H
	push	1
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 444  : 		buffer[0] = 0;

	mov	ecx, 1
	imul	ecx, 0
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 80			; 00000050H
	jae	SHORT $LN14@hookup_new
	jmp	SHORT $LN15@hookup_new
$LN14@hookup_new:
	call	___report_rangecheckfailure
$LN15@hookup_new:
	mov	edx, DWORD PTR $T4[ebp]
	mov	BYTE PTR _buffer$[ebp+edx], 0

; 445  : 		AddIndexedStringToBuffer(673, buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	673					; 000002a1H
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 446  : 		list->AddItem (toe_rok, C_TYPE_ITEM, buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	50					; 00000032H
	push	3
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 447  : 		buffer[0] = 0;

	mov	edx, 1
	imul	edx, 0
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 80			; 00000050H
	jae	SHORT $LN16@hookup_new
	jmp	SHORT $LN17@hookup_new
$LN16@hookup_new:
	call	___report_rangecheckfailure
$LN17@hookup_new:
	mov	eax, DWORD PTR $T3[ebp]
	mov	BYTE PTR _buffer$[ebp+eax], 0

; 448  : 		AddIndexedStringToBuffer(674, buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	674					; 000002a2H
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 449  : 		list->AddItem (toe_dprk, C_TYPE_ITEM, buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	50					; 00000032H
	push	2
	mov	ecx, DWORD PTR _list$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem
$LN2@hookup_new:

; 450  : 	}
; 451  : 
; 452  : 	list = (C_ListBox *) win->FindControl (UNIT_TYPE);

	push	31005					; 0000791dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _list$[ebp], eax

; 453  : 
; 454  : 	if (list)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN7@hookup_new

; 455  : 	{
; 456  : 		list->SetCallback (set_battalion_type);

	push	OFFSET ?set_battalion_type@@YAXJFPAVC_Base@@@Z ; set_battalion_type
	mov	eax, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@hookup_new:

; 457  : 	}
; 458  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?hookup_new_battalion_window@@YAXPAVC_Window@@@Z ENDP	; hookup_new_battalion_window
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_units.cpp
_TEXT	SEGMENT
_lbox$ = -8						; size = 4
_btn$ = -4						; size = 4
_win$ = 8						; size = 4
?hookup_new_squad_window@@YAXPAVC_Window@@@Z PROC	; hookup_new_squad_window

; 370  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 371  : 	C_Button		*btn;
; 372  : 	C_ListBox		*lbox;
; 373  : 
; 374  : 	if (!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN7@hookup_new

; 375  : 		return;

	jmp	$LN8@hookup_new
$LN7@hookup_new:

; 376  : 
; 377  : 	if (!gLastAircraftType)

	cmp	DWORD PTR ?gLastAircraftType@@3HA, 0	; gLastAircraftType
	jne	SHORT $LN6@hookup_new

; 378  : 		gLastAircraftType = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_SQUADRON,STYPE_UNIT_FIGHTER_BOMBER,SPTYPE_F16C,VU_ANY,VU_ANY,VU_ANY) + VU_LAST_ENTITY_TYPE;

	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	push	3
	push	9
	push	3
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	add	eax, 100				; 00000064H
	mov	DWORD PTR ?gLastAircraftType@@3HA, eax	; gLastAircraftType
$LN6@hookup_new:

; 379  : 
; 380  : 	// Setup aircraft type listbox
; 381  : 	lbox=(C_ListBox*)win->FindControl(TAC_AIRCRAFT_TYPE);

	push	40046					; 00009c6eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 382  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN5@hookup_new

; 383  : 		{
; 384  : 		FillListBoxWithACTypes(lbox);

	mov	eax, DWORD PTR _lbox$[ebp]
	push	eax
	call	?FillListBoxWithACTypes@@YAXPAVC_ListBox@@@Z ; FillListBoxWithACTypes
	add	esp, 4

; 385  : 		// Select last type selected
; 386  : 		lbox->SetValue(gLastAircraftType);

	mov	ecx, DWORD PTR ?gLastAircraftType@@3HA	; gLastAircraftType
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 387  : 		lbox->SetCallback(tac_select_squadron_aircraft);

	push	OFFSET ?tac_select_squadron_aircraft@@YAXJFPAVC_Base@@@Z ; tac_select_squadron_aircraft
	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN5@hookup_new:

; 388  : 		}
; 389  : 		
; 390  : 	// Now setup the airbase list
; 391  : 	lbox=(C_ListBox*)win->FindControl(TAC_AIRBASE_LIST);

	push	40048					; 00009c70H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 392  : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@hookup_new

; 393  : 		lbox->SetCallback(tac_select_squadron_airbase);

	push	OFFSET ?tac_select_squadron_airbase@@YAXJFPAVC_Base@@@Z ; tac_select_squadron_airbase
	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@hookup_new:

; 394  : 
; 395  : 	// Setup cancel/ok buttons
; 396  : 	btn = (C_Button *) win->FindControl (CREATE_UNIT);

	push	31001					; 00007919H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 397  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@hookup_new

; 398  : 		btn->SetCallback (tactical_create_squadron);

	push	OFFSET ?tactical_create_squadron@@YAXJFPAVC_Base@@@Z ; tactical_create_squadron
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@hookup_new:

; 399  : 	btn = (C_Button *) win->FindControl (CANCEL_UNIT);

	push	31002					; 0000791aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 400  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@hookup_new

; 401  : 		btn->SetCallback (tactical_cancel_squadron);

	push	OFFSET ?tactical_cancel_squadron@@YAXJFPAVC_Base@@@Z ; tactical_cancel_squadron
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@hookup_new:

; 402  : 	btn = (C_Button *) win->FindControl (CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 403  : 	if (btn != NULL)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@hookup_new

; 404  : 		btn->SetCallback (tactical_cancel_squadron);

	push	OFFSET ?tactical_cancel_squadron@@YAXJFPAVC_Base@@@Z ; tactical_cancel_squadron
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@hookup_new:

; 405  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?hookup_new_squad_window@@YAXPAVC_Window@@@Z ENDP	; hookup_new_squad_window
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cflight.h
;	COMDAT ?GetVUID@C_ATO_Flight@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_ATO_Flight@@QAE?AVVU_ID@@XZ PROC		; C_ATO_Flight::GetVUID, COMDAT
; _this$ = ecx

; 116  : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	edx, DWORD PTR [eax+200]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_ATO_Flight@@QAE?AVVU_ID@@XZ ENDP		; C_ATO_Flight::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetGroup@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Window@@QAEJXZ PROC				; C_Window::GetGroup, COMDAT
; _this$ = ecx

; 317  : 		long GetGroup(void) { return(Group_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Window@@QAEJXZ ENDP				; C_Window::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetY@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Window@@QAEFXZ PROC				; C_Window::GetY, COMDAT
; _this$ = ecx

; 311  : 		short GetY() { return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+430]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Window@@QAEFXZ ENDP				; C_Window::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetX@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Window@@QAEFXZ PROC				; C_Window::GetX, COMDAT
; _this$ = ecx

; 310  : 		short GetX() { return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+428]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Window@@QAEFXZ ENDP				; C_Window::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetSecond@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSecond@C_Clock@@QAEJXZ PROC				; C_Clock::GetSecond, COMDAT
; _this$ = ecx

; 72   : 		long GetSecond()			{ if(Second_) return(Second_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN1@GetSecond
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetSecond
$LN1@GetSecond:
	xor	eax, eax
$LN2@GetSecond:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSecond@C_Clock@@QAEJXZ ENDP				; C_Clock::GetSecond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetMinute@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinute@C_Clock@@QAEJXZ PROC				; C_Clock::GetMinute, COMDAT
; _this$ = ecx

; 71   : 		long GetMinute()			{ if(Minute_) return(Minute_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN1@GetMinute
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetMinute
$LN1@GetMinute:
	xor	eax, eax
$LN2@GetMinute:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinute@C_Clock@@QAEJXZ ENDP				; C_Clock::GetMinute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?GetHour@C_Clock@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHour@C_Clock@@QAEJXZ PROC				; C_Clock::GetHour, COMDAT
; _this$ = ecx

; 70   : 		long GetHour()				{ if(Hour_) return(Hour_->GetInteger()); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN1@GetHour
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	call	?GetInteger@C_EditBox@@QAEJXZ		; C_EditBox::GetInteger
	jmp	SHORT $LN2@GetHour
$LN1@GetHour:
	xor	eax, eax
$LN2@GetHour:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHour@C_Clock@@QAEJXZ ENDP				; C_Clock::GetHour
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetSecond@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sc$ = 8						; size = 4
?SetSecond@C_Clock@@QAEXJ@Z PROC			; C_Clock::SetSecond, COMDAT
; _this$ = ecx

; 65   : 		void SetSecond(long sc)		{ if(Second_) Second_->SetInteger(sc); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN2@SetSecond
	mov	ecx, DWORD PTR _sc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetSecond:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSecond@C_Clock@@QAEXJ@Z ENDP			; C_Clock::SetSecond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetMinute@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mn$ = 8						; size = 4
?SetMinute@C_Clock@@QAEXJ@Z PROC			; C_Clock::SetMinute, COMDAT
; _this$ = ecx

; 64   : 		void SetMinute(long mn)		{ if(Minute_) Minute_->SetInteger(mn); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN2@SetMinute
	mov	ecx, DWORD PTR _mn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetMinute:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMinute@C_Clock@@QAEXJ@Z ENDP			; C_Clock::SetMinute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetHour@C_Clock@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hr$ = 8						; size = 4
?SetHour@C_Clock@@QAEXJ@Z PROC				; C_Clock::SetHour, COMDAT
; _this$ = ecx

; 63   : 		void SetHour(long hr)		{ if(Hour_) Hour_->SetInteger(hr); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@SetHour
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	call	?SetInteger@C_EditBox@@QAEXJ@Z		; C_EditBox::SetInteger
$LN2@SetHour:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHour@C_Clock@@QAEXJ@Z ENDP				; C_Clock::SetHour
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpopmgr.h
;	COMDAT ?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z PROC		; C_PopupMgr::GetCurrentXY, COMDAT
; _this$ = ecx

; 51   : 		void GetCurrentXY(short *x,short *y) { *x=LastX_; *y=LastY_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z ENDP		; C_PopupMgr::GetCurrentXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ceditbox.h
;	COMDAT ?GetInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInteger@C_EditBox@@QAEJXZ PROC			; C_EditBox::GetInteger, COMDAT
; _this$ = ecx

; 71   : 		long GetInteger() { return(Integer_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInteger@C_EditBox@@QAEJXZ ENDP			; C_EditBox::GetInteger
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetRoot@C_ListBox@@QAEPAVLISTBOX@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_ListBox@@QAEPAVLISTBOX@@XZ PROC		; C_ListBox::GetRoot, COMDAT
; _this$ = ecx

; 93   : 		LISTBOX *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+164]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_ListBox@@QAEPAVLISTBOX@@XZ ENDP		; C_ListBox::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?_GetCType_@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_GetCType_@C_Base@@QAEFXZ PROC				; C_Base::_GetCType_, COMDAT
; _this$ = ecx

; 136  : 		short _GetCType_()			{ return(_CType_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?_GetCType_@C_Base@@QAEFXZ ENDP				; C_Base::_GetCType_
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pilot$ = 8						; size = 4
?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z PROC	; SquadronClass::GetPilotData, COMDAT
; _this$ = ecx

; 146  : 	PilotClass* GetPilotData (int pilot)			{ return &pilot_data[pilot]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pilot$[ebp]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+866]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPilotData@SquadronClass@@QAEPAVPilotClass@@H@Z ENDP	; SquadronClass::GetPilotData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetUnitPackage@FlightClass@@QAEPAVPackageClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitPackage@FlightClass@@QAEPAVPackageClass@@XZ PROC ; FlightClass::GetUnitPackage, COMDAT
; _this$ = ecx

; 216  : 		PackageClass* GetUnitPackage (void)	{ 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 217  : 			return (PackageClass*)vuDatabase->Find(package); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR [eax+384]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find

; 218  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitPackage@FlightClass@@QAEPAVPackageClass@@XZ ENDP ; FlightClass::GetUnitPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ PROC ; PackageClass::GetMissionRequest, COMDAT
; _this$ = ecx

; 96   : 		MissionRequestClass *GetMissionRequest (void)	{ return &mis_request; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ENDP ; PackageClass::GetMissionRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?SetECM@PackageClass@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newEcm$ = 8						; size = 8
?SetECM@PackageClass@@QAEXVVU_ID@@@Z PROC		; PackageClass::SetECM, COMDAT
; _this$ = ecx

; 86   : /* 2001-04-07 ADDED BY S.G. */ void SetECM (VU_ID newEcm) { ecm = newEcm; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEcm$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	edx, DWORD PTR _newEcm$[ebp+4]
	mov	DWORD PTR [eax+332], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetECM@PackageClass@@QAEXVVU_ID@@@Z ENDP		; PackageClass::SetECM
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetECM@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetECM@PackageClass@@QAE?AVVU_ID@@XZ PROC		; PackageClass::GetECM, COMDAT
; _this$ = ecx

; 85   : 		VU_ID GetECM (void)								{ return ecm; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR [eax+332]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetECM@PackageClass@@QAE?AVVU_ID@@XZ ENDP		; PackageClass::GetECM
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetColor@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColor@TeamClass@@QAEHXZ PROC			; TeamClass::GetColor, COMDAT
; _this$ = ecx

; 329  : 	int GetColor (void)							{ return (int) teamColor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+889]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColor@TeamClass@@QAEHXZ ENDP			; TeamClass::GetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetFlag@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlag@TeamClass@@QAEHXZ PROC				; TeamClass::GetFlag, COMDAT
; _this$ = ecx

; 327  : 	int GetFlag (void)							{ return (int) teamFlag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+888]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlag@TeamClass@@QAEHXZ ENDP				; TeamClass::GetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitDestination@UnitClass@@QAEXFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
?SetUnitDestination@UnitClass@@QAEXFF@Z PROC		; UnitClass::SetUnitDestination, COMDAT
; _this$ = ecx

; 356  : 	void SetUnitDestination (GridIndex x, GridIndex y)	{ 	dest_x = (GridIndex)(x+1); dest_y = (GridIndex)(y+1); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+200], ax
	movsx	edx, WORD PTR _y$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+202], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitDestination@UnitClass@@QAEXFF@Z ENDP		; UnitClass::SetUnitDestination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Moving@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Moving@UnitClass@@QBEHXZ PROC				; UnitClass::Moving, COMDAT
; _this$ = ecx

; 316  : 	int Moving() const								{ return (int)unit_flags & U_MOVING; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 1024				; 00000400H
	mov	esp, ebp
	pop	ebp
	ret	0
?Moving@UnitClass@@QBEHXZ ENDP				; UnitClass::Moving
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?SamSite@ObjectiveClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SamSite@ObjectiveClass@@QAEHXZ PROC			; ObjectiveClass::SamSite, COMDAT
; _this$ = ecx

; 208  : 	int SamSite (void)										{	return obj_data.obj_flags & O_SAM_SITE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	and	eax, 1024				; 00000400H
	mov	esp, ebp
	pop	ebp
	ret	0
?SamSite@ObjectiveClass@@QAEHXZ ENDP			; ObjectiveClass::SamSite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSPType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSPType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSPType, COMDAT
; _this$ = ecx

; 291  : 	uchar GetSPType (void) const						{	return (EntityType())->classInfo_[VU_SPTYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 2
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSPType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSPType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetType, COMDAT
; _this$ = ecx

; 289  : 	uchar GetType()	const						{	return (EntityType())->classInfo_[VU_TYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPLocation@WayPointClass@@QBEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetWPLocation@WayPointClass@@QBEXPAF0@Z PROC		; WayPointClass::GetWPLocation, COMDAT
; _this$ = ecx

; 205  : 	void GetWPLocation (GridIndex* x, GridIndex* y) const { *x = GridX; *y = GridY; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWPLocation@WayPointClass@@QBEXPAF0@Z ENDP		; WayPointClass::GetWPLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPDepartureTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPDepartureTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPDepartureTime, COMDAT
; _this$ = ecx

; 203  : 	CampaignTime GetWPDepartureTime()				{ return Depart; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPDepartureTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPDepartureTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPFlags@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPFlags@WayPointClass@@QAEKXZ PROC			; WayPointClass::GetWPFlags, COMDAT
; _this$ = ecx

; 173  : 	ulong GetWPFlags (void)							{ return (ulong)Flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPFlags@WayPointClass@@QAEKXZ ENDP			; WayPointClass::GetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?UnSetWPFlag@WayPointClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
?UnSetWPFlag@WayPointClass@@QAEXK@Z PROC		; WayPointClass::UnSetWPFlag, COMDAT
; _this$ = ecx

; 165  : 	void UnSetWPFlag (ulong f)						{ Flags &= ~((ulong)(f)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _f$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?UnSetWPFlag@WayPointClass@@QAEXK@Z ENDP		; WayPointClass::UnSetWPFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPFlag@WayPointClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
?SetWPFlag@WayPointClass@@QAEXK@Z PROC			; WayPointClass::SetWPFlag, COMDAT
; _this$ = ecx

; 164  : 	void SetWPFlag (ulong f)						{ Flags |= (ulong) f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	or	ecx, DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPFlag@WayPointClass@@QAEXK@Z ENDP			; WayPointClass::SetWPFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::OwnerId, COMDAT
; _this$ = ecx

; 152  : 	VU_ID OwnerId() const     { return share_.ownerId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::OwnerId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sc$ = 8						; size = 4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z PROC	; VuEntity::SetSendCreate, COMDAT
; _this$ = ecx

; 148  : 	void SetSendCreate(VU_SEND_TYPE sc) { share_.flags_.breakdown_.sendCreate_ = sc; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sc$[ebp]
	and	eax, 3
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, -193				; ffffff3fH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ENDP	; VuEntity::SetSendCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
