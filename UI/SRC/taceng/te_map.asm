; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\taceng\te_map.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?SimMapX@@3MA					; SimMapX
PUBLIC	?SimMapY@@3MA					; SimMapY
PUBLIC	?CurMapTool@@3PAVC_Base@@A			; CurMapTool
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
_BSS	SEGMENT
?SimMapX@@3MA DD 01H DUP (?)				; SimMapX
?SimMapY@@3MA DD 01H DUP (?)				; SimMapY
?CurMapTool@@3PAVC_Base@@A DD 01H DUP (?)		; CurMapTool
_BSS	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?_GetCType_@C_Base@@QAEFXZ			; C_Base::_GetCType_
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetIncrement@C_Control@@QAEHXZ			; C_Control::GetIncrement
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z		; C_PopupMgr::GetCurrentXY
PUBLIC	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ	; C_PopupMgr::GetCallingControl
PUBLIC	?GetX@C_Window@@QAEFXZ				; C_Window::GetX
PUBLIC	?GetY@C_Window@@QAEFXZ				; C_Window::GetY
PUBLIC	?GetIconID@C_MapIcon@@QAEJXZ			; C_MapIcon::GetIconID
PUBLIC	?GetHRange@C_MapMover@@QAEJXZ			; C_MapMover::GetHRange
PUBLIC	?GetVRange@C_MapMover@@QAEJXZ			; C_MapMover::GetVRange
PUBLIC	?GetIconID@C_DrawList@@QAEJXZ			; C_DrawList::GetIconID
PUBLIC	?GetZoomLevel@C_Map@@QAEJXZ			; C_Map::GetZoomLevel
PUBLIC	?GetMaxY@C_Map@@QAEMXZ				; C_Map::GetMaxY
PUBLIC	?GetMapScale@C_Map@@QAEMXZ			; C_Map::GetMapScale
PUBLIC	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z		; C_Map::GetMapRelativeXY
PUBLIC	?hookup_map_windows@@YAXPAVC_Window@@@Z		; hookup_map_windows
PUBLIC	?tactical_update_campaign_entities@@YAXXZ	; tactical_update_campaign_entities
PUBLIC	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ		; UI_Refresher::GetID
PUBLIC	?tactical_draw_map@@YAXJFPAVC_Base@@@Z		; tactical_draw_map
PUBLIC	?gMapMgr_menu@@YAXJFPAVC_Base@@@Z		; gMapMgr_menu
PUBLIC	?tactical_objective_menu@@YAXJFPAVC_Base@@@Z	; tactical_objective_menu
PUBLIC	?tactical_airbase_menu@@YAXJFPAVC_Base@@@Z	; tactical_airbase_menu
PUBLIC	?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z		; SelectToolTypeCB
PUBLIC	?ClearMapToolStates@@YAXJ@Z			; ClearMapToolStates
PUBLIC	?SelectTargetCB@@YAXJFPAVC_Base@@@Z		; SelectTargetCB
PUBLIC	?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z		; gMapMgr_TACmover
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0BA@HMIFLIMG@Map?5Menu?5Recon?6?$AA@	; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?GetItemState@C_PopupList@@QAEFJ@Z:PROC		; C_PopupList::GetItemState
EXTRN	?CloseMenu@C_PopupMgr@@QAEXXZ:PROC		; C_PopupMgr::CloseMenu
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z:PROC	; C_Handler::AddUserCallback
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?SimToGrid@@YAFM@Z:PROC				; SimToGrid
EXTRN	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z:PROC	; C_Map::SetWindow
EXTRN	?SetZoomLevel@C_Map@@QAEXF@Z:PROC		; C_Map::SetZoomLevel
EXTRN	?ZoomIn@C_Map@@QAEXXZ:PROC			; C_Map::ZoomIn
EXTRN	?ZoomOut@C_Map@@QAEXXZ:PROC			; C_Map::ZoomOut
EXTRN	?SetUnitLevel@C_Map@@QAEXJ@Z:PROC		; C_Map::SetUnitLevel
EXTRN	?ShowObjectiveType@C_Map@@QAEXJ@Z:PROC		; C_Map::ShowObjectiveType
EXTRN	?HideObjectiveType@C_Map@@QAEXJ@Z:PROC		; C_Map::HideObjectiveType
EXTRN	?ShowUnitType@C_Map@@QAEXJ@Z:PROC		; C_Map::ShowUnitType
EXTRN	?HideUnitType@C_Map@@QAEXJ@Z:PROC		; C_Map::HideUnitType
EXTRN	?ShowAirUnitType@C_Map@@QAEXJ@Z:PROC		; C_Map::ShowAirUnitType
EXTRN	?HideAirUnitType@C_Map@@QAEXJ@Z:PROC		; C_Map::HideAirUnitType
EXTRN	?MoveCenter@C_Map@@QAEXJJ@Z:PROC		; C_Map::MoveCenter
EXTRN	?TurnOnNames@C_Map@@QAEXXZ:PROC			; C_Map::TurnOnNames
EXTRN	?TurnOffNames@C_Map@@QAEXXZ:PROC		; C_Map::TurnOffNames
EXTRN	?DrawMap@C_Map@@QAEXXZ:PROC			; C_Map::DrawMap
EXTRN	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z:PROC ; C_Map::SetAllObjCallbacks
EXTRN	?SetAllAirUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z:PROC ; C_Map::SetAllAirUnitCallbacks
EXTRN	?SetAllGroundUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z:PROC ; C_Map::SetAllGroundUnitCallbacks
EXTRN	?SetAllNavalUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z:PROC ; C_Map::SetAllNavalUnitCallbacks
EXTRN	?SetObjCallbacks@C_Map@@QAEXJP6AXJFPAVC_Base@@@Z@Z:PROC ; C_Map::SetObjCallbacks
EXTRN	?Find@GlobalPositioningSystem@@QAEPAXJ@Z:PROC	; GlobalPositioningSystem::Find
EXTRN	?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z:PROC	; OpenCrossSectionCB
EXTRN	?tactical_add_victory_condition@@YAXVVU_ID@@PAVC_Base@@@Z:PROC ; tactical_add_victory_condition
EXTRN	?tactical_add_squadron@@YAXVVU_ID@@@Z:PROC	; tactical_add_squadron
EXTRN	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z:PROC ; tactical_add_flight
EXTRN	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z:PROC ; tactical_add_package
EXTRN	?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z:PROC ; tactical_add_battalion
EXTRN	?PickTeamCB@@YAXJFPAVC_Base@@@Z:PROC		; PickTeamCB
EXTRN	?UnitCB@@YAXJFPAVC_Base@@@Z:PROC		; UnitCB
EXTRN	?SelectVCTargetCB@@YAXJFPAVC_Base@@@Z:PROC	; SelectVCTargetCB
EXTRN	?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z:PROC	; FitFlightPlanCB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gPopupMgr@@3PAVC_PopupMgr@@A:DWORD		; gPopupMgr
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	?gGps@@3PAVGlobalPositioningSystem@@A:DWORD	; gGps
EXTRN	?MapX@@3FA:WORD					; MapX
EXTRN	?MapY@@3FA:WORD					; MapY
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HMIFLIMG@Map?5Menu?5Recon?6?$AA@
CONST	SEGMENT
??_C@_0BA@HMIFLIMG@Map?5Menu?5Recon?6?$AA@ DB 'Map Menu Recon', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_mm$ = -40						; size = 4
_c$1 = -36						; size = 4
_maxy$ = -32						; size = 4
_my$ = -28						; size = 4
_mx$ = -24						; size = 4
_scale$ = -20						; size = 4
tv201 = -16						; size = 4
tv69 = -12						; size = 4
_y$ = -8						; size = 2
_x$ = -4						; size = 2
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z PROC		; gMapMgr_TACmover

; 548  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi

; 549  : 	C_MapMover
; 550  : 		*mm;
; 551  : 	float mx,my,scale,maxy;
; 552  : 	short x=0,y=0;

	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 553  : 
; 554  : 	mm = (C_MapMover *) control;

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _mm$[ebp], edx

; 555  : 	switch (hittype){

	movsx	eax, WORD PTR _hittype$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	cmp	DWORD PTR tv69[ebp], 52			; 00000034H
	je	SHORT $LN19@gMapMgr_TA
	cmp	DWORD PTR tv69[ebp], 59			; 0000003bH
	je	$LN4@gMapMgr_TA
	cmp	DWORD PTR tv69[ebp], 61			; 0000003dH
	je	SHORT $LN22@gMapMgr_TA
	jmp	$LN23@gMapMgr_TA
$LN22@gMapMgr_TA:

; 556  : 		case (C_TYPE_MOUSEMOVE): 
; 557  : 		{
; 558  : 			if (gMapMgr){

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN21@gMapMgr_TA

; 559  : 				// JPO - this was null once...
; 560  : 				gMapMgr->MoveCenter(-((C_MapMover *)control)->GetHRange(), -((C_MapMover *)control)->GetVRange ());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVRange@C_MapMover@@QAEJXZ		; C_MapMover::GetVRange
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetHRange@C_MapMover@@QAEJXZ		; C_MapMover::GetHRange
	neg	eax
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?MoveCenter@C_Map@@QAEXJJ@Z		; C_Map::MoveCenter
$LN21@gMapMgr_TA:

; 561  : 			}
; 562  : 			if (control){

	cmp	DWORD PTR _control$[ebp], 0
	je	SHORT $LN20@gMapMgr_TA

; 563  : 				control->Parent_->RefreshClient (0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN20@gMapMgr_TA:

; 564  : 			}
; 565  : 			break;

	jmp	$LN23@gMapMgr_TA
$LN19@gMapMgr_TA:

; 566  : 		}
; 567  : 		case (C_TYPE_LMOUSEUP):
; 568  : 		{
; 569  : 			if(CurMapTool){

	cmp	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool
	je	$LN13@gMapMgr_TA

; 570  : 				if(control->_GetCType_() == _CNTL_POPUPLIST_)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	edx, ax
	cmp	edx, 16392				; 00004008H
	jne	SHORT $LN17@gMapMgr_TA

; 571  : 				{
; 572  : 					gPopupMgr->GetCurrentXY (&x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z	; C_PopupMgr::GetCurrentXY

; 573  : 					gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
	jmp	$LN15@gMapMgr_TA
$LN17@gMapMgr_TA:

; 574  : 				}
; 575  : 				else if(control->_GetCType_() == _CNTL_MAP_MOVER_)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	movsx	ecx, ax
	cmp	ecx, 16405				; 00004015H
	jne	SHORT $LN15@gMapMgr_TA

; 576  : 				{
; 577  : 					x=static_cast<short>(((C_MapMover*)control)->GetRelX() + control->GetX() + control->Parent_->GetX());

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	add	esi, eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _x$[ebp], si

; 578  : 					y=static_cast<short>(((C_MapMover*)control)->GetRelY() + control->GetY() + control->Parent_->GetY());

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	mov	esi, eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	add	esi, eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	add	esi, ecx
	mov	WORD PTR _y$[ebp], si

; 579  : 					gMapMgr->GetMapRelativeXY (&x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapRelativeXY@C_Map@@QAEXPAF0@Z	; C_Map::GetMapRelativeXY
$LN15@gMapMgr_TA:

; 580  : 				}
; 581  : 
; 582  : 				scale = gMapMgr->GetMapScale ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMapScale@C_Map@@QAEMXZ		; C_Map::GetMapScale
	fstp	DWORD PTR _scale$[ebp]

; 583  : 				maxy = gMapMgr->GetMaxY ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetMaxY@C_Map@@QAEMXZ			; C_Map::GetMaxY
	fstp	DWORD PTR _maxy$[ebp]

; 584  : 
; 585  : 				mx = x / scale;

	movsx	ecx, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR _mx$[ebp], xmm0

; 586  : 				my = maxy - y / scale;

	movsx	edx, WORD PTR _y$[ebp]
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR _scale$[ebp]
	movss	xmm1, DWORD PTR _maxy$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _my$[ebp], xmm1

; 587  : 
; 588  : 				SimMapX=my;

	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR ?SimMapX@@3MA, xmm0

; 589  : 				SimMapY=mx;

	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR ?SimMapY@@3MA, xmm0

; 590  : 
; 591  : 				MapX = SimToGrid (mx);

	push	ecx
	movss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapX@@3FA, ax			; MapX

; 592  : 				MapY = SimToGrid (my);

	push	ecx
	movss	xmm0, DWORD PTR _my$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?SimToGrid@@YAFM@Z			; SimToGrid
	add	esp, 4
	mov	WORD PTR ?MapY@@3FA, ax			; MapY

; 593  : 
; 594  : 				switch(CurMapTool->GetID())

	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	mov	DWORD PTR tv201[ebp], eax
	cmp	DWORD PTR tv201[ebp], 40003		; 00009c43H
	je	SHORT $LN12@gMapMgr_TA
	cmp	DWORD PTR tv201[ebp], 40004		; 00009c44H
	je	SHORT $LN11@gMapMgr_TA
	cmp	DWORD PTR tv201[ebp], 40005		; 00009c45H
	je	SHORT $LN10@gMapMgr_TA
	jmp	SHORT $LN13@gMapMgr_TA
$LN12@gMapMgr_TA:

; 595  : 				{
; 596  : 					case ADD_FLIGHT: // Click anywhere on the map to add a flight
; 597  : 						tactical_add_flight(FalconNullId,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	call	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_flight
	add	esp, 12					; 0000000cH

; 598  : 						break;

	jmp	SHORT $LN13@gMapMgr_TA
$LN11@gMapMgr_TA:

; 599  : 					case ADD_PACKAGE: // Click anywhere on the map to add a package?
; 600  : 						tactical_add_package(FalconNullId,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	call	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_package
	add	esp, 12					; 0000000cH

; 601  : 						break;

	jmp	SHORT $LN13@gMapMgr_TA
$LN10@gMapMgr_TA:

; 602  : 					case ADD_BATTALION: // Click anywhere on the map to add a unit
; 603  : 						tactical_add_battalion(FalconNullId,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	call	?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_battalion
	add	esp, 12					; 0000000cH
$LN13@gMapMgr_TA:

; 604  : 						break;
; 605  : 					case ADD_NAVAL: // Click anywhere on the map to add a unit
; 606  : 						break;
; 607  : 					case ADD_SQUADRON: // Click on an airbase to add a squadron
; 608  : 						break;
; 609  : 					case COPY_UNIT: // Pick a unit to copy
; 610  : 						break;
; 611  : 					case DELETE_UNIT: // Pick a unit to delete
; 612  : 						break;
; 613  : 					case EDIT_UNIT: // Pick a unit to edit
; 614  : 						break;
; 615  : 				}
; 616  : 			}
; 617  : 			break;

	jmp	SHORT $LN23@gMapMgr_TA
$LN4@gMapMgr_TA:

; 618  : 		}
; 619  : 		case (C_TYPE_MOUSEWHEEL):
; 620  : 		{
; 621  : 			if (!control->IsControl()){

	mov	eax, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	test	eax, eax
	jne	SHORT $LN3@gMapMgr_TA

; 622  : 				break;

	jmp	SHORT $LN23@gMapMgr_TA
$LN3@gMapMgr_TA:

; 623  : 			}
; 624  : 
; 625  : 			C_Control *c = static_cast<C_Control*>(control);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _c$1[ebp], ecx

; 626  : 			if (c->GetIncrement() > 0){

	mov	ecx, DWORD PTR _c$1[ebp]
	call	?GetIncrement@C_Control@@QAEHXZ		; C_Control::GetIncrement
	test	eax, eax
	jle	SHORT $LN2@gMapMgr_TA

; 627  : 				gMapMgr->ZoomOut();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomOut@C_Map@@QAEXXZ			; C_Map::ZoomOut

; 628  : 			}
; 629  : 			else {

	jmp	SHORT $LN1@gMapMgr_TA
$LN2@gMapMgr_TA:

; 630  : 				gMapMgr->ZoomIn();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomIn@C_Map@@QAEXXZ			; C_Map::ZoomIn
$LN1@gMapMgr_TA:
$LN23@gMapMgr_TA:

; 631  : 			}
; 632  : 			break;
; 633  : 		}
; 634  : 	}
; 635  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z ENDP		; gMapMgr_TACmover
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_txt$ = -4						; size = 4
_textid$ = 8						; size = 4
?SetToolbarDirections@@YAXJ@Z PROC			; SetToolbarDirections

; 322  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 323  : 	C_Window *win;
; 324  : 	C_Text *txt;
; 325  : 
; 326  : 	win=gMainHandler->FindWindow(TAC_FULLMAP_WIN);

	push	30806					; 00007856H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 327  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN6@SetToolbar

; 328  : 	{
; 329  : 		txt=(C_Text*)win->FindControl(HELP_MESSAGE);

	push	40014					; 00009c4eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 330  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN6@SetToolbar

; 331  : 		{
; 332  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 333  : 			txt->SetText(textid);

	mov	ecx, DWORD PTR _textid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 334  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@SetToolbar:

; 335  : 		}
; 336  : 	}
; 337  : 
; 338  : 	win=gMainHandler->FindWindow(TAC_EDIT_WIN);

	push	30516					; 00007734H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 339  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@SetToolbar

; 340  : 	{
; 341  : 		txt=(C_Text*)win->FindControl(HELP_MESSAGE);

	push	40014					; 00009c4eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 342  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@SetToolbar

; 343  : 		{
; 344  : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 345  : 			txt->SetText(textid);

	mov	ecx, DWORD PTR _textid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 346  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@SetToolbar:

; 347  : 		}
; 348  : 	}
; 349  : 	win=gMainHandler->FindWindow(TAC_VC_WIN);

	push	40025					; 00009c59H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 350  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@SetToolbar

; 351  : 	{
; 352  : 		txt=(C_Text*)win->FindControl(VC_HELP_MESSAGE);

	push	40027					; 00009c5bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 353  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@SetToolbar

; 354  : 		{
; 355  : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 356  : 			txt->SetText(textid);

	mov	ecx, DWORD PTR _textid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 357  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@SetToolbar:

; 358  : 		}
; 359  : 	}
; 360  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetToolbarDirections@@YAXJ@Z ENDP			; SetToolbarDirections
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
$T1 = -52						; size = 8
$T2 = -44						; size = 8
$T3 = -36						; size = 8
$T4 = -28						; size = 8
_id$ = -20						; size = 8
_icon$ = -12						; size = 4
tv83 = -8						; size = 4
_urec$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?SelectTargetCB@@YAXJFPAVC_Base@@@Z PROC		; SelectTargetCB

; 277  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 278  : 	C_MapIcon *icon;
; 279  : 	UI_Refresher *urec;
; 280  : 	VU_ID id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 281  : 
; 282  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@SelectTarg

; 283  : 	{
; 284  : 		// We're either dragging or mouse down - check to see if we should drag a unit
; 285  : 		UnitCB (ID,hittype,ctrl);

	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?UnitCB@@YAXJFPAVC_Base@@@Z		; UnitCB
	add	esp, 12					; 0000000cH

; 286  : 		return;

	jmp	$LN11@SelectTarg
$LN10@SelectTarg:

; 287  : 	}
; 288  : 
; 289  : 	icon=(C_MapIcon*)ctrl;

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	DWORD PTR _icon$[ebp], ecx

; 290  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	$LN11@SelectTarg

; 291  : 	{
; 292  : 		ID=icon->GetIconID();

	mov	ecx, DWORD PTR _icon$[ebp]
	call	?GetIconID@C_MapIcon@@QAEJXZ		; C_MapIcon::GetIconID
	mov	DWORD PTR _ID$[ebp], eax

; 293  : 		urec=(UI_Refresher*)gGps->Find(ID);

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 294  : 		if(urec)

	cmp	DWORD PTR _urec$[ebp], 0
	je	$LN11@SelectTarg

; 295  : 		{
; 296  : 			switch(CurMapTool->GetID())

	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	mov	DWORD PTR tv83[ebp], eax
	mov	eax, DWORD PTR tv83[ebp]
	sub	eax, 40003				; 00009c43H
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 4
	ja	$LN11@SelectTarg
	mov	ecx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN13@SelectTarg[ecx*4]
$LN5@SelectTarg:

; 297  : 			{
; 298  : 				case ADD_FLIGHT: // Click anywhere on the map to add a flight
; 299  : 					tactical_add_flight(urec->GetID(),ctrl);

	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_flight@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_flight
	add	esp, 12					; 0000000cH

; 300  : 					break;

	jmp	SHORT $LN11@SelectTarg
$LN4@SelectTarg:

; 301  : 				case ADD_PACKAGE: // Click anywhere on the map to add a package?
; 302  : 					tactical_add_package (urec->GetID(),ctrl);

	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_package
	add	esp, 12					; 0000000cH

; 303  : 					break;

	jmp	SHORT $LN11@SelectTarg
$LN3@SelectTarg:

; 304  : 				case ADD_BATTALION: // Click anywhere on the map to add a unit
; 305  : 					tactical_add_battalion(urec->GetID(),ctrl);

	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_battalion
	add	esp, 12					; 0000000cH

; 306  : 					break;

	jmp	SHORT $LN11@SelectTarg
$LN2@SelectTarg:

; 307  : 				case ADD_SQUADRON: // Click on an airbase to add a squadron
; 308  : 					tactical_add_squadron(urec->GetID());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_squadron@@YAXVVU_ID@@@Z	; tactical_add_squadron
	add	esp, 8
$LN11@SelectTarg:

; 309  : 					break;
; 310  : /*				case ADD_TASKFORCE: // Click on an airbase to add a squadron
; 311  : 					tactical_add_taskforce(urec->GetID(),ctrl);
; 312  : 					break;
; 313  : */
; 314  : 				default:
; 315  : 					break;
; 316  : 			}
; 317  : 		}
; 318  : 	}
; 319  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@SelectTarg:
	DD	$LN5@SelectTarg
	DD	$LN4@SelectTarg
	DD	$LN3@SelectTarg
	DD	$LN11@SelectTarg
	DD	$LN2@SelectTarg
?SelectTargetCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectTargetCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
_id$ = -16						; size = 8
_icon$ = -8						; size = 4
_urec$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?AddSquadronToAirbaseCB@@YAXJFPAVC_Base@@@Z PROC	; AddSquadronToAirbaseCB

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 259  : 	C_MapIcon *icon;
; 260  : 	UI_Refresher *urec;
; 261  : 	VU_ID id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 262  : 
; 263  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@AddSquadro

; 264  : 		return;

	jmp	SHORT $LN4@AddSquadro
$LN3@AddSquadro:

; 265  : 
; 266  : 	icon=(C_MapIcon*)ctrl;

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	DWORD PTR _icon$[ebp], ecx

; 267  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@AddSquadro

; 268  : 	{
; 269  : 		ID=icon->GetIconID();

	mov	ecx, DWORD PTR _icon$[ebp]
	call	?GetIconID@C_MapIcon@@QAEJXZ		; C_MapIcon::GetIconID
	mov	DWORD PTR _ID$[ebp], eax

; 270  : 		urec=(UI_Refresher*)gGps->Find(ID);

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax

; 271  : 		if(urec)

	cmp	DWORD PTR _urec$[ebp], 0
	je	SHORT $LN4@AddSquadro

; 272  : 			tactical_add_squadron (urec->GetID());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_squadron@@YAXVVU_ID@@@Z	; tactical_add_squadron
	add	esp, 8
$LN4@AddSquadro:

; 273  : 	}
; 274  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddSquadronToAirbaseCB@@YAXJFPAVC_Base@@@Z ENDP	; AddSquadronToAirbaseCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?ClearMapToolStates@@YAXJ@Z PROC			; ClearMapToolStates

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 103  : 	C_Window *win;
; 104  : 	C_Button *ctrl;
; 105  : 
; 106  : 	win=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 107  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@ClearMapTo

; 108  : 	{
; 109  : 		ctrl = (C_Button *) win->FindControl (ADD_FLIGHT);

	push	40003					; 00009c43H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 110  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@ClearMapTo

; 111  : 		{
; 112  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN8@ClearMapTo:

; 113  : 		}
; 114  : 
; 115  : 		ctrl = (C_Button *) win->FindControl (ADD_PACKAGE);

	push	40004					; 00009c44H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 116  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@ClearMapTo

; 117  : 		{
; 118  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN7@ClearMapTo:

; 119  : 		}
; 120  : 
; 121  : 		ctrl = (C_Button *) win->FindControl (ADD_BATTALION);

	push	40005					; 00009c45H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 122  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@ClearMapTo

; 123  : 		{
; 124  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN6@ClearMapTo:

; 125  : 		}
; 126  : 
; 127  : 		ctrl = (C_Button *) win->FindControl (ADD_NAVAL);

	push	40006					; 00009c46H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 128  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@ClearMapTo

; 129  : 		{
; 130  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN5@ClearMapTo:

; 131  : 		}
; 132  : 
; 133  : 		ctrl = (C_Button *) win->FindControl (ADD_SQUADRON);

	push	40007					; 00009c47H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 134  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@ClearMapTo

; 135  : 		{
; 136  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN4@ClearMapTo:

; 137  : 		}
; 138  : 
; 139  : 		ctrl = (C_Button *) win->FindControl (COPY_UNIT);

	push	40008					; 00009c48H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 140  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@ClearMapTo

; 141  : 		{
; 142  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN3@ClearMapTo:

; 143  : 		}
; 144  : 
; 145  : 		ctrl = (C_Button *) win->FindControl (DELETE_UNIT);

	push	40009					; 00009c49H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 146  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@ClearMapTo

; 147  : 		{
; 148  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN2@ClearMapTo:

; 149  : 		}
; 150  : 
; 151  : 		ctrl = (C_Button *) win->FindControl (EDIT_UNIT);

	push	40010					; 00009c4aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 152  : 		if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@ClearMapTo

; 153  : 		{
; 154  : 			ctrl->SetState(0);

	push	0
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN10@ClearMapTo:

; 155  : 		}
; 156  : 	}
; 157  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearMapToolStates@@YAXJ@Z ENDP			; ClearMapToolStates
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
?update_gMapMgr@@YAXXZ PROC				; update_gMapMgr

; 1173 : {

	push	ebp
	mov	ebp, esp

; 1174 : 	// This is NOW handled by the GPS
; 1175 : }

	pop	ebp
	ret	0
?update_gMapMgr@@YAXXZ ENDP				; update_gMapMgr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
tv128 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z PROC		; SelectToolTypeCB

; 363  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 364  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN24@SelectTool

; 365  : 		return;

	jmp	$LN25@SelectTool
$LN24@SelectTool:

; 366  : 
; 367  : 	gMapMgr->SetAllObjCallbacks(NULL);

	push	0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 368  : 	gMapMgr->SetAllAirUnitCallbacks(UnitCB);

	push	OFFSET ?UnitCB@@YAXJFPAVC_Base@@@Z	; UnitCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllAirUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllAirUnitCallbacks

; 369  : 	gMapMgr->SetAllGroundUnitCallbacks(UnitCB);

	push	OFFSET ?UnitCB@@YAXJFPAVC_Base@@@Z	; UnitCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllGroundUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllGroundUnitCallbacks

; 370  : 	gMapMgr->SetAllNavalUnitCallbacks(UnitCB);

	push	OFFSET ?UnitCB@@YAXJFPAVC_Base@@@Z	; UnitCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllNavalUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllNavalUnitCallbacks

; 371  : 	if(CurMapTool && CurMapTool == control)

	cmp	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool
	je	SHORT $LN23@SelectTool
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	cmp	ecx, DWORD PTR _control$[ebp]
	jne	SHORT $LN23@SelectTool

; 372  : 	{
; 373  : 		CurMapTool->SetState(0);

	push	0
	mov	edx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 374  : 		CurMapTool->Refresh();

	mov	eax, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 375  : 		CurMapTool=NULL;

	mov	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool

; 376  : 		SetToolbarDirections(TXT_SPACE);

	push	153					; 00000099H
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
	jmp	$LN25@SelectTool
$LN23@SelectTool:

; 377  : 	}
; 378  : 	else if(!control)

	cmp	DWORD PTR _control$[ebp], 0
	jne	SHORT $LN21@SelectTool

; 379  : 	{
; 380  : 		if(CurMapTool)

	cmp	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool
	je	SHORT $LN20@SelectTool

; 381  : 		{
; 382  : 			CurMapTool->SetState(0);

	push	0
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 383  : 			CurMapTool->Refresh();

	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 384  : 			CurMapTool=NULL;

	mov	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool
$LN20@SelectTool:

; 385  : 		}
; 386  : 		SetToolbarDirections(TXT_SPACE);

	push	153					; 00000099H
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4

; 387  : 	}
; 388  : 	else

	jmp	$LN25@SelectTool
$LN21@SelectTool:

; 389  : 	{
; 390  : 		CurMapTool=control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, ecx ; CurMapTool

; 391  : 		switch(CurMapTool->GetID())

	mov	ecx, DWORD PTR ?CurMapTool@@3PAVC_Base@@A ; CurMapTool
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	mov	DWORD PTR tv128[ebp], eax
	cmp	DWORD PTR tv128[ebp], 40003		; 00009c43H
	jg	SHORT $LN27@SelectTool
	cmp	DWORD PTR tv128[ebp], 40003		; 00009c43H
	je	SHORT $LN16@SelectTool
	cmp	DWORD PTR tv128[ebp], 3
	je	$LN1@SelectTool
	jmp	$LN25@SelectTool
$LN27@SelectTool:
	mov	edx, DWORD PTR tv128[ebp]
	sub	edx, 40004				; 00009c44H
	mov	DWORD PTR tv128[ebp], edx
	cmp	DWORD PTR tv128[ebp], 6
	ja	$LN25@SelectTool
	mov	eax, DWORD PTR tv128[ebp]
	jmp	DWORD PTR $LN28@SelectTool[eax*4]
$LN16@SelectTool:

; 392  : 		{
; 393  : 			case ADD_FLIGHT:
; 394  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	je	SHORT $LN15@SelectTool

; 395  : 				{
; 396  : 					gMapMgr->SetAllObjCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 397  : 					gMapMgr->SetAllAirUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllAirUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllAirUnitCallbacks

; 398  : 					gMapMgr->SetAllGroundUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllGroundUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllGroundUnitCallbacks

; 399  : 					gMapMgr->SetAllNavalUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllNavalUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllNavalUnitCallbacks

; 400  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN15@SelectTool:

; 401  : 				}
; 402  : 				break;

	jmp	$LN25@SelectTool
$LN14@SelectTool:

; 403  : 			case ADD_PACKAGE:
; 404  : 				gMapMgr->SetAllObjCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 405  : 				gMapMgr->SetAllAirUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllAirUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllAirUnitCallbacks

; 406  : 				gMapMgr->SetAllGroundUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllGroundUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllGroundUnitCallbacks

; 407  : 				gMapMgr->SetAllNavalUnitCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllNavalUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllNavalUnitCallbacks

; 408  : 				SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4

; 409  : 				break;

	jmp	$LN25@SelectTool
$LN13@SelectTool:

; 410  : 			case ADD_BATTALION: // Click anywhere on the map to add a unit
; 411  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	je	SHORT $LN12@SelectTool

; 412  : 				{
; 413  : 					gMapMgr->SetAllObjCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 414  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN12@SelectTool:

; 415  : 				}
; 416  : 				break;

	jmp	$LN25@SelectTool
$LN11@SelectTool:

; 417  : 			case ADD_NAVAL: // Click anywhere on the map to add a unit
; 418  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 524288				; 00080000H
	je	SHORT $LN10@SelectTool

; 419  : 				{
; 420  : 					gMapMgr->SetAllObjCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 421  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN10@SelectTool:

; 422  : 				}
; 423  : 				break;

	jmp	$LN25@SelectTool
$LN9@SelectTool:

; 424  : 			case ADD_SQUADRON: // Click on an airbase to add a squadron
; 425  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	je	SHORT $LN8@SelectTool

; 426  : 				{
; 427  : 					gMapMgr->SetAllObjCallbacks(SelectTargetCB);

	push	OFFSET ?SelectTargetCB@@YAXJFPAVC_Base@@@Z ; SelectTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 428  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4

; 429  : 					gMapMgr->SetObjCallbacks(1,AddSquadronToAirbaseCB);

	push	OFFSET ?AddSquadronToAirbaseCB@@YAXJFPAVC_Base@@@Z ; AddSquadronToAirbaseCB
	push	1
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetObjCallbacks@C_Map@@QAEXJP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetObjCallbacks
$LN8@SelectTool:

; 430  : 				}
; 431  : 				break;

	jmp	$LN25@SelectTool
$LN7@SelectTool:

; 432  : 			case COPY_UNIT: // Pick a unit to copy
; 433  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	je	SHORT $LN6@SelectTool

; 434  : 				{
; 435  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN6@SelectTool:

; 436  : 				}
; 437  : 				break;

	jmp	$LN25@SelectTool
$LN5@SelectTool:

; 438  : 			case DELETE_UNIT: // Pick a unit to delete
; 439  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 524288				; 00080000H
	je	SHORT $LN4@SelectTool

; 440  : 				{
; 441  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN4@SelectTool:

; 442  : 				}
; 443  : 				break;

	jmp	SHORT $LN25@SelectTool
$LN3@SelectTool:

; 444  : 			case EDIT_UNIT: // Pick a unit to edit
; 445  : 				if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 524288				; 00080000H
	je	SHORT $LN2@SelectTool

; 446  : 				{
; 447  : 					SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN2@SelectTool:

; 448  : 				}
; 449  : 				break;

	jmp	SHORT $LN25@SelectTool
$LN1@SelectTool:

; 450  : 			case TARGET_VC:
; 451  : 				gMapMgr->SetAllObjCallbacks(SelectVCTargetCB);

	push	OFFSET ?SelectVCTargetCB@@YAXJFPAVC_Base@@@Z ; SelectVCTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllObjCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllObjCallbacks

; 452  : 				gMapMgr->SetAllAirUnitCallbacks(SelectVCTargetCB);

	push	OFFSET ?SelectVCTargetCB@@YAXJFPAVC_Base@@@Z ; SelectVCTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllAirUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllAirUnitCallbacks

; 453  : 				gMapMgr->SetAllGroundUnitCallbacks(SelectVCTargetCB);

	push	OFFSET ?SelectVCTargetCB@@YAXJFPAVC_Base@@@Z ; SelectVCTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllGroundUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllGroundUnitCallbacks

; 454  : 				gMapMgr->SetAllNavalUnitCallbacks(SelectVCTargetCB);

	push	OFFSET ?SelectVCTargetCB@@YAXJFPAVC_Base@@@Z ; SelectVCTargetCB
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAllNavalUnitCallbacks@C_Map@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_Map::SetAllNavalUnitCallbacks

; 455  : 				SetToolbarDirections(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?SetToolbarDirections@@YAXJ@Z		; SetToolbarDirections
	add	esp, 4
$LN25@SelectTool:

; 456  : 				break;
; 457  : 		}
; 458  : 	}
; 459  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@SelectTool:
	DD	$LN14@SelectTool
	DD	$LN13@SelectTool
	DD	$LN11@SelectTool
	DD	$LN9@SelectTool
	DD	$LN7@SelectTool
	DD	$LN5@SelectTool
	DD	$LN3@SelectTool
?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectToolTypeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
$T1 = -56						; size = 8
$T2 = -48						; size = 8
$T3 = -40						; size = 8
_tree$ = -32						; size = 4
_piggy$ = -28						; size = 4
_icon$ = -24						; size = 4
_item$ = -20						; size = 4
_iconid$ = -16						; size = 4
_urec$ = -12						; size = 4
tv140 = -8						; size = 4
_caller$ = -4						; size = 4
_ID$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?tactical_airbase_menu@@YAXJFPAVC_Base@@@Z PROC		; tactical_airbase_menu

; 1049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H

; 1050 : 	C_Base
; 1051 : 		*caller;
; 1052 : 
; 1053 : 	long
; 1054 : 		iconid;
; 1055 : 
; 1056 : 	C_MapIcon
; 1057 : 		*icon;
; 1058 : 
; 1059 : 	C_DrawList
; 1060 : 		*piggy;
; 1061 : 
; 1062 : 	C_TreeList
; 1063 : 		*tree;
; 1064 : 
; 1065 : 	TREELIST
; 1066 : 		*item;
; 1067 : 
; 1068 : 	UI_Refresher
; 1069 : 		*urec;
; 1070 : 	
; 1071 : 	urec = NULL;

	mov	DWORD PTR _urec$[ebp], 0

; 1072 : 
; 1073 : 	caller = gPopupMgr->GetCallingControl ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _caller$[ebp], eax

; 1074 : 
; 1075 : 	if(caller == NULL)

	cmp	DWORD PTR _caller$[ebp], 0
	jne	SHORT $LN16@tactical_a

; 1076 : 	{
; 1077 : 		return;

	jmp	$LN17@tactical_a
$LN16@tactical_a:

; 1078 : 	}
; 1079 : 
; 1080 : 	if (caller->_GetCType_() == _CNTL_MAPICON_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16389				; 00004005H
	jne	SHORT $LN15@tactical_a

; 1081 : 	{
; 1082 : 		icon = (C_MapIcon *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _icon$[ebp], ecx

; 1083 : 
; 1084 : 		iconid = icon->GetIconID ();

	mov	ecx, DWORD PTR _icon$[ebp]
	call	?GetIconID@C_MapIcon@@QAEJXZ		; C_MapIcon::GetIconID
	mov	DWORD PTR _iconid$[ebp], eax

; 1085 : 
; 1086 : 		urec = (UI_Refresher *) gGps->Find (iconid);

	mov	edx, DWORD PTR _iconid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
	jmp	SHORT $LN14@tactical_a
$LN15@tactical_a:

; 1087 : 	}
; 1088 : 	else if (caller->_GetCType_() == _CNTL_DRAWLIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16416				; 00004020H
	jne	SHORT $LN13@tactical_a

; 1089 : 	{
; 1090 : 		piggy = (C_DrawList *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _piggy$[ebp], ecx

; 1091 : 
; 1092 : 		iconid = piggy->GetIconID ();

	mov	ecx, DWORD PTR _piggy$[ebp]
	call	?GetIconID@C_DrawList@@QAEJXZ		; C_DrawList::GetIconID
	mov	DWORD PTR _iconid$[ebp], eax

; 1093 : 
; 1094 : 		urec = (UI_Refresher *) gGps->Find (iconid);

	mov	edx, DWORD PTR _iconid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
	jmp	SHORT $LN14@tactical_a
$LN13@tactical_a:

; 1095 : 	}
; 1096 : 	else if (caller->_GetCType_() == _CNTL_TREELIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16397				; 0000400dH
	jne	SHORT $LN14@tactical_a

; 1097 : 	{
; 1098 : 		tree = (C_TreeList *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 1099 : 
; 1100 : 		item = tree->GetLastItem ();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 1101 : 
; 1102 : 		if (item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN14@tactical_a

; 1103 : 		{
; 1104 : 			urec = (UI_Refresher *) gGps->Find (item->ID_);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
$LN14@tactical_a:

; 1105 : 		}
; 1106 : 	}
; 1107 : 
; 1108 : 	switch (ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	cmp	DWORD PTR tv140[ebp], 86111		; 0001505fH
	jg	SHORT $LN19@tactical_a
	cmp	DWORD PTR tv140[ebp], 86111		; 0001505fH
	je	SHORT $LN7@tactical_a
	cmp	DWORD PTR tv140[ebp], 18113		; 000046c1H
	je	$LN2@tactical_a
	cmp	DWORD PTR tv140[ebp], 18114		; 000046c2H
	je	$LN3@tactical_a
	jmp	$LN1@tactical_a
$LN19@tactical_a:
	cmp	DWORD PTR tv140[ebp], 86112		; 00015060H
	je	SHORT $LN6@tactical_a
	cmp	DWORD PTR tv140[ebp], 86116		; 00015064H
	je	SHORT $LN5@tactical_a
	cmp	DWORD PTR tv140[ebp], 86117		; 00015065H
	je	SHORT $LN4@tactical_a
	jmp	$LN1@tactical_a
$LN7@tactical_a:

; 1109 : 	{
; 1110 : 		case MID_RECON:
; 1111 : 		{
; 1112 : 			//MonoPrint ("Recon\n");
; 1113 : 
; 1114 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1115 : 
; 1116 : 			break;

	jmp	$LN17@tactical_a
$LN6@tactical_a:

; 1117 : 		}
; 1118 : 
; 1119 : 		case MID_ADD_PACKAGE:
; 1120 : 		{
; 1121 : 			tactical_add_package (urec->GetID(),control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_package
	add	esp, 12					; 0000000cH

; 1122 : 
; 1123 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1124 : 			break;

	jmp	SHORT $LN17@tactical_a
$LN5@tactical_a:

; 1125 : 		}
; 1126 : 
; 1127 : 		case MID_ADD_VC:
; 1128 : 		{
; 1129 : 			tactical_add_victory_condition (urec->GetID(),NULL);

	push	0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_victory_condition@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_victory_condition
	add	esp, 12					; 0000000cH

; 1130 : 
; 1131 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1132 : 			break;

	jmp	SHORT $LN17@tactical_a
$LN4@tactical_a:

; 1133 : 		}
; 1134 : 
; 1135 : 		case MID_SET_OWNER:
; 1136 : 		{
; 1137 : 			//MonoPrint ("Set Owner\n");
; 1138 : 
; 1139 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1140 : 			break;

	jmp	SHORT $LN17@tactical_a
$LN3@tactical_a:

; 1141 : 		}
; 1142 : 
; 1143 : 		case MID_ADD_SQUADRON:
; 1144 : 		{
; 1145 : 			tactical_add_squadron (urec->GetID());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_squadron@@YAXVVU_ID@@@Z	; tactical_add_squadron
	add	esp, 8

; 1146 : 
; 1147 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1148 : 			break;

	jmp	SHORT $LN17@tactical_a
$LN2@tactical_a:

; 1149 : 		}
; 1150 : 
; 1151 : 		case MID_ALTERNATE_FIELD:
; 1152 : 		{
; 1153 : 			//MonoPrint ("Alternate Field %d\n", ((C_PopupList *)control)->GetItemState(ID));
; 1154 : 			break;

	jmp	SHORT $LN17@tactical_a
$LN1@tactical_a:

; 1155 : 		}
; 1156 : 
; 1157 : 		default:
; 1158 : 		{
; 1159 : 			//MonoPrint ("Unknown Object Menu Item\n");
; 1160 : 
; 1161 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu
$LN17@tactical_a:

; 1162 : 
; 1163 : 			break;
; 1164 : 		}
; 1165 : 	}
; 1166 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_airbase_menu@@YAXJFPAVC_Base@@@Z ENDP		; tactical_airbase_menu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
$T1 = -48						; size = 8
$T2 = -40						; size = 8
_tree$ = -32						; size = 4
_piggy$ = -28						; size = 4
_icon$ = -24						; size = 4
_item$ = -20						; size = 4
_iconid$ = -16						; size = 4
_urec$ = -12						; size = 4
tv140 = -8						; size = 4
_caller$ = -4						; size = 4
_ID$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_objective_menu@@YAXJFPAVC_Base@@@Z PROC	; tactical_objective_menu

; 929  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 930  : 	C_Base
; 931  : 		*caller;
; 932  : 
; 933  : 	C_MapIcon
; 934  : 		*icon;
; 935  : 
; 936  : 	C_DrawList
; 937  : 		*piggy;
; 938  : 
; 939  : 	C_TreeList
; 940  : 		*tree;
; 941  : 
; 942  : 	long
; 943  : 		iconid;
; 944  : 
; 945  : 	TREELIST
; 946  : 		*item;
; 947  : 
; 948  : 	UI_Refresher
; 949  : 		*urec;
; 950  : 	
; 951  : 	urec = NULL;

	mov	DWORD PTR _urec$[ebp], 0

; 952  : 
; 953  : 	caller = gPopupMgr->GetCallingControl ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _caller$[ebp], eax

; 954  : 
; 955  : 	if(caller == NULL)

	cmp	DWORD PTR _caller$[ebp], 0
	jne	SHORT $LN16@tactical_o

; 956  : 	{
; 957  : 		return;

	jmp	$LN17@tactical_o
$LN16@tactical_o:

; 958  : 	}
; 959  : 
; 960  : 	if (caller->_GetCType_() == _CNTL_MAPICON_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16389				; 00004005H
	jne	SHORT $LN15@tactical_o

; 961  : 	{
; 962  : 		icon = (C_MapIcon *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _icon$[ebp], ecx

; 963  : 
; 964  : 		iconid = icon->GetIconID ();

	mov	ecx, DWORD PTR _icon$[ebp]
	call	?GetIconID@C_MapIcon@@QAEJXZ		; C_MapIcon::GetIconID
	mov	DWORD PTR _iconid$[ebp], eax

; 965  : 
; 966  : 		urec = (UI_Refresher *) gGps->Find (iconid);

	mov	edx, DWORD PTR _iconid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
	jmp	SHORT $LN14@tactical_o
$LN15@tactical_o:

; 967  : 	}
; 968  : 	else if (caller->_GetCType_() == _CNTL_DRAWLIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16416				; 00004020H
	jne	SHORT $LN13@tactical_o

; 969  : 	{
; 970  : 		piggy = (C_DrawList *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _piggy$[ebp], ecx

; 971  : 
; 972  : 		iconid = piggy->GetIconID ();

	mov	ecx, DWORD PTR _piggy$[ebp]
	call	?GetIconID@C_DrawList@@QAEJXZ		; C_DrawList::GetIconID
	mov	DWORD PTR _iconid$[ebp], eax

; 973  : 
; 974  : 		urec = (UI_Refresher *) gGps->Find (iconid);

	mov	edx, DWORD PTR _iconid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
	jmp	SHORT $LN14@tactical_o
$LN13@tactical_o:

; 975  : 	}
; 976  : 	else if (caller->_GetCType_() == _CNTL_TREELIST_)

	mov	ecx, DWORD PTR _caller$[ebp]
	call	?_GetCType_@C_Base@@QAEFXZ		; C_Base::_GetCType_
	cwde
	cmp	eax, 16397				; 0000400dH
	jne	SHORT $LN14@tactical_o

; 977  : 	{
; 978  : 		tree = (C_TreeList *) caller;

	mov	ecx, DWORD PTR _caller$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 979  : 
; 980  : 		item = tree->GetLastItem ();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 981  : 
; 982  : 		if (item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN14@tactical_o

; 983  : 		{
; 984  : 			urec = (UI_Refresher *) gGps->Find (item->ID_);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Find@GlobalPositioningSystem@@QAEPAXJ@Z ; GlobalPositioningSystem::Find
	mov	DWORD PTR _urec$[ebp], eax
$LN14@tactical_o:

; 985  : 		}
; 986  : 	}
; 987  : 
; 988  : 	switch (ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	cmp	DWORD PTR tv140[ebp], 86111		; 0001505fH
	jg	SHORT $LN19@tactical_o
	cmp	DWORD PTR tv140[ebp], 86111		; 0001505fH
	je	SHORT $LN7@tactical_o
	cmp	DWORD PTR tv140[ebp], 18113		; 000046c1H
	je	$LN2@tactical_o
	jmp	$LN1@tactical_o
$LN19@tactical_o:
	mov	edx, DWORD PTR tv140[ebp]
	sub	edx, 86112				; 00015060H
	mov	DWORD PTR tv140[ebp], edx
	cmp	DWORD PTR tv140[ebp], 6
	ja	SHORT $LN1@tactical_o
	mov	eax, DWORD PTR tv140[ebp]
	jmp	DWORD PTR $LN20@tactical_o[eax*4]
$LN7@tactical_o:

; 989  : 	{
; 990  : 		case MID_RECON:
; 991  : 		{
; 992  : 			//MonoPrint ("Recon\n");
; 993  : 
; 994  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 995  : 
; 996  : 			break;

	jmp	SHORT $LN17@tactical_o
$LN6@tactical_o:

; 997  : 		}
; 998  : 
; 999  : 		case MID_ADD_PACKAGE:
; 1000 : 		{
; 1001 : 			tactical_add_package (urec->GetID(),caller);

	mov	ecx, DWORD PTR _caller$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_package
	add	esp, 12					; 0000000cH

; 1002 : 
; 1003 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1004 : 			break;

	jmp	SHORT $LN17@tactical_o
$LN5@tactical_o:

; 1005 : 		}
; 1006 : 
; 1007 : 		case MID_ADD_VC:
; 1008 : 		{
; 1009 : 			tactical_add_victory_condition (urec->GetID (),NULL);

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _urec$[ebp]
	call	?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ	; UI_Refresher::GetID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?tactical_add_victory_condition@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_victory_condition
	add	esp, 12					; 0000000cH

; 1010 : 
; 1011 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 1012 : 			break;

	jmp	SHORT $LN17@tactical_o
$LN4@tactical_o:

; 1013 : 		}
; 1014 : 
; 1015 : 		case MID_SET_OWNER:
; 1016 : 		{
; 1017 : 			//MonoPrint ("Set Owner\n");
; 1018 : 			break;

	jmp	SHORT $LN17@tactical_o
$LN3@tactical_o:

; 1019 : 		}
; 1020 : 
; 1021 : 		case MID_SQUADRONS:
; 1022 : 		{
; 1023 : 			//MonoPrint ("Squadrons\n");
; 1024 : 			break;

	jmp	SHORT $LN17@tactical_o
$LN2@tactical_o:

; 1025 : 		}
; 1026 : 
; 1027 : 		case MID_ALTERNATE_FIELD:
; 1028 : 		{
; 1029 : 			//MonoPrint ("Alternate Field %d\n", ((C_PopupList *)control)->GetItemState(ID));
; 1030 : 			break;

	jmp	SHORT $LN17@tactical_o
$LN1@tactical_o:

; 1031 : 		}
; 1032 : 
; 1033 : 		default:
; 1034 : 		{
; 1035 : 			//MonoPrint ("Unknown Object Menu Item\n");
; 1036 : 
; 1037 : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu
$LN17@tactical_o:

; 1038 : 
; 1039 : 			break;
; 1040 : 		}
; 1041 : 	}
; 1042 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@tactical_o:
	DD	$LN6@tactical_o
	DD	$LN1@tactical_o
	DD	$LN1@tactical_o
	DD	$LN1@tactical_o
	DD	$LN5@tactical_o
	DD	$LN4@tactical_o
	DD	$LN3@tactical_o
?tactical_objective_menu@@YAXJFPAVC_Base@@@Z ENDP	; tactical_objective_menu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
tv257 = -16						; size = 4
tv66 = -12						; size = 4
_zoom$ = -8						; size = 4
_objective$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?gMapMgr_menu@@YAXJFPAVC_Base@@@Z PROC			; gMapMgr_menu

; 676  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 677  : 	int
; 678  : 		objective = -1,

	mov	DWORD PTR _objective$[ebp], -1

; 679  : 		zoom;
; 680  : 
; 681  : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN54@gMapMgr_me

; 682  : 	{
; 683  : 		return;

	jmp	$LN55@gMapMgr_me
$LN54@gMapMgr_me:

; 684  : 	}
; 685  : 
; 686  : 	switch (ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR tv66[ebp]
	sub	edx, 86003				; 00014ff3H
	mov	DWORD PTR tv66[ebp], edx
	cmp	DWORD PTR tv66[ebp], 110		; 0000006eH
	ja	$LN6@gMapMgr_me
	mov	eax, DWORD PTR tv66[ebp]
	movzx	ecx, BYTE PTR $LN57@gMapMgr_me[eax]
	jmp	DWORD PTR $LN58@gMapMgr_me[ecx*4]
$LN51@gMapMgr_me:

; 687  : 	{
; 688  : 		case MID_RECON:
; 689  : 		{
; 690  : 			MonoPrint ("Map Menu Recon\n");

	push	OFFSET ??_C@_0BA@HMIFLIMG@Map?5Menu?5Recon?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 691  : 
; 692  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 693  : 			break;

	jmp	$LN52@gMapMgr_me
$LN50@gMapMgr_me:

; 694  : 		}
; 695  : 
; 696  : 		case MID_ADD_BATTALION:
; 697  : 		{
; 698  : 			tactical_add_battalion (FalconNullId,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	ecx
	call	?tactical_add_battalion@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_battalion
	add	esp, 12					; 0000000cH

; 699  : 
; 700  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 701  : 			break;

	jmp	$LN52@gMapMgr_me
$LN49@gMapMgr_me:

; 702  : 		}
; 703  : 
; 704  : 		case MID_ADD_PACKAGE:
; 705  : 		{
; 706  : 			tactical_add_package (FalconNullId,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	ecx
	call	?tactical_add_package@@YAXVVU_ID@@PAVC_Base@@@Z ; tactical_add_package
	add	esp, 12					; 0000000cH

; 707  : 
; 708  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 709  : 			break;

	jmp	$LN52@gMapMgr_me
$LN48@gMapMgr_me:

; 710  : 		}
; 711  : 
; 712  : 		case MID_ZOOM_IN:
; 713  : 		{
; 714  : 			zoom = gMapMgr->GetZoomLevel ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetZoomLevel@C_Map@@QAEJXZ		; C_Map::GetZoomLevel
	mov	DWORD PTR _zoom$[ebp], eax

; 715  : 
; 716  : 			if (zoom >= 64)	// MAX_ZOOM_LEVEL

	cmp	DWORD PTR _zoom$[ebp], 64		; 00000040H
	jl	SHORT $LN47@gMapMgr_me

; 717  : 			{
; 718  : 				return;

	jmp	$LN55@gMapMgr_me
$LN47@gMapMgr_me:

; 719  : 			}
; 720  : 
; 721  : 			zoom *= 2;

	mov	edx, DWORD PTR _zoom$[ebp]
	shl	edx, 1
	mov	DWORD PTR _zoom$[ebp], edx

; 722  : 
; 723  : 			//MonoPrint ("Zoom In %d\n", zoom);
; 724  : 
; 725  : 			gMapMgr->SetZoomLevel(static_cast<short>(zoom));

	movzx	eax, WORD PTR _zoom$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetZoomLevel@C_Map@@QAEXF@Z		; C_Map::SetZoomLevel

; 726  : 			gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 727  : 			
; 728  : 			gPopupMgr->CloseMenu();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 729  : 			break;

	jmp	$LN52@gMapMgr_me
$LN46@gMapMgr_me:

; 730  : 		}
; 731  : 
; 732  : 		case MID_ZOOM_OUT:
; 733  : 		{
; 734  : 			zoom = gMapMgr->GetZoomLevel ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetZoomLevel@C_Map@@QAEJXZ		; C_Map::GetZoomLevel
	mov	DWORD PTR _zoom$[ebp], eax

; 735  : 
; 736  : 			if (zoom <= 1)	// MAX_ZOOM_LEVEL

	cmp	DWORD PTR _zoom$[ebp], 1
	jg	SHORT $LN45@gMapMgr_me

; 737  : 			{
; 738  : 				return;

	jmp	$LN55@gMapMgr_me
$LN45@gMapMgr_me:

; 739  : 			}
; 740  : 
; 741  : 			zoom /= 2;

	mov	eax, DWORD PTR _zoom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _zoom$[ebp], eax

; 742  : 
; 743  : 			//MonoPrint ("Zoom In %d\n", zoom);
; 744  : 
; 745  : 			gMapMgr->SetZoomLevel (static_cast<short>(zoom));

	movzx	ecx, WORD PTR _zoom$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetZoomLevel@C_Map@@QAEXF@Z		; C_Map::SetZoomLevel

; 746  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 747  : 			
; 748  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 749  : 			break;

	jmp	$LN52@gMapMgr_me
$LN44@gMapMgr_me:

; 750  : 		}
; 751  : 
; 752  : 		case MID_INST_AF:			objective = _OBTV_AIR_FIELDS;		break;

	mov	DWORD PTR _objective$[ebp], 2
	jmp	$LN52@gMapMgr_me
$LN43@gMapMgr_me:

; 753  : 		case MID_INST_AD:			objective = _OBTV_AIR_DEFENSE;		break;

	mov	DWORD PTR _objective$[ebp], 1
	jmp	$LN52@gMapMgr_me
$LN42@gMapMgr_me:

; 754  : 		case MID_INST_ARMY:			objective = _OBTV_ARMY;				break;

	mov	DWORD PTR _objective$[ebp], 4
	jmp	$LN52@gMapMgr_me
$LN41@gMapMgr_me:

; 755  : 		case MID_INST_CCC:			objective = _OBTV_CCC;				break;

	mov	DWORD PTR _objective$[ebp], 8
	jmp	$LN52@gMapMgr_me
$LN40@gMapMgr_me:

; 756  : 		case MID_INST_POLITICAL:	objective = _OBTV_POLITICAL;		break;

	mov	DWORD PTR _objective$[ebp], 256		; 00000100H
	jmp	$LN52@gMapMgr_me
$LN39@gMapMgr_me:

; 757  : 		case MID_INST_INFRA:		objective = _OBTV_INFRASTRUCTURE;	break;

	mov	DWORD PTR _objective$[ebp], 16		; 00000010H
	jmp	$LN52@gMapMgr_me
$LN38@gMapMgr_me:

; 758  : 		case MID_INST_LOG:			objective = _OBTV_LOGISTICS;		break;

	mov	DWORD PTR _objective$[ebp], 32		; 00000020H
	jmp	$LN52@gMapMgr_me
$LN37@gMapMgr_me:

; 759  : 		case MID_INST_WARPROD:		objective = _OBTV_WAR_PRODUCTION;	break;

	mov	DWORD PTR _objective$[ebp], 512		; 00000200H
	jmp	$LN52@gMapMgr_me
$LN36@gMapMgr_me:

; 760  : 		case MID_INST_NAV:			objective = _OBTV_NAVIGATION;		break;

	mov	DWORD PTR _objective$[ebp], 128		; 00000080H
	jmp	$LN52@gMapMgr_me
$LN35@gMapMgr_me:

; 761  : 		case MID_INST_OTHER:		objective = _OBTV_OTHER;			break;

	mov	DWORD PTR _objective$[ebp], 64		; 00000040H
	jmp	$LN52@gMapMgr_me
$LN34@gMapMgr_me:

; 762  : 		case MID_INST_NAVAL:		objective = _OBTV_NAVAL;			break;

	mov	DWORD PTR _objective$[ebp], 1024	; 00000400H
	jmp	$LN52@gMapMgr_me

; 763  : 
; 764  : 			break;

	jmp	$LN52@gMapMgr_me
$LN33@gMapMgr_me:

; 765  : 		case MID_UNITS_COMBAT:
; 766  : 		{
; 767  : 			gMapMgr->SetUnitLevel(2);

	push	2
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetUnitLevel@C_Map@@QAEXJ@Z		; C_Map::SetUnitLevel

; 768  : 
; 769  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	cwde
	test	eax, eax
	je	SHORT $LN32@gMapMgr_me

; 770  : 				gMapMgr->ShowUnitType(_UNIT_COMBAT);

	push	2
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowUnitType

; 771  : 			else

	jmp	SHORT $LN31@gMapMgr_me
$LN32@gMapMgr_me:

; 772  : 				gMapMgr->HideUnitType(_UNIT_COMBAT);

	push	2
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideUnitType@C_Map@@QAEXJ@Z		; C_Map::HideUnitType
$LN31@gMapMgr_me:

; 773  : 
; 774  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 775  : 
; 776  : 			break;

	jmp	$LN52@gMapMgr_me
$LN30@gMapMgr_me:

; 777  : 		}
; 778  : 
; 779  : 		case MID_UNITS_AD:
; 780  : 		{
; 781  : 			gMapMgr->SetUnitLevel(2);

	push	2
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetUnitLevel@C_Map@@QAEXJ@Z		; C_Map::SetUnitLevel

; 782  : 
; 783  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	edx, ax
	test	edx, edx
	je	SHORT $LN29@gMapMgr_me

; 784  : 				gMapMgr->ShowUnitType(_UNIT_AIR_DEFENSE);

	push	1
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowUnitType

; 785  : 			else

	jmp	SHORT $LN28@gMapMgr_me
$LN29@gMapMgr_me:

; 786  : 				gMapMgr->HideUnitType(_UNIT_AIR_DEFENSE);

	push	1
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideUnitType@C_Map@@QAEXJ@Z		; C_Map::HideUnitType
$LN28@gMapMgr_me:

; 787  : 
; 788  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 789  : 
; 790  : 			break;

	jmp	$LN52@gMapMgr_me
$LN27@gMapMgr_me:

; 791  : 		}
; 792  : 
; 793  : 		case MID_UNITS_SUPPORT:
; 794  : 		{
; 795  : 			gMapMgr->SetUnitLevel(2);

	push	2
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetUnitLevel@C_Map@@QAEXJ@Z		; C_Map::SetUnitLevel

; 796  : 
; 797  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN26@gMapMgr_me

; 798  : 				gMapMgr->ShowUnitType(_UNIT_SUPPORT);

	push	4
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowUnitType

; 799  : 			else

	jmp	SHORT $LN25@gMapMgr_me
$LN26@gMapMgr_me:

; 800  : 				gMapMgr->HideUnitType(_UNIT_SUPPORT);

	push	4
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideUnitType@C_Map@@QAEXJ@Z		; C_Map::HideUnitType
$LN25@gMapMgr_me:

; 801  : 
; 802  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 803  : 
; 804  : 			break;

	jmp	$LN52@gMapMgr_me
$LN24@gMapMgr_me:

; 805  : 		}
; 806  : 
; 807  : 		case MID_UNITS_SQUAD_FIGHTER:
; 808  : 		{
; 809  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	cwde
	test	eax, eax
	je	SHORT $LN23@gMapMgr_me

; 810  : 				gMapMgr->ShowAirUnitType(_UNIT_FIGHTER);

	push	128					; 00000080H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowAirUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowAirUnitType

; 811  : 			else

	jmp	SHORT $LN22@gMapMgr_me
$LN23@gMapMgr_me:

; 812  : 				gMapMgr->HideAirUnitType(_UNIT_FIGHTER);

	push	128					; 00000080H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideAirUnitType@C_Map@@QAEXJ@Z		; C_Map::HideAirUnitType
$LN22@gMapMgr_me:

; 813  : 
; 814  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 815  : 
; 816  : 			break;

	jmp	$LN52@gMapMgr_me
$LN21@gMapMgr_me:

; 817  : 		}
; 818  : 
; 819  : 		case MID_UNITS_SQUAD_ATTACK:
; 820  : 		{
; 821  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	edx, ax
	test	edx, edx
	je	SHORT $LN20@gMapMgr_me

; 822  : 				gMapMgr->ShowAirUnitType(_UNIT_ATTACK);

	push	16					; 00000010H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowAirUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowAirUnitType

; 823  : 			else

	jmp	SHORT $LN19@gMapMgr_me
$LN20@gMapMgr_me:

; 824  : 				gMapMgr->HideAirUnitType(_UNIT_ATTACK);

	push	16					; 00000010H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideAirUnitType@C_Map@@QAEXJ@Z		; C_Map::HideAirUnitType
$LN19@gMapMgr_me:

; 825  : 
; 826  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 827  : 
; 828  : 			break;

	jmp	$LN52@gMapMgr_me
$LN18@gMapMgr_me:

; 829  : 		}
; 830  : 
; 831  : 		case MID_UNITS_SQUAD_BOMBER:
; 832  : 		{
; 833  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN17@gMapMgr_me

; 834  : 				gMapMgr->ShowAirUnitType(_UNIT_BOMBER);

	push	64					; 00000040H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowAirUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowAirUnitType

; 835  : 			else

	jmp	SHORT $LN16@gMapMgr_me
$LN17@gMapMgr_me:

; 836  : 				gMapMgr->HideAirUnitType(_UNIT_BOMBER);

	push	64					; 00000040H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideAirUnitType@C_Map@@QAEXJ@Z		; C_Map::HideAirUnitType
$LN16@gMapMgr_me:

; 837  : 
; 838  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 839  : 
; 840  : 			break;

	jmp	$LN52@gMapMgr_me
$LN15@gMapMgr_me:

; 841  : 		}
; 842  : 
; 843  : 		case MID_UNITS_SQUAD_SUPPORT:
; 844  : 		{
; 845  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	cwde
	test	eax, eax
	je	SHORT $LN14@gMapMgr_me

; 846  : 				gMapMgr->ShowAirUnitType(_UNIT_SUPPORT);

	push	4
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowAirUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowAirUnitType

; 847  : 			else

	jmp	SHORT $LN13@gMapMgr_me
$LN14@gMapMgr_me:

; 848  : 				gMapMgr->HideAirUnitType(_UNIT_SUPPORT);

	push	4
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideAirUnitType@C_Map@@QAEXJ@Z		; C_Map::HideAirUnitType
$LN13@gMapMgr_me:

; 849  : 
; 850  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 851  : 
; 852  : 			break;

	jmp	$LN52@gMapMgr_me
$LN12@gMapMgr_me:

; 853  : 		}
; 854  : 
; 855  : 		case MID_UNITS_SQUAD_HELI:
; 856  : 		{
; 857  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	edx, ax
	test	edx, edx
	je	SHORT $LN11@gMapMgr_me

; 858  : 				gMapMgr->ShowAirUnitType(_UNIT_HELICOPTER);

	push	32					; 00000020H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowAirUnitType@C_Map@@QAEXJ@Z		; C_Map::ShowAirUnitType

; 859  : 			else

	jmp	SHORT $LN10@gMapMgr_me
$LN11@gMapMgr_me:

; 860  : 				gMapMgr->HideAirUnitType(_UNIT_HELICOPTER);

	push	32					; 00000020H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideAirUnitType@C_Map@@QAEXJ@Z		; C_Map::HideAirUnitType
$LN10@gMapMgr_me:

; 861  : 
; 862  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 863  : 
; 864  : 			break;

	jmp	SHORT $LN52@gMapMgr_me
$LN9@gMapMgr_me:

; 865  : 		}
; 866  : 
; 867  : 		case MID_LEG_NAMES:
; 868  : 		{
; 869  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN8@gMapMgr_me

; 870  : 			{
; 871  : 				gMapMgr->TurnOnNames();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?TurnOnNames@C_Map@@QAEXXZ		; C_Map::TurnOnNames

; 872  : 			}
; 873  : 			else

	jmp	SHORT $LN7@gMapMgr_me
$LN8@gMapMgr_me:

; 874  : 			{
; 875  : 				gMapMgr->TurnOffNames();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?TurnOffNames@C_Map@@QAEXXZ		; C_Map::TurnOffNames
$LN7@gMapMgr_me:

; 876  : 			}
; 877  : 
; 878  : 			gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 879  : 
; 880  : 			return;

	jmp	SHORT $LN55@gMapMgr_me
$LN6@gMapMgr_me:

; 881  : 		}
; 882  : 
; 883  : 		default:
; 884  : 		{
; 885  : 			//MonoPrint ("Map Menu %d %08x\n", ID, control);
; 886  : 
; 887  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 888  : 
; 889  : 			gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu
$LN52@gMapMgr_me:

; 890  : 			break;
; 891  : 		}
; 892  : 	}
; 893  : 
; 894  : 	switch (ID)

	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv257[ebp], edx
	cmp	DWORD PTR tv257[ebp], 86019		; 00015003H
	jl	SHORT $LN55@gMapMgr_me
	cmp	DWORD PTR tv257[ebp], 86029		; 0001500dH
	jle	SHORT $LN3@gMapMgr_me
	jmp	SHORT $LN55@gMapMgr_me
$LN3@gMapMgr_me:

; 895  : 	{
; 896  : 		case MID_INST_AF:
; 897  : 		case MID_INST_AD:
; 898  : 		case MID_INST_ARMY:
; 899  : 		case MID_INST_CCC:
; 900  : 		case MID_INST_POLITICAL:
; 901  : 		case MID_INST_INFRA:
; 902  : 		case MID_INST_LOG:
; 903  : 		case MID_INST_WARPROD:
; 904  : 		case MID_INST_NAV:
; 905  : 		case MID_INST_OTHER:
; 906  : 		case MID_INST_NAVAL:
; 907  : 		{
; 908  : 			if(((C_PopupList *)control)->GetItemState(ID))

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetItemState@C_PopupList@@QAEFJ@Z	; C_PopupList::GetItemState
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN2@gMapMgr_me

; 909  : 			{
; 910  : 				gMapMgr->ShowObjectiveType(objective);

	mov	edx, DWORD PTR _objective$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ShowObjectiveType@C_Map@@QAEXJ@Z	; C_Map::ShowObjectiveType

; 911  : 			}
; 912  : 			else

	jmp	SHORT $LN1@gMapMgr_me
$LN2@gMapMgr_me:

; 913  : 			{
; 914  : 				gMapMgr->HideObjectiveType(objective);

	mov	eax, DWORD PTR _objective$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?HideObjectiveType@C_Map@@QAEXJ@Z	; C_Map::HideObjectiveType
$LN1@gMapMgr_me:

; 915  : 			}
; 916  : 
; 917  : 			gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap
$LN55@gMapMgr_me:

; 918  : 
; 919  : 			return;
; 920  : 		}
; 921  : 	}
; 922  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN58@gMapMgr_me:
	DD	$LN46@gMapMgr_me
	DD	$LN48@gMapMgr_me
	DD	$LN9@gMapMgr_me
	DD	$LN44@gMapMgr_me
	DD	$LN43@gMapMgr_me
	DD	$LN42@gMapMgr_me
	DD	$LN41@gMapMgr_me
	DD	$LN40@gMapMgr_me
	DD	$LN39@gMapMgr_me
	DD	$LN38@gMapMgr_me
	DD	$LN37@gMapMgr_me
	DD	$LN36@gMapMgr_me
	DD	$LN35@gMapMgr_me
	DD	$LN34@gMapMgr_me
	DD	$LN33@gMapMgr_me
	DD	$LN30@gMapMgr_me
	DD	$LN27@gMapMgr_me
	DD	$LN24@gMapMgr_me
	DD	$LN21@gMapMgr_me
	DD	$LN18@gMapMgr_me
	DD	$LN15@gMapMgr_me
	DD	$LN12@gMapMgr_me
	DD	$LN51@gMapMgr_me
	DD	$LN49@gMapMgr_me
	DD	$LN50@gMapMgr_me
	DD	$LN6@gMapMgr_me
$LN57@gMapMgr_me:
	DB	0
	DB	1
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	2
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	25					; 00000019H
	DB	17					; 00000011H
	DB	25					; 00000019H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	25					; 00000019H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	24					; 00000018H
?gMapMgr_menu@@YAXJFPAVC_Base@@@Z ENDP			; gMapMgr_menu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?gMapMgr_zoom_out@@YAXJFPAVC_Base@@@Z PROC		; gMapMgr_zoom_out

; 659  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 660  : 	F4CSECTIONHANDLE *Leave;
; 661  : 
; 662  : 	if ((hittype != C_TYPE_LMOUSEUP) && (hittype != C_TYPE_REPEAT))

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@gMapMgr_zo
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN1@gMapMgr_zo

; 663  : 		return;

	jmp	SHORT $LN2@gMapMgr_zo
$LN1@gMapMgr_zo:

; 664  : 
; 665  : 	Leave=UI_Enter(ctrl->Parent_);

	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 666  : 	gMapMgr->ZoomOut();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomOut@C_Map@@QAEXXZ			; C_Map::ZoomOut

; 667  : 	gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 668  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@gMapMgr_zo:

; 669  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?gMapMgr_zoom_out@@YAXJFPAVC_Base@@@Z ENDP		; gMapMgr_zoom_out
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?gMapMgr_zoom_in@@YAXJFPAVC_Base@@@Z PROC		; gMapMgr_zoom_in

; 642  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 643  : 	F4CSECTIONHANDLE *Leave;
; 644  : 
; 645  : 	if ((hittype != C_TYPE_LMOUSEUP) && (hittype != C_TYPE_REPEAT))

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@gMapMgr_zo
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN1@gMapMgr_zo

; 646  : 		return;

	jmp	SHORT $LN2@gMapMgr_zo
$LN1@gMapMgr_zo:

; 647  : 
; 648  : 	Leave=UI_Enter(ctrl->Parent_);

	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 649  : 	gMapMgr->ZoomIn();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomIn@C_Map@@QAEXXZ			; C_Map::ZoomIn

; 650  : 	gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 651  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@gMapMgr_zo:

; 652  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?gMapMgr_zoom_in@@YAXJFPAVC_Base@@@Z ENDP		; gMapMgr_zoom_in
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tactical_minimize_map@@YAXJFPAVC_Base@@@Z PROC		; tactical_minimize_map

; 512  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 513  : 	C_Window
; 514  : 		*win;
; 515  : 
; 516  : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@tactical_m

; 517  : 	{
; 518  : 		return;

	jmp	SHORT $LN4@tactical_m
$LN3@tactical_m:

; 519  : 	}
; 520  : 
; 521  : 	win = gMainHandler->FindWindow (TAC_PUA_MAP);

	push	30800					; 00007850H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 522  : 
; 523  : 	//MonoPrint ("Minimize %d %08x\n", control->GetGroup (), win);
; 524  : 
; 525  : 	if (win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@tactical_m

; 526  : 	{
; 527  : 		gMapMgr->SetWindow (win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 528  : 		gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap
$LN2@tactical_m:

; 529  : 	}
; 530  : 
; 531  : 	win = gMainHandler->FindWindow (TAC_PUA_MAP);

	push	30800					; 00007850H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 532  : 
; 533  : 	if (win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@tactical_m

; 534  : 	{
; 535  : 		gMainHandler->ShowWindow (win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow
$LN1@tactical_m:

; 536  : 	}
; 537  : 
; 538  : 	gMainHandler->DisableWindowGroup (control->GetGroup ());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN4@tactical_m:

; 539  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_minimize_map@@YAXJFPAVC_Base@@@Z ENDP		; tactical_minimize_map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?tactical_maximize_map@@YAXJFPAVC_Base@@@Z PROC		; tactical_maximize_map

; 480  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 481  : 	C_Window
; 482  : 		*win;
; 483  : 
; 484  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@tactical_m

; 485  : 	{
; 486  : 		return;

	jmp	SHORT $LN4@tactical_m
$LN3@tactical_m:

; 487  : 	}
; 488  : 
; 489  : 	win = gMainHandler->FindWindow (TAC_FULLMAP_WIN);

	push	30806					; 00007856H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 490  : 
; 491  : 	if (win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@tactical_m

; 492  : 	{
; 493  : 		gMapMgr->SetWindow (win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 494  : 		gMapMgr->DrawMap ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap
$LN2@tactical_m:

; 495  : 	}
; 496  : 
; 497  : 	win = gMainHandler->FindWindow (TAC_PUA_MAP);

	push	30800					; 00007850H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 498  : 
; 499  : 	if (win != NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@tactical_m

; 500  : 	{
; 501  : 		gMainHandler->HideWindow (win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@tactical_m:

; 502  : 	}
; 503  : 
; 504  : 	gMainHandler->EnableWindowGroup (control->GetGroup ());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN4@tactical_m:

; 505  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?tactical_maximize_map@@YAXJFPAVC_Base@@@Z ENDP		; tactical_maximize_map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?tactical_draw_map@@YAXJFPAVC_Base@@@Z PROC		; tactical_draw_map

; 466  : {

	push	ebp
	mov	ebp, esp

; 467  : 	// gMapMgr->SetFlags(I_NEED_TO_DRAW_MAP);
; 468  : 
; 469  : 	if (gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN2@tactical_d

; 470  : 	{
; 471  : 		gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap
$LN2@tactical_d:

; 472  : 	}
; 473  : }

	pop	ebp
	ret	0
?tactical_draw_map@@YAXJFPAVC_Base@@@Z ENDP		; tactical_draw_map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\urefresh.h
;	COMDAT ?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ PROC		; UI_Refresher::GetID, COMDAT
; _this$ = ecx

; 52   : 		VU_ID GetID() { return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetID@UI_Refresher@@QAE?AVVU_ID@@XZ ENDP		; UI_Refresher::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
?tactical_update_campaign_entities@@YAXXZ PROC		; tactical_update_campaign_entities

; 1182 : {

	push	ebp
	mov	ebp, esp

; 1183 : 	// This is NOW handled by the GPS
; 1184 : }

	pop	ebp
	ret	0
?tactical_update_campaign_entities@@YAXXZ ENDP		; tactical_update_campaign_entities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\te_map.cpp
_TEXT	SEGMENT
_ctrl$ = -4						; size = 4
_win$ = 8						; size = 4
?hookup_map_windows@@YAXPAVC_Window@@@Z PROC		; hookup_map_windows

; 160  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 161  : 	C_Button
; 162  : 		*ctrl;
; 163  : 
; 164  : 	gMainHandler->AddUserCallback (update_gMapMgr);

	push	OFFSET ?update_gMapMgr@@YAXXZ		; update_gMapMgr
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 165  : 
; 166  : 	ctrl = (C_Button *) win->FindControl (MAP_MAXIMIZE);

	push	30801					; 00007851H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 167  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@hookup_map

; 168  : 	{
; 169  : 		ctrl->SetCallback (tactical_maximize_map);

	push	OFFSET ?tactical_maximize_map@@YAXJFPAVC_Base@@@Z ; tactical_maximize_map
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@hookup_map:

; 170  : 	}
; 171  : 
; 172  : 	ctrl = (C_Button *) win->FindControl (MAP_MINIMIZE);

	push	30805					; 00007855H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 173  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@hookup_map

; 174  : 	{
; 175  : 		ctrl->SetCallback (tactical_minimize_map);

	push	OFFSET ?tactical_minimize_map@@YAXJFPAVC_Base@@@Z ; tactical_minimize_map
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@hookup_map:

; 176  : 	}
; 177  : 
; 178  : 	ctrl = (C_Button *) win->FindControl (TAC_ZOOM_IN);

	push	30803					; 00007853H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 179  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@hookup_map

; 180  : 	{
; 181  : 		ctrl->SetCallback (gMapMgr_zoom_in);

	push	OFFSET ?gMapMgr_zoom_in@@YAXJFPAVC_Base@@@Z ; gMapMgr_zoom_in
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@hookup_map:

; 182  : 	}
; 183  : 
; 184  : 	ctrl = (C_Button *) win->FindControl (TAC_ZOOM_OUT);

	push	30802					; 00007852H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 185  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN13@hookup_map

; 186  : 	{
; 187  : 		ctrl->SetCallback (gMapMgr_zoom_out);

	push	OFFSET ?gMapMgr_zoom_out@@YAXJFPAVC_Base@@@Z ; gMapMgr_zoom_out
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@hookup_map:

; 188  : 	}
; 189  : 
; 190  : 	ctrl=(C_Button *)win->FindControl(BI_LIN_CTRL);

	push	6506					; 0000196aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 191  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN12@hookup_map

; 192  : 		ctrl->SetCallback(OpenCrossSectionCB);

	push	OFFSET ?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z ; OpenCrossSectionCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@hookup_map:

; 193  : 
; 194  : 	ctrl=(C_Button *)win->FindControl(BI_LOG_CTRL);

	push	6507					; 0000196bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 195  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN11@hookup_map

; 196  : 		ctrl->SetCallback(OpenCrossSectionCB);

	push	OFFSET ?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z ; OpenCrossSectionCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@hookup_map:

; 197  : 
; 198  : 	ctrl=(C_Button *)win->FindControl(BI_FIT_CTRL);

	push	6505					; 00001969H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 199  : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@hookup_map

; 200  : 		ctrl->SetCallback(FitFlightPlanCB);

	push	OFFSET ?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z ; FitFlightPlanCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@hookup_map:

; 201  : 
; 202  : 	ctrl = (C_Button *) win->FindControl (ADD_FLIGHT);

	push	40003					; 00009c43H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 203  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@hookup_map

; 204  : 	{
; 205  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@hookup_map:

; 206  : 	}
; 207  : 
; 208  : 	ctrl = (C_Button *) win->FindControl (ADD_PACKAGE);

	push	40004					; 00009c44H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 209  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@hookup_map

; 210  : 	{
; 211  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@hookup_map:

; 212  : 	}
; 213  : 
; 214  : 	ctrl = (C_Button *) win->FindControl (ADD_BATTALION);

	push	40005					; 00009c45H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 215  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@hookup_map

; 216  : 	{
; 217  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@hookup_map:

; 218  : 	}
; 219  : 
; 220  : 	ctrl = (C_Button *) win->FindControl (ADD_NAVAL);

	push	40006					; 00009c46H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 221  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@hookup_map

; 222  : 	{
; 223  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@hookup_map:

; 224  : 	}
; 225  : 
; 226  : 	ctrl = (C_Button *) win->FindControl (ADD_SQUADRON);

	push	40007					; 00009c47H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 227  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@hookup_map

; 228  : 	{
; 229  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@hookup_map:

; 230  : 	}
; 231  : 
; 232  : 	ctrl = (C_Button *) win->FindControl (COPY_UNIT);

	push	40008					; 00009c48H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 233  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@hookup_map

; 234  : 	{
; 235  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@hookup_map:

; 236  : 	}
; 237  : 
; 238  : 	ctrl = (C_Button *) win->FindControl (DELETE_UNIT);

	push	40009					; 00009c49H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 239  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@hookup_map

; 240  : 	{
; 241  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@hookup_map:

; 242  : 	}
; 243  : 
; 244  : 	ctrl = (C_Button *) win->FindControl (EDIT_UNIT);

	push	40010					; 00009c4aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 245  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@hookup_map

; 246  : 	{
; 247  : 		ctrl->SetCallback (SelectToolTypeCB);

	push	OFFSET ?SelectToolTypeCB@@YAXJFPAVC_Base@@@Z ; SelectToolTypeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@hookup_map:

; 248  : 	}
; 249  : 
; 250  : 	ctrl = (C_Button *) win->FindControl (TEAM_SELECTOR);

	push	40002					; 00009c42H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 251  : 	if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@hookup_map

; 252  : 	{
; 253  : 		ctrl->SetCallback (PickTeamCB);

	push	OFFSET ?PickTeamCB@@YAXJFPAVC_Base@@@Z	; PickTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@hookup_map:

; 254  : 	}
; 255  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?hookup_map_windows@@YAXPAVC_Window@@@Z ENDP		; hookup_map_windows
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMapRelativeXY@C_Map@@QAEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetMapRelativeXY@C_Map@@QAEXPAF0@Z PROC		; C_Map::GetMapRelativeXY, COMDAT
; _this$ = ecx

; 246  : 		{	

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 			if(DrawWindow_) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1124], 0
	je	SHORT $LN2@GetMapRela

; 248  : 			{
; 249  : 				*x = static_cast<short>(*x - DrawWindow_->GetX() - DrawWindow_->VX_[0]); 

	mov	ecx, DWORD PTR _x$[ebp]
	movsx	esi, WORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1124]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	cwde
	sub	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1124]
	mov	eax, 4
	imul	eax, 0
	sub	esi, DWORD PTR [edx+eax+480]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	WORD PTR [ecx], si

; 250  : 				*y = static_cast<short>(*y - DrawWindow_->GetY() - DrawWindow_->VY_[0]); 

	mov	edx, DWORD PTR _y$[ebp]
	movsx	esi, WORD PTR [edx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1124]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	movsx	ecx, ax
	sub	esi, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1124]
	mov	ecx, 4
	imul	ecx, 0
	sub	esi, DWORD PTR [eax+ecx+512]
	mov	edx, DWORD PTR _y$[ebp]
	mov	WORD PTR [edx], si
$LN2@GetMapRela:

; 251  : 			} 
; 252  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMapRelativeXY@C_Map@@QAEXPAF0@Z ENDP		; C_Map::GetMapRelativeXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMapScale@C_Map@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetMapScale@C_Map@@QAEMXZ PROC				; C_Map::GetMapScale, COMDAT
; _this$ = ecx

; 203  : 		float GetMapScale() { return(scale_); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+728]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMapScale@C_Map@@QAEMXZ ENDP				; C_Map::GetMapScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetMaxY@C_Map@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetMaxY@C_Map@@QAEMXZ PROC				; C_Map::GetMaxY, COMDAT
; _this$ = ecx

; 202  : 		float GetMaxY() { return(maxy); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+732]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxY@C_Map@@QAEMXZ ENDP				; C_Map::GetMaxY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetZoomLevel@C_Map@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetZoomLevel@C_Map@@QAEJXZ PROC			; C_Map::GetZoomLevel, COMDAT
; _this$ = ecx

; 184  : 		long GetZoomLevel() { return(ZoomLevel_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+712]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetZoomLevel@C_Map@@QAEJXZ ENDP			; C_Map::GetZoomLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cdrawlst.h
;	COMDAT ?GetIconID@C_DrawList@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIconID@C_DrawList@@QAEJXZ PROC			; C_DrawList::GetIconID, COMDAT
; _this$ = ecx

; 31   : 		long GetIconID() { if(Last_) return(Last_->ID); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN1@GetIconID
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN2@GetIconID
$LN1@GetIconID:
	xor	eax, eax
$LN2@GetIconID:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIconID@C_DrawList@@QAEJXZ ENDP			; C_DrawList::GetIconID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmapmvr.h
;	COMDAT ?GetVRange@C_MapMover@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVRange@C_MapMover@@QAEJXZ PROC			; C_MapMover::GetVRange, COMDAT
; _this$ = ecx

; 44   : 		long GetVRange() { return(SY_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVRange@C_MapMover@@QAEJXZ ENDP			; C_MapMover::GetVRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmapmvr.h
;	COMDAT ?GetHRange@C_MapMover@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHRange@C_MapMover@@QAEJXZ PROC			; C_MapMover::GetHRange, COMDAT
; _this$ = ecx

; 43   : 		long GetHRange() { return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHRange@C_MapMover@@QAEJXZ ENDP			; C_MapMover::GetHRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?GetIconID@C_MapIcon@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIconID@C_MapIcon@@QAEJXZ PROC			; C_MapIcon::GetIconID, COMDAT
; _this$ = ecx

; 132  : 		long GetIconID() { if(Last_) return(Last_->ID); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN1@GetIconID
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN2@GetIconID
$LN1@GetIconID:
	xor	eax, eax
$LN2@GetIconID:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIconID@C_MapIcon@@QAEJXZ ENDP			; C_MapIcon::GetIconID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetY@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Window@@QAEFXZ PROC				; C_Window::GetY, COMDAT
; _this$ = ecx

; 311  : 		short GetY() { return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+430]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Window@@QAEFXZ ENDP				; C_Window::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetX@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Window@@QAEFXZ PROC				; C_Window::GetX, COMDAT
; _this$ = ecx

; 310  : 		short GetX() { return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+428]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Window@@QAEFXZ ENDP				; C_Window::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpopmgr.h
;	COMDAT ?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ PROC	; C_PopupMgr::GetCallingControl, COMDAT
; _this$ = ecx

; 58   : 		C_Base *GetCallingControl() { return(Control_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ENDP	; C_PopupMgr::GetCallingControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpopmgr.h
;	COMDAT ?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z PROC		; C_PopupMgr::GetCurrentXY, COMDAT
; _this$ = ecx

; 51   : 		void GetCurrentXY(short *x,short *y) { *x=LastX_; *y=LastY_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCurrentXY@C_PopupMgr@@QAEXPAF0@Z ENDP		; C_PopupMgr::GetCurrentXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetIncrement@C_Control@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIncrement@C_Control@@QAEHXZ PROC			; C_Control::GetIncrement, COMDAT
; _this$ = ecx

; 74   : 		int  GetIncrement()             { return(Increment_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+88]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIncrement@C_Control@@QAEHXZ ENDP			; C_Control::GetIncrement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?_GetCType_@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_GetCType_@C_Base@@QAEFXZ PROC				; C_Base::_GetCType_, COMDAT
; _this$ = ecx

; 136  : 		short _GetCType_()			{ return(_CType_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?_GetCType_@C_Base@@QAEFXZ ENDP				; C_Base::_GetCType_
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
