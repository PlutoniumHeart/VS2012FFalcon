; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\taceng\tac_class.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetParent@C_Base@@QAEXPAVC_Window@@@Z		; C_Base::SetParent
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?SetOwner@C_Victory@@QAEXPAVTREELIST@@@Z	; C_Victory::SetOwner
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	?GetCampaignTime@CampaignClass@@QAEKXZ		; CampaignClass::GetCampaignTime
PUBLIC	?GetTETimeLimitTime@CampaignClass@@QAEKXZ	; CampaignClass::GetTETimeLimitTime
PUBLIC	?SetCreatorIP@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreatorIP
PUBLIC	?SetCreationTime@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreationTime
PUBLIC	?SetCreationIter@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreationIter
PUBLIC	?GetCreatorIP@CampaignClass@@QAEJXZ		; CampaignClass::GetCreatorIP
PUBLIC	?GetCreationIter@CampaignClass@@QAEJXZ		; CampaignClass::GetCreationIter
PUBLIC	?read_te_file@tactical_mission@@AAEPADPADPAH@Z	; tactical_mission::read_te_file
PUBLIC	?process_load@tactical_mission@@AAEXPADHH@Z	; tactical_mission::process_load
PUBLIC	??0tactical_mission@@QAE@PAD@Z			; tactical_mission::tactical_mission
PUBLIC	??0tactical_mission@@QAE@XZ			; tactical_mission::tactical_mission
PUBLIC	??1tactical_mission@@QAE@XZ			; tactical_mission::~tactical_mission
PUBLIC	?load@tactical_mission@@QAEXXZ			; tactical_mission::load
PUBLIC	?preload@tactical_mission@@QAEXXZ		; tactical_mission::preload
PUBLIC	?new_setup@tactical_mission@@QAEXXZ		; tactical_mission::new_setup
PUBLIC	?info_load@tactical_mission@@QAEXPAD@Z		; tactical_mission::info_load
PUBLIC	?revert@tactical_mission@@QAEXXZ		; tactical_mission::revert
PUBLIC	?save_data@tactical_mission@@QAEXPAD@Z		; tactical_mission::save_data
PUBLIC	?save@tactical_mission@@QAEXPAD@Z		; tactical_mission::save
PUBLIC	?set_game_over@tactical_mission@@QAEXH@Z	; tactical_mission::set_game_over
PUBLIC	?get_game_over@tactical_mission@@QAEHXZ		; tactical_mission::get_game_over
PUBLIC	?get_type@tactical_mission@@QAE?AW4tactical_type@@XZ ; tactical_mission::get_type
PUBLIC	?set_type@tactical_mission@@QAEXW4tactical_type@@@Z ; tactical_mission::set_type
PUBLIC	?get_title@tactical_mission@@QAEPADXZ		; tactical_mission::get_title
PUBLIC	?get_number_of_teams@tactical_mission@@QAEHXZ	; tactical_mission::get_number_of_teams
PUBLIC	?get_number_of_aircraft@tactical_mission@@QAEHH@Z ; tactical_mission::get_number_of_aircraft
PUBLIC	?get_number_of_players@tactical_mission@@QAEHH@Z ; tactical_mission::get_number_of_players
PUBLIC	?get_number_of_f16s@tactical_mission@@QAEHH@Z	; tactical_mission::get_number_of_f16s
PUBLIC	?get_team_name@tactical_mission@@QAEPADH@Z	; tactical_mission::get_team_name
PUBLIC	?get_team_flag@tactical_mission@@QAEHH@Z	; tactical_mission::get_team_flag
PUBLIC	?hide_enemy_on@tactical_mission@@QAEHXZ		; tactical_mission::hide_enemy_on
PUBLIC	?lock_ato_on@tactical_mission@@QAEHXZ		; tactical_mission::lock_ato_on
PUBLIC	?lock_oob_on@tactical_mission@@QAEHXZ		; tactical_mission::lock_oob_on
PUBLIC	?start_paused_on@tactical_mission@@QAEHXZ	; tactical_mission::start_paused_on
PUBLIC	?is_flag_on@tactical_mission@@QAEHJ@Z		; tactical_mission::is_flag_on
PUBLIC	?set_flag@tactical_mission@@QAEXJ@Z		; tactical_mission::set_flag
PUBLIC	?clear_flag@tactical_mission@@QAEXJ@Z		; tactical_mission::clear_flag
PUBLIC	?set_team_name@tactical_mission@@QAEXHPAD@Z	; tactical_mission::set_team_name
PUBLIC	?set_team_flag@tactical_mission@@QAEXHH@Z	; tactical_mission::set_team_flag
PUBLIC	?setup_victory_condition@tactical_mission@@QAEXPAD@Z ; tactical_mission::setup_victory_condition
PUBLIC	?evaluate_victory_conditions@tactical_mission@@QAEXXZ ; tactical_mission::evaluate_victory_conditions
PUBLIC	?calculate_victory_points@tactical_mission@@QAEXXZ ; tactical_mission::calculate_victory_points
PUBLIC	?determine_victor@tactical_mission@@QAEHXZ	; tactical_mission::determine_victor
PUBLIC	?determine_rating@tactical_mission@@QAEHXZ	; tactical_mission::determine_rating
PUBLIC	?set_victory_condition_filter@tactical_mission@@QAEXW4victory_condition_filter@@@Z ; tactical_mission::set_victory_condition_filter
PUBLIC	?set_victory_condition_team_filter@tactical_mission@@QAEXH@Z ; tactical_mission::set_victory_condition_team_filter
PUBLIC	?get_first_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_first_victory_condition
PUBLIC	?get_next_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_next_victory_condition
PUBLIC	?get_first_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_first_unfiltered_victory_condition
PUBLIC	?get_next_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ; tactical_mission::get_next_unfiltered_victory_condition
PUBLIC	?set_points_required@tactical_mission@@QAEXH@Z	; tactical_mission::set_points_required
PUBLIC	?get_points_required@tactical_mission@@QAEHXZ	; tactical_mission::get_points_required
PUBLIC	?GetFlag@TeamClass@@QAEHXZ			; TeamClass::GetFlag
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetObjectiveStatus
PUBLIC	?determine_tactical_rating@@YAHXZ		; determine_tactical_rating
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_02ELMMHJID@te?$AA@			; `string'
PUBLIC	??_C@_09PMDOCMGF@?3Victory?6?$AA@		; `string'
PUBLIC	??_C@_0BG@PCIKMFJB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0O@JNHNABBN@?3Required?6?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0L@OLENIBOG@?3Teams?6?$CFd?6?$AA@		; `string'
PUBLIC	??_C@_0BA@CBDCMHKK@?3Team?6?$CFd?5?$CFd?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0O@FCGJCKIC@?3TeamName?6?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0O@OBLFODMB@?3TeamFlag?6?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_07KGDDBDJI@victory?$AA@			; `string'
PUBLIC	??_C@_05GECEPKB@flags?$AA@			; `string'
PUBLIC	??_C@_08FEMBDDHD@required?$AA@			; `string'
PUBLIC	??_C@_05EINLALJG@teams?$AA@			; `string'
PUBLIC	??_C@_04KADBPNCB@team?$AA@			; `string'
PUBLIC	??_C@_08EIAEBCFJ@teamname?$AA@			; `string'
PUBLIC	??_C@_08LBDCBKKD@teamflag?$AA@			; `string'
PUBLIC	??_C@_08NCNOBOOK@Training?$AA@			; `string'
PUBLIC	??_C@_0L@KKGCIBKC@Engagement?$AA@		; `string'
PUBLIC	??_C@_06IGOBCGAJ@Single?$AA@			; `string'
PUBLIC	??_C@_04IPBPFFEL@Load?$AA@			; `string'
PUBLIC	??_C@_0P@PCKGFACL@Unknown?5Type?3?5?$AA@	; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_03DNCDIOFL@tac?$AA@			; `string'
PUBLIC	??_C@_03JGONONDP@trn?$AA@			; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0CM@BDJDNNAO@Cannot?5open?5a?5file?5we?5just?5decid@ ; `string'
PUBLIC	??_C@_06GNFFHEIA@te_new?$AA@			; `string'
PUBLIC	??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fprintf:PROC
EXTRN	_fread:PROC
EXTRN	_fseek:PROC
EXTRN	_ftell:PROC
EXTRN	_sscanf:PROC
EXTRN	_atoi:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__stricmp:PROC
EXTRN	_stricmp:PROC
EXTRN	_strnicmp:PROC
EXTRN	_MonoPrint:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?SetCountry@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetCountry
EXTRN	?SaveStats@UIComms@@QAEXXZ:PROC			; UIComms::SaveStats
EXTRN	?UpdateGameIter@UIComms@@QAEXXZ:PROC		; UIComms::UpdateGameIter
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	?CloseCampFile@@YAXPAU_iobuf@@@Z:PROC		; CloseCampFile
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	?IsMaster@CampaignClass@@QAEHXZ:PROC		; CampaignClass::IsMaster
EXTRN	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z:PROC ; CampaignClass::LoadScenarioStats
EXTRN	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z:PROC ; CampaignClass::SaveCampaign
EXTRN	?Suspend@CampaignClass@@QAEXXZ:PROC		; CampaignClass::Suspend
EXTRN	??0victory_condition@@QAE@PAVtactical_mission@@@Z:PROC ; victory_condition::victory_condition
EXTRN	?set_team@victory_condition@@QAEXH@Z:PROC	; victory_condition::set_team
EXTRN	?get_team@victory_condition@@QAEHXZ:PROC	; victory_condition::get_team
EXTRN	?set_type@victory_condition@@QAEXW4victory_type@@@Z:PROC ; victory_condition::set_type
EXTRN	?get_type@victory_condition@@QAE?AW4victory_type@@XZ:PROC ; victory_condition::get_type
EXTRN	?set_vu_id@victory_condition@@QAEXVVU_ID@@@Z:PROC ; victory_condition::set_vu_id
EXTRN	?get_vu_id@victory_condition@@QAE?AVVU_ID@@XZ:PROC ; victory_condition::get_vu_id
EXTRN	?set_sub_objective@victory_condition@@QAEXH@Z:PROC ; victory_condition::set_sub_objective
EXTRN	?get_sub_objective@victory_condition@@QAEHXZ:PROC ; victory_condition::get_sub_objective
EXTRN	?set_tolerance@victory_condition@@QAEXH@Z:PROC	; victory_condition::set_tolerance
EXTRN	?get_tolerance@victory_condition@@QAEHXZ:PROC	; victory_condition::get_tolerance
EXTRN	?set_points@victory_condition@@QAEXH@Z:PROC	; victory_condition::set_points
EXTRN	?get_points@victory_condition@@QAEHXZ:PROC	; victory_condition::get_points
EXTRN	?get_number@victory_condition@@QAEHXZ:PROC	; victory_condition::get_number
EXTRN	?get_active@victory_condition@@QAEHXZ:PROC	; victory_condition::get_active
EXTRN	?enter_critical_section@victory_condition@@SAXXZ:PROC ; victory_condition::enter_critical_section
EXTRN	?leave_critical_section@victory_condition@@SAXXZ:PROC ; victory_condition::leave_critical_section
EXTRN	?update_team_victory_window@@YAXXZ:PROC		; update_team_victory_window
EXTRN	?GetName@TeamClass@@QAEPADXZ:PROC		; TeamClass::GetName
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetFullstrengthVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetFullstrengthVehicles
EXTRN	?GetFeatureStatus@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureStatus
EXTRN	?GetFeatureID@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureID
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z:PROC ; FindEntity
EXTRN	?AddVC@C_Map@@QAEPAVMAPICONLIST@@PAVvictory_condition@@@Z:PROC ; C_Map::AddVC
EXTRN	??0UISendMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; UISendMsg::UISendMsg
EXTRN	?get_tactical_number_of_teams@@YAHXZ:PROC	; get_tactical_number_of_teams
EXTRN	?get_tactical_number_of_aircraft@@YAHH@Z:PROC	; get_tactical_number_of_aircraft
EXTRN	?get_tactical_number_of_f16s@@YAHH@Z:PROC	; get_tactical_number_of_f16s
EXTRN	?UpdateVCOptions@@YAXPAVvictory_condition@@@Z:PROC ; UpdateVCOptions
EXTRN	?string_compare_extensions@@YAHPAD0@Z:PROC	; string_compare_extensions
EXTRN	?StartCampaignGame@@YAXHH@Z:PROC		; StartCampaignGame
EXTRN	?MakeVCControl@@YAPAVC_Victory@@PAVvictory_condition@@@Z:PROC ; MakeVCControl
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?current_tactical_mission@@3PAVtactical_mission@@A:DWORD ; current_tactical_mission
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?ShowGameOverWindow@@3JA:DWORD			; ShowGameOverWindow
EXTRN	?gUI_CampaignFile@@3PADA:BYTE			; gUI_CampaignFile
EXTRN	?gUI_ScenarioName@@3PADA:BYTE			; gUI_ScenarioName
EXTRN	?gSelectedTeam@@3EA:BYTE			; gSelectedTeam
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	?gVCTree@@3PAVC_TreeList@@A:DWORD		; gVCTree
EXTRN	?gRefreshScoresList@@3JA:DWORD			; gRefreshScoresList
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA
_BSS	SEGMENT
?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA DB 064H DUP (?) ; `tactical_mission::get_title'::`2'::buffer
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GNFFHEIA@te_new?$AA@
CONST	SEGMENT
??_C@_06GNFFHEIA@te_new?$AA@ DB 'te_new', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BDJDNNAO@Cannot?5open?5a?5file?5we?5just?5decid@
CONST	SEGMENT
??_C@_0CM@BDJDNNAO@Cannot?5open?5a?5file?5we?5just?5decid@ DB 'Cannot ope'
	DB	'n a file we just decided existed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGONONDP@trn?$AA@
CONST	SEGMENT
??_C@_03JGONONDP@trn?$AA@ DB 'trn', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNCDIOFL@tac?$AA@
CONST	SEGMENT
??_C@_03DNCDIOFL@tac?$AA@ DB 'tac', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@ DB '%d %d %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCKGFACL@Unknown?5Type?3?5?$AA@
CONST	SEGMENT
??_C@_0P@PCKGFACL@Unknown?5Type?3?5?$AA@ DB 'Unknown Type: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IPBPFFEL@Load?$AA@
CONST	SEGMENT
??_C@_04IPBPFFEL@Load?$AA@ DB 'Load', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IGOBCGAJ@Single?$AA@
CONST	SEGMENT
??_C@_06IGOBCGAJ@Single?$AA@ DB 'Single', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KKGCIBKC@Engagement?$AA@
CONST	SEGMENT
??_C@_0L@KKGCIBKC@Engagement?$AA@ DB 'Engagement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NCNOBOOK@Training?$AA@
CONST	SEGMENT
??_C@_08NCNOBOOK@Training?$AA@ DB 'Training', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LBDCBKKD@teamflag?$AA@
CONST	SEGMENT
??_C@_08LBDCBKKD@teamflag?$AA@ DB 'teamflag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EIAEBCFJ@teamname?$AA@
CONST	SEGMENT
??_C@_08EIAEBCFJ@teamname?$AA@ DB 'teamname', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KADBPNCB@team?$AA@
CONST	SEGMENT
??_C@_04KADBPNCB@team?$AA@ DB 'team', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EINLALJG@teams?$AA@
CONST	SEGMENT
??_C@_05EINLALJG@teams?$AA@ DB 'teams', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FEMBDDHD@required?$AA@
CONST	SEGMENT
??_C@_08FEMBDDHD@required?$AA@ DB 'required', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GECEPKB@flags?$AA@
CONST	SEGMENT
??_C@_05GECEPKB@flags?$AA@ DB 'flags', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGDDBDJI@victory?$AA@
CONST	SEGMENT
??_C@_07KGDDBDJI@victory?$AA@ DB 'victory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OBLFODMB@?3TeamFlag?6?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@OBLFODMB@?3TeamFlag?6?$CFd?6?$AA@ DB ':TeamFlag', 0aH, '%d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FCGJCKIC@?3TeamName?6?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@FCGJCKIC@?3TeamName?6?$CFs?6?$AA@ DB ':TeamName', 0aH, '%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CBDCMHKK@?3Team?6?$CFd?5?$CFd?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BA@CBDCMHKK@?3Team?6?$CFd?5?$CFd?5?$CFd?6?$AA@ DB ':Team', 0aH, '%'
	DB	'd %d %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OLENIBOG@?3Teams?6?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0L@OLENIBOG@?3Teams?6?$CFd?6?$AA@ DB ':Teams', 0aH, '%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JNHNABBN@?3Required?6?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@JNHNABBN@?3Required?6?$CFd?6?$AA@ DB ':Required', 0aH, '%d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PCIKMFJB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BG@PCIKMFJB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?6?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PMDOCMGF@?3Victory?6?$AA@
CONST	SEGMENT
??_C@_09PMDOCMGF@?3Victory?6?$AA@ DB ':Victory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02ELMMHJID@te?$AA@
CONST	SEGMENT
??_C@_02ELMMHJID@te?$AA@ DB 'te', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?evaluate_victory_conditions@tactical_mission@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?evaluate_victory_conditions@tactical_mission@@QAEXXZ$0
__unwindtable$?setup_victory_condition@tactical_mission@@QAEXPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setup_victory_condition@tactical_mission@@QAEXPAD@Z$0
__unwindtable$?determine_victor@tactical_mission@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?determine_victor@tactical_mission@@QAEHXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?determine_victor@tactical_mission@@QAEHXZ$1
__ehfuncinfo$?determine_victor@tactical_mission@@QAEHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?determine_victor@tactical_mission@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?evaluate_victory_conditions@tactical_mission@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?evaluate_victory_conditions@tactical_mission@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?setup_victory_condition@tactical_mission@@QAEXPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setup_victory_condition@tactical_mission@@QAEXPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
?determine_tactical_rating@@YAHXZ PROC			; determine_tactical_rating

; 1827 : {

	push	ebp
	mov	ebp, esp

; 1828 : 	if(current_tactical_mission)

	cmp	DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A, 0 ; current_tactical_mission
	je	SHORT $LN1@determine_

; 1829 : 	{
; 1830 : 		return current_tactical_mission->determine_rating();

	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?determine_rating@tactical_mission@@QAEHXZ ; tactical_mission::determine_rating
	jmp	SHORT $LN2@determine_
$LN1@determine_:

; 1831 : 	}
; 1832 : 
; 1833 : 	//I like to succeed :) BTW, we should never get here
; 1834 : 	return mr_success;

	xor	eax, eax
$LN2@determine_:

; 1835 : }

	pop	ebp
	ret	0
?determine_tactical_rating@@YAHXZ ENDP			; determine_tactical_rating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_vc$ = 8						; size = 4
_filter$ = 12						; size = 4
_team$ = 16						; size = 4
?test_filter@@YAHPAVvictory_condition@@W4victory_condition_filter@@H@Z PROC ; test_filter

; 1126 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1127 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1128 : 	
; 1129 : 	switch (filter)

	mov	eax, DWORD PTR _filter$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 5
	ja	$LN12@test_filte
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN16@test_filte[edx*4]
$LN11@test_filte:

; 1130 : 	{
; 1131 : 		case vcf_all:
; 1132 : 		{
; 1133 : 			victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1134 : 			
; 1135 : 			return TRUE;

	mov	eax, 1
	jmp	$LN14@test_filte
$LN10@test_filte:

; 1136 : 		}
; 1137 : 		
; 1138 : 		case vcf_team:
; 1139 : 		{
; 1140 : 			if (team == vc->get_team ())

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_team@victory_condition@@QAEHXZ	; victory_condition::get_team
	cmp	DWORD PTR _team$[ebp], eax
	jne	SHORT $LN9@test_filte

; 1141 : 			{
; 1142 : 				victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1143 : 				
; 1144 : 				return TRUE;

	mov	eax, 1
	jmp	$LN14@test_filte
$LN9@test_filte:

; 1145 : 			}
; 1146 : 			
; 1147 : 			break;

	jmp	$LN12@test_filte
$LN8@test_filte:

; 1148 : 		}
; 1149 : 		
; 1150 : 		case vcf_all_achieved:
; 1151 : 		{
; 1152 : 			if (vc->get_active ())

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_active@victory_condition@@QAEHXZ	; victory_condition::get_active
	test	eax, eax
	je	SHORT $LN7@test_filte

; 1153 : 			{
; 1154 : 				victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1155 : 				
; 1156 : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@test_filte
$LN7@test_filte:

; 1157 : 			}
; 1158 : 			
; 1159 : 			break;

	jmp	SHORT $LN12@test_filte
$LN6@test_filte:

; 1160 : 		}
; 1161 : 		
; 1162 : 		case vcf_all_remaining:
; 1163 : 		{
; 1164 : 			if (!vc->get_active ())

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_active@victory_condition@@QAEHXZ	; victory_condition::get_active
	test	eax, eax
	jne	SHORT $LN5@test_filte

; 1165 : 			{
; 1166 : 				victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1167 : 				
; 1168 : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@test_filte
$LN5@test_filte:

; 1169 : 			}
; 1170 : 			
; 1171 : 			break;

	jmp	SHORT $LN12@test_filte
$LN4@test_filte:

; 1172 : 		}
; 1173 : 		
; 1174 : 		case vcf_team_achieved:
; 1175 : 		{
; 1176 : 			if
; 1177 : 				(
; 1178 : 				(team == vc->get_team ()) &&
; 1179 : 				(vc->get_active ())
; 1180 : 				)

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_team@victory_condition@@QAEHXZ	; victory_condition::get_team
	cmp	DWORD PTR _team$[ebp], eax
	jne	SHORT $LN3@test_filte
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_active@victory_condition@@QAEHXZ	; victory_condition::get_active
	test	eax, eax
	je	SHORT $LN3@test_filte

; 1181 : 			{
; 1182 : 				victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1183 : 				
; 1184 : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@test_filte
$LN3@test_filte:

; 1185 : 			}
; 1186 : 			
; 1187 : 			break;

	jmp	SHORT $LN12@test_filte
$LN2@test_filte:

; 1188 : 		}
; 1189 : 		
; 1190 : 		case vcf_team_remaining:
; 1191 : 		{
; 1192 : 			if
; 1193 : 				(
; 1194 : 				(team == vc->get_team ()) &&
; 1195 : 				(!vc->get_active ())
; 1196 : 				)

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_team@victory_condition@@QAEHXZ	; victory_condition::get_team
	cmp	DWORD PTR _team$[ebp], eax
	jne	SHORT $LN12@test_filte
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_active@victory_condition@@QAEHXZ	; victory_condition::get_active
	test	eax, eax
	jne	SHORT $LN12@test_filte

; 1197 : 			{
; 1198 : 				victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1199 : 				
; 1200 : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@test_filte
$LN12@test_filte:

; 1201 : 			}
; 1202 : 			
; 1203 : 			break;
; 1204 : 		}
; 1205 : 	}
; 1206 : 	
; 1207 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1208 : 	
; 1209 : 	return FALSE;

	xor	eax, eax
$LN14@test_filte:

; 1210 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@test_filte:
	DD	$LN11@test_filte
	DD	$LN10@test_filte
	DD	$LN8@test_filte
	DD	$LN6@test_filte
	DD	$LN4@test_filte
	DD	$LN2@test_filte
?test_filter@@YAHPAVvictory_condition@@W4victory_condition_filter@@H@Z ENDP ; test_filter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?GetObjectiveStatus@ObjectiveClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ PROC		; ObjectiveClass::GetObjectiveStatus, COMDAT
; _this$ = ecx

; 270  : 	uchar GetObjectiveStatus (void)							{	return obj_data.status; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+199]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ENDP		; ObjectiveClass::GetObjectiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetFlag@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlag@TeamClass@@QAEHXZ PROC				; TeamClass::GetFlag, COMDAT
; _this$ = ecx

; 327  : 	int GetFlag (void)							{ return (int) teamFlag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+888]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlag@TeamClass@@QAEHXZ ENDP				; TeamClass::GetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_points_required@tactical_mission@@QAEHXZ PROC	; tactical_mission::get_points_required
; _this$ = ecx

; 1324 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1325 : 	return points_required;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+200]

; 1326 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_points_required@tactical_mission@@QAEHXZ ENDP	; tactical_mission::get_points_required
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
?set_points_required@tactical_mission@@QAEXH@Z PROC	; tactical_mission::set_points_required
; _this$ = ecx

; 1315 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1316 : 	points_required = value;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+200], ecx

; 1317 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?set_points_required@tactical_mission@@QAEXH@Z ENDP	; tactical_mission::set_points_required
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_next_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ PROC ; tactical_mission::get_next_unfiltered_victory_condition
; _this$ = ecx

; 1300 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1301 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1302 : 
; 1303 : 	current_vc = current_vc->succ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+156], eax

; 1304 : 
; 1305 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1306 : 
; 1307 : 	return current_vc;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+156]

; 1308 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_next_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ENDP ; tactical_mission::get_next_unfiltered_victory_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_first_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ PROC ; tactical_mission::get_first_unfiltered_victory_condition
; _this$ = ecx

; 1285 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1287 : 
; 1288 : 	current_vc = conditions;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR [eax+156], edx

; 1289 : 
; 1290 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1291 : 
; 1292 : 	return current_vc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]

; 1293 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_first_unfiltered_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ENDP ; tactical_mission::get_first_unfiltered_victory_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_next_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ PROC ; tactical_mission::get_next_victory_condition
; _this$ = ecx

; 1260 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1261 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1262 : 
; 1263 : 	current_vc = current_vc->succ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+156], eax
$LN3@get_next_v:

; 1264 : 
; 1265 : 	while (current_vc)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+156], 0
	je	SHORT $LN2@get_next_v

; 1266 : 	{
; 1267 : 		if (test_filter (current_vc, filter, team))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	push	ecx
	call	?test_filter@@YAHPAVvictory_condition@@W4victory_condition_filter@@H@Z ; test_filter
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@get_next_v

; 1268 : 		{
; 1269 : 			break;

	jmp	SHORT $LN2@get_next_v
$LN1@get_next_v:

; 1270 : 		}
; 1271 : 
; 1272 : 		current_vc = current_vc->succ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+156], edx

; 1273 : 	}

	jmp	SHORT $LN3@get_next_v
$LN2@get_next_v:

; 1274 : 
; 1275 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1276 : 
; 1277 : 	return current_vc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]

; 1278 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_next_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ENDP ; tactical_mission::get_next_victory_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_first_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ PROC ; tactical_mission::get_first_victory_condition
; _this$ = ecx

; 1235 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1236 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1237 : 
; 1238 : 	current_vc = conditions;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR [eax+156], edx
$LN3@get_first_:

; 1239 : 
; 1240 : 	while (current_vc)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+156], 0
	je	SHORT $LN2@get_first_

; 1241 : 	{
; 1242 : 		if (test_filter (current_vc, filter, team))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]
	push	eax
	call	?test_filter@@YAHPAVvictory_condition@@W4victory_condition_filter@@H@Z ; test_filter
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@get_first_

; 1243 : 		{
; 1244 : 			break;

	jmp	SHORT $LN2@get_first_
$LN1@get_first_:

; 1245 : 		}
; 1246 : 
; 1247 : 		current_vc = current_vc->succ;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+156], ecx

; 1248 : 	}

	jmp	SHORT $LN3@get_first_
$LN2@get_first_:

; 1249 : 
; 1250 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1251 : 
; 1252 : 	return current_vc;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]

; 1253 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_first_victory_condition@tactical_mission@@QAEPAVvictory_condition@@XZ ENDP ; tactical_mission::get_first_victory_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_new_team$ = 8						; size = 4
?set_victory_condition_team_filter@tactical_mission@@QAEXH@Z PROC ; tactical_mission::set_victory_condition_team_filter
; _this$ = ecx

; 1226 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1227 : 	team = new_team;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_team$[ebp]
	mov	DWORD PTR [eax+160], ecx

; 1228 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?set_victory_condition_team_filter@tactical_mission@@QAEXH@Z ENDP ; tactical_mission::set_victory_condition_team_filter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_new_filter$ = 8					; size = 4
?set_victory_condition_filter@tactical_mission@@QAEXW4victory_condition_filter@@@Z PROC ; tactical_mission::set_victory_condition_filter
; _this$ = ecx

; 1217 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1218 : 	filter = new_filter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_filter$[ebp]
	mov	DWORD PTR [eax+196], ecx

; 1219 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?set_victory_condition_filter@tactical_mission@@QAEXW4victory_condition_filter@@@Z ENDP ; tactical_mission::set_victory_condition_filter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_player_pts$ = -16					; size = 4
_best_opp$ = -12					; size = 4
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?determine_rating@tactical_mission@@QAEHXZ PROC		; tactical_mission::determine_rating
; _this$ = ecx

; 1842 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1843 : 	int player_pts = 0;

	mov	DWORD PTR _player_pts$[ebp], 0

; 1844 : 	int best_opp = 0;

	mov	DWORD PTR _best_opp$[ebp], 0

; 1845 : 
; 1846 : 	
; 1847 : 	evaluate_victory_conditions();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?evaluate_victory_conditions@tactical_mission@@QAEXXZ ; tactical_mission::evaluate_victory_conditions

; 1848 : 	calculate_victory_points();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?calculate_victory_points@tactical_mission@@QAEXXZ ; tactical_mission::calculate_victory_points

; 1849 : 
; 1850 : 	player_pts = team_pts[team];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+164]
	mov	DWORD PTR _player_pts$[ebp], eax

; 1851 : 
; 1852 : 	for(int i = 0; i < 8; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN18@determine_
$LN17@determine_:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN18@determine_:
	cmp	DWORD PTR _i$1[ebp], 8
	jge	SHORT $LN16@determine_

; 1853 : 	{
; 1854 : 		if( (team_pts[i] > best_opp) && (i != team) )

	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+164]
	cmp	ecx, DWORD PTR _best_opp$[ebp]
	jle	SHORT $LN15@determine_
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR [edx+160]
	je	SHORT $LN15@determine_

; 1855 : 			best_opp = team_pts[i];		}

	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+164]
	mov	DWORD PTR _best_opp$[ebp], eax
$LN15@determine_:
	jmp	SHORT $LN17@determine_
$LN16@determine_:

; 1856 : 
; 1857 : 	if(player_pts >= points_required)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _player_pts$[ebp]
	cmp	edx, DWORD PTR [ecx+200]
	jl	SHORT $LN14@determine_

; 1858 : 	{
; 1859 : 		if(best_opp >= points_required)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _best_opp$[ebp]
	cmp	ecx, DWORD PTR [eax+200]
	jl	SHORT $LN13@determine_

; 1860 : 		{
; 1861 : 			if(player_pts > best_opp)

	mov	edx, DWORD PTR _player_pts$[ebp]
	cmp	edx, DWORD PTR _best_opp$[ebp]
	jle	SHORT $LN12@determine_

; 1862 : 				return mr_marginal_victory;

	mov	eax, 2
	jmp	SHORT $LN19@determine_
	jmp	SHORT $LN11@determine_
$LN12@determine_:

; 1863 : 			else if(player_pts < best_opp)

	mov	eax, DWORD PTR _player_pts$[ebp]
	cmp	eax, DWORD PTR _best_opp$[ebp]
	jge	SHORT $LN10@determine_

; 1864 : 				return mr_marginal_defeat;

	mov	eax, 5
	jmp	SHORT $LN19@determine_

; 1865 : 			else

	jmp	SHORT $LN11@determine_
$LN10@determine_:

; 1866 : 				return mr_tie;

	mov	eax, 3
	jmp	SHORT $LN19@determine_
$LN11@determine_:

; 1867 : 		}
; 1868 : 		else

	jmp	SHORT $LN8@determine_
$LN13@determine_:

; 1869 : 		{
; 1870 : 			if(TheCampaign.TE_type != tt_engagement)

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 1
	je	SHORT $LN7@determine_

; 1871 : 				return mr_success;

	xor	eax, eax
	jmp	SHORT $LN19@determine_

; 1872 : 			else

	jmp	SHORT $LN8@determine_
$LN7@determine_:

; 1873 : 				return mr_decisive_victory;

	mov	eax, 1
	jmp	SHORT $LN19@determine_
$LN8@determine_:

; 1874 : 		}
; 1875 : 	}
; 1876 : 	else

	jmp	SHORT $LN5@determine_
$LN14@determine_:

; 1877 : 	{
; 1878 : 		if(best_opp > points_required)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _best_opp$[ebp]
	cmp	edx, DWORD PTR [ecx+200]
	jle	SHORT $LN4@determine_

; 1879 : 		{
; 1880 : 			if(TheCampaign.TE_type != tt_engagement)

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 1
	je	SHORT $LN3@determine_

; 1881 : 				return mr_failure;

	mov	eax, 7
	jmp	SHORT $LN19@determine_

; 1882 : 			else

	jmp	SHORT $LN2@determine_
$LN3@determine_:

; 1883 : 				return mr_crushing_defeat;

	mov	eax, 6
	jmp	SHORT $LN19@determine_
$LN2@determine_:

; 1884 : 		}
; 1885 : 		else

	jmp	SHORT $LN5@determine_
$LN4@determine_:

; 1886 : 			return mr_stalemate;

	mov	eax, 4
	jmp	SHORT $LN19@determine_
$LN5@determine_:

; 1887 : 	}
; 1888 : 		
; 1889 : 	//I like to succeed :) BTW, we should never get here
; 1890 : 	return mr_success;

	xor	eax, eax
$LN19@determine_:

; 1891 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?determine_rating@tactical_mission@@QAEHXZ ENDP		; tactical_mission::determine_rating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T2 = -56						; size = 4
$T3 = -52						; size = 4
tv191 = -48						; size = 4
$T4 = -44						; size = 4
tv187 = -40						; size = 4
tv139 = -36						; size = 4
$T5 = -32						; size = 4
tv135 = -28						; size = 4
_i$ = -24						; size = 4
_this$ = -20						; size = 4
_vcdone$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?determine_victor@tactical_mission@@QAEHXZ PROC		; tactical_mission::determine_victor
; _this$ = ecx

; 1774 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?determine_victor@tactical_mission@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1775 : 	int
; 1776 : 		i;
; 1777 : 
; 1778 : 	UISendMsg
; 1779 : 		*vcdone;
; 1780 : 
; 1781 : 	if(get_game_over())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_game_over@tactical_mission@@QAEHXZ	; tactical_mission::get_game_over
	test	eax, eax
	je	SHORT $LN9@determine_

; 1782 : 		return(TRUE);

	mov	eax, 1
	jmp	$LN10@determine_
$LN9@determine_:

; 1783 : 
; 1784 : 	if(TheCampaign.GetCampaignTime() >= TheCampaign.GetTETimeLimitTime())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCampaignTime@CampaignClass@@QAEKXZ	; CampaignClass::GetCampaignTime
	mov	esi, eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTETimeLimitTime@CampaignClass@@QAEKXZ ; CampaignClass::GetTETimeLimitTime
	cmp	esi, eax
	jb	$LN8@determine_

; 1785 : 	{
; 1786 : 		set_game_over(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set_game_over@tactical_mission@@QAEXH@Z ; tactical_mission::set_game_over

; 1787 : 
; 1788 : 		if(TheCampaign.IsMaster() && gCommsMgr->Online())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsMaster@CampaignClass@@QAEHXZ		; CampaignClass::IsMaster
	test	eax, eax
	je	$LN7@determine_
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	$LN7@determine_

; 1789 : 		{
; 1790 : 			vcdone=new UISendMsg(FalconNullId,FalconLocalGame);

	push	65					; 00000041H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN14@determine_
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@determine_
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN13@determine_
$LN12@determine_:
	mov	DWORD PTR tv135[ebp], 0
$LN13@determine_:
	push	1
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0UISendMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; UISendMsg::UISendMsg
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN15@determine_
$LN14@determine_:
	mov	DWORD PTR tv139[ebp], 0
$LN15@determine_:
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _vcdone$[ebp], edx

; 1791 : 			vcdone->dataBlock.from=FalconLocalSessionId;

	mov	eax, DWORD PTR _vcdone$[ebp]
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+52], edx

; 1792 : 			vcdone->dataBlock.msgType=UISendMsg::VC_GameOver;

	mov	eax, DWORD PTR _vcdone$[ebp]
	mov	BYTE PTR [eax+56], 2

; 1793 : 
; 1794 : 			FalconSendMessage(vcdone,TRUE);

	push	1
	mov	ecx, DWORD PTR _vcdone$[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN7@determine_:

; 1795 : 		}
; 1796 : 		return(TRUE);

	mov	eax, 1
	jmp	$LN10@determine_
$LN8@determine_:

; 1797 : 	}
; 1798 : 
; 1799 : 	if(points_required <= 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	jg	SHORT $LN6@determine_

; 1800 : 		return(FALSE);

	xor	eax, eax
	jmp	$LN10@determine_
$LN6@determine_:

; 1801 : 
; 1802 : 	for (i = 0; i < 8;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@determine_
$LN4@determine_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@determine_:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN3@determine_

; 1803 : 	{
; 1804 : 		if(team_pts[i] >= points_required)

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+164]
	cmp	ecx, DWORD PTR [eax+200]
	jl	$LN2@determine_

; 1805 : 		{
; 1806 : 			if(TheCampaign.IsMaster() && gCommsMgr->Online())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsMaster@CampaignClass@@QAEHXZ		; CampaignClass::IsMaster
	test	eax, eax
	je	$LN1@determine_
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	$LN1@determine_

; 1807 : 			{
; 1808 : 				vcdone=new UISendMsg(FalconNullId,FalconLocalGame);

	push	65					; 00000041H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN18@determine_
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@determine_
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv187[ebp], eax
	jmp	SHORT $LN17@determine_
$LN16@determine_:
	mov	DWORD PTR tv187[ebp], 0
$LN17@determine_:
	push	1
	mov	eax, DWORD PTR tv187[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0UISendMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; UISendMsg::UISendMsg
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN19@determine_
$LN18@determine_:
	mov	DWORD PTR tv191[ebp], 0
$LN19@determine_:
	mov	eax, DWORD PTR tv191[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _vcdone$[ebp], ecx

; 1809 : 				vcdone->dataBlock.from=FalconLocalSessionId;

	mov	edx, DWORD PTR _vcdone$[ebp]
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [edx+48], eax
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+52], ecx

; 1810 : 				vcdone->dataBlock.msgType=UISendMsg::VC_GameOver;

	mov	edx, DWORD PTR _vcdone$[ebp]
	mov	BYTE PTR [edx+56], 2

; 1811 : 
; 1812 : 				FalconSendMessage(vcdone,TRUE);

	push	1
	mov	eax, DWORD PTR _vcdone$[ebp]
	push	eax
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN1@determine_:

; 1813 : 			}
; 1814 : 			set_game_over(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set_game_over@tactical_mission@@QAEXH@Z ; tactical_mission::set_game_over

; 1815 : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN10@determine_
$LN2@determine_:

; 1816 : 		}
; 1817 : 	}

	jmp	$LN4@determine_
$LN3@determine_:

; 1818 : 
; 1819 : 	return FALSE;

	xor	eax, eax
$LN10@determine_:

; 1820 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?determine_victor@tactical_mission@@QAEHXZ$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?determine_victor@tactical_mission@@QAEHXZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?determine_victor@tactical_mission@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?determine_victor@tactical_mission@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?determine_victor@tactical_mission@@QAEHXZ ENDP		; tactical_mission::determine_victor
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -44						; size = 4
_vc$ = -40						; size = 4
_pts$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?calculate_victory_points@tactical_mission@@QAEXXZ PROC	; tactical_mission::calculate_victory_points
; _this$ = ecx

; 1740 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1741 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1742 : 
; 1743 : 	victory_condition
; 1744 : 		*vc;
; 1745 : 
; 1746 : 	int
; 1747 : 		pts[8] =
; 1748 : 		{
; 1749 : 			0
; 1750 : 		};

	mov	DWORD PTR _pts$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _pts$[ebp+4], eax
	mov	DWORD PTR _pts$[ebp+8], eax
	mov	DWORD PTR _pts$[ebp+12], eax
	mov	DWORD PTR _pts$[ebp+16], eax
	mov	DWORD PTR _pts$[ebp+20], eax
	mov	DWORD PTR _pts$[ebp+24], eax
	mov	DWORD PTR _pts$[ebp+28], eax

; 1751 : 
; 1752 : 	vc = conditions;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _vc$[ebp], edx
$LN3@calculate_:

; 1753 : 	
; 1754 : 	while (vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN2@calculate_

; 1755 : 	{
; 1756 : 		if(vc->active)

	mov	eax, DWORD PTR _vc$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@calculate_

; 1757 : 		{
; 1758 : 			pts[vc->team] += vc->points;

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pts$[ebp+edx*4]
	mov	ecx, DWORD PTR _vc$[ebp]
	add	eax, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR _pts$[ebp+ecx*4], eax
$LN1@calculate_:

; 1759 : 		}
; 1760 : 
; 1761 : 		vc = vc->succ;

	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _vc$[ebp], eax

; 1762 : 	}

	jmp	SHORT $LN3@calculate_
$LN2@calculate_:

; 1763 : 
; 1764 : 	memcpy (team_pts, pts, sizeof(int) * 8);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _pts$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 1765 : 
; 1766 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1767 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?calculate_victory_points@tactical_mission@@QAEXXZ ENDP	; tactical_mission::calculate_victory_points
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T2 = -84						; size = 4
_old_active$ = -80					; size = 4
_per$ = -76						; size = 4
_this$ = -72						; size = 4
_changed$ = -68						; size = 4
_count$ = -64						; size = 4
tv306 = -60						; size = 4
$T3 = -56						; size = 4
tv302 = -52						; size = 4
_oc$4 = -48						; size = 4
_classID$5 = -44					; size = 4
tv70 = -40						; size = 4
_vcdone$ = -36						; size = 4
_i$6 = -32						; size = 4
_unit$ = -28						; size = 4
_objective$ = -24					; size = 4
_vc$ = -20						; size = 4
_origtype$7 = -13					; size = 1
__$EHRec$ = -12						; size = 12
?evaluate_victory_conditions@tactical_mission@@QAEXXZ PROC ; tactical_mission::evaluate_victory_conditions
; _this$ = ecx

; 1333 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?evaluate_victory_conditions@tactical_mission@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1334 : 	UISendMsg *vcdone;
; 1335 : 	victory_condition
; 1336 : 		*vc;
; 1337 : 
; 1338 : 	int
; 1339 : 		count,
; 1340 : 		per,
; 1341 : 		old_active,
; 1342 : 		changed=0;

	mov	DWORD PTR _changed$[ebp], 0

; 1343 : 
; 1344 : 	Objective
; 1345 : 		objective;
; 1346 : 
; 1347 : 	Unit
; 1348 : 		unit;
; 1349 : 
; 1350 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1351 : 
; 1352 : 	vc = conditions;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _vc$[ebp], ecx

; 1353 : 
; 1354 : 	count = 1;

	mov	DWORD PTR _count$[ebp], 1
$LN36@evaluate_v:

; 1355 : 
; 1356 : 	while (vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	$LN35@evaluate_v

; 1357 : 	{
; 1358 : 		if(!vc->active)

	mov	edx, DWORD PTR _vc$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	$LN34@evaluate_v

; 1359 : 		{
; 1360 : 			old_active = vc->active;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _old_active$[ebp], ecx

; 1361 : 
; 1362 : 			switch (vc->type)

	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR tv70[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 4
	ja	$LN32@evaluate_v
	mov	edx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN45@evaluate_v[edx*4]
$LN31@evaluate_v:

; 1363 : 			{
; 1364 : 				case vt_occupy:
; 1365 : 				{
; 1366 : 					objective = (Objective) FindEntity (vc->id);

	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _objective$[ebp], eax

; 1367 : 
; 1368 : 					if (objective && objective->IsObjective())

	cmp	DWORD PTR _objective$[ebp], 0
	je	SHORT $LN30@evaluate_v
	mov	eax, DWORD PTR _objective$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _objective$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN30@evaluate_v

; 1369 : 					{
; 1370 : 						if (vc->team == objective->GetOwner())

	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	ecx, al
	mov	edx, DWORD PTR _vc$[ebp]
	cmp	DWORD PTR [edx+16], ecx
	jne	SHORT $LN30@evaluate_v

; 1371 : 							vc->active = TRUE;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [eax+4], 1
$LN30@evaluate_v:

; 1372 : 						//else
; 1373 : 						//	vc->active = FALSE;
; 1374 : 					}
; 1375 : 					break;

	jmp	$LN32@evaluate_v
$LN28@evaluate_v:

; 1376 : 				}
; 1377 : 
; 1378 : 				case vt_destroy:
; 1379 : 				{
; 1380 : 					objective = (Objective) FindEntity (vc->id);

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _objective$[ebp], eax

; 1381 : 
; 1382 : 					if (objective && objective->IsObjective())

	cmp	DWORD PTR _objective$[ebp], 0
	je	$LN27@evaluate_v
	mov	ecx, DWORD PTR _objective$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _objective$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	$LN27@evaluate_v

; 1383 : 					{
; 1384 : 						int i;
; 1385 : 						int classID;
; 1386 : 						uchar origtype;
; 1387 : 						ObjClassDataType*		oc;
; 1388 : 
; 1389 : 						oc = objective->GetObjectiveClassData();

	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _oc$4[ebp], eax

; 1390 : 						if(oc)

	cmp	DWORD PTR _oc$4[ebp], 0
	je	$LN27@evaluate_v

; 1391 : 						{
; 1392 : 							classID = objective->GetFeatureID(vc->feature_id);

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	DWORD PTR _classID$5[ebp], eax

; 1393 : 							origtype=Falcon4ClassTable[classID].vuClassData.classInfo_[VU_TYPE];

	mov	eax, DWORD PTR _classID$5[ebp]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	shl	ecx, 1
	mov	dl, BYTE PTR [eax+ecx+8]
	mov	BYTE PTR _origtype$7[ebp], dl

; 1394 : 
; 1395 : 							for(i=0;i<oc->Features;i++)

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN25@evaluate_v
$LN24@evaluate_v:
	mov	eax, DWORD PTR _i$6[ebp]
	add	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
$LN25@evaluate_v:
	mov	ecx, DWORD PTR _oc$4[ebp]
	movzx	edx, BYTE PTR [ecx+50]
	cmp	DWORD PTR _i$6[ebp], edx
	jge	SHORT $LN27@evaluate_v

; 1396 : 							{
; 1397 : 								classID = objective->GetFeatureID(i);

	mov	eax, DWORD PTR _i$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	DWORD PTR _classID$5[ebp], eax

; 1398 : 								if(Falcon4ClassTable[classID].vuClassData.classInfo_[VU_TYPE] == origtype)

	mov	ecx, DWORD PTR _classID$5[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [ecx+edx+8]
	movzx	ecx, BYTE PTR _origtype$7[ebp]
	cmp	eax, ecx
	jne	SHORT $LN22@evaluate_v

; 1399 : 									if(objective->GetFeatureStatus(i) == 3)

	mov	edx, DWORD PTR _i$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetFeatureStatus@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureStatus
	cmp	eax, 3
	jne	SHORT $LN22@evaluate_v

; 1400 : 									{
; 1401 : 										vc->active=TRUE;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [eax+4], 1

; 1402 : 										break;

	jmp	SHORT $LN27@evaluate_v
$LN22@evaluate_v:

; 1403 : 									}
; 1404 : 							}

	jmp	SHORT $LN24@evaluate_v
$LN27@evaluate_v:

; 1405 : 						}
; 1406 : 					}
; 1407 : 					break;

	jmp	$LN32@evaluate_v
$LN20@evaluate_v:

; 1408 : 				}
; 1409 : 
; 1410 : 				case vt_degrade:
; 1411 : 				{
; 1412 : 					objective = (Objective) FindEntity (vc->id);

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _objective$[ebp], eax

; 1413 : 
; 1414 : 					if (objective && objective->IsObjective())

	cmp	DWORD PTR _objective$[ebp], 0
	je	SHORT $LN19@evaluate_v
	mov	ecx, DWORD PTR _objective$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _objective$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN19@evaluate_v

; 1415 : 					{
; 1416 : 						//MonoPrint ("%08x = %d ", objective, objective->GetObjectiveStatus ());
; 1417 : 						
; 1418 : 						if (objective->GetObjectiveStatus () <= 100 - vc->tolerance * 10)

	mov	ecx, DWORD PTR _objective$[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	ecx, al
	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	imul	eax, 10					; 0000000aH
	mov	edx, 100				; 00000064H
	sub	edx, eax
	cmp	ecx, edx
	jg	SHORT $LN19@evaluate_v

; 1419 : 						{
; 1420 : 							//MonoPrint ("TRUE\n");
; 1421 : 							vc->active = TRUE;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [eax+4], 1
$LN19@evaluate_v:

; 1422 : 						}
; 1423 : 						//else
; 1424 : 						//{
; 1425 : 						//	//MonoPrint ("FALSE\n");
; 1426 : 						//	vc->active = FALSE;
; 1427 : 						//}
; 1428 : 					}
; 1429 : 					break;

	jmp	$LN32@evaluate_v
$LN17@evaluate_v:

; 1430 : 				}
; 1431 : 
; 1432 : 				case vt_attrit:
; 1433 : 				{
; 1434 : 					unit = (Unit) FindEntity (vc->id);

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _unit$[ebp], eax

; 1435 : 
; 1436 : 					if (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	SHORT $LN16@evaluate_v

; 1437 : 					{
; 1438 : 						if(!unit->IsUnit())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	jne	SHORT $LN15@evaluate_v

; 1439 : 							break;

	jmp	$LN32@evaluate_v
$LN15@evaluate_v:

; 1440 : 						per = 10 * unit->GetTotalVehicles () / unit->GetFullstrengthVehicles ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	esi, eax
	imul	esi, 10					; 0000000aH
	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetFullstrengthVehicles@UnitClass@@QAEHXZ ; UnitClass::GetFullstrengthVehicles
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _per$[ebp], eax

; 1441 : 
; 1442 : 						// MonoPrint ("%08x = %d:%d %d%% ", unit, unit->GetFullstrengthVehicles (), unit->GetTotalVehicles (), per);
; 1443 : 						
; 1444 : 						if (per <= (10 - vc->tolerance))

	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, 10					; 0000000aH
	sub	eax, DWORD PTR [edx+36]
	cmp	DWORD PTR _per$[ebp], eax
	jg	SHORT $LN14@evaluate_v

; 1445 : 						{
; 1446 : 							//MonoPrint ("TRUE\n");
; 1447 : 							vc->active = TRUE;

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [ecx+4], 1

; 1448 : 						}
; 1449 : 						else

	jmp	SHORT $LN13@evaluate_v
$LN14@evaluate_v:

; 1450 : 						{
; 1451 : 							//MonoPrint ("FALSE\n");
; 1452 : 							vc->active = FALSE;

	mov	edx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN13@evaluate_v:

; 1453 : 						}
; 1454 : 					}
; 1455 : 					else

	jmp	SHORT $LN12@evaluate_v
$LN16@evaluate_v:

; 1456 : 					{
; 1457 : 						// MonoPrint ("Unit Destroyed %08x = %d\n", unit);
; 1458 : 						vc->active = TRUE;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [eax+4], 1
$LN12@evaluate_v:

; 1459 : 					}
; 1460 : 					break;

	jmp	$LN32@evaluate_v
$LN11@evaluate_v:

; 1461 : 				}
; 1462 : 
; 1463 : 				case vt_intercept:
; 1464 : 				{
; 1465 : 					unit = (Unit) FindEntity (vc->id);

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _unit$[ebp], eax

; 1466 : 
; 1467 : 					if (unit)

	cmp	DWORD PTR _unit$[ebp], 0
	je	SHORT $LN10@evaluate_v

; 1468 : 					{
; 1469 : 						if(!unit->IsUnit())

	mov	ecx, DWORD PTR _unit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _unit$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	jne	SHORT $LN9@evaluate_v

; 1470 : 							break;

	jmp	SHORT $LN32@evaluate_v
$LN9@evaluate_v:

; 1471 : 						if (!vc->max_vehicles)

	mov	ecx, DWORD PTR _vc$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN10@evaluate_v

; 1472 : 						{
; 1473 : 							vc->max_vehicles = unit->GetTotalVehicles ();

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	edx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [edx+48], eax
$LN10@evaluate_v:

; 1474 : 						}
; 1475 : 					}
; 1476 : 
; 1477 : 					if ((unit) && (vc->max_vehicles))

	cmp	DWORD PTR _unit$[ebp], 0
	je	SHORT $LN7@evaluate_v
	mov	eax, DWORD PTR _vc$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN7@evaluate_v

; 1478 : 					{
; 1479 : 						// MonoPrint ("%08x = %d:%d ", unit, vc->number, unit->GetTotalVehicles ());
; 1480 : 						
; 1481 : 						if (vc->max_vehicles - unit->GetTotalVehicles () >= vc->tolerance)

	mov	ecx, DWORD PTR _unit$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	sub	edx, eax
	mov	eax, DWORD PTR _vc$[ebp]
	cmp	edx, DWORD PTR [eax+36]
	jl	SHORT $LN6@evaluate_v

; 1482 : 						{
; 1483 : 							//MonoPrint ("TRUE\n");
; 1484 : 							vc->active = TRUE;

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [ecx+4], 1

; 1485 : 						}
; 1486 : 						else

	jmp	SHORT $LN5@evaluate_v
$LN6@evaluate_v:

; 1487 : 						{
; 1488 : 							// MonoPrint ("FALSE\n");
; 1489 : 							vc->active = FALSE;

	mov	edx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN5@evaluate_v:

; 1490 : 						}
; 1491 : 					}
; 1492 : 					else

	jmp	SHORT $LN32@evaluate_v
$LN7@evaluate_v:

; 1493 : 					{
; 1494 : 						// MonoPrint ("Unit Destroyed %08x = %d\n", unit);
; 1495 : 						vc->active = TRUE;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [eax+4], 1
$LN32@evaluate_v:

; 1496 : 					}
; 1497 : 					break;
; 1498 : 				}
; 1499 : 
; 1500 : 				//default:
; 1501 : 				//{
; 1502 : 				//	vc->active = FALSE;
; 1503 : 				//}
; 1504 : 			}
; 1505 : 
; 1506 : 			if (old_active != vc->active)

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR _old_active$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	$LN34@evaluate_v

; 1507 : 			{
; 1508 : 				update_team_victory_window();

	call	?update_team_victory_window@@YAXXZ	; update_team_victory_window

; 1509 : 				//MonoPrint ("Victory Condition %d is now %s\n", count, (vc->active?"TRUE":"FALSE"));
; 1510 : 				changed=1;

	mov	DWORD PTR _changed$[ebp], 1

; 1511 : 				// Send message to remote players
; 1512 : 				if(TheCampaign.IsMaster() && gCommsMgr->Online())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsMaster@CampaignClass@@QAEHXZ		; CampaignClass::IsMaster
	test	eax, eax
	je	$LN34@evaluate_v
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	$LN34@evaluate_v

; 1513 : 				{
; 1514 : 					vcdone=new UISendMsg(FalconNullId,FalconLocalGame);

	push	65					; 00000041H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN41@evaluate_v
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@evaluate_v
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv302[ebp], eax
	jmp	SHORT $LN40@evaluate_v
$LN39@evaluate_v:
	mov	DWORD PTR tv302[ebp], 0
$LN40@evaluate_v:
	push	1
	mov	ecx, DWORD PTR tv302[ebp]
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0UISendMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; UISendMsg::UISendMsg
	mov	DWORD PTR tv306[ebp], eax
	jmp	SHORT $LN42@evaluate_v
$LN41@evaluate_v:
	mov	DWORD PTR tv306[ebp], 0
$LN42@evaluate_v:
	mov	ecx, DWORD PTR tv306[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _vcdone$[ebp], edx

; 1515 : 					vcdone->dataBlock.from=FalconLocalSessionId;

	mov	eax, DWORD PTR _vcdone$[ebp]
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+52], edx

; 1516 : 					vcdone->dataBlock.msgType=UISendMsg::VC_Update;

	mov	eax, DWORD PTR _vcdone$[ebp]
	mov	BYTE PTR [eax+56], 1

; 1517 : 					vcdone->dataBlock.number=vc->get_number();

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_number@victory_condition@@QAEHXZ	; victory_condition::get_number
	mov	ecx, DWORD PTR _vcdone$[ebp]
	mov	DWORD PTR [ecx+57], eax

; 1518 : 					vcdone->dataBlock.value=vc->active;

	mov	edx, DWORD PTR _vcdone$[ebp]
	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+61], ecx

; 1519 : 
; 1520 : 					FalconSendMessage(vcdone,TRUE);

	push	1
	mov	edx, DWORD PTR _vcdone$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN34@evaluate_v:

; 1521 : 				}
; 1522 : 			}
; 1523 : 		}
; 1524 : 		count ++;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax

; 1525 : 		vc = vc->succ;

	mov	ecx, DWORD PTR _vc$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _vc$[ebp], edx

; 1526 : 	}

	jmp	$LN36@evaluate_v
$LN35@evaluate_v:

; 1527 : 	
; 1528 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1529 : 
; 1530 : 	if(changed)

	cmp	DWORD PTR _changed$[ebp], 0
	je	SHORT $LN37@evaluate_v

; 1531 : 		gRefreshScoresList=1;

	mov	DWORD PTR ?gRefreshScoresList@@3JA, 1	; gRefreshScoresList
$LN37@evaluate_v:

; 1532 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN45@evaluate_v:
	DD	$LN31@evaluate_v
	DD	$LN28@evaluate_v
	DD	$LN17@evaluate_v
	DD	$LN11@evaluate_v
	DD	$LN20@evaluate_v
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?evaluate_victory_conditions@tactical_mission@@QAEXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?evaluate_victory_conditions@tactical_mission@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?evaluate_victory_conditions@tactical_mission@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?evaluate_victory_conditions@tactical_mission@@QAEXXZ ENDP ; tactical_mission::evaluate_victory_conditions
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_id$ = -76						; size = 8
_points$ = -68						; size = 4
_tolerance$ = -64					; size = 4
_value$ = -60						; size = 4
_type$ = -56						; size = 4
_team$ = -52						; size = 4
$T2 = -48						; size = 4
_this$ = -44						; size = 4
$T3 = -40						; size = 4
_vu_id_2$ = -36						; size = 4
_vu_id_1$ = -32						; size = 4
tv84 = -28						; size = 4
$T4 = -24						; size = 4
_item$ = -20						; size = 4
_vc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?setup_victory_condition@tactical_mission@@QAEXPAD@Z PROC ; tactical_mission::setup_victory_condition
; _this$ = ecx

; 1043 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setup_victory_condition@tactical_mission@@QAEXPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1044 : 	victory_type
; 1045 : 		type;
; 1046 : 
; 1047 : 	TREELIST
; 1048 : 		*item;
; 1049 : 
; 1050 : 	int
; 1051 : 		team,
; 1052 : 		vu_id_1,
; 1053 : 		vu_id_2,
; 1054 : 		value,
; 1055 : 		tolerance,
; 1056 : 		points;
; 1057 : 
; 1058 : 	VU_ID
; 1059 : 		id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1060 : 
; 1061 : 	victory_condition
; 1062 : 		*vc;
; 1063 : 
; 1064 : 	// team, type, vu_id, value, tolerance, points
; 1065 : 	sscanf
; 1066 : 	(
; 1067 : 		buffer,
; 1068 : 		"%d %d %d %d %d %d %d",
; 1069 : 		&team,
; 1070 : 		&type,
; 1071 : 		&vu_id_1,
; 1072 : 		&vu_id_2,
; 1073 : 		&value,
; 1074 : 		&tolerance,
; 1075 : 		&points
; 1076 : 	);

	lea	eax, DWORD PTR _points$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tolerance$[ebp]
	push	ecx
	lea	edx, DWORD PTR _value$[ebp]
	push	edx
	lea	eax, DWORD PTR _vu_id_2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vu_id_1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _type$[ebp]
	push	edx
	lea	eax, DWORD PTR _team$[ebp]
	push	eax
	push	OFFSET ??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sscanf
	add	esp, 36					; 00000024H

; 1077 : 
; 1078 : 	id.num_ = vu_id_1;

	mov	edx, DWORD PTR _vu_id_1$[ebp]
	mov	DWORD PTR _id$[ebp], edx

; 1079 : 	id.creator_ = vu_id_2;

	mov	eax, DWORD PTR _vu_id_2$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _id$[ebp+4], ecx

; 1080 : 
; 1081 : 	victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 1082 : 
; 1083 : 	vc = new victory_condition (this);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@setup_vict
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0victory_condition@@QAE@PAVtactical_mission@@@Z ; victory_condition::victory_condition
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN8@setup_vict
$LN7@setup_vict:
	mov	DWORD PTR tv84[ebp], 0
$LN8@setup_vict:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _vc$[ebp], ecx

; 1084 : 
; 1085 : 	vc->set_team (team);

	mov	edx, DWORD PTR _team$[ebp]
	push	edx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_team@victory_condition@@QAEXH@Z	; victory_condition::set_team

; 1086 : 	vc->set_type (type);

	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_type@victory_condition@@QAEXW4victory_type@@@Z ; victory_condition::set_type

; 1087 : 	vc->set_vu_id (id);

	mov	ecx, DWORD PTR _id$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_vu_id@victory_condition@@QAEXVVU_ID@@@Z ; victory_condition::set_vu_id

; 1088 : 	vc->set_sub_objective (value);

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_sub_objective@victory_condition@@QAEXH@Z ; victory_condition::set_sub_objective

; 1089 : 	vc->set_tolerance (tolerance);

	mov	ecx, DWORD PTR _tolerance$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_tolerance@victory_condition@@QAEXH@Z ; victory_condition::set_tolerance

; 1090 : 	vc->set_points (points);

	mov	edx, DWORD PTR _points$[ebp]
	push	edx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?set_points@victory_condition@@QAEXH@Z	; victory_condition::set_points

; 1091 : 
; 1092 : 	vc->control = MakeVCControl (vc);

	mov	eax, DWORD PTR _vc$[ebp]
	push	eax
	call	?MakeVCControl@@YAPAVC_Victory@@PAVvictory_condition@@@Z ; MakeVCControl
	add	esp, 4
	mov	ecx, DWORD PTR _vc$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 1093 : 	
; 1094 : 	if (gVCTree)

	cmp	DWORD PTR ?gVCTree@@3PAVC_TreeList@@A, 0 ; gVCTree
	je	$LN4@setup_vict

; 1095 : 	{
; 1096 : 		item = gVCTree->CreateItem (vc->get_number (), C_TYPE_ITEM, vc->control);

	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_number@victory_condition@@QAEHXZ	; victory_condition::get_number
	push	eax
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax

; 1097 : 
; 1098 : 		if (item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN4@setup_vict

; 1099 : 		{
; 1100 : 			gVCTree->AddItem (gVCTree->GetRoot (), item);

	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem

; 1101 : 			((C_Victory*) vc->control)->SetOwner (item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetOwner@C_Victory@@QAEXPAVTREELIST@@@Z ; C_Victory::SetOwner

; 1102 : 			vc->control->SetReady (1);

	push	1
	mov	ecx, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [ecx+52]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 1103 : 			vc->control->SetClient (gVCTree->GetClient ());

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movzx	edx, ax
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 1104 : 			vc->control->SetParent (gVCTree->Parent_);

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetParent@C_Base@@QAEXPAVC_Window@@@Z	; C_Base::SetParent

; 1105 : 			vc->control->SetSubParents (gVCTree->Parent_);

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _vc$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+52]
	mov	edx, DWORD PTR [eax+172]
	call	edx

; 1106 : 			gVCTree->RecalcSize ();

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1107 : 			if (gVCTree->Parent_)

	mov	eax, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN4@setup_vict

; 1108 : 				gVCTree->Parent_->RefreshClient (gVCTree->GetClient ());

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@setup_vict:

; 1109 : 		}
; 1110 : 	}
; 1111 : 
; 1112 : 	if (gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN1@setup_vict

; 1113 : 	{
; 1114 : 		gMapMgr->AddVC (vc);

	mov	eax, DWORD PTR _vc$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?AddVC@C_Map@@QAEPAVMAPICONLIST@@PAVvictory_condition@@@Z ; C_Map::AddVC
$LN1@setup_vict:

; 1115 : 	}
; 1116 : 	UpdateVCOptions(vc);

	mov	ecx, DWORD PTR _vc$[ebp]
	push	ecx
	call	?UpdateVCOptions@@YAXPAVvictory_condition@@@Z ; UpdateVCOptions
	add	esp, 4

; 1117 : 
; 1118 : 	victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section

; 1119 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?setup_victory_condition@tactical_mission@@QAEXPAD@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?setup_victory_condition@tactical_mission@@QAEXPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setup_victory_condition@tactical_mission@@QAEXPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setup_victory_condition@tactical_mission@@QAEXPAD@Z ENDP ; tactical_mission::setup_victory_condition
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
_flag$ = 12						; size = 4
?set_team_flag@tactical_mission@@QAEXHH@Z PROC		; tactical_mission::set_team_flag
; _this$ = ecx

; 1034 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1035 : 	team_flag[team] = static_cast<char>(flag);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _team$[ebp]
	mov	cl, BYTE PTR _flag$[ebp]
	mov	BYTE PTR [eax+48], cl

; 1036 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?set_team_flag@tactical_mission@@QAEXHH@Z ENDP		; tactical_mission::set_team_flag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_team$ = 8						; size = 4
_name$ = 12						; size = 4
?set_team_name@tactical_mission@@QAEXHPAD@Z PROC	; tactical_mission::set_team_name
; _this$ = ecx

; 1007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1008 : 	if (team_name[team])

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+16], 0
	je	SHORT $LN1@set_team_n

; 1009 : 	{
; 1010 : 		delete team_name[team];

	mov	edx, DWORD PTR _team$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+16]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1011 : 
; 1012 : 		team_name[team] = NULL;

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+16], 0
$LN1@set_team_n:

; 1013 : 	}
; 1014 : 
; 1015 : 	team_name[team] = new char [strlen (name) + 1];

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+eax*4+16], edx

; 1016 : 
; 1017 : 	strcpy (team_name[team], name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _team$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+16]
	push	eax
	call	_strcpy
	add	esp, 8

; 1018 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?set_team_name@tactical_mission@@QAEXHPAD@Z ENDP	; tactical_mission::set_team_name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
?clear_flag@tactical_mission@@QAEXJ@Z PROC		; tactical_mission::clear_flag
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 	TheCampaign.TE_flags &= ~value;

	mov	eax, DWORD PTR _value$[ebp]
	not	eax
	and	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, eax

; 113  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?clear_flag@tactical_mission@@QAEXJ@Z ENDP		; tactical_mission::clear_flag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
?set_flag@tactical_mission@@QAEXJ@Z PROC		; tactical_mission::set_flag
; _this$ = ecx

; 106  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 	TheCampaign.TE_flags |= value;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, eax

; 108  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?set_flag@tactical_mission@@QAEXJ@Z ENDP		; tactical_mission::set_flag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_value$ = 8						; size = 4
?is_flag_on@tactical_mission@@QAEHJ@Z PROC		; tactical_mission::is_flag_on
; _this$ = ecx

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 	return (TheCampaign.TE_flags & value) && TRUE;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, DWORD PTR _value$[ebp]
	je	SHORT $LN3@is_flag_on
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@is_flag_on
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@is_flag_on
$LN3@is_flag_on:
	mov	DWORD PTR tv67[ebp], 0
$LN4@is_flag_on:
	mov	eax, DWORD PTR tv67[ebp]

; 103  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?is_flag_on@tactical_mission@@QAEHJ@Z ENDP		; tactical_mission::is_flag_on
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?start_paused_on@tactical_mission@@QAEHXZ PROC		; tactical_mission::start_paused_on
; _this$ = ecx

; 96   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 	return (TheCampaign.TE_flags & tf_start_paused) && TRUE;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, 8
	je	SHORT $LN3@start_paus
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@start_paus
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@start_paus
$LN3@start_paus:
	mov	DWORD PTR tv67[ebp], 0
$LN4@start_paus:
	mov	eax, DWORD PTR tv67[ebp]

; 98   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?start_paused_on@tactical_mission@@QAEHXZ ENDP		; tactical_mission::start_paused_on
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?lock_oob_on@tactical_mission@@QAEHXZ PROC		; tactical_mission::lock_oob_on
; _this$ = ecx

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 	return (TheCampaign.TE_flags & tf_lock_oob) && TRUE;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, 4
	je	SHORT $LN3@lock_oob_o
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@lock_oob_o
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@lock_oob_o
$LN3@lock_oob_o:
	mov	DWORD PTR tv67[ebp], 0
$LN4@lock_oob_o:
	mov	eax, DWORD PTR tv67[ebp]

; 93   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lock_oob_on@tactical_mission@@QAEHXZ ENDP		; tactical_mission::lock_oob_on
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?lock_ato_on@tactical_mission@@QAEHXZ PROC		; tactical_mission::lock_ato_on
; _this$ = ecx

; 86   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	return (TheCampaign.TE_flags & tf_lock_ato) && TRUE;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, 2
	je	SHORT $LN3@lock_ato_o
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@lock_ato_o
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@lock_ato_o
$LN3@lock_ato_o:
	mov	DWORD PTR tv67[ebp], 0
$LN4@lock_ato_o:
	mov	eax, DWORD PTR tv67[ebp]

; 88   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lock_ato_on@tactical_mission@@QAEHXZ ENDP		; tactical_mission::lock_ato_on
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?hide_enemy_on@tactical_mission@@QAEHXZ PROC		; tactical_mission::hide_enemy_on
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 	return (TheCampaign.TE_flags & tf_hide_enemy) && TRUE;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, 1
	je	SHORT $LN3@hide_enemy
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@hide_enemy
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@hide_enemy
$LN3@hide_enemy:
	mov	DWORD PTR tv67[ebp], 0
$LN4@hide_enemy:
	mov	eax, DWORD PTR tv67[ebp]

; 83   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?hide_enemy_on@tactical_mission@@QAEHXZ ENDP		; tactical_mission::hide_enemy_on
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?get_team_flag@tactical_mission@@QAEHH@Z PROC		; tactical_mission::get_team_flag
; _this$ = ecx

; 1025 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1026 : 	return team_flag[team];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _team$[ebp]
	movsx	eax, BYTE PTR [eax+48]

; 1027 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?get_team_flag@tactical_mission@@QAEHH@Z ENDP		; tactical_mission::get_team_flag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?get_team_name@tactical_mission@@QAEPADH@Z PROC		; tactical_mission::get_team_name
; _this$ = ecx

; 998  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 999  : 	return team_name[team];

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+16]

; 1000 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?get_team_name@tactical_mission@@QAEPADH@Z ENDP		; tactical_mission::get_team_name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?get_number_of_f16s@tactical_mission@@QAEHH@Z PROC	; tactical_mission::get_number_of_f16s
; _this$ = ecx

; 989  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 990  : 	return number_f16s[team];

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+120]

; 991  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?get_number_of_f16s@tactical_mission@@QAEHH@Z ENDP	; tactical_mission::get_number_of_f16s
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?get_number_of_players@tactical_mission@@QAEHH@Z PROC	; tactical_mission::get_number_of_players
; _this$ = ecx

; 980  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 981  : 	return number_players[team];

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+88]

; 982  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?get_number_of_players@tactical_mission@@QAEHH@Z ENDP	; tactical_mission::get_number_of_players
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?get_number_of_aircraft@tactical_mission@@QAEHH@Z PROC	; tactical_mission::get_number_of_aircraft
; _this$ = ecx

; 971  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 972  : 	return number_aircraft[team];

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+56]

; 973  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?get_number_of_aircraft@tactical_mission@@QAEHH@Z ENDP	; tactical_mission::get_number_of_aircraft
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_number_of_teams@tactical_mission@@QAEHXZ PROC	; tactical_mission::get_number_of_teams
; _this$ = ecx

; 962  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	return number_teams;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 964  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_number_of_teams@tactical_mission@@QAEHXZ ENDP	; tactical_mission::get_number_of_teams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_end$ = -12						; size = 4
_ptr$ = -8						; size = 4
_dst$ = -4						; size = 4
?get_title@tactical_mission@@QAEPADXZ PROC		; tactical_mission::get_title
; _this$ = ecx

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 	static char
; 213  : 		buffer[100];
; 214  : 
; 215  : 	char
; 216  : 		*end,
; 217  : 		*dst,
; 218  : 		*ptr;
; 219  : 
; 220  : 	if (filename)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN9@get_title

; 221  : 	{
; 222  : 		end = filename;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _end$[ebp], edx

; 223  : 		ptr = filename;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx

; 224  : 		dst = buffer;

	mov	DWORD PTR _dst$[ebp], OFFSET ?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA
$LN8@get_title:

; 225  : 
; 226  : 		while (*ptr)

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN7@get_title

; 227  : 		{
; 228  : 			*dst = *ptr;

	mov	ecx, DWORD PTR _dst$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al

; 229  : 
; 230  : 			if (*ptr == '\\')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN6@get_title

; 231  : 			{
; 232  : 				dst = buffer;

	mov	DWORD PTR _dst$[ebp], OFFSET ?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA

; 233  : 				end = NULL;

	mov	DWORD PTR _end$[ebp], 0
	jmp	SHORT $LN5@get_title
$LN6@get_title:

; 234  : 			}
; 235  : 			else if (*ptr == '.')

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN4@get_title

; 236  : 			{
; 237  : 				end = dst ++;

	mov	edx, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _end$[ebp], edx
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 238  : 			}
; 239  : 			else

	jmp	SHORT $LN5@get_title
$LN4@get_title:

; 240  : 			{
; 241  : 				dst ++;

	mov	ecx, DWORD PTR _dst$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dst$[ebp], ecx
$LN5@get_title:

; 242  : 			}
; 243  : 
; 244  : 			ptr ++;

	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 245  : 		}

	jmp	SHORT $LN8@get_title
$LN7@get_title:

; 246  : 
; 247  : 		*dst = '\0';

	mov	eax, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [eax], 0

; 248  : 
; 249  : 		if (end)

	cmp	DWORD PTR _end$[ebp], 0
	je	SHORT $LN2@get_title

; 250  : 		{
; 251  : 			*end = '\0';

	mov	ecx, DWORD PTR _end$[ebp]
	mov	BYTE PTR [ecx], 0
$LN2@get_title:

; 252  : 		}
; 253  : 	}
; 254  : 	else

	jmp	SHORT $LN1@get_title
$LN9@get_title:

; 255  : 	{
; 256  : 		strcpy (buffer, TheCampaign.SaveFile);

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+182
	push	OFFSET ?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA
	call	_strcpy
	add	esp, 8
$LN1@get_title:

; 257  : 	}
; 258  : 
; 259  : 	return buffer;

	mov	eax, OFFSET ?buffer@?1??get_title@tactical_mission@@QAEPADXZ@4PADA

; 260  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_title@tactical_mission@@QAEPADXZ ENDP		; tactical_mission::get_title
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_new_type$ = 8						; size = 4
?set_type@tactical_mission@@QAEXW4tactical_type@@@Z PROC ; tactical_mission::set_type
; _this$ = ecx

; 193  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  : 	TheCampaign.TE_type = new_type;

	mov	eax, DWORD PTR _new_type$[ebp]
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, eax

; 195  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?set_type@tactical_mission@@QAEXW4tactical_type@@@Z ENDP ; tactical_mission::set_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_type@tactical_mission@@QAE?AW4tactical_type@@XZ PROC ; tactical_mission::get_type
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return (tactical_type) TheCampaign.TE_type;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_type@tactical_mission@@QAE?AW4tactical_type@@XZ ENDP ; tactical_mission::get_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\tac_class.h
;	COMDAT ?get_game_over@tactical_mission@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_game_over@tactical_mission@@QAEHXZ PROC		; tactical_mission::get_game_over, COMDAT
; _this$ = ecx

; 261  : 	int get_game_over() { return(game_over); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+204]
	mov	esp, ebp
	pop	ebp
	ret	0
?get_game_over@tactical_mission@@QAEHXZ ENDP		; tactical_mission::get_game_over
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\tac_class.h
;	COMDAT ?set_game_over@tactical_mission@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?set_game_over@tactical_mission@@QAEXH@Z PROC		; tactical_mission::set_game_over, COMDAT
; _this$ = ecx

; 260  : 	void set_game_over(int val) { game_over=val; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax+204], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?set_game_over@tactical_mission@@QAEXH@Z ENDP		; tactical_mission::set_game_over
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_saveIter$ = -12					; size = 4
_saveIP$ = -8						; size = 4
tv92 = -4						; size = 4
_filename$ = 8						; size = 4
?save@tactical_mission@@QAEXPAD@Z PROC			; tactical_mission::save
; _this$ = ecx

; 354  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 	long saveIP,saveIter;
; 356  : 
; 357  : 	if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 524288				; 00080000H
	je	SHORT $LN5@save

; 358  : 	{
; 359  : 		TheCampaign.SetCreatorIP(0);

	push	0
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreatorIP@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreatorIP

; 360  : 		TheCampaign.SetCreationTime(0);

	push	0
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationTime@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationTime

; 361  : 		TheCampaign.SetCreationIter(0);

	push	0
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter

; 362  : 		TheCampaign.SaveCampaign (game_TacticalEngagement, filename, 0); // Save Normal

	push	0
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	3
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 363  : 	}
; 364  : 	else

	jmp	$LN6@save
$LN5@save:

; 365  : 	{
; 366  : 		if(FalconLocalGame->IsLocal())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@save
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN9@save
$LN8@save:
	mov	DWORD PTR tv92[ebp], 0
$LN9@save:
	mov	ecx, DWORD PTR tv92[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@save

; 367  : 		{
; 368  : 			gCommsMgr->SaveStats();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SaveStats@UIComms@@QAEXXZ		; UIComms::SaveStats

; 369  : 			TheCampaign.SetCreationIter(TheCampaign.GetCreationIter()+1);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreationIter@CampaignClass@@QAEJXZ	; CampaignClass::GetCreationIter
	add	eax, 1
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter

; 370  : 			TheCampaign.SaveCampaign (game_TacticalEngagement, filename, 0); // Save Normal

	push	0
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	3
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 371  : 			if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN2@save

; 372  : 			{
; 373  : 				// Send messages to remote players with new Iter Number
; 374  : 				// So they can save their stats & update Iter in their campaign
; 375  : 				gCommsMgr->UpdateGameIter();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?UpdateGameIter@UIComms@@QAEXXZ		; UIComms::UpdateGameIter
$LN2@save:

; 376  : 			}
; 377  : 		}
; 378  : 		else

	jmp	SHORT $LN6@save
$LN3@save:

; 379  : 		{	// This person is making a LOCAL copy of someone elses game...
; 380  : 			// we can save His stats... but remote people will be SOL if he
; 381  : 			// tries to make this a remote game for them 
; 382  : 			saveIP=TheCampaign.GetCreatorIP();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreatorIP@CampaignClass@@QAEJXZ	; CampaignClass::GetCreatorIP
	mov	DWORD PTR _saveIP$[ebp], eax

; 383  : 			saveIter=TheCampaign.GetCreationIter();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreationIter@CampaignClass@@QAEJXZ	; CampaignClass::GetCreationIter
	mov	DWORD PTR _saveIter$[ebp], eax

; 384  : 			TheCampaign.SetCreatorIP(FalconLocalSessionId.creator_);

	mov	ecx, OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreatorIP@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreatorIP

; 385  : 			TheCampaign.SetCreationIter(1);

	push	1
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter

; 386  : 
; 387  : 			gCommsMgr->SaveStats();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SaveStats@UIComms@@QAEXXZ		; UIComms::SaveStats

; 388  : 			TheCampaign.SaveCampaign (game_TacticalEngagement, filename, 0); // Save Normal

	push	0
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	3
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 389  : 			TheCampaign.SetCreatorIP(saveIP);

	mov	eax, DWORD PTR _saveIP$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreatorIP@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreatorIP

; 390  : 			TheCampaign.SetCreationIter(saveIter);

	mov	ecx, DWORD PTR _saveIter$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter
$LN6@save:

; 391  : 		}
; 392  : 	}
; 393  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?save@tactical_mission@@QAEXPAD@Z ENDP			; tactical_mission::save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
_id$ = -24						; size = 8
_this$ = -16						; size = 4
_fp$ = -12						; size = 4
_loop$ = -8						; size = 4
_vc$ = -4						; size = 4
_savefile$ = 8						; size = 4
?save_data@tactical_mission@@QAEXPAD@Z PROC		; tactical_mission::save_data
; _this$ = ecx

; 267  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 268  : 	FILE
; 269  : 		*fp;
; 270  : 
; 271  : 	VU_ID
; 272  : 		id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 273  : 
; 274  : 	victory_condition
; 275  : 		*vc;
; 276  : 
; 277  : 	int
; 278  : 		loop;
; 279  : 
; 280  : 	if ((fp = OpenCampFile (savefile, "te", "wb")) == NULL)

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	OFFSET ??_C@_02ELMMHJID@te?$AA@
	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax
	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN10@save_data

; 281  : 		return;

	jmp	$LN11@save_data
$LN10@save_data:

; 282  : 
; 283  : 	if (conditions)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	$LN9@save_data

; 284  : 	{
; 285  : 		fprintf (fp, ":Victory\n");

	push	OFFSET ??_C@_09PMDOCMGF@?3Victory?6?$AA@
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fprintf
	add	esp, 8

; 286  : 
; 287  : 		victory_condition::enter_critical_section ();

	call	?enter_critical_section@victory_condition@@SAXXZ ; victory_condition::enter_critical_section

; 288  : 
; 289  : 		vc = conditions;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _vc$[ebp], ecx
$LN8@save_data:

; 290  : 
; 291  : 		while (vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN7@save_data

; 292  : 		{
; 293  : 			id = vc->get_vu_id ();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_vu_id@victory_condition@@QAE?AVVU_ID@@XZ ; victory_condition::get_vu_id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _id$[ebp], ecx
	mov	DWORD PTR _id$[ebp+4], edx

; 294  : 
; 295  : 			// team, type, vu_id, value, tolerance, points
; 296  : 			fprintf
; 297  : 			(
; 298  : 				fp,
; 299  : 				"%d %d %d %d %d %d %d\n",
; 300  : 				vc->get_team (),
; 301  : 				vc->get_type (),
; 302  : 				id.num_,
; 303  : 				id.creator_,
; 304  : 				vc->get_sub_objective (),
; 305  : 				vc->get_tolerance (),
; 306  : 				vc->get_points ()
; 307  : 			);

	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_points@victory_condition@@QAEHXZ	; victory_condition::get_points
	push	eax
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_tolerance@victory_condition@@QAEHXZ ; victory_condition::get_tolerance
	push	eax
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_sub_objective@victory_condition@@QAEHXZ ; victory_condition::get_sub_objective
	push	eax
	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_type@victory_condition@@QAE?AW4victory_type@@XZ ; victory_condition::get_type
	push	eax
	mov	ecx, DWORD PTR _vc$[ebp]
	call	?get_team@victory_condition@@QAEHXZ	; victory_condition::get_team
	push	eax
	push	OFFSET ??_C@_0BG@PCIKMFJB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?6?$AA@
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fprintf
	add	esp, 36					; 00000024H

; 308  : 
; 309  : 			vc = vc->succ;

	mov	eax, DWORD PTR _vc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _vc$[ebp], ecx

; 310  : 		}

	jmp	SHORT $LN8@save_data
$LN7@save_data:

; 311  : 
; 312  : 		victory_condition::leave_critical_section ();

	call	?leave_critical_section@victory_condition@@SAXXZ ; victory_condition::leave_critical_section
$LN9@save_data:

; 313  : 	}
; 314  : 
; 315  : 	if (points_required)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN6@save_data

; 316  : 	{
; 317  : 		fprintf (fp, ":Required\n%d\n", points_required);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	push	ecx
	push	OFFSET ??_C@_0O@JNHNABBN@?3Required?6?$CFd?6?$AA@
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN6@save_data:

; 318  : 	}
; 319  : 
; 320  : 	fprintf (fp, ":Teams\n%d\n", get_tactical_number_of_teams ());

	call	?get_tactical_number_of_teams@@YAHXZ	; get_tactical_number_of_teams
	push	eax
	push	OFFSET ??_C@_0L@OLENIBOG@?3Teams?6?$CFd?6?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 321  : 
; 322  : 	for (loop = 1; loop < 8; loop ++)

	mov	DWORD PTR _loop$[ebp], 1
	jmp	SHORT $LN5@save_data
$LN4@save_data:
	mov	ecx, DWORD PTR _loop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _loop$[ebp], ecx
$LN5@save_data:
	cmp	DWORD PTR _loop$[ebp], 8
	jge	$LN3@save_data

; 323  : 	{
; 324  : 		if(TeamInfo[loop])

	mov	edx, DWORD PTR _loop$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4], 0
	je	SHORT $LN2@save_data

; 325  : 		{
; 326  : 			fprintf
; 327  : 			(
; 328  : 				fp,
; 329  : 				":Team\n%d %d %d\n",
; 330  : 				loop,
; 331  : 				get_tactical_number_of_aircraft (loop),
; 332  : 				get_tactical_number_of_f16s (loop)
; 333  : 			);

	mov	eax, DWORD PTR _loop$[ebp]
	push	eax
	call	?get_tactical_number_of_f16s@@YAHH@Z	; get_tactical_number_of_f16s
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _loop$[ebp]
	push	ecx
	call	?get_tactical_number_of_aircraft@@YAHH@Z ; get_tactical_number_of_aircraft
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _loop$[ebp]
	push	edx
	push	OFFSET ??_C@_0BA@CBDCMHKK@?3Team?6?$CFd?5?$CFd?5?$CFd?6?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H

; 334  : 
; 335  : 			fprintf (fp, ":TeamName\n%s\n", TeamInfo[loop]->GetName ());

	mov	ecx, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetName@TeamClass@@QAEPADXZ		; TeamClass::GetName
	push	eax
	push	OFFSET ??_C@_0O@FCGJCKIC@?3TeamName?6?$CFs?6?$AA@
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fprintf
	add	esp, 12					; 0000000cH

; 336  : 			fprintf (fp, ":TeamFlag\n%d\n", TeamInfo[loop]->GetFlag ());

	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetFlag@TeamClass@@QAEHXZ		; TeamClass::GetFlag
	push	eax
	push	OFFSET ??_C@_0O@OBLFODMB@?3TeamFlag?6?$CFd?6?$AA@
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN2@save_data:

; 337  : 		}
; 338  : 		
; 339  : 	}

	jmp	$LN4@save_data
$LN3@save_data:

; 340  : 
; 341  : 	if (filename)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@save_data

; 342  : 	{
; 343  : 		strcpy (gUI_CampaignFile, filename);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8
$LN1@save_data:

; 344  : 	}
; 345  : 
; 346  : 	CloseCampFile (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	?CloseCampFile@@YAXPAU_iobuf@@@Z	; CloseCampFile
	add	esp, 4
$LN11@save_data:

; 347  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?save_data@tactical_mission@@QAEXPAD@Z ENDP		; tactical_mission::save_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?revert@tactical_mission@@QAEXXZ PROC			; tactical_mission::revert
; _this$ = ecx

; 945  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 946  : 	//MonoPrint ("Tactical_Mission::Revert %s\n", filename);
; 947  : 
; 948  : 	// HACK - Robin (unnessary hack)
; 949  : 	//FalconLocalSession->SetCountry(gSelectedTeam);
; 950  : 	SendMessage(gMainHandler->GetAppWnd (), FM_LOAD_CAMPAIGN, 0, game_TacticalEngagement);

	push	3
	push	0
	push	1035					; 0000040bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__SendMessageA@16

; 951  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?revert@tactical_mission@@QAEXXZ ENDP			; tactical_mission::revert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 4
_size$ = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
_data$ = -8						; size = 4
_this$ = -4						; size = 4
_the_filename$ = 8					; size = 4
?info_load@tactical_mission@@QAEXPAD@Z PROC		; tactical_mission::info_load
; _this$ = ecx

; 730  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 	int
; 732  : 		size;
; 733  : 
; 734  : 	char
; 735  : 		*data;
; 736  : 
; 737  : 	if (strcmp (filename, the_filename) != 0)

	mov	eax, DWORD PTR _the_filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@info_load

; 738  : 	{
; 739  : 		delete (filename);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 740  : 
; 741  : 		filename = new char[strlen (the_filename)];

	mov	eax, DWORD PTR _the_filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 742  : 
; 743  : 		strcpy (filename, the_filename);

	mov	eax, DWORD PTR _the_filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@info_load:

; 744  : 	}
; 745  : 
; 746  : 	data = read_te_file (filename, &size);

	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?read_te_file@tactical_mission@@AAEPADPADPAH@Z ; tactical_mission::read_te_file
	mov	DWORD PTR _data$[ebp], eax

; 747  : 
; 748  : 	if (!data)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN1@info_load

; 749  : 	{
; 750  : 		MonoPrint ("Cannot open a file we just decided existed\n");

	push	OFFSET ??_C@_0CM@BDJDNNAO@Cannot?5open?5a?5file?5we?5just?5decid@
	call	_MonoPrint
	add	esp, 4

; 751  : 
; 752  : 		return;

	jmp	SHORT $LN3@info_load
$LN1@info_load:

; 753  : 	}
; 754  : 
; 755  : 	process_load (data, size, FALSE);

	push	0
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?process_load@tactical_mission@@AAEXPADHH@Z ; tactical_mission::process_load

; 756  : 
; 757  : 	delete data;

	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@info_load:

; 758  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?info_load@tactical_mission@@QAEXPAD@Z ENDP		; tactical_mission::info_load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?new_setup@tactical_mission@@QAEXXZ PROC		; tactical_mission::new_setup
; _this$ = ecx

; 924  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 925  : 	//MonoPrint ("Tactical_Mission::New Setup\n");
; 926  : 
; 927  : 	strcpy (gUI_CampaignFile, "te_new");

	push	OFFSET ??_C@_06GNFFHEIA@te_new?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 928  : 
; 929  : 	is_new = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 930  : 
; 931  : 	_tcscpy(gUI_ScenarioName,get_title());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_title@tactical_mission@@QAEPADXZ	; tactical_mission::get_title
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 932  : 
; 933  : //	FalconLocalSession->SetCountry (team);
; 934  : 
; 935  : 	SendMessage (gMainHandler->GetAppWnd (), FM_LOAD_CAMPAIGN, 0, game_TacticalEngagement);

	push	3
	push	0
	push	1035					; 0000040bH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__SendMessageA@16

; 936  : 
; 937  : 	//MonoPrint ("Tactical_Mission::New Setup\n");
; 938  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?new_setup@tactical_mission@@QAEXXZ ENDP		; tactical_mission::new_setup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_ext$ = -16						; size = 4
_this$ = -12						; size = 4
_name$ = -8						; size = 4
_ptr$ = -4						; size = 4
?preload@tactical_mission@@QAEXXZ PROC			; tactical_mission::preload
; _this$ = ecx

; 856  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 857  : 	char
; 858  : 		*ext,
; 859  : 		*ptr,
; 860  : 		*name;
; 861  : 
; 862  : 	if (this)

	cmp	DWORD PTR _this$[ebp], 0
	je	$LN8@preload

; 863  : 	{
; 864  : 		name = filename;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _name$[ebp], ecx

; 865  : 		
; 866  : 		ptr = filename;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _ptr$[ebp], eax
$LN7@preload:

; 867  : 
; 868  : 		while (*ptr)

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN6@preload

; 869  : 		{
; 870  : 			if (*ptr == '\\')

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN5@preload

; 871  : 			{
; 872  : 				name = &ptr[1];

	mov	edx, 1
	shl	edx, 0
	add	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _name$[ebp], edx
$LN5@preload:

; 873  : 			}
; 874  : 			ptr ++;

	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax

; 875  : 		}

	jmp	SHORT $LN7@preload
$LN6@preload:

; 876  : 
; 877  : 		ptr = gUI_CampaignFile;

	mov	DWORD PTR _ptr$[ebp], OFFSET ?gUI_CampaignFile@@3PADA ; gUI_CampaignFile

; 878  : 
; 879  : 		ext = ptr;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _ext$[ebp], ecx
$LN4@preload:

; 880  : 
; 881  : 		while (*name)

	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN3@preload

; 882  : 		{
; 883  : 			if (*name == '.')

	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN2@preload

; 884  : 			{
; 885  : 				ext = ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _ext$[ebp], eax
$LN2@preload:

; 886  : 			}
; 887  : 
; 888  : 			*ptr = *name;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR _name$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al

; 889  : 
; 890  : 			name ++;

	mov	ecx, DWORD PTR _name$[ebp]
	add	ecx, 1
	mov	DWORD PTR _name$[ebp], ecx

; 891  : 			ptr ++;

	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 892  : 		}

	jmp	SHORT $LN4@preload
$LN3@preload:

; 893  : 
; 894  : 		*ext = '\0';

	mov	eax, DWORD PTR _ext$[ebp]
	mov	BYTE PTR [eax], 0

; 895  : 		*ptr = '\0';

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [ecx], 0

; 896  : 
; 897  : 		_tcscpy(gUI_ScenarioName,get_title());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_title@tactical_mission@@QAEPADXZ	; tactical_mission::get_title
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 898  : 	}
; 899  : 	else

	jmp	SHORT $LN1@preload
$LN8@preload:

; 900  : 	{
; 901  : 		strcpy (gUI_CampaignFile, "te_new");

	push	OFFSET ??_C@_06GNFFHEIA@te_new?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 902  : 		_tcscpy(gUI_ScenarioName, "te_new");

	push	OFFSET ??_C@_06GNFFHEIA@te_new?$AA@
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8
$LN1@preload:

; 903  : 	}
; 904  : 
; 905  : 	TheCampaign.Suspend ();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 906  : 
; 907  : 	TheCampaign.LoadScenarioStats (game_TacticalEngagement, gUI_CampaignFile);

	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	push	3
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadScenarioStats

; 908  : 
; 909  : //	StartReadCampFile (game_TacticalEngagement, gUI_CampaignFile);
; 910  : //
; 911  : //	if (!LoadTeams (gUI_CampaignFile))
; 912  : //	{
; 913  : //		AddNewTeams (Neutral);
; 914  : //	}
; 915  : //
; 916  : //	EndReadCampFile ();
; 917  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?preload@tactical_mission@@QAEXXZ ENDP			; tactical_mission::preload
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_size$ = -28						; size = 4
$T1 = -24						; size = 4
_data$ = -20						; size = 4
_ext$ = -16						; size = 4
_this$ = -12						; size = 4
_name$ = -8						; size = 4
_ptr$ = -4						; size = 4
?load@tactical_mission@@QAEXXZ PROC			; tactical_mission::load
; _this$ = ecx

; 765  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 766  : 	int
; 767  : 		size;
; 768  : 
; 769  : 	char
; 770  : 		*ptr,
; 771  : 		*ext,
; 772  : 		*data,
; 773  : 		*name;
; 774  : 
; 775  : 	if (!is_online)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN10@load

; 776  : 	{
; 777  : 		data = read_te_file (filename, &size);

	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?read_te_file@tactical_mission@@AAEPADPADPAH@Z ; tactical_mission::read_te_file
	mov	DWORD PTR _data$[ebp], eax

; 778  : 
; 779  : 		//MonoPrint ("Tactical_Mission::Load %s\n", filename);
; 780  : 
; 781  : 		if (!data)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN9@load

; 782  : 		{
; 783  : 			MonoPrint ("Cannot open a file we just decided existed\n");

	push	OFFSET ??_C@_0CM@BDJDNNAO@Cannot?5open?5a?5file?5we?5just?5decid@
	call	_MonoPrint
	add	esp, 4

; 784  : 
; 785  : 			return;

	jmp	$LN11@load
$LN9@load:

; 786  : 		}
; 787  : 
; 788  : 		name = filename;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _name$[ebp], edx

; 789  : 		
; 790  : 		ptr = filename;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx
$LN8@load:

; 791  : 
; 792  : 		while (*ptr)

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN7@load

; 793  : 		{
; 794  : 			if (*ptr == '\\')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN6@load

; 795  : 			{
; 796  : 				name = &ptr[1];

	mov	eax, 1
	shl	eax, 0
	add	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _name$[ebp], eax
$LN6@load:

; 797  : 			}
; 798  : 			ptr ++;

	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$[ebp], ecx

; 799  : 		}

	jmp	SHORT $LN8@load
$LN7@load:

; 800  : 
; 801  : 		ptr = gUI_CampaignFile;

	mov	DWORD PTR _ptr$[ebp], OFFSET ?gUI_CampaignFile@@3PADA ; gUI_CampaignFile

; 802  : 
; 803  : 		ext = NULL;

	mov	DWORD PTR _ext$[ebp], 0
$LN5@load:

; 804  : 		while (*name)

	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN4@load

; 805  : 		{
; 806  : 			if (*name == '.')

	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN3@load

; 807  : 			{
; 808  : 				ext = ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _ext$[ebp], eax
$LN3@load:

; 809  : 			}
; 810  : 
; 811  : 			*ptr = *name;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR _name$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al

; 812  : 
; 813  : 			name ++;

	mov	ecx, DWORD PTR _name$[ebp]
	add	ecx, 1
	mov	DWORD PTR _name$[ebp], ecx

; 814  : 			ptr ++;

	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 815  : 		}

	jmp	SHORT $LN5@load
$LN4@load:

; 816  : 
; 817  : 		*ptr = '\0';

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [eax], 0

; 818  : 		if(ext)

	cmp	DWORD PTR _ext$[ebp], 0
	je	SHORT $LN2@load

; 819  : 			*ext = '\0';

	mov	ecx, DWORD PTR _ext$[ebp]
	mov	BYTE PTR [ecx], 0
$LN2@load:

; 820  : 
; 821  : 		ShowGameOverWindow=0;

	mov	DWORD PTR ?ShowGameOverWindow@@3JA, 0	; ShowGameOverWindow

; 822  : 
; 823  : 		_tcscpy(gUI_ScenarioName,get_title());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_title@tactical_mission@@QAEPADXZ	; tactical_mission::get_title
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 824  : 
; 825  : 		FalconLocalSession->SetCountry(static_cast<uchar>(gSelectedTeam));

	movzx	edx, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetCountry@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetCountry

; 826  : 
; 827  : 		SendMessage(FalconDisplay.appWin, FM_LOAD_CAMPAIGN, 0, game_TacticalEngagement);

	push	3
	push	0
	push	1035					; 0000040bH
	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	eax
	call	DWORD PTR __imp__SendMessageA@16

; 828  : 
; 829  : /*		victory_condition::enter_critical_section ();
; 830  : 
; 831  : 		while (conditions)
; 832  : 		{
; 833  : 			delete conditions;
; 834  : 		}
; 835  : 
; 836  : 		conditions = NULL;
; 837  : 
; 838  : 		victory_condition::leave_critical_section ();
; 839  : 
; 840  : 		process_load (data, size, TRUE);
; 841  : */
; 842  : 		delete data;

	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 843  : 	}
; 844  : 	else

	jmp	SHORT $LN11@load
$LN10@load:

; 845  : 	{
; 846  : 		FalconLocalSession->SetCountry(gSelectedTeam);

	movzx	eax, BYTE PTR ?gSelectedTeam@@3EA	; gSelectedTeam
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetCountry@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetCountry

; 847  : 		StartCampaignGame (0, game_TacticalEngagement);

	push	3
	push	0
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8
$LN11@load:

; 848  : 	}
; 849  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?load@tactical_mission@@QAEXXZ ENDP			; tactical_mission::load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1tactical_mission@@QAE@XZ PROC			; tactical_mission::~tactical_mission
; _this$ = ecx

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 	if (filename)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@tactical_m

; 181  : 	{
; 182  : 		delete filename;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 
; 184  : 		filename = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@tactical_m:

; 185  : 	}
; 186  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1tactical_mission@@QAE@XZ ENDP			; tactical_mission::~tactical_mission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tactical_mission@@QAE@XZ PROC			; tactical_mission::tactical_mission
; _this$ = ecx

; 150  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 	TheCampaign.TE_type = tt_engagement;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 1

; 152  : 
; 153  : 	filename = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 154  : 
; 155  : 	is_new = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 156  : 	is_online = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 1

; 157  : 
; 158  : 	number_teams = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 159  : 	memset (number_aircraft, 0, sizeof (number_aircraft));

	push	32					; 00000020H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 160  : 	memset (number_players, 0, sizeof (number_players));

	push	32					; 00000020H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 161  : 	memset (number_f16s, 0, sizeof (number_f16s));

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 162  : 	memset (team_name, 0, sizeof (team_name));

	push	32					; 00000020H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 163  : 	memset (team_pts, 0, sizeof (team_pts));

	push	32					; 00000020H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 164  : 
; 165  : 	conditions = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0

; 166  : 
; 167  : 	TheCampaign.TE_flags = 0;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, 0

; 168  : 	filter = vcf_all;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+196], 1

; 169  : 	team = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], 1

; 170  : 
; 171  : 	points_required = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+200], 0

; 172  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0tactical_mission@@QAE@XZ ENDP			; tactical_mission::tactical_mission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_the_filename$ = 8					; size = 4
??0tactical_mission@@QAE@PAD@Z PROC			; tactical_mission::tactical_mission
; _this$ = ecx

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 117  : 	TheCampaign.TE_type = tt_unknown;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 0

; 118  : 
; 119  : 	filename = new char[strlen (the_filename) + 1];

	mov	eax, DWORD PTR _the_filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx

; 120  : 
; 121  : 	strcpy (filename, the_filename);

	mov	eax, DWORD PTR _the_filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcpy
	add	esp, 8

; 122  : 
; 123  : 	is_new = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 124  : 	is_online = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 125  : 
; 126  : 	number_teams = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 127  : 	memset (number_aircraft, 0, sizeof (number_aircraft));

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 128  : 	memset (number_players, 0, sizeof (number_players));

	push	32					; 00000020H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 129  : 	memset (number_f16s, 0, sizeof (number_f16s));

	push	32					; 00000020H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 120				; 00000078H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 130  : 	memset (team_name, 0, sizeof (team_name));

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 131  : 	memset (team_pts, 0, sizeof (team_pts));

	push	32					; 00000020H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 132  : 
; 133  : 	conditions = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], 0

; 134  : 
; 135  : 	TheCampaign.TE_flags = 0;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, 0

; 136  : 	filter = vcf_all;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], 1

; 137  : 	team = 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], 1

; 138  : 	game_over=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+204], 0

; 139  : 
; 140  : 	points_required = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+200], 0

; 141  : 
; 142  : 	info_load (the_filename);

	mov	ecx, DWORD PTR _the_filename$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?info_load@tactical_mission@@QAEXPAD@Z	; tactical_mission::info_load

; 143  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0tactical_mission@@QAE@PAD@Z ENDP			; tactical_mission::tactical_mission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
$T1 = -1116						; size = 4
_x$ = -1112						; size = 4
_y$ = -1108						; size = 4
_current_state$ = -1104					; size = 4
tv200 = -1100						; size = 4
_team$ = -1096						; size = 4
_loop$ = -1092						; size = 4
_ptr$ = -1088						; size = 4
_this$ = -1084						; size = 4
_len$ = -1080						; size = 4
_token_str$ = -1076					; size = 72
_buffer$ = -1004					; size = 1000
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
___formal$ = 16						; size = 4
?process_load@tactical_mission@@AAEXPADHH@Z PROC	; tactical_mission::process_load
; _this$ = ecx

; 400  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1116				; 0000045cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 401  : 	char
; 402  : 		*ptr=NULL,

	mov	DWORD PTR _ptr$[ebp], 0

; 403  : 		buffer[1000];
; 404  : 
; 405  : 	int
; 406  : 		len=0,

	mov	DWORD PTR _len$[ebp], 0

; 407  : 		team=0,

	mov	DWORD PTR _team$[ebp], 0

; 408  : 		x=0,

	mov	DWORD PTR _x$[ebp], 0

; 409  : 		y=0,

	mov	DWORD PTR _y$[ebp], 0

; 410  : 		loop=0;

	mov	DWORD PTR _loop$[ebp], 0

; 411  : 
; 412  : 	enum tokens
; 413  : 	{
; 414  : 		t_null,
; 415  : 		t_type,
; 416  : 		t_marque,
; 417  : 		t_victory_condition,
; 418  : 		t_flags,
; 419  : 		t_points_required,
; 420  : 		t_number_teams,
; 421  : 		t_team_info,
; 422  : 		t_team_name,
; 423  : 		t_team_flag
; 424  : 	}
; 425  : 		current_state = t_null;

	mov	DWORD PTR _current_state$[ebp], 0

; 426  : 
; 427  : 	struct
; 428  : 	{
; 429  : 		char	*str;
; 430  : 		tokens	token;
; 431  : 	}
; 432  : 		token_str[] =
; 433  : 		{
; 434  : 			"type", t_type,

	mov	DWORD PTR _token_str$[ebp], OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	mov	DWORD PTR _token_str$[ebp+4], 1

; 435  : 			"victory", t_victory_condition,

	mov	DWORD PTR _token_str$[ebp+8], OFFSET ??_C@_07KGDDBDJI@victory?$AA@
	mov	DWORD PTR _token_str$[ebp+12], 3

; 436  : 			"flags", t_flags,

	mov	DWORD PTR _token_str$[ebp+16], OFFSET ??_C@_05GECEPKB@flags?$AA@
	mov	DWORD PTR _token_str$[ebp+20], 4

; 437  : 			"required", t_points_required,

	mov	DWORD PTR _token_str$[ebp+24], OFFSET ??_C@_08FEMBDDHD@required?$AA@
	mov	DWORD PTR _token_str$[ebp+28], 5

; 438  : 			"teams", t_number_teams,

	mov	DWORD PTR _token_str$[ebp+32], OFFSET ??_C@_05EINLALJG@teams?$AA@
	mov	DWORD PTR _token_str$[ebp+36], 6

; 439  : 			"team", t_team_info,

	mov	DWORD PTR _token_str$[ebp+40], OFFSET ??_C@_04KADBPNCB@team?$AA@
	mov	DWORD PTR _token_str$[ebp+44], 7

; 440  : 			"teamname", t_team_name,

	mov	DWORD PTR _token_str$[ebp+48], OFFSET ??_C@_08EIAEBCFJ@teamname?$AA@
	mov	DWORD PTR _token_str$[ebp+52], 8

; 441  : 			"teamflag", t_team_flag,

	mov	DWORD PTR _token_str$[ebp+56], OFFSET ??_C@_08LBDCBKKD@teamflag?$AA@
	mov	DWORD PTR _token_str$[ebp+60], 9

; 442  : 			NULL, t_null

	mov	DWORD PTR _token_str$[ebp+64], 0

; 443  : 		};

	mov	DWORD PTR _token_str$[ebp+68], 0
$LN38@process_lo:

; 444  : 
; 445  : 	while (size)

	cmp	DWORD PTR _size$[ebp], 0
	je	$LN40@process_lo

; 446  : 	{
; 447  : 		ptr = buffer;

	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax
$LN36@process_lo:

; 448  : 		while (size)

	cmp	DWORD PTR _size$[ebp], 0
	je	$LN35@process_lo

; 449  : 		{
; 450  : 			*ptr = *data;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al

; 451  : 
; 452  : 			if ((*ptr == '\r') || (*ptr == '\n'))

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN32@process_lo
	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN34@process_lo
$LN32@process_lo:

; 453  : 			{
; 454  : 				while ((size) && ((*data == '\n') || (*data == '\r') || (*data == '\t') || (*data == ' ')))

	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN31@process_lo
	mov	edx, DWORD PTR _data$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN30@process_lo
	mov	ecx, DWORD PTR _data$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN30@process_lo
	mov	eax, DWORD PTR _data$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN30@process_lo
	mov	edx, DWORD PTR _data$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN31@process_lo
$LN30@process_lo:

; 455  : 				{
; 456  : 					data ++;

	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx

; 457  : 					size --;

	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 458  : 				}

	jmp	SHORT $LN32@process_lo
$LN31@process_lo:

; 459  : 				break;

	jmp	SHORT $LN35@process_lo
$LN34@process_lo:

; 460  : 			}
; 461  : 
; 462  : 			ptr ++;

	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax

; 463  : 			data ++;

	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx

; 464  : 			size --;

	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 465  : 		}

	jmp	$LN36@process_lo
$LN35@process_lo:

; 466  : 
; 467  : 		*ptr = '\0';

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [eax], 0

; 468  : 
; 469  : 		// Find the length of the input
; 470  : 
; 471  : 		len = strlen (buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
$LN29@process_lo:

; 472  : 
; 473  : 		// while we have some characters and they are not "good" characters, just chop the string shorter.
; 474  : 
; 475  : 		while
; 476  : 		(
; 477  : 			(len > 0) &&
; 478  : 			(
; 479  : 				(buffer[len - 1] == '\n') ||
; 480  : 				(buffer[len - 1] == '\r') ||
; 481  : 				(buffer[len - 1] == '\t') ||
; 482  : 				(buffer[len - 1] == ' ')
; 483  : 			)
; 484  : 		)

	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN28@process_lo
	mov	edx, DWORD PTR _len$[ebp]
	movsx	eax, BYTE PTR _buffer$[ebp+edx-1]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN27@process_lo
	mov	ecx, DWORD PTR _len$[ebp]
	movsx	edx, BYTE PTR _buffer$[ebp+ecx-1]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN27@process_lo
	mov	eax, DWORD PTR _len$[ebp]
	movsx	ecx, BYTE PTR _buffer$[ebp+eax-1]
	cmp	ecx, 9
	je	SHORT $LN27@process_lo
	mov	edx, DWORD PTR _len$[ebp]
	movsx	eax, BYTE PTR _buffer$[ebp+edx-1]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN28@process_lo
$LN27@process_lo:

; 485  : 		{
; 486  : 			buffer[len - 1] = '\0';

	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 1000		; 000003e8H
	jae	SHORT $LN41@process_lo
	jmp	SHORT $LN42@process_lo
$LN41@process_lo:
	call	___report_rangecheckfailure
$LN42@process_lo:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _buffer$[ebp+edx], 0

; 487  : 			len --;

	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$[ebp], eax

; 488  : 		}

	jmp	$LN29@process_lo
$LN28@process_lo:

; 489  : 
; 490  : 		// Ok, we are now stripped.
; 491  : 
; 492  : 		// Is it a command we know about, if so, update the current_state.
; 493  : 
; 494  : 		if (buffer[0] == ':')

	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buffer$[ebp+ecx]
	cmp	edx, 58					; 0000003aH
	jne	SHORT $LN26@process_lo

; 495  : 		{
; 496  : 			current_state = t_null;

	mov	DWORD PTR _current_state$[ebp], 0

; 497  : 
; 498  : 			for (loop = 0; token_str[loop].str; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN25@process_lo
$LN24@process_lo:
	mov	eax, DWORD PTR _loop$[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$[ebp], eax
$LN25@process_lo:
	mov	ecx, DWORD PTR _loop$[ebp]
	cmp	DWORD PTR _token_str$[ebp+ecx*8], 0
	je	SHORT $LN23@process_lo

; 499  : 			{
; 500  : 				if (_stricmp (token_str[loop].str, &buffer[1]) == 0)

	mov	edx, 1
	shl	edx, 0
	lea	eax, DWORD PTR _buffer$[ebp+edx]
	push	eax
	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR _token_str$[ebp+ecx*8]
	push	edx
	call	__stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN22@process_lo

; 501  : 				{
; 502  : 					current_state = token_str[loop].token;

	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR _token_str$[ebp+eax*8+4]
	mov	DWORD PTR _current_state$[ebp], ecx

; 503  : 					break;

	jmp	SHORT $LN23@process_lo
$LN22@process_lo:

; 504  : 				}
; 505  : 			}

	jmp	SHORT $LN24@process_lo
$LN23@process_lo:

; 506  : 		}
; 507  : 		else if (buffer[0] != '\0')		// Otherwise, do we have something to set this state's value to.

	jmp	$LN21@process_lo
$LN26@process_lo:
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buffer$[ebp+edx]
	test	eax, eax
	je	$LN21@process_lo

; 508  : 		{
; 509  : 			switch (current_state)

	mov	ecx, DWORD PTR _current_state$[ebp]
	mov	DWORD PTR tv200[ebp], ecx
	mov	edx, DWORD PTR tv200[ebp]
	sub	edx, 1
	mov	DWORD PTR tv200[ebp], edx
	cmp	DWORD PTR tv200[ebp], 8
	ja	$LN21@process_lo
	mov	eax, DWORD PTR tv200[ebp]
	jmp	DWORD PTR $LN43@process_lo[eax*4]
$LN17@process_lo:

; 510  : 			{
; 511  : 				case t_type:
; 512  : 				{
; 513  : 					if (strnicmp (buffer, "Training", 8) == 0)

	push	8
	push	OFFSET ??_C@_08NCNOBOOK@Training?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN16@process_lo

; 514  : 					{
; 515  : 						TheCampaign.TE_type = tt_training;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 3
	jmp	$LN15@process_lo
$LN16@process_lo:

; 516  : 					}
; 517  : 					else if (strnicmp (buffer, "Engagement", 10) == 0)

	push	10					; 0000000aH
	push	OFFSET ??_C@_0L@KKGCIBKC@Engagement?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN14@process_lo

; 518  : 					{
; 519  : 						TheCampaign.TE_type = tt_engagement;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 1
	jmp	$LN15@process_lo
$LN14@process_lo:

; 520  : 					}
; 521  : 					else if (strnicmp (buffer, "Single", 6) == 0)

	push	6
	push	OFFSET ??_C@_06IGOBCGAJ@Single?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN12@process_lo

; 522  : 					{
; 523  : 						TheCampaign.TE_type = tt_single;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 2
	jmp	SHORT $LN15@process_lo
$LN12@process_lo:

; 524  : 					}
; 525  : 					else if (strnicmp (buffer, "Load", 4) == 0)

	push	4
	push	OFFSET ??_C@_04IPBPFFEL@Load?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN10@process_lo

; 526  : 					{
; 527  : 						//support old files
; 528  : 						TheCampaign.TE_type = tt_engagement;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+360, 1

; 529  : 					}
; 530  : 					else

	jmp	SHORT $LN15@process_lo
$LN10@process_lo:

; 531  : 					{
; 532  : 						MonoPrint ("Unknown Type: ");

	push	OFFSET ??_C@_0P@PCKGFACL@Unknown?5Type?3?5?$AA@
	call	_MonoPrint
	add	esp, 4

; 533  : 						MonoPrint (filename);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_MonoPrint
	add	esp, 4

; 534  : 						MonoPrint (" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	call	_MonoPrint
	add	esp, 4

; 535  : 						MonoPrint (buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_MonoPrint
	add	esp, 4

; 536  : 						MonoPrint ("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_MonoPrint
	add	esp, 4
$LN15@process_lo:

; 537  : 					}
; 538  : 
; 539  : 					break;

	jmp	$LN21@process_lo
$LN8@process_lo:

; 540  : 				}
; 541  : 
; 542  : 				case t_flags:
; 543  : 				{
; 544  : 					TheCampaign.TE_flags = atoi (buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, eax

; 545  : 					TheCampaign.TE_flags &= ~tf_start_paused; // Don't set the paused flag

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468
	and	eax, -9					; fffffff7H
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+468, eax

; 546  : 					break;

	jmp	$LN21@process_lo
$LN7@process_lo:

; 547  : 				}
; 548  : 
; 549  : 				case t_victory_condition:
; 550  : 				{
; 551  : 					setup_victory_condition (buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setup_victory_condition@tactical_mission@@QAEXPAD@Z ; tactical_mission::setup_victory_condition

; 552  : 					break;

	jmp	$LN21@process_lo
$LN6@process_lo:

; 553  : 				}
; 554  : 
; 555  : 				case t_points_required:
; 556  : 				{
; 557  : 					set_points_required (atoi (buffer));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set_points_required@tactical_mission@@QAEXH@Z ; tactical_mission::set_points_required

; 558  : 					break;

	jmp	$LN21@process_lo
$LN5@process_lo:

; 559  : 				}
; 560  : 
; 561  : 				case t_number_teams:
; 562  : 				{
; 563  : 					number_teams = atoi (buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 564  : 					break;

	jmp	$LN21@process_lo
$LN4@process_lo:

; 565  : 				}
; 566  : 
; 567  : 				case t_team_info:
; 568  : 				{
; 569  : 					sscanf (buffer, "%d %d %d", &team, &x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	lea	ecx, DWORD PTR _team$[ebp]
	push	ecx
	push	OFFSET ??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sscanf
	add	esp, 20					; 00000014H

; 570  : 
; 571  : 					number_aircraft[team] = x;

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx+eax*4+56], edx

; 572  : 					number_f16s[team] = y;

	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [ecx+eax*4+120], edx

; 573  : 					break;

	jmp	SHORT $LN21@process_lo
$LN3@process_lo:

; 574  : 				}
; 575  : 
; 576  : 				case t_team_name:
; 577  : 				{
; 578  : 					set_team_name (team, buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _team$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set_team_name@tactical_mission@@QAEXHPAD@Z ; tactical_mission::set_team_name

; 579  : 					break;

	jmp	SHORT $LN21@process_lo
$LN2@process_lo:

; 580  : 				}
; 581  : 
; 582  : 				case t_team_flag:
; 583  : 				{
; 584  : 					set_team_flag (team, atoi (buffer));

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set_team_flag@tactical_mission@@QAEXHH@Z ; tactical_mission::set_team_flag
$LN21@process_lo:

; 585  : 					break;
; 586  : 				}
; 587  : 
; 588  : 				default:
; 589  : 				{
; 590  : 					break;
; 591  : 				}
; 592  : 			}
; 593  : 		}
; 594  : 	}

	jmp	$LN38@process_lo
$LN40@process_lo:

; 595  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN43@process_lo:
	DD	$LN17@process_lo
	DD	$LN21@process_lo
	DD	$LN7@process_lo
	DD	$LN8@process_lo
	DD	$LN6@process_lo
	DD	$LN5@process_lo
	DD	$LN4@process_lo
	DD	$LN3@process_lo
	DD	$LN2@process_lo
?process_load@tactical_mission@@AAEXPADHH@Z ENDP	; tactical_mission::process_load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\taceng\tac_class.cpp
_TEXT	SEGMENT
_this$ = -252						; size = 4
$T1 = -248						; size = 4
$T2 = -244						; size = 4
$T3 = -240						; size = 4
_num_files$ = -236					; size = 4
_ext$ = -232						; size = 4
_offset$ = -228						; size = 4
_str_len$ = -224					; size = 4
_dst$ = -220						; size = 4
_src$ = -216						; size = 4
_ptr$ = -212						; size = 4
_fp$ = -208						; size = 4
_name$ = -204						; size = 100
_te_filename$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_size$ = 12						; size = 4
?read_te_file@tactical_mission@@AAEPADPADPAH@Z PROC	; tactical_mission::read_te_file
; _this$ = ecx

; 602  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 603  : 	FILE
; 604  : 		*fp;
; 605  : 
; 606  : 	int
; 607  : 		str_len,
; 608  : 		num_files,
; 609  : 		offset;
; 610  : 
; 611  : 	char
; 612  : 		name[100],
; 613  : 		te_filename[100],
; 614  : 		*ext,
; 615  : 		*src,
; 616  : 		*dst,
; 617  : 		*ptr;
; 618  : 
; 619  : 	ptr = filename;

	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 620  : 	ext = ptr;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _ext$[ebp], ecx

; 621  : 	dst = te_filename;

	lea	edx, DWORD PTR _te_filename$[ebp]
	mov	DWORD PTR _dst$[ebp], edx

; 622  : 	src = NULL;

	mov	DWORD PTR _src$[ebp], 0
$LN14@read_te_fi:

; 623  : 
; 624  : 	while (*ptr)

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN13@read_te_fi

; 625  : 	{
; 626  : 		*dst ++ = *ptr;

	mov	edx, DWORD PTR _dst$[ebp]
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dst$[ebp]
	add	edx, 1
	mov	DWORD PTR _dst$[ebp], edx

; 627  : 
; 628  : 		if (*ptr == '.')

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN12@read_te_fi

; 629  : 		{
; 630  : 			src = dst;

	mov	edx, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _src$[ebp], edx

; 631  : 			ext = ptr + 1;

	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ext$[ebp], eax
$LN12@read_te_fi:

; 632  : 		}
; 633  : 
; 634  : 		if (*ptr == '\\')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN11@read_te_fi

; 635  : 		{
; 636  : 			dst = te_filename;

	lea	eax, DWORD PTR _te_filename$[ebp]
	mov	DWORD PTR _dst$[ebp], eax

; 637  : 			src = NULL;

	mov	DWORD PTR _src$[ebp], 0
$LN11@read_te_fi:

; 638  : 		}
; 639  : 
; 640  : 		ptr ++;

	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$[ebp], ecx

; 641  : 	}

	jmp	$LN14@read_te_fi
$LN13@read_te_fi:

; 642  : 
; 643  : 	*dst = '\0';

	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], 0

; 644  : 
; 645  : 	if (src)

	cmp	DWORD PTR _src$[ebp], 0
	je	SHORT $LN10@read_te_fi

; 646  : 	{
; 647  : 		*src ++ = 't';

	mov	eax, DWORD PTR _src$[ebp]
	mov	BYTE PTR [eax], 116			; 00000074H
	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 1
	mov	DWORD PTR _src$[ebp], ecx

; 648  : 		*src ++ = 'e';

	mov	edx, DWORD PTR _src$[ebp]
	mov	BYTE PTR [edx], 101			; 00000065H
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax

; 649  : 		*src ++ = '\0';

	mov	ecx, DWORD PTR _src$[ebp]
	mov	BYTE PTR [ecx], 0
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 1
	mov	DWORD PTR _src$[ebp], edx
$LN10@read_te_fi:

; 650  : 	}
; 651  : 	
; 652  : 	if ((stricmp (ext, "tac") == 0) || (stricmp (ext, "trn") == 0))

	push	OFFSET ??_C@_03DNCDIOFL@tac?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@read_te_fi
	push	OFFSET ??_C@_03JGONONDP@trn?$AA@
	mov	ecx, DWORD PTR _ext$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN9@read_te_fi
$LN8@read_te_fi:

; 653  : 	{
; 654  : 		//MonoPrint ("Extracting TE File from %s\n", filename);
; 655  : 
; 656  : 		fp = fopen (filename, "rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 657  : 
; 658  : 		if (fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN7@read_te_fi

; 659  : 		{
; 660  : 			fread (&offset, 4, 1, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 661  : 
; 662  : 			fseek (fp, offset, 0);

	push	0
	mov	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 663  : 
; 664  : 			fread (&num_files, 4, 1, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	push	4
	lea	edx, DWORD PTR _num_files$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H
$LN6@read_te_fi:

; 665  : 
; 666  : 			while (num_files)

	cmp	DWORD PTR _num_files$[ebp], 0
	je	$LN7@read_te_fi

; 667  : 			{
; 668  : 				fread (&str_len, 1, 1, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	1
	lea	ecx, DWORD PTR _str_len$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 669  : 				str_len &= 0xff;

	mov	edx, DWORD PTR _str_len$[ebp]
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _str_len$[ebp], edx

; 670  : 
; 671  : 				fread (name, str_len, 1, fp);\

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _str_len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 672  : 				name[str_len] = '\0';

	mov	eax, DWORD PTR _str_len$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 100			; 00000064H
	jae	SHORT $LN17@read_te_fi
	jmp	SHORT $LN18@read_te_fi
$LN17@read_te_fi:
	call	___report_rangecheckfailure
$LN18@read_te_fi:
	mov	ecx, DWORD PTR $T3[ebp]
	mov	BYTE PTR _name$[ebp+ecx], 0

; 673  : 
; 674  : 				if (string_compare_extensions (name, te_filename) == 0)

	lea	edx, DWORD PTR _te_filename$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?string_compare_extensions@@YAHPAD0@Z	; string_compare_extensions
	add	esp, 8
	test	eax, eax
	jne	$LN4@read_te_fi

; 675  : 				{
; 676  : 					fread (&offset, 4, 1, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	push	4
	lea	edx, DWORD PTR _offset$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 677  : 					fread (size, 4, 1, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 678  : 
; 679  : 					fseek (fp, offset, 0);

	push	0
	mov	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 680  : 
; 681  : 					ptr = new char[*size];

	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 682  : 
; 683  : 					fread (ptr, *size, 1, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 684  : 
; 685  : 					fclose (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 686  : 
; 687  : 					return ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	jmp	$LN16@read_te_fi

; 688  : 				}
; 689  : 				else

	jmp	SHORT $LN3@read_te_fi
$LN4@read_te_fi:

; 690  : 				{
; 691  : 					fseek (fp, 8, 1); // seek relative

	push	1
	push	8
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
$LN3@read_te_fi:

; 692  : 				}
; 693  : 
; 694  : 				num_files --;

	mov	ecx, DWORD PTR _num_files$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _num_files$[ebp], ecx

; 695  : 			}

	jmp	$LN6@read_te_fi
$LN7@read_te_fi:

; 696  : 		}
; 697  : 
; 698  : 		return NULL;

	xor	eax, eax
	jmp	$LN16@read_te_fi

; 699  : 	}
; 700  : 	else

	jmp	$LN16@read_te_fi
$LN9@read_te_fi:

; 701  : 	{
; 702  : 		fp = fopen (filename, "rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 703  : 
; 704  : 		if (fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN1@read_te_fi

; 705  : 		{
; 706  : 			fseek (fp, 0, 2); // seek end

	push	2
	push	0
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 707  : 
; 708  : 			*size = ftell (fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_ftell
	add	esp, 4
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx], eax

; 709  : 
; 710  : 			fseek (fp, 0, 0); // seek start

	push	0
	push	0
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 711  : 
; 712  : 			ptr = new char[*size];

	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 713  : 
; 714  : 			fread (ptr, *size, 1, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 715  : 
; 716  : 			fclose (fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 717  : 
; 718  : 			return ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	jmp	SHORT $LN16@read_te_fi
$LN1@read_te_fi:

; 719  : 		}
; 720  : 
; 721  : 		return NULL;

	xor	eax, eax
$LN16@read_te_fi:

; 722  : 	}
; 723  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?read_te_file@tactical_mission@@AAEPADPADPAH@Z ENDP	; tactical_mission::read_te_file
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCreationIter@CampaignClass@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCreationIter@CampaignClass@@QAEJXZ PROC		; CampaignClass::GetCreationIter, COMDAT
; _this$ = ecx

; 215  : 	long GetCreationIter()			{ return(CreationRand); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+352]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCreationIter@CampaignClass@@QAEJXZ ENDP		; CampaignClass::GetCreationIter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCreatorIP@CampaignClass@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCreatorIP@CampaignClass@@QAEJXZ PROC		; CampaignClass::GetCreatorIP, COMDAT
; _this$ = ecx

; 213  : 	long GetCreatorIP()				{ return(CreatorIP); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+344]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCreatorIP@CampaignClass@@QAEJXZ ENDP		; CampaignClass::GetCreatorIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreationIter@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rand$ = 8						; size = 4
?SetCreationIter@CampaignClass@@QAEXJ@Z PROC		; CampaignClass::SetCreationIter, COMDAT
; _this$ = ecx

; 212  : 	void SetCreationIter(long rand) { CreationRand=rand; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rand$[ebp]
	mov	DWORD PTR [eax+352], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCreationIter@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreationIter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreationTime@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 4
?SetCreationTime@CampaignClass@@QAEXJ@Z PROC		; CampaignClass::SetCreationTime, COMDAT
; _this$ = ecx

; 211  : 	void SetCreationTime(long time) { CreationTime=time; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _time$[ebp]
	mov	DWORD PTR [eax+348], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCreationTime@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreationTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreatorIP@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ip$ = 8						; size = 4
?SetCreatorIP@CampaignClass@@QAEXJ@Z PROC		; CampaignClass::SetCreatorIP, COMDAT
; _this$ = ecx

; 210  : 	void SetCreatorIP(long ip)		{ CreatorIP=ip; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ip$[ebp]
	mov	DWORD PTR [eax+344], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCreatorIP@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreatorIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetTETimeLimitTime@CampaignClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTETimeLimitTime@CampaignClass@@QAEKXZ PROC		; CampaignClass::GetTETimeLimitTime, COMDAT
; _this$ = ecx

; 162  : 	CampaignTime GetTETimeLimitTime (void)					{ return TE_TimeLimit; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTETimeLimitTime@CampaignClass@@QAEKXZ ENDP		; CampaignClass::GetTETimeLimitTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCampaignTime@CampaignClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignTime@CampaignClass@@QAEKXZ PROC		; CampaignClass::GetCampaignTime, COMDAT
; _this$ = ecx

; 160  : 	CampaignTime GetCampaignTime (void)						{ return CurrentTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignTime@CampaignClass@@QAEKXZ ENDP		; CampaignClass::GetCampaignTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cvictory.h
;	COMDAT ?SetOwner@C_Victory@@QAEXPAVTREELIST@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_limb$ = 8						; size = 4
?SetOwner@C_Victory@@QAEXPAVTREELIST@@@Z PROC		; C_Victory::SetOwner, COMDAT
; _this$ = ecx

; 51   : 		void SetOwner(TREELIST *limb)					{ Owner_=limb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limb$[ebp]
	mov	DWORD PTR [eax+160], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@C_Victory@@QAEXPAVTREELIST@@@Z ENDP		; C_Victory::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetParent@C_Base@@QAEXPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_win$ = 8						; size = 4
?SetParent@C_Base@@QAEXPAVC_Window@@@Z PROC		; C_Base::SetParent, COMDAT
; _this$ = ecx

; 115  : 		void SetParent(C_Window *win)							{ Parent_=win; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParent@C_Base@@QAEXPAVC_Window@@@Z ENDP		; C_Base::SetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
