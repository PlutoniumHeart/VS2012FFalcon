; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\Src\UI_Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?TestString1@@3PAEA				; TestString1
PUBLIC	?TestString2@@3PAEA				; TestString2
PUBLIC	?TestString3@@3PAEA				; TestString3
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?IntList@@3PAUINTER_MUSIC@@A			; IntList
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?gMainHandler@@3PAVC_Handler@@A			; gMainHandler
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?gCursors@@3PAPAUHICON__@@A			; gCursors
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?gUI_AutoSaveName@@3PADA			; gUI_AutoSaveName
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?gMoviePlaying@@3HA				; gMoviePlaying
PUBLIC	?gTrackBuffer@@3PADA				; gTrackBuffer
PUBLIC	?gMainParser@@3PAVC_Parser@@A			; gMainParser
PUBLIC	?UI_VuThread@@3PAVVuThread@@A			; UI_VuThread
PUBLIC	?MainLastGroup@@3HA				; MainLastGroup
PUBLIC	?CampaignLastGroup@@3HA				; CampaignLastGroup
PUBLIC	?AmbientStreamID@@3JA				; AmbientStreamID
PUBLIC	?IALoaded@@3HA					; IALoaded
PUBLIC	?ACMILoaded@@3HA				; ACMILoaded
PUBLIC	?DFLoaded@@3HA					; DFLoaded
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?TACLoaded@@3HA					; TACLoaded
PUBLIC	?CPLoaded@@3HA					; CPLoaded
PUBLIC	?CPSelectLoaded@@3HA				; CPSelectLoaded
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?LBLoaded@@3HA					; LBLoaded
PUBLIC	?STPLoaded@@3HA					; STPLoaded
PUBLIC	?COLoaded@@3HA					; COLoaded
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?MainLoaded@@3HA				; MainLoaded
PUBLIC	?PlannerLoaded@@3HA				; PlannerLoaded
PUBLIC	?TACREFLoaded@@3HA				; TACREFLoaded
PUBLIC	?CommonLoaded@@3HA				; CommonLoaded
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?INFOLoaded@@3HA				; INFOLoaded
PUBLIC	?HelpLoaded@@3HA				; HelpLoaded
PUBLIC	?TACSelLoaded@@3HA				; TACSelLoaded
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	??_C@_06OBGDHMHC@peterw?$AA@			; `string'
PUBLIC	??_C@_08HCMOKCOA@charlesw?$AA@			; `string'
PUBLIC	??_C@_04MDBEKDKF@joes?$AA@			; `string'
PUBLIC	??_C@_05FMNMHDEL@leonr?$AA@			; `string'
PUBLIC	??_C@_05EMBPLEPL@jakeh?$AA@			; `string'
PUBLIC	??_C@_06NFFNPLPM@jacobh?$AA@			; `string'
PUBLIC	??_C@_05KLAMLFPL@bills?$AA@			; `string'
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
_LastUIPlayed DD 01H DUP (?)
_MusicTypePlayed DW 01H DUP (?)
	ALIGN	4

_LastTypePlayed DW 01H DUP (?)
	ALIGN	4

?gMainHandler@@3PAVC_Handler@@A DD 01H DUP (?)		; gMainHandler
?gCursors@@3PAPAUHICON__@@A DD 01eH DUP (?)		; gCursors
?gUI_AutoSaveName@@3PADA DB 0104H DUP (?)		; gUI_AutoSaveName
?gMoviePlaying@@3HA DD 01H DUP (?)			; gMoviePlaying
?gTrackBuffer@@3PADA DB 040H DUP (?)			; gTrackBuffer
?gMainParser@@3PAVC_Parser@@A DD 01H DUP (?)		; gMainParser
?UI_VuThread@@3PAVVuThread@@A DD 01H DUP (?)		; UI_VuThread
?MainLastGroup@@3HA DD 01H DUP (?)			; MainLastGroup
?CampaignLastGroup@@3HA DD 01H DUP (?)			; CampaignLastGroup
?IALoaded@@3HA DD 01H DUP (?)				; IALoaded
?ACMILoaded@@3HA DD 01H DUP (?)				; ACMILoaded
?DFLoaded@@3HA DD 01H DUP (?)				; DFLoaded
?TACLoaded@@3HA DD 01H DUP (?)				; TACLoaded
?CPLoaded@@3HA DD 01H DUP (?)				; CPLoaded
?CPSelectLoaded@@3HA DD 01H DUP (?)			; CPSelectLoaded
?LBLoaded@@3HA DD 01H DUP (?)				; LBLoaded
?STPLoaded@@3HA DD 01H DUP (?)				; STPLoaded
?COLoaded@@3HA DD 01H DUP (?)				; COLoaded
?MainLoaded@@3HA DD 01H DUP (?)				; MainLoaded
?PlannerLoaded@@3HA DD 01H DUP (?)			; PlannerLoaded
?TACREFLoaded@@3HA DD 01H DUP (?)			; TACREFLoaded
?CommonLoaded@@3HA DD 01H DUP (?)			; CommonLoaded
?INFOLoaded@@3HA DD 01H DUP (?)				; INFOLoaded
?HelpLoaded@@3HA DD 01H DUP (?)				; HelpLoaded
?TACSelLoaded@@3HA DD 01H DUP (?)			; TACSelLoaded
_List3	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ??_C@_05KLAMLFPL@bills?$AA@
CONST	SEGMENT
??_C@_05KLAMLFPL@bills?$AA@ DB 'bills', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NFFNPLPM@jacobh?$AA@
CONST	SEGMENT
??_C@_06NFFNPLPM@jacobh?$AA@ DB 'jacobh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EMBPLEPL@jakeh?$AA@
CONST	SEGMENT
??_C@_05EMBPLEPL@jakeh?$AA@ DB 'jakeh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FMNMHDEL@leonr?$AA@
CONST	SEGMENT
??_C@_05FMNMHDEL@leonr?$AA@ DB 'leonr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MDBEKDKF@joes?$AA@
CONST	SEGMENT
??_C@_04MDBEKDKF@joes?$AA@ DB 'joes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HCMOKCOA@charlesw?$AA@
CONST	SEGMENT
??_C@_08HCMOKCOA@charlesw?$AA@ DB 'charlesw', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OBGDHMHC@peterw?$AA@
CONST	SEGMENT
??_C@_06OBGDHMHC@peterw?$AA@ DB 'peterw', 00H		; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
?TestString1@@3PAEA DB 0c0H				; TestString1
	DB	0c1H
	DB	0c2H
	DB	0c3H
	DB	0c4H
	DB	0c5H
	DB	0c6H
	DB	0c7H
	DB	0c8H
	DB	0c9H
	DB	0caH
	DB	0cbH
	DB	0ccH
	DB	0cdH
	DB	0ceH
	DB	0cfH
	DB	0cfH
	DB	0d1H
	DB	0d2H
	DB	0d3H
	DB	0d4H
	DB	0d5H
	DB	0d6H
	DB	00H
?TestString2@@3PAEA DB 0d7H				; TestString2
	DB	0d8H
	DB	0d9H
	DB	0daH
	DB	0dbH
	DB	0dcH
	DB	0ddH
	DB	0deH
	DB	0dfH
	DB	0e0H
	DB	0e1H
	DB	0e2H
	DB	0e3H
	DB	0e4H
	DB	0e5H
	DB	0e6H
	DB	0e7H
	DB	0e8H
	DB	0e9H
	DB	0eaH
	DB	0ebH
	DB	0ecH
	DB	0edH
	DB	00H
?TestString3@@3PAEA DB 0eeH				; TestString3
	DB	0efH
	DB	0f0H
	DB	0f1H
	DB	0f2H
	DB	0f3H
	DB	0f4H
	DB	0f5H
	DB	0f6H
	DB	0f7H
	DB	0f8H
	DB	0f9H
	DB	0faH
	DB	0fbH
	DB	0fcH
	DB	0fdH
	DB	0feH
	DB	0ffH
	DB	00H
	ORG $+5
?IntList@@3PAUINTER_MUSIC@@A DD 00H			; IntList
	DD	00H
	DD	0927c1H
	DD	00H
	DD	00H
	DD	0927c2H
	DD	00H
	DD	00H
	DD	0927c3H
	DD	00H
	DD	00H
	DD	0927c4H
	DD	00H
	DD	00H
	DD	0927c5H
	DD	00H
	DD	00H
	DD	0927c6H
	DD	00H
	DD	01H
	DD	0927c7H
	DD	00H
	DD	01H
	DD	0927c8H
	DD	00H
	DD	01H
	DD	0927c9H
	DD	00H
	DD	01H
	DD	0927caH
	DD	00H
	DD	01H
	DD	0927cbH
	DD	00H
	DD	01H
	DD	0927ccH
	DD	00H
	DD	02H
	DD	0927cdH
	DD	00H
	DD	02H
	DD	0927ceH
	DD	00H
	DD	02H
	DD	0927cfH
	DD	00H
	DD	02H
	DD	0927d0H
	DD	00H
	DD	02H
	DD	0927d1H
	DD	00H
	DD	02H
	DD	0927d2H
	DD	00H
	DD	03H
	DD	0927d3H
	DD	00H
	DD	03H
	DD	0927d4H
	DD	00H
	DD	03H
	DD	0927d5H
	DD	00H
	DD	03H
	DD	0927d6H
	DD	00H
	DD	03H
	DD	0927d7H
	DD	00H
	DD	03H
	DD	0927d8H
	DD	00H
	DD	04H
	DD	0927d9H
	DD	00H
	DD	04H
	DD	0927daH
	DD	00H
	DD	04H
	DD	0927dbH
	DD	00H
	DD	04H
	DD	0927dcH
	DD	00H
	DD	04H
	DD	0927ddH
	DD	00H
	DD	04H
	DD	0927deH
	DD	01H
	DD	00H
	DD	0927dfH
	DD	01H
	DD	00H
	DD	0927e0H
	DD	01H
	DD	00H
	DD	0927e1H
	DD	01H
	DD	00H
	DD	0927e2H
	DD	01H
	DD	00H
	DD	0927e3H
	DD	01H
	DD	00H
	DD	0927e4H
	DD	01H
	DD	00H
	DD	0927e5H
	DD	01H
	DD	00H
	DD	0927e6H
	DD	01H
	DD	00H
	DD	0927e7H
	DD	01H
	DD	00H
	DD	0927e8H
	DD	01H
	DD	00H
	DD	0927e9H
	DD	01H
	DD	00H
	DD	0927eaH
	DD	01H
	DD	00H
	DD	0927ebH
	DD	01H
	DD	00H
	DD	0927ecH
	DD	01H
	DD	00H
	DD	0927edH
	DD	01H
	DD	00H
	DD	0927eeH
	DD	01H
	DD	01H
	DD	0927efH
	DD	01H
	DD	01H
	DD	0927f0H
	DD	01H
	DD	01H
	DD	0927f1H
	DD	01H
	DD	01H
	DD	0927f2H
	DD	01H
	DD	01H
	DD	0927f3H
	DD	01H
	DD	01H
	DD	0927f4H
	DD	01H
	DD	02H
	DD	0927f5H
	DD	01H
	DD	02H
	DD	0927f6H
	DD	01H
	DD	02H
	DD	0927f7H
	DD	01H
	DD	02H
	DD	0927f8H
	DD	01H
	DD	02H
	DD	0927f9H
	DD	01H
	DD	02H
	DD	0927faH
	DD	01H
	DD	02H
	DD	0927fbH
	DD	01H
	DD	02H
	DD	0927fcH
	DD	01H
	DD	02H
	DD	0927fdH
	DD	01H
	DD	02H
	DD	0927feH
	DD	01H
	DD	02H
	DD	0927ffH
	DD	01H
	DD	02H
	DD	092800H
	DD	01H
	DD	02H
	DD	092801H
	DD	01H
	DD	03H
	DD	092802H
	DD	01H
	DD	03H
	DD	092803H
	DD	01H
	DD	03H
	DD	092804H
	DD	01H
	DD	03H
	DD	092805H
	DD	01H
	DD	03H
	DD	092806H
	DD	01H
	DD	03H
	DD	092807H
	DD	01H
	DD	04H
	DD	09280aH
	DD	01H
	DD	04H
	DD	09280bH
	DD	01H
	DD	04H
	DD	09280cH
	DD	01H
	DD	04H
	DD	09280dH
	DD	00H
	DD	00H
	DD	00H
?AmbientStreamID@@3JA DD 0ffffffffH			; AmbientStreamID
_List1	DD	FLAT:??_C@_06OBGDHMHC@peterw?$AA@
	DD	FLAT:??_C@_08HCMOKCOA@charlesw?$AA@
	DD	FLAT:??_C@_04MDBEKDKF@joes?$AA@
	DD	FLAT:??_C@_05FMNMHDEL@leonr?$AA@
	DD	00H
_List2	DD	FLAT:??_C@_05EMBPLEPL@jakeh?$AA@
	DD	FLAT:??_C@_06NFFNPLPM@jacobh?$AA@
	DD	FLAT:??_C@_05KLAMLFPL@bills?$AA@
	DD	00H
__cryptKey DB	'x~yz!#$%yeeour#$#$^1', 00H
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ ; DisplayDevice::GetImageBuffer
PUBLIC	?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ ; FalconDisplayConfiguration::GetImageBuffer
PUBLIC	?SetCheck@C_Hash@@QAEXJ@Z			; C_Hash::SetCheck
PUBLIC	??_GC_Resmgr@@QAEPAXI@Z				; C_Resmgr::`scalar deleting destructor'
PUBLIC	??_GC_Font@@QAEPAXI@Z				; C_Font::`scalar deleting destructor'
PUBLIC	?SetScreenFormat@C_Image@@QAEXFFF@Z		; C_Image::SetScreenFormat
PUBLIC	?SetColorKey@C_Image@@QAEXG@Z			; C_Image::SetColorKey
PUBLIC	??_GC_Image@@QAEPAXI@Z				; C_Image::`scalar deleting destructor'
PUBLIC	??_GC_Sound@@QAEPAXI@Z				; C_Sound::`scalar deleting destructor'
PUBLIC	??_GC_Animation@@QAEPAXI@Z			; C_Animation::`scalar deleting destructor'
PUBLIC	??_GC_String@@QAEPAXI@Z				; C_String::`scalar deleting destructor'
PUBLIC	?SetXY@C_Movie@@QAEXJJ@Z			; C_Movie::SetXY
PUBLIC	??_GC_Movie@@QAEPAXI@Z				; C_Movie::`scalar deleting destructor'
PUBLIC	??_GC_SoundBite@@QAEPAXI@Z			; C_SoundBite::`scalar deleting destructor'
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetParent@C_Base@@QAEPAVC_Window@@XZ		; C_Base::GetParent
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	??_GC_PopupMgr@@QAEPAXI@Z			; C_PopupMgr::`scalar deleting destructor'
PUBLIC	?SetCheck@C_Parser@@QAEXJ@Z			; C_Parser::SetCheck
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	??_GC_Parser@@QAEPAXI@Z				; C_Parser::`scalar deleting destructor'
PUBLIC	?GetX@C_Window@@QAEFXZ				; C_Window::GetX
PUBLIC	?GetY@C_Window@@QAEFXZ				; C_Window::GetY
PUBLIC	?Minimized@C_Window@@QAEHXZ			; C_Window::Minimized
PUBLIC	?SetSection@C_Handler@@QAEXJ@Z			; C_Handler::SetSection
PUBLIC	?SetEnableTime@C_Handler@@QAEXJ@Z		; C_Handler::SetEnableTime
PUBLIC	?SetDrawFlag@C_Handler@@QAEXJ@Z			; C_Handler::SetDrawFlag
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	??_GC_Handler@@QAEPAXI@Z			; C_Handler::`scalar deleting destructor'
PUBLIC	??_GC_Music@@QAEPAXI@Z				; C_Music::`scalar deleting destructor'
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?AceFactor@LogBookData@@QAEMXZ			; LogBookData::AceFactor
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	??_GPhoneBook@@QAEPAXI@Z			; PhoneBook::`scalar deleting destructor'
PUBLIC	?GetUserInfo@UIComms@@QAEPADXZ			; UIComms::GetUserInfo
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	??0CommsQueue@@QAE@XZ				; CommsQueue::CommsQueue
PUBLIC	??_GCommsQueue@@QAEPAXI@Z			; CommsQueue::`scalar deleting destructor'
PUBLIC	??_GC_Map@@QAEPAXI@Z				; C_Map::`scalar deleting destructor'
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	?GenericTimerCB@@YAXJFPAVC_Base@@@Z		; GenericTimerCB
PUBLIC	?HookupControls@@YAXJ@Z				; HookupControls
PUBLIC	?UI_Cleanup@@YAXXZ				; UI_Cleanup
PUBLIC	?CloseWindowCB@@YAXJFPAVC_Base@@@Z		; CloseWindowCB
PUBLIC	?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z	; OpenTacticalReferenceCB
PUBLIC	?TheaterButtonCB@@YAXJFPAVC_Base@@@Z		; TheaterButtonCB
PUBLIC	?GenericCloseWindowCB@@YAXJFPAVC_Base@@@Z	; GenericCloseWindowCB
PUBLIC	?CloseAllRenderers@@YAXJ@Z			; CloseAllRenderers
PUBLIC	?LeaveCurrentGame@@YAXXZ			; LeaveCurrentGame
PUBLIC	?LoadMainWindow@@YAXXZ				; LoadMainWindow
PUBLIC	?ExitCloseWindowCB@@YAXJFPAVC_Base@@@Z		; ExitCloseWindowCB
PUBLIC	?MinMaxWindowCB@@YAXJFPAVC_Base@@@Z		; MinMaxWindowCB
PUBLIC	?StartUITracking@@YAXXZ				; StartUITracking
PUBLIC	?DisableScenarioInfo@@YAXXZ			; DisableScenarioInfo
PUBLIC	?EnableScenarioInfo@@YAXJ@Z			; EnableScenarioInfo
PUBLIC	?OpenMainCampaignCB@@YAXJFPAVC_Base@@@Z		; OpenMainCampaignCB
PUBLIC	?OpenCommsCB@@YAXJFPAVC_Base@@@Z		; OpenCommsCB
PUBLIC	?OpenSetupCB@@YAXJFPAVC_Base@@@Z		; OpenSetupCB
PUBLIC	?OpenFontToolCB@@YAXJFPAVC_Base@@@Z		; OpenFontToolCB
PUBLIC	?InfoGroupCB@@YAXJFPAVC_Base@@@Z		; InfoGroupCB
PUBLIC	?GlobalSetup@@YAXXZ				; GlobalSetup
PUBLIC	?SetStartupFlags@@YAXXZ				; SetStartupFlags
PUBLIC	?StartCommsQueue@@YAXXZ				; StartCommsQueue
PUBLIC	?UI_UpdateVU@@YAXXZ				; UI_UpdateVU
PUBLIC	?PlayUIMusic@@YAXXZ				; PlayUIMusic
PUBLIC	?PlayCampaignMusic@@YAXXZ			; PlayCampaignMusic
PUBLIC	?PlayThatFunkyMusicWhiteBoy@@YAXXZ		; PlayThatFunkyMusicWhiteBoy
PUBLIC	?PlayUIMovie@@YAXJ@Z				; PlayUIMovie
PUBLIC	?UI_LoadSkyWeatherData@@YAXXZ			; UI_LoadSkyWeatherData
PUBLIC	?UI_Startup@@YAHXZ				; UI_Startup
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0N@OLFHAIAG@main_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@KGBPKMDG@main_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@DLCJGOEB@main_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@BHDGKOIK@main_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_0BA@KCEJAGAJ@art?2pop_scf?4lst?$AA@	; `string'
PUBLIC	??_C@_0M@BKMKBOKO@resimgs?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@EMBDPKCD@images?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@EMKLLFLD@sounds?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@IPFKCFBH@strings?4lst?$AA@		; `string'
PUBLIC	??_C@_0BK@GLBPPJCB@OIR?5Art?2Menus?2strings?4lst?$AA@ ; `string'
PUBLIC	??_C@_0L@CFBEGEBG@movies?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@JJJGMAMN@userids?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@MNAGCLLA@fontids?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@FEILIJBL@imageids?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@MDKJFPLI@soundids?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@OFDKPBPI@textids?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@OBANJMOJ@movieids?4lst?$AA@		; `string'
PUBLIC	??_C@_0BF@KPBFLOPP@art?2fonts?2fontrc?4irc?$AA@	; `string'
PUBLIC	??_C@_0N@DJIGJIHN@phonebkn?4da2?$AA@		; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@40a00000
PUBLIC	__real@c0a00000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_stricmp:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	_rand:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuThread@@QAE@PAVVuMessageFilter@@H@Z:PROC	; VuThread::VuThread
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?GetColorMasks@ImageBuffer@@QAEXPAK00@Z:PROC	; ImageBuffer::GetColorMasks
EXTRN	?EnterMode@FalconDisplayConfiguration@@QAEXW4DisplayMode@1@HH@Z:PROC ; FalconDisplayConfiguration::EnterMode
EXTRN	?LeaveMode@FalconDisplayConfiguration@@QAEXXZ:PROC ; FalconDisplayConfiguration::LeaveMode
EXTRN	?DeviceDependentGraphicsSetup@@YAXPAVDisplayDevice@@@Z:PROC ; DeviceDependentGraphicsSetup
EXTRN	?DeviceDependentGraphicsCleanup@@YAXPAVDisplayDevice@@@Z:PROC ; DeviceDependentGraphicsCleanup
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	_F4HearVoices:PROC
EXTRN	?UI95_SetScreenColorInfo@@YAXKKK@Z:PROC		; UI95_SetScreenColorInfo
EXTRN	?UI95_GetScreenColorInfo@@YAXAAKAAG0101@Z:PROC	; UI95_GetScreenColorInfo
EXTRN	?UI95_RGB24Bit@@YAGK@Z:PROC			; UI95_RGB24Bit
EXTRN	??1C_Resmgr@@QAE@XZ:PROC			; C_Resmgr::~C_Resmgr
EXTRN	?Cleanup@C_Resmgr@@QAEXXZ:PROC			; C_Resmgr::Cleanup
EXTRN	??0C_Font@@QAE@XZ:PROC				; C_Font::C_Font
EXTRN	??1C_Font@@QAE@XZ:PROC				; C_Font::~C_Font
EXTRN	?Setup@C_Font@@QAEXPAVC_Handler@@@Z:PROC	; C_Font::Setup
EXTRN	?Cleanup@C_Font@@QAEXXZ:PROC			; C_Font::Cleanup
EXTRN	??0C_Image@@QAE@XZ:PROC				; C_Image::C_Image
EXTRN	??1C_Image@@QAE@XZ:PROC				; C_Image::~C_Image
EXTRN	?Setup@C_Image@@QAEXXZ:PROC			; C_Image::Setup
EXTRN	?Cleanup@C_Image@@QAEXXZ:PROC			; C_Image::Cleanup
EXTRN	?LoadImageA@C_Image@@QAEPAVC_Resmgr@@JPADFF@Z:PROC ; C_Image::LoadImageA
EXTRN	?RemoveImage@C_Image@@QAEHJ@Z:PROC		; C_Image::RemoveImage
EXTRN	??0C_Sound@@QAE@XZ:PROC				; C_Sound::C_Sound
EXTRN	??1C_Sound@@QAE@XZ:PROC				; C_Sound::~C_Sound
EXTRN	?Setup@C_Sound@@QAEXXZ:PROC			; C_Sound::Setup
EXTRN	?Cleanup@C_Sound@@QAEXXZ:PROC			; C_Sound::Cleanup
EXTRN	?SetFlags@C_Sound@@QAEXJJ@Z:PROC		; C_Sound::SetFlags
EXTRN	?GetFlags@C_Sound@@QAEJJ@Z:PROC			; C_Sound::GetFlags
EXTRN	?SetAllVolumes@C_Sound@@QAEXJ@Z:PROC		; C_Sound::SetAllVolumes
EXTRN	??0C_Animation@@QAE@XZ:PROC			; C_Animation::C_Animation
EXTRN	??1C_Animation@@QAE@XZ:PROC			; C_Animation::~C_Animation
EXTRN	?Setup@C_Animation@@QAEXXZ:PROC			; C_Animation::Setup
EXTRN	?Cleanup@C_Animation@@QAEXXZ:PROC		; C_Animation::Cleanup
EXTRN	??0C_String@@QAE@XZ:PROC			; C_String::C_String
EXTRN	??1C_String@@QAE@XZ:PROC			; C_String::~C_String
EXTRN	?Setup@C_String@@QAEXJ@Z:PROC			; C_String::Setup
EXTRN	?Cleanup@C_String@@QAEXXZ:PROC			; C_String::Cleanup
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	??0C_Movie@@QAE@XZ:PROC				; C_Movie::C_Movie
EXTRN	??1C_Movie@@QAE@XZ:PROC				; C_Movie::~C_Movie
EXTRN	?Setup@C_Movie@@QAEXXZ:PROC			; C_Movie::Setup
EXTRN	?Cleanup@C_Movie@@QAEXXZ:PROC			; C_Movie::Cleanup
EXTRN	?GetMovie@C_Movie@@QAEPAVMOVIE_RES@@J@Z:PROC	; C_Movie::GetMovie
EXTRN	?Play@C_Movie@@QAEHJ@Z:PROC			; C_Movie::Play
EXTRN	??1C_SoundBite@@QAE@XZ:PROC			; C_SoundBite::~C_SoundBite
EXTRN	?Cleanup@C_SoundBite@@QAEXXZ:PROC		; C_SoundBite::Cleanup
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?SetUserPtr@C_Base@@QAEXJPAX@Z:PROC		; C_Base::SetUserPtr
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?GetUserPtr@C_Base@@QAEPAXJ@Z:PROC		; C_Base::GetUserPtr
EXTRN	??0C_Button@@QAE@XZ:PROC			; C_Button::C_Button
EXTRN	?Setup@C_Button@@QAEXJFJJ@Z:PROC		; C_Button::Setup
EXTRN	?SetImage@C_Button@@QAEXFJ@Z:PROC		; C_Button::SetImage
EXTRN	?ClearImage@C_Button@@QAEXFJ@Z:PROC		; C_Button::ClearImage
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?SetFgColor@C_Button@@QAEXFK@Z:PROC		; C_Button::SetFgColor
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	??0C_PopupMgr@@QAE@XZ:PROC			; C_PopupMgr::C_PopupMgr
EXTRN	??1C_PopupMgr@@QAE@XZ:PROC			; C_PopupMgr::~C_PopupMgr
EXTRN	?Setup@C_PopupMgr@@QAEXPAVC_Handler@@@Z:PROC	; C_PopupMgr::Setup
EXTRN	?Cleanup@C_PopupMgr@@QAEXXZ:PROC		; C_PopupMgr::Cleanup
EXTRN	??0C_Parser@@QAE@XZ:PROC			; C_Parser::C_Parser
EXTRN	??1C_Parser@@QAE@XZ:PROC			; C_Parser::~C_Parser
EXTRN	?Setup@C_Parser@@QAEXPAVC_Handler@@PAVC_Image@@PAVC_Font@@PAVC_Sound@@PAVC_PopupMgr@@PAVC_Animation@@PAVC_String@@PAVC_Movie@@@Z:PROC ; C_Parser::Setup
EXTRN	?Cleanup@C_Parser@@QAEXXZ:PROC			; C_Parser::Cleanup
EXTRN	?LoadIDList@C_Parser@@QAEXPAD@Z:PROC		; C_Parser::LoadIDList
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadStringList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadStringList
EXTRN	?LoadMovieList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadMovieList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?LoadPopupMenuList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadPopupMenuList
EXTRN	?ParseFont@C_Parser@@QAEPAVC_Font@@PAD@Z:PROC	; C_Parser::ParseFont
EXTRN	?Minimize@C_Window@@QAEXXZ:PROC			; C_Window::Minimize
EXTRN	?Maximize@C_Window@@QAEXXZ:PROC			; C_Window::Maximize
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	??0C_Handler@@QAE@XZ:PROC			; C_Handler::C_Handler
EXTRN	??1C_Handler@@QAE@XZ:PROC			; C_Handler::~C_Handler
EXTRN	?EnterCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::EnterCritical
EXTRN	?LeaveCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::LeaveCritical
EXTRN	?Setup@C_Handler@@QAEXPAUHWND__@@PAVImageBuffer@@1@Z:PROC ; C_Handler::Setup
EXTRN	?StartTimerThread@C_Handler@@QAEXJ@Z:PROC	; C_Handler::StartTimerThread
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?Cleanup@C_Handler@@QAEXXZ:PROC			; C_Handler::Cleanup
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?GetWindowFlags@C_Handler@@QAEJJ@Z:PROC		; C_Handler::GetWindowFlags
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0C_Music@@QAE@XZ:PROC				; C_Music::C_Music
EXTRN	??1C_Music@@QAE@XZ:PROC				; C_Music::~C_Music
EXTRN	?Setup@C_Music@@QAEXPAVCSoundMgr@@@Z:PROC	; C_Music::Setup
EXTRN	?Cleanup@C_Music@@QAEXXZ:PROC			; C_Music::Cleanup
EXTRN	?FadeOut_Pause@C_Music@@QAEXXZ:PROC		; C_Music::FadeOut_Pause
EXTRN	?Resume@C_Music@@QAEXXZ:PROC			; C_Music::Resume
EXTRN	?SetVolume@C_Music@@QAEXJ@Z:PROC		; C_Music::SetVolume
EXTRN	?AddQ@C_Music@@QAEXJ@Z:PROC			; C_Music::AddQ
EXTRN	?PlayQ@C_Music@@QAEXXZ:PROC			; C_Music::PlayQ
EXTRN	?AddInteractiveMusic@C_Music@@QAEXJJJ@Z:PROC	; C_Music::AddInteractiveMusic
EXTRN	?StartInteractive@C_Music@@QAEXJJ@Z:PROC	; C_Music::StartInteractive
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z:PROC ; FalconMessageFilter::FalconMessageFilter
EXTRN	??1FalconMessageFilter@@UAE@XZ:PROC		; FalconMessageFilter::~FalconMessageFilter
EXTRN	?Initialize@LogBookData@@QAEXXZ:PROC		; LogBookData::Initialize
EXTRN	?SaveData@LogBookData@@QAEHXZ:PROC		; LogBookData::SaveData
EXTRN	?NameWRank@LogBookData@@QAEPADXZ:PROC		; LogBookData::NameWRank
EXTRN	?CheckPassword@LogBookData@@QAEHPAD@Z:PROC	; LogBookData::CheckPassword
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?SetPlayerName@FalconSessionEntity@@QAEXPAD@Z:PROC ; FalconSessionEntity::SetPlayerName
EXTRN	?SetPlayerCallsign@FalconSessionEntity@@QAEXPAD@Z:PROC ; FalconSessionEntity::SetPlayerCallsign
EXTRN	?SetAceFactor@FalconSessionEntity@@QAEXM@Z:PROC	; FalconSessionEntity::SetAceFactor
EXTRN	?SetInitAceFactor@FalconSessionEntity@@QAEXM@Z:PROC ; FalconSessionEntity::SetInitAceFactor
EXTRN	??0PhoneBook@@QAE@XZ:PROC			; PhoneBook::PhoneBook
EXTRN	??1PhoneBook@@QAE@XZ:PROC			; PhoneBook::~PhoneBook
EXTRN	?Setup@PhoneBook@@QAEXXZ:PROC			; PhoneBook::Setup
EXTRN	?Cleanup@PhoneBook@@QAEXXZ:PROC			; PhoneBook::Cleanup
EXTRN	?Load@PhoneBook@@QAEXPAD@Z:PROC			; PhoneBook::Load
EXTRN	?Save@PhoneBook@@QAEXPAD@Z:PROC			; PhoneBook::Save
EXTRN	?SetCallback@UIComms@@QAEXHP6AXFVVU_ID@@0@Z@Z:PROC ; UIComms::SetCallback
EXTRN	?StopComms@UIComms@@QAEXXZ:PROC			; UIComms::StopComms
EXTRN	??1CommsQueue@@QAE@XZ:PROC			; CommsQueue::~CommsQueue
EXTRN	?Setup@CommsQueue@@QAEXPAUHWND__@@@Z:PROC	; CommsQueue::Setup
EXTRN	?Cleanup@CommsQueue@@QAEXXZ:PROC		; CommsQueue::Cleanup
EXTRN	??1C_Map@@QAE@XZ:PROC				; C_Map::~C_Map
EXTRN	?Cleanup@C_Map@@QAEXXZ:PROC			; C_Map::Cleanup
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	?Initialize@PlayerOptionsClass@@QAEXXZ:PROC	; PlayerOptionsClass::Initialize
EXTRN	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::SaveOptions
EXTRN	?PostMissionEval@MissionEvaluationClass@@QAEHXZ:PROC ; MissionEvaluationClass::PostMissionEval
EXTRN	?Reset@PilotInputs@@QAEXXZ:PROC			; PilotInputs::Reset
EXTRN	?Initialize@DisplayOptionsClass@@QAEXXZ:PROC	; DisplayOptionsClass::Initialize
EXTRN	?CleanViewpoint@OTWDriverClass@@QAEXXZ:PROC	; OTWDriverClass::CleanViewpoint
EXTRN	?CleanupKeys@@YAXXZ:PROC			; CleanupKeys
EXTRN	?InitFontTool@@YAXXZ:PROC			; InitFontTool
EXTRN	?LoadHelpGuideWindows@@YAXXZ:PROC		; LoadHelpGuideWindows
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?LoadInstantActionWindows@@YAXXZ:PROC		; LoadInstantActionWindows
EXTRN	?LoadCampaignSelectWindows@@YAXXZ:PROC		; LoadCampaignSelectWindows
EXTRN	?LoadCampaignWindows@@YAXXZ:PROC		; LoadCampaignWindows
EXTRN	?ValidateRackData@@YAXXZ:PROC			; ValidateRackData
EXTRN	?LoadDogFightWindows@@YAXXZ:PROC		; LoadDogFightWindows
EXTRN	?LoadSetupWindows@@YAXXZ:PROC			; LoadSetupWindows
EXTRN	?LoadTacticalReferenceWindows@@YAXXZ:PROC	; LoadTacticalReferenceWindows
EXTRN	?LoadTacEngSelectWindows@@YAXXZ:PROC		; LoadTacEngSelectWindows
EXTRN	?LoadPeopleInfo@@YAXJ@Z:PROC			; LoadPeopleInfo
EXTRN	?LoadCommsWindows@@YAXXZ:PROC			; LoadCommsWindows
EXTRN	?CreateFontCB@@YAXJFPAVC_Base@@@Z:PROC		; CreateFontCB
EXTRN	?CreateTheFontCB@@YAXJFPAVC_Base@@@Z:PROC	; CreateTheFontCB
EXTRN	?SaveFontCB@@YAXJFPAVC_Base@@@Z:PROC		; SaveFontCB
EXTRN	?HookupDogFightMenus@@YAXXZ:PROC		; HookupDogFightMenus
EXTRN	?HookupCampaignMenus@@YAXXZ:PROC		; HookupCampaignMenus
EXTRN	?UIBuildColorTable@@YAXXZ:PROC			; UIBuildColorTable
EXTRN	?SetupMapWindow@@YAXXZ:PROC			; SetupMapWindow
EXTRN	?RealLoadLogbook@@YAXXZ:PROC			; RealLoadLogbook
EXTRN	?SelectScenarioCB@@YAXJFPAVC_Base@@@Z:PROC	; SelectScenarioCB
EXTRN	?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z:PROC	; SetCampaignSelectCB
EXTRN	?TacRef_Setup@@YAHXZ:PROC			; TacRef_Setup
EXTRN	?CampaignSetup@@YAXXZ:PROC			; CampaignSetup
EXTRN	?ShutdownSetup@@YAXXZ:PROC			; ShutdownSetup
EXTRN	?EndDogfightCB@@YAXJFPAVC_Base@@@Z:PROC		; EndDogfightCB
EXTRN	?LeaveDogfight@@YAXXZ:PROC			; LeaveDogfight
EXTRN	?ChooseFontCB@@YAXJFPAVC_Base@@@Z:PROC		; ChooseFontCB
EXTRN	?ExitVerify@@YAXJP6AXJFPAVC_Base@@@Z1@Z:PROC	; ExitVerify
EXTRN	?CheckPasswordCB@@YAXJFPAVC_Base@@@Z:PROC	; CheckPasswordCB
EXTRN	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC ; PasswordWindow
EXTRN	?NoPasswordCB@@YAXJFPAVC_Base@@@Z:PROC		; NoPasswordCB
EXTRN	?DoResultsWindows@@YAXXZ:PROC			; DoResultsWindows
EXTRN	?INFOSetupControls@@YAXXZ:PROC			; INFOSetupControls
EXTRN	?ACMIButtonCB@@YAXJFPAVC_Base@@@Z:PROC		; ACMIButtonCB
EXTRN	?IncreaseLead@@YAXJFPAVC_Base@@@Z:PROC		; IncreaseLead
EXTRN	?DecreaseLead@@YAXJFPAVC_Base@@@Z:PROC		; DecreaseLead
EXTRN	?IncreaseTrail@@YAXJFPAVC_Base@@@Z:PROC		; IncreaseTrail
EXTRN	?DecreaseTrail@@YAXJFPAVC_Base@@@Z:PROC		; DecreaseTrail
EXTRN	?IncreaseWidth@@YAXJFPAVC_Base@@@Z:PROC		; IncreaseWidth
EXTRN	?DecreaseWidth@@YAXJFPAVC_Base@@@Z:PROC		; DecreaseWidth
EXTRN	?IncreaseKern@@YAXJFPAVC_Base@@@Z:PROC		; IncreaseKern
EXTRN	?DecreaseKern@@YAXJFPAVC_Base@@@Z:PROC		; DecreaseKern
EXTRN	?RebuildGameTree@@YAXXZ:PROC			; RebuildGameTree
EXTRN	?ActivateCampMissionSchedule@@YAXXZ:PROC	; ActivateCampMissionSchedule
EXTRN	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; CloseReconWindowCB
EXTRN	?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z:PROC ; CloseMunitionsWindowCB
EXTRN	?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; CloseSetupWindowCB
EXTRN	?CloseACMI@@YAXXZ:PROC				; CloseACMI
EXTRN	?TACREFCloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; TACREFCloseWindowCB
EXTRN	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenLogBookCB
EXTRN	?restart_tactical_engagement@@YAXXZ:PROC	; restart_tactical_engagement
EXTRN	?GetCurrentTheater@TheaterList@@QAEPAUTheaterDef@@XZ:PROC ; TheaterList::GetCurrentTheater
EXTRN	?SetNewTheater@TheaterList@@QAE_NPAUTheaterDef@@@Z:PROC ; TheaterList::SetNewTheater
EXTRN	?GetTheater@TheaterList@@QAEPAUTheaterDef@@H@Z:PROC ; TheaterList::GetTheater
EXTRN	?FileNameSortCB@@YAHPAVTREELIST@@0@Z:PROC	; FileNameSortCB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; vuCritical
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?gFontList@@3PAVC_Font@@A:DWORD			; gFontList
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gSoundMgr@@3PAVC_Sound@@A:DWORD		; gSoundMgr
EXTRN	?gAnimMgr@@3PAVC_Animation@@A:DWORD		; gAnimMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gMovieMgr@@3PAVC_Movie@@A:DWORD		; gMovieMgr
EXTRN	?gPopupMgr@@3PAVC_PopupMgr@@A:DWORD		; gPopupMgr
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?gSoundDriver@@3PAVCSoundMgr@@A:DWORD		; gSoundDriver
EXTRN	?gMusic@@3PAVC_Music@@A:DWORD			; gMusic
EXTRN	?RuleMode@@3W4RulesModes@@A:DWORD		; RuleMode
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?UI_logbk@@3VLogBookData@@A:BYTE		; UI_logbk
EXTRN	?gUI_Tracking_Flag@@3KA:DWORD			; gUI_Tracking_Flag
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?gUICommsQ@@3PAVCommsQueue@@A:DWORD		; gUICommsQ
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?gUIViewer@@3PAVC_3dViewer@@A:DWORD		; gUIViewer
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?UserStickInputs@@3VPilotInputs@@A:BYTE		; UserStickInputs
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?g_bHiResUI@@3_NA:BYTE				; g_bHiResUI
EXTRN	?g_intellivibeData@@3VIntellivibeData@@A:BYTE	; g_intellivibeData
EXTRN	?gSharedIntellivibe@@3PAXA:DWORD		; gSharedIntellivibe
EXTRN	?gNewMessage@@3HA:DWORD				; gNewMessage
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	?gOccupationMap@@3PAVIMAGE_RSC@@A:DWORD		; gOccupationMap
EXTRN	?gUBuffer@@3PADA:DWORD				; gUBuffer
EXTRN	?gScreenShotBuffer@@3PAGA:DWORD			; gScreenShotBuffer
EXTRN	?gScreenShotEnabled@@3JA:DWORD			; gScreenShotEnabled
EXTRN	?MusicStopped@@3JA:DWORD			; MusicStopped
EXTRN	?hInst@@3PAUHINSTANCE__@@A:DWORD		; hInst
EXTRN	?KeyDescrips@@3PAPADA:DWORD			; KeyDescrips
EXTRN	?gPlayerBook@@3PAVPhoneBook@@A:DWORD		; gPlayerBook
EXTRN	?People@@3PAVC_TreeList@@A:DWORD		; People
EXTRN	?DogfightGames@@3PAVC_TreeList@@A:DWORD		; DogfightGames
EXTRN	?TacticalGames@@3PAVC_TreeList@@A:DWORD		; TacticalGames
EXTRN	?CampaignGames@@3PAVC_TreeList@@A:DWORD		; CampaignGames
EXTRN	?gInstantBites@@3PAVC_SoundBite@@A:DWORD	; gInstantBites
EXTRN	?gDogfightBites@@3PAVC_SoundBite@@A:DWORD	; gDogfightBites
EXTRN	?gCampaignBites@@3PAVC_SoundBite@@A:DWORD	; gCampaignBites
EXTRN	?LogState@@3HA:DWORD				; LogState
EXTRN	?g_theaters@@3VTheaterList@@A:QWORD		; g_theaters
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJIGJIHN@phonebkn?4da2?$AA@
CONST	SEGMENT
??_C@_0N@DJIGJIHN@phonebkn?4da2?$AA@ DB 'phonebkn.da2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KPBFLOPP@art?2fonts?2fontrc?4irc?$AA@
CONST	SEGMENT
??_C@_0BF@KPBFLOPP@art?2fonts?2fontrc?4irc?$AA@ DB 'art\fonts\fontrc.irc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBANJMOJ@movieids?4lst?$AA@
CONST	SEGMENT
??_C@_0N@OBANJMOJ@movieids?4lst?$AA@ DB 'movieids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OFDKPBPI@textids?4lst?$AA@
CONST	SEGMENT
??_C@_0M@OFDKPBPI@textids?4lst?$AA@ DB 'textids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDKJFPLI@soundids?4lst?$AA@
CONST	SEGMENT
??_C@_0N@MDKJFPLI@soundids?4lst?$AA@ DB 'soundids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEILIJBL@imageids?4lst?$AA@
CONST	SEGMENT
??_C@_0N@FEILIJBL@imageids?4lst?$AA@ DB 'imageids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNAGCLLA@fontids?4lst?$AA@
CONST	SEGMENT
??_C@_0M@MNAGCLLA@fontids?4lst?$AA@ DB 'fontids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JJJGMAMN@userids?4lst?$AA@
CONST	SEGMENT
??_C@_0M@JJJGMAMN@userids?4lst?$AA@ DB 'userids.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CFBEGEBG@movies?4lst?$AA@
CONST	SEGMENT
??_C@_0L@CFBEGEBG@movies?4lst?$AA@ DB 'movies.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GLBPPJCB@OIR?5Art?2Menus?2strings?4lst?$AA@
CONST	SEGMENT
??_C@_0BK@GLBPPJCB@OIR?5Art?2Menus?2strings?4lst?$AA@ DB 'OIR Art\Menus\s'
	DB	'trings.lst', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPFKCFBH@strings?4lst?$AA@
CONST	SEGMENT
??_C@_0M@IPFKCFBH@strings?4lst?$AA@ DB 'strings.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMKLLFLD@sounds?4lst?$AA@
CONST	SEGMENT
??_C@_0L@EMKLLFLD@sounds?4lst?$AA@ DB 'sounds.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMBDPKCD@images?4lst?$AA@
CONST	SEGMENT
??_C@_0L@EMBDPKCD@images?4lst?$AA@ DB 'images.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKMKBOKO@resimgs?4lst?$AA@
CONST	SEGMENT
??_C@_0M@BKMKBOKO@resimgs?4lst?$AA@ DB 'resimgs.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KCEJAGAJ@art?2pop_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0BA@KCEJAGAJ@art?2pop_scf?4lst?$AA@ DB 'art\pop_scf.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BHDGKOIK@main_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0N@BHDGKOIK@main_scf?4lst?$AA@ DB 'main_scf.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLCJGOEB@main_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0N@DLCJGOEB@main_snd?4lst?$AA@ DB 'main_snd.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGBPKMDG@main_art?4lst?$AA@
CONST	SEGMENT
??_C@_0N@KGBPKMDG@main_art?4lst?$AA@ DB 'main_art.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OLFHAIAG@main_res?4lst?$AA@
CONST	SEGMENT
??_C@_0N@OLFHAIAG@main_res?4lst?$AA@ DB 'main_res.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?FillTheaterTree@@YAXPAVC_TreeList@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FillTheaterTree@@YAXPAVC_TreeList@@@Z$0
__unwindtable$?StartCommsQueue@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartCommsQueue@@YAXXZ$0
__ehfuncinfo$?FillTheaterTree@@YAXPAVC_TreeList@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FillTheaterTree@@YAXPAVC_TreeList@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UI_Startup@@YAHXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?UI_Startup@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?StartCommsQueue@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartCommsQueue@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GlobalSetup@@YAXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?GlobalSetup@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?UI_Startup@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UI_Startup@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UI_Startup@@YAHXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UI_Startup@@YAHXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?UI_Startup@@YAHXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?UI_Startup@@YAHXZ$4
__unwindtable$?GlobalSetup@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GlobalSetup@@YAXXZ$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_tree$ = -4						; size = 4
_win$ = 8						; size = 4
?LoadAllTheaters@@YAXPAVC_Window@@@Z PROC		; LoadAllTheaters

; 2107 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2108 :     C_TreeList *tree=(C_TreeList *)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 2109 :     if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN2@LoadAllThe

; 2110 :     {
; 2111 : 	tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 2112 : 	tree->SetUserNumber(0,1);

	push	1
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2113 : 	tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 2114 : 	tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 2115 : 	tree->SetCallback(TheaterLoadCB);

	push	OFFSET ?TheaterLoadCB@@YAXJFPAVC_Base@@@Z ; TheaterLoadCB
	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2116 : 	FillTheaterTree(tree);

	mov	ecx, DWORD PTR _tree$[ebp]
	push	ecx
	call	?FillTheaterTree@@YAXPAVC_TreeList@@@Z	; FillTheaterTree
	add	esp, 4

; 2117 : 	tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2118 : 	win->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@LoadAllThe:

; 2119 :     }
; 2120 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadAllTheaters@@YAXPAVC_Window@@@Z ENDP		; LoadAllTheaters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_cthr$ = -52						; size = 4
tv225 = -48						; size = 4
$T2 = -44						; size = 4
_item$ = -40						; size = 4
tv87 = -36						; size = 4
$T3 = -32						; size = 4
_i$4 = -28						; size = 4
_td$ = -24						; size = 4
_UniqueID$ = -20					; size = 4
_btn$5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_tree$ = 8						; size = 4
?FillTheaterTree@@YAXPAVC_TreeList@@@Z PROC		; FillTheaterTree

; 2041 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FillTheaterTree@@YAXPAVC_TreeList@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2042 :     TheaterDef *td;
; 2043 :     long UniqueID=tree->GetUserNumber(0);

	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _UniqueID$[ebp], eax

; 2044 :     TREELIST *item;
; 2045 :     TheaterDef *cthr = g_theaters.GetCurrentTheater();

	mov	ecx, OFFSET ?g_theaters@@3VTheaterList@@A ; g_theaters
	call	?GetCurrentTheater@TheaterList@@QAEPAUTheaterDef@@XZ ; TheaterList::GetCurrentTheater
	mov	DWORD PTR _cthr$[ebp], eax

; 2046 : 
; 2047 :     if(!UniqueID)

	cmp	DWORD PTR _UniqueID$[ebp], 0
	jne	SHORT $LN7@FillTheate

; 2048 : 	UniqueID++;

	mov	eax, DWORD PTR _UniqueID$[ebp]
	add	eax, 1
	mov	DWORD PTR _UniqueID$[ebp], eax
$LN7@FillTheate:

; 2049 :     for(int i = 0; td = g_theaters.GetTheater(i); i++) {

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN6@FillTheate
$LN5@FillTheate:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN6@FillTheate:
	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	mov	ecx, OFFSET ?g_theaters@@3VTheaterList@@A ; g_theaters
	call	?GetTheater@TheaterList@@QAEPAUTheaterDef@@H@Z ; TheaterList::GetTheater
	mov	DWORD PTR _td$[ebp], eax
	cmp	DWORD PTR _td$[ebp], 0
	je	$LN4@FillTheate

; 2050 : 	C_Button *btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN10@FillTheate
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN11@FillTheate
$LN10@FillTheate:
	mov	DWORD PTR tv87[ebp], 0
$LN11@FillTheate:
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$5[ebp], ecx

; 2051 : 	if(btn)

	cmp	DWORD PTR _btn$5[ebp], 0
	je	$LN3@FillTheate

; 2052 : 	{
; 2053 : 	    btn->Setup(UniqueID,C_TYPE_CUSTOM,0,0);

	push	0
	push	0
	push	29					; 0000001dH
	mov	edx, DWORD PTR _UniqueID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 2054 : 	    btn->SetFont(tree->GetFont());

	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2055 : 	    btn->SetText(C_STATE_0,td->m_name);

	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 2056 : 	    btn->SetText(C_STATE_1,td->m_name);

	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 2057 : 	    btn->SetText(C_STATE_DISABLED,td->m_name);

	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 2058 : 	    btn->SetFgColor(C_STATE_0,0xcccccc);

	push	13421772				; 00ccccccH
	push	0
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 2059 : 	    btn->SetFgColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 2060 : 	    btn->SetFgColor(C_STATE_DISABLED,0x808080);

	push	8421504					; 00808080H
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 2061 : 	    btn->SetUserNumber(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2062 : 	    btn->SetCursorID(tree->GetCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 2063 : 	    btn->SetDragCursorID(tree->GetDragCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax

; 2064 : 	    btn->SetMenu(0);

	push	0
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 2065 : 	    btn->SetUserNumber(C_STATE_0, i);

	mov	ecx, DWORD PTR _i$4[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$5[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2066 : 
; 2067 : 	    item=tree->CreateItem(UniqueID++,C_TYPE_ITEM,btn);

	mov	edx, DWORD PTR _UniqueID$[ebp]
	mov	DWORD PTR tv225[ebp], edx
	mov	eax, DWORD PTR _btn$5[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR tv225[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax
	mov	edx, DWORD PTR _UniqueID$[ebp]
	add	edx, 1
	mov	DWORD PTR _UniqueID$[ebp], edx

; 2068 : 	    if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN2@FillTheate

; 2069 : 		tree->AddItem(tree->GetRoot(),item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN2@FillTheate:

; 2070 : 	    if (cthr == td) {

	mov	ecx, DWORD PTR _cthr$[ebp]
	cmp	ecx, DWORD PTR _td$[ebp]
	jne	SHORT $LN3@FillTheate

; 2071 : 		btn->SetState(1);

	push	1
	mov	edx, DWORD PTR _btn$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$5[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 2072 : 		SelectTheater(td);

	mov	eax, DWORD PTR _td$[ebp]
	push	eax
	call	?SelectTheater@@YAXPAUTheaterDef@@@Z	; SelectTheater
	add	esp, 4
$LN3@FillTheate:

; 2073 : 	    }
; 2074 : 	}
; 2075 :     }

	jmp	$LN5@FillTheate
$LN4@FillTheate:

; 2076 :     tree->SetUserNumber(0,UniqueID);

	mov	ecx, DWORD PTR _UniqueID$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2077 : 
; 2078 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FillTheaterTree@@YAXPAVC_TreeList@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FillTheaterTree@@YAXPAVC_TreeList@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FillTheaterTree@@YAXPAVC_TreeList@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FillTheaterTree@@YAXPAVC_TreeList@@@Z ENDP		; FillTheaterTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_ctrl$ = -4						; size = 4
_win$ = 8						; size = 4
?LoadTheaterWindows@@YAXPAVC_Window@@@Z PROC		; LoadTheaterWindows

; 2026 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2027 :     C_Button *ctrl;
; 2028 :     ctrl=(C_Button*)win->FindControl(UI_THEATER_BACK);

	push	300102					; 00049446H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2029 :     if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@LoadTheate

; 2030 : 	ctrl->SetCallback(TheaterCancelCB);

	push	OFFSET ?TheaterCancelCB@@YAXJFPAVC_Base@@@Z ; TheaterCancelCB
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@LoadTheate:

; 2031 :     ctrl = (C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2032 :     if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@LoadTheate

; 2033 : 	ctrl->SetCallback(TheaterCancelCB);

	push	OFFSET ?TheaterCancelCB@@YAXJFPAVC_Base@@@Z ; TheaterCancelCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@LoadTheate:

; 2034 :     ctrl = (C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 2035 :     if (ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@LoadTheate

; 2036 : 	ctrl->SetCallback(TheaterBackCB);

	push	OFFSET ?TheaterBackCB@@YAXJFPAVC_Base@@@Z ; TheaterBackCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@LoadTheate:

; 2037 : 
; 2038 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTheaterWindows@@YAXPAVC_Window@@@Z ENDP		; LoadTheaterWindows
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_n$1 = -20						; size = 4
_td$2 = -16						; size = 4
_item$ = -12						; size = 4
_btn$ = -8						; size = 4
_tree$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TheaterLoadCB@@YAXJFPAVC_Base@@@Z PROC			; TheaterLoadCB

; 1997 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1998 :     C_TreeList *tree;
; 1999 :     TREELIST *item;
; 2000 :     C_Button   *btn;
; 2001 :     
; 2002 :     if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@TheaterLoa

; 2003 : 	return;

	jmp	$LN5@TheaterLoa
$LN4@TheaterLoa:

; 2004 :     
; 2005 :     tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 2006 :     if(tree) {

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN5@TheaterLoa

; 2007 : 	item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2008 : 	if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN5@TheaterLoa

; 2009 : 	{
; 2010 : 	    btn=(C_Button*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn$[ebp], eax

; 2011 : 	    
; 2012 : 	    tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 2013 : 	    btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 2014 : 	    tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2015 : 	    
; 2016 : 	    int n = btn->GetUserNumber(C_STATE_0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _n$1[ebp], eax

; 2017 : 	    TheaterDef *td;
; 2018 : 	    
; 2019 : 	    if (td = g_theaters.GetTheater(n))

	mov	ecx, DWORD PTR _n$1[ebp]
	push	ecx
	mov	ecx, OFFSET ?g_theaters@@3VTheaterList@@A ; g_theaters
	call	?GetTheater@TheaterList@@QAEPAUTheaterDef@@H@Z ; TheaterList::GetTheater
	mov	DWORD PTR _td$2[ebp], eax
	cmp	DWORD PTR _td$2[ebp], 0
	je	SHORT $LN5@TheaterLoa

; 2020 : 		SelectTheater(td);

	mov	edx, DWORD PTR _td$2[ebp]
	push	edx
	call	?SelectTheater@@YAXPAUTheaterDef@@@Z	; SelectTheater
	add	esp, 4
$LN5@TheaterLoa:

; 2021 : 	}
; 2022 :     }
; 2023 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TheaterLoadCB@@YAXJFPAVC_Base@@@Z ENDP			; TheaterLoadCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TheaterCancelCB@@YAXJFPAVC_Base@@@Z PROC		; TheaterCancelCB

; 1988 : {

	push	ebp
	mov	ebp, esp

; 1989 :     if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@TheaterCan

; 1990 : 	return;

	jmp	SHORT $LN2@TheaterCan
$LN1@TheaterCan:

; 1991 :     
; 1992 :     gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1993 :     MainLastGroup = 0;

	mov	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
$LN2@TheaterCan:

; 1994 : }

	pop	ebp
	ret	0
?TheaterCancelCB@@YAXJFPAVC_Base@@@Z ENDP		; TheaterCancelCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_btn$ = -8						; size = 4
_td$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TheaterBackCB@@YAXJFPAVC_Base@@@Z PROC			; TheaterBackCB

; 1960 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1961 :     if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@TheaterBac

; 1962 : 	return;

	jmp	$LN4@TheaterBac
$LN3@TheaterBac:

; 1963 :     
; 1964 :     TheaterDef *td = NULL;

	mov	DWORD PTR _td$[ebp], 0

; 1965 :     gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1966 :     MainLastGroup = 0;

	mov	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup

; 1967 :     
; 1968 :     C_Window *win = gMainHandler->FindWindow (UI_THEATER_WINDOW);

	push	300101					; 00049445H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1969 :     
; 1970 :     C_Button *btn=(C_Button*)win->FindControl(UI_THEATER_IMAGE);

	push	300103					; 00049447H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1971 :     
; 1972 :     if (btn) {

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@TheaterBac

; 1973 : 	td = (TheaterDef *)btn->GetUserPtr(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserPtr@C_Base@@QAEPAXJ@Z		; C_Base::GetUserPtr
	mov	DWORD PTR _td$[ebp], eax

; 1974 : 	if (td) 

	cmp	DWORD PTR _td$[ebp], 0
	je	SHORT $LN2@TheaterBac

; 1975 : 	{
; 1976 : 		SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 1977 : 	  g_theaters.SetNewTheater(td);

	mov	edx, DWORD PTR _td$[ebp]
	push	edx
	mov	ecx, OFFSET ?g_theaters@@3VTheaterList@@A ; g_theaters
	call	?SetNewTheater@TheaterList@@QAE_NPAUTheaterDef@@@Z ; TheaterList::SetNewTheater

; 1978 : 		SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN2@TheaterBac:

; 1979 : 	}
; 1980 :     }
; 1981 :     PostMessage(gMainHandler->GetAppWnd(),FM_END_UI,0,0);

	push	0
	push	0
	push	1028					; 00000404H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16

; 1982 : // wParam "1" calls "DoSoundSetup" in TheaterDef.cpp
; 1983 : // Can't call it here, as the UI must be shut down before the sound gets setup again
; 1984 :     PostMessage(gMainHandler->GetAppWnd(),FM_START_UI,1,0);

	push	0
	push	1
	push	1027					; 00000403H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN4@TheaterBac:

; 1985 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TheaterBackCB@@YAXJFPAVC_Base@@@Z ENDP			; TheaterBackCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_txt$ = -8						; size = 4
_btn$ = -4						; size = 4
_td$ = 8						; size = 4
?SelectTheater@@YAXPAUTheaterDef@@@Z PROC		; SelectTheater

; 2081 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2082 :     C_Window *win = gMainHandler->FindWindow (UI_THEATER_WINDOW);

	push	300101					; 00049445H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2083 :     
; 2084 :     C_Text *txt=(C_Text*)win->FindControl(UI_THEATER_DESC);

	push	300104					; 00049448H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2085 :     if (txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN5@SelectThea

; 2086 :     {
; 2087 : 	if (td)

	cmp	DWORD PTR _td$[ebp], 0
	je	SHORT $LN4@SelectThea

; 2088 : 	    txt->SetText(td->m_description);

	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
	jmp	SHORT $LN5@SelectThea
$LN4@SelectThea:

; 2089 : 	else txt->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN5@SelectThea:

; 2090 :     }
; 2091 :     C_Button *btn=(C_Button*)win->FindControl(UI_THEATER_IMAGE);

	push	300103					; 00049447H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 2092 :     if(btn) {

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@SelectThea

; 2093 : 	btn->ClearImage(0, UI_THEATER_BITMAP);

	push	300105					; 00049449H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?ClearImage@C_Button@@QAEXFJ@Z		; C_Button::ClearImage

; 2094 : 	gImageMgr->RemoveImage(UI_THEATER_BITMAP);

	push	300105					; 00049449H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?RemoveImage@C_Image@@QAEHJ@Z		; C_Image::RemoveImage

; 2095 : 	if (td && td->m_bitmap) {

	cmp	DWORD PTR _td$[ebp], 0
	je	SHORT $LN1@SelectThea
	mov	ecx, DWORD PTR _td$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN1@SelectThea

; 2096 : 	    gImageMgr->LoadImage(UI_THEATER_BITMAP,td->m_bitmap,0,0);

	push	0
	push	0
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	300105					; 00049449H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?LoadImageA@C_Image@@QAEPAVC_Resmgr@@JPADFF@Z ; C_Image::LoadImageA

; 2097 : 	    btn->SetImage(0,UI_THEATER_BITMAP);

	push	300105					; 00049449H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 2098 : 	    btn->Refresh();    

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@SelectThea:

; 2099 : 	}
; 2100 : 	btn->SetUserPtr(0, td);

	mov	ecx, DWORD PTR _td$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserPtr@C_Base@@QAEXJPAX@Z		; C_Base::SetUserPtr
$LN2@SelectThea:

; 2101 :     }
; 2102 :     win->RefreshWindow(); 

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 2103 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectTheater@@YAXPAUTheaterDef@@@Z ENDP		; SelectTheater
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_UIFilter$ = -108					; size = 12
$T2 = -96						; size = 4
$T3 = -92						; size = 4
$T4 = -88						; size = 4
$T5 = -84						; size = 4
$T6 = -80						; size = 4
$T7 = -76						; size = 4
$T8 = -72						; size = 4
_r_mask$ = -68						; size = 4
_g_mask$ = -64						; size = 4
_b_mask$ = -60						; size = 4
tv252 = -56						; size = 4
$T9 = -52						; size = 4
_win$ = -48						; size = 4
tv174 = -44						; size = 4
$T10 = -40						; size = 4
_Primary$ = -36						; size = 4
tv155 = -32						; size = 4
$T11 = -28						; size = 4
tv135 = -24						; size = 4
$T12 = -20						; size = 4
_i$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?UI_Startup@@YAHXZ PROC					; UI_Startup

; 1501 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UI_Startup@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
$LN28@UI_Startup:

; 1502 : 	C_Window	*win;
; 1503 : 	ImageBuffer *Primary;
; 1504 : 	int			i;
; 1505 : 	DWORD		r_mask, g_mask, b_mask;
; 1506 : 
; 1507 : 	// OW
; 1508 : 	//ShowCursor(TRUE);
; 1509 : 	while (ShowCursor(TRUE) < 0);

	push	1
	call	DWORD PTR __imp__ShowCursor@4
	test	eax, eax
	jge	SHORT $LN27@UI_Startup
	jmp	SHORT $LN28@UI_Startup
$LN27@UI_Startup:

; 1510 : 
; 1511 : 	// OW
; 1512 : 	// SetThreadPriority(GetCurrentThread(), THREAD_PRIORITY_ABOVE_NORMAL);
; 1513 : 
; 1514 : 	FalconMessageFilter UIFilter(FalconEvent::UIThread, 0);

	push	0
	push	4
	lea	ecx, DWORD PTR _UIFilter$[ebp]
	call	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z ; FalconMessageFilter::FalconMessageFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1515 : 
; 1516 : 	// OW: Enable UI Hardware acceleration
; 1517 : 	//	FalconDisplay.EnterMode(FalconDisplayConfiguration::UI);
; 1518 : 
; 1519 : 	// M.N. Large UI
; 1520 : 	if (g_bHiResUI){

	movzx	eax, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	eax, eax
	je	SHORT $LN26@UI_Startup

; 1521 : 		FalconDisplay.EnterMode(
; 1522 : 			FalconDisplayConfiguration::UILarge, DisplayOptions.DispVideoCard, DisplayOptions.DispVideoDriver
; 1523 : 		);

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	push	ecx
	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4
	push	edx
	push	2
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A ; FalconDisplay
	call	?EnterMode@FalconDisplayConfiguration@@QAEXW4DisplayMode@1@HH@Z ; FalconDisplayConfiguration::EnterMode

; 1524 : 	}
; 1525 : 	else {

	jmp	SHORT $LN25@UI_Startup
$LN26@UI_Startup:

; 1526 : 		FalconDisplay.EnterMode(
; 1527 : 			FalconDisplayConfiguration::UI, DisplayOptions.DispVideoCard, DisplayOptions.DispVideoDriver
; 1528 : 		);

	movzx	eax, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+5
	push	eax
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+4
	push	ecx
	push	1
	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A ; FalconDisplay
	call	?EnterMode@FalconDisplayConfiguration@@QAEXW4DisplayMode@1@HH@Z ; FalconDisplayConfiguration::EnterMode
$LN25@UI_Startup:

; 1529 : 	}
; 1530 : 
; 1531 : 	Primary=FalconDisplay.GetImageBuffer();

	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A ; FalconDisplay
	call	?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ ; FalconDisplayConfiguration::GetImageBuffer
	mov	DWORD PTR _Primary$[ebp], eax

; 1532 : 
; 1533 : 	Primary->GetColorMasks( &r_mask, &g_mask, &b_mask );

	lea	edx, DWORD PTR _b_mask$[ebp]
	push	edx
	lea	eax, DWORD PTR _g_mask$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r_mask$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _Primary$[ebp]
	call	?GetColorMasks@ImageBuffer@@QAEXPAK00@Z	; ImageBuffer::GetColorMasks

; 1534 : 	UI95_SetScreenColorInfo(static_cast<DWORD>(r_mask), static_cast<DWORD>(g_mask), static_cast<DWORD>(b_mask));

	mov	edx, DWORD PTR _b_mask$[ebp]
	push	edx
	mov	eax, DWORD PTR _g_mask$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r_mask$[ebp]
	push	ecx
	call	?UI95_SetScreenColorInfo@@YAXKKK@Z	; UI95_SetScreenColorInfo
	add	esp, 12					; 0000000cH

; 1535 : 
; 1536 : 	UIBuildColorTable();

	call	?UIBuildColorTable@@YAXXZ		; UIBuildColorTable

; 1537 : 
; 1538 : 	if(!gPlayerBook){

	cmp	DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A, 0 ; gPlayerBook
	jne	SHORT $LN24@UI_Startup

; 1539 : 		gPlayerBook= new PhoneBook;

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN31@UI_Startup
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0PhoneBook@@QAE@XZ			; PhoneBook::PhoneBook
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN32@UI_Startup
$LN31@UI_Startup:
	mov	DWORD PTR tv135[ebp], 0
$LN32@UI_Startup:
	mov	edx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A, eax ; gPlayerBook

; 1540 : 		gPlayerBook->Setup();

	mov	ecx, DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A ; gPlayerBook
	call	?Setup@PhoneBook@@QAEXXZ		; PhoneBook::Setup

; 1541 : 		gPlayerBook->Load("phonebkn.da2");

	push	OFFSET ??_C@_0N@DJIGJIHN@phonebkn?4da2?$AA@
	mov	ecx, DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A ; gPlayerBook
	call	?Load@PhoneBook@@QAEXPAD@Z		; PhoneBook::Load
$LN24@UI_Startup:

; 1542 : 	}
; 1543 : 
; 1544 : 	// THESE 2 LINES ARE VERY VERY Important!
; 1545 : 	ShowWindow(FalconDisplay.appWin,SW_SHOWNORMAL);

	push	1
	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 1546 : 	UpdateWindow(FalconDisplay.appWin);

	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	call	DWORD PTR __imp__UpdateWindow@4

; 1547 : 
; 1548 : 	if(gScreenShotEnabled)

	cmp	DWORD PTR ?gScreenShotEnabled@@3JA, 0	; gScreenShotEnabled
	je	SHORT $LN21@UI_Startup

; 1549 : 	{
; 1550 : 		if (g_bHiResUI)

	movzx	eax, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	eax, eax
	je	SHORT $LN22@UI_Startup

; 1551 : 			gScreenShotBuffer=new WORD[1024l*768l];

	push	1572864					; 00180000H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR ?gScreenShotBuffer@@3PAGA, ecx ; gScreenShotBuffer

; 1552 : 		else

	jmp	SHORT $LN21@UI_Startup
$LN22@UI_Startup:

; 1553 : 			gScreenShotBuffer=new WORD[800l*600l];

	push	960000					; 000ea600H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR ?gScreenShotBuffer@@3PAGA, edx ; gScreenShotBuffer
$LN21@UI_Startup:

; 1554 : 	}
; 1555 : 
; 1556 : 	gMainHandler=new C_Handler;

	push	3480					; 00000d98H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN33@UI_Startup
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0C_Handler@@QAE@XZ			; C_Handler::C_Handler
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN34@UI_Startup
$LN33@UI_Startup:
	mov	DWORD PTR tv155[ebp], 0
$LN34@UI_Startup:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ecx ; gMainHandler

; 1557 : 	gMainHandler->Setup(FalconDisplay.appWin,NULL,Primary);

	mov	edx, DWORD PTR _Primary$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?Setup@C_Handler@@QAEXPAUHWND__@@PAVImageBuffer@@1@Z ; C_Handler::Setup

; 1558 : //	gMainHandler->SetCallback(UIMainMouse);
; 1559 : 
; 1560 : 	GlobalSetup();

	call	?GlobalSetup@@YAXXZ			; GlobalSetup

; 1561 : 	LoadArtwork();

	call	?LoadArtwork@@YAXXZ			; LoadArtwork

; 1562 : 	LoadSoundFiles();

	call	?LoadSoundFiles@@YAXXZ			; LoadSoundFiles

; 1563 : 	LoadStringFiles();

	call	?LoadStringFiles@@YAXXZ			; LoadStringFiles

; 1564 : 	LoadMovieFiles();

	call	?LoadMovieFiles@@YAXXZ			; LoadMovieFiles

; 1565 : 	SetStartupFlags();

	call	?SetStartupFlags@@YAXXZ			; SetStartupFlags

; 1566 : 
; 1567 : 	LoadMainWindow();

	call	?LoadMainWindow@@YAXXZ			; LoadMainWindow

; 1568 : 	LoadCommsWindows();

	call	?LoadCommsWindows@@YAXXZ		; LoadCommsWindows

; 1569 : 	LoadHelpGuideWindows();

	call	?LoadHelpGuideWindows@@YAXXZ		; LoadHelpGuideWindows

; 1570 : 	RealLoadLogbook(); // without daves extra garbage

	call	?RealLoadLogbook@@YAXXZ			; RealLoadLogbook

; 1571 : 
; 1572 : 	_tcscpy(gUI_AutoSaveName,gStringMgr->GetString(TXT_AUTOSAVENAME));

	push	400					; 00000190H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ?gUI_AutoSaveName@@3PADA		; gUI_AutoSaveName
	call	_strcpy
	add	esp, 8

; 1573 : 
; 1574 : 
; 1575 : 	if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN20@UI_Startup

; 1576 : 	{
; 1577 : 		StartCommsQueue();

	call	?StartCommsQueue@@YAXXZ			; StartCommsQueue

; 1578 : 		RebuildGameTree();

	call	?RebuildGameTree@@YAXXZ			; RebuildGameTree
$LN20@UI_Startup:

; 1579 : 	}
; 1580 : 
; 1581 : 	INFOSetupControls();

	call	?INFOSetupControls@@YAXXZ		; INFOSetupControls

; 1582 : 
; 1583 : 	gMusic=new C_Music;

	push	176					; 000000b0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN35@UI_Startup
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0C_Music@@QAE@XZ			; C_Music::C_Music
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN36@UI_Startup
$LN35@UI_Startup:
	mov	DWORD PTR tv174[ebp], 0
$LN36@UI_Startup:
	mov	ecx, DWORD PTR tv174[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR ?gMusic@@3PAVC_Music@@A, edx	; gMusic

; 1584 : 	gMusic->Setup(gSoundDriver);

	mov	eax, DWORD PTR ?gSoundDriver@@3PAVCSoundMgr@@A ; gSoundDriver
	push	eax
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?Setup@C_Music@@QAEXPAVCSoundMgr@@@Z	; C_Music::Setup

; 1585 : 	i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN19@UI_Startup:

; 1586 : 	while(IntList[i].MusicID)

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	cmp	DWORD PTR ?IntList@@3PAUINTER_MUSIC@@A[ecx+8], 0
	je	SHORT $LN18@UI_Startup

; 1587 : 	{
; 1588 : 		gMusic->AddInteractiveMusic(IntList[i].Section,IntList[i].Group,IntList[i].MusicID);

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR ?IntList@@3PAUINTER_MUSIC@@A[edx+8]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR ?IntList@@3PAUINTER_MUSIC@@A[ecx+4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?IntList@@3PAUINTER_MUSIC@@A[eax]
	push	ecx
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddInteractiveMusic@C_Music@@QAEXJJJ@Z	; C_Music::AddInteractiveMusic

; 1589 : 		i++;

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 1590 : 	}

	jmp	SHORT $LN19@UI_Startup
$LN18@UI_Startup:

; 1591 : 
; 1592 : 	gMainHandler->SetSection(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?SetSection@C_Handler@@QAEXJ@Z		; C_Handler::SetSection

; 1593 : 	if(MainLastGroup)

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	$LN17@UI_Startup

; 1594 : 	{
; 1595 : 		// Returning from the sim - Post eval our flight
; 1596 : 		// KCK: Added the check for a pilot list so that we don't post-eval after a
; 1597 : 		// discarded mission
; 1598 : 		if(TheCampaign.MissionEvaluator && TheCampaign.MissionEvaluator->flight_data)

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324, 0
	je	SHORT $LN16@UI_Startup
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN16@UI_Startup

; 1599 : 			TheCampaign.MissionEvaluator->PostMissionEval();

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	call	?PostMissionEval@MissionEvaluationClass@@QAEHXZ ; MissionEvaluationClass::PostMissionEval
$LN16@UI_Startup:

; 1600 : 	
; 1601 : 		if(MainLastGroup == 1000)

	cmp	DWORD PTR ?MainLastGroup@@3HA, 1000	; MainLastGroup, 000003e8H
	jne	SHORT $LN15@UI_Startup

; 1602 : 		{
; 1603 : 			LoadInstantActionWindows();

	call	?LoadInstantActionWindows@@YAXXZ	; LoadInstantActionWindows

; 1604 : 			gMainHandler->EnableWindowGroup(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1605 : 			gMainHandler->EnableWindowGroup(MainLastGroup);

	mov	ecx, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
	jmp	$LN6@UI_Startup
$LN15@UI_Startup:

; 1606 : 		}
; 1607 : 		else if(MainLastGroup == 2000)

	cmp	DWORD PTR ?MainLastGroup@@3HA, 2000	; MainLastGroup, 000007d0H
	jne	SHORT $LN13@UI_Startup

; 1608 : 		{
; 1609 : 			LoadDogFightWindows();

	call	?LoadDogFightWindows@@YAXXZ		; LoadDogFightWindows
	jmp	$LN6@UI_Startup
$LN13@UI_Startup:

; 1610 : 		}
; 1611 : 		else if (MainLastGroup == 3000)

	cmp	DWORD PTR ?MainLastGroup@@3HA, 3000	; MainLastGroup, 00000bb8H
	jne	SHORT $LN11@UI_Startup

; 1612 : 		{
; 1613 : 			LoadCampaignSelectWindows();

	call	?LoadCampaignSelectWindows@@YAXXZ	; LoadCampaignSelectWindows

; 1614 : 			restart_tactical_engagement ();

	call	?restart_tactical_engagement@@YAXXZ	; restart_tactical_engagement
	jmp	$LN6@UI_Startup
$LN11@UI_Startup:

; 1615 : 		}
; 1616 : 		else if(MainLastGroup == 4000)

	cmp	DWORD PTR ?MainLastGroup@@3HA, 4000	; MainLastGroup, 00000fa0H
	jne	$LN9@UI_Startup

; 1617 : 		{
; 1618 : 			gMainHandler->SetSection(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?SetSection@C_Handler@@QAEXJ@Z		; C_Handler::SetSection

; 1619 : 			LoadCampaignSelectWindows();

	call	?LoadCampaignSelectWindows@@YAXXZ	; LoadCampaignSelectWindows

; 1620 : 			SetupMapWindow();

	call	?SetupMapWindow@@YAXXZ			; SetupMapWindow

; 1621 : 			LoadCampaignWindows();

	call	?LoadCampaignWindows@@YAXXZ		; LoadCampaignWindows

; 1622 : 			CampaignSetup();

	call	?CampaignSetup@@YAXXZ			; CampaignSetup

; 1623 : 			gMainHandler->EnableWindowGroup(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1624 : 			if(CampaignLastGroup)

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
	je	SHORT $LN8@UI_Startup

; 1625 : 			{
; 1626 : 				win=gMainHandler->FindWindow(CP_TOOLBAR);

	push	6013					; 0000177dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1627 : 				if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@UI_Startup

; 1628 : 					win->UnHideCluster(CampaignLastGroup);

	mov	edx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN7@UI_Startup:

; 1629 : 				gMainHandler->EnableWindowGroup(CampaignLastGroup);

	mov	eax, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN8@UI_Startup:

; 1630 : 			}
; 1631 : 			ActivateCampMissionSchedule();

	call	?ActivateCampMissionSchedule@@YAXXZ	; ActivateCampMissionSchedule

; 1632 : 
; 1633 : 			DoResultsWindows();

	call	?DoResultsWindows@@YAXXZ		; DoResultsWindows

; 1634 : 			/*
; 1635 : 			if(MissionResult & PROMOTION)
; 1636 : 				PromotionWindow();
; 1637 : 			if(MissionResult & AWARD_MEDAL)
; 1638 : 				AwardWindow();
; 1639 : 			else if(MissionResult & COURT_MARTIAL)
; 1640 : 				CourtMartialWindow();
; 1641 : 			*/
; 1642 : 			
; 1643 : 		}
; 1644 : 		else

	jmp	SHORT $LN6@UI_Startup
$LN9@UI_Startup:

; 1645 : 		{
; 1646 : 			gMainHandler->EnableWindowGroup(MainLastGroup);

	mov	ecx, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN6@UI_Startup:

; 1647 : 		}
; 1648 : 	}
; 1649 : 	else

	jmp	SHORT $LN5@UI_Startup
$LN17@UI_Startup:

; 1650 : 		gMainHandler->EnableWindowGroup(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN5@UI_Startup:

; 1651 : 
; 1652 : 	if(CampaignLastGroup != 4000)

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 4000	; CampaignLastGroup, 00000fa0H
	je	SHORT $LN4@UI_Startup

; 1653 : 		PlayUIMusic();

	call	?PlayUIMusic@@YAXXZ			; PlayUIMusic
$LN4@UI_Startup:

; 1654 : 
; 1655 : 	gSoundMgr->SetAllVolumes(PlayerOptions.GroupVol[UI_SOUND_GROUP]);

	mov	edx, 4
	imul	edx, 7
	mov	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A[edx+120]
	push	eax
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?SetAllVolumes@C_Sound@@QAEXJ@Z		; C_Sound::SetAllVolumes

; 1656 : 	
; 1657 : 
; 1658 : 	gMainHandler->StartTimerThread(UI_TIMER_INTERVAL); // 1 second intervals

	push	1000					; 000003e8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?StartTimerThread@C_Handler@@QAEXJ@Z	; C_Handler::StartTimerThread

; 1659 : 
; 1660 : 	gMainHandler->SetEnableTime(GetCurrentTime()+100);

	call	DWORD PTR __imp__GetTickCount@0
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?SetEnableTime@C_Handler@@QAEXJ@Z	; C_Handler::SetEnableTime

; 1661 : 	gMainHandler->SetDrawFlag(1); // allow drawing (currently a true/false flag)

	push	1
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?SetDrawFlag@C_Handler@@QAEXJ@Z		; C_Handler::SetDrawFlag

; 1662 : 
; 1663 : 	UI_VuThread=new VuThread(&UIFilter, F4_EVENT_QUEUE_SIZE);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN37@UI_Startup
	push	2000					; 000007d0H
	lea	ecx, DWORD PTR _UIFilter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0VuThread@@QAE@PAVVuMessageFilter@@H@Z ; VuThread::VuThread
	mov	DWORD PTR tv252[ebp], eax
	jmp	SHORT $LN38@UI_Startup
$LN37@UI_Startup:
	mov	DWORD PTR tv252[ebp], 0
$LN38@UI_Startup:
	mov	edx, DWORD PTR tv252[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?UI_VuThread@@3PAVVuThread@@A, eax ; UI_VuThread

; 1664 : 
; 1665 : // Test KLUDGE for speedup
; 1666 :   	DeviceDependentGraphicsSetup( &FalconDisplay.theDisplayDevice );

	push	OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+132
	call	?DeviceDependentGraphicsSetup@@YAXPAVDisplayDevice@@@Z ; DeviceDependentGraphicsSetup
	add	esp, 4

; 1667 : 	//DrawableBSP::LockAndLoad(VIS_F16C);
; 1668 : 	
; 1669 : 	SetCursor(gCursors[CRSR_F16]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 1670 : 
; 1671 : 	if(!(LogState & LB_LOADED_ONCE))

	mov	eax, DWORD PTR ?LogState@@3HA		; LogState
	and	eax, 32					; 00000020H
	jne	SHORT $LN3@UI_Startup

; 1672 : 	{
; 1673 : 		LogState |= LB_LOADED_ONCE;

	mov	ecx, DWORD PTR ?LogState@@3HA		; LogState
	or	ecx, 32					; 00000020H
	mov	DWORD PTR ?LogState@@3HA, ecx		; LogState

; 1674 : 		LogBook.Initialize();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Initialize@LogBookData@@QAEXXZ		; LogBookData::Initialize

; 1675 : 		UI_logbk.Initialize();

	mov	ecx, OFFSET ?UI_logbk@@3VLogBookData@@A	; UI_logbk
	call	?Initialize@LogBookData@@QAEXXZ		; LogBookData::Initialize

; 1676 : 		PlayerOptions.Initialize ();

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?Initialize@PlayerOptionsClass@@QAEXXZ	; PlayerOptionsClass::Initialize

; 1677 : 		DisplayOptions.Initialize();

	mov	ecx, OFFSET ?DisplayOptions@@3VDisplayOptionsClass@@A ; DisplayOptions
	call	?Initialize@DisplayOptionsClass@@QAEXXZ	; DisplayOptionsClass::Initialize
$LN3@UI_Startup:

; 1678 : 	}
; 1679 : 
; 1680 : 	if(!LogBook.CheckPassword(_T("")) && !(LogState & LB_CHECKED))

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?CheckPassword@LogBookData@@QAEHPAD@Z	; LogBookData::CheckPassword
	test	eax, eax
	jne	SHORT $LN2@UI_Startup
	mov	edx, DWORD PTR ?LogState@@3HA		; LogState
	and	edx, 8
	jne	SHORT $LN2@UI_Startup

; 1681 : 		PasswordWindow(TXT_LOG_IN,TXT_LOG_IN_MESSAGE,CheckPasswordCB,NoPasswordCB);

	push	OFFSET ?NoPasswordCB@@YAXJFPAVC_Base@@@Z ; NoPasswordCB
	push	OFFSET ?CheckPasswordCB@@YAXJFPAVC_Base@@@Z ; CheckPasswordCB
	push	149					; 00000095H
	push	147					; 00000093H
	call	?PasswordWindow@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; PasswordWindow
	add	esp, 16					; 00000010H

; 1682 : 	else

	jmp	SHORT $LN1@UI_Startup
$LN2@UI_Startup:

; 1683 : 	{
; 1684 : 		FalconLocalSession->SetPlayerName(LogBook.NameWRank());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?NameWRank@LogBookData@@QAEPADXZ	; LogBookData::NameWRank
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerName@FalconSessionEntity@@QAEXPAD@Z ; FalconSessionEntity::SetPlayerName

; 1685 : 		FalconLocalSession->SetPlayerCallsign(LogBook.Callsign());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerCallsign@FalconSessionEntity@@QAEXPAD@Z ; FalconSessionEntity::SetPlayerCallsign

; 1686 : 		FalconLocalSession->SetAceFactor(LogBook.AceFactor());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?AceFactor@LogBookData@@QAEMXZ		; LogBookData::AceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetAceFactor@FalconSessionEntity@@QAEXM@Z ; FalconSessionEntity::SetAceFactor

; 1687 : 		FalconLocalSession->SetInitAceFactor(LogBook.AceFactor());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?AceFactor@LogBookData@@QAEMXZ		; LogBookData::AceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetInitAceFactor@FalconSessionEntity@@QAEXM@Z ; FalconSessionEntity::SetInitAceFactor
$LN1@UI_Startup:

; 1688 : 	}
; 1689 : 
; 1690 : 	F4HearVoices();

	call	_F4HearVoices

; 1691 : 	UserStickInputs.Reset();

	mov	ecx, OFFSET ?UserStickInputs@@3VPilotInputs@@A ; UserStickInputs
	call	?Reset@PilotInputs@@QAEXXZ		; PilotInputs::Reset

; 1692 : 
; 1693 : 	return(0);

	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _UIFilter$[ebp]
	call	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
	mov	eax, DWORD PTR $T2[ebp]

; 1694 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UI_Startup@@YAHXZ$0:
	lea	ecx, DWORD PTR _UIFilter$[ebp]
	jmp	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
__unwindfunclet$?UI_Startup@@YAHXZ$1:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UI_Startup@@YAHXZ$2:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UI_Startup@@YAHXZ$3:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UI_Startup@@YAHXZ$4:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?UI_Startup@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UI_Startup@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UI_Startup@@YAHXZ ENDP					; UI_Startup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?UI_LoadSkyWeatherData@@YAXXZ PROC			; UI_LoadSkyWeatherData

; 1423 : {

	push	ebp
	mov	ebp, esp

; 1424 : /*	// M.N.
; 1425 : 	FILE*		fp;
; 1426 : 	int			i = 0;
; 1427 : 	char		file[1024];
; 1428 : 	_TCHAR		image1[MAX_PATH], image2[MAX_PATH], image3[MAX_PATH], image4[MAX_PATH];
; 1429 : 	_TCHAR		name[50], filename[50], picname[50];
; 1430 : 
; 1431 : 	// Skycolor data readin
; 1432 : //	sprintf(file,"%s\\weather\\todtable.dat",FalconTerrainDataDir);
; 1433 : 
; 1434 : 	/* format:
; 1435 : 		[NumberOfSkyColors]
; 1436 : 		[UI display name]
; 1437 : 		[TOD file name] [Image1] [Image2] [Image3] [Image4]
; 1438 : 	*/
; 1439 : 
; 1440 : /*	if(!(fp=fopen(file,"rt")))
; 1441 : 		return;
; 1442 : 	NumberOfSkyColors = atoi(fgets(file,1024,fp));
; 1443 : 
; 1444 : 	skycolor = new SkyColorDataType[NumberOfSkyColors];
; 1445 : 	while (i<NumberOfSkyColors) //for (int i=0; i<NumberOfSkyColors; i++)
; 1446 : 	{
; 1447 : 		fgets(file,1024,fp);
; 1448 : 		if (file[0] == '\r' || file[0] == '#' || file[0] == ';' || file[0] == '\n')
; 1449 : 			continue;
; 1450 : 		
; 1451 : 		strcpy(name,file);
; 1452 : 		strcpy(skycolor[i].name,name);
; 1453 : 		fgets(file,1024,fp);
; 1454 : 		sscanf(file, "%s %s %s %s %s",filename,image1,image2,image3,image4);
; 1455 : 		strcpy(skycolor[i].todname,filename);
; 1456 : 		strcpy(skycolor[i].image1,image1);
; 1457 : 		if (!strlen(image2))		// If we have no entry, use the main image
; 1458 : 			strcpy(image2,image1);
; 1459 : 		strcpy(skycolor[i].image2,image2);
; 1460 : 		if (!strlen(image3))
; 1461 : 			strcpy(image3,image1);
; 1462 : 		strcpy(skycolor[i].image3,image3);
; 1463 : 		if (!strlen(image4))
; 1464 : 			strcpy(image4,image1);
; 1465 : 		strcpy(skycolor[i].image4,image4);
; 1466 : 		strcpy(image1,"");
; 1467 : 		strcpy(image2,"");
; 1468 : 		strcpy(image3,"");
; 1469 : 		strcpy(image4,"");
; 1470 : 		i++;
; 1471 : 	}
; 1472 : 	fclose(fp);
; 1473 : 
; 1474 : 	prevskycol = PlayerOptions.skycol;
; 1475 : 
; 1476 : 	sprintf(file,"%s\\weather\\weathertable.dat",FalconTerrainDataDir);
; 1477 : 
; 1478 : 	if(!(fp=fopen(file,"rt")))
; 1479 : 		return;
; 1480 : 	NumWeatherPatterns = atoi(fgets(file,1024,fp));
; 1481 : 	i = 0;
; 1482 : 	weatherPatternData = new WeatherPatternDataType[NumWeatherPatterns];
; 1483 : 	while (i<NumWeatherPatterns)
; 1484 : //	for (i=0; i<NumWeatherPatterns; i++)
; 1485 : 	{
; 1486 : 		fgets(file,1024,fp);
; 1487 : 		if (file[0] == '\r' || file[0] == '#' || file[0] == ';' || file[0] == '\n')
; 1488 : 			continue;
; 1489 : 		strcpy(weatherPatternData[i].name,file);
; 1490 : 		fgets(file,1024,fp);
; 1491 : 		sscanf(file,"%s %s",filename, picname); // filename = RAW, picname = picture
; 1492 : 		strcpy(weatherPatternData[i].filename,filename);
; 1493 : 		strcpy(weatherPatternData[i].picfname,picname);
; 1494 : 		i++;
; 1495 : 	}
; 1496 : 	fclose(fp);
; 1497 : */
; 1498 : }

	pop	ebp
	ret	0
?UI_LoadSkyWeatherData@@YAXXZ ENDP			; UI_LoadSkyWeatherData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
?PlayUIMovie@@YAXJ@Z PROC				; PlayUIMovie

; 1402 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1403 : #ifdef _USE_MOVIE_
; 1404 : 	C_Window *win;
; 1405 : 
; 1406 : 	win=gMainHandler->FindWindow(VIDEO_WIN);

	push	19300					; 00004b64H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1407 : 	if ((win) && (gMovieMgr->GetMovie(ID)))

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN2@PlayUIMovi
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	call	?GetMovie@C_Movie@@QAEPAVMOVIE_RES@@J@Z	; C_Movie::GetMovie
	test	eax, eax
	je	$LN2@PlayUIMovi

; 1408 : 	{
; 1409 : 		gMoviePlaying=TRUE;

	mov	DWORD PTR ?gMoviePlaying@@3HA, 1	; gMoviePlaying

; 1410 : 		gMusic->FadeOut_Pause();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?FadeOut_Pause@C_Music@@QAEXXZ		; C_Music::FadeOut_Pause

; 1411 : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1412 : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 1413 : 		gMovieMgr->SetXY(win->GetX()+win->ClientArea_[0].left,win->GetY()+win->ClientArea_[0].top);

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	cwde
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	add	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	cwde
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	add	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	call	?SetXY@C_Movie@@QAEXJJ@Z		; C_Movie::SetXY

; 1414 : 		gMovieMgr->Play(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	call	?Play@C_Movie@@QAEHJ@Z			; C_Movie::Play

; 1415 : 		gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1416 : 		gMusic->Resume();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?Resume@C_Music@@QAEXXZ			; C_Music::Resume

; 1417 : 		gMoviePlaying=FALSE;

	mov	DWORD PTR ?gMoviePlaying@@3HA, 0	; gMoviePlaying
$LN2@PlayUIMovi:

; 1418 : 	}
; 1419 : #endif
; 1420 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PlayUIMovie@@YAXJ@Z ENDP				; PlayUIMovie
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?PlayThatFunkyMusicWhiteBoy@@YAXXZ PROC			; PlayThatFunkyMusicWhiteBoy

; 1380 : {

	push	ebp
	mov	ebp, esp

; 1381 : 	if(!gMusic || !MusicStopped)

	cmp	DWORD PTR ?gMusic@@3PAVC_Music@@A, 0	; gMusic
	je	SHORT $LN5@PlayThatFu
	cmp	DWORD PTR ?MusicStopped@@3JA, 0		; MusicStopped
	jne	SHORT $LN6@PlayThatFu
$LN5@PlayThatFu:

; 1382 : 		return;

	jmp	SHORT $LN7@PlayThatFu
$LN6@PlayThatFu:

; 1383 : 
; 1384 : //	if(GetCurrentTime() < (MusicStopped + 60000l))
; 1385 : //		return;
; 1386 : 
; 1387 : 	if(LastTypePlayed != 1)

	movsx	eax, WORD PTR _LastTypePlayed
	cmp	eax, 1
	je	SHORT $LN4@PlayThatFu

; 1388 : 	{
; 1389 : 		if(MusicTypePlayed == 2)

	movsx	ecx, WORD PTR _MusicTypePlayed
	cmp	ecx, 2
	jne	SHORT $LN3@PlayThatFu

; 1390 : 			PlayCampaignMusic();

	call	?PlayCampaignMusic@@YAXXZ		; PlayCampaignMusic

; 1391 : 		else

	jmp	SHORT $LN2@PlayThatFu
$LN3@PlayThatFu:

; 1392 : 			PlayUIMusic();

	call	?PlayUIMusic@@YAXXZ			; PlayUIMusic
$LN2@PlayThatFu:

; 1393 : 	}
; 1394 : 	else

	jmp	SHORT $LN7@PlayThatFu
$LN4@PlayThatFu:

; 1395 : 	{
; 1396 : 		gMusic->StartInteractive(rand() & 0x01,0);

	push	0
	call	_rand
	and	eax, 1
	push	eax
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?StartInteractive@C_Music@@QAEXJJ@Z	; C_Music::StartInteractive

; 1397 : 		LastTypePlayed=2;

	mov	edx, 2
	mov	WORD PTR _LastTypePlayed, dx
$LN7@PlayThatFu:

; 1398 : 	}
; 1399 : }

	pop	ebp
	ret	0
?PlayThatFunkyMusicWhiteBoy@@YAXXZ ENDP			; PlayThatFunkyMusicWhiteBoy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?PlayCampaignMusic@@YAXXZ PROC				; PlayCampaignMusic

; 1359 : {						 // and play music accordingly

	push	ebp
	mov	ebp, esp

; 1360 : 	// Team[MyTeam]... Initiative()  0->33 Bad 34->66 Medium 67->100 Good
; 1361 : 	if(!TeamInfo[FalconLocalSession->GetTeam()])

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	jne	SHORT $LN5@PlayCampai

; 1362 : 	{
; 1363 : 		PlayUIMusic();

	call	?PlayUIMusic@@YAXXZ			; PlayUIMusic

; 1364 : 		return;

	jmp	$LN6@PlayCampai
$LN5@PlayCampai:

; 1365 : 	}
; 1366 : 	MusicTypePlayed=2; // Campaign Music

	mov	ecx, 2
	mov	WORD PTR _MusicTypePlayed, cx

; 1367 : 	LastTypePlayed=1;

	mov	edx, 1
	mov	WORD PTR _LastTypePlayed, dx

; 1368 : 	if(TeamInfo[FalconLocalSession->GetTeam()]->playerRating < -5)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	movss	xmm0, DWORD PTR __real@c0a00000
	comiss	xmm0, DWORD PTR [ecx+604]
	jbe	SHORT $LN4@PlayCampai

; 1369 : //	if(TeamInfo[2]->Initiative() < 34)
; 1370 : 		gMusic->AddQ(SND_CAMPAIGN_BAD);

	push	500055					; 0007a157H
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddQ@C_Music@@QAEXJ@Z			; C_Music::AddQ
	jmp	SHORT $LN1@PlayCampai
$LN4@PlayCampai:

; 1371 : 	else if(TeamInfo[FalconLocalSession->GetTeam()]->playerRating < 5)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	movss	xmm0, DWORD PTR __real@40a00000
	comiss	xmm0, DWORD PTR [eax+604]
	jbe	SHORT $LN2@PlayCampai

; 1372 : //	else if (TeamInfo[2]->Initiative() < 67)
; 1373 : 		gMusic->AddQ(SND_CAMPAIGN_MEDIUM);

	push	500054					; 0007a156H
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddQ@C_Music@@QAEXJ@Z			; C_Music::AddQ

; 1374 : 	else

	jmp	SHORT $LN1@PlayCampai
$LN2@PlayCampai:

; 1375 : 		gMusic->AddQ(SND_CAMPAIGN_GOOD);

	push	500053					; 0007a155H
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddQ@C_Music@@QAEXJ@Z			; C_Music::AddQ
$LN1@PlayCampai:

; 1376 : 	gMusic->PlayQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?PlayQ@C_Music@@QAEXXZ			; C_Music::PlayQ
$LN6@PlayCampai:

; 1377 : }

	pop	ebp
	ret	0
?PlayCampaignMusic@@YAXXZ ENDP				; PlayCampaignMusic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?PlayUIMusic@@YAXXZ PROC				; PlayUIMusic

; 1335 : {

	push	ebp
	mov	ebp, esp

; 1336 : 	MusicTypePlayed=1; // Main UI Music

	mov	eax, 1
	mov	WORD PTR _MusicTypePlayed, ax

; 1337 : 	LastTypePlayed=1;

	mov	ecx, 1
	mov	WORD PTR _LastTypePlayed, cx

; 1338 : 
; 1339 : 	if(LastUIPlayed != SND_AMBIENT1 && LastUIPlayed != SND_AMBIENT2)

	cmp	DWORD PTR _LastUIPlayed, 500051		; 0007a153H
	je	SHORT $LN4@PlayUIMusi
	cmp	DWORD PTR _LastUIPlayed, 500052		; 0007a154H
	je	SHORT $LN4@PlayUIMusi

; 1340 : 	{
; 1341 : 		if(rand() & 1)

	call	_rand
	and	eax, 1
	je	SHORT $LN4@PlayUIMusi

; 1342 : 			LastUIPlayed=SND_AMBIENT1;

	mov	DWORD PTR _LastUIPlayed, 500051		; 0007a153H
$LN4@PlayUIMusi:

; 1343 : 	}
; 1344 : 	if(LastUIPlayed != SND_AMBIENT1)

	cmp	DWORD PTR _LastUIPlayed, 500051		; 0007a153H
	je	SHORT $LN2@PlayUIMusi

; 1345 : 	{
; 1346 : 		gMusic->AddQ(SND_AMBIENT1);

	push	500051					; 0007a153H
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddQ@C_Music@@QAEXJ@Z			; C_Music::AddQ

; 1347 : 		LastUIPlayed=SND_AMBIENT1;

	mov	DWORD PTR _LastUIPlayed, 500051		; 0007a153H

; 1348 : 	}
; 1349 : 	else

	jmp	SHORT $LN1@PlayUIMusi
$LN2@PlayUIMusi:

; 1350 : 	{
; 1351 : 		gMusic->AddQ(SND_AMBIENT2);

	push	500052					; 0007a154H
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?AddQ@C_Music@@QAEXJ@Z			; C_Music::AddQ

; 1352 : 		LastUIPlayed=SND_AMBIENT2;

	mov	DWORD PTR _LastUIPlayed, 500052		; 0007a154H
$LN1@PlayUIMusi:

; 1353 : 	}
; 1354 : 	gMusic->PlayQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?PlayQ@C_Music@@QAEXXZ			; C_Music::PlayQ

; 1355 : 	gMusic->SetVolume(PlayerOptions.GroupVol[MUSIC_SOUND_GROUP]);

	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A[edx+120]
	push	eax
	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?SetVolume@C_Music@@QAEXJ@Z		; C_Music::SetVolume

; 1356 : }

	pop	ebp
	ret	0
?PlayUIMusic@@YAXXZ ENDP				; PlayUIMusic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?UI_UpdateVU@@YAXXZ PROC				; UI_UpdateVU

; 1324 : void UI_UpdateVU(){

	push	ebp
	mov	ebp, esp

; 1325 : 	if (UI_VuThread){

	cmp	DWORD PTR ?UI_VuThread@@3PAVVuThread@@A, 0 ; UI_VuThread
	je	SHORT $LN2@UI_UpdateV

; 1326 : 		UI_VuThread->Update(3);

	push	3
	mov	eax, DWORD PTR ?UI_VuThread@@3PAVVuThread@@A ; UI_VuThread
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?UI_VuThread@@3PAVVuThread@@A ; UI_VuThread
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN2@UI_UpdateV:

; 1327 : 	}
; 1328 : }

	pop	ebp
	ret	0
?UI_UpdateVU@@YAXXZ ENDP				; UI_UpdateVU
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
_newQueue$ = -24					; size = 4
tv71 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?StartCommsQueue@@YAXXZ PROC				; StartCommsQueue

; 1315 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StartCommsQueue@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1316 : 	CommsQueue *newQueue;
; 1317 : 
; 1318 : 	newQueue=new CommsQueue;

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@StartComms
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CommsQueue@@QAE@XZ			; CommsQueue::CommsQueue
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@StartComms
$LN3@StartComms:
	mov	DWORD PTR tv71[ebp], 0
$LN4@StartComms:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newQueue$[ebp], ecx

; 1319 : 	newQueue->Setup(FalconDisplay.appWin);

	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	mov	ecx, DWORD PTR _newQueue$[ebp]
	call	?Setup@CommsQueue@@QAEXPAUHWND__@@@Z	; CommsQueue::Setup

; 1320 : 
; 1321 : 	gUICommsQ=newQueue;

	mov	eax, DWORD PTR _newQueue$[ebp]
	mov	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, eax ; gUICommsQ

; 1322 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?StartCommsQueue@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?StartCommsQueue@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StartCommsQueue@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StartCommsQueue@@YAXXZ ENDP				; StartCommsQueue
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_j$ = -8						; size = 4
_i$ = -4						; size = 4
?SetStartupFlags@@YAXXZ PROC				; SetStartupFlags

; 1273 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1274 : 	int i,j;
; 1275 : 
; 1276 : 	i=0;

	mov	DWORD PTR _i$[ebp], 0

; 1277 : 	j=0;

	mov	DWORD PTR _j$[ebp], 0
$LN12@SetStartup:

; 1278 : 	while(List1[i])

	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _List1[eax*4], 0
	je	SHORT $LN11@SetStartup

; 1279 : 	{
; 1280 : 		if(stricmp(List1[i],gUBuffer) == 0)

	mov	ecx, DWORD PTR ?gUBuffer@@3PADA		; gUBuffer
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _List1[edx*4]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@SetStartup

; 1281 : 			j++;

	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN10@SetStartup:

; 1282 : 		i++;

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 1283 : 	}

	jmp	SHORT $LN12@SetStartup
$LN11@SetStartup:

; 1284 : 
; 1285 : 	if(j)

	cmp	DWORD PTR _j$[ebp], 0
	je	SHORT $LN9@SetStartup

; 1286 : 		gUI_Tracking_Flag |= _UI_TRACK_FLAG00;

	mov	eax, DWORD PTR ?gUI_Tracking_Flag@@3KA	; gUI_Tracking_Flag
	or	eax, 1
	mov	DWORD PTR ?gUI_Tracking_Flag@@3KA, eax	; gUI_Tracking_Flag
$LN9@SetStartup:

; 1287 : 
; 1288 : 	i=0;

	mov	DWORD PTR _i$[ebp], 0

; 1289 : 	j=0;

	mov	DWORD PTR _j$[ebp], 0
$LN8@SetStartup:

; 1290 : 	while(List2[i])

	mov	ecx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _List2[ecx*4], 0
	je	SHORT $LN7@SetStartup

; 1291 : 	{
; 1292 : 		if(stricmp(List2[i],gUBuffer) == 0)

	mov	edx, DWORD PTR ?gUBuffer@@3PADA		; gUBuffer
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _List2[eax*4]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@SetStartup

; 1293 : 			j++;

	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN6@SetStartup:

; 1294 : 		i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 1295 : 	}

	jmp	SHORT $LN8@SetStartup
$LN7@SetStartup:

; 1296 : 
; 1297 : 	if(j)

	cmp	DWORD PTR _j$[ebp], 0
	je	SHORT $LN5@SetStartup

; 1298 : 		gUI_Tracking_Flag |= _UI_TRACK_FLAG01;

	mov	ecx, DWORD PTR ?gUI_Tracking_Flag@@3KA	; gUI_Tracking_Flag
	or	ecx, 2
	mov	DWORD PTR ?gUI_Tracking_Flag@@3KA, ecx	; gUI_Tracking_Flag
$LN5@SetStartup:

; 1299 : 
; 1300 : 	i=0;

	mov	DWORD PTR _i$[ebp], 0

; 1301 : 	j=0;

	mov	DWORD PTR _j$[ebp], 0
$LN4@SetStartup:

; 1302 : 	while(List3[i])

	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _List3[edx*4], 0
	je	SHORT $LN3@SetStartup

; 1303 : 	{
; 1304 : 		if(stricmp(List3[i],gUBuffer) == 0)

	mov	eax, DWORD PTR ?gUBuffer@@3PADA		; gUBuffer
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _List3[ecx*4]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@SetStartup

; 1305 : 			j++;

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN2@SetStartup:

; 1306 : 		i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 1307 : 	}

	jmp	SHORT $LN4@SetStartup
$LN3@SetStartup:

; 1308 : 
; 1309 : 	if(j)

	cmp	DWORD PTR _j$[ebp], 0
	je	SHORT $LN13@SetStartup

; 1310 : 		gUI_Tracking_Flag |= _UI_TRACK_FLAG02;

	mov	edx, DWORD PTR ?gUI_Tracking_Flag@@3KA	; gUI_Tracking_Flag
	or	edx, 4
	mov	DWORD PTR ?gUI_Tracking_Flag@@3KA, edx	; gUI_Tracking_Flag
$LN13@SetStartup:

; 1311 : 
; 1312 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetStartupFlags@@YAXXZ ENDP				; SetStartupFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_r_mask$ = -136						; size = 4
_g_mask$ = -132						; size = 4
_b_mask$ = -128						; size = 4
$T2 = -124						; size = 4
$T3 = -120						; size = 4
$T4 = -116						; size = 4
$T5 = -112						; size = 4
$T6 = -108						; size = 4
$T7 = -104						; size = 4
$T8 = -100						; size = 4
$T9 = -96						; size = 4
tv284 = -92						; size = 4
$T10 = -88						; size = 4
tv276 = -84						; size = 4
$T11 = -80						; size = 4
tv267 = -76						; size = 4
$T12 = -72						; size = 4
tv258 = -68						; size = 4
$T13 = -64						; size = 4
tv250 = -60						; size = 4
$T14 = -56						; size = 4
tv242 = -52						; size = 4
$T15 = -48						; size = 4
tv233 = -44						; size = 4
$T16 = -40						; size = 4
tv211 = -36						; size = 4
$T17 = -32						; size = 4
_mouse$ = -28						; size = 4
_r_shift$ = -24						; size = 2
_g_shift$ = -20						; size = 2
_b_shift$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?GlobalSetup@@YAXXZ PROC				; GlobalSetup

; 1156 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GlobalSetup@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1157 : 	DWORD r_mask;
; 1158 : 	WORD r_shift;
; 1159 : 	DWORD g_mask;
; 1160 : 	WORD g_shift;
; 1161 : 	DWORD b_mask;
; 1162 : 	WORD b_shift;
; 1163 : 	char *mouse;
; 1164 : //	FILE *fp;
; 1165 : 
; 1166 : 	mouse=MAKEINTRESOURCE(UI_F16);

	mov	DWORD PTR _mouse$[ebp], 181		; 000000b5H

; 1167 : 	gCursors[1]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1168 : 	gCursors[0]=gCursors[1];

	mov	eax, 4
	shl	eax, 0
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx], edx

; 1169 : 	mouse=MAKEINTRESOURCE(UI_F16_ON);

	mov	DWORD PTR _mouse$[ebp], 182		; 000000b6H

; 1170 : 	gCursors[2]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1171 : 	mouse=MAKEINTRESOURCE(UI_F16_ON_RM);

	mov	DWORD PTR _mouse$[ebp], 183		; 000000b7H

; 1172 : 	gCursors[3]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 3
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1173 : 	mouse=MAKEINTRESOURCE(UI_F16_RM);

	mov	DWORD PTR _mouse$[ebp], 184		; 000000b8H

; 1174 : 	gCursors[4]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	shl	edx, 2
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1175 : 	mouse=MAKEINTRESOURCE(UI_DRAG);

	mov	DWORD PTR _mouse$[ebp], 198		; 000000c6H

; 1176 : 	gCursors[5]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 5
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1177 : 	mouse=MAKEINTRESOURCE(UI_DRAG_RM);

	mov	DWORD PTR _mouse$[ebp], 197		; 000000c5H

; 1178 : 	gCursors[6]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 6
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1179 : 	mouse=MAKEINTRESOURCE(UI_DRAG_STEERPOINT);

	mov	DWORD PTR _mouse$[ebp], 193		; 000000c1H

; 1180 : 	gCursors[7]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 7
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1181 : 	mouse=MAKEINTRESOURCE(UI_HDRAG);

	mov	DWORD PTR _mouse$[ebp], 185		; 000000b9H

; 1182 : 	gCursors[8]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	shl	edx, 3
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1183 : 	mouse=MAKEINTRESOURCE(UI_HDRAG_ON);

	mov	DWORD PTR _mouse$[ebp], 186		; 000000baH

; 1184 : 	gCursors[9]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 9
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1185 : 	mouse=MAKEINTRESOURCE(UI_HDRAG_RM);

	mov	DWORD PTR _mouse$[ebp], 187		; 000000bbH

; 1186 : 	gCursors[10]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 10					; 0000000aH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1187 : 	mouse=MAKEINTRESOURCE(UI_VDRAG);

	mov	DWORD PTR _mouse$[ebp], 195		; 000000c3H

; 1188 : 	gCursors[11]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 11					; 0000000bH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1189 : 	mouse=MAKEINTRESOURCE(UI_VDRAG_ON);

	mov	DWORD PTR _mouse$[ebp], 180		; 000000b4H

; 1190 : 	gCursors[12]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1191 : 	mouse=MAKEINTRESOURCE(UI_VDRAG_RM);

	mov	DWORD PTR _mouse$[ebp], 196		; 000000c4H

; 1192 : 	gCursors[13]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 13					; 0000000dH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1193 : 	mouse=MAKEINTRESOURCE(UI_STEERPOINT);

	mov	DWORD PTR _mouse$[ebp], 192		; 000000c0H

; 1194 : 	gCursors[14]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 14					; 0000000eH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1195 : 	mouse=MAKEINTRESOURCE(UI_LIST_F16);

	mov	DWORD PTR _mouse$[ebp], 188		; 000000bcH

; 1196 : 	gCursors[15]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 15					; 0000000fH
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1197 : 	mouse=MAKEINTRESOURCE(UI_NOT_ALLOWED);

	mov	DWORD PTR _mouse$[ebp], 191		; 000000bfH

; 1198 : 	gCursors[16]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	shl	edx, 4
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1199 : 	mouse=MAKEINTRESOURCE(UI_MAP_ZOOM);

	mov	DWORD PTR _mouse$[ebp], 190		; 000000beH

; 1200 : 	gCursors[17]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 17					; 00000011H
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1201 : 	mouse=MAKEINTRESOURCE(UI_TARGET);

	mov	DWORD PTR _mouse$[ebp], 194		; 000000c2H

; 1202 : 	gCursors[18]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 18					; 00000012H
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1203 : 	mouse=MAKEINTRESOURCE(UI_WAIT);

	mov	DWORD PTR _mouse$[ebp], 189		; 000000bdH

; 1204 : 	gCursors[19]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 19					; 00000013H
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1205 : 	mouse=MAKEINTRESOURCE(UI_TEXT);

	mov	DWORD PTR _mouse$[ebp], 199		; 000000c7H

; 1206 : 	gCursors[20]=LoadCursor(hInst,mouse);

	mov	eax, DWORD PTR _mouse$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	mov	edx, 4
	imul	edx, 20					; 00000014H
	mov	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx], eax

; 1207 : 
; 1208 : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 1209 : 
; 1210 : //	fp=fopen("art\\main\\ascii.bin","rb");
; 1211 : //	if(fp)
; 1212 : //	{
; 1213 : //		fread(Key_Chart,sizeof(Key_Chart),1,fp);
; 1214 : //		fclose(fp);
; 1215 : //	}
; 1216 : 
; 1217 : 	if(gImageMgr == NULL)

	cmp	DWORD PTR ?gImageMgr@@3PAVC_Image@@A, 0	; gImageMgr
	jne	SHORT $LN1@GlobalSetu

; 1218 : 		gImageMgr=new C_Image;

	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN4@GlobalSetu
	mov	ecx, DWORD PTR $T17[ebp]
	call	??0C_Image@@QAE@XZ			; C_Image::C_Image
	mov	DWORD PTR tv211[ebp], eax
	jmp	SHORT $LN5@GlobalSetu
$LN4@GlobalSetu:
	mov	DWORD PTR tv211[ebp], 0
$LN5@GlobalSetu:
	mov	edx, DWORD PTR tv211[ebp]
	mov	DWORD PTR $T9[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T9[ebp]
	mov	DWORD PTR ?gImageMgr@@3PAVC_Image@@A, eax ; gImageMgr
$LN1@GlobalSetu:

; 1219 : 
; 1220 : 	gImageMgr->Setup();

	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?Setup@C_Image@@QAEXXZ			; C_Image::Setup

; 1221 : 	gImageMgr->SetColorKey(UI95_RGB24Bit(0x00ff00ff));

	push	16711935				; 00ff00ffH
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?SetColorKey@C_Image@@QAEXG@Z		; C_Image::SetColorKey

; 1222 : 	UI95_GetScreenColorInfo(r_mask, r_shift, g_mask, g_shift, b_mask, b_shift);

	lea	edx, DWORD PTR _b_shift$[ebp]
	push	edx
	lea	eax, DWORD PTR _b_mask$[ebp]
	push	eax
	lea	ecx, DWORD PTR _g_shift$[ebp]
	push	ecx
	lea	edx, DWORD PTR _g_mask$[ebp]
	push	edx
	lea	eax, DWORD PTR _r_shift$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r_mask$[ebp]
	push	ecx
	call	?UI95_GetScreenColorInfo@@YAXAAKAAG0101@Z ; UI95_GetScreenColorInfo
	add	esp, 24					; 00000018H

; 1223 : //!	UI95_GetScreenColorInfo(&r_mask,&r_shift,&g_mask,&g_shift,&b_mask,&b_shift);
; 1224 : 	gImageMgr->SetScreenFormat(r_shift,g_shift,b_shift);

	movzx	edx, WORD PTR _b_shift$[ebp]
	push	edx
	movzx	eax, WORD PTR _g_shift$[ebp]
	push	eax
	movzx	ecx, WORD PTR _r_shift$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?SetScreenFormat@C_Image@@QAEXFFF@Z	; C_Image::SetScreenFormat

; 1225 : 
; 1226 : 	gFontList=new C_Font;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T16[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T16[ebp], 0
	je	SHORT $LN6@GlobalSetu
	mov	ecx, DWORD PTR $T16[ebp]
	call	??0C_Font@@QAE@XZ			; C_Font::C_Font
	mov	DWORD PTR tv233[ebp], eax
	jmp	SHORT $LN7@GlobalSetu
$LN6@GlobalSetu:
	mov	DWORD PTR tv233[ebp], 0
$LN7@GlobalSetu:
	mov	edx, DWORD PTR tv233[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR ?gFontList@@3PAVC_Font@@A, eax ; gFontList

; 1227 : 	gFontList->Setup(gMainHandler);

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?Setup@C_Font@@QAEXPAVC_Handler@@@Z	; C_Font::Setup

; 1228 : 
; 1229 : 	gAnimMgr=new C_Animation;

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T15[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T15[ebp], 0
	je	SHORT $LN8@GlobalSetu
	mov	ecx, DWORD PTR $T15[ebp]
	call	??0C_Animation@@QAE@XZ			; C_Animation::C_Animation
	mov	DWORD PTR tv242[ebp], eax
	jmp	SHORT $LN9@GlobalSetu
$LN8@GlobalSetu:
	mov	DWORD PTR tv242[ebp], 0
$LN9@GlobalSetu:
	mov	edx, DWORD PTR tv242[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A, eax ; gAnimMgr

; 1230 : 	gAnimMgr->Setup();

	mov	ecx, DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A ; gAnimMgr
	call	?Setup@C_Animation@@QAEXXZ		; C_Animation::Setup

; 1231 : 
; 1232 : 	gSoundMgr=new C_Sound;

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T14[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN10@GlobalSetu
	mov	ecx, DWORD PTR $T14[ebp]
	call	??0C_Sound@@QAE@XZ			; C_Sound::C_Sound
	mov	DWORD PTR tv250[ebp], eax
	jmp	SHORT $LN11@GlobalSetu
$LN10@GlobalSetu:
	mov	DWORD PTR tv250[ebp], 0
$LN11@GlobalSetu:
	mov	ecx, DWORD PTR tv250[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A, edx ; gSoundMgr

; 1233 : 	gSoundMgr->Setup();

	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?Setup@C_Sound@@QAEXXZ			; C_Sound::Setup

; 1234 : 
; 1235 : 	gStringMgr=new C_String;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN12@GlobalSetu
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0C_String@@QAE@XZ			; C_String::C_String
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN13@GlobalSetu
$LN12@GlobalSetu:
	mov	DWORD PTR tv258[ebp], 0
$LN13@GlobalSetu:
	mov	eax, DWORD PTR tv258[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR ?gStringMgr@@3PAVC_String@@A, ecx ; gStringMgr

; 1236 : 	gStringMgr->Setup(TXT_LAST_TEXT_ID);

	push	2000					; 000007d0H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?Setup@C_String@@QAEXJ@Z		; C_String::Setup

; 1237 : 
; 1238 : 	gPopupMgr=new C_PopupMgr;

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN14@GlobalSetu
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0C_PopupMgr@@QAE@XZ			; C_PopupMgr::C_PopupMgr
	mov	DWORD PTR tv267[ebp], eax
	jmp	SHORT $LN15@GlobalSetu
$LN14@GlobalSetu:
	mov	DWORD PTR tv267[ebp], 0
$LN15@GlobalSetu:
	mov	edx, DWORD PTR tv267[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A, eax ; gPopupMgr

; 1239 : 	gPopupMgr->Setup(gMainHandler);

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	push	ecx
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?Setup@C_PopupMgr@@QAEXPAVC_Handler@@@Z	; C_PopupMgr::Setup

; 1240 : 
; 1241 : 	gMovieMgr=new C_Movie;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN16@GlobalSetu
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0C_Movie@@QAE@XZ			; C_Movie::C_Movie
	mov	DWORD PTR tv276[ebp], eax
	jmp	SHORT $LN17@GlobalSetu
$LN16@GlobalSetu:
	mov	DWORD PTR tv276[ebp], 0
$LN17@GlobalSetu:
	mov	edx, DWORD PTR tv276[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A, eax ; gMovieMgr

; 1242 : 	gMovieMgr->Setup();

	mov	ecx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	call	?Setup@C_Movie@@QAEXXZ			; C_Movie::Setup

; 1243 : 
; 1244 : 	gMainParser=new C_Parser;

	push	964					; 000003c4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN18@GlobalSetu
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0C_Parser@@QAE@XZ			; C_Parser::C_Parser
	mov	DWORD PTR tv284[ebp], eax
	jmp	SHORT $LN19@GlobalSetu
$LN18@GlobalSetu:
	mov	DWORD PTR tv284[ebp], 0
$LN19@GlobalSetu:
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gMainParser@@3PAVC_Parser@@A, edx ; gMainParser

; 1245 : 	gMainParser->Setup(gMainHandler,gImageMgr,gFontList,gSoundMgr,gPopupMgr,gAnimMgr,gStringMgr,gMovieMgr);

	mov	eax, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	push	ecx
	mov	edx, DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A ; gAnimMgr
	push	edx
	mov	eax, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	push	eax
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	push	ecx
	mov	edx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	push	edx
	mov	eax, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	push	ecx
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?Setup@C_Parser@@QAEXPAVC_Handler@@PAVC_Image@@PAVC_Font@@PAVC_Sound@@PAVC_PopupMgr@@PAVC_Animation@@PAVC_String@@PAVC_Movie@@@Z ; C_Parser::Setup

; 1246 : 
; 1247 : 	gMainParser->SetCheck(0); // Used to find which IDs are NOT used

	push	0
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?SetCheck@C_Parser@@QAEXJ@Z		; C_Parser::SetCheck

; 1248 : 
; 1249 : 	gMainParser->LoadIDList("userids.lst");

	push	OFFSET ??_C@_0M@JJJGMAMN@userids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1250 : 	gMainParser->LoadIDList("fontids.lst");

	push	OFFSET ??_C@_0M@MNAGCLLA@fontids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1251 : 	gMainParser->LoadIDList("imageids.lst");

	push	OFFSET ??_C@_0N@FEILIJBL@imageids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1252 : 	gMainParser->LoadIDList("soundids.lst");

	push	OFFSET ??_C@_0N@MDKJFPLI@soundids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1253 : 	gMainParser->LoadIDList("textids.lst");

	push	OFFSET ??_C@_0M@OFDKPBPI@textids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1254 : 	gMainParser->LoadIDList("movieids.lst");

	push	OFFSET ??_C@_0N@OBANJMOJ@movieids?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadIDList@C_Parser@@QAEXPAD@Z		; C_Parser::LoadIDList

; 1255 : 
; 1256 : 	gMainParser->SetCheck(1); // Used to find which IDs are NOT used

	push	1
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?SetCheck@C_Parser@@QAEXJ@Z		; C_Parser::SetCheck

; 1257 : 
; 1258 : 	gMainParser->ParseFont("art\\fonts\\fontrc.irc");

	push	OFFSET ??_C@_0BF@KPBFLOPP@art?2fonts?2fontrc?4irc?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?ParseFont@C_Parser@@QAEPAVC_Font@@PAD@Z ; C_Parser::ParseFont

; 1259 : 
; 1260 : #ifdef DEBUG
; 1261 : 	if(gMainParser->FindID("TXT_LAST_TEXT_ID") > TXT_LAST_TEXT_ID)
; 1262 :         MessageBox( NULL, "String database Out of Date", "Update Art Directory - May crash in C_Hash", MB_OK );
; 1263 : #endif
; 1264 : 
; 1265 : 	gUBuffer=&gTrackBuffer[0];

	mov	edx, 1
	imul	edx, 0
	add	edx, OFFSET ?gTrackBuffer@@3PADA	; gTrackBuffer
	mov	DWORD PTR ?gUBuffer@@3PADA, edx		; gUBuffer

; 1266 : 
; 1267 : 	// This function goes through the class table searching for VIS IDs,
; 1268 : 	// and returns the array index of the Vis ID... only needs to happen ONCE per execute
; 1269 : 	ValidateRackData();

	call	?ValidateRackData@@YAXXZ		; ValidateRackData

; 1270 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GlobalSetup@@YAXXZ$0:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$1:
	mov	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$2:
	mov	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$3:
	mov	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$4:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$5:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$6:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GlobalSetup@@YAXXZ$7:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GlobalSetup@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GlobalSetup@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GlobalSetup@@YAXXZ ENDP				; GlobalSetup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?LoadMovieFiles@@YAXXZ PROC				; LoadMovieFiles

; 1029 : {

	push	ebp
	mov	ebp, esp

; 1030 : 
; 1031 : 	gMainParser->LoadMovieList("movies.lst");

	push	OFFSET ??_C@_0L@CFBEGEBG@movies?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadMovieList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadMovieList

; 1032 : }

	pop	ebp
	ret	0
?LoadMovieFiles@@YAXXZ ENDP				; LoadMovieFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?LoadStringFiles@@YAXXZ PROC				; LoadStringFiles

; 1023 : {

	push	ebp
	mov	ebp, esp

; 1024 : 	gMainParser->LoadStringList("strings.lst");

	push	OFFSET ??_C@_0M@IPFKCFBH@strings?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadStringList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadStringList

; 1025 : 	gMainParser->LoadStringList("OIR Art\\Menus\\strings.lst");//DLP load strings for OIR menus

	push	OFFSET ??_C@_0BK@GLBPPJCB@OIR?5Art?2Menus?2strings?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadStringList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadStringList

; 1026 : }

	pop	ebp
	ret	0
?LoadStringFiles@@YAXXZ ENDP				; LoadStringFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?LoadSoundFiles@@YAXXZ PROC				; LoadSoundFiles

; 1017 : {

	push	ebp
	mov	ebp, esp

; 1018 : 	gMainParser->LoadSoundList("sounds.lst");

	push	OFFSET ??_C@_0L@EMKLLFLD@sounds?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 1019 : 	gSoundMgr->SetFlags(SND_FLY,gSoundMgr->GetFlags(SND_FLY) ^ SOUND_STOPONEXIT);

	push	500003					; 0007a123H
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?GetFlags@C_Sound@@QAEJJ@Z		; C_Sound::GetFlags
	xor	eax, 2
	push	eax
	push	500003					; 0007a123H
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?SetFlags@C_Sound@@QAEXJJ@Z		; C_Sound::SetFlags

; 1020 : }

	pop	ebp
	ret	0
?LoadSoundFiles@@YAXXZ ENDP				; LoadSoundFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?LoadArtwork@@YAXXZ PROC				; LoadArtwork

; 1009 : {

	push	ebp
	mov	ebp, esp

; 1010 : 	if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN2@LoadArtwor

; 1011 : 		gMainParser->LoadImageList("resimgs.lst");//DLP resimgs.lst DNE

	push	OFFSET ??_C@_0M@BKMKBOKO@resimgs?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 1012 : 	else

	jmp	SHORT $LN3@LoadArtwor
$LN2@LoadArtwor:

; 1013 : 		gMainParser->LoadImageList("images.lst");//DLP images.lst DNE

	push	OFFSET ??_C@_0L@EMBDPKCD@images?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN3@LoadArtwor:

; 1014 : }

	pop	ebp
	ret	0
?LoadArtwork@@YAXXZ ENDP				; LoadArtwork
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?InfoGroupCB@@YAXJFPAVC_Base@@@Z PROC			; InfoGroupCB

; 995  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 996  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@InfoGroupC

; 997  : 		return;

	jmp	SHORT $LN2@InfoGroupC
$LN1@InfoGroupC:

; 998  : 
; 999  : 	F4CSECTIONHANDLE* Leave=UI_Enter(control->GetParent());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1000 : 	control->GetParent()->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1001 : 	control->GetParent()->HideCluster(control->GetUserNumber(2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1002 : 	control->GetParent()->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1003 : 	control->GetParent()->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	mov	ecx, eax
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 1004 : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@InfoGroupC:

; 1005 : 	
; 1006 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InfoGroupCB@@YAXJFPAVC_Base@@@Z ENDP			; InfoGroupCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenFontToolCB@@YAXJFPAVC_Base@@@Z PROC		; OpenFontToolCB

; 976  : {

	push	ebp
	mov	ebp, esp

; 977  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenFontTo

; 978  : 		return;

	jmp	SHORT $LN2@OpenFontTo
$LN1@OpenFontTo:

; 979  : 	InitFontTool();

	call	?InitFontTool@@YAXXZ			; InitFontTool

; 980  : 	gMainHandler->EnableWindowGroup(-100);

	push	-100					; ffffff9cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenFontTo:

; 981  : }

	pop	ebp
	ret	0
?OpenFontToolCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenFontToolCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenSetupCB@@YAXJFPAVC_Base@@@Z PROC			; OpenSetupCB

; 961  : {

	push	ebp
	mov	ebp, esp

; 962  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenSetupC

; 963  : 		return;

	jmp	SHORT $LN2@OpenSetupC
$LN1@OpenSetupC:

; 964  : 
; 965  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 966  : 	LoadSetupWindows();

	call	?LoadSetupWindows@@YAXXZ		; LoadSetupWindows

; 967  : 
; 968  : 	CloseAllRenderers(SETUP_WIN);

	push	70002					; 00011172H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 969  : 
; 970  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 971  : 	SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN2@OpenSetupC:

; 972  : }

	pop	ebp
	ret	0
?OpenSetupCB@@YAXJFPAVC_Base@@@Z ENDP			; OpenSetupCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenCommsCB@@YAXJFPAVC_Base@@@Z PROC			; OpenCommsCB

; 925  : {

	push	ebp
	mov	ebp, esp

; 926  : 	if(hittype != C_TYPE_LMOUSEUP){

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@OpenCommsC

; 927  : 		return;

	jmp	SHORT $LN4@OpenCommsC
$LN3@OpenCommsC:

; 928  : 	}
; 929  : 
; 930  : 	control->SetFlagBitOff(C_BIT_FORCEMOUSEOVER);

	push	16384					; 00004000H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 931  : 
; 932  : 	if(!gCommsMgr->Online()){

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN2@OpenCommsC

; 933  : 		gMainHandler->EnableWindowGroup(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 934  : 	}
; 935  : 	else

	jmp	SHORT $LN4@OpenCommsC
$LN2@OpenCommsC:

; 936  : 	{
; 937  : 		gMainHandler->EnableWindowGroup(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 938  : 		gNewMessage=FALSE;

	mov	DWORD PTR ?gNewMessage@@3HA, 0		; gNewMessage
$LN4@OpenCommsC:

; 939  : 	}
; 940  : }

	pop	ebp
	ret	0
?OpenCommsCB@@YAXJFPAVC_Base@@@Z ENDP			; OpenCommsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenMainCampaignCB@@YAXJFPAVC_Base@@@Z PROC		; OpenMainCampaignCB

; 888  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 889  : 	C_Button *btn;
; 890  : 	C_Window *win;
; 891  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@OpenMainCa

; 892  : 		return;

	jmp	$LN6@OpenMainCa
$LN5@OpenMainCa:

; 893  : 
; 894  : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 895  : 	LeaveCurrentGame();

	call	?LeaveCurrentGame@@YAXXZ		; LeaveCurrentGame

; 896  : 
; 897  : 	RuleMode = rCAMPAIGN;

	mov	DWORD PTR ?RuleMode@@3W4RulesModes@@A, 3 ; RuleMode

; 898  : 
; 899  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 900  : 	if(!CPSelectLoaded)

	cmp	DWORD PTR ?CPSelectLoaded@@3HA, 0	; CPSelectLoaded
	jne	SHORT $LN4@OpenMainCa

; 901  : 		LoadCampaignSelectWindows();

	call	?LoadCampaignSelectWindows@@YAXXZ	; LoadCampaignSelectWindows
$LN4@OpenMainCa:

; 902  : 
; 903  : 	if(MainLastGroup != 0 && MainLastGroup != control->GetGroup())

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	SHORT $LN3@OpenMainCa
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN3@OpenMainCa

; 904  : 	{
; 905  : 		gMainHandler->DisableWindowGroup(MainLastGroup);

	mov	eax, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN3@OpenMainCa:

; 906  : 	}
; 907  : 
; 908  : 	win=gMainHandler->FindWindow(CS_SELECT_WIN);

	push	40200					; 00009d08H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 909  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@OpenMainCa

; 910  : 	{
; 911  : 		btn=(C_Button*)win->FindControl(CS_NEW_CTRL);

	push	40203					; 00009d0bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 912  : 		if(btn && btn->GetState())

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@OpenMainCa
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN2@OpenMainCa

; 913  : 		{
; 914  : 			SetCampaignSelectCB(CS_NEW_CTRL,C_TYPE_LMOUSEUP,btn);

	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	push	52					; 00000034H
	push	40203					; 00009d0bH
	call	?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z ; SetCampaignSelectCB
	add	esp, 12					; 0000000cH

; 915  : 			SelectScenarioCB(CS_LOAD_SCENARIO1,C_TYPE_LMOUSEUP,NULL);

	push	0
	push	52					; 00000034H
	push	40900					; 00009fc4H
	call	?SelectScenarioCB@@YAXJFPAVC_Base@@@Z	; SelectScenarioCB
	add	esp, 12					; 0000000cH
$LN2@OpenMainCa:

; 916  : 		}
; 917  : 	}
; 918  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 919  : 	MainLastGroup=control->GetGroup();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	mov	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup

; 920  : 
; 921  : 	SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN6@OpenMainCa:

; 922  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenMainCampaignCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenMainCampaignCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenTacticalCB@@YAXJFPAVC_Base@@@Z PROC		; OpenTacticalCB

; 862  : {

	push	ebp
	mov	ebp, esp

; 863  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@OpenTactic

; 864  : 		return;

	jmp	$LN5@OpenTactic
$LN4@OpenTactic:

; 865  : 
; 866  : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 867  : 	LeaveCurrentGame();

	call	?LeaveCurrentGame@@YAXXZ		; LeaveCurrentGame

; 868  : 
; 869  : 	RuleMode = rTACTICAL_ENGAGEMENT;

	mov	DWORD PTR ?RuleMode@@3W4RulesModes@@A, 2 ; RuleMode

; 870  : 	TheCampaign.Flags |= CAMP_TACTICAL;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	or	ecx, 1024				; 00000400H
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, ecx

; 871  : 
; 872  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	edx, 4
	imul	edx, 19					; 00000013H
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 873  : 	if(!TACSelLoaded)

	cmp	DWORD PTR ?TACSelLoaded@@3HA, 0		; TACSelLoaded
	jne	SHORT $LN3@OpenTactic

; 874  : 		LoadTacEngSelectWindows();

	call	?LoadTacEngSelectWindows@@YAXXZ		; LoadTacEngSelectWindows
$LN3@OpenTactic:

; 875  : 
; 876  : 	if(MainLastGroup != 0 && MainLastGroup != control->GetGroup())

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	SHORT $LN2@OpenTactic
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN2@OpenTactic

; 877  : 		gMainHandler->DisableWindowGroup(MainLastGroup);

	mov	ecx, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@OpenTactic:

; 878  : 
; 879  : 	if(MainLastGroup != control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN1@OpenTactic

; 880  : 	{
; 881  : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 882  : 		MainLastGroup=control->GetGroup();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	mov	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
$LN1@OpenTactic:

; 883  : 	}
; 884  : 	SetCursor(gCursors[CRSR_F16]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4
$LN5@OpenTactic:

; 885  : }

	pop	ebp
	ret	0
?OpenTacticalCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenTacticalCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenDogFightCB@@YAXJFPAVC_Base@@@Z PROC		; OpenDogFightCB

; 833  : {

	push	ebp
	mov	ebp, esp

; 834  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@OpenDogFig

; 835  : 		return;

	jmp	$LN5@OpenDogFig
$LN4@OpenDogFig:

; 836  : 
; 837  : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 838  : 	LeaveCurrentGame();

	call	?LeaveCurrentGame@@YAXXZ		; LeaveCurrentGame

; 839  : 
; 840  : 	RuleMode = rDOGFIGHT;

	mov	DWORD PTR ?RuleMode@@3W4RulesModes@@A, 1 ; RuleMode

; 841  : 
; 842  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 843  : 	if(!DFLoaded)

	cmp	DWORD PTR ?DFLoaded@@3HA, 0		; DFLoaded
	jne	SHORT $LN3@OpenDogFig

; 844  : 		LoadDogFightWindows();

	call	?LoadDogFightWindows@@YAXXZ		; LoadDogFightWindows
$LN3@OpenDogFig:

; 845  : 
; 846  : 	if(MainLastGroup != 0 && MainLastGroup != control->GetGroup())

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	SHORT $LN2@OpenDogFig
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN2@OpenDogFig

; 847  : 	{
; 848  : 		gMainHandler->DisableWindowGroup(MainLastGroup);

	mov	eax, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@OpenDogFig:

; 849  : 	}
; 850  : 
; 851  : 	if(MainLastGroup != control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN1@OpenDogFig

; 852  : 	{
; 853  : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 854  : 		MainLastGroup=control->GetGroup();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	mov	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
$LN1@OpenDogFig:

; 855  : 	}
; 856  : 
; 857  : 	SetCursor(gCursors[CRSR_F16]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4
$LN5@OpenDogFig:

; 858  : }

	pop	ebp
	ret	0
?OpenDogFightCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenDogFightCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenInstantActionCB@@YAXJFPAVC_Base@@@Z PROC		; OpenInstantActionCB

; 806  : {

	push	ebp
	mov	ebp, esp

; 807  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@OpenInstan

; 808  : 		return;

	jmp	$LN5@OpenInstan
$LN4@OpenInstan:

; 809  : 
; 810  : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 811  : 	LeaveCurrentGame();

	call	?LeaveCurrentGame@@YAXXZ		; LeaveCurrentGame

; 812  : 
; 813  : 	RuleMode = rINSTANT_ACTION;

	mov	DWORD PTR ?RuleMode@@3W4RulesModes@@A, 0 ; RuleMode

; 814  : 
; 815  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 816  : 	if(!IALoaded)

	cmp	DWORD PTR ?IALoaded@@3HA, 0		; IALoaded
	jne	SHORT $LN3@OpenInstan

; 817  : 		LoadInstantActionWindows();

	call	?LoadInstantActionWindows@@YAXXZ	; LoadInstantActionWindows
$LN3@OpenInstan:

; 818  : 
; 819  : 	if(MainLastGroup != 0 && MainLastGroup != control->GetGroup())

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	SHORT $LN2@OpenInstan
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN2@OpenInstan

; 820  : 	{
; 821  : 		gMainHandler->DisableWindowGroup(MainLastGroup);

	mov	eax, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@OpenInstan:

; 822  : 	}
; 823  : 
; 824  : 	if(MainLastGroup != control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN1@OpenInstan

; 825  : 	{
; 826  : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 827  : 		MainLastGroup=control->GetGroup();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	mov	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
$LN1@OpenInstan:

; 828  : 	}
; 829  : 	SetCursor(gCursors[CRSR_F16]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4
$LN5@OpenInstan:

; 830  : }

	pop	ebp
	ret	0
?OpenInstantActionCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenInstantActionCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?EnableScenarioInfo@@YAXJ@Z PROC			; EnableScenarioInfo

; 766  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 767  : 	C_Window *win;
; 768  : 	C_Base*  ctrl;
; 769  : 
; 770  : 	gMainHandler->EnableWindowGroup(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 771  : 	win=gMainHandler->FindWindow(CS_TOOLBAR_WIN);

	push	40500					; 00009e34H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 772  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN6@EnableScen

; 773  : 	{
; 774  : 		ctrl=win->FindControl(SINGLE_COMMIT_CTRL);

	push	2000002					; 001e8482H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 775  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@EnableScen

; 776  : 		{
; 777  : 			ctrl->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 778  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@EnableScen:

; 779  : 		}
; 780  : 		ctrl=win->FindControl(COMMS_COMMIT_CTRL);

	push	2000003					; 001e8483H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 781  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@EnableScen

; 782  : 		{
; 783  : 			ctrl->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 784  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@EnableScen:

; 785  : 		}
; 786  : 	}
; 787  : 	win=gMainHandler->FindWindow(TAC_LOAD_TOOLBAR);

	push	30209					; 00007601H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 788  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@EnableScen

; 789  : 	{
; 790  : 		ctrl=win->FindControl(SINGLE_COMMIT_CTRL);

	push	2000002					; 001e8482H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 791  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@EnableScen

; 792  : 		{
; 793  : 			ctrl->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 794  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@EnableScen:

; 795  : 		}
; 796  : 		ctrl=win->FindControl(COMMS_COMMIT_CTRL);

	push	2000003					; 001e8483H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 797  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@EnableScen

; 798  : 		{
; 799  : 			ctrl->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 800  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@EnableScen:

; 801  : 		}
; 802  : 	}
; 803  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EnableScenarioInfo@@YAXJ@Z ENDP			; EnableScenarioInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_ctrl$ = -4						; size = 4
?DisableScenarioInfo@@YAXXZ PROC			; DisableScenarioInfo

; 725  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 726  : 	C_Window *win;
; 727  : 	C_Base *ctrl;
; 728  : 
; 729  : 	gMainHandler->DisableWindowGroup(3050);

	push	3050					; 00000beaH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 730  : 	gMainHandler->DisableWindowGroup(4050);

	push	4050					; 00000fd2H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 731  : 	win=gMainHandler->FindWindow(CS_TOOLBAR_WIN);

	push	40500					; 00009e34H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 732  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN6@DisableSce

; 733  : 	{
; 734  : 		ctrl=win->FindControl(SINGLE_COMMIT_CTRL);

	push	2000002					; 001e8482H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 735  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@DisableSce

; 736  : 		{
; 737  : 			ctrl->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 738  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@DisableSce:

; 739  : 		}
; 740  : 		ctrl=win->FindControl(COMMS_COMMIT_CTRL);

	push	2000003					; 001e8483H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 741  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@DisableSce

; 742  : 		{
; 743  : 			ctrl->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 744  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@DisableSce:

; 745  : 		}
; 746  : 	}
; 747  : 	win=gMainHandler->FindWindow(TAC_LOAD_TOOLBAR);

	push	30209					; 00007601H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 748  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@DisableSce

; 749  : 	{
; 750  : 		ctrl=win->FindControl(SINGLE_COMMIT_CTRL);

	push	2000002					; 001e8482H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 751  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@DisableSce

; 752  : 		{
; 753  : 			ctrl->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 754  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@DisableSce:

; 755  : 		}
; 756  : 		ctrl=win->FindControl(COMMS_COMMIT_CTRL);

	push	2000003					; 001e8483H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 757  : 		if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@DisableSce

; 758  : 		{
; 759  : 			ctrl->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 760  : 			ctrl->Refresh();

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@DisableSce:

; 761  : 		}
; 762  : 	}
; 763  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisableScenarioInfo@@YAXXZ ENDP			; DisableScenarioInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
?StartUITracking@@YAXXZ PROC				; StartUITracking

; 720  : {

	push	ebp
	mov	ebp, esp

; 721  : 	strcpy(gTrackBuffer,gCommsMgr->GetUserInfo());

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetUserInfo@UIComms@@QAEPADXZ		; UIComms::GetUserInfo
	push	eax
	push	OFFSET ?gTrackBuffer@@3PADA		; gTrackBuffer
	call	_strcpy
	add	esp, 8

; 722  : }

	pop	ebp
	ret	0
?StartUITracking@@YAXXZ ENDP				; StartUITracking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?MinMaxWindowCB@@YAXJFPAVC_Base@@@Z PROC		; MinMaxWindowCB

; 709  : {

	push	ebp
	mov	ebp, esp

; 710  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@MinMaxWind

; 711  : 		return;

	jmp	SHORT $LN4@MinMaxWind
$LN3@MinMaxWind:

; 712  : 
; 713  : 	if(control->Parent_->Minimized())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Minimized@C_Window@@QAEHXZ		; C_Window::Minimized
	test	eax, eax
	je	SHORT $LN2@MinMaxWind

; 714  : 		control->Parent_->Maximize();

	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?Maximize@C_Window@@QAEXXZ		; C_Window::Maximize

; 715  : 	else

	jmp	SHORT $LN4@MinMaxWind
$LN2@MinMaxWind:

; 716  : 		control->Parent_->Minimize();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?Minimize@C_Window@@QAEXXZ		; C_Window::Minimize
$LN4@MinMaxWind:

; 717  : }

	pop	ebp
	ret	0
?MinMaxWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; MinMaxWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ExitButtonCB@@YAXJFPAVC_Base@@@Z PROC			; ExitButtonCB

; 670  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 671  : 	C_Window *win;
; 672  : 
; 673  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@ExitButton

; 674  : 		return;

	jmp	SHORT $LN3@ExitButton
$LN2@ExitButton:

; 675  : 
; 676  : 
; 677  : 	win=gMainHandler->FindWindow(EXIT_WIN);

	push	19550					; 00004c5eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 678  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@ExitButton

; 679  : 		win->VY_[1]=win->ClientArea_[1].top;

	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [esi+ecx+172]
	mov	DWORD PTR [eax+edx+512], ecx
$LN1@ExitButton:

; 680  : //	gMainHandler->SetOutputDelay(40);
; 681  : //	gMainHandler->SetControlDelay(40);
; 682  : 	ExitVerify(TXT_EXIT_GAME,ExitTheGameCB,ExitCloseWindowCB);

	push	OFFSET ?ExitCloseWindowCB@@YAXJFPAVC_Base@@@Z ; ExitCloseWindowCB
	push	OFFSET ?ExitTheGameCB@@YAXJFPAVC_Base@@@Z ; ExitTheGameCB
	push	244					; 000000f4H
	call	?ExitVerify@@YAXJP6AXJFPAVC_Base@@@Z1@Z	; ExitVerify
	add	esp, 12					; 0000000cH
$LN3@ExitButton:

; 683  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?ExitButtonCB@@YAXJFPAVC_Base@@@Z ENDP			; ExitButtonCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ExitCloseWindowCB@@YAXJFPAVC_Base@@@Z PROC		; ExitCloseWindowCB

; 654  : {

	push	ebp
	mov	ebp, esp

; 655  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@ExitCloseW

; 656  : 		return;

	jmp	SHORT $LN4@ExitCloseW
$LN3@ExitCloseW:

; 657  : 
; 658  : //	gMainHandler->SetOutputDelay(80);
; 659  : //	gMainHandler->SetControlDelay(80);
; 660  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	SHORT $LN4@ExitCloseW

; 661  : 	{
; 662  : 		gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 663  : 
; 664  : 		if(MainLastGroup == control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	jne	SHORT $LN4@ExitCloseW

; 665  : 			MainLastGroup=0;

	mov	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
$LN4@ExitCloseW:

; 666  : 	}
; 667  : }

	pop	ebp
	ret	0
?ExitCloseWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; ExitCloseWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ExitTheGameCB@@YAXJFPAVC_Base@@@Z PROC			; ExitTheGameCB

; 628  : {

	push	ebp
	mov	ebp, esp

; 629  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@ExitTheGam

; 630  : 		return;

	jmp	SHORT $LN3@ExitTheGam
$LN2@ExitTheGam:

; 631  : //Cobra 12/29/04 Attempt to shut down comms if someone exits but forgot to shut down comms 
; 632  : 	if(gCommsMgr->Online()){

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@ExitTheGam

; 633  : 		gCommsMgr->StopComms();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?StopComms@UIComms@@QAEXXZ		; UIComms::StopComms
$LN1@ExitTheGam:

; 634  : 	}
; 635  : 
; 636  : /*	if (skycolor)
; 637  : 		delete [] skycolor;
; 638  : 	if (weatherPatternData)
; 639  : 		delete [] weatherPatternData;
; 640  : */
; 641  : 
; 642  : #ifdef DEBUG
; 643  : 	ShowCursor(TRUE); // Turn on mouse cursor for small window
; 644  : #endif
; 645  : 
; 646  : 	g_intellivibeData.IsExitGame = true;

	mov	BYTE PTR ?g_intellivibeData@@3VIntellivibeData@@A+20, 1

; 647  : 	memcpy (gSharedIntellivibe, &g_intellivibeData, sizeof(g_intellivibeData));

	push	52					; 00000034H
	push	OFFSET ?g_intellivibeData@@3VIntellivibeData@@A ; g_intellivibeData
	mov	ecx, DWORD PTR ?gSharedIntellivibe@@3PAXA ; gSharedIntellivibe
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 648  : 
; 649  : 	// PostMessage(gMainHandler->GetAppWnd(),FM_END_UI,0,0);
; 650  : 	PostMessage(gMainHandler->GetAppWnd(),FM_EXIT_GAME,0,0);

	push	0
	push	0
	push	1026					; 00000402H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN3@ExitTheGam:

; 651  : }

	pop	ebp
	ret	0
?ExitTheGameCB@@YAXJFPAVC_Base@@@Z ENDP			; ExitTheGameCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_ID$ = -4						; size = 4
?LoadMainWindow@@YAXXZ PROC				; LoadMainWindow

; 590  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 591  : 	long ID;
; 592  : 
; 593  : 	if(MainLoaded) return;

	cmp	DWORD PTR ?MainLoaded@@3HA, 0		; MainLoaded
	je	SHORT $LN5@LoadMainWi
	jmp	$LN6@LoadMainWi
$LN5@LoadMainWi:

; 594  : 
; 595  : 	if( _LOAD_ART_RESOURCES_ ){

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN4@LoadMainWi

; 596  : 		gMainParser->LoadImageList("main_res.lst");

	push	OFFSET ??_C@_0N@OLFHAIAG@main_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 597  : 	}
; 598  : 	else{

	jmp	SHORT $LN3@LoadMainWi
$LN4@LoadMainWi:

; 599  : 		gMainParser->LoadImageList("main_art.lst");	// these aren't loaded anymore

	push	OFFSET ??_C@_0N@KGBPKMDG@main_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN3@LoadMainWi:

; 600  : 	}
; 601  : 	gMainParser->LoadSoundList("main_snd.lst");

	push	OFFSET ??_C@_0N@DLCJGOEB@main_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 602  : 	gMainParser->LoadWindowList("main_scf.lst"); // Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0N@BHDGKOIK@main_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 603  : 
; 604  : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN2@LoadMainWi:

; 605  : 	while(ID){

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN1@LoadMainWi

; 606  : 		HookupControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupControls@@YAXJ@Z			; HookupControls
	add	esp, 4

; 607  : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 608  : 	}

	jmp	SHORT $LN2@LoadMainWi
$LN1@LoadMainWi:

; 609  : 	gMainParser->LoadPopupMenuList("art\\pop_scf.lst");

	push	OFFSET ??_C@_0BA@KCEJAGAJ@art?2pop_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadPopupMenuList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadPopupMenuList

; 610  : 	HookupDogFightMenus();

	call	?HookupDogFightMenus@@YAXXZ		; HookupDogFightMenus

; 611  : 	HookupCampaignMenus();

	call	?HookupCampaignMenus@@YAXXZ		; HookupCampaignMenus

; 612  : 	LoadPeopleInfo(1); //VP_changes This should be modified

	push	1
	call	?LoadPeopleInfo@@YAXJ@Z			; LoadPeopleInfo
	add	esp, 4

; 613  : 	MainLoaded++;

	mov	ecx, DWORD PTR ?MainLoaded@@3HA		; MainLoaded
	add	ecx, 1
	mov	DWORD PTR ?MainLoaded@@3HA, ecx		; MainLoaded

; 614  : 	gUBuffer=&gTrackBuffer[0];

	mov	edx, 1
	imul	edx, 0
	add	edx, OFFSET ?gTrackBuffer@@3PADA	; gTrackBuffer
	mov	DWORD PTR ?gUBuffer@@3PADA, edx		; gUBuffer
$LN6@LoadMainWi:

; 615  : 	
; 616  : 	//Display the version on the main screen
; 617  : 	/*C_Window *win = gMainHandler->FindWindow(UI_MAIN_SCREEN);
; 618  : 	C_Text *txt=new C_Text;
; 619  : 	txt->Setup(C_DONT_CARE,0);
; 620  : 	txt->SetFont(BANK_GOTHIC_16);
; 621  : 	txt->SetFGColor(0x00ffffff);
; 622  : 	txt->SetXY(800,745);
; 623  : 	txt->SetText(gStringMgr->AddText(sVersion));
; 624  : 	win->AddControl(txt);*/
; 625  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadMainWindow@@YAXXZ ENDP				; LoadMainWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
tv79 = -8						; size = 4
tv76 = -4						; size = 4
?LeaveCurrentGame@@YAXXZ PROC				; LeaveCurrentGame

; 517  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 518  : //	KCK: This needs to NOT be here.
; 519  : //	if (!FalconLocalGame)
; 520  : //		return;
; 521  : 
; 522  : 	switch(FalconLocalGame->GetGameType())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@LeaveCurre
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN9@LeaveCurre
$LN8@LeaveCurre:
	mov	DWORD PTR tv76[ebp], 0
$LN9@LeaveCurre:
	mov	ecx, DWORD PTR tv76[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	DWORD PTR tv79[ebp], eax
	cmp	DWORD PTR tv79[ebp], 2
	je	SHORT $LN3@LeaveCurre
	cmp	DWORD PTR tv79[ebp], 4
	je	SHORT $LN1@LeaveCurre
	jmp	SHORT $LN2@LeaveCurre
$LN3@LeaveCurre:

; 523  : 	{
; 524  : 		case game_Dogfight:
; 525  : 			SendMessage(FalconDisplay.appWin,FM_SHUTDOWN_CAMPAIGN,0,0);

	push	0
	push	0
	push	1042					; 00000412H
	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16

; 526  : 			LeaveDogfight();

	call	?LeaveDogfight@@YAXXZ			; LeaveDogfight

; 527  : 			break;

	jmp	SHORT $LN6@LeaveCurre
$LN2@LeaveCurre:

; 528  : 		case game_InstantAction:
; 529  : 		case game_TacticalEngagement:
; 530  : 		default:
; 531  : 			SendMessage(FalconDisplay.appWin,FM_SHUTDOWN_CAMPAIGN,0,0);

	push	0
	push	0
	push	1042					; 00000412H
	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	call	DWORD PTR __imp__SendMessageA@16

; 532  : 			TheCampaign.Flags &= ~CAMP_TACTICAL;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, -1025				; fffffbffH
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, eax

; 533  : 			TheCampaign.Flags &= ~CAMP_TACTICAL_EDIT;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, -524289				; fff7ffffH
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, ecx

; 534  : 			break;

	jmp	SHORT $LN6@LeaveCurre
$LN1@LeaveCurre:

; 535  : 		case game_Campaign:
; 536  : 			SendMessage(FalconDisplay.appWin,FM_SHUTDOWN_CAMPAIGN,0,0);

	push	0
	push	0
	push	1042					; 00000412H
	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
$LN6@LeaveCurre:

; 537  : 			break;
; 538  : 	}
; 539  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LeaveCurrentGame@@YAXXZ ENDP				; LeaveCurrentGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_btn$ = -8						; size = 4
_win$ = -4						; size = 4
_openID$ = 8						; size = 4
?CloseAllRenderers@@YAXJ@Z PROC				; CloseAllRenderers

; 463  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 464  : 	C_Window *win;
; 465  : 	C_Button *btn;
; 466  : 
; 467  : 	if(gMainHandler->GetWindowFlags(openID) & C_BIT_ENABLED)

	mov	eax, DWORD PTR _openID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN12@CloseAllRe

; 468  : 		return;

	jmp	$LN13@CloseAllRe
$LN12@CloseAllRe:

; 469  : 
; 470  : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 471  : 	if(openID != RECON_WIN && openID != RECON_LIST_WIN)

	cmp	DWORD PTR _openID$[ebp], 18000		; 00004650H
	je	$LN11@CloseAllRe
	cmp	DWORD PTR _openID$[ebp], 18351		; 000047afH
	je	$LN11@CloseAllRe

; 472  : 	{
; 473  : 		win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 474  : 		if(win && (gMainHandler->GetWindowFlags(RECON_WIN) & C_BIT_ENABLED))

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN10@CloseAllRe
	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN10@CloseAllRe

; 475  : 		{
; 476  : 			btn=(C_Button*)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 477  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN10@CloseAllRe

; 478  : 				CloseReconWindowCB(CLOSE_WINDOW,C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	push	80001					; 00013881H
	call	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z	; CloseReconWindowCB
	add	esp, 12					; 0000000cH
$LN10@CloseAllRe:

; 479  : 		}
; 480  : 		win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 481  : 		if(win && (gMainHandler->GetWindowFlags(RECON_LIST_WIN) & C_BIT_ENABLED))

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN11@CloseAllRe
	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN11@CloseAllRe

; 482  : 		{
; 483  : 			btn=(C_Button*)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 484  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN11@CloseAllRe

; 485  : 				CloseReconWindowCB(CLOSE_WINDOW,C_TYPE_LMOUSEUP,btn);

	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	push	52					; 00000034H
	push	80001					; 00013881H
	call	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z	; CloseReconWindowCB
	add	esp, 12					; 0000000cH
$LN11@CloseAllRe:

; 486  : 		}
; 487  : 	}
; 488  : 
; 489  : 	win=gMainHandler->FindWindow(MUNITIONS_WIN);

	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 490  : 	if(win && (gMainHandler->GetWindowFlags(MUNITIONS_WIN) & C_BIT_ENABLED))

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN6@CloseAllRe
	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN6@CloseAllRe

; 491  : 	{
; 492  : 		btn=(C_Button*)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 493  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@CloseAllRe

; 494  : 			CloseMunitionsWindowCB(CLOSE_WINDOW,C_TYPE_LMOUSEUP,btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	push	52					; 00000034H
	push	80001					; 00013881H
	call	?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ; CloseMunitionsWindowCB
	add	esp, 12					; 0000000cH
$LN6@CloseAllRe:

; 495  : 	}
; 496  : 
; 497  : 	win=gMainHandler->FindWindow(SETUP_WIN);

	push	70002					; 00011172H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 498  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@CloseAllRe

; 499  : 	{
; 500  : 		btn=(C_Button*)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 501  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@CloseAllRe

; 502  : 			CloseSetupWindowCB(CLOSE_WINDOW,C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	push	80001					; 00013881H
	call	?CloseSetupWindowCB@@YAXJFPAVC_Base@@@Z	; CloseSetupWindowCB
	add	esp, 12					; 0000000cH
$LN4@CloseAllRe:

; 503  : 	}
; 504  : 
; 505  : 	win=gMainHandler->FindWindow(TAC_REF_WIN);

	push	8000					; 00001f40H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 506  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CloseAllRe

; 507  : 	{
; 508  : 		btn=(C_Button*)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 509  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@CloseAllRe

; 510  : 			TACREFCloseWindowCB(CLOSE_WINDOW,C_TYPE_LMOUSEUP,btn);

	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	push	52					; 00000034H
	push	80001					; 00013881H
	call	?TACREFCloseWindowCB@@YAXJFPAVC_Base@@@Z ; TACREFCloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@CloseAllRe:

; 511  : 	}
; 512  : 	CloseACMI();

	call	?CloseACMI@@YAXXZ			; CloseACMI

; 513  : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN13@CloseAllRe:

; 514  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseAllRenderers@@YAXJ@Z ENDP				; CloseAllRenderers
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?GenericCloseWindowCB@@YAXJFPAVC_Base@@@Z PROC		; GenericCloseWindowCB

; 701  : {

	push	ebp
	mov	ebp, esp

; 702  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@GenericClo

; 703  : 		return;

	jmp	SHORT $LN2@GenericClo
$LN1@GenericClo:

; 704  : 
; 705  : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN2@GenericClo:

; 706  : }

	pop	ebp
	ret	0
?GenericCloseWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; GenericCloseWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TheaterButtonCB@@YAXJFPAVC_Base@@@Z PROC		; TheaterButtonCB

; 2124 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2125 :     static bool theatersetupdone = false;
; 2126 :     if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@TheaterBut

; 2127 : 	return;

	jmp	$LN4@TheaterBut
$LN3@TheaterBut:

; 2128 :     C_Window *win;
; 2129 :     win=gMainHandler->FindWindow(UI_THEATER_WINDOW);

	push	300101					; 00049445H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2130 :     if(win == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN2@TheaterBut

; 2131 : 	return;

	jmp	$LN4@TheaterBut
$LN2@TheaterBut:

; 2132 : 
; 2133 :     DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 2134 :     LeaveCurrentGame();

	call	?LeaveCurrentGame@@YAXXZ		; LeaveCurrentGame

; 2135 : 
; 2136 :     if(MainLastGroup != 0 && MainLastGroup != control->GetGroup())

	cmp	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
	je	SHORT $LN1@TheaterBut
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	je	SHORT $LN1@TheaterBut

; 2137 :     {
; 2138 : 	gMainHandler->DisableWindowGroup(MainLastGroup);

	mov	ecx, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN1@TheaterBut:

; 2139 :     }
; 2140 :     MainLastGroup = 0;

	mov	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup

; 2141 : #if 0    
; 2142 :     if(MainLastGroup != control->GetGroup())
; 2143 :     {
; 2144 : 	gMainHandler->EnableWindowGroup(control->GetGroup());
; 2145 : 	MainLastGroup=control->GetGroup();
; 2146 :     }
; 2147 : #endif
; 2148 :     
; 2149 :     LoadTheaterWindows(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?LoadTheaterWindows@@YAXPAVC_Window@@@Z	; LoadTheaterWindows
	add	esp, 4

; 2150 :     SelectTheater(NULL);

	push	0
	call	?SelectTheater@@YAXPAUTheaterDef@@@Z	; SelectTheater
	add	esp, 4

; 2151 :     LoadAllTheaters(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?LoadAllTheaters@@YAXPAVC_Window@@@Z	; LoadAllTheaters
	add	esp, 4

; 2152 :     win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 2153 :     gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 2154 :     gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN4@TheaterBut:

; 2155 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TheaterButtonCB@@YAXJFPAVC_Base@@@Z ENDP		; TheaterButtonCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_nID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z PROC	; OpenTacticalReferenceCB

; 943  : {

	push	ebp
	mov	ebp, esp

; 944  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@OpenTactic

; 945  : 		return;

	jmp	SHORT $LN4@OpenTactic
$LN3@OpenTactic:

; 946  : 
; 947  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 948  : 	if(!TACREFLoaded)

	cmp	DWORD PTR ?TACREFLoaded@@3HA, 0		; TACREFLoaded
	jne	SHORT $LN2@OpenTactic

; 949  : 		LoadTacticalReferenceWindows();

	call	?LoadTacticalReferenceWindows@@YAXXZ	; LoadTacticalReferenceWindows
$LN2@OpenTactic:

; 950  : 
; 951  : 	CloseAllRenderers(TAC_REF_WIN);

	push	8000					; 00001f40H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 952  : 
; 953  : 	if(TacRef_Setup())

	call	?TacRef_Setup@@YAHXZ			; TacRef_Setup
	test	eax, eax
	je	SHORT $LN1@OpenTactic

; 954  : 	{
; 955  : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN1@OpenTactic:

; 956  : 	}
; 957  : 	SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN4@OpenTactic:

; 958  : }

	pop	ebp
	ret	0
?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z ENDP	; OpenTacticalReferenceCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseWindowCB@@YAXJFPAVC_Base@@@Z PROC			; CloseWindowCB

; 686  : {

	push	ebp
	mov	ebp, esp

; 687  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CloseWindo

; 688  : 		return;

	jmp	SHORT $LN4@CloseWindo
$LN3@CloseWindo:

; 689  : 
; 690  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	SHORT $LN4@CloseWindo

; 691  : 	{
; 692  : 		gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 693  : 
; 694  : 		if(MainLastGroup == control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?MainLastGroup@@3HA, eax	; MainLastGroup
	jne	SHORT $LN4@CloseWindo

; 695  : 			MainLastGroup=0;

	mov	DWORD PTR ?MainLastGroup@@3HA, 0	; MainLastGroup
$LN4@CloseWindo:

; 696  : 	}
; 697  : 	
; 698  : }

	pop	ebp
	ret	0
?CloseWindowCB@@YAXJFPAVC_Base@@@Z ENDP			; CloseWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
$T1 = -240						; size = 4
tv131 = -236						; size = 4
tv317 = -232						; size = 4
tv160 = -228						; size = 4
$T2 = -224						; size = 4
tv174 = -220						; size = 4
tv310 = -216						; size = 4
tv146 = -212						; size = 4
$T3 = -208						; size = 4
tv78 = -204						; size = 4
tv303 = -200						; size = 4
tv167 = -196						; size = 4
$T4 = -192						; size = 4
tv153 = -188						; size = 4
tv295 = -184						; size = 4
tv137 = -180						; size = 4
$T5 = -176						; size = 4
tv92 = -172						; size = 4
tv219 = -168						; size = 4
$T6 = -164						; size = 4
$T7 = -160						; size = 4
$T8 = -156						; size = 4
tv210 = -152						; size = 4
$T9 = -148						; size = 4
$T10 = -144						; size = 4
$T11 = -140						; size = 4
tv203 = -136						; size = 4
$T12 = -132						; size = 4
$T13 = -128						; size = 4
$T14 = -124						; size = 4
tv196 = -120						; size = 4
$T15 = -116						; size = 4
$T16 = -112						; size = 4
$T17 = -108						; size = 4
tv189 = -104						; size = 4
$T18 = -100						; size = 4
$T19 = -96						; size = 4
tv182 = -92						; size = 4
$T20 = -88						; size = 4
$T21 = -84						; size = 4
$T22 = -80						; size = 4
$T23 = -76						; size = 4
$T24 = -72						; size = 4
$T25 = -68						; size = 4
$T26 = -64						; size = 4
$T27 = -60						; size = 4
$T28 = -56						; size = 4
$T29 = -52						; size = 4
$T30 = -48						; size = 4
$T31 = -44						; size = 4
$T32 = -40						; size = 4
$T33 = -36						; size = 4
$T34 = -32						; size = 4
$T35 = -28						; size = 4
$T36 = -24						; size = 4
$T37 = -20						; size = 4
$T38 = -16						; size = 4
_mgr$39 = -12						; size = 4
$T40 = -8						; size = 4
_i$ = -4						; size = 4
?UI_Cleanup@@YAXXZ PROC					; UI_Cleanup

; 1697 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H

; 1698 : 	int i;
; 1699 : 
; 1700 : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 1701 : 	if(UI_VuThread)

	cmp	DWORD PTR ?UI_VuThread@@3PAVVuThread@@A, 0 ; UI_VuThread
	je	SHORT $LN35@UI_Cleanup

; 1702 : 	{
; 1703 : 		delete UI_VuThread;

	mov	edx, DWORD PTR ?UI_VuThread@@3PAVVuThread@@A ; UI_VuThread
	mov	DWORD PTR $T14[ebp], edx
	mov	eax, DWORD PTR $T14[ebp]
	mov	DWORD PTR $T40[ebp], eax
	cmp	DWORD PTR $T40[ebp], 0
	je	SHORT $LN38@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T40[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T40[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN39@UI_Cleanup
$LN38@UI_Cleanup:
	mov	DWORD PTR tv78[ebp], 0
$LN39@UI_Cleanup:

; 1704 : 		UI_VuThread=NULL;

	mov	DWORD PTR ?UI_VuThread@@3PAVVuThread@@A, 0 ; UI_VuThread
$LN35@UI_Cleanup:

; 1705 : 	}
; 1706 : 
; 1707 : 	if(gCommsMgr)

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN34@UI_Cleanup

; 1708 : 		for(i=0;i<game_MaxGameTypes;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN33@UI_Cleanup
$LN32@UI_Cleanup:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN33@UI_Cleanup:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN34@UI_Cleanup

; 1709 : 			gCommsMgr->SetCallback(i,NULL); // Disable callbacks we don't care about when NOT in the UI

	push	0
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SetCallback@UIComms@@QAEXHP6AXFVVU_ID@@0@Z@Z ; UIComms::SetCallback
	jmp	SHORT $LN32@UI_Cleanup
$LN34@UI_Cleanup:

; 1710 : 
; 1711 : // End Event Loop
; 1712 : 	Sleep(10);

	push	10					; 0000000aH
	call	DWORD PTR __imp__Sleep@4

; 1713 : 
; 1714 : 	if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN30@UI_Cleanup

; 1715 : 	{
; 1716 : 		gMapMgr->Cleanup();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?Cleanup@C_Map@@QAEXXZ			; C_Map::Cleanup

; 1717 : 		delete gMapMgr;

	mov	eax, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	mov	DWORD PTR $T18[ebp], eax
	mov	ecx, DWORD PTR $T18[ebp]
	mov	DWORD PTR $T30[ebp], ecx
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN40@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T30[ebp]
	call	??_GC_Map@@QAEPAXI@Z
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN41@UI_Cleanup
$LN40@UI_Cleanup:
	mov	DWORD PTR tv92[ebp], 0
$LN41@UI_Cleanup:

; 1718 : 		gMapMgr=NULL;

	mov	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
$LN30@UI_Cleanup:

; 1719 : 	}
; 1720 : 
; 1721 : 	if(gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN29@UI_Cleanup

; 1722 : 	{
; 1723 : 		gMainHandler->Cleanup();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?Cleanup@C_Handler@@QAEXXZ		; C_Handler::Cleanup

; 1724 : 		delete gMainHandler;

	mov	edx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	mov	DWORD PTR $T17[ebp], edx
	mov	eax, DWORD PTR $T17[ebp]
	mov	DWORD PTR $T22[ebp], eax
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN42@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T22[ebp]
	call	??_GC_Handler@@QAEPAXI@Z
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN43@UI_Cleanup
$LN42@UI_Cleanup:
	mov	DWORD PTR tv131[ebp], 0
$LN43@UI_Cleanup:

; 1725 : 		gMainHandler=NULL;

	mov	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
$LN29@UI_Cleanup:

; 1726 : 	}
; 1727 : 
; 1728 : 	if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN28@UI_Cleanup

; 1729 : 	{
; 1730 : 		delete gUIViewer;

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T15[ebp], ecx
	mov	edx, DWORD PTR $T15[ebp]
	mov	DWORD PTR $T36[ebp], edx
	cmp	DWORD PTR $T36[ebp], 0
	je	SHORT $LN44@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T36[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN45@UI_Cleanup
$LN44@UI_Cleanup:
	mov	DWORD PTR tv137[ebp], 0
$LN45@UI_Cleanup:

; 1731 : 		gUIViewer = NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN28@UI_Cleanup:

; 1732 : 	}
; 1733 : 
; 1734 : 	OTWDriver.CleanViewpoint(); // JB 010615

	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?CleanViewpoint@OTWDriverClass@@QAEXXZ	; OTWDriverClass::CleanViewpoint

; 1735 : 	DeviceDependentGraphicsCleanup( &FalconDisplay.theDisplayDevice );

	push	OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A+132
	call	?DeviceDependentGraphicsCleanup@@YAXPAVDisplayDevice@@@Z ; DeviceDependentGraphicsCleanup
	add	esp, 4

; 1736 : 
; 1737 : 	if(gMusic)

	cmp	DWORD PTR ?gMusic@@3PAVC_Music@@A, 0	; gMusic
	je	SHORT $LN27@UI_Cleanup

; 1738 : 	{
; 1739 : 		gMusic->Cleanup();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?Cleanup@C_Music@@QAEXXZ		; C_Music::Cleanup

; 1740 : 		delete gMusic;

	mov	eax, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	mov	DWORD PTR $T20[ebp], eax
	mov	ecx, DWORD PTR $T20[ebp]
	mov	DWORD PTR $T28[ebp], ecx
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN46@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T28[ebp]
	call	??_GC_Music@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN47@UI_Cleanup
$LN46@UI_Cleanup:
	mov	DWORD PTR tv146[ebp], 0
$LN47@UI_Cleanup:

; 1741 : 		gMusic=NULL;

	mov	DWORD PTR ?gMusic@@3PAVC_Music@@A, 0	; gMusic
$LN27@UI_Cleanup:

; 1742 : 	}
; 1743 : 
; 1744 : 	if(gSoundMgr)

	cmp	DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A, 0	; gSoundMgr
	je	SHORT $LN26@UI_Cleanup

; 1745 : 	{
; 1746 : 		gSoundMgr->Cleanup();

	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?Cleanup@C_Sound@@QAEXXZ		; C_Sound::Cleanup

; 1747 : 		delete gSoundMgr;

	mov	edx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	mov	DWORD PTR $T12[ebp], edx
	mov	eax, DWORD PTR $T12[ebp]
	mov	DWORD PTR $T34[ebp], eax
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN48@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T34[ebp]
	call	??_GC_Sound@@QAEPAXI@Z
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN49@UI_Cleanup
$LN48@UI_Cleanup:
	mov	DWORD PTR tv153[ebp], 0
$LN49@UI_Cleanup:

; 1748 : 		gSoundMgr=NULL;

	mov	DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A, 0	; gSoundMgr
$LN26@UI_Cleanup:

; 1749 : 	}
; 1750 : 
; 1751 : 	if(gPopupMgr)

	cmp	DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A, 0 ; gPopupMgr
	je	SHORT $LN25@UI_Cleanup

; 1752 : 	{
; 1753 : 		gPopupMgr->Cleanup();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?Cleanup@C_PopupMgr@@QAEXXZ		; C_PopupMgr::Cleanup

; 1754 : 		delete gPopupMgr;

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	mov	DWORD PTR $T11[ebp], ecx
	mov	edx, DWORD PTR $T11[ebp]
	mov	DWORD PTR $T24[ebp], edx
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN50@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T24[ebp]
	call	??_GC_PopupMgr@@QAEPAXI@Z
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN51@UI_Cleanup
$LN50@UI_Cleanup:
	mov	DWORD PTR tv160[ebp], 0
$LN51@UI_Cleanup:

; 1755 : 		gPopupMgr=NULL;

	mov	DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A, 0 ; gPopupMgr
$LN25@UI_Cleanup:

; 1756 : 	}
; 1757 : 
; 1758 : 	if(gImageMgr)

	cmp	DWORD PTR ?gImageMgr@@3PAVC_Image@@A, 0	; gImageMgr
	je	SHORT $LN24@UI_Cleanup

; 1759 : 	{
; 1760 : 		gImageMgr->Cleanup();

	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?Cleanup@C_Image@@QAEXXZ		; C_Image::Cleanup

; 1761 : 		delete gImageMgr;

	mov	eax, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	mov	DWORD PTR $T9[ebp], eax
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR $T32[ebp], ecx
	cmp	DWORD PTR $T32[ebp], 0
	je	SHORT $LN52@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T32[ebp]
	call	??_GC_Image@@QAEPAXI@Z
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN53@UI_Cleanup
$LN52@UI_Cleanup:
	mov	DWORD PTR tv167[ebp], 0
$LN53@UI_Cleanup:

; 1762 : 		gImageMgr=NULL;

	mov	DWORD PTR ?gImageMgr@@3PAVC_Image@@A, 0	; gImageMgr
$LN24@UI_Cleanup:

; 1763 : 	}
; 1764 : 
; 1765 : 	if(gAnimMgr)

	cmp	DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A, 0 ; gAnimMgr
	je	SHORT $LN23@UI_Cleanup

; 1766 : 	{
; 1767 : 		gAnimMgr->Cleanup();

	mov	ecx, DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A ; gAnimMgr
	call	?Cleanup@C_Animation@@QAEXXZ		; C_Animation::Cleanup

; 1768 : 		delete gAnimMgr;

	mov	edx, DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A ; gAnimMgr
	mov	DWORD PTR $T8[ebp], edx
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T26[ebp], eax
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN54@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T26[ebp]
	call	??_GC_Animation@@QAEPAXI@Z
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN55@UI_Cleanup
$LN54@UI_Cleanup:
	mov	DWORD PTR tv174[ebp], 0
$LN55@UI_Cleanup:

; 1769 : 		gAnimMgr=NULL;

	mov	DWORD PTR ?gAnimMgr@@3PAVC_Animation@@A, 0 ; gAnimMgr
$LN23@UI_Cleanup:

; 1770 : 	}
; 1771 : 
; 1772 : 	if(gOccupationMap)

	cmp	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gOccupationMap
	je	SHORT $LN22@UI_Cleanup

; 1773 : 	{
; 1774 : 		C_Resmgr *mgr;
; 1775 : 		mgr=gOccupationMap->Owner;

	mov	ecx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _mgr$39[ebp], edx

; 1776 : 		mgr->Cleanup();

	mov	ecx, DWORD PTR _mgr$39[ebp]
	call	?Cleanup@C_Resmgr@@QAEXXZ		; C_Resmgr::Cleanup

; 1777 : 		delete mgr;

	mov	eax, DWORD PTR _mgr$39[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T38[ebp], ecx
	cmp	DWORD PTR $T38[ebp], 0
	je	SHORT $LN56@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T38[ebp]
	call	??_GC_Resmgr@@QAEPAXI@Z
	mov	DWORD PTR tv182[ebp], eax
	jmp	SHORT $LN57@UI_Cleanup
$LN56@UI_Cleanup:
	mov	DWORD PTR tv182[ebp], 0
$LN57@UI_Cleanup:

; 1778 : 		gOccupationMap=NULL;

	mov	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gOccupationMap
$LN22@UI_Cleanup:

; 1779 : 	}
; 1780 : 
; 1781 : 	if(gMainParser)

	cmp	DWORD PTR ?gMainParser@@3PAVC_Parser@@A, 0 ; gMainParser
	je	SHORT $LN21@UI_Cleanup

; 1782 : 	{
; 1783 : 		gMainParser->Cleanup();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?Cleanup@C_Parser@@QAEXXZ		; C_Parser::Cleanup

; 1784 : 		delete gMainParser;

	mov	edx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	mov	DWORD PTR $T19[ebp], edx
	mov	eax, DWORD PTR $T19[ebp]
	mov	DWORD PTR $T37[ebp], eax
	cmp	DWORD PTR $T37[ebp], 0
	je	SHORT $LN58@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T37[ebp]
	call	??_GC_Parser@@QAEPAXI@Z
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN59@UI_Cleanup
$LN58@UI_Cleanup:
	mov	DWORD PTR tv189[ebp], 0
$LN59@UI_Cleanup:

; 1785 : 		gMainParser=NULL;

	mov	DWORD PTR ?gMainParser@@3PAVC_Parser@@A, 0 ; gMainParser
$LN21@UI_Cleanup:

; 1786 : 	}
; 1787 : 
; 1788 : 	if(gFontList)

	cmp	DWORD PTR ?gFontList@@3PAVC_Font@@A, 0	; gFontList
	je	SHORT $LN20@UI_Cleanup

; 1789 : 	{
; 1790 : 		gFontList->Cleanup();

	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?Cleanup@C_Font@@QAEXXZ			; C_Font::Cleanup

; 1791 : 		delete gFontList;

	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	mov	DWORD PTR $T16[ebp], ecx
	mov	edx, DWORD PTR $T16[ebp]
	mov	DWORD PTR $T35[ebp], edx
	cmp	DWORD PTR $T35[ebp], 0
	je	SHORT $LN60@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T35[ebp]
	call	??_GC_Font@@QAEPAXI@Z
	mov	DWORD PTR tv196[ebp], eax
	jmp	SHORT $LN61@UI_Cleanup
$LN60@UI_Cleanup:
	mov	DWORD PTR tv196[ebp], 0
$LN61@UI_Cleanup:

; 1792 : 		gFontList=NULL;

	mov	DWORD PTR ?gFontList@@3PAVC_Font@@A, 0	; gFontList
$LN20@UI_Cleanup:

; 1793 : 	}
; 1794 : 
; 1795 : 	if(gStringMgr)

	cmp	DWORD PTR ?gStringMgr@@3PAVC_String@@A, 0 ; gStringMgr
	je	SHORT $LN19@UI_Cleanup

; 1796 : 	{
; 1797 : 		gStringMgr->Cleanup();

	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?Cleanup@C_String@@QAEXXZ		; C_String::Cleanup

; 1798 : 		delete gStringMgr;

	mov	eax, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	mov	DWORD PTR $T13[ebp], eax
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR $T33[ebp], ecx
	cmp	DWORD PTR $T33[ebp], 0
	je	SHORT $LN62@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T33[ebp]
	call	??_GC_String@@QAEPAXI@Z
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN63@UI_Cleanup
$LN62@UI_Cleanup:
	mov	DWORD PTR tv203[ebp], 0
$LN63@UI_Cleanup:

; 1799 : 		gStringMgr=NULL;

	mov	DWORD PTR ?gStringMgr@@3PAVC_String@@A, 0 ; gStringMgr
$LN19@UI_Cleanup:

; 1800 : 	}
; 1801 : 
; 1802 : 	if(gMovieMgr)

	cmp	DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A, 0	; gMovieMgr
	je	SHORT $LN18@UI_Cleanup

; 1803 : 	{
; 1804 : 		gMovieMgr->Cleanup();

	mov	ecx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	call	?Cleanup@C_Movie@@QAEXXZ		; C_Movie::Cleanup

; 1805 : 		delete gMovieMgr;

	mov	edx, DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A ; gMovieMgr
	mov	DWORD PTR $T10[ebp], edx
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR $T31[ebp], eax
	cmp	DWORD PTR $T31[ebp], 0
	je	SHORT $LN64@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T31[ebp]
	call	??_GC_Movie@@QAEPAXI@Z
	mov	DWORD PTR tv210[ebp], eax
	jmp	SHORT $LN65@UI_Cleanup
$LN64@UI_Cleanup:
	mov	DWORD PTR tv210[ebp], 0
$LN65@UI_Cleanup:

; 1806 : 		gMovieMgr=NULL;

	mov	DWORD PTR ?gMovieMgr@@3PAVC_Movie@@A, 0	; gMovieMgr
$LN18@UI_Cleanup:

; 1807 : 	}
; 1808 : 
; 1809 : 	IALoaded=0;

	mov	DWORD PTR ?IALoaded@@3HA, 0		; IALoaded

; 1810 : 	ACMILoaded=0;

	mov	DWORD PTR ?ACMILoaded@@3HA, 0		; ACMILoaded

; 1811 : 	DFLoaded=0;

	mov	DWORD PTR ?DFLoaded@@3HA, 0		; DFLoaded

; 1812 : 	TACLoaded=0;

	mov	DWORD PTR ?TACLoaded@@3HA, 0		; TACLoaded

; 1813 : 	CPLoaded=0;

	mov	DWORD PTR ?CPLoaded@@3HA, 0		; CPLoaded

; 1814 : 	CPSelectLoaded=0;

	mov	DWORD PTR ?CPSelectLoaded@@3HA, 0	; CPSelectLoaded

; 1815 : 	LBLoaded=0;

	mov	DWORD PTR ?LBLoaded@@3HA, 0		; LBLoaded

; 1816 : 	STPLoaded=0;

	mov	DWORD PTR ?STPLoaded@@3HA, 0		; STPLoaded

; 1817 : 	COLoaded=0;

	mov	DWORD PTR ?COLoaded@@3HA, 0		; COLoaded

; 1818 : 	MainLoaded=0;

	mov	DWORD PTR ?MainLoaded@@3HA, 0		; MainLoaded

; 1819 : 	PlannerLoaded=0;

	mov	DWORD PTR ?PlannerLoaded@@3HA, 0	; PlannerLoaded

; 1820 : 	TACREFLoaded=0;

	mov	DWORD PTR ?TACREFLoaded@@3HA, 0		; TACREFLoaded

; 1821 : 	CommonLoaded=0;

	mov	DWORD PTR ?CommonLoaded@@3HA, 0		; CommonLoaded

; 1822 : 	INFOLoaded = 0;

	mov	DWORD PTR ?INFOLoaded@@3HA, 0		; INFOLoaded

; 1823 : 	HelpLoaded = 0;

	mov	DWORD PTR ?HelpLoaded@@3HA, 0		; HelpLoaded

; 1824 : 	TACSelLoaded = 0;

	mov	DWORD PTR ?TACSelLoaded@@3HA, 0		; TACSelLoaded

; 1825 : 
; 1826 : 	if(gPlayerBook)

	cmp	DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A, 0 ; gPlayerBook
	je	SHORT $LN17@UI_Cleanup

; 1827 : 	{
; 1828 : 		gPlayerBook->Save("phonebkn.da2");

	push	OFFSET ??_C@_0N@DJIGJIHN@phonebkn?4da2?$AA@
	mov	ecx, DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A ; gPlayerBook
	call	?Save@PhoneBook@@QAEXPAD@Z		; PhoneBook::Save

; 1829 : 		gPlayerBook->Cleanup();

	mov	ecx, DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A ; gPlayerBook
	call	?Cleanup@PhoneBook@@QAEXXZ		; PhoneBook::Cleanup

; 1830 : 		delete gPlayerBook;

	mov	ecx, DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A ; gPlayerBook
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR $T29[ebp], edx
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN66@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T29[ebp]
	call	??_GPhoneBook@@QAEPAXI@Z
	mov	DWORD PTR tv219[ebp], eax
	jmp	SHORT $LN67@UI_Cleanup
$LN66@UI_Cleanup:
	mov	DWORD PTR tv219[ebp], 0
$LN67@UI_Cleanup:

; 1831 : 		gPlayerBook=NULL;

	mov	DWORD PTR ?gPlayerBook@@3PAVPhoneBook@@A, 0 ; gPlayerBook
$LN17@UI_Cleanup:

; 1832 : 	}
; 1833 : 
; 1834 : #ifdef __WATCOMC__
; 1835 : #pragma warning 379 4;
; 1836 : #endif
; 1837 : 
; 1838 : 	if(People)

	cmp	DWORD PTR ?People@@3PAVC_TreeList@@A, 0	; People
	je	SHORT $LN16@UI_Cleanup

; 1839 : 	{ // Now maintained in a script
; 1840 : 		People=NULL;

	mov	DWORD PTR ?People@@3PAVC_TreeList@@A, 0	; People
$LN16@UI_Cleanup:

; 1841 : 	}
; 1842 : 	if(DogfightGames)

	cmp	DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A, 0 ; DogfightGames
	je	SHORT $LN15@UI_Cleanup

; 1843 : 	{ // Now maintained in a script
; 1844 : 		DogfightGames=NULL;

	mov	DWORD PTR ?DogfightGames@@3PAVC_TreeList@@A, 0 ; DogfightGames
$LN15@UI_Cleanup:

; 1845 : 	}
; 1846 : 	if(TacticalGames)

	cmp	DWORD PTR ?TacticalGames@@3PAVC_TreeList@@A, 0 ; TacticalGames
	je	SHORT $LN14@UI_Cleanup

; 1847 : 	{ // Now maintained in a script
; 1848 : 		TacticalGames=NULL;

	mov	DWORD PTR ?TacticalGames@@3PAVC_TreeList@@A, 0 ; TacticalGames
$LN14@UI_Cleanup:

; 1849 : 	}
; 1850 : 	if(CampaignGames)

	cmp	DWORD PTR ?CampaignGames@@3PAVC_TreeList@@A, 0 ; CampaignGames
	je	SHORT $LN13@UI_Cleanup

; 1851 : 	{ // Now maintained in a script
; 1852 : 		CampaignGames=NULL;

	mov	DWORD PTR ?CampaignGames@@3PAVC_TreeList@@A, 0 ; CampaignGames
$LN13@UI_Cleanup:

; 1853 : 	}
; 1854 : 
; 1855 : 	if(gUICommsQ)

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN12@UI_Cleanup

; 1856 : 	{
; 1857 : 		F4EnterCriticalSection(vuCritical);

	mov	eax, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 1858 : 		gUICommsQ->Cleanup();

	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Cleanup@CommsQueue@@QAEXXZ		; CommsQueue::Cleanup

; 1859 : 		delete gUICommsQ;

	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T27[ebp], edx
	cmp	DWORD PTR $T27[ebp], 0
	je	SHORT $LN68@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T27[ebp]
	call	??_GCommsQueue@@QAEPAXI@Z
	mov	DWORD PTR tv295[ebp], eax
	jmp	SHORT $LN69@UI_Cleanup
$LN68@UI_Cleanup:
	mov	DWORD PTR tv295[ebp], 0
$LN69@UI_Cleanup:

; 1860 : 		gUICommsQ=NULL;

	mov	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ

; 1861 : 		F4LeaveCriticalSection(vuCritical);

	mov	eax, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
$LN12@UI_Cleanup:

; 1862 : 	}
; 1863 : 
; 1864 : 	if(gInstantBites)

	cmp	DWORD PTR ?gInstantBites@@3PAVC_SoundBite@@A, 0 ; gInstantBites
	je	SHORT $LN11@UI_Cleanup

; 1865 : 	{
; 1866 : 		gInstantBites->Cleanup();

	mov	ecx, DWORD PTR ?gInstantBites@@3PAVC_SoundBite@@A ; gInstantBites
	call	?Cleanup@C_SoundBite@@QAEXXZ		; C_SoundBite::Cleanup

; 1867 : 		delete gInstantBites;

	mov	ecx, DWORD PTR ?gInstantBites@@3PAVC_SoundBite@@A ; gInstantBites
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T25[ebp], edx
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN70@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T25[ebp]
	call	??_GC_SoundBite@@QAEPAXI@Z
	mov	DWORD PTR tv303[ebp], eax
	jmp	SHORT $LN71@UI_Cleanup
$LN70@UI_Cleanup:
	mov	DWORD PTR tv303[ebp], 0
$LN71@UI_Cleanup:

; 1868 : 		gInstantBites=NULL;

	mov	DWORD PTR ?gInstantBites@@3PAVC_SoundBite@@A, 0 ; gInstantBites
$LN11@UI_Cleanup:

; 1869 : 	}
; 1870 : 
; 1871 : 	if(gDogfightBites)

	cmp	DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A, 0 ; gDogfightBites
	je	SHORT $LN10@UI_Cleanup

; 1872 : 	{
; 1873 : 		gDogfightBites->Cleanup();

	mov	ecx, DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A ; gDogfightBites
	call	?Cleanup@C_SoundBite@@QAEXXZ		; C_SoundBite::Cleanup

; 1874 : 		delete gDogfightBites;

	mov	eax, DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A ; gDogfightBites
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T23[ebp], ecx
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN72@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T23[ebp]
	call	??_GC_SoundBite@@QAEPAXI@Z
	mov	DWORD PTR tv310[ebp], eax
	jmp	SHORT $LN73@UI_Cleanup
$LN72@UI_Cleanup:
	mov	DWORD PTR tv310[ebp], 0
$LN73@UI_Cleanup:

; 1875 : 		gDogfightBites=NULL;

	mov	DWORD PTR ?gDogfightBites@@3PAVC_SoundBite@@A, 0 ; gDogfightBites
$LN10@UI_Cleanup:

; 1876 : 	}
; 1877 : 
; 1878 : 	if(gCampaignBites)

	cmp	DWORD PTR ?gCampaignBites@@3PAVC_SoundBite@@A, 0 ; gCampaignBites
	je	SHORT $LN9@UI_Cleanup

; 1879 : 	{
; 1880 : 		gCampaignBites->Cleanup();

	mov	ecx, DWORD PTR ?gCampaignBites@@3PAVC_SoundBite@@A ; gCampaignBites
	call	?Cleanup@C_SoundBite@@QAEXXZ		; C_SoundBite::Cleanup

; 1881 : 		delete gCampaignBites;

	mov	edx, DWORD PTR ?gCampaignBites@@3PAVC_SoundBite@@A ; gCampaignBites
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T21[ebp], eax
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN74@UI_Cleanup
	push	1
	mov	ecx, DWORD PTR $T21[ebp]
	call	??_GC_SoundBite@@QAEPAXI@Z
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN75@UI_Cleanup
$LN74@UI_Cleanup:
	mov	DWORD PTR tv317[ebp], 0
$LN75@UI_Cleanup:

; 1882 : 		gCampaignBites=NULL;

	mov	DWORD PTR ?gCampaignBites@@3PAVC_SoundBite@@A, 0 ; gCampaignBites
$LN9@UI_Cleanup:

; 1883 : 	}
; 1884 : 
; 1885 : 	ShutdownSetup();

	call	?ShutdownSetup@@YAXXZ			; ShutdownSetup

; 1886 : 
; 1887 : 	PlayerOptions.SaveOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::SaveOptions

; 1888 : 	LogBook.SaveData();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1889 : 
; 1890 : 	if(KeyDescrips)

	cmp	DWORD PTR ?KeyDescrips@@3PAPADA, 0	; KeyDescrips
	je	SHORT $LN8@UI_Cleanup

; 1891 : 		CleanupKeys();

	call	?CleanupKeys@@YAXXZ			; CleanupKeys
$LN8@UI_Cleanup:

; 1892 : 
; 1893 : 	//UserFunctionTable.ClearTable();
; 1894 : 
; 1895 : 	for(i=1;i<MAX_CURSORS;i++)

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN7@UI_Cleanup
$LN6@UI_Cleanup:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN7@UI_Cleanup:
	cmp	DWORD PTR _i$[ebp], 30			; 0000001eH
	jge	SHORT $LN5@UI_Cleanup

; 1896 : 		if(gCursors[i])

	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx*4], 0
	je	SHORT $LN4@UI_Cleanup

; 1897 : 			DeleteObject(gCursors[i]);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax*4]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
$LN4@UI_Cleanup:

; 1898 : 
; 1899 : 	if(gScreenShotEnabled && gScreenShotBuffer)

	jmp	SHORT $LN6@UI_Cleanup
$LN5@UI_Cleanup:
	cmp	DWORD PTR ?gScreenShotEnabled@@3JA, 0	; gScreenShotEnabled
	je	SHORT $LN3@UI_Cleanup
	cmp	DWORD PTR ?gScreenShotBuffer@@3PAGA, 0	; gScreenShotBuffer
	je	SHORT $LN3@UI_Cleanup

; 1900 : 	{
; 1901 : 		delete gScreenShotBuffer;

	mov	edx, DWORD PTR ?gScreenShotBuffer@@3PAGA ; gScreenShotBuffer
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1902 : 		gScreenShotBuffer=NULL;

	mov	DWORD PTR ?gScreenShotBuffer@@3PAGA, 0	; gScreenShotBuffer
$LN3@UI_Cleanup:

; 1903 : 	}
; 1904 : 
; 1905 : #ifdef USE_SH_POOLS
; 1906 : #if 0
; 1907 : 	// Shrink Memory Pools to find out how much is still active
; 1908 : 	MemPoolShrink(UI_Pools[UI_GENERAL_POOL]);
; 1909 : 	MemPoolShrink(UI_Pools[UI_CONTROL_POOL]);
; 1910 : 	MemPoolShrink(UI_Pools[UI_ART_POOL]);
; 1911 : 	MemPoolShrink(UI_Pools[UI_SOUND_POOL]);
; 1912 : 
; 1913 : 	// Display amout of leakage in these Pools
; 1914 : 	MonoPrint("Memory Blocks allocated AFTER cleanup\n");
; 1915 : 	MonoPrint("UI_Pools[UI_GENERAL_POOL] size = %1lu\n",MemPoolCount(UI_Pools[UI_GENERAL_POOL]));
; 1916 : 	MonoPrint("UI_Pools[UI_CONTROL_POOL] size = %1lu\n",MemPoolCount(UI_Pools[UI_CONTROL_POOL]));
; 1917 : 	MonoPrint("UI_Pools[UI_ART_POOL] size = %1lu\n",MemPoolCount(UI_Pools[UI_ART_POOL]));
; 1918 : 	MonoPrint("UI_Pools[UI_SOUND_POOL] size = %1lu\n",MemPoolCount(UI_Pools[UI_SOUND_POOL]));
; 1919 : 
; 1920 : 	dbgMemSetCheckpoint(11);
; 1921 : 
; 1922 : 	if (lastErrorFn)
; 1923 : 	{
; 1924 : 		MemSetErrorHandler(lastErrorFn);
; 1925 : 		dbgMemSetDefaultErrorOutput(DBGMEM_OUTPUT_FILE,"uileak1.log");
; 1926 : 		dbgMemReportLeakage(UI_Pools[UI_GENERAL_POOL],10,11);
; 1927 : 		dbgMemSetDefaultErrorOutput(DBGMEM_OUTPUT_FILE,"uileak2.log");
; 1928 : 		dbgMemReportLeakage(UI_Pools[UI_CONTROL_POOL],10,11);
; 1929 : 		dbgMemSetDefaultErrorOutput(DBGMEM_OUTPUT_FILE,"uileak3.log");
; 1930 : 		dbgMemReportLeakage(UI_Pools[UI_ART_POOL],10,11);
; 1931 : 		dbgMemSetDefaultErrorOutput(DBGMEM_OUTPUT_FILE,"uileak4.log");
; 1932 : 		dbgMemReportLeakage(UI_Pools[UI_SOUND_POOL],10,11);
; 1933 : 		MemSetErrorHandler(errPrint);
; 1934 : 	}
; 1935 : #endif
; 1936 : 	// Free up Memory Pools
; 1937 : 	MemPoolFree(UI_Pools[UI_GENERAL_POOL]);
; 1938 : 	MemPoolFree(UI_Pools[UI_CONTROL_POOL]);
; 1939 : 	MemPoolFree(UI_Pools[UI_ART_POOL]);
; 1940 : 	MemPoolFree(UI_Pools[UI_SOUND_POOL]);
; 1941 : #endif
; 1942 : 
; 1943 : 	FalconDisplay.LeaveMode();

	mov	ecx, OFFSET ?FalconDisplay@@3VFalconDisplayConfiguration@@A ; FalconDisplay
	call	?LeaveMode@FalconDisplayConfiguration@@QAEXXZ ; FalconDisplayConfiguration::LeaveMode
$LN2@UI_Cleanup:

; 1944 : 
; 1945 : 	// OW
; 1946 : 	//ShowCursor(FALSE);
; 1947 : 	while(ShowCursor(FALSE) >= 0);

	push	0
	call	DWORD PTR __imp__ShowCursor@4
	test	eax, eax
	jl	SHORT $LN36@UI_Cleanup
	jmp	SHORT $LN2@UI_Cleanup
$LN36@UI_Cleanup:

; 1948 : 
; 1949 : 	// OW
; 1950 : //    SetThreadPriority(GetCurrentThread(), THREAD_PRIORITY_NORMAL);
; 1951 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_Cleanup@@YAXXZ ENDP					; UI_Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
_lbox$ = -12						; size = 4
_winme$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?HookupControls@@YAXJ@Z PROC				; HookupControls

; 1035 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1036 : 	C_Window *winme;
; 1037 : 	C_Button *ctrl;
; 1038 : 	C_ListBox *lbox;
; 1039 : 
; 1040 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 1041 : 
; 1042 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN28@HookupCont

; 1043 : 		return;

	jmp	$LN29@HookupCont
$LN28@HookupCont:

; 1044 : 
; 1045 : 	// Hook up IDs here
; 1046 : 
; 1047 : 	// Hook up Main Buttons...
; 1048 : 	ctrl=(C_Button *)winme->FindControl(IA_MAIN_CTRL);

	push	10003					; 00002713H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1049 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN27@HookupCont

; 1050 : 		ctrl->SetCallback(OpenInstantActionCB);

	push	OFFSET ?OpenInstantActionCB@@YAXJFPAVC_Base@@@Z ; OpenInstantActionCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN27@HookupCont:

; 1051 : 	ctrl=(C_Button *)winme->FindControl(DF_MAIN_CTRL);

	push	20003					; 00004e23H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1052 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN26@HookupCont

; 1053 : 		ctrl->SetCallback(OpenDogFightCB);

	push	OFFSET ?OpenDogFightCB@@YAXJFPAVC_Base@@@Z ; OpenDogFightCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN26@HookupCont:

; 1054 : 	ctrl=(C_Button *)winme->FindControl(TE_MAIN_CTRL);

	push	30003					; 00007533H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1055 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN25@HookupCont

; 1056 : 		ctrl->SetCallback(OpenTacticalCB);

	push	OFFSET ?OpenTacticalCB@@YAXJFPAVC_Base@@@Z ; OpenTacticalCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN25@HookupCont:

; 1057 : 	ctrl=(C_Button *)winme->FindControl(CP_MAIN_CTRL);

	push	40003					; 00009c43H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1058 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN24@HookupCont

; 1059 : 		ctrl->SetCallback(OpenMainCampaignCB);

	push	OFFSET ?OpenMainCampaignCB@@YAXJFPAVC_Base@@@Z ; OpenMainCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN24@HookupCont:

; 1060 : 	ctrl=(C_Button *)winme->FindControl(TACREF_CTRL);

	push	10052					; 00002744H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1061 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN23@HookupCont

; 1062 : 		ctrl->SetCallback(OpenTacticalReferenceCB);

	push	OFFSET ?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z ; OpenTacticalReferenceCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN23@HookupCont:

; 1063 : 	ctrl=(C_Button *)winme->FindControl(LB_MAIN_CTRL);

	push	50003					; 0000c353H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1064 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN22@HookupCont

; 1065 : 		ctrl->SetCallback(OpenLogBookCB);

	push	OFFSET ?OpenLogBookCB@@YAXJFPAVC_Base@@@Z ; OpenLogBookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN22@HookupCont:

; 1066 : 	ctrl=(C_Button *)winme->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1067 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN21@HookupCont

; 1068 : 		ctrl->SetCallback(OpenCommsCB);

	push	OFFSET ?OpenCommsCB@@YAXJFPAVC_Base@@@Z	; OpenCommsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN21@HookupCont:

; 1069 : 	ctrl=(C_Button *)winme->FindControl(SP_MAIN_CTRL);

	push	70003					; 00011173H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1070 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN20@HookupCont

; 1071 : 		ctrl->SetCallback(OpenSetupCB);

	push	OFFSET ?OpenSetupCB@@YAXJFPAVC_Base@@@Z	; OpenSetupCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN20@HookupCont:

; 1072 : 
; 1073 : 	ctrl=(C_Button *)winme->FindControl(ACMI_CTRL);

	push	10047					; 0000273fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1074 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN19@HookupCont

; 1075 : 		ctrl->SetCallback(ACMIButtonCB);

	push	OFFSET ?ACMIButtonCB@@YAXJFPAVC_Base@@@Z ; ACMIButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupCont:

; 1076 : 	ctrl=(C_Button *)winme->FindControl(UI_THEATER_BUTTON);

	push	300001					; 000493e1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1077 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN18@HookupCont

; 1078 : 		ctrl->SetCallback(TheaterButtonCB);

	push	OFFSET ?TheaterButtonCB@@YAXJFPAVC_Base@@@Z ; TheaterButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupCont:

; 1079 : 
; 1080 : 	// Hook up Close Button
; 1081 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1082 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@HookupCont

; 1083 : 		ctrl->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupCont:

; 1084 : 
; 1085 : 	// Hook up Exit Button
; 1086 : 	ctrl=(C_Button *)winme->FindControl(EXIT_CTRL);

	push	80000					; 00013880H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1087 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupCont

; 1088 : 		ctrl->SetCallback(ExitButtonCB);

	push	OFFSET ?ExitButtonCB@@YAXJFPAVC_Base@@@Z ; ExitButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupCont:

; 1089 : 
; 1090 : 	ctrl=(C_Button *)winme->FindControl(DF_CLOSE_CTRL);

	push	21873					; 00005571H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1091 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@HookupCont

; 1092 : 		ctrl->SetCallback(EndDogfightCB);

	push	OFFSET ?EndDogfightCB@@YAXJFPAVC_Base@@@Z ; EndDogfightCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupCont:

; 1093 : 
; 1094 : 
; 1095 : 	ctrl=(C_Button*)winme->FindControl(SAVE_FONT_CTRL);

	push	988776601				; 3aef8899H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1096 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupCont

; 1097 : 		ctrl->SetCallback(OpenFontToolCB);

	push	OFFSET ?OpenFontToolCB@@YAXJFPAVC_Base@@@Z ; OpenFontToolCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupCont:

; 1098 : 
; 1099 : 	lbox=(C_ListBox*)winme->FindControl(CUR_FONT);

	push	988776600				; 3aef8898H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1100 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN13@HookupCont

; 1101 : 		lbox->SetCallback(ChooseFontCB);

	push	OFFSET ?ChooseFontCB@@YAXJFPAVC_Base@@@Z ; ChooseFontCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupCont:

; 1102 : 
; 1103 : 	ctrl=(C_Button*)winme->FindControl(FONTED_CREATE);

	push	988776637				; 3aef88bdH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1104 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN12@HookupCont

; 1105 : 		ctrl->SetCallback(CreateFontCB);

	push	OFFSET ?CreateFontCB@@YAXJFPAVC_Base@@@Z ; CreateFontCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupCont:

; 1106 : 
; 1107 : 	ctrl=(C_Button*)winme->FindControl(FONTED_EXPORT);

	push	988776612				; 3aef88a4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1108 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN11@HookupCont

; 1109 : 		ctrl->SetCallback(CreateTheFontCB);

	push	OFFSET ?CreateTheFontCB@@YAXJFPAVC_Base@@@Z ; CreateTheFontCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupCont:

; 1110 : 
; 1111 : 	ctrl=(C_Button*)winme->FindControl(FONTED_SAVE);

	push	988776638				; 3aef88beH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1112 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@HookupCont

; 1113 : 		ctrl->SetCallback(SaveFontCB);

	push	OFFSET ?SaveFontCB@@YAXJFPAVC_Base@@@Z	; SaveFontCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupCont:

; 1114 : 
; 1115 : 	ctrl=(C_Button*)winme->FindControl(LEAD_MORE);

	push	988776614				; 3aef88a6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1116 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupCont

; 1117 : 		ctrl->SetCallback(IncreaseLead);

	push	OFFSET ?IncreaseLead@@YAXJFPAVC_Base@@@Z ; IncreaseLead
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupCont:

; 1118 : 
; 1119 : 	ctrl=(C_Button*)winme->FindControl(LEAD_LESS);

	push	988776613				; 3aef88a5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1120 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupCont

; 1121 : 		ctrl->SetCallback(DecreaseLead);

	push	OFFSET ?DecreaseLead@@YAXJFPAVC_Base@@@Z ; DecreaseLead
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupCont:

; 1122 : 
; 1123 : 	ctrl=(C_Button*)winme->FindControl(TRAIL_MORE);

	push	988776618				; 3aef88aaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1124 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@HookupCont

; 1125 : 		ctrl->SetCallback(IncreaseTrail);

	push	OFFSET ?IncreaseTrail@@YAXJFPAVC_Base@@@Z ; IncreaseTrail
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupCont:

; 1126 : 
; 1127 : 	ctrl=(C_Button*)winme->FindControl(TRAIL_LESS);

	push	988776617				; 3aef88a9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1128 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@HookupCont

; 1129 : 		ctrl->SetCallback(DecreaseTrail);

	push	OFFSET ?DecreaseTrail@@YAXJFPAVC_Base@@@Z ; DecreaseTrail
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupCont:

; 1130 : 
; 1131 : 	ctrl=(C_Button*)winme->FindControl(WIDTH_MORE);

	push	988776616				; 3aef88a8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1132 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@HookupCont

; 1133 : 		ctrl->SetCallback(IncreaseWidth);

	push	OFFSET ?IncreaseWidth@@YAXJFPAVC_Base@@@Z ; IncreaseWidth
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupCont:

; 1134 : 
; 1135 : 	ctrl=(C_Button*)winme->FindControl(WIDTH_LESS);

	push	988776615				; 3aef88a7H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1136 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@HookupCont

; 1137 : 		ctrl->SetCallback(DecreaseWidth);

	push	OFFSET ?DecreaseWidth@@YAXJFPAVC_Base@@@Z ; DecreaseWidth
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupCont:

; 1138 : 
; 1139 : 	ctrl=(C_Button*)winme->FindControl(KERN_MORE);

	push	988776620				; 3aef88acH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1140 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupCont

; 1141 : 		ctrl->SetCallback(IncreaseKern);

	push	OFFSET ?IncreaseKern@@YAXJFPAVC_Base@@@Z ; IncreaseKern
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupCont:

; 1142 : 
; 1143 : 	ctrl=(C_Button*)winme->FindControl(KERN_LESS);

	push	988776619				; 3aef88abH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1144 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN2@HookupCont

; 1145 : 		ctrl->SetCallback(DecreaseKern);

	push	OFFSET ?DecreaseKern@@YAXJFPAVC_Base@@@Z ; DecreaseKern
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@HookupCont:

; 1146 : 
; 1147 : // Help GUIDE thing
; 1148 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1149 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN29@HookupCont

; 1150 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN29@HookupCont:

; 1151 : 
; 1152 : 
; 1153 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HookupControls@@YAXJ@Z ENDP				; HookupControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\ui_main.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?GenericTimerCB@@YAXJFPAVC_Base@@@Z PROC		; GenericTimerCB

; 985  : {

	push	ebp
	mov	ebp, esp

; 986  : 	if(control->GetUserNumber(_UI95_TIMER_COUNTER_) < 1)

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 1
	jge	SHORT $LN1@GenericTim

; 987  : 	{
; 988  : 		control->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 989  : 		control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_DELAY_));

	push	4
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN1@GenericTim:

; 990  : 	}
; 991  : 	control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_COUNTER_)-1);

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	eax, 1
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 992  : }

	pop	ebp
	ret	0
?GenericTimerCB@@YAXJFPAVC_Base@@@Z ENDP		; GenericTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Map@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Map@@QAEPAXI@Z PROC				; C_Map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Map@@QAE@XZ			; C_Map::~C_Map
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Map@@QAEPAXI@Z ENDP				; C_Map::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCommsQueue@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCommsQueue@@QAEPAXI@Z PROC				; CommsQueue::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CommsQueue@@QAE@XZ			; CommsQueue::~CommsQueue
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCommsQueue@@QAEPAXI@Z ENDP				; CommsQueue::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\queue.h
;	COMDAT ??0CommsQueue@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CommsQueue@@QAE@XZ PROC				; CommsQueue::CommsQueue, COMDAT
; _this$ = ecx

; 33   : 		CommsQueue()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 		{
; 35   : 			Root_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 36   : 			appwin_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0

; 37   : 			PostPending=FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 38   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CommsQueue@@QAE@XZ ENDP				; CommsQueue::CommsQueue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?GetUserInfo@UIComms@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserInfo@UIComms@@QAEPADXZ PROC			; UIComms::GetUserInfo, COMDAT
; _this$ = ecx

; 116  : 		_TCHAR *GetUserInfo() { return(&User_[0]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	imul	eax, 0
	add	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUserInfo@UIComms@@QAEPADXZ ENDP			; UIComms::GetUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GPhoneBook@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPhoneBook@@QAEPAXI@Z PROC				; PhoneBook::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PhoneBook@@QAE@XZ			; PhoneBook::~PhoneBook
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPhoneBook@@QAEPAXI@Z ENDP				; PhoneBook::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?AceFactor@LogBookData@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AceFactor@LogBookData@@QAEMXZ PROC			; LogBookData::AceFactor, COMDAT
; _this$ = ecx

; 187  : 	float	AceFactor(void)							{return Pilot.AceFactor;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?AceFactor@LogBookData@@QAEMXZ ENDP			; LogBookData::AceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Music@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Music@@QAEPAXI@Z PROC				; C_Music::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Music@@QAE@XZ			; C_Music::~C_Music
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Music@@QAEPAXI@Z ENDP				; C_Music::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Handler@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Handler@@QAEPAXI@Z PROC				; C_Handler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Handler@@QAE@XZ			; C_Handler::~C_Handler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Handler@@QAEPAXI@Z ENDP				; C_Handler::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?SetDrawFlag@C_Handler@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?SetDrawFlag@C_Handler@@QAEXJ@Z PROC			; C_Handler::SetDrawFlag, COMDAT
; _this$ = ecx

; 218  : 		void SetDrawFlag(long val) { DrawFlags=val; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax+3476], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDrawFlag@C_Handler@@QAEXJ@Z ENDP			; C_Handler::SetDrawFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?SetEnableTime@C_Handler@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_atime$ = 8						; size = 4
?SetEnableTime@C_Handler@@QAEXJ@Z PROC			; C_Handler::SetEnableTime, COMDAT
; _this$ = ecx

; 206  : 		void SetEnableTime(long atime) { EnabledTime_=atime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _atime$[ebp]
	mov	DWORD PTR [eax+120], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEnableTime@C_Handler@@QAEXJ@Z ENDP			; C_Handler::SetEnableTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?SetSection@C_Handler@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetSection@C_Handler@@QAEXJ@Z PROC			; C_Handler::SetSection, COMDAT
; _this$ = ecx

; 180  : 		void SetSection(long ID) { CurrentSection_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+124], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSection@C_Handler@@QAEXJ@Z ENDP			; C_Handler::SetSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?Minimized@C_Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Minimized@C_Window@@QAEHXZ PROC			; C_Window::Minimized, COMDAT
; _this$ = ecx

; 320  : 		BOOL Minimized() { if(w_ == MinW_ && h_ == MinH_) return(TRUE); return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+432]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+444]
	cmp	ecx, eax
	jne	SHORT $LN1@Minimized
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+434]
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+446]
	cmp	edx, ecx
	jne	SHORT $LN1@Minimized
	mov	eax, 1
	jmp	SHORT $LN2@Minimized
$LN1@Minimized:
	xor	eax, eax
$LN2@Minimized:
	mov	esp, ebp
	pop	ebp
	ret	0
?Minimized@C_Window@@QAEHXZ ENDP			; C_Window::Minimized
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetY@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Window@@QAEFXZ PROC				; C_Window::GetY, COMDAT
; _this$ = ecx

; 311  : 		short GetY() { return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+430]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Window@@QAEFXZ ENDP				; C_Window::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetX@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Window@@QAEFXZ PROC				; C_Window::GetX, COMDAT
; _this$ = ecx

; 310  : 		short GetX() { return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+428]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Window@@QAEFXZ ENDP				; C_Window::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Parser@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Parser@@QAEPAXI@Z PROC				; C_Parser::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Parser@@QAE@XZ			; C_Parser::~C_Parser
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Parser@@QAEPAXI@Z ENDP				; C_Parser::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?SetCheck@C_Parser@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetCheck@C_Parser@@QAEXJ@Z PROC			; C_Parser::SetCheck, COMDAT
; _this$ = ecx

; 77   : 		void SetCheck(long ID) { if(TokenOrder_) TokenOrder_->SetCheck(ID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+908], 0
	je	SHORT $LN2@SetCheck
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+908]
	call	?SetCheck@C_Hash@@QAEXJ@Z		; C_Hash::SetCheck
$LN2@SetCheck:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCheck@C_Parser@@QAEXJ@Z ENDP			; C_Parser::SetCheck
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_PopupMgr@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_PopupMgr@@QAEPAXI@Z PROC				; C_PopupMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_PopupMgr@@QAE@XZ			; C_PopupMgr::~C_PopupMgr
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_PopupMgr@@QAEPAXI@Z ENDP				; C_PopupMgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetParent@C_Base@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@C_Base@@QAEPAVC_Window@@XZ PROC		; C_Base::GetParent, COMDAT
; _this$ = ecx

; 149  : 		C_Window *GetParent()		{ return(Parent_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParent@C_Base@@QAEPAVC_Window@@XZ ENDP		; C_Base::GetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_SoundBite@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_SoundBite@@QAEPAXI@Z PROC				; C_SoundBite::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_SoundBite@@QAE@XZ			; C_SoundBite::~C_SoundBite
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_SoundBite@@QAEPAXI@Z ENDP				; C_SoundBite::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Movie@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Movie@@QAEPAXI@Z PROC				; C_Movie::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Movie@@QAE@XZ			; C_Movie::~C_Movie
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Movie@@QAEPAXI@Z ENDP				; C_Movie::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cmovie.h
;	COMDAT ?SetXY@C_Movie@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@C_Movie@@QAEXJJ@Z PROC				; C_Movie::SetXY, COMDAT
; _this$ = ecx

; 53   : 		void SetXY(long x,long y) { x_=x; y_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@C_Movie@@QAEXJJ@Z ENDP				; C_Movie::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_String@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_String@@QAEPAXI@Z PROC				; C_String::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_String@@QAE@XZ			; C_String::~C_String
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_String@@QAEPAXI@Z ENDP				; C_String::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Animation@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Animation@@QAEPAXI@Z PROC				; C_Animation::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Animation@@QAE@XZ			; C_Animation::~C_Animation
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Animation@@QAEPAXI@Z ENDP				; C_Animation::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Sound@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Sound@@QAEPAXI@Z PROC				; C_Sound::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Sound@@QAE@XZ			; C_Sound::~C_Sound
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Sound@@QAEPAXI@Z ENDP				; C_Sound::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Image@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Image@@QAEPAXI@Z PROC				; C_Image::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Image@@QAE@XZ			; C_Image::~C_Image
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Image@@QAEPAXI@Z ENDP				; C_Image::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cimagerc.h
;	COMDAT ?SetColorKey@C_Image@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_colorkey$ = 8						; size = 2
?SetColorKey@C_Image@@QAEXG@Z PROC			; C_Image::SetColorKey, COMDAT
; _this$ = ecx

; 45   : 		void SetColorKey(WORD colorkey) { ColorKey_=colorkey; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _colorkey$[ebp]
	mov	WORD PTR [eax+20], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColorKey@C_Image@@QAEXG@Z ENDP			; C_Image::SetColorKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cimagerc.h
;	COMDAT ?SetScreenFormat@C_Image@@QAEXFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rs$ = 8						; size = 2
_gs$ = 12						; size = 2
_bs$ = 16						; size = 2
?SetScreenFormat@C_Image@@QAEXFFF@Z PROC		; C_Image::SetScreenFormat, COMDAT
; _this$ = ecx

; 36   : 		void SetScreenFormat(short rs,short gs,short bs) { red_shift_=rs; green_shift_=gs; blue_shift_=bs; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _rs$[ebp]
	mov	WORD PTR [eax+22], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _gs$[ebp]
	mov	WORD PTR [edx+24], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _bs$[ebp]
	mov	WORD PTR [ecx+26], dx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetScreenFormat@C_Image@@QAEXFFF@Z ENDP		; C_Image::SetScreenFormat
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Font@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Font@@QAEPAXI@Z PROC				; C_Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Font@@QAE@XZ			; C_Font::~C_Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Font@@QAEPAXI@Z ENDP				; C_Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Resmgr@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Resmgr@@QAEPAXI@Z PROC				; C_Resmgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Resmgr@@QAE@XZ			; C_Resmgr::~C_Resmgr
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Resmgr@@QAEPAXI@Z ENDP				; C_Resmgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chash.h
;	COMDAT ?SetCheck@C_Hash@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_check$ = 8						; size = 4
?SetCheck@C_Hash@@QAEXJ@Z PROC				; C_Hash::SetCheck, COMDAT
; _this$ = ecx

; 60   : 		void SetCheck(long check)	{ Check_=check; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _check$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCheck@C_Hash@@QAEXJ@Z ENDP				; C_Hash::SetCheck
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\dispcfg.h
;	COMDAT ?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ PROC ; FalconDisplayConfiguration::GetImageBuffer, COMDAT
; _this$ = ecx

; 39   : 	ImageBuffer* GetImageBuffer() {return theDisplayDevice.GetImageBuffer();};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ ; DisplayDevice::GetImageBuffer
	mov	esp, ebp
	pop	ebp
	ret	0
?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ ENDP ; FalconDisplayConfiguration::GetImageBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\device.h
;	COMDAT ?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ PROC ; DisplayDevice::GetImageBuffer, COMDAT
; _this$ = ecx

; 28   : 	ImageBuffer*	GetImageBuffer( void )			{ return &image; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ ENDP ; DisplayDevice::GetImageBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
