; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\CAMPAIGN\CAMPLIB\CampList.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?AllUnitProxFilter@@3PAVUnitProxFilter@@A	; AllUnitProxFilter
PUBLIC	?RealUnitProxFilter@@3PAVUnitProxFilter@@A	; RealUnitProxFilter
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?AllObjProxFilter@@3PAVObjProxFilter@@A		; AllObjProxFilter
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?AllUnitList@@3PAVVuLinkedList@@A		; AllUnitList
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?AllAirList@@3PAVVuLinkedList@@A		; AllAirList
PUBLIC	?AllParentList@@3PAVVuLinkedList@@A		; AllParentList
PUBLIC	?AllRealList@@3PAVVuLinkedList@@A		; AllRealList
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?AllObjList@@3PAVVuLinkedList@@A		; AllObjList
PUBLIC	?AllCampList@@3PAVVuLinkedList@@A		; AllCampList
PUBLIC	?InactiveList@@3PAVVuLinkedList@@A		; InactiveList
PUBLIC	?FrontList@@3PAVFalconPrivateList@@A		; FrontList
PUBLIC	?POList@@3PAVFalconPrivateOrderedList@@A	; POList
PUBLIC	?SOList@@3PAVFalconPrivateList@@A		; SOList
PUBLIC	?AirDefenseList@@3PAVFalconPrivateList@@A	; AirDefenseList
PUBLIC	?EmitterList@@3PAVFalconPrivateList@@A		; EmitterList
PUBLIC	?campDirtyBuckets@@3PAPAVTailInsertList@@A	; campDirtyBuckets
PUBLIC	?simDirtyBuckets@@3PAPAVTailInsertList@@A	; simDirtyBuckets
PUBLIC	?deaggregatedEntities@@3PAVVuHashTable@@A	; deaggregatedEntities
PUBLIC	?campDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A	; campDirtyMutexes
PUBLIC	?simDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A	; simDirtyMutexes
PUBLIC	?PODataList@@3PAVListClass@@A			; PODataList
PUBLIC	?FLOTList@@3PAVListClass@@A			; FLOTList
PUBLIC	?ObjProxList@@3PAVVuGridTree@@A			; ObjProxList
PUBLIC	?RealUnitProxList@@3PAVVuGridTree@@A		; RealUnitProxList
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?AllUnitProxFilter@@3PAVUnitProxFilter@@A DD 01H DUP (?) ; AllUnitProxFilter
?RealUnitProxFilter@@3PAVUnitProxFilter@@A DD 01H DUP (?) ; RealUnitProxFilter
?AllObjProxFilter@@3PAVObjProxFilter@@A DD 01H DUP (?)	; AllObjProxFilter
?AllUnitList@@3PAVVuLinkedList@@A DD 01H DUP (?)	; AllUnitList
?AllAirList@@3PAVVuLinkedList@@A DD 01H DUP (?)		; AllAirList
?AllParentList@@3PAVVuLinkedList@@A DD 01H DUP (?)	; AllParentList
?AllRealList@@3PAVVuLinkedList@@A DD 01H DUP (?)	; AllRealList
?AllObjList@@3PAVVuLinkedList@@A DD 01H DUP (?)		; AllObjList
?AllCampList@@3PAVVuLinkedList@@A DD 01H DUP (?)	; AllCampList
?InactiveList@@3PAVVuLinkedList@@A DD 01H DUP (?)	; InactiveList
?FrontList@@3PAVFalconPrivateList@@A DD 01H DUP (?)	; FrontList
?POList@@3PAVFalconPrivateOrderedList@@A DD 01H DUP (?)	; POList
?SOList@@3PAVFalconPrivateList@@A DD 01H DUP (?)	; SOList
?AirDefenseList@@3PAVFalconPrivateList@@A DD 01H DUP (?) ; AirDefenseList
?EmitterList@@3PAVFalconPrivateList@@A DD 01H DUP (?)	; EmitterList
?campDirtyBuckets@@3PAPAVTailInsertList@@A DD 09H DUP (?) ; campDirtyBuckets
?simDirtyBuckets@@3PAPAVTailInsertList@@A DD 09H DUP (?) ; simDirtyBuckets
?deaggregatedEntities@@3PAVVuHashTable@@A DD 01H DUP (?) ; deaggregatedEntities
?campDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A DD 09H DUP (?) ; campDirtyMutexes
?simDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A DD 09H DUP (?) ; simDirtyMutexes
?PODataList@@3PAVListClass@@A DD 01H DUP (?)		; PODataList
?FLOTList@@3PAVListClass@@A DD 01H DUP (?)		; FLOTList
?ObjProxList@@3PAVVuGridTree@@A DD 01H DUP (?)		; ObjProxList
?RealUnitProxList@@3PAVVuGridTree@@A DD 01H DUP (?)	; RealUnitProxList
_lastRequest DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0VuFilter@@IAE@XZ				; VuFilter::VuFilter
PUBLIC	??_GVuFilter@@UAEPAXI@Z				; VuFilter::`scalar deleting destructor'
PUBLIC	??0VuKeyFilter@@IAE@XZ				; VuKeyFilter::VuKeyFilter
PUBLIC	??_GVuKeyFilter@@UAEPAXI@Z			; VuKeyFilter::`scalar deleting destructor'
PUBLIC	??0VuBiKeyFilter@@IAE@IM@Z			; VuBiKeyFilter::VuBiKeyFilter
PUBLIC	??0VuBiKeyFilter@@IAE@ABV0@@Z			; VuBiKeyFilter::VuBiKeyFilter
PUBLIC	??1VuBiKeyFilter@@MAE@XZ			; VuBiKeyFilter::~VuBiKeyFilter
PUBLIC	??_GVuBiKeyFilter@@MAEPAXI@Z			; VuBiKeyFilter::`scalar deleting destructor'
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetDomain@CampBaseClass@@QBEEXZ		; CampBaseClass::GetDomain
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	?GetUserData@ListElementClass@@QAEPAXXZ		; ListElementClass::GetUserData
PUBLIC	?GetNext@ListElementClass@@QAEPAV1@XZ		; ListElementClass::GetNext
PUBLIC	?GetFirstElement@ListClass@@QAEPAVListElementClass@@XZ ; ListClass::GetFirstElement
PUBLIC	??0UnitFilter@@QAE@EEGE@Z			; UnitFilter::UnitFilter
PUBLIC	??1UnitFilter@@UAE@XZ				; UnitFilter::~UnitFilter
PUBLIC	?Test@UnitFilter@@UAEEPAVVuEntity@@@Z		; UnitFilter::Test
PUBLIC	?RemoveTest@UnitFilter@@UAEEPAVVuEntity@@@Z	; UnitFilter::RemoveTest
PUBLIC	?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z	; UnitFilter::Compare
PUBLIC	?Copy@UnitFilter@@UAEPAVVuFilter@@XZ		; UnitFilter::Copy
PUBLIC	??_GUnitFilter@@UAEPAXI@Z			; UnitFilter::`scalar deleting destructor'
PUBLIC	??0AirUnitFilter@@QAE@EEG@Z			; AirUnitFilter::AirUnitFilter
PUBLIC	??1AirUnitFilter@@UAE@XZ			; AirUnitFilter::~AirUnitFilter
PUBLIC	?Test@AirUnitFilter@@UAEEPAVVuEntity@@@Z	; AirUnitFilter::Test
PUBLIC	?RemoveTest@AirUnitFilter@@UAEEPAVVuEntity@@@Z	; AirUnitFilter::RemoveTest
PUBLIC	?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z	; AirUnitFilter::Compare
PUBLIC	?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ		; AirUnitFilter::Copy
PUBLIC	??_GAirUnitFilter@@UAEPAXI@Z			; AirUnitFilter::`scalar deleting destructor'
PUBLIC	??0GroundUnitFilter@@QAE@EEG@Z			; GroundUnitFilter::GroundUnitFilter
PUBLIC	??1GroundUnitFilter@@UAE@XZ			; GroundUnitFilter::~GroundUnitFilter
PUBLIC	?Test@GroundUnitFilter@@UAEEPAVVuEntity@@@Z	; GroundUnitFilter::Test
PUBLIC	?RemoveTest@GroundUnitFilter@@UAEEPAVVuEntity@@@Z ; GroundUnitFilter::RemoveTest
PUBLIC	?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z	; GroundUnitFilter::Compare
PUBLIC	?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ	; GroundUnitFilter::Copy
PUBLIC	??_GGroundUnitFilter@@UAEPAXI@Z			; GroundUnitFilter::`scalar deleting destructor'
PUBLIC	??0NavalUnitFilter@@QAE@EEG@Z			; NavalUnitFilter::NavalUnitFilter
PUBLIC	??1NavalUnitFilter@@UAE@XZ			; NavalUnitFilter::~NavalUnitFilter
PUBLIC	?Test@NavalUnitFilter@@UAEEPAVVuEntity@@@Z	; NavalUnitFilter::Test
PUBLIC	?RemoveTest@NavalUnitFilter@@UAEEPAVVuEntity@@@Z ; NavalUnitFilter::RemoveTest
PUBLIC	?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z	; NavalUnitFilter::Compare
PUBLIC	?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ	; NavalUnitFilter::Copy
PUBLIC	??_GNavalUnitFilter@@UAEPAXI@Z			; NavalUnitFilter::`scalar deleting destructor'
PUBLIC	??0UnitProxFilter@@QAE@IM@Z			; UnitProxFilter::UnitProxFilter
PUBLIC	??0UnitProxFilter@@QAE@ABV0@@Z			; UnitProxFilter::UnitProxFilter
PUBLIC	??1UnitProxFilter@@UAE@XZ			; UnitProxFilter::~UnitProxFilter
PUBLIC	?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ	; UnitProxFilter::Copy
PUBLIC	?Test@UnitProxFilter@@UAEEPAVVuEntity@@@Z	; UnitProxFilter::Test
PUBLIC	?RemoveTest@UnitProxFilter@@UAEEPAVVuEntity@@@Z	; UnitProxFilter::RemoveTest
PUBLIC	??_GUnitProxFilter@@UAEPAXI@Z			; UnitProxFilter::`scalar deleting destructor'
PUBLIC	??0ObjFilter@@QAE@G@Z				; ObjFilter::ObjFilter
PUBLIC	??1ObjFilter@@UAE@XZ				; ObjFilter::~ObjFilter
PUBLIC	?Test@ObjFilter@@UAEEPAVVuEntity@@@Z		; ObjFilter::Test
PUBLIC	?RemoveTest@ObjFilter@@UAEEPAVVuEntity@@@Z	; ObjFilter::RemoveTest
PUBLIC	?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z	; ObjFilter::Compare
PUBLIC	?Copy@ObjFilter@@UAEPAVVuFilter@@XZ		; ObjFilter::Copy
PUBLIC	??_GObjFilter@@UAEPAXI@Z			; ObjFilter::`scalar deleting destructor'
PUBLIC	??0ObjProxFilter@@QAE@IM@Z			; ObjProxFilter::ObjProxFilter
PUBLIC	??0ObjProxFilter@@QAE@ABV0@@Z			; ObjProxFilter::ObjProxFilter
PUBLIC	??1ObjProxFilter@@UAE@XZ			; ObjProxFilter::~ObjProxFilter
PUBLIC	?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ		; ObjProxFilter::Copy
PUBLIC	?Test@ObjProxFilter@@UAEEPAVVuEntity@@@Z	; ObjProxFilter::Test
PUBLIC	?RemoveTest@ObjProxFilter@@UAEEPAVVuEntity@@@Z	; ObjProxFilter::RemoveTest
PUBLIC	??_GObjProxFilter@@UAEPAXI@Z			; ObjProxFilter::`scalar deleting destructor'
PUBLIC	??0CampBaseFilter@@QAE@XZ			; CampBaseFilter::CampBaseFilter
PUBLIC	??1CampBaseFilter@@UAE@XZ			; CampBaseFilter::~CampBaseFilter
PUBLIC	?Test@CampBaseFilter@@UAEEPAVVuEntity@@@Z	; CampBaseFilter::Test
PUBLIC	?RemoveTest@CampBaseFilter@@UAEEPAVVuEntity@@@Z	; CampBaseFilter::RemoveTest
PUBLIC	?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z	; CampBaseFilter::Compare
PUBLIC	?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ	; CampBaseFilter::Copy
PUBLIC	??_GCampBaseFilter@@UAEPAXI@Z			; CampBaseFilter::`scalar deleting destructor'
PUBLIC	?RebuildFrontList@@YAHHH@Z			; RebuildFrontList
PUBLIC	?RebuildObjectiveLists@@YAHXZ			; RebuildObjectiveLists
PUBLIC	?RebuildParentsList@@YAHXZ			; RebuildParentsList
PUBLIC	?RebuildEmitterList@@YAHXZ			; RebuildEmitterList
PUBLIC	?StandardRebuild@@YAXXZ				; StandardRebuild
PUBLIC	?InactivateUnit@@YAXPAVUnitClass@@@Z		; InactivateUnit
PUBLIC	?ClearObjFlags@ObjectiveClass@@QAEXK@Z		; ObjectiveClass::ClearObjFlags
PUBLIC	?SetObjFlags@ObjectiveClass@@QAEXK@Z		; ObjectiveClass::SetObjFlags
PUBLIC	?IsFrontline@ObjectiveClass@@QAEHXZ		; ObjectiveClass::IsFrontline
PUBLIC	?IsSecondline@ObjectiveClass@@QAEHXZ		; ObjectiveClass::IsSecondline
PUBLIC	?NumLinks@ObjectiveClass@@QAEHXZ		; ObjectiveClass::NumLinks
PUBLIC	?Parent@UnitClass@@QBEHXZ			; UnitClass::Parent
PUBLIC	?Inactive@UnitClass@@QBEHXZ			; UnitClass::Inactive
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?MarkObjectives@@YAXXZ				; MarkObjectives
PUBLIC	?InitBaseLists@@YAXXZ				; InitBaseLists
PUBLIC	?InitCampaignLists@@YAXXZ			; InitCampaignLists
PUBLIC	?InitTheaterLists@@YAXXZ			; InitTheaterLists
PUBLIC	?DisposeBaseLists@@YAXXZ			; DisposeBaseLists
PUBLIC	?DisposeCampaignLists@@YAXXZ			; DisposeCampaignLists
PUBLIC	?DisposeTheaterLists@@YAXXZ			; DisposeTheaterLists
PUBLIC	?RebuildFLOTList@@YAXXZ				; RebuildFLOTList
PUBLIC	?CheckObjProxyOK@@YAHHH@Z			; CheckObjProxyOK
PUBLIC	?CheckUnitProxyOK@@YAHHH@Z			; CheckUnitProxyOK
PUBLIC	??0?$VuBin@VUnitClass@@@@QAE@PAVUnitClass@@@Z	; VuBin<UnitClass>::VuBin<UnitClass>
PUBLIC	??1?$VuBin@VUnitClass@@@@QAE@XZ			; VuBin<UnitClass>::~VuBin<UnitClass>
PUBLIC	??_7VuFilter@@6B@				; VuFilter::`vftable'
PUBLIC	??_7VuKeyFilter@@6B@				; VuKeyFilter::`vftable'
PUBLIC	??_7VuBiKeyFilter@@6B@				; VuBiKeyFilter::`vftable'
PUBLIC	??_7UnitFilter@@6B@				; UnitFilter::`vftable'
PUBLIC	??_7AirUnitFilter@@6B@				; AirUnitFilter::`vftable'
PUBLIC	??_7GroundUnitFilter@@6B@			; GroundUnitFilter::`vftable'
PUBLIC	??_7NavalUnitFilter@@6B@			; NavalUnitFilter::`vftable'
PUBLIC	?AllUnitFilter@@3VUnitFilter@@A			; AllUnitFilter
PUBLIC	?AllAirFilter@@3VAirUnitFilter@@A		; AllAirFilter
PUBLIC	?AllGroundFilter@@3VGroundUnitFilter@@A		; AllGroundFilter
PUBLIC	?AllNavalFilter@@3VNavalUnitFilter@@A		; AllNavalFilter
PUBLIC	?AllParentFilter@@3VUnitFilter@@A		; AllParentFilter
PUBLIC	?AllRealFilter@@3VUnitFilter@@A			; AllRealFilter
PUBLIC	?InactiveFilter@@3VUnitFilter@@A		; InactiveFilter
PUBLIC	??_7UnitProxFilter@@6B@				; UnitProxFilter::`vftable'
PUBLIC	??_7ObjFilter@@6B@				; ObjFilter::`vftable'
PUBLIC	?AllObjFilter@@3VObjFilter@@A			; AllObjFilter
PUBLIC	??_7ObjProxFilter@@6B@				; ObjProxFilter::`vftable'
PUBLIC	??_7CampBaseFilter@@6B@				; CampBaseFilter::`vftable'
PUBLIC	?CampFilter@@3VCampBaseFilter@@A		; CampFilter
PUBLIC	?AllOpaqueFilter@@3VVuOpaqueFilter@@A		; AllOpaqueFilter
PUBLIC	??_C@_0BB@INAEOENF@camp?5dirty?5mutex?$AA@	; `string'
PUBLIC	??_C@_0BA@LCJMGABO@sim?5dirty?5mutex?$AA@	; `string'
PUBLIC	??_R4VuFilter@@6B@				; VuFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuFilter@@@8				; VuFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuFilter@@8				; VuFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuFilter@@8				; VuFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuFilter@@8			; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuKeyFilter@@6B@				; VuKeyFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuKeyFilter@@@8				; VuKeyFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuKeyFilter@@8				; VuKeyFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuKeyFilter@@8				; VuKeyFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuKeyFilter@@8			; VuKeyFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuBiKeyFilter@@6B@				; VuBiKeyFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuBiKeyFilter@@@8			; VuBiKeyFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuBiKeyFilter@@8				; VuBiKeyFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuBiKeyFilter@@8				; VuBiKeyFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuBiKeyFilter@@8			; VuBiKeyFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnitFilter@@6B@				; UnitFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnitFilter@@@8				; UnitFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnitFilter@@8				; UnitFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnitFilter@@8				; UnitFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnitFilter@@8			; UnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4AirUnitFilter@@6B@				; AirUnitFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAirUnitFilter@@@8			; AirUnitFilter `RTTI Type Descriptor'
PUBLIC	??_R3AirUnitFilter@@8				; AirUnitFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AirUnitFilter@@8				; AirUnitFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AirUnitFilter@@8			; AirUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GroundUnitFilter@@6B@			; GroundUnitFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGroundUnitFilter@@@8			; GroundUnitFilter `RTTI Type Descriptor'
PUBLIC	??_R3GroundUnitFilter@@8			; GroundUnitFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GroundUnitFilter@@8			; GroundUnitFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GroundUnitFilter@@8		; GroundUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NavalUnitFilter@@6B@			; NavalUnitFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNavalUnitFilter@@@8			; NavalUnitFilter `RTTI Type Descriptor'
PUBLIC	??_R3NavalUnitFilter@@8				; NavalUnitFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NavalUnitFilter@@8				; NavalUnitFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NavalUnitFilter@@8		; NavalUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnitProxFilter@@6B@			; UnitProxFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnitProxFilter@@@8			; UnitProxFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnitProxFilter@@8				; UnitProxFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnitProxFilter@@8				; UnitProxFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnitProxFilter@@8			; UnitProxFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ObjFilter@@6B@				; ObjFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVObjFilter@@@8				; ObjFilter `RTTI Type Descriptor'
PUBLIC	??_R3ObjFilter@@8				; ObjFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ObjFilter@@8				; ObjFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ObjFilter@@8			; ObjFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ObjProxFilter@@6B@				; ObjProxFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVObjProxFilter@@@8			; ObjProxFilter `RTTI Type Descriptor'
PUBLIC	??_R3ObjProxFilter@@8				; ObjProxFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ObjProxFilter@@8				; ObjProxFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ObjProxFilter@@8			; ObjProxFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CampBaseFilter@@6B@			; CampBaseFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCampBaseFilter@@@8			; CampBaseFilter `RTTI Type Descriptor'
PUBLIC	??_R3CampBaseFilter@@8				; CampBaseFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CampBaseFilter@@8				; CampBaseFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CampBaseFilter@@8			; CampBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@44610000
PUBLIC	__real@454cffae
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_rand:PROC
EXTRN	?F4IsBadReadPtr@@YA_NPBXI@Z:PROC		; F4IsBadReadPtr
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?Register@VuCollection@@QAEXXZ:PROC		; VuCollection::Register
EXTRN	?Unregister@VuCollection@@QAEXXZ:PROC		; VuCollection::Unregister
EXTRN	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Insert
EXTRN	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Remove
EXTRN	??0VuLinkedList@@QAE@PAVVuFilter@@@Z:PROC	; VuLinkedList::VuLinkedList
EXTRN	??0VuHashTable@@QAE@PAVVuFilter@@II@Z:PROC	; VuHashTable::VuHashTable
EXTRN	??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z:PROC	; VuGridTree::VuGridTree
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??1VuFilter@@UAE@XZ:PROC			; VuFilter::~VuFilter
EXTRN	?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z:PROC	; VuFilter::RemoveTest
EXTRN	?Notice@VuFilter@@UAEEPAVVuMessage@@@Z:PROC	; VuFilter::Notice
EXTRN	??_EVuFilter@@UAEPAXI@Z:PROC			; VuFilter::`vector deleting destructor'
EXTRN	??1VuKeyFilter@@UAE@XZ:PROC			; VuKeyFilter::~VuKeyFilter
EXTRN	?Compare@VuKeyFilter@@UAEHPAVVuEntity@@0@Z:PROC	; VuKeyFilter::Compare
EXTRN	??_EVuKeyFilter@@UAEPAXI@Z:PROC			; VuKeyFilter::`vector deleting destructor'
EXTRN	?Key@VuBiKeyFilter@@UBEKPBVVuEntity@@@Z:PROC	; VuBiKeyFilter::Key
EXTRN	??_EVuBiKeyFilter@@MAEPAXI@Z:PROC		; VuBiKeyFilter::`vector deleting destructor'
EXTRN	??0VuOpaqueFilter@@QAE@XZ:PROC			; VuOpaqueFilter::VuOpaqueFilter
EXTRN	??1VuOpaqueFilter@@UAE@XZ:PROC			; VuOpaqueFilter::~VuOpaqueFilter
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z:PROC ; VuGridIterator::VuGridIterator
EXTRN	??1VuGridIterator@@UAE@XZ:PROC			; VuGridIterator::~VuGridIterator
EXTRN	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ:PROC ; VuGridIterator::GetFirst
EXTRN	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ:PROC ; VuGridIterator::GetNext
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	?SimCompare@@YAHPAVVuEntity@@0@Z:PROC		; SimCompare
EXTRN	??0TailInsertList@@QAE@PAVVuFilter@@@Z:PROC	; TailInsertList::TailInsertList
EXTRN	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z:PROC	; FalconPrivateList::FalconPrivateList
EXTRN	??1FalconPrivateList@@UAE@XZ:PROC		; FalconPrivateList::~FalconPrivateList
EXTRN	?ForcedInsert@FalconPrivateList@@QAEHPAVVuEntity@@@Z:PROC ; FalconPrivateList::ForcedInsert
EXTRN	??0FalconPrivateOrderedList@@QAE@PAVVuFilter@@@Z:PROC ; FalconPrivateOrderedList::FalconPrivateOrderedList
EXTRN	?ForcedInsert@FalconPrivateOrderedList@@QAEHPAVVuEntity@@@Z:PROC ; FalconPrivateOrderedList::ForcedInsert
EXTRN	?Camp_GetCurrentTime@@YAKXZ:PROC		; Camp_GetCurrentTime
EXTRN	??0MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::MissionRequestClass
EXTRN	??1MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::~MissionRequestClass
EXTRN	?RequestMission@MissionRequestClass@@QAEHXZ:PROC ; MissionRequestClass::RequestMission
EXTRN	?SetEmitting@CampBaseClass@@QAEXH@Z:PROC	; CampBaseClass::SetEmitting
EXTRN	?Real@@YAHH@Z:PROC				; Real
EXTRN	??0ListClass@@QAE@E@Z:PROC			; ListClass::ListClass
EXTRN	?InsertNewElement@ListClass@@QAEXFPAXE@Z:PROC	; ListClass::InsertNewElement
EXTRN	?Purge@ListClass@@QAEXXZ:PROC			; ListClass::Purge
EXTRN	??_EUnitFilter@@UAEPAXI@Z:PROC			; UnitFilter::`vector deleting destructor'
EXTRN	??_EAirUnitFilter@@UAEPAXI@Z:PROC		; AirUnitFilter::`vector deleting destructor'
EXTRN	??_EGroundUnitFilter@@UAEPAXI@Z:PROC		; GroundUnitFilter::`vector deleting destructor'
EXTRN	??_ENavalUnitFilter@@UAEPAXI@Z:PROC		; NavalUnitFilter::`vector deleting destructor'
EXTRN	??_EUnitProxFilter@@UAEPAXI@Z:PROC		; UnitProxFilter::`vector deleting destructor'
EXTRN	??_EObjFilter@@UAEPAXI@Z:PROC			; ObjFilter::`vector deleting destructor'
EXTRN	??_EObjProxFilter@@UAEPAXI@Z:PROC		; ObjProxFilter::`vector deleting destructor'
EXTRN	??_ECampBaseFilter@@UAEPAXI@Z:PROC		; CampBaseFilter::`vector deleting destructor'
EXTRN	?IsPrimary@ObjectiveClass@@QAEHXZ:PROC		; ObjectiveClass::IsPrimary
EXTRN	?IsSecondary@ObjectiveClass@@QAEHXZ:PROC	; ObjectiveClass::IsSecondary
EXTRN	?SetAbandoned@ObjectiveClass@@QAEXH@Z:PROC	; ObjectiveClass::SetAbandoned
EXTRN	?GetNeighbor@ObjectiveClass@@QAEPAV1@H@Z:PROC	; ObjectiveClass::GetNeighbor
EXTRN	?RecalculateParent@ObjectiveClass@@QAEXXZ:PROC	; ObjectiveClass::RecalculateParent
EXTRN	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z:PROC ; GetFirstObjective
EXTRN	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z:PROC ; GetNextObjective
EXTRN	?CaptureObjective@@YAXPAVObjectiveClass@@EPAVUnitClass@@@Z:PROC ; CaptureObjective
EXTRN	?GetTTRelations@@YAHEE@Z:PROC			; GetTTRelations
EXTRN	?GetRoE@@YAHEEH@Z:PROC				; GetRoE
EXTRN	?CleanupObjList@@YAXXZ:PROC			; CleanupObjList
EXTRN	?DisposeObjList@@YAXXZ:PROC			; DisposeObjList
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	_F4CreateCriticalSection:PROC
EXTRN	_F4DestroyCriticalSection:PROC
EXTRN	?MakeCampMap@CampaignClass@@QAEPAEH@Z:PROC	; CampaignClass::MakeCampMap
EXTRN	?DistSqu@@YAHFFFF@Z:PROC			; DistSqu
EXTRN	?Distance@@YAMFFFF@Z:PROC			; Distance
EXTRN	?PackXY@@YAPAXFF@Z:PROC				; PackXY
EXTRN	?UnpackXY@@YAXPAXPAF1@Z:PROC			; UnpackXY
EXTRN	?FindNearestRealUnit@@YAPAVUnitClass@@FFPAMF@Z:PROC ; FindNearestRealUnit
EXTRN	?GridToSim@@YAMF@Z:PROC				; GridToSim
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?FalconNothingFilter@@3VFalconNothingFilterType@@A:DWORD ; FalconNothingFilter
EXTRN	?Map_Max_Y@@3FA:WORD				; Map_Max_Y
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?BARCAP_REQUEST_INTERVAL@@3FA:WORD		; BARCAP_REQUEST_INTERVAL
EXTRN	?FLOTSortDirection@@3HA:DWORD			; FLOTSortDirection
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?AllUnitFilter@@3VUnitFilter@@A DB 0cH DUP (?)		; AllUnitFilter
?AllAirFilter@@3VAirUnitFilter@@A DQ 01H DUP (?)	; AllAirFilter
?AllGroundFilter@@3VGroundUnitFilter@@A DQ 01H DUP (?)	; AllGroundFilter
?AllNavalFilter@@3VNavalUnitFilter@@A DQ 01H DUP (?)	; AllNavalFilter
?AllParentFilter@@3VUnitFilter@@A DB 0cH DUP (?)	; AllParentFilter
?AllRealFilter@@3VUnitFilter@@A DB 0cH DUP (?)		; AllRealFilter
?InactiveFilter@@3VUnitFilter@@A DB 0cH DUP (?)		; InactiveFilter
?AllObjFilter@@3VObjFilter@@A DQ 01H DUP (?)		; AllObjFilter
?CampFilter@@3VCampBaseFilter@@A DD 01H DUP (?)		; CampFilter
?AllOpaqueFilter@@3VVuOpaqueFilter@@A DD 01H DUP (?)	; AllOpaqueFilter
_BSS	ENDS
;	COMDAT ?build@?1??StandardRebuild@@YAXXZ@4HA
_BSS	SEGMENT
?build@?1??StandardRebuild@@YAXXZ@4HA DD 01H DUP (?)	; `StandardRebuild'::`2'::build
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@454cffae
CONST	SEGMENT
__real@454cffae DD 0454cffaer			; 3279.98
CONST	ENDS
;	COMDAT __real@44610000
CONST	SEGMENT
__real@44610000 DD 044610000r			; 900
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CampBaseFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CampBaseFilter@@8 DD FLAT:??_R0?AVCampBaseFilter@@@8 ; CampBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CampBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2CampBaseFilter@@8
rdata$r	SEGMENT
??_R2CampBaseFilter@@8 DD FLAT:??_R1A@?0A@EA@CampBaseFilter@@8 ; CampBaseFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3CampBaseFilter@@8
rdata$r	SEGMENT
??_R3CampBaseFilter@@8 DD 00H				; CampBaseFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CampBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCampBaseFilter@@@8
_DATA	SEGMENT
??_R0?AVCampBaseFilter@@@8 DD FLAT:??_7type_info@@6B@	; CampBaseFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCampBaseFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CampBaseFilter@@6B@
rdata$r	SEGMENT
??_R4CampBaseFilter@@6B@ DD 00H				; CampBaseFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCampBaseFilter@@@8
	DD	FLAT:??_R3CampBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ObjProxFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ObjProxFilter@@8 DD FLAT:??_R0?AVObjProxFilter@@@8 ; ObjProxFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ObjProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2ObjProxFilter@@8
rdata$r	SEGMENT
??_R2ObjProxFilter@@8 DD FLAT:??_R1A@?0A@EA@ObjProxFilter@@8 ; ObjProxFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuBiKeyFilter@@8
	DD	FLAT:??_R1A@?0A@EA@VuKeyFilter@@8
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3ObjProxFilter@@8
rdata$r	SEGMENT
??_R3ObjProxFilter@@8 DD 00H				; ObjProxFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ObjProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVObjProxFilter@@@8
_DATA	SEGMENT
??_R0?AVObjProxFilter@@@8 DD FLAT:??_7type_info@@6B@	; ObjProxFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVObjProxFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ObjProxFilter@@6B@
rdata$r	SEGMENT
??_R4ObjProxFilter@@6B@ DD 00H				; ObjProxFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVObjProxFilter@@@8
	DD	FLAT:??_R3ObjProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ObjFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ObjFilter@@8 DD FLAT:??_R0?AVObjFilter@@@8 ; ObjFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ObjFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2ObjFilter@@8
rdata$r	SEGMENT
??_R2ObjFilter@@8 DD FLAT:??_R1A@?0A@EA@ObjFilter@@8	; ObjFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3ObjFilter@@8
rdata$r	SEGMENT
??_R3ObjFilter@@8 DD 00H				; ObjFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ObjFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVObjFilter@@@8
_DATA	SEGMENT
??_R0?AVObjFilter@@@8 DD FLAT:??_7type_info@@6B@	; ObjFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVObjFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ObjFilter@@6B@
rdata$r	SEGMENT
??_R4ObjFilter@@6B@ DD 00H				; ObjFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVObjFilter@@@8
	DD	FLAT:??_R3ObjFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnitProxFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnitProxFilter@@8 DD FLAT:??_R0?AVUnitProxFilter@@@8 ; UnitProxFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnitProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2UnitProxFilter@@8
rdata$r	SEGMENT
??_R2UnitProxFilter@@8 DD FLAT:??_R1A@?0A@EA@UnitProxFilter@@8 ; UnitProxFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuBiKeyFilter@@8
	DD	FLAT:??_R1A@?0A@EA@VuKeyFilter@@8
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3UnitProxFilter@@8
rdata$r	SEGMENT
??_R3UnitProxFilter@@8 DD 00H				; UnitProxFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnitProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnitProxFilter@@@8
_DATA	SEGMENT
??_R0?AVUnitProxFilter@@@8 DD FLAT:??_7type_info@@6B@	; UnitProxFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnitProxFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnitProxFilter@@6B@
rdata$r	SEGMENT
??_R4UnitProxFilter@@6B@ DD 00H				; UnitProxFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnitProxFilter@@@8
	DD	FLAT:??_R3UnitProxFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NavalUnitFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NavalUnitFilter@@8 DD FLAT:??_R0?AVNavalUnitFilter@@@8 ; NavalUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NavalUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2NavalUnitFilter@@8
rdata$r	SEGMENT
??_R2NavalUnitFilter@@8 DD FLAT:??_R1A@?0A@EA@NavalUnitFilter@@8 ; NavalUnitFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3NavalUnitFilter@@8
rdata$r	SEGMENT
??_R3NavalUnitFilter@@8 DD 00H				; NavalUnitFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2NavalUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNavalUnitFilter@@@8
_DATA	SEGMENT
??_R0?AVNavalUnitFilter@@@8 DD FLAT:??_7type_info@@6B@	; NavalUnitFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNavalUnitFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NavalUnitFilter@@6B@
rdata$r	SEGMENT
??_R4NavalUnitFilter@@6B@ DD 00H			; NavalUnitFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNavalUnitFilter@@@8
	DD	FLAT:??_R3NavalUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GroundUnitFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GroundUnitFilter@@8 DD FLAT:??_R0?AVGroundUnitFilter@@@8 ; GroundUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GroundUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2GroundUnitFilter@@8
rdata$r	SEGMENT
??_R2GroundUnitFilter@@8 DD FLAT:??_R1A@?0A@EA@GroundUnitFilter@@8 ; GroundUnitFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3GroundUnitFilter@@8
rdata$r	SEGMENT
??_R3GroundUnitFilter@@8 DD 00H				; GroundUnitFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GroundUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGroundUnitFilter@@@8
_DATA	SEGMENT
??_R0?AVGroundUnitFilter@@@8 DD FLAT:??_7type_info@@6B@	; GroundUnitFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGroundUnitFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GroundUnitFilter@@6B@
rdata$r	SEGMENT
??_R4GroundUnitFilter@@6B@ DD 00H			; GroundUnitFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGroundUnitFilter@@@8
	DD	FLAT:??_R3GroundUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AirUnitFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AirUnitFilter@@8 DD FLAT:??_R0?AVAirUnitFilter@@@8 ; AirUnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AirUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2AirUnitFilter@@8
rdata$r	SEGMENT
??_R2AirUnitFilter@@8 DD FLAT:??_R1A@?0A@EA@AirUnitFilter@@8 ; AirUnitFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3AirUnitFilter@@8
rdata$r	SEGMENT
??_R3AirUnitFilter@@8 DD 00H				; AirUnitFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2AirUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAirUnitFilter@@@8
_DATA	SEGMENT
??_R0?AVAirUnitFilter@@@8 DD FLAT:??_7type_info@@6B@	; AirUnitFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAirUnitFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AirUnitFilter@@6B@
rdata$r	SEGMENT
??_R4AirUnitFilter@@6B@ DD 00H				; AirUnitFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAirUnitFilter@@@8
	DD	FLAT:??_R3AirUnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnitFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnitFilter@@8 DD FLAT:??_R0?AVUnitFilter@@@8 ; UnitFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2UnitFilter@@8
rdata$r	SEGMENT
??_R2UnitFilter@@8 DD FLAT:??_R1A@?0A@EA@UnitFilter@@8	; UnitFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3UnitFilter@@8
rdata$r	SEGMENT
??_R3UnitFilter@@8 DD 00H				; UnitFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnitFilter@@@8
_DATA	SEGMENT
??_R0?AVUnitFilter@@@8 DD FLAT:??_7type_info@@6B@	; UnitFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnitFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnitFilter@@6B@
rdata$r	SEGMENT
??_R4UnitFilter@@6B@ DD 00H				; UnitFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnitFilter@@@8
	DD	FLAT:??_R3UnitFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuBiKeyFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuBiKeyFilter@@8 DD FLAT:??_R0?AVVuBiKeyFilter@@@8 ; VuBiKeyFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuBiKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuBiKeyFilter@@8
rdata$r	SEGMENT
??_R2VuBiKeyFilter@@8 DD FLAT:??_R1A@?0A@EA@VuBiKeyFilter@@8 ; VuBiKeyFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuKeyFilter@@8
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3VuBiKeyFilter@@8
rdata$r	SEGMENT
??_R3VuBiKeyFilter@@8 DD 00H				; VuBiKeyFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuBiKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuBiKeyFilter@@@8
_DATA	SEGMENT
??_R0?AVVuBiKeyFilter@@@8 DD FLAT:??_7type_info@@6B@	; VuBiKeyFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuBiKeyFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuBiKeyFilter@@6B@
rdata$r	SEGMENT
??_R4VuBiKeyFilter@@6B@ DD 00H				; VuBiKeyFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuBiKeyFilter@@@8
	DD	FLAT:??_R3VuBiKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuKeyFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuKeyFilter@@8 DD FLAT:??_R0?AVVuKeyFilter@@@8 ; VuKeyFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuKeyFilter@@8
rdata$r	SEGMENT
??_R2VuKeyFilter@@8 DD FLAT:??_R1A@?0A@EA@VuKeyFilter@@8 ; VuKeyFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3VuKeyFilter@@8
rdata$r	SEGMENT
??_R3VuKeyFilter@@8 DD 00H				; VuKeyFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuKeyFilter@@@8
_DATA	SEGMENT
??_R0?AVVuKeyFilter@@@8 DD FLAT:??_7type_info@@6B@	; VuKeyFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuKeyFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuKeyFilter@@6B@
rdata$r	SEGMENT
??_R4VuKeyFilter@@6B@ DD 00H				; VuKeyFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuKeyFilter@@@8
	DD	FLAT:??_R3VuKeyFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuFilter@@8 DD FLAT:??_R0?AVVuFilter@@@8	; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuFilter@@8
rdata$r	SEGMENT
??_R2VuFilter@@8 DD FLAT:??_R1A@?0A@EA@VuFilter@@8	; VuFilter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuFilter@@8
rdata$r	SEGMENT
??_R3VuFilter@@8 DD 00H					; VuFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuFilter@@@8
_DATA	SEGMENT
??_R0?AVVuFilter@@@8 DD FLAT:??_7type_info@@6B@		; VuFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuFilter@@6B@
rdata$r	SEGMENT
??_R4VuFilter@@6B@ DD 00H				; VuFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuFilter@@@8
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@LCJMGABO@sim?5dirty?5mutex?$AA@
CONST	SEGMENT
??_C@_0BA@LCJMGABO@sim?5dirty?5mutex?$AA@ DB 'sim dirty mutex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@INAEOENF@camp?5dirty?5mutex?$AA@
CONST	SEGMENT
??_C@_0BB@INAEOENF@camp?5dirty?5mutex?$AA@ DB 'camp dirty mutex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CampBaseFilter@@6B@
CONST	SEGMENT
??_7CampBaseFilter@@6B@ DD FLAT:??_R4CampBaseFilter@@6B@ ; CampBaseFilter::`vftable'
	DD	FLAT:??_ECampBaseFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@CampBaseFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@CampBaseFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7ObjProxFilter@@6B@
CONST	SEGMENT
??_7ObjProxFilter@@6B@ DD FLAT:??_R4ObjProxFilter@@6B@	; ObjProxFilter::`vftable'
	DD	FLAT:??_EObjProxFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@VuKeyFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@ObjProxFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@ObjProxFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
	DD	FLAT:?Key@VuBiKeyFilter@@UBEKPBVVuEntity@@@Z
CONST	ENDS
;	COMDAT ??_7ObjFilter@@6B@
CONST	SEGMENT
??_7ObjFilter@@6B@ DD FLAT:??_R4ObjFilter@@6B@		; ObjFilter::`vftable'
	DD	FLAT:??_EObjFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@ObjFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@ObjFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7UnitProxFilter@@6B@
CONST	SEGMENT
??_7UnitProxFilter@@6B@ DD FLAT:??_R4UnitProxFilter@@6B@ ; UnitProxFilter::`vftable'
	DD	FLAT:??_EUnitProxFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@VuKeyFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@UnitProxFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@UnitProxFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
	DD	FLAT:?Key@VuBiKeyFilter@@UBEKPBVVuEntity@@@Z
CONST	ENDS
;	COMDAT ??_7NavalUnitFilter@@6B@
CONST	SEGMENT
??_7NavalUnitFilter@@6B@ DD FLAT:??_R4NavalUnitFilter@@6B@ ; NavalUnitFilter::`vftable'
	DD	FLAT:??_ENavalUnitFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@NavalUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@NavalUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7GroundUnitFilter@@6B@
CONST	SEGMENT
??_7GroundUnitFilter@@6B@ DD FLAT:??_R4GroundUnitFilter@@6B@ ; GroundUnitFilter::`vftable'
	DD	FLAT:??_EGroundUnitFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@GroundUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@GroundUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7AirUnitFilter@@6B@
CONST	SEGMENT
??_7AirUnitFilter@@6B@ DD FLAT:??_R4AirUnitFilter@@6B@	; AirUnitFilter::`vftable'
	DD	FLAT:??_EAirUnitFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@AirUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@AirUnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7UnitFilter@@6B@
CONST	SEGMENT
??_7UnitFilter@@6B@ DD FLAT:??_R4UnitFilter@@6B@	; UnitFilter::`vftable'
	DD	FLAT:??_EUnitFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@UnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@UnitFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7VuBiKeyFilter@@6B@
CONST	SEGMENT
??_7VuBiKeyFilter@@6B@ DD FLAT:??_R4VuBiKeyFilter@@6B@	; VuBiKeyFilter::`vftable'
	DD	FLAT:??_EVuBiKeyFilter@@MAEPAXI@Z
	DD	FLAT:?Compare@VuKeyFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:__purecall
	DD	FLAT:?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?Key@VuBiKeyFilter@@UBEKPBVVuEntity@@@Z
CONST	ENDS
;	COMDAT ??_7VuKeyFilter@@6B@
CONST	SEGMENT
??_7VuKeyFilter@@6B@ DD FLAT:??_R4VuKeyFilter@@6B@	; VuKeyFilter::`vftable'
	DD	FLAT:??_EVuKeyFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@VuKeyFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:__purecall
	DD	FLAT:?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7VuFilter@@6B@
CONST	SEGMENT
??_7VuFilter@@6B@ DD FLAT:??_R4VuFilter@@6B@		; VuFilter::`vftable'
	DD	FLAT:??_EVuFilter@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:__purecall
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?CheckUnitProxyOK@@YAHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckUnitProxyOK@@YAHHH@Z$0
__unwindtable$?CheckObjProxyOK@@YAHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckObjProxyOK@@YAHHH@Z$0
__unwindtable$?RebuildFLOTList@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildFLOTList@@YAXXZ$0
__unwindtable$?InactivateUnit@@YAXPAVUnitClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InactivateUnit@@YAXPAVUnitClass@@@Z$0
__unwindtable$?RebuildParentsList@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildParentsList@@YAHXZ$0
__unwindtable$?RebuildObjectiveLists@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildObjectiveLists@@YAHXZ$0
__unwindtable$?InitTheaterLists@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitTheaterLists@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitTheaterLists@@YAXXZ$1
__unwindtable$?InitBaseLists@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitBaseLists@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitBaseLists@@YAXXZ$1
__unwindtable$?RebuildEmitterList@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildEmitterList@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RebuildEmitterList@@YAHXZ$1
__unwindtable$?RebuildFrontList@@YAHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildFrontList@@YAHHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RebuildFrontList@@YAHHH@Z$1
__unwindtable$?MarkObjectives@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MarkObjectives@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MarkObjectives@@YAXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MarkObjectives@@YAXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?MarkObjectives@@YAXXZ$3
__ehfuncinfo$?CheckUnitProxyOK@@YAHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckUnitProxyOK@@YAHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CheckObjProxyOK@@YAHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckObjProxyOK@@YAHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RebuildFLOTList@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RebuildFLOTList@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitTheaterLists@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitTheaterLists@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitCampaignLists@@YAXXZ DD 019930522H
	DD	011H
	DD	FLAT:__unwindtable$?InitCampaignLists@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitBaseLists@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitBaseLists@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MarkObjectives@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?MarkObjectives@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InactivateUnit@@YAXPAVUnitClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InactivateUnit@@YAXPAVUnitClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RebuildEmitterList@@YAHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RebuildEmitterList@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RebuildParentsList@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RebuildParentsList@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RebuildObjectiveLists@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RebuildObjectiveLists@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RebuildFrontList@@YAHHH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RebuildFrontList@@YAHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?InitCampaignLists@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaignLists@@YAXXZ$16
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllUnitFilter$initializer$ DD FLAT:??__EAllUnitFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllAirFilter$initializer$ DD FLAT:??__EAllAirFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllGroundFilter$initializer$ DD FLAT:??__EAllGroundFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllNavalFilter$initializer$ DD FLAT:??__EAllNavalFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllParentFilter$initializer$ DD FLAT:??__EAllParentFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllRealFilter$initializer$ DD FLAT:??__EAllRealFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_InactiveFilter$initializer$ DD FLAT:??__EInactiveFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllOpaqueFilter$initializer$ DD FLAT:??__EAllOpaqueFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_AllObjFilter$initializer$ DD FLAT:??__EAllObjFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_CampFilter$initializer$ DD FLAT:??__ECampFilter@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VUnitClass@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VUnitClass@@@@QAE@XZ PROC			; VuBin<UnitClass>::~VuBin<UnitClass>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VUnitClass@@@@QAE@XZ ENDP			; VuBin<UnitClass>::~VuBin<UnitClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VUnitClass@@@@QAE@PAVUnitClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VUnitClass@@@@QAE@PAVUnitClass@@@Z PROC	; VuBin<UnitClass>::VuBin<UnitClass>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VUnitClass@@@@QAE@PAVUnitClass@@@Z ENDP	; VuBin<UnitClass>::VuBin<UnitClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_myit$ = -84						; size = 60
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_u$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
?CheckUnitProxyOK@@YAHHH@Z PROC				; CheckUnitProxyOK

; 1082 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CheckUnitProxyOK@@YAHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1083 :     if (RealUnitProxList == NULL) return 1;

	cmp	DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A, 0 ; RealUnitProxList
	jne	SHORT $LN5@CheckUnitP
	mov	eax, 1
	jmp	$LN6@CheckUnitP
$LN5@CheckUnitP:

; 1084 : #ifdef VU_GRID_TREE_Y_MAJOR
; 1085 :     VuGridIterator myit(RealUnitProxList,(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(100));

	push	100					; 00000064H
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	eax, WORD PTR _Y$[ebp]
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	ecx, WORD PTR _X$[ebp]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	push	edx
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z ; VuGridIterator::VuGridIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1086 : #else
; 1087 :     VuGridIterator myit(RealUnitProxList,(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(100));
; 1088 : #endif
; 1089 :     Unit u;
; 1090 :     for (

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetFirst
	mov	DWORD PTR _u$[ebp], eax

; 1091 : 		u = (Unit) myit.GetFirst();
; 1092 : 		u != NULL;

	jmp	SHORT $LN4@CheckUnitP
$LN3@CheckUnitP:

; 1093 : 		u = (Unit) myit.GetNext()
; 1094 : 	){

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetNext
	mov	DWORD PTR _u$[ebp], eax
$LN4@CheckUnitP:
	cmp	DWORD PTR _u$[ebp], 0
	je	SHORT $LN2@CheckUnitP

; 1095 : 		if (F4IsBadReadPtr(u, sizeof *u)){ return 0; }

	push	260					; 00000104H
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@CheckUnitP
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN6@CheckUnitP
$LN1@CheckUnitP:

; 1096 :     }

	jmp	SHORT $LN3@CheckUnitP
$LN2@CheckUnitP:

; 1097 :     return 1;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
	mov	eax, DWORD PTR $T2[ebp]
$LN6@CheckUnitP:

; 1098 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckUnitProxyOK@@YAHHH@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
__ehhandler$?CheckUnitProxyOK@@YAHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CheckUnitProxyOK@@YAHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckUnitProxyOK@@YAHHH@Z ENDP				; CheckUnitProxyOK
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_myit$ = -84						; size = 60
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_o$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
?CheckObjProxyOK@@YAHHH@Z PROC				; CheckObjProxyOK

; 1062 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CheckObjProxyOK@@YAHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1063 :     if (ObjProxList == NULL) return 1;

	cmp	DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A, 0 ; ObjProxList
	jne	SHORT $LN5@CheckObjPr
	mov	eax, 1
	jmp	$LN6@CheckObjPr
$LN5@CheckObjPr:

; 1064 : #ifdef VU_GRID_TREE_Y_MAJOR
; 1065 :     VuGridIterator myit(ObjProxList,(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(100));

	push	100					; 00000064H
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	eax, WORD PTR _Y$[ebp]
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	ecx, WORD PTR _X$[ebp]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A ; ObjProxList
	push	edx
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z ; VuGridIterator::VuGridIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1066 : #else
; 1067 :     VuGridIterator myit(ObjProxList,(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(100));
; 1068 : #endif
; 1069 :     Objective	o;
; 1070 :     
; 1071 :     for (

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax

; 1072 : 		o = (Objective) myit.GetFirst();
; 1073 : 	    o != NULL;

	jmp	SHORT $LN4@CheckObjPr
$LN3@CheckObjPr:

; 1074 : 	    o = (Objective) myit.GetNext()
; 1075 : 	){

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax
$LN4@CheckObjPr:
	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN2@CheckObjPr

; 1076 : 		if (F4IsBadReadPtr(o, sizeof *o)){ return 0; }

	push	244					; 000000f4H
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@CheckObjPr
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN6@CheckObjPr
$LN1@CheckObjPr:

; 1077 :     }

	jmp	SHORT $LN3@CheckObjPr
$LN2@CheckObjPr:

; 1078 :     return 1;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
	mov	eax, DWORD PTR $T2[ebp]
$LN6@CheckObjPr:

; 1079 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckObjProxyOK@@YAHHH@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
__ehhandler$?CheckObjProxyOK@@YAHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CheckObjProxyOK@@YAHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckObjProxyOK@@YAHHH@Z ENDP				; CheckObjProxyOK
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_frontit$ = -80						; size = 12
_data$ = -68						; size = 4
_found$ = -64						; size = 4
_lp$ = -60						; size = 4
_i$ = -56						; size = 4
_n$ = -52						; size = 4
_o$ = -48						; size = 4
_x$ = -44						; size = 2
_y$ = -40						; size = 2
_ny$ = -36						; size = 2
_oy$ = -32						; size = 2
_nx$ = -28						; size = 2
_ox$ = -24						; size = 2
_fx$ = -20						; size = 2
_fy$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?RebuildFLOTList@@YAXXZ PROC				; RebuildFLOTList

; 839  : void RebuildFLOTList (void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildFLOTList@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 840  : 	Objective			o,n;
; 841  : 	int					i,found;
; 842  : 	ListElementClass	*lp;
; 843  : 	void				*data;
; 844  : 	GridIndex			ox,oy,nx,ny,fx,fy,x,y;
; 845  : 
; 846  : 	// KCK WARNING: This list sorts for WEST TO EAST. This will look very bad in some situations.
; 847  : 	// I need to think of an algorythm to sort based on the relative geometry between frontline objectives.
; 848  : 	FLOTList->Purge();

	mov	ecx, DWORD PTR ?FLOTList@@3PAVListClass@@A ; FLOTList
	call	?Purge@ListClass@@QAEXXZ		; ListClass::Purge

; 849  : 	VuListIterator		frontit(FrontList);

	mov	eax, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	push	eax
	lea	ecx, DWORD PTR _frontit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 850  : 	o = (Objective) frontit.GetFirst();

	lea	ecx, DWORD PTR _frontit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN12@RebuildFLO:

; 851  : 	while (o){

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN11@RebuildFLO

; 852  : 		o->GetLocation(&ox,&oy);

	lea	ecx, DWORD PTR _oy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ox$[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 853  : 		for (i=0; i<o->NumLinks(); i++){

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@RebuildFLO
$LN9@RebuildFLO:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@RebuildFLO:
	mov	ecx, DWORD PTR _o$[ebp]
	call	?NumLinks@ObjectiveClass@@QAEHXZ	; ObjectiveClass::NumLinks
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN8@RebuildFLO

; 854  : 			n = o->GetNeighbor(i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetNeighbor@ObjectiveClass@@QAEPAV1@H@Z ; ObjectiveClass::GetNeighbor
	mov	DWORD PTR _n$[ebp], eax

; 855  : 			if (n && n->IsFrontline() && o->GetTeam() != n->GetTeam()){

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN1@RebuildFLO
	mov	ecx, DWORD PTR _n$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	je	$LN1@RebuildFLO
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	esi, al
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	je	$LN1@RebuildFLO

; 856  : 				n->GetLocation(&nx,&ny);

	lea	edx, DWORD PTR _ny$[ebp]
	push	edx
	lea	eax, DWORD PTR _nx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 857  : 				fx = (short)((ox+nx)/2);

	movsx	eax, WORD PTR _ox$[ebp]
	movsx	ecx, WORD PTR _nx$[ebp]
	add	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	WORD PTR _fx$[ebp], ax

; 858  : 				fy = (short)((oy+ny)/2);

	movsx	eax, WORD PTR _oy$[ebp]
	movsx	edx, WORD PTR _ny$[ebp]
	add	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	WORD PTR _fy$[ebp], ax

; 859  : 				lp = FLOTList->GetFirstElement();

	mov	ecx, DWORD PTR ?FLOTList@@3PAVListClass@@A ; FLOTList
	call	?GetFirstElement@ListClass@@QAEPAVListElementClass@@XZ ; ListClass::GetFirstElement
	mov	DWORD PTR _lp$[ebp], eax

; 860  : 				data = PackXY(fx,fy);

	movzx	eax, WORD PTR _fy$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fx$[ebp]
	push	ecx
	call	?PackXY@@YAPAXFF@Z			; PackXY
	add	esp, 8
	mov	DWORD PTR _data$[ebp], eax

; 861  : 				found = 0;

	mov	DWORD PTR _found$[ebp], 0
$LN6@RebuildFLO:

; 862  : 				while (lp && !found)	{

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $LN5@RebuildFLO
	cmp	DWORD PTR _found$[ebp], 0
	jne	SHORT $LN5@RebuildFLO

; 863  : 					UnpackXY(lp->GetUserData(),&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	call	?GetUserData@ListElementClass@@QAEPAXXZ	; ListElementClass::GetUserData
	push	eax
	call	?UnpackXY@@YAXPAXPAF1@Z			; UnpackXY
	add	esp, 12					; 0000000cH

; 864  : 					if (DistSqu(x,y,fx,fy) < 900.0F)		// Min 30 km between points

	movzx	ecx, WORD PTR _fy$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fx$[ebp]
	push	edx
	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR __real@44610000
	comiss	xmm1, xmm0
	jbe	SHORT $LN4@RebuildFLO

; 865  : 						found = 1;

	mov	DWORD PTR _found$[ebp], 1
$LN4@RebuildFLO:

; 866  : 					lp = lp->GetNext();

	mov	ecx, DWORD PTR _lp$[ebp]
	call	?GetNext@ListElementClass@@QAEPAV1@XZ	; ListElementClass::GetNext
	mov	DWORD PTR _lp$[ebp], eax

; 867  : 				}

	jmp	SHORT $LN6@RebuildFLO
$LN5@RebuildFLO:

; 868  : 				if (!found)

	cmp	DWORD PTR _found$[ebp], 0
	jne	SHORT $LN1@RebuildFLO

; 869  : 				{
; 870  : 					if (FLOTSortDirection)

	cmp	DWORD PTR ?FLOTSortDirection@@3HA, 0	; FLOTSortDirection
	je	SHORT $LN2@RebuildFLO

; 871  : 						FLOTList->InsertNewElement(fy, data, 0);

	push	0
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	movzx	eax, WORD PTR _fy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FLOTList@@3PAVListClass@@A ; FLOTList
	call	?InsertNewElement@ListClass@@QAEXFPAXE@Z ; ListClass::InsertNewElement

; 872  : 					else

	jmp	SHORT $LN1@RebuildFLO
$LN2@RebuildFLO:

; 873  : 						FLOTList->InsertNewElement(fx, data, 0);

	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fx$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?FLOTList@@3PAVListClass@@A ; FLOTList
	call	?InsertNewElement@ListClass@@QAEXFPAXE@Z ; ListClass::InsertNewElement
$LN1@RebuildFLO:

; 874  : 				}
; 875  : 			}
; 876  : 		}

	jmp	$LN9@RebuildFLO
$LN8@RebuildFLO:

; 877  : 		o = (Objective) frontit.GetNext();

	lea	ecx, DWORD PTR _frontit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 878  : 	}

	jmp	$LN12@RebuildFLO
$LN11@RebuildFLO:

; 879  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _frontit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildFLOTList@@YAXXZ$0:
	lea	ecx, DWORD PTR _frontit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildFLOTList@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildFLOTList@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildFLOTList@@YAXXZ ENDP				; RebuildFLOTList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
tv92 = -24						; size = 4
$T1 = -20						; size = 4
tv75 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
$T4 = -4						; size = 4
?DisposeTheaterLists@@YAXXZ PROC			; DisposeTheaterLists

; 693  : void DisposeTheaterLists (void){

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 694  : 	if (AllObjProxFilter){

	cmp	DWORD PTR ?AllObjProxFilter@@3PAVObjProxFilter@@A, 0 ; AllObjProxFilter
	je	SHORT $LN2@DisposeThe

; 695  : 		delete AllObjProxFilter;

	mov	eax, DWORD PTR ?AllObjProxFilter@@3PAVObjProxFilter@@A ; AllObjProxFilter
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@DisposeThe
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN2@DisposeThe
$LN5@DisposeThe:
	mov	DWORD PTR tv75[ebp], 0
$LN2@DisposeThe:

; 696  : 	}
; 697  : 	if (ObjProxList){

	cmp	DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A, 0 ; ObjProxList
	je	SHORT $LN1@DisposeThe

; 698  : 		ObjProxList->Unregister();

	mov	ecx, DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A ; ObjProxList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 699  : 		delete ObjProxList;

	mov	eax, DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A ; ObjProxList
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN7@DisposeThe
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN1@DisposeThe
$LN7@DisposeThe:
	mov	DWORD PTR tv92[ebp], 0
$LN1@DisposeThe:

; 700  : 	}
; 701  : 	AllObjProxFilter = NULL;

	mov	DWORD PTR ?AllObjProxFilter@@3PAVObjProxFilter@@A, 0 ; AllObjProxFilter

; 702  : 	ObjProxList = NULL;

	mov	DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A, 0 ; ObjProxList

; 703  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisposeTheaterLists@@YAXXZ ENDP			; DisposeTheaterLists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
tv366 = -184						; size = 4
$T1 = -180						; size = 4
$T2 = -176						; size = 4
$T3 = -172						; size = 4
tv354 = -168						; size = 4
$T4 = -164						; size = 4
$T5 = -160						; size = 4
$T6 = -156						; size = 4
tv337 = -152						; size = 4
$T7 = -148						; size = 4
$T8 = -144						; size = 4
$T9 = -140						; size = 4
tv320 = -136						; size = 4
$T10 = -132						; size = 4
$T11 = -128						; size = 4
tv235 = -124						; size = 4
tv303 = -120						; size = 4
tv218 = -116						; size = 4
$T12 = -112						; size = 4
tv201 = -108						; size = 4
tv286 = -104						; size = 4
tv184 = -100						; size = 4
$T13 = -96						; size = 4
tv167 = -92						; size = 4
tv269 = -88						; size = 4
tv144 = -84						; size = 4
$T14 = -80						; size = 4
tv85 = -76						; size = 4
tv252 = -72						; size = 4
$T15 = -68						; size = 4
$T16 = -64						; size = 4
$T17 = -60						; size = 4
$T18 = -56						; size = 4
$T19 = -52						; size = 4
$T20 = -48						; size = 4
$T21 = -44						; size = 4
$T22 = -40						; size = 4
$T23 = -36						; size = 4
$T24 = -32						; size = 4
$T25 = -28						; size = 4
$T26 = -24						; size = 4
$T27 = -20						; size = 4
$T28 = -16						; size = 4
$T29 = -12						; size = 4
$T30 = -8						; size = 4
_loop$31 = -4						; size = 4
?DisposeCampaignLists@@YAXXZ PROC			; DisposeCampaignLists

; 598  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H

; 599  : 	/* sfr: finalized with campaign now */
; 600  : 	for (int loop = 0; loop < MAX_DIRTY_BUCKETS; loop ++){

	mov	DWORD PTR _loop$31[ebp], 0
	jmp	SHORT $LN15@DisposeCam
$LN14@DisposeCam:
	mov	eax, DWORD PTR _loop$31[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$31[ebp], eax
$LN15@DisposeCam:
	cmp	DWORD PTR _loop$31[ebp], 9
	jge	$LN13@DisposeCam

; 601  : 		// sfr: new dirty bucket
; 602  : 		//DirtyBucket[loop]->DeInit();
; 603  : 		//delete DirtyBucket[loop];
; 604  : 		//DirtyBucket[loop] = NULL;
; 605  : #if USE_VU_COLL_FOR_DIRTY
; 606  : 		simDirtyBuckets[loop]->Unregister();

	mov	ecx, DWORD PTR _loop$31[ebp]
	mov	ecx, DWORD PTR ?simDirtyBuckets@@3PAPAVTailInsertList@@A[ecx*4]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 607  : #endif
; 608  : 		delete simDirtyBuckets[loop];

	mov	edx, DWORD PTR _loop$31[ebp]
	mov	eax, DWORD PTR ?simDirtyBuckets@@3PAPAVTailInsertList@@A[edx*4]
	mov	DWORD PTR $T9[ebp], eax
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR $T23[ebp], ecx
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN18@DisposeCam
	push	1
	mov	edx, DWORD PTR $T23[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T23[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN19@DisposeCam
$LN18@DisposeCam:
	mov	DWORD PTR tv85[ebp], 0
$LN19@DisposeCam:

; 609  : 		F4DestroyCriticalSection(simDirtyMutexes[loop]);

	mov	eax, DWORD PTR _loop$31[ebp]
	mov	ecx, DWORD PTR ?simDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[eax*4]
	push	ecx
	call	_F4DestroyCriticalSection
	add	esp, 4

; 610  : 		simDirtyBuckets[loop] = NULL;

	mov	edx, DWORD PTR _loop$31[ebp]
	mov	DWORD PTR ?simDirtyBuckets@@3PAPAVTailInsertList@@A[edx*4], 0

; 611  : 		simDirtyMutexes[loop] = NULL;

	mov	eax, DWORD PTR _loop$31[ebp]
	mov	DWORD PTR ?simDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[eax*4], 0

; 612  : 
; 613  : #if USE_VU_COLL_FOR_DIRTY
; 614  : 		campDirtyBuckets[loop]->Unregister();

	mov	ecx, DWORD PTR _loop$31[ebp]
	mov	ecx, DWORD PTR ?campDirtyBuckets@@3PAPAVTailInsertList@@A[ecx*4]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 615  : #endif
; 616  : 		delete campDirtyBuckets[loop];

	mov	edx, DWORD PTR _loop$31[ebp]
	mov	eax, DWORD PTR ?campDirtyBuckets@@3PAPAVTailInsertList@@A[edx*4]
	mov	DWORD PTR $T10[ebp], eax
	mov	ecx, DWORD PTR $T10[ebp]
	mov	DWORD PTR $T19[ebp], ecx
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN20@DisposeCam
	push	1
	mov	edx, DWORD PTR $T19[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T19[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN21@DisposeCam
$LN20@DisposeCam:
	mov	DWORD PTR tv144[ebp], 0
$LN21@DisposeCam:

; 617  : 		F4DestroyCriticalSection(campDirtyMutexes[loop]);

	mov	eax, DWORD PTR _loop$31[ebp]
	mov	ecx, DWORD PTR ?campDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[eax*4]
	push	ecx
	call	_F4DestroyCriticalSection
	add	esp, 4

; 618  : 		campDirtyBuckets[loop] = NULL;

	mov	edx, DWORD PTR _loop$31[ebp]
	mov	DWORD PTR ?campDirtyBuckets@@3PAPAVTailInsertList@@A[edx*4], 0

; 619  : 		campDirtyMutexes[loop] = NULL;

	mov	eax, DWORD PTR _loop$31[ebp]
	mov	DWORD PTR ?campDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[eax*4], 0

; 620  : 	}

	jmp	$LN14@DisposeCam
$LN13@DisposeCam:

; 621  : #if USE_VU_COLL_FOR_CAMPAIGN
; 622  : 	deaggregatedEntities->Unregister();

	mov	ecx, DWORD PTR ?deaggregatedEntities@@3PAVVuHashTable@@A ; deaggregatedEntities
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 623  : 	delete deaggregatedEntities;

	mov	ecx, DWORD PTR ?deaggregatedEntities@@3PAVVuHashTable@@A ; deaggregatedEntities
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T27[ebp], edx
	cmp	DWORD PTR $T27[ebp], 0
	je	SHORT $LN22@DisposeCam
	push	1
	mov	eax, DWORD PTR $T27[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T27[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN23@DisposeCam
$LN22@DisposeCam:
	mov	DWORD PTR tv167[ebp], 0
$LN23@DisposeCam:

; 624  : 	deaggregatedEntities = NULL;

	mov	DWORD PTR ?deaggregatedEntities@@3PAVVuHashTable@@A, 0 ; deaggregatedEntities

; 625  : #else
; 626  : 	delete deaggregatedMap;
; 627  : 	deaggregatedMap = NULL;
; 628  : #endif
; 629  : 
; 630  : 
; 631  : 	DisposeObjList();

	call	?DisposeObjList@@YAXXZ			; DisposeObjList

; 632  : 	if (AllUnitList){

	cmp	DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A, 0 ; AllUnitList
	je	SHORT $LN12@DisposeCam

; 633  : 		AllUnitList->Unregister();

	mov	ecx, DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A ; AllUnitList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 634  : 		delete AllUnitList;

	mov	ecx, DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A ; AllUnitList
	mov	DWORD PTR $T15[ebp], ecx
	mov	edx, DWORD PTR $T15[ebp]
	mov	DWORD PTR $T21[ebp], edx
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN24@DisposeCam
	push	1
	mov	eax, DWORD PTR $T21[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T21[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv184[ebp], eax
	jmp	SHORT $LN25@DisposeCam
$LN24@DisposeCam:
	mov	DWORD PTR tv184[ebp], 0
$LN25@DisposeCam:

; 635  : 		AllUnitList = NULL;

	mov	DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A, 0 ; AllUnitList
$LN12@DisposeCam:

; 636  : 	}
; 637  : 	if (AllAirList){

	cmp	DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A, 0 ; AllAirList
	je	SHORT $LN11@DisposeCam

; 638  : 	    AllAirList->Unregister();

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 639  : 	    delete AllAirList;

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T25[ebp], edx
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN26@DisposeCam
	push	1
	mov	eax, DWORD PTR $T25[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T25[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv201[ebp], eax
	jmp	SHORT $LN27@DisposeCam
$LN26@DisposeCam:
	mov	DWORD PTR tv201[ebp], 0
$LN27@DisposeCam:

; 640  : 	    AllAirList = NULL;

	mov	DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A, 0 ; AllAirList
$LN11@DisposeCam:

; 641  : 	}
; 642  : 	if (AllParentList){

	cmp	DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A, 0 ; AllParentList
	je	SHORT $LN10@DisposeCam

; 643  : 		AllParentList->Unregister();

	mov	ecx, DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A ; AllParentList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 644  : 	    delete AllParentList;

	mov	ecx, DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A ; AllParentList
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR $T17[ebp], edx
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN28@DisposeCam
	push	1
	mov	eax, DWORD PTR $T17[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T17[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv218[ebp], eax
	jmp	SHORT $LN29@DisposeCam
$LN28@DisposeCam:
	mov	DWORD PTR tv218[ebp], 0
$LN29@DisposeCam:

; 645  : 	    AllParentList = NULL;

	mov	DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A, 0 ; AllParentList
$LN10@DisposeCam:

; 646  : 	}
; 647  : 	if (AllRealList){

	cmp	DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A, 0 ; AllRealList
	je	SHORT $LN9@DisposeCam

; 648  : 		AllRealList->Unregister();		

	mov	ecx, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 649  : 		delete AllRealList;

	mov	ecx, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T30[ebp], edx
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN30@DisposeCam
	push	1
	mov	eax, DWORD PTR $T30[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T30[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv235[ebp], eax
	jmp	SHORT $LN31@DisposeCam
$LN30@DisposeCam:
	mov	DWORD PTR tv235[ebp], 0
$LN31@DisposeCam:

; 650  : 		AllRealList = NULL;

	mov	DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A, 0 ; AllRealList
$LN9@DisposeCam:

; 651  : 	}
; 652  : 	if (AllObjList){

	cmp	DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A, 0 ; AllObjList
	je	SHORT $LN8@DisposeCam

; 653  : 		AllObjList->Unregister();

	mov	ecx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 654  : 		delete AllObjList;

	mov	ecx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T29[ebp], edx
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN32@DisposeCam
	push	1
	mov	eax, DWORD PTR $T29[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T29[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv252[ebp], eax
	jmp	SHORT $LN33@DisposeCam
$LN32@DisposeCam:
	mov	DWORD PTR tv252[ebp], 0
$LN33@DisposeCam:

; 655  : 		AllObjList = NULL;

	mov	DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A, 0 ; AllObjList
$LN8@DisposeCam:

; 656  : 	}
; 657  : 	if (InactiveList){

	cmp	DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A, 0 ; InactiveList
	je	SHORT $LN7@DisposeCam

; 658  : 		InactiveList->Unregister();

	mov	ecx, DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A ; InactiveList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 659  : 		delete InactiveList;

	mov	ecx, DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A ; InactiveList
	mov	DWORD PTR $T14[ebp], ecx
	mov	edx, DWORD PTR $T14[ebp]
	mov	DWORD PTR $T28[ebp], edx
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN34@DisposeCam
	push	1
	mov	eax, DWORD PTR $T28[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T28[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv269[ebp], eax
	jmp	SHORT $LN35@DisposeCam
$LN34@DisposeCam:
	mov	DWORD PTR tv269[ebp], 0
$LN35@DisposeCam:

; 660  : 		InactiveList = NULL;

	mov	DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A, 0 ; InactiveList
$LN7@DisposeCam:

; 661  : 	}
; 662  : 	if (FrontList){

	cmp	DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A, 0 ; FrontList
	je	SHORT $LN6@DisposeCam

; 663  : 		FrontList->Unregister();

	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 664  : 		delete FrontList;

	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	mov	DWORD PTR $T13[ebp], ecx
	mov	edx, DWORD PTR $T13[ebp]
	mov	DWORD PTR $T26[ebp], edx
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN36@DisposeCam
	push	1
	mov	eax, DWORD PTR $T26[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T26[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv286[ebp], eax
	jmp	SHORT $LN37@DisposeCam
$LN36@DisposeCam:
	mov	DWORD PTR tv286[ebp], 0
$LN37@DisposeCam:

; 665  : 		FrontList = NULL;

	mov	DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A, 0 ; FrontList
$LN6@DisposeCam:

; 666  : 	}
; 667  : 	if (AirDefenseList)	{

	cmp	DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A, 0 ; AirDefenseList
	je	SHORT $LN5@DisposeCam

; 668  : 		AirDefenseList->Unregister();

	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 669  : 		delete AirDefenseList;

	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	mov	DWORD PTR $T12[ebp], ecx
	mov	edx, DWORD PTR $T12[ebp]
	mov	DWORD PTR $T24[ebp], edx
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN38@DisposeCam
	push	1
	mov	eax, DWORD PTR $T24[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T24[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv303[ebp], eax
	jmp	SHORT $LN39@DisposeCam
$LN38@DisposeCam:
	mov	DWORD PTR tv303[ebp], 0
$LN39@DisposeCam:

; 670  : 		AirDefenseList = NULL;

	mov	DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A, 0 ; AirDefenseList
$LN5@DisposeCam:

; 671  : 	}
; 672  : 	if (POList){

	cmp	DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A, 0 ; POList
	je	SHORT $LN4@DisposeCam

; 673  : 		POList->Unregister();

	mov	ecx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 674  : 		delete POList;

	mov	ecx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	mov	DWORD PTR $T11[ebp], ecx
	mov	edx, DWORD PTR $T11[ebp]
	mov	DWORD PTR $T22[ebp], edx
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN40@DisposeCam
	push	1
	mov	eax, DWORD PTR $T22[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T22[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv320[ebp], eax
	jmp	SHORT $LN41@DisposeCam
$LN40@DisposeCam:
	mov	DWORD PTR tv320[ebp], 0
$LN41@DisposeCam:

; 675  : 		POList = NULL;

	mov	DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A, 0 ; POList
$LN4@DisposeCam:

; 676  : 	}
; 677  : 	if (SOList){

	cmp	DWORD PTR ?SOList@@3PAVFalconPrivateList@@A, 0 ; SOList
	je	SHORT $LN3@DisposeCam

; 678  : 		SOList->Unregister();

	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 679  : 		delete SOList;

	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	mov	DWORD PTR $T8[ebp], ecx
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T20[ebp], edx
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN42@DisposeCam
	push	1
	mov	eax, DWORD PTR $T20[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T20[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv337[ebp], eax
	jmp	SHORT $LN43@DisposeCam
$LN42@DisposeCam:
	mov	DWORD PTR tv337[ebp], 0
$LN43@DisposeCam:

; 680  : 		SOList = NULL;

	mov	DWORD PTR ?SOList@@3PAVFalconPrivateList@@A, 0 ; SOList
$LN3@DisposeCam:

; 681  : 	}
; 682  : 	if (RealUnitProxList){

	cmp	DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A, 0 ; RealUnitProxList
	je	SHORT $LN2@DisposeCam

; 683  : 		RealUnitProxList->Unregister();

	mov	ecx, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 684  : 		delete RealUnitProxList;

	mov	ecx, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T18[ebp], edx
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN44@DisposeCam
	push	1
	mov	eax, DWORD PTR $T18[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T18[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv354[ebp], eax
	jmp	SHORT $LN45@DisposeCam
$LN44@DisposeCam:
	mov	DWORD PTR tv354[ebp], 0
$LN45@DisposeCam:

; 685  : 		RealUnitProxList= NULL;

	mov	DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A, 0 ; RealUnitProxList
$LN2@DisposeCam:

; 686  : 	}
; 687  : 	if (RealUnitProxFilter){

	cmp	DWORD PTR ?RealUnitProxFilter@@3PAVUnitProxFilter@@A, 0 ; RealUnitProxFilter
	je	SHORT $LN16@DisposeCam

; 688  : 		delete RealUnitProxFilter;

	mov	ecx, DWORD PTR ?RealUnitProxFilter@@3PAVUnitProxFilter@@A ; RealUnitProxFilter
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T16[ebp], edx
	cmp	DWORD PTR $T16[ebp], 0
	je	SHORT $LN46@DisposeCam
	push	1
	mov	eax, DWORD PTR $T16[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T16[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv366[ebp], eax
	jmp	SHORT $LN47@DisposeCam
$LN46@DisposeCam:
	mov	DWORD PTR tv366[ebp], 0
$LN47@DisposeCam:

; 689  : 		RealUnitProxFilter = NULL;

	mov	DWORD PTR ?RealUnitProxFilter@@3PAVUnitProxFilter@@A, 0 ; RealUnitProxFilter
$LN16@DisposeCam:

; 690  : 	}
; 691  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisposeCampaignLists@@YAXXZ ENDP			; DisposeCampaignLists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
tv95 = -24						; size = 4
$T1 = -20						; size = 4
tv79 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
$T4 = -4						; size = 4
?DisposeBaseLists@@YAXXZ PROC				; DisposeBaseLists

; 574  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 575  : 	AllCampList->Unregister();

	mov	ecx, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 576  : 	delete AllCampList;

	mov	eax, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@DisposeBas
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@DisposeBas
$LN3@DisposeBas:
	mov	DWORD PTR tv79[ebp], 0
$LN4@DisposeBas:

; 577  : 	AllCampList = NULL;

	mov	DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A, 0 ; AllCampList

; 578  : 	//DeaggregateList->DeInit();
; 579  : 	//delete DeaggregateList;
; 580  : 	/* sfr: finalized with campaign now 
; 581  : 	for (int loop = 0; loop < MAX_DIRTY_BUCKETS; loop ++){
; 582  : 		// sfr: new dirty bucket
; 583  : 		//DirtyBucket[loop]->DeInit();
; 584  : 		//delete DirtyBucket[loop];
; 585  : 		//DirtyBucket[loop] = NULL;
; 586  : 		delete simDirtyBuckets[loop];
; 587  : 		F4DestroyCriticalSection(simDirtyMutexes[loop]);
; 588  : 		delete campDirtyBuckets[loop];
; 589  : 		F4DestroyCriticalSection(campDirtyMutexes[loop]);
; 590  : 	}*/
; 591  : 	EmitterList->Unregister();

	mov	ecx, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 592  : 	delete EmitterList;

	mov	eax, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@DisposeBas
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN6@DisposeBas
$LN5@DisposeBas:
	mov	DWORD PTR tv95[ebp], 0
$LN6@DisposeBas:

; 593  : 	EmitterList = NULL;

	mov	DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A, 0 ; EmitterList

; 594  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisposeBaseLists@@YAXXZ ENDP				; DisposeBaseLists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
$T3 = -32						; size = 4
tv91 = -28						; size = 4
$T4 = -24						; size = 4
tv78 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitTheaterLists@@YAXXZ PROC				; InitTheaterLists

; 559  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitTheaterLists@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 560  : #if GRID_CORRECTION
; 561  : 	AllObjProxFilter = new ObjProxFilter(TREE_RES, (GRID_SIZE_FT * (Map_Max_Y+1)));

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN3@InitTheate
	movsx	eax, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	add	eax, 1
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	100					; 00000064H
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0ObjProxFilter@@QAE@IM@Z		; ObjProxFilter::ObjProxFilter
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@InitTheate
$LN3@InitTheate:
	mov	DWORD PTR tv78[ebp], 0
$LN4@InitTheate:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?AllObjProxFilter@@3PAVObjProxFilter@@A, edx ; AllObjProxFilter

; 562  : #else
; 563  : 	AllObjProxFilter = new ObjProxFilter();
; 564  : #endif
; 565  : #ifdef VU_GRID_TREE_Y_MAJOR
; 566  : 	ObjProxList = new VuGridTree(AllObjProxFilter, TREE_RES);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@InitTheate
	push	100					; 00000064H
	mov	eax, DWORD PTR ?AllObjProxFilter@@3PAVObjProxFilter@@A ; AllObjProxFilter
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z ; VuGridTree::VuGridTree
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN6@InitTheate
$LN5@InitTheate:
	mov	DWORD PTR tv91[ebp], 0
$LN6@InitTheate:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A, edx ; ObjProxList

; 567  : #else
; 568  : 	ObjProxList = new VuGridTree(AllObjProxFilter, TREE_RES);
; 569  : #endif
; 570  : 	ObjProxList->Register();

	mov	ecx, DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A ; ObjProxList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 571  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitTheaterLists@@YAXXZ$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitTheaterLists@@YAXXZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitTheaterLists@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitTheaterLists@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitTheaterLists@@YAXXZ ENDP				; InitTheaterLists
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
$T2 = -220						; size = 4
$T3 = -216						; size = 4
$T4 = -212						; size = 4
$T5 = -208						; size = 4
$T6 = -204						; size = 4
$T7 = -200						; size = 4
$T8 = -196						; size = 4
$T9 = -192						; size = 4
$T10 = -188						; size = 4
$T11 = -184						; size = 4
$T12 = -180						; size = 4
$T13 = -176						; size = 4
$T14 = -172						; size = 4
$T15 = -168						; size = 4
$T16 = -164						; size = 4
$T17 = -160						; size = 4
$T18 = -156						; size = 4
tv239 = -152						; size = 4
$T19 = -148						; size = 4
tv227 = -144						; size = 4
$T20 = -140						; size = 4
tv215 = -136						; size = 4
$T21 = -132						; size = 4
tv203 = -128						; size = 4
$T22 = -124						; size = 4
tv191 = -120						; size = 4
tv315 = -116						; size = 4
tv179 = -112						; size = 4
tv298 = -108						; size = 4
tv152 = -104						; size = 4
tv281 = -100						; size = 4
tv131 = -96						; size = 4
tv78 = -92						; size = 4
$T23 = -88						; size = 4
tv416 = -84						; size = 4
$T24 = -80						; size = 4
$T25 = -76						; size = 4
$T26 = -72						; size = 4
tv371 = -68						; size = 4
$T27 = -64						; size = 4
$T28 = -60						; size = 4
$T29 = -56						; size = 4
tv356 = -52						; size = 4
$T30 = -48						; size = 4
$T31 = -44						; size = 4
$T32 = -40						; size = 4
tv346 = -36						; size = 4
$T33 = -32						; size = 4
$T34 = -28						; size = 4
tv332 = -24						; size = 4
$T35 = -20						; size = 4
_loop$36 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitCampaignLists@@YAXXZ PROC				; InitCampaignLists

; 471  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitCampaignLists@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 472  : #if USE_VU_COLL_FOR_CAMPAIGN
; 473  : 	#if VU_ALL_FILTERED
; 474  : 	deaggregatedEntities = new VuHashTable(&FalconNothingFilter, 101);

	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN10@InitCampai
	push	59					; 0000003bH
	push	101					; 00000065H
	push	OFFSET ?FalconNothingFilter@@3VFalconNothingFilterType@@A ; FalconNothingFilter
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0VuHashTable@@QAE@PAVVuFilter@@II@Z	; VuHashTable::VuHashTable
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN11@InitCampai
$LN10@InitCampai:
	mov	DWORD PTR tv78[ebp], 0
$LN11@InitCampai:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T18[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T18[ebp]
	mov	DWORD PTR ?deaggregatedEntities@@3PAVVuHashTable@@A, ecx ; deaggregatedEntities

; 475  : 	#else
; 476  : 	deaggregatedEntities = new VuFilteredHashTable(&FalconNothingFilter, 101);
; 477  : 	#endif
; 478  : 	deaggregatedEntities->Register();

	mov	ecx, DWORD PTR ?deaggregatedEntities@@3PAVVuHashTable@@A ; deaggregatedEntities
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 479  : #else
; 480  : 	deaggregatedMap = new CampBaseMap("deaggregated campbase");
; 481  : #endif
; 482  : 
; 483  : 	/* sfr: these are initialized with campaign now */
; 484  : 	for (int loop = 0; loop < MAX_DIRTY_BUCKETS; loop ++){

	mov	DWORD PTR _loop$36[ebp], 0
	jmp	SHORT $LN7@InitCampai
$LN6@InitCampai:
	mov	edx, DWORD PTR _loop$36[ebp]
	add	edx, 1
	mov	DWORD PTR _loop$36[ebp], edx
$LN7@InitCampai:
	cmp	DWORD PTR _loop$36[ebp], 9
	jge	$LN5@InitCampai

; 485  : 		// sfr: new dirty buckets
; 486  : 		//DirtyBucket[loop] = new TailInsertList (&AllOpaqueFilter);
; 487  : 		//DirtyBucket[loop]->Init();
; 488  : #if USE_VU_COLL_FOR_DIRTY
; 489  : 		campDirtyBuckets[loop] = new TailInsertList(&AllOpaqueFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T33[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T33[ebp], 0
	je	SHORT $LN12@InitCampai
	push	OFFSET ?AllOpaqueFilter@@3VVuOpaqueFilter@@A ; AllOpaqueFilter
	mov	ecx, DWORD PTR $T33[ebp]
	call	??0TailInsertList@@QAE@PAVVuFilter@@@Z	; TailInsertList::TailInsertList
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN13@InitCampai
$LN12@InitCampai:
	mov	DWORD PTR tv131[ebp], 0
$LN13@InitCampai:
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _loop$36[ebp]
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR ?campDirtyBuckets@@3PAPAVTailInsertList@@A[ecx*4], edx

; 490  : 		campDirtyBuckets[loop]->Register();

	mov	eax, DWORD PTR _loop$36[ebp]
	mov	ecx, DWORD PTR ?campDirtyBuckets@@3PAPAVTailInsertList@@A[eax*4]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 491  : 		simDirtyBuckets[loop] = new TailInsertList(&AllOpaqueFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T32[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T32[ebp], 0
	je	SHORT $LN14@InitCampai
	push	OFFSET ?AllOpaqueFilter@@3VVuOpaqueFilter@@A ; AllOpaqueFilter
	mov	ecx, DWORD PTR $T32[ebp]
	call	??0TailInsertList@@QAE@PAVVuFilter@@@Z	; TailInsertList::TailInsertList
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN15@InitCampai
$LN14@InitCampai:
	mov	DWORD PTR tv152[ebp], 0
$LN15@InitCampai:
	mov	ecx, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T15[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _loop$36[ebp]
	mov	eax, DWORD PTR $T15[ebp]
	mov	DWORD PTR ?simDirtyBuckets@@3PAPAVTailInsertList@@A[edx*4], eax

; 492  : 		simDirtyBuckets[loop]->Register();

	mov	ecx, DWORD PTR _loop$36[ebp]
	mov	ecx, DWORD PTR ?simDirtyBuckets@@3PAPAVTailInsertList@@A[ecx*4]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 493  : #else
; 494  : 		campDirtyBuckets[loop] = new list<FalconEntityBin>;
; 495  : 		simDirtyBuckets[loop] = new list<FalconEntityBin>;
; 496  : #endif
; 497  : 		campDirtyMutexes[loop] = F4CreateCriticalSection("camp dirty mutex");

	push	OFFSET ??_C@_0BB@INAEOENF@camp?5dirty?5mutex?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	edx, DWORD PTR _loop$36[ebp]
	mov	DWORD PTR ?campDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[edx*4], eax

; 498  : 		simDirtyMutexes[loop] = F4CreateCriticalSection("sim dirty mutex");

	push	OFFSET ??_C@_0BA@LCJMGABO@sim?5dirty?5mutex?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	ecx, DWORD PTR _loop$36[ebp]
	mov	DWORD PTR ?simDirtyMutexes@@3PAPAUF4CSECTIONHANDLE@@A[ecx*4], eax

; 499  : 	}

	jmp	$LN6@InitCampai
$LN5@InitCampai:

; 500  : 
; 501  : 
; 502  : #if VU_ALL_FILTERED
; 503  : 	AllUnitList = new VuLinkedList(&AllUnitFilter);		

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN16@InitCampai
	push	OFFSET ?AllUnitFilter@@3VUnitFilter@@A	; AllUnitFilter
	mov	ecx, DWORD PTR $T30[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN17@InitCampai
$LN16@InitCampai:
	mov	DWORD PTR tv179[ebp], 0
$LN17@InitCampai:
	mov	edx, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A, eax ; AllUnitList

; 504  : 	AllAirList = new VuLinkedList(&AllAirFilter);			

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T29[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN18@InitCampai
	push	OFFSET ?AllAirFilter@@3VAirUnitFilter@@A ; AllAirFilter
	mov	ecx, DWORD PTR $T29[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN19@InitCampai
$LN18@InitCampai:
	mov	DWORD PTR tv191[ebp], 0
$LN19@InitCampai:
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR $T13[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T13[ebp]
	mov	DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A, edx ; AllAirList

; 505  : 	AllParentList = new VuLinkedList(&AllParentFilter);	

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T27[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T27[ebp], 0
	je	SHORT $LN20@InitCampai
	push	OFFSET ?AllParentFilter@@3VUnitFilter@@A ; AllParentFilter
	mov	ecx, DWORD PTR $T27[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN21@InitCampai
$LN20@InitCampai:
	mov	DWORD PTR tv203[ebp], 0
$LN21@InitCampai:
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A, ecx ; AllParentList

; 506  : 	AllRealList = new VuLinkedList(&AllRealFilter);		

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T26[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN22@InitCampai
	push	OFFSET ?AllRealFilter@@3VUnitFilter@@A	; AllRealFilter
	mov	ecx, DWORD PTR $T26[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv215[ebp], eax
	jmp	SHORT $LN23@InitCampai
$LN22@InitCampai:
	mov	DWORD PTR tv215[ebp], 0
$LN23@InitCampai:
	mov	edx, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T11[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A, eax ; AllRealList

; 507  : 	AllObjList = new VuLinkedList(&AllObjFilter);			

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN24@InitCampai
	push	OFFSET ?AllObjFilter@@3VObjFilter@@A	; AllObjFilter
	mov	ecx, DWORD PTR $T24[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv227[ebp], eax
	jmp	SHORT $LN25@InitCampai
$LN24@InitCampai:
	mov	DWORD PTR tv227[ebp], 0
$LN25@InitCampai:
	mov	ecx, DWORD PTR tv227[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A, edx ; AllObjList

; 508  : 	InactiveList = new VuLinkedList(&InactiveFilter);			

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T23[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN26@InitCampai
	push	OFFSET ?InactiveFilter@@3VUnitFilter@@A	; InactiveFilter
	mov	ecx, DWORD PTR $T23[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv239[ebp], eax
	jmp	SHORT $LN27@InitCampai
$LN26@InitCampai:
	mov	DWORD PTR tv239[ebp], 0
$LN27@InitCampai:
	mov	eax, DWORD PTR tv239[ebp]
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T17[ebp]
	mov	DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A, ecx ; InactiveList

; 509  : #else
; 510  : 	AllUnitList = new VuFilteredList (&AllUnitFilter);		
; 511  : 	AllAirList = new VuFilteredList (&AllAirFilter);			
; 512  : 	AllParentList = new VuFilteredList (&AllParentFilter);	
; 513  : 	AllRealList = new VuFilteredList (&AllRealFilter);		
; 514  : 	AllObjList = new VuFilteredList (&AllObjFilter);			
; 515  : 	InactiveList = new VuFilteredList (&InactiveFilter);			
; 516  : #endif
; 517  : 	AllUnitList->Register();

	mov	ecx, DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A ; AllUnitList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 518  : 	AllAirList->Register();

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 519  : 	AllParentList->Register();

	mov	ecx, DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A ; AllParentList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 520  : 	AllRealList->Register();

	mov	ecx, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 521  : 	AllObjList->Register();

	mov	ecx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 522  : 	InactiveList->Register();

	mov	ecx, DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A ; InactiveList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 523  : 
; 524  : 	FrontList = new FalconPrivateList(&AllObjFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN28@InitCampai
	push	OFFSET ?AllObjFilter@@3VObjFilter@@A	; AllObjFilter
	mov	ecx, DWORD PTR $T22[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR tv281[ebp], eax
	jmp	SHORT $LN29@InitCampai
$LN28@InitCampai:
	mov	DWORD PTR tv281[ebp], 0
$LN29@InitCampai:
	mov	edx, DWORD PTR tv281[ebp]
	mov	DWORD PTR $T16[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T16[ebp]
	mov	DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A, eax ; FrontList

; 525  : 	FrontList->Register();

	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 526  : 	AirDefenseList = new FalconPrivateList(&CampFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN30@InitCampai
	push	OFFSET ?CampFilter@@3VCampBaseFilter@@A	; CampFilter
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR tv298[ebp], eax
	jmp	SHORT $LN31@InitCampai
$LN30@InitCampai:
	mov	DWORD PTR tv298[ebp], 0
$LN31@InitCampai:
	mov	ecx, DWORD PTR tv298[ebp]
	mov	DWORD PTR $T14[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T14[ebp]
	mov	DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A, edx ; AirDefenseList

; 527  : 	AirDefenseList->Register();

	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 528  : 	POList = new FalconPrivateOrderedList(&AllObjFilter);		

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN32@InitCampai
	push	OFFSET ?AllObjFilter@@3VObjFilter@@A	; AllObjFilter
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0FalconPrivateOrderedList@@QAE@PAVVuFilter@@@Z ; FalconPrivateOrderedList::FalconPrivateOrderedList
	mov	DWORD PTR tv315[ebp], eax
	jmp	SHORT $LN33@InitCampai
$LN32@InitCampai:
	mov	DWORD PTR tv315[ebp], 0
$LN33@InitCampai:
	mov	eax, DWORD PTR tv315[ebp]
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T12[ebp]
	mov	DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A, ecx ; POList

; 529  : 	POList->Register();

	mov	ecx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 530  : 	SOList = new FalconPrivateList(&AllObjFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T35[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T35[ebp], 0
	je	SHORT $LN34@InitCampai
	push	OFFSET ?AllObjFilter@@3VObjFilter@@A	; AllObjFilter
	mov	ecx, DWORD PTR $T35[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR tv332[ebp], eax
	jmp	SHORT $LN35@InitCampai
$LN34@InitCampai:
	mov	DWORD PTR tv332[ebp], 0
$LN35@InitCampai:
	mov	edx, DWORD PTR tv332[ebp]
	mov	DWORD PTR $T10[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR ?SOList@@3PAVFalconPrivateList@@A, eax ; SOList

; 531  : 	SOList->Register();

	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 532  : 	if (PODataList == NULL){

	cmp	DWORD PTR ?PODataList@@3PAVListClass@@A, 0 ; PODataList
	jne	SHORT $LN4@InitCampai

; 533  : 		PODataList = new ListClass();

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T34[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN36@InitCampai
	push	0
	mov	ecx, DWORD PTR $T34[ebp]
	call	??0ListClass@@QAE@E@Z			; ListClass::ListClass
	mov	DWORD PTR tv346[ebp], eax
	jmp	SHORT $LN37@InitCampai
$LN36@InitCampai:
	mov	DWORD PTR tv346[ebp], 0
$LN37@InitCampai:
	mov	ecx, DWORD PTR tv346[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR ?PODataList@@3PAVListClass@@A, edx ; PODataList

; 534  : 	}
; 535  : 	else {

	jmp	SHORT $LN3@InitCampai
$LN4@InitCampai:

; 536  : 		PODataList->Purge();

	mov	ecx, DWORD PTR ?PODataList@@3PAVListClass@@A ; PODataList
	call	?Purge@ListClass@@QAEXXZ		; ListClass::Purge
$LN3@InitCampai:

; 537  : 	}
; 538  : 
; 539  : 	if (FLOTList == NULL){

	cmp	DWORD PTR ?FLOTList@@3PAVListClass@@A, 0 ; FLOTList
	jne	SHORT $LN2@InitCampai

; 540  : 		FLOTList = new ListClass(LADT_SORTED_LIST);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T31[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	cmp	DWORD PTR $T31[ebp], 0
	je	SHORT $LN38@InitCampai
	push	1
	mov	ecx, DWORD PTR $T31[ebp]
	call	??0ListClass@@QAE@E@Z			; ListClass::ListClass
	mov	DWORD PTR tv356[ebp], eax
	jmp	SHORT $LN39@InitCampai
$LN38@InitCampai:
	mov	DWORD PTR tv356[ebp], 0
$LN39@InitCampai:
	mov	eax, DWORD PTR tv356[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR ?FLOTList@@3PAVListClass@@A, ecx ; FLOTList

; 541  : 	}
; 542  : 	else {

	jmp	SHORT $LN1@InitCampai
$LN2@InitCampai:

; 543  : 		FLOTList->Purge();

	mov	ecx, DWORD PTR ?FLOTList@@3PAVListClass@@A ; FLOTList
	call	?Purge@ListClass@@QAEXXZ		; ListClass::Purge
$LN1@InitCampai:

; 544  : 	}
; 545  : #if GRID_CORRECTION
; 546  : 	RealUnitProxFilter = new UnitProxFilter(TREE_RES, (GRID_SIZE_FT * (Map_Max_Y+1)));

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T28[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN40@InitCampai
	movsx	edx, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	add	edx, 1
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	100					; 00000064H
	mov	ecx, DWORD PTR $T28[ebp]
	call	??0UnitProxFilter@@QAE@IM@Z		; UnitProxFilter::UnitProxFilter
	mov	DWORD PTR tv371[ebp], eax
	jmp	SHORT $LN41@InitCampai
$LN40@InitCampai:
	mov	DWORD PTR tv371[ebp], 0
$LN41@InitCampai:
	mov	eax, DWORD PTR tv371[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR ?RealUnitProxFilter@@3PAVUnitProxFilter@@A, ecx ; RealUnitProxFilter

; 547  : #else
; 548  : 	RealUnitProxFilter = new UnitProxFilter(1);
; 549  : #endif
; 550  : #ifdef VU_GRID_TREE_Y_MAJOR
; 551  : 	RealUnitProxList = new VuGridTree(RealUnitProxFilter, TREE_RES);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN42@InitCampai
	push	100					; 00000064H
	mov	edx, DWORD PTR ?RealUnitProxFilter@@3PAVUnitProxFilter@@A ; RealUnitProxFilter
	push	edx
	mov	ecx, DWORD PTR $T25[ebp]
	call	??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z ; VuGridTree::VuGridTree
	mov	DWORD PTR tv416[ebp], eax
	jmp	SHORT $LN43@InitCampai
$LN42@InitCampai:
	mov	DWORD PTR tv416[ebp], 0
$LN43@InitCampai:
	mov	eax, DWORD PTR tv416[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A, ecx ; RealUnitProxList

; 552  : #else
; 553  : 	RealUnitProxList = new VuGridTree(RealUnitProxFilter, TREE_RES);
; 554  : #endif
; 555  : 	RealUnitProxList->Register();

	mov	ecx, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 556  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitCampaignLists@@YAXXZ$0:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$1:
	mov	eax, DWORD PTR $T33[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$2:
	mov	eax, DWORD PTR $T32[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$3:
	mov	eax, DWORD PTR $T30[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$4:
	mov	eax, DWORD PTR $T29[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$5:
	mov	eax, DWORD PTR $T27[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$6:
	mov	eax, DWORD PTR $T26[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$7:
	mov	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$8:
	mov	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$9:
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$10:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$11:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$12:
	mov	eax, DWORD PTR $T35[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$13:
	mov	eax, DWORD PTR $T34[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$14:
	mov	eax, DWORD PTR $T31[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$15:
	mov	eax, DWORD PTR $T28[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaignLists@@YAXXZ$16:
	mov	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitCampaignLists@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitCampaignLists@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitCampaignLists@@YAXXZ ENDP				; InitCampaignLists
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
$T3 = -32						; size = 4
tv93 = -28						; size = 4
$T4 = -24						; size = 4
tv76 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitBaseLists@@YAXXZ PROC				; InitBaseLists

; 446  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitBaseLists@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 447  : #if VU_ALL_FILTERED
; 448  : 	AllCampList = new VuLinkedList(&CampFilter);			

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN3@InitBaseLi
	push	OFFSET ?CampFilter@@3VCampBaseFilter@@A	; CampFilter
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0VuLinkedList@@QAE@PAVVuFilter@@@Z	; VuLinkedList::VuLinkedList
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@InitBaseLi
$LN3@InitBaseLi:
	mov	DWORD PTR tv76[ebp], 0
$LN4@InitBaseLi:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A, ecx ; AllCampList

; 449  : #else
; 450  : 	AllCampList = new VuFilteredList (&CampFilter);			
; 451  : #endif
; 452  : 	AllCampList->Register();

	mov	ecx, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 453  : 	//deaggregateList = new FalconPrivateList (&CampFilter);
; 454  : 	//DeaggregateList->Init();
; 455  : 	/* sfr: these are initialized with campaign now
; 456  : 	for (int loop = 0; loop < MAX_DIRTY_BUCKETS; loop ++){
; 457  : 		// sfr: new dirty buckets
; 458  : 		//DirtyBucket[loop] = new TailInsertList (&AllOpaqueFilter);
; 459  : 		//DirtyBucket[loop]->Init();
; 460  : 		campDirtyBuckets[loop] = new list<FalconEntityBin>;
; 461  : 		campDirtyMutexes[loop] = F4CreateCriticalSection("camp dirty mutex");
; 462  : 		simDirtyBuckets[loop] = new list<FalconEntityBin>;
; 463  : 		simDirtyMutexes[loop] = F4CreateCriticalSection("sim dirty mutex");
; 464  : 	}
; 465  : 	*/
; 466  : 	EmitterList = new FalconPrivateList(&CampFilter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@InitBaseLi
	push	OFFSET ?CampFilter@@3VCampBaseFilter@@A	; CampFilter
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN6@InitBaseLi
$LN5@InitBaseLi:
	mov	DWORD PTR tv93[ebp], 0
$LN6@InitBaseLi:
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A, eax ; EmitterList

; 467  : 	EmitterList->Register();

	mov	ecx, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 468  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitBaseLists@@YAXXZ$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitBaseLists@@YAXXZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitBaseLists@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitBaseLists@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitBaseLists@@YAXXZ ENDP				; InitBaseLists
; Function compile flags: /Odtp
;	COMDAT ??__FCampFilter@@YAXXZ
text$yd	SEGMENT
??__FCampFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'CampFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?CampFilter@@3VCampBaseFilter@@A ; CampFilter
	call	??1CampBaseFilter@@UAE@XZ		; CampBaseFilter::~CampBaseFilter
	pop	ebp
	ret	0
??__FCampFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'CampFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__ECampFilter@@YAXXZ
text$yc	SEGMENT
??__ECampFilter@@YAXXZ PROC				; `dynamic initializer for 'CampFilter'', COMDAT

; 352  : CampBaseFilter CampFilter;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?CampFilter@@3VCampBaseFilter@@A ; CampFilter
	call	??0CampBaseFilter@@QAE@XZ		; CampBaseFilter::CampBaseFilter
	push	OFFSET ??__FCampFilter@@YAXXZ		; `dynamic atexit destructor for 'CampFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__ECampFilter@@YAXXZ ENDP				; `dynamic initializer for 'CampFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllObjFilter@@YAXXZ
text$yd	SEGMENT
??__FAllObjFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'AllObjFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllObjFilter@@3VObjFilter@@A ; AllObjFilter
	call	??1ObjFilter@@UAE@XZ			; ObjFilter::~ObjFilter
	pop	ebp
	ret	0
??__FAllObjFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'AllObjFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllObjFilter@@YAXXZ
text$yc	SEGMENT
??__EAllObjFilter@@YAXXZ PROC				; `dynamic initializer for 'AllObjFilter'', COMDAT

; 290  : ObjFilter		AllObjFilter(0);

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?AllObjFilter@@3VObjFilter@@A ; AllObjFilter
	call	??0ObjFilter@@QAE@G@Z			; ObjFilter::ObjFilter
	push	OFFSET ??__FAllObjFilter@@YAXXZ		; `dynamic atexit destructor for 'AllObjFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllObjFilter@@YAXXZ ENDP				; `dynamic initializer for 'AllObjFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllOpaqueFilter@@YAXXZ
text$yd	SEGMENT
??__FAllOpaqueFilter@@YAXXZ PROC			; `dynamic atexit destructor for 'AllOpaqueFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllOpaqueFilter@@3VVuOpaqueFilter@@A ; AllOpaqueFilter
	call	??1VuOpaqueFilter@@UAE@XZ		; VuOpaqueFilter::~VuOpaqueFilter
	pop	ebp
	ret	0
??__FAllOpaqueFilter@@YAXXZ ENDP			; `dynamic atexit destructor for 'AllOpaqueFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllOpaqueFilter@@YAXXZ
text$yc	SEGMENT
??__EAllOpaqueFilter@@YAXXZ PROC			; `dynamic initializer for 'AllOpaqueFilter'', COMDAT

; 210  : VuOpaqueFilter		AllOpaqueFilter;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllOpaqueFilter@@3VVuOpaqueFilter@@A ; AllOpaqueFilter
	call	??0VuOpaqueFilter@@QAE@XZ		; VuOpaqueFilter::VuOpaqueFilter
	push	OFFSET ??__FAllOpaqueFilter@@YAXXZ	; `dynamic atexit destructor for 'AllOpaqueFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllOpaqueFilter@@YAXXZ ENDP			; `dynamic initializer for 'AllOpaqueFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FInactiveFilter@@YAXXZ
text$yd	SEGMENT
??__FInactiveFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'InactiveFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?InactiveFilter@@3VUnitFilter@@A ; InactiveFilter
	call	??1UnitFilter@@UAE@XZ			; UnitFilter::~UnitFilter
	pop	ebp
	ret	0
??__FInactiveFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'InactiveFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EInactiveFilter@@YAXXZ
text$yc	SEGMENT
??__EInactiveFilter@@YAXXZ PROC				; `dynamic initializer for 'InactiveFilter'', COMDAT

; 209  : UnitFilter			InactiveFilter(0,0,0,1);

	push	ebp
	mov	ebp, esp
	push	1
	push	0
	push	0
	push	0
	mov	ecx, OFFSET ?InactiveFilter@@3VUnitFilter@@A ; InactiveFilter
	call	??0UnitFilter@@QAE@EEGE@Z		; UnitFilter::UnitFilter
	push	OFFSET ??__FInactiveFilter@@YAXXZ	; `dynamic atexit destructor for 'InactiveFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EInactiveFilter@@YAXXZ ENDP				; `dynamic initializer for 'InactiveFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllRealFilter@@YAXXZ
text$yd	SEGMENT
??__FAllRealFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'AllRealFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllRealFilter@@3VUnitFilter@@A ; AllRealFilter
	call	??1UnitFilter@@UAE@XZ			; UnitFilter::~UnitFilter
	pop	ebp
	ret	0
??__FAllRealFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'AllRealFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllRealFilter@@YAXXZ
text$yc	SEGMENT
??__EAllRealFilter@@YAXXZ PROC				; `dynamic initializer for 'AllRealFilter'', COMDAT

; 208  : UnitFilter			AllRealFilter(0,TRUE,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	1
	push	0
	mov	ecx, OFFSET ?AllRealFilter@@3VUnitFilter@@A ; AllRealFilter
	call	??0UnitFilter@@QAE@EEGE@Z		; UnitFilter::UnitFilter
	push	OFFSET ??__FAllRealFilter@@YAXXZ	; `dynamic atexit destructor for 'AllRealFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllRealFilter@@YAXXZ ENDP				; `dynamic initializer for 'AllRealFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllParentFilter@@YAXXZ
text$yd	SEGMENT
??__FAllParentFilter@@YAXXZ PROC			; `dynamic atexit destructor for 'AllParentFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllParentFilter@@3VUnitFilter@@A ; AllParentFilter
	call	??1UnitFilter@@UAE@XZ			; UnitFilter::~UnitFilter
	pop	ebp
	ret	0
??__FAllParentFilter@@YAXXZ ENDP			; `dynamic atexit destructor for 'AllParentFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllParentFilter@@YAXXZ
text$yc	SEGMENT
??__EAllParentFilter@@YAXXZ PROC			; `dynamic initializer for 'AllParentFilter'', COMDAT

; 207  : UnitFilter			AllParentFilter(TRUE,0,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	0
	push	1
	mov	ecx, OFFSET ?AllParentFilter@@3VUnitFilter@@A ; AllParentFilter
	call	??0UnitFilter@@QAE@EEGE@Z		; UnitFilter::UnitFilter
	push	OFFSET ??__FAllParentFilter@@YAXXZ	; `dynamic atexit destructor for 'AllParentFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllParentFilter@@YAXXZ ENDP			; `dynamic initializer for 'AllParentFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllNavalFilter@@YAXXZ
text$yd	SEGMENT
??__FAllNavalFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'AllNavalFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllNavalFilter@@3VNavalUnitFilter@@A ; AllNavalFilter
	call	??1NavalUnitFilter@@UAE@XZ		; NavalUnitFilter::~NavalUnitFilter
	pop	ebp
	ret	0
??__FAllNavalFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'AllNavalFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllNavalFilter@@YAXXZ
text$yc	SEGMENT
??__EAllNavalFilter@@YAXXZ PROC				; `dynamic initializer for 'AllNavalFilter'', COMDAT

; 206  : NavalUnitFilter		AllNavalFilter(0,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	0
	mov	ecx, OFFSET ?AllNavalFilter@@3VNavalUnitFilter@@A ; AllNavalFilter
	call	??0NavalUnitFilter@@QAE@EEG@Z		; NavalUnitFilter::NavalUnitFilter
	push	OFFSET ??__FAllNavalFilter@@YAXXZ	; `dynamic atexit destructor for 'AllNavalFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllNavalFilter@@YAXXZ ENDP				; `dynamic initializer for 'AllNavalFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllGroundFilter@@YAXXZ
text$yd	SEGMENT
??__FAllGroundFilter@@YAXXZ PROC			; `dynamic atexit destructor for 'AllGroundFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllGroundFilter@@3VGroundUnitFilter@@A ; AllGroundFilter
	call	??1GroundUnitFilter@@UAE@XZ		; GroundUnitFilter::~GroundUnitFilter
	pop	ebp
	ret	0
??__FAllGroundFilter@@YAXXZ ENDP			; `dynamic atexit destructor for 'AllGroundFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllGroundFilter@@YAXXZ
text$yc	SEGMENT
??__EAllGroundFilter@@YAXXZ PROC			; `dynamic initializer for 'AllGroundFilter'', COMDAT

; 205  : GroundUnitFilter	AllGroundFilter(0,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	0
	mov	ecx, OFFSET ?AllGroundFilter@@3VGroundUnitFilter@@A ; AllGroundFilter
	call	??0GroundUnitFilter@@QAE@EEG@Z		; GroundUnitFilter::GroundUnitFilter
	push	OFFSET ??__FAllGroundFilter@@YAXXZ	; `dynamic atexit destructor for 'AllGroundFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllGroundFilter@@YAXXZ ENDP			; `dynamic initializer for 'AllGroundFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllAirFilter@@YAXXZ
text$yd	SEGMENT
??__FAllAirFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'AllAirFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllAirFilter@@3VAirUnitFilter@@A ; AllAirFilter
	call	??1AirUnitFilter@@UAE@XZ		; AirUnitFilter::~AirUnitFilter
	pop	ebp
	ret	0
??__FAllAirFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'AllAirFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllAirFilter@@YAXXZ
text$yc	SEGMENT
??__EAllAirFilter@@YAXXZ PROC				; `dynamic initializer for 'AllAirFilter'', COMDAT

; 204  : AirUnitFilter		AllAirFilter(0,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	0
	mov	ecx, OFFSET ?AllAirFilter@@3VAirUnitFilter@@A ; AllAirFilter
	call	??0AirUnitFilter@@QAE@EEG@Z		; AirUnitFilter::AirUnitFilter
	push	OFFSET ??__FAllAirFilter@@YAXXZ		; `dynamic atexit destructor for 'AllAirFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllAirFilter@@YAXXZ ENDP				; `dynamic initializer for 'AllAirFilter''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FAllUnitFilter@@YAXXZ
text$yd	SEGMENT
??__FAllUnitFilter@@YAXXZ PROC				; `dynamic atexit destructor for 'AllUnitFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AllUnitFilter@@3VUnitFilter@@A ; AllUnitFilter
	call	??1UnitFilter@@UAE@XZ			; UnitFilter::~UnitFilter
	pop	ebp
	ret	0
??__FAllUnitFilter@@YAXXZ ENDP				; `dynamic atexit destructor for 'AllUnitFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
;	COMDAT ??__EAllUnitFilter@@YAXXZ
text$yc	SEGMENT
??__EAllUnitFilter@@YAXXZ PROC				; `dynamic initializer for 'AllUnitFilter'', COMDAT

; 203  : UnitFilter			AllUnitFilter(0,0,0,0);

	push	ebp
	mov	ebp, esp
	push	0
	push	0
	push	0
	push	0
	mov	ecx, OFFSET ?AllUnitFilter@@3VUnitFilter@@A ; AllUnitFilter
	call	??0UnitFilter@@QAE@EEGE@Z		; UnitFilter::UnitFilter
	push	OFFSET ??__FAllUnitFilter@@YAXXZ	; `dynamic atexit destructor for 'AllUnitFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EAllUnitFilter@@YAXXZ ENDP				; `dynamic initializer for 'AllUnitFilter''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_secondlist$ = -84					; size = 24
_secondit$2 = -60					; size = 12
_frontit$3 = -48					; size = 12
_myit$4 = -36						; size = 12
_i$ = -24						; size = 4
_n$ = -20						; size = 4
_o$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?MarkObjectives@@YAXXZ PROC				; MarkObjectives

; 882  : void MarkObjectives (void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MarkObjectives@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 883  : 	FalconPrivateList secondlist(&AllObjFilter);

	push	OFFSET ?AllObjFilter@@3VObjFilter@@A	; AllObjFilter
	lea	ecx, DWORD PTR _secondlist$[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 884  : 	
; 885  : 	Objective		o,n;
; 886  : 	int				i;
; 887  : 
; 888  : 	// KCK: It seems like this should be able to be avoided - but I can't
; 889  : 	// think of another way to clear out old secondline and thirdline flags
; 890  : 	{
; 891  : 		VuListIterator	myit(AllObjList);

	mov	eax, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	eax
	lea	ecx, DWORD PTR _myit$4[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 892  : 		o = GetFirstObjective(&myit);

	lea	ecx, DWORD PTR _myit$4[ebp]
	push	ecx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN16@MarkObject:

; 893  : 		while (o != NULL){

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN15@MarkObject

; 894  : 			o->ClearObjFlags (O_SECONDLINE | O_THIRDLINE);

	push	6
	mov	ecx, DWORD PTR _o$[ebp]
	call	?ClearObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::ClearObjFlags

; 895  : 			o = GetNextObjective(&myit);

	lea	edx, DWORD PTR _myit$4[ebp]
	push	edx
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 896  : 		}

	jmp	SHORT $LN16@MarkObject
$LN15@MarkObject:

; 897  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _myit$4[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 898  : 
; 899  : 	{
; 900  : 		VuListIterator	frontit(FrontList);

	mov	eax, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	push	eax
	lea	ecx, DWORD PTR _frontit$3[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 901  : 		o = GetFirstObjective(&frontit);

	lea	ecx, DWORD PTR _frontit$3[ebp]
	push	ecx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN14@MarkObject:

; 902  : 		while (o != NULL){

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN13@MarkObject

; 903  : 			for (i=0; i<o->NumLinks(); i++){

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@MarkObject
$LN11@MarkObject:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN12@MarkObject:
	mov	ecx, DWORD PTR _o$[ebp]
	call	?NumLinks@ObjectiveClass@@QAEHXZ	; ObjectiveClass::NumLinks
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN10@MarkObject

; 904  : 				n = o->GetNeighbor(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetNeighbor@ObjectiveClass@@QAEPAV1@H@Z ; ObjectiveClass::GetNeighbor
	mov	DWORD PTR _n$[ebp], eax

; 905  : 				if (n){

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN9@MarkObject

; 906  : 					if (!n->IsFrontline() && o->GetTeam()==n->GetTeam()){

	mov	ecx, DWORD PTR _n$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	jne	SHORT $LN9@MarkObject
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN9@MarkObject

; 907  : 						n->SetObjFlags (O_SECONDLINE);

	push	2
	mov	ecx, DWORD PTR _n$[ebp]
	call	?SetObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::SetObjFlags

; 908  : 						secondlist.ForcedInsert(n);

	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	lea	ecx, DWORD PTR _secondlist$[ebp]
	call	?ForcedInsert@FalconPrivateList@@QAEHPAVVuEntity@@@Z ; FalconPrivateList::ForcedInsert
$LN9@MarkObject:

; 909  : 					}
; 910  : 				}
; 911  : 			}

	jmp	SHORT $LN11@MarkObject
$LN10@MarkObject:

; 912  : 			o = GetNextObjective(&frontit);

	lea	eax, DWORD PTR _frontit$3[ebp]
	push	eax
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 913  : 		}

	jmp	$LN14@MarkObject
$LN13@MarkObject:

; 914  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _frontit$3[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 915  : 
; 916  : 	{
; 917  : 		VuListIterator	secondit(&secondlist);

	lea	ecx, DWORD PTR _secondlist$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _secondit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 918  : 		o = GetFirstObjective(&secondit);

	lea	edx, DWORD PTR _secondit$2[ebp]
	push	edx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN7@MarkObject:

; 919  : 		while (o != NULL)

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN6@MarkObject

; 920  : 		{
; 921  : 			for (i=0; i<o->NumLinks(); i++){

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@MarkObject
$LN4@MarkObject:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@MarkObject:
	mov	ecx, DWORD PTR _o$[ebp]
	call	?NumLinks@ObjectiveClass@@QAEHXZ	; ObjectiveClass::NumLinks
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN3@MarkObject

; 922  : 				n = o->GetNeighbor(i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetNeighbor@ObjectiveClass@@QAEPAV1@H@Z ; ObjectiveClass::GetNeighbor
	mov	DWORD PTR _n$[ebp], eax

; 923  : 				if (n){

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN2@MarkObject

; 924  : 					if (!n->IsFrontline() && !n->IsSecondline()){

	mov	ecx, DWORD PTR _n$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	jne	SHORT $LN2@MarkObject
	mov	ecx, DWORD PTR _n$[ebp]
	call	?IsSecondline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsSecondline
	test	eax, eax
	jne	SHORT $LN2@MarkObject

; 925  : 						n->SetObjFlags (O_THIRDLINE);

	push	4
	mov	ecx, DWORD PTR _n$[ebp]
	call	?SetObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::SetObjFlags
$LN2@MarkObject:

; 926  : 					}
; 927  : 				}
; 928  : 			}

	jmp	SHORT $LN4@MarkObject
$LN3@MarkObject:

; 929  : 			o = GetNextObjective(&secondit);

	lea	edx, DWORD PTR _secondit$2[ebp]
	push	edx
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 930  : 		}

	jmp	SHORT $LN7@MarkObject
$LN6@MarkObject:

; 931  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 932  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _secondlist$[ebp]
	call	??1FalconPrivateList@@UAE@XZ		; FalconPrivateList::~FalconPrivateList
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MarkObjectives@@YAXXZ$0:
	lea	ecx, DWORD PTR _secondlist$[ebp]
	jmp	??1FalconPrivateList@@UAE@XZ		; FalconPrivateList::~FalconPrivateList
__unwindfunclet$?MarkObjectives@@YAXXZ$1:
	lea	ecx, DWORD PTR _myit$4[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?MarkObjectives@@YAXXZ$2:
	lea	ecx, DWORD PTR _frontit$3[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?MarkObjectives@@YAXXZ$3:
	lea	ecx, DWORD PTR _secondit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?MarkObjectives@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MarkObjectives@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?MarkObjectives@@YAXXZ ENDP				; MarkObjectives
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Inactive@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Inactive@UnitClass@@QBEHXZ PROC			; UnitClass::Inactive, COMDAT
; _this$ = ecx

; 323  : 	int Inactive () const								{ return (int)unit_flags & U_INACTIVE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 131072				; 00020000H
	mov	esp, ebp
	pop	ebp
	ret	0
?Inactive@UnitClass@@QBEHXZ ENDP			; UnitClass::Inactive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Parent@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Parent@UnitClass@@QBEHXZ PROC				; UnitClass::Parent, COMDAT
; _this$ = ecx

; 312  : 	int Parent() const								{ return (int)unit_flags & U_PARENT; }		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 32					; 00000020H
	mov	esp, ebp
	pop	ebp
	ret	0
?Parent@UnitClass@@QBEHXZ ENDP				; UnitClass::Parent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?NumLinks@ObjectiveClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NumLinks@ObjectiveClass@@QAEHXZ PROC			; ObjectiveClass::NumLinks, COMDAT
; _this$ = ecx

; 268  : 	int NumLinks(void)										{	return static_data.links; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+225]
	mov	esp, ebp
	pop	ebp
	ret	0
?NumLinks@ObjectiveClass@@QAEHXZ ENDP			; ObjectiveClass::NumLinks
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?IsSecondline@ObjectiveClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSecondline@ObjectiveClass@@QAEHXZ PROC		; ObjectiveClass::IsSecondline, COMDAT
; _this$ = ecx

; 187  : 	int IsSecondline (void)									{ return (int)(O_SECONDLINE & obj_data.obj_flags); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSecondline@ObjectiveClass@@QAEHXZ ENDP		; ObjectiveClass::IsSecondline
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?IsFrontline@ObjectiveClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFrontline@ObjectiveClass@@QAEHXZ PROC		; ObjectiveClass::IsFrontline, COMDAT
; _this$ = ecx

; 186  : 	int IsFrontline (void)									{ return (int)(O_FRONTLINE & obj_data.obj_flags); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFrontline@ObjectiveClass@@QAEHXZ ENDP		; ObjectiveClass::IsFrontline
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?SetObjFlags@ObjectiveClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetObjFlags@ObjectiveClass@@QAEXK@Z PROC		; ObjectiveClass::SetObjFlags, COMDAT
; _this$ = ecx

; 113  : 	void SetObjFlags (ulong flags) { obj_data.obj_flags |= (flags); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	or	ecx, DWORD PTR _flags$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+192], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetObjFlags@ObjectiveClass@@QAEXK@Z ENDP		; ObjectiveClass::SetObjFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?ClearObjFlags@ObjectiveClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?ClearObjFlags@ObjectiveClass@@QAEXK@Z PROC		; ObjectiveClass::ClearObjFlags, COMDAT
; _this$ = ecx

; 112  : 	void ClearObjFlags (ulong flags) { obj_data.obj_flags &= ~(flags); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flags$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+192]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+192], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearObjFlags@ObjectiveClass@@QAEXK@Z ENDP		; ObjectiveClass::ClearObjFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_safe$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_unit$ = 8						; size = 4
?InactivateUnit@@YAXPAVUnitClass@@@Z PROC		; InactivateUnit

; 1101 : void InactivateUnit(UnitClass *unit){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InactivateUnit@@YAXPAVUnitClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1102 : 	// avoid unit deletion when removing from lists
; 1103 : 	VuBin<UnitClass> safe(unit);

	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _safe$[ebp]
	call	??0?$VuBin@VUnitClass@@@@QAE@PAVUnitClass@@@Z ; VuBin<UnitClass>::VuBin<UnitClass>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1104 : 	// remove from lists
; 1105 : 	AllUnitList->Remove(unit);

	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A ; AllUnitList
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 1106 : 	AllParentList->Remove(unit);

	mov	edx, DWORD PTR _unit$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AllParentList@@3PAVVuLinkedList@@A ; AllParentList
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 1107 : 	AllRealList->Remove(unit);

	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AllRealList@@3PAVVuLinkedList@@A ; AllRealList
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 1108 : 	RealUnitProxList->Remove(unit);

	mov	ecx, DWORD PTR _unit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 1109 : 	// insert into inactive
; 1110 : 	InactiveList->Insert(unit);	

	mov	edx, DWORD PTR _unit$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?InactiveList@@3PAVVuLinkedList@@A ; InactiveList
	call	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Insert

; 1111 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _safe$[ebp]
	call	??1?$VuBin@VUnitClass@@@@QAE@XZ		; VuBin<UnitClass>::~VuBin<UnitClass>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InactivateUnit@@YAXPAVUnitClass@@@Z$0:
	lea	ecx, DWORD PTR _safe$[ebp]
	jmp	??1?$VuBin@VUnitClass@@@@QAE@XZ		; VuBin<UnitClass>::~VuBin<UnitClass>
__ehhandler$?InactivateUnit@@YAXPAVUnitClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InactivateUnit@@YAXPAVUnitClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InactivateUnit@@YAXPAVUnitClass@@@Z ENDP		; InactivateUnit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
?StandardRebuild@@YAXXZ PROC				; StandardRebuild

; 1038 : {

	push	ebp
	mov	ebp, esp

; 1039 : 	static int	build=0;
; 1040 : 	RebuildFrontList(TRUE, FALSE);

	push	0
	push	1
	call	?RebuildFrontList@@YAHHH@Z		; RebuildFrontList
	add	esp, 8

; 1041 : 	RebuildEmitterList();

	call	?RebuildEmitterList@@YAHXZ		; RebuildEmitterList

; 1042 : 	if (!build || !TheCampaign.SamMapData){

	cmp	DWORD PTR ?build@?1??StandardRebuild@@YAXXZ@4HA, 0
	je	SHORT $LN6@StandardRe
	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+300, 0
	jne	SHORT $LN7@StandardRe
$LN6@StandardRe:

; 1043 : 		TheCampaign.MakeCampMap(MAP_SAMCOVERAGE);

	push	2
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?MakeCampMap@CampaignClass@@QAEPAEH@Z	; CampaignClass::MakeCampMap
	jmp	SHORT $LN5@StandardRe
$LN7@StandardRe:

; 1044 : 	}
; 1045 : 	else if (build == 1 || !TheCampaign.RadarMapData){

	cmp	DWORD PTR ?build@?1??StandardRebuild@@YAXXZ@4HA, 1
	je	SHORT $LN3@StandardRe
	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+304, 0
	jne	SHORT $LN4@StandardRe
$LN3@StandardRe:

; 1046 : 		TheCampaign.MakeCampMap(MAP_RADARCOVERAGE);

	push	3
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?MakeCampMap@CampaignClass@@QAEPAEH@Z	; CampaignClass::MakeCampMap

; 1047 : 	}
; 1048 : 	else{

	jmp	SHORT $LN5@StandardRe
$LN4@StandardRe:

; 1049 : 		build = -1;

	mov	DWORD PTR ?build@?1??StandardRebuild@@YAXXZ@4HA, -1
$LN5@StandardRe:

; 1050 : 	}
; 1051 : 
; 1052 : 	if (!TheCampaign.CampMapData){

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+296, 0
	jne	SHORT $LN1@StandardRe

; 1053 : 		TheCampaign.MakeCampMap(MAP_OWNERSHIP);

	push	1
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?MakeCampMap@CampaignClass@@QAEPAEH@Z	; CampaignClass::MakeCampMap
$LN1@StandardRe:

; 1054 : 	}
; 1055 : 	build++;

	mov	eax, DWORD PTR ?build@?1??StandardRebuild@@YAXXZ@4HA
	add	eax, 1
	mov	DWORD PTR ?build@?1??StandardRebuild@@YAXXZ@4HA, eax

; 1056 : }

	pop	ebp
	ret	0
?StandardRebuild@@YAXXZ ENDP				; StandardRebuild
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_campit$ = -100						; size = 12
_airit$2 = -88						; size = 12
$T3 = -76						; size = 4
_next$4 = -72						; size = 4
_team$ = -68						; size = 4
_r$ = -64						; size = 4
_d$ = -60						; size = 4
_mt$ = -56						; size = 4
_rl$ = -52						; size = 4
_change$ = -48						; size = 4
_range$ = -44						; size = 4
_emit$ = -40						; size = 4
_a$ = -36						; size = 4
_e$ = -32						; size = 4
_x$ = -28						; size = 2
_y$ = -24						; size = 2
_ex$ = -20						; size = 2
_ey$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?RebuildEmitterList@@YAHXZ PROC				; RebuildEmitterList

; 972  : int RebuildEmitterList(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildEmitterList@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 973  : 	CampEntity	e,a;
; 974  : 	int			range,d,r,emit,team,rl,change=0;

	mov	DWORD PTR _change$[ebp], 0

; 975  : 	MoveType	mt;
; 976  : 	GridIndex	x,y,ex,ey;
; 977  : 	
; 978  : 	EmitterList->Purge();

	push	1
	mov	eax, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	mov	eax, DWORD PTR [edx]
	call	eax

; 979  : 	AirDefenseList->Purge();

	push	1
	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	mov	eax, DWORD PTR [edx]
	call	eax

; 980  : 
; 981  : 	VuListIterator		campit(AllCampList);

	mov	ecx, DWORD PTR ?AllCampList@@3PAVVuLinkedList@@A ; AllCampList
	push	ecx
	lea	ecx, DWORD PTR _campit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 982  : 	e = (CampEntity)campit.GetFirst();

	lea	ecx, DWORD PTR _campit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _e$[ebp], eax
$LN21@RebuildEmi:

; 983  : 	while (e){

	cmp	DWORD PTR _e$[ebp], 0
	je	$LN20@RebuildEmi

; 984  : 		if (e->GetDomain() == DOMAIN_LAND && (!e->IsUnit() || (!((Unit)e)->Inactive() && ((Unit)e)->Real()))){

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	edx, al
	cmp	edx, 3
	jne	$LN1@RebuildEmi
	mov	eax, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	SHORT $LN18@RebuildEmi
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	jne	$LN1@RebuildEmi
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+508]
	call	eax
	test	eax, eax
	je	$LN1@RebuildEmi
$LN18@RebuildEmi:

; 985  : 			rl = e->GetElectronicDetectionRange(LowAir);

	push	4
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+420]
	call	eax
	mov	DWORD PTR _rl$[ebp], eax

; 986  : 			range = e->GetElectronicDetectionRange(Air);

	push	5
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+420]
	call	eax
	mov	DWORD PTR _range$[ebp], eax

; 987  : 			if (rl > range){

	mov	ecx, DWORD PTR _rl$[ebp]
	cmp	ecx, DWORD PTR _range$[ebp]
	jle	SHORT $LN17@RebuildEmi

; 988  : 				range = rl;

	mov	edx, DWORD PTR _rl$[ebp]
	mov	DWORD PTR _range$[ebp], edx

; 989  : 				mt = LowAir;

	mov	DWORD PTR _mt$[ebp], 4

; 990  : 			}
; 991  : 			else {

	jmp	SHORT $LN16@RebuildEmi
$LN17@RebuildEmi:

; 992  : 				mt = Air;

	mov	DWORD PTR _mt$[ebp], 5
$LN16@RebuildEmi:

; 993  : 			}
; 994  : 
; 995  : 			if (range){

	cmp	DWORD PTR _range$[ebp], 0
	je	$LN1@RebuildEmi

; 996  : 				// It's part of the IADS, check if we're needed
; 997  : 				emit = 1;

	mov	DWORD PTR _emit$[ebp], 1

; 998  : 				e->GetLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 999  : 				team = e->GetTeam();

	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 1000 : 				if (!e->IsObjective()){

	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	jne	$LN14@RebuildEmi

; 1001 : 					VuListIterator airit(EmitterList);

	mov	ecx, DWORD PTR ?EmitterList@@3PAVFalconPrivateList@@A ; EmitterList
	push	ecx
	lea	ecx, DWORD PTR _airit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1002 : 					a = (CampEntity)airit.GetFirst();

	lea	ecx, DWORD PTR _airit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _a$[ebp], eax
$LN13@RebuildEmi:

; 1003 : 					while (a && emit){

	cmp	DWORD PTR _a$[ebp], 0
	je	$LN12@RebuildEmi
	cmp	DWORD PTR _emit$[ebp], 0
	je	$LN12@RebuildEmi

; 1004 : 						CampEntity next = (CampEntity)airit.GetNext();

	lea	ecx, DWORD PTR _airit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _next$4[ebp], eax

; 1005 : 						if (a->GetTeam() == team && !a->IsObjective()){

	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	eax, DWORD PTR _team$[ebp]
	jne	$LN8@RebuildEmi
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	jne	$LN8@RebuildEmi

; 1006 : 							a->GetLocation(&ex,&ey);

	lea	ecx, DWORD PTR _ey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _a$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1007 : 							d =  FloatToInt32(Distance(x,y,ex,ey));

	movzx	eax, WORD PTR _ey$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ex$[ebp]
	push	ecx
	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	call	?Distance@@YAMFFFF@Z			; Distance
	add	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _d$[ebp], eax

; 1008 : 							r = a->GetElectronicDetectionRange(mt);

	mov	ecx, DWORD PTR _mt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax+420]
	call	edx
	mov	DWORD PTR _r$[ebp], eax

; 1009 : 							if (r > d + range){

	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _range$[ebp]
	cmp	DWORD PTR _r$[ebp], eax
	jle	SHORT $LN10@RebuildEmi

; 1010 : 								emit = 0;

	mov	DWORD PTR _emit$[ebp], 0
	jmp	SHORT $LN8@RebuildEmi
$LN10@RebuildEmi:

; 1011 : 							}
; 1012 : 							else if ((range > d + r) && (a->GetRadarMode() < FEC_RADAR_SEARCH_1)){

	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _r$[ebp]
	cmp	DWORD PTR _range$[ebp], ecx
	jle	SHORT $LN8@RebuildEmi
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	eax, 2
	jge	SHORT $LN8@RebuildEmi

; 1013 : 								a->SetEmitting(0);

	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetEmitting@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetEmitting
$LN8@RebuildEmi:

; 1014 : 							}
; 1015 : 						}
; 1016 : 						a = next;

	mov	eax, DWORD PTR _next$4[ebp]
	mov	DWORD PTR _a$[ebp], eax

; 1017 : 					}

	jmp	$LN13@RebuildEmi
$LN12@RebuildEmi:

; 1018 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _airit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN14@RebuildEmi:

; 1019 : 				if (e->IsBattalion() && e->GetSType() == STYPE_UNIT_AIR_DEFENSE)

	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	test	eax, eax
	je	SHORT $LN7@RebuildEmi
	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	ecx, al
	cmp	ecx, 1
	jne	SHORT $LN7@RebuildEmi

; 1020 : //				if (e->GetAproxHitChance(LowAir,0) > 0)
; 1021 : 					AirDefenseList->ForcedInsert(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AirDefenseList@@3PAVFalconPrivateList@@A ; AirDefenseList
	call	?ForcedInsert@FalconPrivateList@@QAEHPAVVuEntity@@@Z ; FalconPrivateList::ForcedInsert
$LN7@RebuildEmi:

; 1022 : 				if (!change && ((emit && !e->IsEmitting()) || (!emit && e->IsEmitting())))

	cmp	DWORD PTR _change$[ebp], 0
	jne	SHORT $LN6@RebuildEmi
	cmp	DWORD PTR _emit$[ebp], 0
	je	SHORT $LN4@RebuildEmi
	mov	eax, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+216]
	call	eax
	test	eax, eax
	je	SHORT $LN5@RebuildEmi
$LN4@RebuildEmi:
	cmp	DWORD PTR _emit$[ebp], 0
	jne	SHORT $LN6@RebuildEmi
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+216]
	call	eax
	test	eax, eax
	je	SHORT $LN6@RebuildEmi
$LN5@RebuildEmi:

; 1023 : 					change = 1;

	mov	DWORD PTR _change$[ebp], 1
$LN6@RebuildEmi:

; 1024 : 				e->SetEmitting(emit);

	mov	ecx, DWORD PTR _emit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?SetEmitting@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetEmitting

; 1025 : 				if (emit && e->GetRadarMode() < FEC_RADAR_AQUIRE)

	cmp	DWORD PTR _emit$[ebp], 0
	je	SHORT $LN3@RebuildEmi
	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	eax, 5
	jge	SHORT $LN3@RebuildEmi

; 1026 : 					e->SetSearchMode(FEC_RADAR_SEARCH_1);//me123 + rand()%3);

	push	2
	mov	eax, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
	jmp	SHORT $LN1@RebuildEmi
$LN3@RebuildEmi:

; 1027 : 				else if (!emit)

	cmp	DWORD PTR _emit$[ebp], 0
	jne	SHORT $LN1@RebuildEmi

; 1028 : 					e->SetSearchMode(FEC_RADAR_OFF);			// Our "search mode" is off

	push	0
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
$LN1@RebuildEmi:

; 1029 : 			}
; 1030 : 		}
; 1031 : 		e = (CampEntity)campit.GetNext();

	lea	ecx, DWORD PTR _campit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _e$[ebp], eax

; 1032 : 	}

	jmp	$LN21@RebuildEmi
$LN20@RebuildEmi:

; 1033 : 	return change;

	mov	ecx, DWORD PTR _change$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _campit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T3[ebp]

; 1034 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildEmitterList@@YAHXZ$0:
	lea	ecx, DWORD PTR _campit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?RebuildEmitterList@@YAHXZ$1:
	lea	ecx, DWORD PTR _airit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildEmitterList@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildEmitterList@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildEmitterList@@YAHXZ ENDP				; RebuildEmitterList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_myit$ = -32						; size = 12
$T2 = -20						; size = 4
_o$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RebuildParentsList@@YAHXZ PROC				; RebuildParentsList

; 960  : int RebuildParentsList (void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildParentsList@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 961  : 	Objective			o;
; 962  : 	VuListIterator		myit(AllObjList);

	mov	eax, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 963  : 	o = GetFirstObjective(&myit);

	lea	ecx, DWORD PTR _myit$[ebp]
	push	ecx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN2@RebuildPar:

; 964  : 	while (o){

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN1@RebuildPar

; 965  : 		o->RecalculateParent();

	mov	ecx, DWORD PTR _o$[ebp]
	call	?RecalculateParent@ObjectiveClass@@QAEXXZ ; ObjectiveClass::RecalculateParent

; 966  : 		o = GetNextObjective(&myit);

	lea	edx, DWORD PTR _myit$[ebp]
	push	edx
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 967  : 	}

	jmp	SHORT $LN2@RebuildPar
$LN1@RebuildPar:

; 968  : 	return 1;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	eax, DWORD PTR $T2[ebp]

; 969  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildParentsList@@YAHXZ$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildParentsList@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildParentsList@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildParentsList@@YAHXZ ENDP				; RebuildParentsList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_myit$2 = -28						; size = 12
_o$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RebuildObjectiveLists@@YAHXZ PROC			; RebuildObjectiveLists

; 936  : int RebuildObjectiveLists(void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildObjectiveLists@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 937  : 	Objective		o;
; 938  : 	
; 939  : 	POList->Purge();

	push	1
	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	mov	eax, DWORD PTR [edx]
	call	eax

; 940  : 	SOList->Purge();

	push	1
	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	mov	eax, DWORD PTR [edx]
	call	eax

; 941  : 
; 942  : 	{
; 943  : 		// destroy iterator here
; 944  : 		VuListIterator	myit(AllObjList);

	mov	ecx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	ecx
	lea	ecx, DWORD PTR _myit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 945  : 		o = GetFirstObjective(&myit);

	lea	edx, DWORD PTR _myit$2[ebp]
	push	edx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN4@RebuildObj:

; 946  : 		while (o != NULL){

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN3@RebuildObj

; 947  : 			if (o->IsPrimary())

	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsPrimary@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsPrimary
	test	eax, eax
	je	SHORT $LN2@RebuildObj

; 948  : 				POList->ForcedInsert(o);

	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	call	?ForcedInsert@FalconPrivateOrderedList@@QAEHPAVVuEntity@@@Z ; FalconPrivateOrderedList::ForcedInsert
$LN2@RebuildObj:

; 949  : 			if (o->IsSecondary())

	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsSecondary@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsSecondary
	test	eax, eax
	je	SHORT $LN1@RebuildObj

; 950  : 				SOList->ForcedInsert(o);

	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?SOList@@3PAVFalconPrivateList@@A ; SOList
	call	?ForcedInsert@FalconPrivateList@@QAEHPAVVuEntity@@@Z ; FalconPrivateList::ForcedInsert
$LN1@RebuildObj:

; 951  : 			o = GetNextObjective(&myit);

	lea	edx, DWORD PTR _myit$2[ebp]
	push	edx
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 952  : 		}

	jmp	SHORT $LN4@RebuildObj
$LN3@RebuildObj:

; 953  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 954  : 	CleanupObjList();

	call	?CleanupObjList@@YAXXZ			; CleanupObjList

; 955  : 	return 1;

	mov	eax, 1

; 956  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildObjectiveLists@@YAHXZ$0:
	lea	ecx, DWORD PTR _myit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildObjectiveLists@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildObjectiveLists@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildObjectiveLists@@YAHXZ ENDP			; RebuildObjectiveLists
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
$T2 = -192						; size = 8
$T3 = -184						; size = 8
$T4 = -176						; size = 8
_myit$5 = -168						; size = 12
$T6 = -156						; size = 4
$T7 = -152						; size = 4
tv93 = -148						; size = 4
_bok$ = -144						; size = 4
_barsweep$8 = -140					; size = 4
tv79 = -136						; size = 4
_y$9 = -132						; size = 2
_x$10 = -128						; size = 2
_dirty$ = -124						; size = 4
_i$ = -120						; size = 4
_fseed$ = -116						; size = 4
_isolated$ = -112					; size = 4
_u$11 = -108						; size = 4
_front$ = -104						; size = 4
_n$ = -100						; size = 4
_o$ = -96						; size = 4
_mis$ = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_do_barcaps$ = 8					; size = 4
_incremental$ = 12					; size = 4
?RebuildFrontList@@YAHHH@Z PROC				; RebuildFrontList

; 710  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildFrontList@@YAHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 711  : 	MissionRequestClass	mis;

	lea	ecx, DWORD PTR _mis$[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 712  : 	Objective			o,n;
; 713  : 	ulong				fseed;
; 714  : 	//static CampaignTime	lastRequest=0;
; 715  : 	//CampaignTime testLast;
; 716  : 	int					i,front,isolated,bok=0,dirty=0;

	mov	DWORD PTR _bok$[ebp], 0
	mov	DWORD PTR _dirty$[ebp], 0

; 717  : 
; 718  : 	// HACK to allow furball to work
; 719  : 	if (FalconLocalGame && FalconLocalGame->GetGameType() == game_Dogfight){

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN35@RebuildFro
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN36@RebuildFro
$LN35@RebuildFro:
	mov	DWORD PTR tv79[ebp], 0
$LN36@RebuildFro:
	cmp	DWORD PTR tv79[ebp], 0
	je	SHORT $LN32@RebuildFro
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN37@RebuildFro
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN38@RebuildFro
$LN37@RebuildFro:
	mov	DWORD PTR tv93[ebp], 0
$LN38@RebuildFro:
	mov	ecx, DWORD PTR tv93[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	jne	SHORT $LN32@RebuildFro

; 720  : 		return 0;

	mov	DWORD PTR $T7[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN33@RebuildFro
$LN32@RebuildFro:

; 721  : 	}
; 722  : 
; 723  : 	//TJL 11/14/03 Barcap timer and request interval were severely broken
; 724  : 	//lastRequest is now subtracted from CurrentTime.
; 725  : 	//Barcap Request also needed to be converted to milliseconds.  
; 726  : 	//if (do_barcaps && lastRequest - Camp_GetCurrentTime() > (unsigned int)BARCAP_REQUEST_INTERVAL)
; 727  : 	if (
; 728  : 		do_barcaps && 
; 729  : 		(Camp_GetCurrentTime() - lastRequest > ((unsigned int)BARCAP_REQUEST_INTERVAL * CampaignMinutes))
; 730  : 	){

	cmp	DWORD PTR _do_barcaps$[ebp], 0
	je	SHORT $LN31@RebuildFro
	call	?Camp_GetCurrentTime@@YAKXZ		; Camp_GetCurrentTime
	sub	eax, DWORD PTR _lastRequest
	movsx	edx, WORD PTR ?BARCAP_REQUEST_INTERVAL@@3FA ; BARCAP_REQUEST_INTERVAL
	imul	edx, 60000				; 0000ea60H
	cmp	eax, edx
	jbe	SHORT $LN31@RebuildFro

; 731  : 		lastRequest = Camp_GetCurrentTime();

	call	?Camp_GetCurrentTime@@YAKXZ		; Camp_GetCurrentTime
	mov	DWORD PTR _lastRequest, eax

; 732  : 		bok = 1;

	mov	DWORD PTR _bok$[ebp], 1
$LN31@RebuildFro:

; 733  : 	}
; 734  : 
; 735  : 	if (!incremental){

	cmp	DWORD PTR _incremental$[ebp], 0
	jne	SHORT $LN30@RebuildFro

; 736  : 		FrontList->Purge();

	push	1
	mov	eax, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	mov	eax, DWORD PTR [edx]
	call	eax
$LN30@RebuildFro:

; 737  : 	}
; 738  : 
; 739  : 	{
; 740  : 		VuListIterator		myit(AllObjList);

	mov	ecx, DWORD PTR ?AllObjList@@3PAVVuLinkedList@@A ; AllObjList
	push	ecx
	lea	ecx, DWORD PTR _myit$5[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 741  : 		o = GetFirstObjective(&myit);

	lea	edx, DWORD PTR _myit$5[ebp]
	push	edx
	call	?GetFirstObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetFirstObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax
$LN29@RebuildFro:

; 742  : 		while (o){

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN28@RebuildFro

; 743  : 			front = 0;

	mov	DWORD PTR _front$[ebp], 0

; 744  : 			fseed = 0;

	mov	DWORD PTR _fseed$[ebp], 0

; 745  : 			isolated = 1;

	mov	DWORD PTR _isolated$[ebp], 1

; 746  : 			for (i=0,n=o; i<o->static_data.links && n && (!front || isolated); i++){

	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _o$[ebp]
	mov	DWORD PTR _n$[ebp], eax
	jmp	SHORT $LN27@RebuildFro
$LN26@RebuildFro:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN27@RebuildFro:
	mov	edx, DWORD PTR _o$[ebp]
	movzx	eax, BYTE PTR [edx+225]
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN25@RebuildFro
	cmp	DWORD PTR _n$[ebp], 0
	je	$LN25@RebuildFro
	cmp	DWORD PTR _front$[ebp], 0
	je	SHORT $LN24@RebuildFro
	cmp	DWORD PTR _isolated$[ebp], 0
	je	$LN25@RebuildFro
$LN24@RebuildFro:

; 747  : 				n = o->GetNeighbor(i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetNeighbor@ObjectiveClass@@QAEPAV1@H@Z ; ObjectiveClass::GetNeighbor
	mov	DWORD PTR _n$[ebp], eax

; 748  : 				if (n){

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN23@RebuildFro

; 749  : 					if (GetTTRelations(o->GetTeam(),n->GetTeam()) > Neutral){

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	call	?GetTTRelations@@YAHEE@Z		; GetTTRelations
	add	esp, 8
	cmp	eax, 3
	jle	SHORT $LN22@RebuildFro

; 750  : 						front = n->GetOwner();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	edx, al
	mov	DWORD PTR _front$[ebp], edx
	jmp	SHORT $LN21@RebuildFro
$LN22@RebuildFro:

; 751  : 					}
; 752  : 					else if (isolated && !GetRoE(n->GetTeam(),o->GetTeam(),ROE_GROUND_CAPTURE)){

	cmp	DWORD PTR _isolated$[ebp], 0
	je	SHORT $LN21@RebuildFro
	push	3
	mov	eax, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN21@RebuildFro

; 753  : 						isolated = 0;

	mov	DWORD PTR _isolated$[ebp], 0
$LN21@RebuildFro:

; 754  : 					}
; 755  : 					if (bok && front && GetRoE(o->GetTeam(), n->GetTeam(), ROE_AIR_ENGAGE)){

	cmp	DWORD PTR _bok$[ebp], 0
	je	SHORT $LN23@RebuildFro
	cmp	DWORD PTR _front$[ebp], 0
	je	SHORT $LN23@RebuildFro
	push	4
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN23@RebuildFro

; 756  : 						fseed = o->Id() + n->Id();

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	mov	esi, eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _n$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	add	esi, eax
	mov	DWORD PTR _fseed$[ebp], esi

; 757  : 						mis.vs = n->GetTeam();

	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _mis$[ebp+33], al
$LN23@RebuildFro:

; 758  : 					}
; 759  : 				}
; 760  : 			}

	jmp	$LN26@RebuildFro
$LN25@RebuildFro:

; 761  : 
; 762  : 			if (front && isolated && !o->IsSecondary()){

	cmp	DWORD PTR _front$[ebp], 0
	je	$LN18@RebuildFro
	cmp	DWORD PTR _isolated$[ebp], 0
	je	$LN18@RebuildFro
	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsSecondary@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsSecondary
	test	eax, eax
	jne	$LN18@RebuildFro

; 763  : 				// This objective has been cut off
; 764  : 				Unit		u;
; 765  : 				GridIndex	x,y;
; 766  : 				o->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$9[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$10[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 767  : 				u = FindNearestRealUnit(x, y, NULL, 5);

	push	5
	push	0
	movzx	eax, WORD PTR _y$9[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$10[ebp]
	push	ecx
	call	?FindNearestRealUnit@@YAPAVUnitClass@@FFPAMF@Z ; FindNearestRealUnit
	add	esp, 16					; 00000010H
	mov	DWORD PTR _u$11[ebp], eax

; 768  : 				if (u && GetRoE(u->GetTeam(), o->GetTeam(), ROE_GROUND_CAPTURE)){

	cmp	DWORD PTR _u$11[ebp], 0
	je	SHORT $LN17@RebuildFro
	push	3
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _u$11[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _u$11[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN17@RebuildFro

; 769  : 					front = u->GetOwner();

	mov	ecx, DWORD PTR _u$11[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	edx, al
	mov	DWORD PTR _front$[ebp], edx
$LN17@RebuildFro:

; 770  : 				}
; 771  : 				if (!u || (u && u->GetTeam() != o->GetTeam())){

	cmp	DWORD PTR _u$11[ebp], 0
	je	SHORT $LN15@RebuildFro
	cmp	DWORD PTR _u$11[ebp], 0
	je	SHORT $LN18@RebuildFro
	mov	eax, DWORD PTR _u$11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _u$11[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	je	SHORT $LN18@RebuildFro
$LN15@RebuildFro:

; 772  : 					// Enemy units are in control, send a captured message
; 773  : 					CaptureObjective(o, (Control)front, NULL);

	push	0
	movzx	edx, BYTE PTR _front$[ebp]
	push	edx
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	call	?CaptureObjective@@YAXPAVObjectiveClass@@EPAVUnitClass@@@Z ; CaptureObjective
	add	esp, 12					; 0000000cH
$LN18@RebuildFro:

; 774  : 				}
; 775  : 			}
; 776  : 
; 777  : 			if (!front){

	cmp	DWORD PTR _front$[ebp], 0
	jne	SHORT $LN14@RebuildFro

; 778  : 				if (o->IsFrontline()){

	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	je	SHORT $LN13@RebuildFro

; 779  : 					dirty = 1;

	mov	DWORD PTR _dirty$[ebp], 1

; 780  : 					if (incremental){

	cmp	DWORD PTR _incremental$[ebp], 0
	je	SHORT $LN12@RebuildFro

; 781  : 						FrontList->Remove(o);

	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove
$LN12@RebuildFro:

; 782  : 					}
; 783  : 					o->ClearObjFlags (O_FRONTLINE | O_SECONDLINE | O_THIRDLINE);

	push	7
	mov	ecx, DWORD PTR _o$[ebp]
	call	?ClearObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::ClearObjFlags
$LN13@RebuildFro:

; 784  : 				}
; 785  : 				o->SetAbandoned(0);

	push	0
	mov	ecx, DWORD PTR _o$[ebp]
	call	?SetAbandoned@ObjectiveClass@@QAEXH@Z	; ObjectiveClass::SetAbandoned

; 786  : 				fseed = 0;

	mov	DWORD PTR _fseed$[ebp], 0
	jmp	SHORT $LN11@RebuildFro
$LN14@RebuildFro:

; 787  : 			}
; 788  : 			else if (front){

	cmp	DWORD PTR _front$[ebp], 0
	je	SHORT $LN11@RebuildFro

; 789  : 				if (!o->IsFrontline()){

	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	jne	SHORT $LN9@RebuildFro

; 790  : 					dirty = 1;

	mov	DWORD PTR _dirty$[ebp], 1

; 791  : 					o->SetObjFlags (O_FRONTLINE);

	push	1
	mov	ecx, DWORD PTR _o$[ebp]
	call	?SetObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::SetObjFlags

; 792  : 					o->ClearObjFlags (O_SECONDLINE | O_THIRDLINE);

	push	6
	mov	ecx, DWORD PTR _o$[ebp]
	call	?ClearObjFlags@ObjectiveClass@@QAEXK@Z	; ObjectiveClass::ClearObjFlags
$LN9@RebuildFro:

; 793  : 				}
; 794  : 
; 795  : 				if (!incremental || !o->IsFrontline()){

	cmp	DWORD PTR _incremental$[ebp], 0
	je	SHORT $LN7@RebuildFro
	mov	ecx, DWORD PTR _o$[ebp]
	call	?IsFrontline@ObjectiveClass@@QAEHXZ	; ObjectiveClass::IsFrontline
	test	eax, eax
	jne	SHORT $LN11@RebuildFro
$LN7@RebuildFro:

; 796  : 					FrontList->ForcedInsert(o);

	mov	edx, DWORD PTR _o$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?FrontList@@3PAVFalconPrivateList@@A ; FrontList
	call	?ForcedInsert@FalconPrivateList@@QAEHPAVVuEntity@@@Z ; FalconPrivateList::ForcedInsert
$LN11@RebuildFro:

; 797  : 				}
; 798  : 			}
; 799  : 
; 800  : 			//TJL 11/14/03 This is the BARCAP generator for the campaign. 
; 801  : 			if (fseed && do_barcaps){

	cmp	DWORD PTR _fseed$[ebp], 0
	je	$LN6@RebuildFro
	cmp	DWORD PTR _do_barcaps$[ebp], 0
	je	$LN6@RebuildFro

; 802  : 				int barsweep = rand()%3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _barsweep$8[ebp], edx

; 803  : 				// Request a low priority BARCAP mission (each side should take care of their own)
; 804  : 				mis.requesterID = o->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mis$[ebp], ecx
	mov	DWORD PTR _mis$[ebp+4], edx

; 805  : 				o->GetLocation(&mis.tx,&mis.ty);

	lea	eax, DWORD PTR _mis$[ebp+42]
	push	eax
	lea	ecx, DWORD PTR _mis$[ebp+40]
	push	ecx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 806  : 				mis.who = o->GetTeam();

	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	mov	BYTE PTR _mis$[ebp+32], al

; 807  : 				mis.vs = 0;

	mov	BYTE PTR _mis$[ebp+33], 0

; 808  : 				// Try to base TOT on the combined ID of the two frontline objectives - 
; 809  : 				// to try and get both teams here at same time
; 810  : 				mis.tot = Camp_GetCurrentTime() + (60+fseed%60)*CampaignMinutes;

	call	?Camp_GetCurrentTime@@YAKXZ		; Camp_GetCurrentTime
	mov	ecx, eax
	mov	eax, DWORD PTR _fseed$[ebp]
	xor	edx, edx
	mov	esi, 60					; 0000003cH
	div	esi
	add	edx, 60					; 0000003cH
	imul	edx, 60000				; 0000ea60H
	add	ecx, edx
	mov	DWORD PTR _mis$[ebp+36], ecx

; 811  : 				mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$[ebp+58], 3

; 812  : 				//Cobra This allows a variety of CAP missions
; 813  : 				if (barsweep == 1){

	cmp	DWORD PTR _barsweep$8[ebp], 1
	jne	SHORT $LN5@RebuildFro

; 814  : 					mis.mission = AMIS_SWEEP;

	mov	BYTE PTR _mis$[ebp+60], 7
	jmp	SHORT $LN4@RebuildFro
$LN5@RebuildFro:

; 815  : 				}
; 816  : 				else if (barsweep == 2){

	cmp	DWORD PTR _barsweep$8[ebp], 2
	jne	SHORT $LN3@RebuildFro

; 817  : 					mis.mission = AMIS_BARCAP;

	mov	BYTE PTR _mis$[ebp+60], 1

; 818  : 				}
; 819  : 				else {

	jmp	SHORT $LN4@RebuildFro
$LN3@RebuildFro:

; 820  : 					mis.mission = AMIS_BARCAP2;

	mov	BYTE PTR _mis$[ebp+60], 2
$LN4@RebuildFro:

; 821  : 				}
; 822  : 				mis.context = hostileAircraftPresent;

	mov	BYTE PTR _mis$[ebp+62], 22		; 00000016H

; 823  : 				mis.roe_check = ROE_AIR_ENGAGE;

	mov	BYTE PTR _mis$[ebp+63], 4

; 824  : 				mis.flags = 0;

	mov	DWORD PTR _mis$[ebp+44], 0

; 825  : 				mis.priority = 0;

	xor	edx, edx
	mov	WORD PTR _mis$[ebp+56], dx

; 826  : 				mis.RequestMission();

	lea	ecx, DWORD PTR _mis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission
$LN6@RebuildFro:

; 827  : 			}
; 828  : 			o = GetNextObjective(&myit);

	lea	eax, DWORD PTR _myit$5[ebp]
	push	eax
	call	?GetNextObjective@@YAPAVObjectiveClass@@PAVVuListIterator@@@Z ; GetNextObjective
	add	esp, 4
	mov	DWORD PTR _o$[ebp], eax

; 829  : 		}

	jmp	$LN29@RebuildFro
$LN28@RebuildFro:

; 830  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _myit$5[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 831  : 
; 832  : 	if (dirty){

	cmp	DWORD PTR _dirty$[ebp], 0
	je	SHORT $LN1@RebuildFro

; 833  : 		MarkObjectives();

	call	?MarkObjectives@@YAXXZ			; MarkObjectives

; 834  : 		RebuildParentsList();

	call	?RebuildParentsList@@YAHXZ		; RebuildParentsList
$LN1@RebuildFro:

; 835  : 	}
; 836  : 	return dirty;

	mov	ecx, DWORD PTR _dirty$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T6[ebp]
$LN33@RebuildFro:

; 837  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildFrontList@@YAHHH@Z$0:
	lea	ecx, DWORD PTR _mis$[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__unwindfunclet$?RebuildFrontList@@YAHHH@Z$1:
	lea	ecx, DWORD PTR _myit$5[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildFrontList@@YAHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildFrontList@@YAHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildFrontList@@YAHHH@Z ENDP				; RebuildFrontList
; Function compile flags: /Odtp
;	COMDAT ??_GCampBaseFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCampBaseFilter@@UAEPAXI@Z PROC			; CampBaseFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CampBaseFilter@@UAE@XZ		; CampBaseFilter::~CampBaseFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCampBaseFilter@@UAEPAXI@Z ENDP			; CampBaseFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ PROC		; CampBaseFilter::Copy, COMDAT
; _this$ = ecx

; 185  : 	virtual VuFilter *Copy()			{ return new CampBaseFilter(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CampBaseFilter@@QAE@XZ		; CampBaseFilter::CampBaseFilter
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Copy:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ ENDP		; CampBaseFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z PROC	; CampBaseFilter::Compare, COMDAT
; _this$ = ecx

; 184  : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z ENDP	; CampBaseFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@CampBaseFilter@@UAEEPAVVuEntity@@@Z PROC	; CampBaseFilter::RemoveTest
; _this$ = ecx

; 344  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 345  : 	if ((e->EntityType())->classInfo_[VU_DOMAIN] && 
; 346  : 		((e->EntityType())->classInfo_[VU_CLASS] == CLASS_UNIT || 
; 347  : 		 (e->EntityType())->classInfo_[VU_CLASS] == CLASS_OBJECTIVE))

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN1@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	jne	SHORT $LN2@RemoveTest
$LN1@RemoveTest:

; 348  : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN3@RemoveTest
$LN2@RemoveTest:

; 349  : 	return FALSE;

	xor	al, al
$LN3@RemoveTest:

; 350  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@CampBaseFilter@@UAEEPAVVuEntity@@@Z ENDP	; CampBaseFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@CampBaseFilter@@UAEEPAVVuEntity@@@Z PROC		; CampBaseFilter::Test
; _this$ = ecx

; 335  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 336  : 	if ((e->EntityType())->classInfo_[VU_DOMAIN] && 
; 337  : 		((e->EntityType())->classInfo_[VU_CLASS] == CLASS_UNIT || 
; 338  : 		 (e->EntityType())->classInfo_[VU_CLASS] == CLASS_OBJECTIVE))

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN1@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	jne	SHORT $LN2@Test
$LN1@Test:

; 339  : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN3@Test
$LN2@Test:

; 340  : 	return FALSE;

	xor	al, al
$LN3@Test:

; 341  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@CampBaseFilter@@UAEEPAVVuEntity@@@Z ENDP		; CampBaseFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1CampBaseFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CampBaseFilter@@UAE@XZ PROC				; CampBaseFilter::~CampBaseFilter, COMDAT
; _this$ = ecx

; 180  : 	virtual ~CampBaseFilter(void)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CampBaseFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1CampBaseFilter@@UAE@XZ ENDP				; CampBaseFilter::~CampBaseFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??0CampBaseFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CampBaseFilter@@QAE@XZ PROC				; CampBaseFilter::CampBaseFilter, COMDAT
; _this$ = ecx

; 179  : 	CampBaseFilter(void)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CampBaseFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CampBaseFilter@@QAE@XZ ENDP				; CampBaseFilter::CampBaseFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GObjProxFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GObjProxFilter@@UAEPAXI@Z PROC			; ObjProxFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ObjProxFilter@@UAE@XZ		; ObjProxFilter::~ObjProxFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GObjProxFilter@@UAEPAXI@Z ENDP			; ObjProxFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?RemoveTest@ObjProxFilter@@UAEEPAVVuEntity@@@Z PROC	; ObjProxFilter::RemoveTest
; _this$ = ecx

; 321  : VU_BOOL ObjProxFilter::RemoveTest(VuEntity *ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 322  : 	if ((ent->EntityType())->classInfo_[VU_DOMAIN] && (ent->EntityType())->classInfo_[VU_CLASS] != CLASS_OBJECTIVE){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN1@RemoveTest
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	je	SHORT $LN1@RemoveTest

; 323  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN2@RemoveTest
$LN1@RemoveTest:

; 324  : 	}
; 325  : 	return TRUE;

	mov	al, 1
$LN2@RemoveTest:

; 326  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@ObjProxFilter@@UAEEPAVVuEntity@@@Z ENDP	; ObjProxFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Test@ObjProxFilter@@UAEEPAVVuEntity@@@Z PROC		; ObjProxFilter::Test
; _this$ = ecx

; 314  : VU_BOOL ObjProxFilter::Test(VuEntity *ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 	if ((ent->EntityType())->classInfo_[VU_DOMAIN] && (ent->EntityType())->classInfo_[VU_CLASS] != CLASS_OBJECTIVE){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN1@Test
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	je	SHORT $LN1@Test

; 316  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN2@Test
$LN1@Test:

; 317  : 	}
; 318  : 	return TRUE;

	mov	al, 1
$LN2@Test:

; 319  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@ObjProxFilter@@UAEEPAVVuEntity@@@Z ENDP		; ObjProxFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv75 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ PROC		; ObjProxFilter::Copy, COMDAT
; _this$ = ecx

; 157  : 	virtual VuFilter *Copy(){ return new ObjProxFilter(*this); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0ObjProxFilter@@QAE@ABV0@@Z		; ObjProxFilter::ObjProxFilter
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv75[ebp], 0
$LN4@Copy:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ ENDP		; ObjProxFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1ObjProxFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ObjProxFilter@@UAE@XZ PROC				; ObjProxFilter::~ObjProxFilter, COMDAT
; _this$ = ecx

; 156  : 	virtual ~ObjProxFilter(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ObjProxFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuBiKeyFilter@@MAE@XZ		; VuBiKeyFilter::~VuBiKeyFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1ObjProxFilter@@UAE@XZ ENDP				; ObjProxFilter::~ObjProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??0ObjProxFilter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0ObjProxFilter@@QAE@ABV0@@Z PROC			; ObjProxFilter::ObjProxFilter, COMDAT
; _this$ = ecx

; 155  : 	ObjProxFilter(const ObjProxFilter &other) : VuBiKeyFilter(other){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuBiKeyFilter@@IAE@ABV0@@Z		; VuBiKeyFilter::VuBiKeyFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ObjProxFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ObjProxFilter@@QAE@ABV0@@Z ENDP			; ObjProxFilter::ObjProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??0ObjProxFilter@@QAE@IM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
_max$ = 12						; size = 4
??0ObjProxFilter@@QAE@IM@Z PROC				; ObjProxFilter::ObjProxFilter, COMDAT
; _this$ = ecx

; 154  : 	ObjProxFilter(unsigned int res, BIG_SCALAR max) : VuBiKeyFilter(res, max){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _max$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuBiKeyFilter@@IAE@IM@Z		; VuBiKeyFilter::VuBiKeyFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ObjProxFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0ObjProxFilter@@QAE@IM@Z ENDP				; ObjProxFilter::ObjProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GObjFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GObjFilter@@UAEPAXI@Z PROC				; ObjFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ObjFilter@@UAE@XZ			; ObjFilter::~ObjFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GObjFilter@@UAEPAXI@Z ENDP				; ObjFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@ObjFilter@@UAEPAVVuFilter@@XZ PROC		; ObjFilter::Copy, COMDAT
; _this$ = ecx

; 144  : 	virtual VuFilter *Copy()			{ return new ObjFilter(host); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0ObjFilter@@QAE@G@Z			; ObjFilter::ObjFilter
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Copy:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@ObjFilter@@UAEPAVVuFilter@@XZ ENDP		; ObjFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z PROC		; ObjFilter::Compare, COMDAT
; _this$ = ecx

; 143  : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z ENDP		; ObjFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@ObjFilter@@UAEEPAVVuEntity@@@Z PROC		; ObjFilter::RemoveTest
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_OBJECTIVE)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	je	SHORT $LN3@RemoveTest
$LN2@RemoveTest:

; 284  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@RemoveTest
$LN3@RemoveTest:

; 285  : 	if (host && !e->IsLocal())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN1@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@RemoveTest

; 286  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@RemoveTest
$LN1@RemoveTest:

; 287  : 	return TRUE;

	mov	al, 1
$LN4@RemoveTest:

; 288  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@ObjFilter@@UAEEPAVVuEntity@@@Z ENDP		; ObjFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@ObjFilter@@UAEEPAVVuEntity@@@Z PROC		; ObjFilter::Test
; _this$ = ecx

; 273  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_OBJECTIVE)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	je	SHORT $LN3@Test
$LN2@Test:

; 275  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@Test
$LN3@Test:

; 276  : 	if (host && !e->IsLocal())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN1@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@Test

; 277  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@Test
$LN1@Test:

; 278  : 	return TRUE;

	mov	al, 1
$LN4@Test:

; 279  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@ObjFilter@@UAEEPAVVuEntity@@@Z ENDP		; ObjFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1ObjFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ObjFilter@@UAE@XZ PROC				; ObjFilter::~ObjFilter, COMDAT
; _this$ = ecx

; 139  : 	virtual ~ObjFilter(void)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ObjFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1ObjFilter@@UAE@XZ ENDP				; ObjFilter::~ObjFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 2
??0ObjFilter@@QAE@G@Z PROC				; ObjFilter::ObjFilter
; _this$ = ecx

; 268  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ObjFilter@@6B@

; 269  : 	host = h;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _h$[ebp]
	mov	WORD PTR [ecx+4], dx

; 270  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ObjFilter@@QAE@G@Z ENDP				; ObjFilter::ObjFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GUnitProxFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUnitProxFilter@@UAEPAXI@Z PROC			; UnitProxFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnitProxFilter@@UAE@XZ		; UnitProxFilter::~UnitProxFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnitProxFilter@@UAEPAXI@Z ENDP			; UnitProxFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?RemoveTest@UnitProxFilter@@UAEEPAVVuEntity@@@Z PROC	; UnitProxFilter::RemoveTest
; _this$ = ecx

; 249  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 	if (!ent->EntityType()->classInfo_[VU_DOMAIN] || ent->EntityType()->classInfo_[VU_CLASS] != CLASS_UNIT){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN3@RemoveTest
$LN2@RemoveTest:

; 251  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@RemoveTest
$LN3@RemoveTest:

; 252  : 	}
; 253  : 	if (!Real((ent->EntityType())->classInfo_[VU_TYPE])){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@RemoveTest

; 254  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN4@RemoveTest
$LN1@RemoveTest:

; 255  : 	}
; 256  : 	return TRUE;

	mov	al, 1
$LN4@RemoveTest:

; 257  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@UnitProxFilter@@UAEEPAVVuEntity@@@Z ENDP	; UnitProxFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Test@UnitProxFilter@@UAEEPAVVuEntity@@@Z PROC		; UnitProxFilter::Test
; _this$ = ecx

; 235  : VU_BOOL UnitProxFilter::Test(VuEntity *ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 236  : 	if (!ent->EntityType()->classInfo_[VU_DOMAIN] || ent->EntityType()->classInfo_[VU_CLASS] != CLASS_UNIT){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN3@Test
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN4@Test
$LN3@Test:

; 237  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN5@Test
$LN4@Test:

; 238  : 	}
; 239  : 	if (!Real((ent->EntityType())->classInfo_[VU_TYPE])){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@Test

; 240  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN5@Test
$LN2@Test:

; 241  : 	}
; 242  : 	if (((Unit)ent)->Inactive()){

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@Test

; 243  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN5@Test
$LN1@Test:

; 244  : 	}
; 245  : 	return TRUE;

	mov	al, 1
$LN5@Test:

; 246  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@UnitProxFilter@@UAEEPAVVuEntity@@@Z ENDP		; UnitProxFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv75 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ PROC		; UnitProxFilter::Copy, COMDAT
; _this$ = ecx

; 106  : 	virtual VuFilter *Copy(){ return new UnitProxFilter(*this); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0UnitProxFilter@@QAE@ABV0@@Z		; UnitProxFilter::UnitProxFilter
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv75[ebp], 0
$LN4@Copy:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ ENDP		; UnitProxFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1UnitProxFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1UnitProxFilter@@UAE@XZ PROC				; UnitProxFilter::~UnitProxFilter, COMDAT
; _this$ = ecx

; 105  : 	virtual ~UnitProxFilter(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnitProxFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuBiKeyFilter@@MAE@XZ		; VuBiKeyFilter::~VuBiKeyFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnitProxFilter@@UAE@XZ ENDP				; UnitProxFilter::~UnitProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??0UnitProxFilter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0UnitProxFilter@@QAE@ABV0@@Z PROC			; UnitProxFilter::UnitProxFilter, COMDAT
; _this$ = ecx

; 104  : 	UnitProxFilter(const UnitProxFilter &other) : VuBiKeyFilter(other){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuBiKeyFilter@@IAE@ABV0@@Z		; VuBiKeyFilter::VuBiKeyFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7UnitProxFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnitProxFilter@@QAE@ABV0@@Z ENDP			; UnitProxFilter::UnitProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??0UnitProxFilter@@QAE@IM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
_max$ = 12						; size = 4
??0UnitProxFilter@@QAE@IM@Z PROC			; UnitProxFilter::UnitProxFilter, COMDAT
; _this$ = ecx

; 103  : 	UnitProxFilter(unsigned int res, BIG_SCALAR max) : VuBiKeyFilter(res, max){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _max$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuBiKeyFilter@@IAE@IM@Z		; VuBiKeyFilter::VuBiKeyFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7UnitProxFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0UnitProxFilter@@QAE@IM@Z ENDP			; UnitProxFilter::UnitProxFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GNavalUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GNavalUnitFilter@@UAEPAXI@Z PROC			; NavalUnitFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NavalUnitFilter@@UAE@XZ		; NavalUnitFilter::~NavalUnitFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNavalUnitFilter@@UAEPAXI@Z ENDP			; NavalUnitFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv80 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ PROC		; NavalUnitFilter::Copy, COMDAT
; _this$ = ecx

; 83   : 	virtual VuFilter *Copy()			{ return new NavalUnitFilter(parent,real,host); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0NavalUnitFilter@@QAE@EEG@Z		; NavalUnitFilter::NavalUnitFilter
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv80[ebp], 0
$LN4@Copy:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ ENDP		; NavalUnitFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z PROC	; NavalUnitFilter::Compare, COMDAT
; _this$ = ecx

; 82   : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z ENDP	; NavalUnitFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@NavalUnitFilter@@UAEEPAVVuEntity@@@Z PROC	; NavalUnitFilter::RemoveTest
; _this$ = ecx

; 187  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 188  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@RemoveTest
$LN6@RemoveTest:

; 189  : 		return FALSE;

	xor	al, al
	jmp	$LN8@RemoveTest
$LN7@RemoveTest:

; 190  : 	if (((Unit)e)->GetDomain() != DOMAIN_SEA)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 4
	je	SHORT $LN5@RemoveTest

; 191  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN5@RemoveTest:

; 192  : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@RemoveTest

; 193  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN4@RemoveTest:

; 194  : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@RemoveTest

; 195  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN3@RemoveTest:

; 196  : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@RemoveTest

; 197  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN2@RemoveTest:

; 198  : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@RemoveTest

; 199  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN1@RemoveTest:

; 200  : 	return TRUE;

	mov	al, 1
$LN8@RemoveTest:

; 201  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@NavalUnitFilter@@UAEEPAVVuEntity@@@Z ENDP	; NavalUnitFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@NavalUnitFilter@@UAEEPAVVuEntity@@@Z PROC		; NavalUnitFilter::Test
; _this$ = ecx

; 170  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@Test
$LN6@Test:

; 172  : 		return FALSE;

	xor	al, al
	jmp	$LN8@Test
$LN7@Test:

; 173  : 	if (((Unit)e)->GetDomain() != DOMAIN_SEA)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 4
	je	SHORT $LN5@Test

; 174  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN5@Test:

; 175  : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@Test

; 176  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN4@Test:

; 177  : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@Test

; 178  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN3@Test:

; 179  : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Test

; 180  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN2@Test:

; 181  : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@Test

; 182  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN1@Test:

; 183  : 	return TRUE;

	mov	al, 1
$LN8@Test:

; 184  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@NavalUnitFilter@@UAEEPAVVuEntity@@@Z ENDP		; NavalUnitFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1NavalUnitFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1NavalUnitFilter@@UAE@XZ PROC				; NavalUnitFilter::~NavalUnitFilter, COMDAT
; _this$ = ecx

; 78   : 	virtual ~NavalUnitFilter(void)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NavalUnitFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1NavalUnitFilter@@UAE@XZ ENDP				; NavalUnitFilter::~NavalUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 1
_r$ = 12						; size = 1
_h$ = 16						; size = 2
??0NavalUnitFilter@@QAE@EEG@Z PROC			; NavalUnitFilter::NavalUnitFilter
; _this$ = ecx

; 163  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NavalUnitFilter@@6B@

; 164  : 	parent = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _p$[ebp]
	mov	BYTE PTR [ecx+4], dl

; 165  : 	real = r;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _r$[ebp]
	mov	BYTE PTR [eax+5], cl

; 166  : 	host = h;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _h$[ebp]
	mov	WORD PTR [edx+6], ax

; 167  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0NavalUnitFilter@@QAE@EEG@Z ENDP			; NavalUnitFilter::NavalUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGroundUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGroundUnitFilter@@UAEPAXI@Z PROC			; GroundUnitFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GroundUnitFilter@@UAE@XZ		; GroundUnitFilter::~GroundUnitFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGroundUnitFilter@@UAEPAXI@Z ENDP			; GroundUnitFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv80 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ PROC		; GroundUnitFilter::Copy, COMDAT
; _this$ = ecx

; 66   : 	virtual VuFilter *Copy()			{ return new GroundUnitFilter(parent,real,host); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0GroundUnitFilter@@QAE@EEG@Z		; GroundUnitFilter::GroundUnitFilter
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv80[ebp], 0
$LN4@Copy:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ ENDP		; GroundUnitFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z PROC	; GroundUnitFilter::Compare, COMDAT
; _this$ = ecx

; 65   : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z ENDP	; GroundUnitFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@GroundUnitFilter@@UAEEPAVVuEntity@@@Z PROC	; GroundUnitFilter::RemoveTest
; _this$ = ecx

; 146  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@RemoveTest
$LN6@RemoveTest:

; 148  : 		return FALSE;

	xor	al, al
	jmp	$LN8@RemoveTest
$LN7@RemoveTest:

; 149  : 	if (((Unit)e)->GetDomain() != DOMAIN_LAND)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 3
	je	SHORT $LN5@RemoveTest

; 150  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN5@RemoveTest:

; 151  : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@RemoveTest

; 152  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN4@RemoveTest:

; 153  : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@RemoveTest

; 154  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN3@RemoveTest:

; 155  : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@RemoveTest

; 156  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN2@RemoveTest:

; 157  : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@RemoveTest

; 158  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN1@RemoveTest:

; 159  : 	return TRUE;

	mov	al, 1
$LN8@RemoveTest:

; 160  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@GroundUnitFilter@@UAEEPAVVuEntity@@@Z ENDP	; GroundUnitFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@GroundUnitFilter@@UAEEPAVVuEntity@@@Z PROC	; GroundUnitFilter::Test
; _this$ = ecx

; 129  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@Test
$LN6@Test:

; 131  : 		return FALSE;

	xor	al, al
	jmp	$LN8@Test
$LN7@Test:

; 132  : 	if (((Unit)e)->GetDomain() != DOMAIN_LAND)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 3
	je	SHORT $LN5@Test

; 133  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN5@Test:

; 134  : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@Test

; 135  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN4@Test:

; 136  : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@Test

; 137  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN3@Test:

; 138  : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Test

; 139  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN2@Test:

; 140  : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@Test

; 141  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN1@Test:

; 142  : 	return TRUE;

	mov	al, 1
$LN8@Test:

; 143  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@GroundUnitFilter@@UAEEPAVVuEntity@@@Z ENDP	; GroundUnitFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1GroundUnitFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GroundUnitFilter@@UAE@XZ PROC			; GroundUnitFilter::~GroundUnitFilter, COMDAT
; _this$ = ecx

; 61   : 	virtual ~GroundUnitFilter(void)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GroundUnitFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1GroundUnitFilter@@UAE@XZ ENDP			; GroundUnitFilter::~GroundUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 1
_r$ = 12						; size = 1
_h$ = 16						; size = 2
??0GroundUnitFilter@@QAE@EEG@Z PROC			; GroundUnitFilter::GroundUnitFilter
; _this$ = ecx

; 122  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GroundUnitFilter@@6B@

; 123  : 	parent = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _p$[ebp]
	mov	BYTE PTR [ecx+4], dl

; 124  : 	real = r;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _r$[ebp]
	mov	BYTE PTR [eax+5], cl

; 125  : 	host = h;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _h$[ebp]
	mov	WORD PTR [edx+6], ax

; 126  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0GroundUnitFilter@@QAE@EEG@Z ENDP			; GroundUnitFilter::GroundUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GAirUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GAirUnitFilter@@UAEPAXI@Z PROC			; AirUnitFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AirUnitFilter@@UAE@XZ		; AirUnitFilter::~AirUnitFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAirUnitFilter@@UAEPAXI@Z ENDP			; AirUnitFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv80 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ PROC		; AirUnitFilter::Copy, COMDAT
; _this$ = ecx

; 49   : 	virtual VuFilter *Copy()			{ return new AirUnitFilter(parent,real,host); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0AirUnitFilter@@QAE@EEG@Z		; AirUnitFilter::AirUnitFilter
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv80[ebp], 0
$LN4@Copy:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ ENDP		; AirUnitFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z PROC	; AirUnitFilter::Compare, COMDAT
; _this$ = ecx

; 48   : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z ENDP	; AirUnitFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@AirUnitFilter@@UAEEPAVVuEntity@@@Z PROC	; AirUnitFilter::RemoveTest
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@RemoveTest
$LN6@RemoveTest:

; 107  : 		return FALSE;

	xor	al, al
	jmp	$LN8@RemoveTest
$LN7@RemoveTest:

; 108  : 	if (((Unit)e)->GetDomain() != DOMAIN_AIR)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 2
	je	SHORT $LN5@RemoveTest

; 109  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN5@RemoveTest:

; 110  : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@RemoveTest

; 111  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN4@RemoveTest:

; 112  : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@RemoveTest

; 113  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN3@RemoveTest:

; 114  : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@RemoveTest

; 115  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN2@RemoveTest:

; 116  : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@RemoveTest

; 117  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@RemoveTest
$LN1@RemoveTest:

; 118  : 	return TRUE;

	mov	al, 1
$LN8@RemoveTest:

; 119  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@AirUnitFilter@@UAEEPAVVuEntity@@@Z ENDP	; AirUnitFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@AirUnitFilter@@UAEEPAVVuEntity@@@Z PROC		; AirUnitFilter::Test
; _this$ = ecx

; 88   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 89   : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN6@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN7@Test
$LN6@Test:

; 90   : 		return FALSE;

	xor	al, al
	jmp	$LN8@Test
$LN7@Test:

; 91   : 	if (((Unit)e)->GetDomain() != DOMAIN_AIR)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	eax, al
	cmp	eax, 2
	je	SHORT $LN5@Test

; 92   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN5@Test:

; 93   : 	if (parent && !((Unit)e)->Parent())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN4@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN4@Test

; 94   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN4@Test:

; 95   : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN3@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [eax+edx+8]
	push	eax
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@Test

; 96   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN3@Test:

; 97   : 	if (host && !e->IsLocal())

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	test	edx, edx
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Test

; 98   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN2@Test:

; 99   : 	if (((Unit)e)->Inactive())

	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN1@Test

; 100  : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN8@Test
$LN1@Test:

; 101  : 	return TRUE;

	mov	al, 1
$LN8@Test:

; 102  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@AirUnitFilter@@UAEEPAVVuEntity@@@Z ENDP		; AirUnitFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1AirUnitFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1AirUnitFilter@@UAE@XZ PROC				; AirUnitFilter::~AirUnitFilter, COMDAT
; _this$ = ecx

; 44   : 	virtual ~AirUnitFilter(void)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AirUnitFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1AirUnitFilter@@UAE@XZ ENDP				; AirUnitFilter::~AirUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 1
_r$ = 12						; size = 1
_h$ = 16						; size = 2
??0AirUnitFilter@@QAE@EEG@Z PROC			; AirUnitFilter::AirUnitFilter
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AirUnitFilter@@6B@

; 82   : 	parent = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _p$[ebp]
	mov	BYTE PTR [ecx+4], dl

; 83   : 	real = r;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _r$[ebp]
	mov	BYTE PTR [eax+5], cl

; 84   : 	host = h;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _h$[ebp]
	mov	WORD PTR [edx+6], ax

; 85   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0AirUnitFilter@@QAE@EEG@Z ENDP			; AirUnitFilter::AirUnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUnitFilter@@UAEPAXI@Z PROC				; UnitFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnitFilter@@UAE@XZ			; UnitFilter::~UnitFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnitFilter@@UAEPAXI@Z ENDP				; UnitFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv82 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@UnitFilter@@UAEPAVVuFilter@@XZ PROC		; UnitFilter::Copy, COMDAT
; _this$ = ecx

; 33   : 	virtual VuFilter *Copy()			{ return new UnitFilter(parent,real,host,inactive); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+6]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0UnitFilter@@QAE@EEGE@Z		; UnitFilter::UnitFilter
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv82[ebp], 0
$LN4@Copy:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@UnitFilter@@UAEPAVVuFilter@@XZ ENDP		; UnitFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z PROC		; UnitFilter::Compare, COMDAT
; _this$ = ecx

; 32   : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z ENDP		; UnitFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?RemoveTest@UnitFilter@@UAEEPAVVuEntity@@@Z PROC	; UnitFilter::RemoveTest
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN7@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN8@RemoveTest
$LN7@RemoveTest:

; 66   : 		return FALSE;

	xor	al, al
	jmp	$LN9@RemoveTest
$LN8@RemoveTest:

; 67   : 	if (parent && !((Unit)e)->Parent())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN6@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN6@RemoveTest

; 68   : 		return FALSE;

	xor	al, al
	jmp	$LN9@RemoveTest
$LN6@RemoveTest:

; 69   : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN5@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@RemoveTest

; 70   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@RemoveTest
$LN5@RemoveTest:

; 71   : 	if (host && !e->IsLocal())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	je	SHORT $LN4@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@RemoveTest

; 72   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@RemoveTest
$LN4@RemoveTest:

; 73   : 	if (!inactive && ((Unit)e)->Inactive())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN3@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN3@RemoveTest

; 74   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@RemoveTest
	jmp	SHORT $LN2@RemoveTest
$LN3@RemoveTest:

; 75   : 	else if (inactive && !((Unit)e)->Inactive())

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	test	eax, eax
	je	SHORT $LN2@RemoveTest
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	jne	SHORT $LN2@RemoveTest

; 76   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@RemoveTest
$LN2@RemoveTest:

; 77   : 	return TRUE;

	mov	al, 1
$LN9@RemoveTest:

; 78   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@UnitFilter@@UAEEPAVVuEntity@@@Z ENDP	; UnitFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?Test@UnitFilter@@UAEEPAVVuEntity@@@Z PROC		; UnitFilter::Test
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	if (!(e->EntityType())->classInfo_[VU_DOMAIN] || (e->EntityType())->classInfo_[VU_CLASS] != CLASS_UNIT)

	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	test	edx, edx
	je	SHORT $LN7@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	je	SHORT $LN8@Test
$LN7@Test:

; 49   : 		return FALSE;

	xor	al, al
	jmp	$LN9@Test
$LN8@Test:

; 50   : 	if (parent && !((Unit)e)->Parent())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN6@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Parent@UnitClass@@QBEHXZ		; UnitClass::Parent
	test	eax, eax
	jne	SHORT $LN6@Test

; 51   : 		return FALSE;

	xor	al, al
	jmp	$LN9@Test
$LN6@Test:

; 52   : 	if (real && !Real((e->EntityType())->classInfo_[VU_TYPE]))

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN5@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	push	edx
	call	?Real@@YAHH@Z				; Real
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@Test

; 53   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@Test
$LN5@Test:

; 54   : 	if (host && !e->IsLocal())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	je	SHORT $LN4@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Test

; 55   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@Test
$LN4@Test:

; 56   : 	if (!inactive && ((Unit)e)->Inactive())

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN3@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	je	SHORT $LN3@Test

; 57   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@Test
	jmp	SHORT $LN2@Test
$LN3@Test:

; 58   : 	else if (inactive && !((Unit)e)->Inactive())

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	test	eax, eax
	je	SHORT $LN2@Test
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Inactive@UnitClass@@QBEHXZ		; UnitClass::Inactive
	test	eax, eax
	jne	SHORT $LN2@Test

; 59   : 		return FALSE;

	xor	al, al
	jmp	SHORT $LN9@Test
$LN2@Test:

; 60   : 	return TRUE;

	mov	al, 1
$LN9@Test:

; 61   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@UnitFilter@@UAEEPAVVuEntity@@@Z ENDP		; UnitFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\camplist.h
;	COMDAT ??1UnitFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1UnitFilter@@UAE@XZ PROC				; UnitFilter::~UnitFilter, COMDAT
; _this$ = ecx

; 28   : 	virtual ~UnitFilter(void)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnitFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnitFilter@@UAE@XZ ENDP				; UnitFilter::~UnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camplib\camplist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 1
_r$ = 12						; size = 1
_h$ = 16						; size = 2
_a$ = 20						; size = 1
??0UnitFilter@@QAE@EEGE@Z PROC				; UnitFilter::UnitFilter
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnitFilter@@6B@

; 40   : 	parent = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _p$[ebp]
	mov	BYTE PTR [ecx+4], dl

; 41   : 	real = r;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _r$[ebp]
	mov	BYTE PTR [eax+5], cl

; 42   : 	host = h;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _h$[ebp]
	mov	WORD PTR [edx+6], ax

; 43   : 	inactive = a;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _a$[ebp]
	mov	BYTE PTR [ecx+8], dl

; 44   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0UnitFilter@@QAE@EEGE@Z ENDP				; UnitFilter::UnitFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\listadt.h
;	COMDAT ?GetFirstElement@ListClass@@QAEPAVListElementClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstElement@ListClass@@QAEPAVListElementClass@@XZ PROC ; ListClass::GetFirstElement, COMDAT
; _this$ = ecx

; 82   : 		ListElementClass* GetFirstElement(void)		{ return front; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstElement@ListClass@@QAEPAVListElementClass@@XZ ENDP ; ListClass::GetFirstElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\listadt.h
;	COMDAT ?GetNext@ListElementClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNext@ListElementClass@@QAEPAV1@XZ PROC		; ListElementClass::GetNext, COMDAT
; _this$ = ecx

; 45   : 		ListElementClass* GetNext(void)				{ return next; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNext@ListElementClass@@QAEPAV1@XZ ENDP		; ListElementClass::GetNext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\listadt.h
;	COMDAT ?GetUserData@ListElementClass@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserData@ListElementClass@@QAEPAXXZ PROC		; ListElementClass::GetUserData, COMDAT
; _this$ = ecx

; 39   : 		void* GetUserData(void)						{ return user_data; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUserData@ListElementClass@@QAEPAXXZ ENDP		; ListElementClass::GetUserData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetDomain@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDomain@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetDomain, COMDAT
; _this$ = ecx

; 287  : 	uchar GetDomain (void)	const						{	return (EntityType())->classInfo_[VU_DOMAIN]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDomain@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuBiKeyFilter@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuBiKeyFilter@@MAEPAXI@Z PROC			; VuBiKeyFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuBiKeyFilter@@MAE@XZ		; VuBiKeyFilter::~VuBiKeyFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuBiKeyFilter@@MAEPAXI@Z ENDP			; VuBiKeyFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??1VuBiKeyFilter@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuBiKeyFilter@@MAE@XZ PROC				; VuBiKeyFilter::~VuBiKeyFilter, COMDAT
; _this$ = ecx

; 106  : 	virtual VuBiKeyFilter::~VuBiKeyFilter(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuBiKeyFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuKeyFilter@@UAE@XZ			; VuKeyFilter::~VuKeyFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuBiKeyFilter@@MAE@XZ ENDP				; VuBiKeyFilter::~VuBiKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuBiKeyFilter@@IAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??0VuBiKeyFilter@@IAE@ABV0@@Z PROC			; VuBiKeyFilter::VuBiKeyFilter, COMDAT
; _this$ = ecx

; 105  : 	VuBiKeyFilter(const VuBiKeyFilter &rhs) { res_ = rhs.res_; factor_ = rhs.factor_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuKeyFilter@@IAE@XZ			; VuKeyFilter::VuKeyFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuBiKeyFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuBiKeyFilter@@IAE@ABV0@@Z ENDP			; VuBiKeyFilter::VuBiKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuBiKeyFilter@@IAE@IM@Z
_TEXT	SEGMENT
tv91 = -16						; size = 8
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_res$ = 8						; size = 4
_max$ = 12						; size = 4
??0VuBiKeyFilter@@IAE@IM@Z PROC				; VuBiKeyFilter::VuBiKeyFilter, COMDAT
; _this$ = ecx

; 104  : 	VuBiKeyFilter(unsigned int res, BIG_SCALAR max) : res_(res), factor_(static_cast<BIG_SCALAR>(res) / max){}

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuKeyFilter@@IAE@XZ			; VuKeyFilter::VuKeyFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuBiKeyFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR tv87[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv87[ebp]
	mov	ecx, DWORD PTR tv87[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv91[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv91[ebp]
	divss	xmm0, DWORD PTR _max$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VuBiKeyFilter@@IAE@IM@Z ENDP				; VuBiKeyFilter::VuBiKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuKeyFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuKeyFilter@@UAEPAXI@Z PROC				; VuKeyFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuKeyFilter@@UAE@XZ			; VuKeyFilter::~VuKeyFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuKeyFilter@@UAEPAXI@Z ENDP				; VuKeyFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuKeyFilter@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuKeyFilter@@IAE@XZ PROC				; VuKeyFilter::VuKeyFilter, COMDAT
; _this$ = ecx

; 93   : 	VuKeyFilter() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuKeyFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuKeyFilter@@IAE@XZ ENDP				; VuKeyFilter::VuKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuFilter@@UAEPAXI@Z PROC				; VuFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuFilter@@UAEPAXI@Z ENDP				; VuFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuFilter@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuFilter@@IAE@XZ PROC				; VuFilter::VuFilter, COMDAT
; _this$ = ecx

; 40   : 	VuFilter() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuFilter@@IAE@XZ ENDP				; VuFilter::VuFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
END
