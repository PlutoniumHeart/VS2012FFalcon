; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\CAMPAIGN\CAMPTASK\Package.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?PackInserted@@3HA				; PackInserted
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
_BSS	SEGMENT
?PackInserted@@3HA DD 01H DUP (?)			; PackInserted
_BSS	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	?IsSimBase@FalconEntity@@UAE_NXZ		; FalconEntity::IsSimBase
PUBLIC	?GetRadarMode@FalconEntity@@UAEHXZ		; FalconEntity::GetRadarMode
PUBLIC	?SetRadarMode@FalconEntity@@UAEXE@Z		; FalconEntity::SetRadarMode
PUBLIC	?ReturnToSearch@FalconEntity@@UAEXXZ		; FalconEntity::ReturnToSearch
PUBLIC	?SetSearchMode@FalconEntity@@UAEXE@Z		; FalconEntity::SetSearchMode
PUBLIC	?CombatClass@FalconEntity@@UAEHXZ		; FalconEntity::CombatClass
PUBLIC	?IsMissile@FalconEntity@@UAEHXZ			; FalconEntity::IsMissile
PUBLIC	?IsLauncher@FalconEntity@@UAEHXZ		; FalconEntity::IsLauncher
PUBLIC	?IsBomb@FalconEntity@@UAEHXZ			; FalconEntity::IsBomb
PUBLIC	?IsGun@FalconEntity@@UAEHXZ			; FalconEntity::IsGun
PUBLIC	?IsMover@FalconEntity@@UAEHXZ			; FalconEntity::IsMover
PUBLIC	?IsVehicle@FalconEntity@@UAEHXZ			; FalconEntity::IsVehicle
PUBLIC	?IsStatic@FalconEntity@@UAEHXZ			; FalconEntity::IsStatic
PUBLIC	?IsHelicopter@FalconEntity@@UAEHXZ		; FalconEntity::IsHelicopter
PUBLIC	?IsEject@FalconEntity@@UAEHXZ			; FalconEntity::IsEject
PUBLIC	?IsAirplane@FalconEntity@@UAEHXZ		; FalconEntity::IsAirplane
PUBLIC	?IsGroundVehicle@FalconEntity@@UAEHXZ		; FalconEntity::IsGroundVehicle
PUBLIC	?IsShip@FalconEntity@@UAEHXZ			; FalconEntity::IsShip
PUBLIC	?IsWeapon@FalconEntity@@UAEHXZ			; FalconEntity::IsWeapon
PUBLIC	?IsExploding@FalconEntity@@UAEHXZ		; FalconEntity::IsExploding
PUBLIC	?IsDead@FalconEntity@@UAEHXZ			; FalconEntity::IsDead
PUBLIC	?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ ; FalconEntity::GetMovementType
PUBLIC	?IsObjective@FalconEntity@@UAEHXZ		; FalconEntity::IsObjective
PUBLIC	?IsBattalion@FalconEntity@@UAEHXZ		; FalconEntity::IsBattalion
PUBLIC	?IsBrigade@FalconEntity@@UAEHXZ			; FalconEntity::IsBrigade
PUBLIC	?IsFlight@FalconEntity@@UBEHXZ			; FalconEntity::IsFlight
PUBLIC	?IsSquadron@FalconEntity@@UAEHXZ		; FalconEntity::IsSquadron
PUBLIC	?IsTeam@FalconEntity@@UAEHXZ			; FalconEntity::IsTeam
PUBLIC	?IsTaskForce@FalconEntity@@UAEHXZ		; FalconEntity::IsTaskForce
PUBLIC	?IsSPJamming@FalconEntity@@UAEHXZ		; FalconEntity::IsSPJamming
PUBLIC	?IsAreaJamming@FalconEntity@@UAEHXZ		; FalconEntity::IsAreaJamming
PUBLIC	?HasSPJamming@FalconEntity@@UAEHXZ		; FalconEntity::HasSPJamming
PUBLIC	?HasAreaJamming@FalconEntity@@UAEHXZ		; FalconEntity::HasAreaJamming
PUBLIC	?SetAQUIREtimer@FalconEntity@@UAEXK@Z		; FalconEntity::SetAQUIREtimer
PUBLIC	?SetSEARCHtimer@FalconEntity@@UAEXK@Z		; FalconEntity::SetSEARCHtimer
PUBLIC	?SetStepSearchMode@FalconEntity@@UAEXE@Z	; FalconEntity::SetStepSearchMode
PUBLIC	?GetAQUIREtimer@FalconEntity@@UAEKXZ		; FalconEntity::GetAQUIREtimer
PUBLIC	?GetSEARCHtimer@FalconEntity@@UAEKXZ		; FalconEntity::GetSEARCHtimer
PUBLIC	?SetWPAction@WayPointClass@@QAEXH@Z		; WayPointClass::SetWPAction
PUBLIC	?SetWPRouteAction@WayPointClass@@QAEXH@Z	; WayPointClass::SetWPRouteAction
PUBLIC	?SetWPFlags@WayPointClass@@QAEXK@Z		; WayPointClass::SetWPFlags
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetWPFlags@WayPointClass@@QAEKXZ		; WayPointClass::GetWPFlags
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetPrevWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetPrevWP
PUBLIC	?GetWPLocation@WayPointClass@@QBEXPAF0@Z	; WayPointClass::GetWPLocation
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	?UseId@IdNamespace@@QAEXK@Z			; IdNamespace::UseId
PUBLIC	?GetCampID@CampBaseClass@@UAEFXZ		; CampBaseClass::GetCampID
PUBLIC	?GetTeam@CampBaseClass@@UAEEXZ			; CampBaseClass::GetTeam
PUBLIC	?GetCountry@CampBaseClass@@UAEEXZ		; CampBaseClass::GetCountry
PUBLIC	?StepRadar@CampBaseClass@@UAEHHHM@Z		; CampBaseClass::StepRadar
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetMissilesFlying@CampBaseClass@@UAEHXZ	; CampBaseClass::GetMissilesFlying
PUBLIC	?IsCampBase@CampBaseClass@@UAE_NXZ		; CampBaseClass::IsCampBase
PUBLIC	?IsEmitting@CampBaseClass@@UAEHXZ		; CampBaseClass::IsEmitting
PUBLIC	?IsAwake@CampBaseClass@@QAEHXZ			; CampBaseClass::IsAwake
PUBLIC	?IsAggregate@CampBaseClass@@QAEHXZ		; CampBaseClass::IsAggregate
PUBLIC	?HasEntity@CampBaseClass@@UBEHPAVVuEntity@@@Z	; CampBaseClass::HasEntity
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	?GetSPType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSPType
PUBLIC	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetObjectiveStatus
PUBLIC	?CanShootWeapon@UnitClass@@UAEHH@Z		; UnitClass::CanShootWeapon
PUBLIC	?GetDeaggregationPoint@UnitClass@@UAEHHPAPAVCampBaseClass@@@Z ; UnitClass::GetDeaggregationPoint
PUBLIC	?GetUnitDeaggregationData@UnitClass@@UAEPAVUnitDeaggregationData@@XZ ; UnitClass::GetUnitDeaggregationData
PUBLIC	?ShouldDeaggregate@UnitClass@@UAEHXZ		; UnitClass::ShouldDeaggregate
PUBLIC	?ClearDeaggregationData@UnitClass@@UAEXXZ	; UnitClass::ClearDeaggregationData
PUBLIC	?DoCombat@UnitClass@@UAEHXZ			; UnitClass::DoCombat
PUBLIC	?AdjustForSupply@UnitClass@@UAEMXZ		; UnitClass::AdjustForSupply
PUBLIC	?DetectOnMove@UnitClass@@UAEHXZ			; UnitClass::DetectOnMove
PUBLIC	?ChooseTarget@UnitClass@@UAEHXZ			; UnitClass::ChooseTarget
PUBLIC	?CombatTime@UnitClass@@UAEKXZ			; UnitClass::CombatTime
PUBLIC	?GetUnitSupplyNeed@UnitClass@@UAEHH@Z		; UnitClass::GetUnitSupplyNeed
PUBLIC	?GetUnitFuelNeed@UnitClass@@UAEHH@Z		; UnitClass::GetUnitFuelNeed
PUBLIC	?SupplyUnit@UnitClass@@UAEXHH@Z			; UnitClass::SupplyUnit
PUBLIC	?GetVehicleDeagData@UnitClass@@UAEHPAVSimInitDataClass@@H@Z ; UnitClass::GetVehicleDeagData
PUBLIC	?IsUnit@UnitClass@@UAEHXZ			; UnitClass::IsUnit
PUBLIC	?IsDead@UnitClass@@UBEHXZ			; UnitClass::IsDead
PUBLIC	?Aborted@UnitClass@@QBEHXZ			; UnitClass::Aborted
PUBLIC	?Final@UnitClass@@QBEHXZ			; UnitClass::Final
PUBLIC	?SimSetLocation@UnitClass@@UAEXMMM@Z		; UnitClass::SimSetLocation
PUBLIC	?SimSetOrientation@UnitClass@@UAEXMMM@Z		; UnitClass::SimSetOrientation
PUBLIC	?GetRealPosition@UnitClass@@UAEXPAM00@Z		; UnitClass::GetRealPosition
PUBLIC	?SetUnitDestination@UnitClass@@QAEXFF@Z		; UnitClass::SetUnitDestination
PUBLIC	?SetTarget@UnitClass@@QAEXPAVFalconEntity@@@Z	; UnitClass::SetTarget
PUBLIC	?GetNumVehicles@UnitClass@@QAEHH@Z		; UnitClass::GetNumVehicles
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?SetUnitLastMove@UnitClass@@UAEXK@Z		; UnitClass::SetUnitLastMove
PUBLIC	?SetCombatTime@UnitClass@@UAEXK@Z		; UnitClass::SetCombatTime
PUBLIC	?SetBurntFuel@UnitClass@@UAEXJ@Z		; UnitClass::SetBurntFuel
PUBLIC	?SetUnitMission@UnitClass@@UAEXE@Z		; UnitClass::SetUnitMission
PUBLIC	?SetUnitRole@UnitClass@@UAEXE@Z			; UnitClass::SetUnitRole
PUBLIC	?SetUnitPriority@UnitClass@@UAEXH@Z		; UnitClass::SetUnitPriority
PUBLIC	?SetUnitMissionID@UnitClass@@UAEXH@Z		; UnitClass::SetUnitMissionID
PUBLIC	?SetUnitMissionTarget@UnitClass@@UAEXH@Z	; UnitClass::SetUnitMissionTarget
PUBLIC	?SetUnitTOT@UnitClass@@UAEXK@Z			; UnitClass::SetUnitTOT
PUBLIC	?SetUnitSquadron@UnitClass@@UAEXVVU_ID@@@Z	; UnitClass::SetUnitSquadron
PUBLIC	?SetUnitAirbase@UnitClass@@UAEXVVU_ID@@@Z	; UnitClass::SetUnitAirbase
PUBLIC	?SetLoadout@UnitClass@@UAEXPAULoadoutStruct@@H@Z ; UnitClass::SetLoadout
PUBLIC	?GetNumberOfLoadouts@UnitClass@@UAEHXZ		; UnitClass::GetNumberOfLoadouts
PUBLIC	?GetMoveTime@UnitClass@@UAEKXZ			; UnitClass::GetMoveTime
PUBLIC	?GetCombatTime@UnitClass@@UAEKXZ		; UnitClass::GetCombatTime
PUBLIC	?GetAirTargetID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetAirTargetID
PUBLIC	?GetAirTarget@UnitClass@@UAEPAVFalconEntity@@XZ	; UnitClass::GetAirTarget
PUBLIC	?GetBurntFuel@UnitClass@@UAEHXZ			; UnitClass::GetBurntFuel
PUBLIC	?GetUnitMission@UnitClass@@UAE?AW4MissionTypeEnum@@XZ ; UnitClass::GetUnitMission
PUBLIC	?GetUnitNormalRole@UnitClass@@UAEHXZ		; UnitClass::GetUnitNormalRole
PUBLIC	?GetUnitCurrentRole@UnitClass@@UBEHXZ		; UnitClass::GetUnitCurrentRole
PUBLIC	?GetUnitPriority@UnitClass@@UAEHXZ		; UnitClass::GetUnitPriority
PUBLIC	?GetUnitMissionTarget@UnitClass@@UAEPAVCampBaseClass@@XZ ; UnitClass::GetUnitMissionTarget
PUBLIC	?GetUnitMissionTargetID@UnitClass@@UAE?AVVU_ID@@XZ ; UnitClass::GetUnitMissionTargetID
PUBLIC	?GetUnitMissionID@UnitClass@@UAEHXZ		; UnitClass::GetUnitMissionID
PUBLIC	?GetUnitTOT@UnitClass@@UAEKXZ			; UnitClass::GetUnitTOT
PUBLIC	?GetUnitSquadron@UnitClass@@UAEPAV1@XZ		; UnitClass::GetUnitSquadron
PUBLIC	?GetUnitSquadronID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetUnitSquadronID
PUBLIC	?GetUnitAirbase@UnitClass@@UAEPAVCampBaseClass@@XZ ; UnitClass::GetUnitAirbase
PUBLIC	?GetUnitAirbaseID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetUnitAirbaseID
PUBLIC	?LoadWeapons@UnitClass@@UAEHPAXPAEW4MoveType@@HHH@Z ; UnitClass::LoadWeapons
PUBLIC	?DumpWeapons@UnitClass@@UAEHXZ			; UnitClass::DumpWeapons
PUBLIC	?ETA@UnitClass@@UAEKXZ				; UnitClass::ETA
PUBLIC	?GetKnownEmitters@UnitClass@@UAEPAVFalconPrivateList@@XZ ; UnitClass::GetKnownEmitters
PUBLIC	?BuildMission@UnitClass@@UAEHPAVMissionRequestClass@@@Z ; UnitClass::BuildMission
PUBLIC	?IncrementTime@UnitClass@@UAEXK@Z		; UnitClass::IncrementTime
PUBLIC	?UseFuel@UnitClass@@UAEXJ@Z			; UnitClass::UseFuel
PUBLIC	?SetUnitSpecialty@UnitClass@@UAEXH@Z		; UnitClass::SetUnitSpecialty
PUBLIC	?SetUnitSupply@UnitClass@@UAEXH@Z		; UnitClass::SetUnitSupply
PUBLIC	?SetUnitMorale@UnitClass@@UAEXH@Z		; UnitClass::SetUnitMorale
PUBLIC	?SetSquadronFuel@UnitClass@@UAEXJ@Z		; UnitClass::SetSquadronFuel
PUBLIC	?SetUnitStores@UnitClass@@UAEXHE@Z		; UnitClass::SetUnitStores
PUBLIC	?SetLastResupply@UnitClass@@UAEXH@Z		; UnitClass::SetLastResupply
PUBLIC	?SetLastResupplyTime@UnitClass@@UAEXK@Z		; UnitClass::SetLastResupplyTime
PUBLIC	?GetUnitSpecialty@UnitClass@@UAEHXZ		; UnitClass::GetUnitSpecialty
PUBLIC	?GetUnitSupply@UnitClass@@UAEHXZ		; UnitClass::GetUnitSupply
PUBLIC	?GetUnitMorale@UnitClass@@UAEHXZ		; UnitClass::GetUnitMorale
PUBLIC	?GetSquadronFuel@UnitClass@@UAEJXZ		; UnitClass::GetSquadronFuel
PUBLIC	?GetUnitStores@UnitClass@@UAEEH@Z		; UnitClass::GetUnitStores
PUBLIC	?GetLastResupplyTime@UnitClass@@UAEKXZ		; UnitClass::GetLastResupplyTime
PUBLIC	?GetLastResupply@UnitClass@@UAEHXZ		; UnitClass::GetLastResupply
PUBLIC	?SetUnitPrimaryObj@UnitClass@@UAEXVVU_ID@@@Z	; UnitClass::SetUnitPrimaryObj
PUBLIC	?SetUnitSecondaryObj@UnitClass@@UAEXVVU_ID@@@Z	; UnitClass::SetUnitSecondaryObj
PUBLIC	?SetUnitObjective@UnitClass@@UAEXVVU_ID@@@Z	; UnitClass::SetUnitObjective
PUBLIC	?SetUnitOrders@UnitClass@@UAEXH@Z		; UnitClass::SetUnitOrders
PUBLIC	?SetUnitOrders@UnitClass@@UAEXHVVU_ID@@@Z	; UnitClass::SetUnitOrders
PUBLIC	?SetUnitFatigue@UnitClass@@UAEXH@Z		; UnitClass::SetUnitFatigue
PUBLIC	?SetUnitMode@UnitClass@@UAEXH@Z			; UnitClass::SetUnitMode
PUBLIC	?SetUnitPosition@UnitClass@@UAEXH@Z		; UnitClass::SetUnitPosition
PUBLIC	?SetUnitDivision@UnitClass@@UAEXH@Z		; UnitClass::SetUnitDivision
PUBLIC	?SetUnitHeading@UnitClass@@UAEXH@Z		; UnitClass::SetUnitHeading
PUBLIC	?GetUnitPrimaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ ; UnitClass::GetUnitPrimaryObj
PUBLIC	?GetUnitSecondaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ ; UnitClass::GetUnitSecondaryObj
PUBLIC	?GetUnitObjective@UnitClass@@UAEPAVObjectiveClass@@XZ ; UnitClass::GetUnitObjective
PUBLIC	?GetUnitPrimaryObjID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetUnitPrimaryObjID
PUBLIC	?GetUnitSecondaryObjID@UnitClass@@UAE?AVVU_ID@@XZ ; UnitClass::GetUnitSecondaryObjID
PUBLIC	?GetUnitObjectiveID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetUnitObjectiveID
PUBLIC	?GetUnitOrders@UnitClass@@UAEHXZ		; UnitClass::GetUnitOrders
PUBLIC	?GetUnitFatigue@UnitClass@@UAEHXZ		; UnitClass::GetUnitFatigue
PUBLIC	?GetUnitElement@UnitClass@@UAEHXZ		; UnitClass::GetUnitElement
PUBLIC	?GetUnitMode@UnitClass@@UAEHXZ			; UnitClass::GetUnitMode
PUBLIC	?GetUnitPosition@UnitClass@@UAEHXZ		; UnitClass::GetUnitPosition
PUBLIC	?GetUnitDivision@UnitClass@@UAEHXZ		; UnitClass::GetUnitDivision
PUBLIC	?GetUnitHeading@UnitClass@@UAEHXZ		; UnitClass::GetUnitHeading
PUBLIC	?SetUnitNextMove@UnitClass@@UAEXXZ		; UnitClass::SetUnitNextMove
PUBLIC	?ClearUnitPath@UnitClass@@UAEXXZ		; UnitClass::ClearUnitPath
PUBLIC	?GetNextMoveDirection@UnitClass@@UAEHXZ		; UnitClass::GetNextMoveDirection
PUBLIC	?SetUnitCurrentDestination@UnitClass@@UAEXFF@Z	; UnitClass::SetUnitCurrentDestination
PUBLIC	?GetUnitCurrentDestination@UnitClass@@UAEXPAF0@Z ; UnitClass::GetUnitCurrentDestination
PUBLIC	?GetObjMovementType@UnitClass@@UAE?AW4MoveType@@PAVObjectiveClass@@H@Z ; UnitClass::GetObjMovementType
PUBLIC	?CheckForSurrender@UnitClass@@UAEHXZ		; UnitClass::CheckForSurrender
PUBLIC	?BuildMission@UnitClass@@UAEHXZ			; UnitClass::BuildMission
PUBLIC	?RallyUnit@UnitClass@@UAEHH@Z			; UnitClass::RallyUnit
PUBLIC	?GetUnitParent@UnitClass@@UBEPAV1@XZ		; UnitClass::GetUnitParent
PUBLIC	?GetUnitParentID@UnitClass@@UAE?AVVU_ID@@XZ	; UnitClass::GetUnitParentID
PUBLIC	?SetUnitParent@UnitClass@@UAEXPAV1@@Z		; UnitClass::SetUnitParent
PUBLIC	?GetFirstUnitElement@UnitClass@@UBEPAV1@XZ	; UnitClass::GetFirstUnitElement
PUBLIC	?GetNextUnitElement@UnitClass@@UBEPAV1@XZ	; UnitClass::GetNextUnitElement
PUBLIC	?GetPrevUnitElement@UnitClass@@UAEPAV1@PAV1@@Z	; UnitClass::GetPrevUnitElement
PUBLIC	?ReorganizeUnit@UnitClass@@UAEXXZ		; UnitClass::ReorganizeUnit
PUBLIC	?UpdateParentStatistics@UnitClass@@UAEHXZ	; UnitClass::UpdateParentStatistics
PUBLIC	?MaxUpdateTime@AirUnitClass@@UBEKXZ		; AirUnitClass::MaxUpdateTime
PUBLIC	?GetVt@AirUnitClass@@UBEMXZ			; AirUnitClass::GetVt
PUBLIC	?GetKias@AirUnitClass@@UBEMXZ			; AirUnitClass::GetKias
PUBLIC	?GetRating@SquadronClass@@QAEEH@Z		; SquadronClass::GetRating
PUBLIC	?GetFACFlight@PackageClass@@QAEPAVFlightClass@@XZ ; PackageClass::GetFACFlight
PUBLIC	?GetFlights@PackageClass@@QAEEXZ		; PackageClass::GetFlights
PUBLIC	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
PUBLIC	?SetTanker@PackageClass@@QAEXVVU_ID@@@Z		; PackageClass::SetTanker
PUBLIC	?SetTakeoff@PackageClass@@QAEXK@Z		; PackageClass::SetTakeoff
PUBLIC	?SetPackageFlags@PackageClass@@QAEXK@Z		; PackageClass::SetPackageFlags
PUBLIC	?SetTPTime@PackageClass@@QAEXK@Z		; PackageClass::SetTPTime
PUBLIC	??0PackageClass@@QAE@G@Z			; PackageClass::PackageClass
PUBLIC	??0PackageClass@@QAE@PAPAEPAJ@Z			; PackageClass::PackageClass
PUBLIC	??1PackageClass@@UAE@XZ				; PackageClass::~PackageClass
PUBLIC	?SaveSize@PackageClass@@UAEHXZ			; PackageClass::SaveSize
PUBLIC	?Save@PackageClass@@UAEHPAPAE@Z			; PackageClass::Save
PUBLIC	?Handle@PackageClass@@UAEHPAVVuFullUpdateEvent@@@Z ; PackageClass::Handle
PUBLIC	?Reaction@PackageClass@@UAEHPAVCampBaseClass@@HM@Z ; PackageClass::Reaction
PUBLIC	?MoveUnit@PackageClass@@UAEHK@Z			; PackageClass::MoveUnit
PUBLIC	?ChooseTactic@PackageClass@@UAEHXZ		; PackageClass::ChooseTactic
PUBLIC	?CheckTactic@PackageClass@@UAEHH@Z		; PackageClass::CheckTactic
PUBLIC	?Father@PackageClass@@UBEHXZ			; PackageClass::Father
PUBLIC	?Real@PackageClass@@UAEHXZ			; PackageClass::Real
PUBLIC	?IsPackage@PackageClass@@UAEHXZ			; PackageClass::IsPackage
PUBLIC	?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ; PackageClass::MakePackageDirty
PUBLIC	?WriteDirty@PackageClass@@QAEXPAPAE@Z		; PackageClass::WriteDirty
PUBLIC	?ReadDirty@PackageClass@@QAEXPAPAEPAJ@Z		; PackageClass::ReadDirty
PUBLIC	?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z ; PackageClass::BuildPackage
PUBLIC	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition
PUBLIC	?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z ; PackageClass::FindSupportFlights
PUBLIC	?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z ; PackageClass::HandleRequestReceipt
PUBLIC	?GetFirstUnitElement@PackageClass@@UAEPAVUnitClass@@XZ ; PackageClass::GetFirstUnitElement
PUBLIC	?GetNextUnitElement@PackageClass@@UAEPAVUnitClass@@XZ ; PackageClass::GetNextUnitElement
PUBLIC	?GetUnitElement@PackageClass@@UAEPAVUnitClass@@H@Z ; PackageClass::GetUnitElement
PUBLIC	?GetUnitElementByID@PackageClass@@UAEPAVUnitClass@@H@Z ; PackageClass::GetUnitElementByID
PUBLIC	?AddUnitChild@PackageClass@@UAEXPAVUnitClass@@@Z ; PackageClass::AddUnitChild
PUBLIC	?DisposeChildren@PackageClass@@UAEXXZ		; PackageClass::DisposeChildren
PUBLIC	?RemoveChild@PackageClass@@UAEXVVU_ID@@@Z	; PackageClass::RemoveChild
PUBLIC	?CheckNeedRequests@PackageClass@@QAEHXZ		; PackageClass::CheckNeedRequests
PUBLIC	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight
PUBLIC	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetMainFlightID
PUBLIC	?GetMainFlight@PackageClass@@QAEPAVFlightClass@@XZ ; PackageClass::GetMainFlight
PUBLIC	?SetUnitAssemblyPoint@PackageClass@@UAEXHFF@Z	; PackageClass::SetUnitAssemblyPoint
PUBLIC	?GetUnitAssemblyPoint@PackageClass@@UAEXHPAF0@Z	; PackageClass::GetUnitAssemblyPoint
PUBLIC	??_GPackageClass@@UAEPAXI@Z			; PackageClass::`scalar deleting destructor'
PUBLIC	?NewPackage@@YAPAVPackageClass@@H@Z		; NewPackage
PUBLIC	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
PUBLIC	?FinalizeFlight@@YAXPAVUnitClass@@H@Z		; FinalizeFlight
PUBLIC	?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z ; CallInOCAStrikes
PUBLIC	?TransferFlight@@YAXPAVFlightClass@@PAVPackageClass@@@Z ; TransferFlight
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7PackageClass@@6B@				; PackageClass::`vftable'
PUBLIC	??_C@_0BD@OHALJGBI@?$CF08x?5PackageClass?5?$AA@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4PackageClass@@6B@				; PackageClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPackageClass@@@8			; PackageClass `RTTI Type Descriptor'
PUBLIC	??_R3PackageClass@@8				; PackageClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PackageClass@@8				; PackageClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PackageClass@@8			; PackageClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@AirUnitClass@@8			; AirUnitClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAirUnitClass@@@8			; AirUnitClass `RTTI Type Descriptor'
PUBLIC	??_R3AirUnitClass@@8				; AirUnitClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AirUnitClass@@8				; AirUnitClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnitClass@@8			; UnitClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnitClass@@@8				; UnitClass `RTTI Type Descriptor'
PUBLIC	??_R3UnitClass@@8				; UnitClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnitClass@@8				; UnitClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CampBaseClass@@8			; CampBaseClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCampBaseClass@@@8			; CampBaseClass `RTTI Type Descriptor'
PUBLIC	??_R3CampBaseClass@@8				; CampBaseClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CampBaseClass@@8				; CampBaseClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FalconEntity@@8			; FalconEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFalconEntity@@@8			; FalconEntity `RTTI Type Descriptor'
PUBLIC	??_R3FalconEntity@@8				; FalconEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FalconEntity@@8				; FalconEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuEntity@@8			; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuEntity@@@8				; VuEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuEntity@@8				; VuEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuEntity@@8				; VuEntity::`RTTI Base Class Array'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f17ac60
PUBLIC	__real@3f693e32
PUBLIC	__real@3f800000
PUBLIC	__real@42480000
PUBLIC	__real@bdcccccd
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_fflush:PROC
EXTRN	_fprintf:PROC
EXTRN	_sprintf:PROC
EXTRN	_rand:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	?SetPosition@VuEntity@@QAEXMMM@Z:PROC		; VuEntity::SetPosition
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z:PROC ; VuEntity::CustomCollisionCheck
EXTRN	?TerrainCollisionCheck@VuEntity@@UAEEXZ:PROC	; VuEntity::TerrainCollisionCheck
EXTRN	?IsTarget@VuEntity@@UAEEXZ:PROC			; VuEntity::IsTarget
EXTRN	?IsSession@VuEntity@@UAEEXZ:PROC		; VuEntity::IsSession
EXTRN	?IsGroup@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGroup
EXTRN	?IsGame@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGame
EXTRN	?IsCamera@VuEntity@@UBEEXZ:PROC			; VuEntity::IsCamera
EXTRN	?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?InsertionCallback@VuEntity@@MAEHXZ:PROC	; VuEntity::InsertionCallback
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z:PROC	; VuCollection::Find
EXTRN	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Insert
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?Save@FalconEntity@@UAEHPAU_iobuf@@@Z:PROC	; FalconEntity::Save
EXTRN	?CleanupData@FalconEntity@@UAEXXZ:PROC		; FalconEntity::CleanupData
EXTRN	?RemovalCallback@FalconEntity@@UAEHXZ:PROC	; FalconEntity::RemovalCallback
EXTRN	?GetDomain@FalconEntity@@UAEEXZ:PROC		; FalconEntity::GetDomain
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	?MakeDirty@FalconEntity@@QAEXW4Dirty_Class@@W4Dirtyness@@@Z:PROC ; FalconEntity::MakeDirty
EXTRN	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z:PROC	; FalconPrivateList::FalconPrivateList
EXTRN	??1FalconPrivateList@@UAE@XZ:PROC		; FalconPrivateList::~FalconPrivateList
EXTRN	?Camp_GetCurrentTime@@YAKXZ:PROC		; Camp_GetCurrentTime
EXTRN	?GetClassID@@YAHEEEEEEEE@Z:PROC			; GetClassID
EXTRN	??0WayPointClass@@QAE@PAPAEPAJ@Z:PROC		; WayPointClass::WayPointClass
EXTRN	?SaveSize@WayPointClass@@QAEHXZ:PROC		; WayPointClass::SaveSize
EXTRN	?Save@WayPointClass@@QAEHPAPAE@Z:PROC		; WayPointClass::Save
EXTRN	?InsertWP@WayPointClass@@QAEXPAV1@@Z:PROC	; WayPointClass::InsertWP
EXTRN	?DeleteWP@WayPointClass@@QAEXXZ:PROC		; WayPointClass::DeleteWP
EXTRN	?DeleteWPList@@YAXPAVWayPointClass@@@Z:PROC	; DeleteWPList
EXTRN	?CloneWPToList@@YAPAVWayPointClass@@PAV1@0@Z:PROC ; CloneWPToList
EXTRN	??0MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::MissionRequestClass
EXTRN	??1MissionRequestClass@@QAE@XZ:PROC		; MissionRequestClass::~MissionRequestClass
EXTRN	?RequestMission@MissionRequestClass@@QAEHXZ:PROC ; MissionRequestClass::RequestMission
EXTRN	?RequestEnemyMission@MissionRequestClass@@QAEHXZ:PROC ; MissionRequestClass::RequestEnemyMission
EXTRN	?AddTankerWayPoint@@YAHPAVFlightClass@@H@Z:PROC	; AddTankerWayPoint
EXTRN	?CheckPathThreats@@YAHPAVUnitClass@@@Z:PROC	; CheckPathThreats
EXTRN	?TargetThreats@@YAHEHPAVFalconPrivateList@@W4MoveType@@KJPAF@Z:PROC ; TargetThreats
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	?GetIdFromNamespace@@YAKAAVIdNamespace@@@Z:PROC	; GetIdFromNamespace
EXTRN	?GetTeam@@YAEE@Z:PROC				; GetTeam
EXTRN	?SetOwner@CampBaseClass@@UAEXE@Z:PROC		; CampBaseClass::SetOwner
EXTRN	?MakeCampBaseDirty@CampBaseClass@@QAEXW4Dirty_Campaign_Base@@W4Dirtyness@@@Z:PROC ; CampBaseClass::MakeCampBaseDirty
EXTRN	?InitData@CampBaseClass@@UAEXXZ:PROC		; CampBaseClass::InitData
EXTRN	?Handle@CampBaseClass@@UAEHPAVVuEvent@@@Z:PROC	; CampBaseClass::Handle
EXTRN	?Handle@CampBaseClass@@UAEHPAVVuPositionUpdateEvent@@@Z:PROC ; CampBaseClass::Handle
EXTRN	?Handle@CampBaseClass@@UAEHPAVVuEntityCollisionEvent@@@Z:PROC ; CampBaseClass::Handle
EXTRN	?Handle@CampBaseClass@@UAEHPAVVuTransferEvent@@@Z:PROC ; CampBaseClass::Handle
EXTRN	?Handle@CampBaseClass@@UAEHPAVVuSessionEvent@@@Z:PROC ; CampBaseClass::Handle
EXTRN	?Remove@CampBaseClass@@QAEHXZ:PROC		; CampBaseClass::Remove
EXTRN	?SetLocation@CampBaseClass@@QAEXFF@Z:PROC	; CampBaseClass::SetLocation
EXTRN	?GetFeatureValue@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureValue
EXTRN	?GetFeatureID@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureID
EXTRN	?BestTargetFeature@@YAHPAVObjectiveClass@@QAE@Z:PROC ; BestTargetFeature
EXTRN	?SendDeaggregateData@UnitClass@@UAEXPAVVuTargetEntity@@@Z:PROC ; UnitClass::SendDeaggregateData
EXTRN	?RecordCurrentState@UnitClass@@UAEHPAVFalconSessionEntity@@H@Z:PROC ; UnitClass::RecordCurrentState
EXTRN	?Deaggregate@UnitClass@@UAEHPAVFalconSessionEntity@@@Z:PROC ; UnitClass::Deaggregate
EXTRN	?Reaggregate@UnitClass@@UAEHPAVFalconSessionEntity@@@Z:PROC ; UnitClass::Reaggregate
EXTRN	?TransferOwnership@UnitClass@@UAEHPAVFalconSessionEntity@@@Z:PROC ; UnitClass::TransferOwnership
EXTRN	?Wake@UnitClass@@UAEHXZ:PROC			; UnitClass::Wake
EXTRN	?Sleep@UnitClass@@UAEHXZ:PROC			; UnitClass::Sleep
EXTRN	?InsertInSimLists@UnitClass@@UAEXMM@Z:PROC	; UnitClass::InsertInSimLists
EXTRN	?RemoveFromSimLists@UnitClass@@UAEXXZ:PROC	; UnitClass::RemoveFromSimLists
EXTRN	?DeaggregateFromData@UnitClass@@UAEXPAEJ@Z:PROC	; UnitClass::DeaggregateFromData
EXTRN	?ReaggregateFromData@UnitClass@@UAEXPAEJ@Z:PROC	; UnitClass::ReaggregateFromData
EXTRN	?TransferOwnershipFromData@UnitClass@@UAEXPAEJ@Z:PROC ; UnitClass::TransferOwnershipFromData
EXTRN	?ResetPlayerStatus@UnitClass@@UAEHXZ:PROC	; UnitClass::ResetPlayerStatus
EXTRN	?ApplyDamage@UnitClass@@UAEHPAVFalconCampWeaponsFire@@E@Z:PROC ; UnitClass::ApplyDamage
EXTRN	?ApplyDamage@UnitClass@@UAEHW4DamageDataType@@PAHHF@Z:PROC ; UnitClass::ApplyDamage
EXTRN	?DecodeDamageData@UnitClass@@UAEHPAEPAV1@PAVFalconDeathMessage@@@Z:PROC ; UnitClass::DecodeDamageData
EXTRN	?CollectWeapons@UnitClass@@UAEHPAEW4MoveType@@QAFQAEH@Z:PROC ; UnitClass::CollectWeapons
EXTRN	?GetDamageModifiers@UnitClass@@UAEPAEXZ:PROC	; UnitClass::GetDamageModifiers
EXTRN	?GetName@UnitClass@@UAEPADPADHH@Z:PROC		; UnitClass::GetName
EXTRN	?GetFullName@UnitClass@@UAEPADPADHH@Z:PROC	; UnitClass::GetFullName
EXTRN	?GetDivisionName@UnitClass@@UAEPADPADHH@Z:PROC	; UnitClass::GetDivisionName
EXTRN	?GetHitChance@UnitClass@@UAEHHH@Z:PROC		; UnitClass::GetHitChance
EXTRN	?GetAproxHitChance@UnitClass@@UAEHHH@Z:PROC	; UnitClass::GetAproxHitChance
EXTRN	?GetCombatStrength@UnitClass@@UAEHHH@Z:PROC	; UnitClass::GetCombatStrength
EXTRN	?GetAproxCombatStrength@UnitClass@@UAEHHH@Z:PROC ; UnitClass::GetAproxCombatStrength
EXTRN	?GetWeaponRange@UnitClass@@UAEHHPAVFalconEntity@@@Z:PROC ; UnitClass::GetWeaponRange
EXTRN	?GetAproxWeaponRange@UnitClass@@UAEHH@Z:PROC	; UnitClass::GetAproxWeaponRange
EXTRN	?GetDetectionRange@UnitClass@@UAEHH@Z:PROC	; UnitClass::GetDetectionRange
EXTRN	?GetElectronicDetectionRange@UnitClass@@UAEHH@Z:PROC ; UnitClass::GetElectronicDetectionRange
EXTRN	?CanDetect@UnitClass@@UAEHPAVFalconEntity@@@Z:PROC ; UnitClass::CanDetect
EXTRN	?GetComponentLocation@UnitClass@@UAEXPAF0H@Z:PROC ; UnitClass::GetComponentLocation
EXTRN	?GetComponentAltitude@UnitClass@@UAEHH@Z:PROC	; UnitClass::GetComponentAltitude
EXTRN	?GetRCSFactor@UnitClass@@UAEMXZ:PROC		; UnitClass::GetRCSFactor
EXTRN	?GetIRFactor@UnitClass@@UAEMXZ:PROC		; UnitClass::GetIRFactor
EXTRN	?GetNumberOfArcs@UnitClass@@UAEHXZ:PROC		; UnitClass::GetNumberOfArcs
EXTRN	?GetArcRatio@UnitClass@@UAEMH@Z:PROC		; UnitClass::GetArcRatio
EXTRN	?GetArcRange@UnitClass@@UAEMH@Z:PROC		; UnitClass::GetArcRange
EXTRN	?GetArcAngle@UnitClass@@UAEXHPAM0@Z:PROC	; UnitClass::GetArcAngle
EXTRN	?GetRadarType@UnitClass@@UAEHXZ:PROC		; UnitClass::GetRadarType
EXTRN	?SetDead@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetDead
EXTRN	?SetParent@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetParent
EXTRN	?SetFinal@UnitClass@@QAEXH@Z:PROC		; UnitClass::SetFinal
EXTRN	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ:PROC ; UnitClass::GetUnitClassData
EXTRN	?GetBestVehicleWeapon@UnitClass@@UAEHHPAEW4MoveType@@HPAH@Z:PROC ; UnitClass::GetBestVehicleWeapon
EXTRN	?GetVehicleHitChance@UnitClass@@UAEHHW4MoveType@@HH@Z:PROC ; UnitClass::GetVehicleHitChance
EXTRN	?GetVehicleCombatStrength@UnitClass@@UAEHHW4MoveType@@H@Z:PROC ; UnitClass::GetVehicleCombatStrength
EXTRN	?GetVehicleRange@UnitClass@@UAEHHHPAVFalconEntity@@@Z:PROC ; UnitClass::GetVehicleRange
EXTRN	?GetUnitWeaponId@UnitClass@@UAEHHH@Z:PROC	; UnitClass::GetUnitWeaponId
EXTRN	?GetUnitWeaponCount@UnitClass@@UAEHHH@Z:PROC	; UnitClass::GetUnitWeaponCount
EXTRN	?GetUnitDestination@UnitClass@@QAEXPAF0@Z:PROC	; UnitClass::GetUnitDestination
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetCombatSpeed@UnitClass@@QBEHXZ:PROC		; UnitClass::GetCombatSpeed
EXTRN	?KillUnit@UnitClass@@QAEXXZ:PROC		; UnitClass::KillUnit
EXTRN	?DisposeWayPoints@UnitClass@@QAEXXZ:PROC	; UnitClass::DisposeWayPoints
EXTRN	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetFirstUnit
EXTRN	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z:PROC ; GetNextUnit
EXTRN	?DistSqu@@YAHFFFF@Z:PROC			; DistSqu
EXTRN	?Distance@@YAMFFFF@Z:PROC			; Distance
EXTRN	?AngleTo@@YAMFFFF@Z:PROC			; AngleTo
EXTRN	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z:PROC	; FindUnit
EXTRN	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z:PROC ; FindEntity
EXTRN	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z:PROC ; GetObjectiveByXY
EXTRN	?CollectThreatsFast@@YAHFFHEHPAVFalconPrivateList@@@Z:PROC ; CollectThreatsFast
EXTRN	?ScoreThreatFast@@YAHFFHE@Z:PROC		; ScoreThreatFast
EXTRN	?GetAltitudeLevel@@YAHH@Z:PROC			; GetAltitudeLevel
EXTRN	??0AirUnitClass@@QAE@GK@Z:PROC			; AirUnitClass::AirUnitClass
EXTRN	??0AirUnitClass@@QAE@PAPAEPAJ@Z:PROC		; AirUnitClass::AirUnitClass
EXTRN	??1AirUnitClass@@UAE@XZ:PROC			; AirUnitClass::~AirUnitClass
EXTRN	?SaveSize@AirUnitClass@@UAEHXZ:PROC		; AirUnitClass::SaveSize
EXTRN	?Save@AirUnitClass@@UAEHPAPAE@Z:PROC		; AirUnitClass::Save
EXTRN	?Handle@AirUnitClass@@UAEHPAVVuFullUpdateEvent@@@Z:PROC ; AirUnitClass::Handle
EXTRN	?GetMovementType@AirUnitClass@@UAE?AW4MoveType@@XZ:PROC ; AirUnitClass::GetMovementType
EXTRN	?GetUnitSpeed@AirUnitClass@@UBEHXZ:PROC		; AirUnitClass::GetUnitSpeed
EXTRN	?IsHelicopter@AirUnitClass@@UBEHXZ:PROC		; AirUnitClass::IsHelicopter
EXTRN	?OnGround@AirUnitClass@@UAEHXZ:PROC		; AirUnitClass::OnGround
EXTRN	?NewFlight@@YAPAVFlightClass@@HPAVUnitClass@@0@Z:PROC ; NewFlight
EXTRN	?GetUnitScore@@YAHPAVUnitClass@@W4MoveType@@@Z:PROC ; GetUnitScore
EXTRN	??_EPackageClass@@UAEPAXI@Z:PROC		; PackageClass::`vector deleting destructor'
EXTRN	?GetPriority@@YAHPAVMissionRequestClass@@@Z:PROC ; GetPriority
EXTRN	?FindBestAir@AirTaskingManagerClass@@QAEPAVSquadronClass@@PAVMissionRequestClass@@FF@Z:PROC ; AirTaskingManagerClass::FindBestAir
EXTRN	?FindBestAirFlight@AirTaskingManagerClass@@QAEPAVFlightClass@@PAVMissionRequestClass@@@Z:PROC ; AirTaskingManagerClass::FindBestAirFlight
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?Map_Max_X@@3FA:WORD				; Map_Max_X
EXTRN	?Map_Max_Y@@3FA:WORD				; Map_Max_Y
EXTRN	?DDP@@3PAUDirtyDataClassType@@A:DWORD		; DDP
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?MissionData@@3PAUMissionDataType@@A:BYTE	; MissionData
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PackageNS@@3VIdNamespace@@A:BYTE		; PackageNS
EXTRN	?CampFilter@@3VCampBaseFilter@@A:DWORD		; CampFilter
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?gCampDataVersion@@3HA:DWORD			; gCampDataVersion
EXTRN	?MAX_FLYMISSION_THREAT@@3FA:WORD		; MAX_FLYMISSION_THREAT
EXTRN	?MAX_FLYMISSION_HIGHTHREAT@@3FA:WORD		; MAX_FLYMISSION_HIGHTHREAT
EXTRN	?MAX_FLYMISSION_NOTHREAT@@3FA:WORD		; MAX_FLYMISSION_NOTHREAT
EXTRN	?MIN_SEADESCORT_THREAT@@3FA:WORD		; MIN_SEADESCORT_THREAT
EXTRN	?MINIMUM_BDA_PRIORITY@@3FA:WORD			; MINIMUM_BDA_PRIORITY
EXTRN	?ONCALL_CAS_FLIGHTS_PER_REQUEST@@3FA:WORD	; ONCALL_CAS_FLIGHTS_PER_REQUEST
EXTRN	?AIR_UPDATE_CHECK_INTERVAL@@3FA:WORD		; AIR_UPDATE_CHECK_INTERVAL
EXTRN	?PACKAGE_CYCLES_TO_WAIT@@3FA:WORD		; PACKAGE_CYCLES_TO_WAIT
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?save_log@@3PAU_iobuf@@A:DWORD			; save_log
EXTRN	?load_log@@3PAU_iobuf@@A:DWORD			; load_log
EXTRN	?start_save_stream@@3HA:DWORD			; start_save_stream
EXTRN	?start_load_stream@@3HA:DWORD			; start_load_stream
EXTRN	?g_bTankerWaypoints@@3_NA:BYTE			; g_bTankerWaypoints
EXTRN	?g_bLargeStrike@@3_NA:BYTE			; g_bLargeStrike
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@bdcccccd
CONST	SEGMENT
__real@bdcccccd DD 0bdcccccdr			; -0.1
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f693e32
CONST	SEGMENT
__real@3f693e32 DD 03f693e32r			; 0.911105
CONST	ENDS
;	COMDAT __real@3f17ac60
CONST	SEGMENT
__real@3f17ac60 DD 03f17ac60r			; 0.592474
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT ??_R2VuEntity@@8
rdata$r	SEGMENT
??_R2VuEntity@@8 DD FLAT:??_R1A@?0A@EA@VuEntity@@8	; VuEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuEntity@@8
rdata$r	SEGMENT
??_R3VuEntity@@8 DD 00H					; VuEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuEntity@@@8
_DATA	SEGMENT
??_R0?AVVuEntity@@@8 DD FLAT:??_7type_info@@6B@		; VuEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuEntity@@8 DD FLAT:??_R0?AVVuEntity@@@8	; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2FalconEntity@@8
rdata$r	SEGMENT
??_R2FalconEntity@@8 DD FLAT:??_R1A@?0A@EA@FalconEntity@@8 ; FalconEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3FalconEntity@@8
rdata$r	SEGMENT
??_R3FalconEntity@@8 DD 00H				; FalconEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FalconEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFalconEntity@@@8
_DATA	SEGMENT
??_R0?AVFalconEntity@@@8 DD FLAT:??_7type_info@@6B@	; FalconEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFalconEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@FalconEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FalconEntity@@8 DD FLAT:??_R0?AVFalconEntity@@@8 ; FalconEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FalconEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CampBaseClass@@8
rdata$r	SEGMENT
??_R2CampBaseClass@@8 DD FLAT:??_R1A@?0A@EA@CampBaseClass@@8 ; CampBaseClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FalconEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CampBaseClass@@8
rdata$r	SEGMENT
??_R3CampBaseClass@@8 DD 00H				; CampBaseClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CampBaseClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCampBaseClass@@@8
_DATA	SEGMENT
??_R0?AVCampBaseClass@@@8 DD FLAT:??_7type_info@@6B@	; CampBaseClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCampBaseClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CampBaseClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CampBaseClass@@8 DD FLAT:??_R0?AVCampBaseClass@@@8 ; CampBaseClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CampBaseClass@@8
rdata$r	ENDS
;	COMDAT ??_R2UnitClass@@8
rdata$r	SEGMENT
??_R2UnitClass@@8 DD FLAT:??_R1A@?0A@EA@UnitClass@@8	; UnitClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CampBaseClass@@8
	DD	FLAT:??_R1A@?0A@EA@FalconEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3UnitClass@@8
rdata$r	SEGMENT
??_R3UnitClass@@8 DD 00H				; UnitClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnitClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnitClass@@@8
_DATA	SEGMENT
??_R0?AVUnitClass@@@8 DD FLAT:??_7type_info@@6B@	; UnitClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnitClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnitClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnitClass@@8 DD FLAT:??_R0?AVUnitClass@@@8 ; UnitClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnitClass@@8
rdata$r	ENDS
;	COMDAT ??_R2AirUnitClass@@8
rdata$r	SEGMENT
??_R2AirUnitClass@@8 DD FLAT:??_R1A@?0A@EA@AirUnitClass@@8 ; AirUnitClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnitClass@@8
	DD	FLAT:??_R1A@?0A@EA@CampBaseClass@@8
	DD	FLAT:??_R1A@?0A@EA@FalconEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3AirUnitClass@@8
rdata$r	SEGMENT
??_R3AirUnitClass@@8 DD 00H				; AirUnitClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2AirUnitClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAirUnitClass@@@8
_DATA	SEGMENT
??_R0?AVAirUnitClass@@@8 DD FLAT:??_7type_info@@6B@	; AirUnitClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAirUnitClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AirUnitClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AirUnitClass@@8 DD FLAT:??_R0?AVAirUnitClass@@@8 ; AirUnitClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AirUnitClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PackageClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PackageClass@@8 DD FLAT:??_R0?AVPackageClass@@@8 ; PackageClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PackageClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PackageClass@@8
rdata$r	SEGMENT
??_R2PackageClass@@8 DD FLAT:??_R1A@?0A@EA@PackageClass@@8 ; PackageClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AirUnitClass@@8
	DD	FLAT:??_R1A@?0A@EA@UnitClass@@8
	DD	FLAT:??_R1A@?0A@EA@CampBaseClass@@8
	DD	FLAT:??_R1A@?0A@EA@FalconEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3PackageClass@@8
rdata$r	SEGMENT
??_R3PackageClass@@8 DD 00H				; PackageClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2PackageClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPackageClass@@@8
_DATA	SEGMENT
??_R0?AVPackageClass@@@8 DD FLAT:??_7type_info@@6B@	; PackageClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPackageClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PackageClass@@6B@
rdata$r	SEGMENT
??_R4PackageClass@@6B@ DD 00H				; PackageClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPackageClass@@@8
	DD	FLAT:??_R3PackageClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OHALJGBI@?$CF08x?5PackageClass?5?$AA@
CONST	SEGMENT
??_C@_0BD@OHALJGBI@?$CF08x?5PackageClass?5?$AA@ DB '%08x PackageClass ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7PackageClass@@6B@
CONST	SEGMENT
??_7PackageClass@@6B@ DD FLAT:??_R4PackageClass@@6B@	; PackageClass::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@PackageClass@@UAEHXZ
	DD	FLAT:?Save@FalconEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@PackageClass@@UAEHPAPAE@Z
	DD	FLAT:?Handle@CampBaseClass@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@CampBaseClass@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@CampBaseClass@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@CampBaseClass@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@PackageClass@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@CampBaseClass@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EPackageClass@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@FalconEntity@@UAEHXZ
	DD	FLAT:?InitData@CampBaseClass@@UAEXXZ
	DD	FLAT:?CleanupData@FalconEntity@@UAEXXZ
	DD	FLAT:?IsSimBase@FalconEntity@@UAE_NXZ
	DD	FLAT:?IsCampBase@CampBaseClass@@UAE_NXZ
	DD	FLAT:?Wake@UnitClass@@UAEHXZ
	DD	FLAT:?Sleep@UnitClass@@UAEHXZ
	DD	FLAT:?GetCampID@CampBaseClass@@UAEFXZ
	DD	FLAT:?GetTeam@CampBaseClass@@UAEEXZ
	DD	FLAT:?GetCountry@CampBaseClass@@UAEEXZ
	DD	FLAT:?GetDomain@FalconEntity@@UAEEXZ
	DD	FLAT:?GetRadarMode@FalconEntity@@UAEHXZ
	DD	FLAT:?SetRadarMode@FalconEntity@@UAEXE@Z
	DD	FLAT:?ReturnToSearch@FalconEntity@@UAEXXZ
	DD	FLAT:?SetSearchMode@FalconEntity@@UAEXE@Z
	DD	FLAT:?CombatClass@FalconEntity@@UAEHXZ
	DD	FLAT:?OnGround@AirUnitClass@@UAEHXZ
	DD	FLAT:?HasEntity@CampBaseClass@@UBEHPAVVuEntity@@@Z
	DD	FLAT:?IsMissile@FalconEntity@@UAEHXZ
	DD	FLAT:?IsLauncher@FalconEntity@@UAEHXZ
	DD	FLAT:?IsBomb@FalconEntity@@UAEHXZ
	DD	FLAT:?IsGun@FalconEntity@@UAEHXZ
	DD	FLAT:?IsMover@FalconEntity@@UAEHXZ
	DD	FLAT:?IsVehicle@FalconEntity@@UAEHXZ
	DD	FLAT:?IsStatic@FalconEntity@@UAEHXZ
	DD	FLAT:?IsHelicopter@FalconEntity@@UAEHXZ
	DD	FLAT:?IsEject@FalconEntity@@UAEHXZ
	DD	FLAT:?IsAirplane@FalconEntity@@UAEHXZ
	DD	FLAT:?IsGroundVehicle@FalconEntity@@UAEHXZ
	DD	FLAT:?IsShip@FalconEntity@@UAEHXZ
	DD	FLAT:?IsWeapon@FalconEntity@@UAEHXZ
	DD	FLAT:?IsExploding@FalconEntity@@UAEHXZ
	DD	FLAT:?IsDead@FalconEntity@@UAEHXZ
	DD	FLAT:?IsEmitting@CampBaseClass@@UAEHXZ
	DD	FLAT:?GetVt@AirUnitClass@@UBEMXZ
	DD	FLAT:?GetKias@AirUnitClass@@UBEMXZ
	DD	FLAT:?GetMovementType@AirUnitClass@@UAE?AW4MoveType@@XZ
	DD	FLAT:?IsUnit@UnitClass@@UAEHXZ
	DD	FLAT:?IsObjective@FalconEntity@@UAEHXZ
	DD	FLAT:?IsBattalion@FalconEntity@@UAEHXZ
	DD	FLAT:?IsBrigade@FalconEntity@@UAEHXZ
	DD	FLAT:?IsFlight@FalconEntity@@UBEHXZ
	DD	FLAT:?IsSquadron@FalconEntity@@UAEHXZ
	DD	FLAT:?IsPackage@PackageClass@@UAEHXZ
	DD	FLAT:?IsTeam@FalconEntity@@UAEHXZ
	DD	FLAT:?IsTaskForce@FalconEntity@@UAEHXZ
	DD	FLAT:?IsSPJamming@FalconEntity@@UAEHXZ
	DD	FLAT:?IsAreaJamming@FalconEntity@@UAEHXZ
	DD	FLAT:?HasSPJamming@FalconEntity@@UAEHXZ
	DD	FLAT:?HasAreaJamming@FalconEntity@@UAEHXZ
	DD	FLAT:?GetRCSFactor@UnitClass@@UAEMXZ
	DD	FLAT:?GetIRFactor@UnitClass@@UAEMXZ
	DD	FLAT:?GetRadarType@UnitClass@@UAEHXZ
	DD	FLAT:?GetDamageModifiers@UnitClass@@UAEPAEXZ
	DD	FLAT:?SetAQUIREtimer@FalconEntity@@UAEXK@Z
	DD	FLAT:?SetSEARCHtimer@FalconEntity@@UAEXK@Z
	DD	FLAT:?SetStepSearchMode@FalconEntity@@UAEXE@Z
	DD	FLAT:?GetAQUIREtimer@FalconEntity@@UAEKXZ
	DD	FLAT:?GetSEARCHtimer@FalconEntity@@UAEKXZ
	DD	FLAT:?SetOwner@CampBaseClass@@UAEXE@Z
	DD	FLAT:?SendDeaggregateData@UnitClass@@UAEXPAVVuTargetEntity@@@Z
	DD	FLAT:?RecordCurrentState@UnitClass@@UAEHPAVFalconSessionEntity@@H@Z
	DD	FLAT:?Deaggregate@UnitClass@@UAEHPAVFalconSessionEntity@@@Z
	DD	FLAT:?Reaggregate@UnitClass@@UAEHPAVFalconSessionEntity@@@Z
	DD	FLAT:?TransferOwnership@UnitClass@@UAEHPAVFalconSessionEntity@@@Z
	DD	FLAT:?InsertInSimLists@UnitClass@@UAEXMM@Z
	DD	FLAT:?RemoveFromSimLists@UnitClass@@UAEXXZ
	DD	FLAT:?DeaggregateFromData@UnitClass@@UAEXPAEJ@Z
	DD	FLAT:?ReaggregateFromData@UnitClass@@UAEXPAEJ@Z
	DD	FLAT:?TransferOwnershipFromData@UnitClass@@UAEXPAEJ@Z
	DD	FLAT:?ApplyDamage@UnitClass@@UAEHW4DamageDataType@@PAHHF@Z
	DD	FLAT:?ApplyDamage@UnitClass@@UAEHPAVFalconCampWeaponsFire@@E@Z
	DD	FLAT:?DecodeDamageData@UnitClass@@UAEHPAEPAV1@PAVFalconDeathMessage@@@Z
	DD	FLAT:?CollectWeapons@UnitClass@@UAEHPAEW4MoveType@@QAFQAEH@Z
	DD	FLAT:?GetName@UnitClass@@UAEPADPADHH@Z
	DD	FLAT:?GetFullName@UnitClass@@UAEPADPADHH@Z
	DD	FLAT:?GetDivisionName@UnitClass@@UAEPADPADHH@Z
	DD	FLAT:?GetHitChance@UnitClass@@UAEHHH@Z
	DD	FLAT:?GetAproxHitChance@UnitClass@@UAEHHH@Z
	DD	FLAT:?GetCombatStrength@UnitClass@@UAEHHH@Z
	DD	FLAT:?GetAproxCombatStrength@UnitClass@@UAEHHH@Z
	DD	FLAT:?GetWeaponRange@UnitClass@@UAEHHPAVFalconEntity@@@Z
	DD	FLAT:?GetAproxWeaponRange@UnitClass@@UAEHH@Z
	DD	FLAT:?GetDetectionRange@UnitClass@@UAEHH@Z
	DD	FLAT:?GetElectronicDetectionRange@UnitClass@@UAEHH@Z
	DD	FLAT:?CanDetect@UnitClass@@UAEHPAVFalconEntity@@@Z
	DD	FLAT:?StepRadar@CampBaseClass@@UAEHHHM@Z
	DD	FLAT:?GetNumberOfArcs@UnitClass@@UAEHXZ
	DD	FLAT:?GetArcRatio@UnitClass@@UAEMH@Z
	DD	FLAT:?GetArcRange@UnitClass@@UAEMH@Z
	DD	FLAT:?GetArcAngle@UnitClass@@UAEXHPAM0@Z
	DD	FLAT:?GetMissilesFlying@CampBaseClass@@UAEHXZ
	DD	FLAT:?ResetPlayerStatus@UnitClass@@UAEHXZ
	DD	FLAT:?GetComponentLocation@UnitClass@@UAEXPAF0H@Z
	DD	FLAT:?GetComponentAltitude@UnitClass@@UAEHH@Z
	DD	FLAT:?CanShootWeapon@UnitClass@@UAEHH@Z
	DD	FLAT:?GetDeaggregationPoint@UnitClass@@UAEHHPAPAVCampBaseClass@@@Z
	DD	FLAT:?GetUnitDeaggregationData@UnitClass@@UAEPAVUnitDeaggregationData@@XZ
	DD	FLAT:?ShouldDeaggregate@UnitClass@@UAEHXZ
	DD	FLAT:?ClearDeaggregationData@UnitClass@@UAEXXZ
	DD	FLAT:?Reaction@PackageClass@@UAEHPAVCampBaseClass@@HM@Z
	DD	FLAT:?MoveUnit@PackageClass@@UAEHK@Z
	DD	FLAT:?DoCombat@UnitClass@@UAEHXZ
	DD	FLAT:?ChooseTactic@PackageClass@@UAEHXZ
	DD	FLAT:?CheckTactic@PackageClass@@UAEHH@Z
	DD	FLAT:?Father@PackageClass@@UBEHXZ
	DD	FLAT:?Real@PackageClass@@UAEHXZ
	DD	FLAT:?AdjustForSupply@UnitClass@@UAEMXZ
	DD	FLAT:?GetUnitSpeed@AirUnitClass@@UBEHXZ
	DD	FLAT:?DetectOnMove@UnitClass@@UAEHXZ
	DD	FLAT:?ChooseTarget@UnitClass@@UAEHXZ
	DD	FLAT:?MaxUpdateTime@AirUnitClass@@UBEKXZ
	DD	FLAT:?CombatTime@UnitClass@@UAEKXZ
	DD	FLAT:?GetUnitSupplyNeed@UnitClass@@UAEHH@Z
	DD	FLAT:?GetUnitFuelNeed@UnitClass@@UAEHH@Z
	DD	FLAT:?SupplyUnit@UnitClass@@UAEXHH@Z
	DD	FLAT:?GetVehicleDeagData@UnitClass@@UAEHPAVSimInitDataClass@@H@Z
	DD	FLAT:?IsDead@UnitClass@@UBEHXZ
	DD	FLAT:?SimSetLocation@UnitClass@@UAEXMMM@Z
	DD	FLAT:?SimSetOrientation@UnitClass@@UAEXMMM@Z
	DD	FLAT:?GetRealPosition@UnitClass@@UAEXPAM00@Z
	DD	FLAT:?GetBestVehicleWeapon@UnitClass@@UAEHHPAEW4MoveType@@HPAH@Z
	DD	FLAT:?GetVehicleHitChance@UnitClass@@UAEHHW4MoveType@@HH@Z
	DD	FLAT:?GetVehicleCombatStrength@UnitClass@@UAEHHW4MoveType@@H@Z
	DD	FLAT:?GetVehicleRange@UnitClass@@UAEHHHPAVFalconEntity@@@Z
	DD	FLAT:?GetUnitWeaponId@UnitClass@@UAEHHH@Z
	DD	FLAT:?GetUnitWeaponCount@UnitClass@@UAEHHH@Z
	DD	FLAT:?SetUnitLastMove@UnitClass@@UAEXK@Z
	DD	FLAT:?SetCombatTime@UnitClass@@UAEXK@Z
	DD	FLAT:?SetBurntFuel@UnitClass@@UAEXJ@Z
	DD	FLAT:?SetUnitMission@UnitClass@@UAEXE@Z
	DD	FLAT:?SetUnitRole@UnitClass@@UAEXE@Z
	DD	FLAT:?SetUnitPriority@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitMissionID@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitMissionTarget@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitTOT@UnitClass@@UAEXK@Z
	DD	FLAT:?SetUnitSquadron@UnitClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?SetUnitAirbase@UnitClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?SetLoadout@UnitClass@@UAEXPAULoadoutStruct@@H@Z
	DD	FLAT:?GetNumberOfLoadouts@UnitClass@@UAEHXZ
	DD	FLAT:?GetMoveTime@UnitClass@@UAEKXZ
	DD	FLAT:?GetCombatTime@UnitClass@@UAEKXZ
	DD	FLAT:?GetAirTargetID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetAirTarget@UnitClass@@UAEPAVFalconEntity@@XZ
	DD	FLAT:?GetBurntFuel@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitMission@UnitClass@@UAE?AW4MissionTypeEnum@@XZ
	DD	FLAT:?GetUnitNormalRole@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitCurrentRole@UnitClass@@UBEHXZ
	DD	FLAT:?GetUnitPriority@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitMissionTarget@UnitClass@@UAEPAVCampBaseClass@@XZ
	DD	FLAT:?GetUnitMissionTargetID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetUnitMissionID@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitTOT@UnitClass@@UAEKXZ
	DD	FLAT:?GetUnitSquadron@UnitClass@@UAEPAV1@XZ
	DD	FLAT:?GetUnitSquadronID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetUnitAirbase@UnitClass@@UAEPAVCampBaseClass@@XZ
	DD	FLAT:?GetUnitAirbaseID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?LoadWeapons@UnitClass@@UAEHPAXPAEW4MoveType@@HHH@Z
	DD	FLAT:?DumpWeapons@UnitClass@@UAEHXZ
	DD	FLAT:?ETA@UnitClass@@UAEKXZ
	DD	FLAT:?GetKnownEmitters@UnitClass@@UAEPAVFalconPrivateList@@XZ
	DD	FLAT:?BuildMission@UnitClass@@UAEHXZ
	DD	FLAT:?BuildMission@UnitClass@@UAEHPAVMissionRequestClass@@@Z
	DD	FLAT:?IncrementTime@UnitClass@@UAEXK@Z
	DD	FLAT:?UseFuel@UnitClass@@UAEXJ@Z
	DD	FLAT:?SetUnitSpecialty@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitSupply@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitMorale@UnitClass@@UAEXH@Z
	DD	FLAT:?SetSquadronFuel@UnitClass@@UAEXJ@Z
	DD	FLAT:?SetUnitStores@UnitClass@@UAEXHE@Z
	DD	FLAT:?SetLastResupply@UnitClass@@UAEXH@Z
	DD	FLAT:?SetLastResupplyTime@UnitClass@@UAEXK@Z
	DD	FLAT:?GetUnitSpecialty@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitSupply@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitMorale@UnitClass@@UAEHXZ
	DD	FLAT:?GetSquadronFuel@UnitClass@@UAEJXZ
	DD	FLAT:?GetUnitStores@UnitClass@@UAEEH@Z
	DD	FLAT:?GetLastResupplyTime@UnitClass@@UAEKXZ
	DD	FLAT:?GetLastResupply@UnitClass@@UAEHXZ
	DD	FLAT:?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z
	DD	FLAT:?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z
	DD	FLAT:?SetUnitAssemblyPoint@PackageClass@@UAEXHFF@Z
	DD	FLAT:?GetUnitAssemblyPoint@PackageClass@@UAEXHPAF0@Z
	DD	FLAT:?SetUnitPrimaryObj@UnitClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?SetUnitSecondaryObj@UnitClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?SetUnitObjective@UnitClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?SetUnitOrders@UnitClass@@UAEXHVVU_ID@@@Z
	DD	FLAT:?SetUnitOrders@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitFatigue@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitMode@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitPosition@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitDivision@UnitClass@@UAEXH@Z
	DD	FLAT:?SetUnitHeading@UnitClass@@UAEXH@Z
	DD	FLAT:?GetUnitPrimaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ
	DD	FLAT:?GetUnitSecondaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ
	DD	FLAT:?GetUnitObjective@UnitClass@@UAEPAVObjectiveClass@@XZ
	DD	FLAT:?GetUnitPrimaryObjID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetUnitSecondaryObjID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetUnitObjectiveID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?GetUnitOrders@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitFatigue@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitElement@PackageClass@@UAEPAVUnitClass@@H@Z
	DD	FLAT:?GetUnitElement@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitMode@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitPosition@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitDivision@UnitClass@@UAEHXZ
	DD	FLAT:?GetUnitHeading@UnitClass@@UAEHXZ
	DD	FLAT:?SetUnitNextMove@UnitClass@@UAEXXZ
	DD	FLAT:?ClearUnitPath@UnitClass@@UAEXXZ
	DD	FLAT:?GetNextMoveDirection@UnitClass@@UAEHXZ
	DD	FLAT:?SetUnitCurrentDestination@UnitClass@@UAEXFF@Z
	DD	FLAT:?GetUnitCurrentDestination@UnitClass@@UAEXPAF0@Z
	DD	FLAT:?GetObjMovementType@UnitClass@@UAE?AW4MoveType@@PAVObjectiveClass@@H@Z
	DD	FLAT:?CheckForSurrender@UnitClass@@UAEHXZ
	DD	FLAT:?RallyUnit@UnitClass@@UAEHH@Z
	DD	FLAT:?GetUnitParent@UnitClass@@UBEPAV1@XZ
	DD	FLAT:?GetUnitParentID@UnitClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?SetUnitParent@UnitClass@@UAEXPAV1@@Z
	DD	FLAT:?GetFirstUnitElement@UnitClass@@UBEPAV1@XZ
	DD	FLAT:?GetNextUnitElement@UnitClass@@UBEPAV1@XZ
	DD	FLAT:?GetUnitElementByID@PackageClass@@UAEPAVUnitClass@@H@Z
	DD	FLAT:?GetPrevUnitElement@UnitClass@@UAEPAV1@PAV1@@Z
	DD	FLAT:?AddUnitChild@PackageClass@@UAEXPAVUnitClass@@@Z
	DD	FLAT:?DisposeChildren@PackageClass@@UAEXXZ
	DD	FLAT:?RemoveChild@PackageClass@@UAEXVVU_ID@@@Z
	DD	FLAT:?ReorganizeUnit@UnitClass@@UAEXXZ
	DD	FLAT:?UpdateParentStatistics@UnitClass@@UAEHXZ
	DD	FLAT:?IsHelicopter@AirUnitClass@@UBEHXZ
	DD	FLAT:?GetFirstUnitElement@PackageClass@@UAEPAVUnitClass@@XZ
	DD	FLAT:?GetNextUnitElement@PackageClass@@UAEPAVUnitClass@@XZ
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z$0
__unwindtable$?NewPackage@@YAPAVPackageClass@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewPackage@@YAPAVPackageClass@@H@Z$0
__unwindtable$?CheckNeedRequests@PackageClass@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckNeedRequests@PackageClass@@QAEHXZ$0
__unwindtable$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z$0
__unwindtable$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z$0
__unwindtable$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z$1
__unwindtable$??1PackageClass@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PackageClass@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1PackageClass@@UAE@XZ$1
__unwindtable$??0PackageClass@@QAE@G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@G@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@G@Z$1
__unwindtable$??0PackageClass@@QAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$3
__ehfuncinfo$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?NewPackage@@YAPAVPackageClass@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewPackage@@YAPAVPackageClass@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CheckNeedRequests@PackageClass@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckNeedRequests@PackageClass@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1PackageClass@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1PackageClass@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0PackageClass@@QAE@PAPAEPAJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0PackageClass@@QAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0PackageClass@@QAE@G@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0PackageClass@@QAE@G@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_oldp$ = -4						; size = 4
_flight$ = 8						; size = 4
_pack$ = 12						; size = 4
?TransferFlight@@YAXPAVFlightClass@@PAVPackageClass@@@Z PROC ; TransferFlight

; 1664 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1665 : 	Package		oldp;
; 1666 : 
; 1667 : 	oldp = (Package)flight->GetUnitParent();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+1008]
	call	eax
	mov	DWORD PTR _oldp$[ebp], eax

; 1668 : 	if (oldp)

	cmp	DWORD PTR _oldp$[ebp], 0
	je	SHORT $LN1@TransferFl

; 1669 : 		oldp->RemoveChild(flight->Id());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _oldp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _oldp$[ebp]
	mov	eax, DWORD PTR [edx+980]
	call	eax
$LN1@TransferFl:

; 1670 : 	flight->SetUnitParent(pack);

	mov	ecx, DWORD PTR _pack$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+952]
	call	edx

; 1671 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TransferFlight@@YAXPAVFlightClass@@PAVPackageClass@@@Z ENDP ; TransferFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_list$ = -48						; size = 24
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_ts$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_mis$ = 8						; size = 4
?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z PROC	; CallInOCAStrikes

; 1853 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1854 : 	FalconPrivateList	list(&CampFilter);

	push	OFFSET ?CampFilter@@3VCampBaseFilter@@A	; CampFilter
	lea	ecx, DWORD PTR _list$[ebp]
	call	??0FalconPrivateList@@QAE@PAVVuFilter@@@Z ; FalconPrivateList::FalconPrivateList
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1855 : 	short	ts = 0;

	xor	eax, eax
	mov	WORD PTR _ts$[ebp], ax

; 1856 : 
; 1857 : 	if (mis->mission == AMIS_SEADSTRIKE)			// Don't generate recursive SEAD missions

	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	cmp	edx, 11					; 0000000bH
	jne	SHORT $LN1@CallInOCAS

; 1858 : 		return 0;

	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _list$[ebp]
	call	??1FalconPrivateList@@UAE@XZ		; FalconPrivateList::~FalconPrivateList
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN2@CallInOCAS
$LN1@CallInOCAS:

; 1859 : 
; 1860 : 	// Trigger OCA missions
; 1861 : 	CollectThreatsFast (mis->tx,mis->ty,1,mis->who,FIND_NOAIR|FIND_NOMOVERS|FIND_FINDUNSPOTTED|FIND_NODETECT,&list);

	lea	eax, DWORD PTR _list$[ebp]
	push	eax
	push	156					; 0000009cH
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+32]
	push	edx
	push	1
	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, WORD PTR [eax+42]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+40]
	push	eax
	call	?CollectThreatsFast@@YAHFFHEHPAVFalconPrivateList@@@Z ; CollectThreatsFast
	add	esp, 24					; 00000018H

; 1862 : 	CollectThreatsFast (mis->tx,mis->ty,99,mis->who,FIND_NOAIR|FIND_NOMOVERS|FIND_FINDUNSPOTTED|FIND_NODETECT,&list);

	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	push	156					; 0000009cH
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+32]
	push	eax
	push	99					; 00000063H
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+42]
	push	edx
	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, WORD PTR [eax+40]
	push	ecx
	call	?CollectThreatsFast@@YAHFFHEHPAVFalconPrivateList@@@Z ; CollectThreatsFast
	add	esp, 24					; 00000018H

; 1863 : 	TargetThreats (mis->who, mis->priority, &list, LowAir, mis->tot, AMIS_ADDOCASTRIKE, &ts);

	lea	edx, DWORD PTR _ts$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR _mis$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	push	4
	lea	edx, DWORD PTR _list$[ebp]
	push	edx
	mov	eax, DWORD PTR _mis$[ebp]
	movsx	ecx, WORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+32]
	push	eax
	call	?TargetThreats@@YAHEHPAVFalconPrivateList@@W4MoveType@@KJPAF@Z ; TargetThreats
	add	esp, 28					; 0000001cH

; 1864 : 	return ts;

	movsx	ecx, WORD PTR _ts$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _list$[ebp]
	call	??1FalconPrivateList@@UAE@XZ		; FalconPrivateList::~FalconPrivateList
	mov	eax, DWORD PTR $T2[ebp]
$LN2@CallInOCAS:

; 1865 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z$0:
	lea	ecx, DWORD PTR _list$[ebp]
	jmp	??1FalconPrivateList@@UAE@XZ		; FalconPrivateList::~FalconPrivateList
__ehhandler$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z ENDP	; CallInOCAStrikes
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_d1$1 = -56						; size = 4
_d2$2 = -52						; size = 4
tv250 = -48						; size = 4
_d3$3 = -44						; size = 4
_nw$4 = -40						; size = 4
_assem$ = -36						; size = 4
_pw$5 = -32						; size = 4
_w$ = -28						; size = 4
_ny$6 = -24						; size = 2
_nx$7 = -20						; size = 2
_py$8 = -16						; size = 2
_px$9 = -12						; size = 2
_y$10 = -8						; size = 2
_x$11 = -4						; size = 2
_flight$ = 8						; size = 4
_flights$ = 12						; size = 4
?FinalizeFlight@@YAXPAVUnitClass@@H@Z PROC		; FinalizeFlight

; 1759 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H

; 1760 : 	int			assem;
; 1761 : 	WayPoint	w;
; 1762 : 
; 1763 : #ifdef KEV_ADEBUG
; 1764 : 	Unit	pack;
; 1765 : 	pack = flight->GetUnitParent();
; 1766 : 	MonoPrint("Finalizing flight %d, package %d\n",flight->GetCampID(),pack->GetCampID());
; 1767 : #endif
; 1768 : 
; 1769 : #if 0
; 1770 : #ifdef DEBUG
; 1771 : 	if (flight->GetTotalVehicles()<= PILOTS_PER_FLIGHT) // && (MissionData[mis->mission].flags & AMIS_DONT_USE_AC))
; 1772 : 	{
; 1773 : 		// Verify a few things are correct for this flight
; 1774 : 		int	acp,acr = flight->GetTotalVehicles();
; 1775 : 		acp = 0;
; 1776 : 		for (int i=0; i<PILOTS_PER_FLIGHT; i++)
; 1777 : 		{
; 1778 : 			if (((FlightClass*)flight)->plane_stats[i] == AIRCRAFT_AVAILABLE)
; 1779 : 				acp++;
; 1780 : 		}
; 1781 : 		ShiAssert(acp == acr);
; 1782 : 	}
; 1783 : #endif
; 1784 : #endif
; 1785 : 
; 1786 : 	if (flights > 1 && !(MissionData[flight->GetUnitMission()].flags & AMIS_DONT_COORD) && !(MissionData[flight->GetUnitMission()].flags & AMIS_TARGET_ONLY))

	cmp	DWORD PTR _flights$[ebp], 1
	jle	SHORT $LN13@FinalizeFl
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	shl	eax, 5
	mov	ecx, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+28]
	and	ecx, 1048576				; 00100000H
	jne	SHORT $LN13@FinalizeFl
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+664]
	call	edx
	shl	eax, 5
	mov	eax, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+28]
	and	eax, 262144				; 00040000H
	jne	SHORT $LN13@FinalizeFl

; 1787 : 		assem = 1;

	mov	DWORD PTR _assem$[ebp], 1

; 1788 : 	else

	jmp	SHORT $LN12@FinalizeFl
$LN13@FinalizeFl:

; 1789 : 		assem = 0;

	mov	DWORD PTR _assem$[ebp], 0
$LN12@FinalizeFl:

; 1790 : 	w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN11@FinalizeFl:

; 1791 : 	while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	$LN10@FinalizeFl

; 1792 : 	{
; 1793 : 		if (w->GetWPFlags() & WPF_BREAKPOINT && !assem)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 4
	je	SHORT $LN9@FinalizeFl
	cmp	DWORD PTR _assem$[ebp], 0
	jne	SHORT $LN9@FinalizeFl

; 1794 : 			w->SetWPFlags(w->GetWPFlags() ^ WPF_BREAKPOINT);		// Clear our flag

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	xor	eax, 4
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPFlags@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPFlags
$LN9@FinalizeFl:

; 1795 : 		if (w->GetWPFlags() & WPF_ASSEMBLE && !assem)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 2
	je	SHORT $LN8@FinalizeFl
	cmp	DWORD PTR _assem$[ebp], 0
	jne	SHORT $LN8@FinalizeFl

; 1796 : 		{
; 1797 : 			w->SetWPAction(WP_NOTHING);								// Clear our action

	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPAction@WayPointClass@@QAEXH@Z	; WayPointClass::SetWPAction

; 1798 : 			w->SetWPRouteAction(MissionData[flight->GetUnitMission()].routewp);

	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+6]
	push	ecx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPRouteAction@WayPointClass@@QAEXH@Z ; WayPointClass::SetWPRouteAction

; 1799 : 			w->SetWPFlags(w->GetWPFlags() ^ WPF_ASSEMBLE);			// Clear our flag

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	xor	eax, 2
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	call	?SetWPFlags@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPFlags
$LN8@FinalizeFl:

; 1800 : 		}
; 1801 : 		if (w->GetWPAction() == WP_NOTHING && !(w->GetWPFlags() & 0x4FF))

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	test	eax, eax
	jne	$LN3@FinalizeFl
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1279				; 000004ffH
	jne	$LN3@FinalizeFl

; 1802 : 		{
; 1803 : 			// This is an unused waypoint (Nothing action and no flags set)
; 1804 : 			// Check if in line or co-existant with other wps, if so, remove
; 1805 : 			// KCK NOTE: I'll leave it if it'll cut a large leg in half.
; 1806 : 			WayPoint	pw,nw;
; 1807 : 			GridIndex	x,y,px,py,nx,ny;
; 1808 : 			float		d1,d2,d3;
; 1809 : 
; 1810 : 			pw = w->GetPrevWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetPrevWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetPrevWP
	mov	DWORD PTR _pw$5[ebp], eax

; 1811 : 			nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$4[ebp], eax

; 1812 : 			if (pw && nw)

	cmp	DWORD PTR _pw$5[ebp], 0
	je	$LN3@FinalizeFl
	cmp	DWORD PTR _nw$4[ebp], 0
	je	$LN3@FinalizeFl

; 1813 : 			{
; 1814 : 				w->GetWPLocation(&x,&y);

	lea	edx, DWORD PTR _y$10[ebp]
	push	edx
	lea	eax, DWORD PTR _x$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1815 : 				pw->GetWPLocation(&px,&py);

	lea	ecx, DWORD PTR _py$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _px$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _pw$5[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1816 : 				nw->GetWPLocation(&nx,&ny);

	lea	eax, DWORD PTR _ny$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _nx$7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _nw$4[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1817 : 				// Check if waypoint is inline with other waypoints
; 1818 : 				if (Distance(px,py,nx,ny) < 50)

	movzx	edx, WORD PTR _ny$6[ebp]
	push	edx
	movzx	eax, WORD PTR _nx$7[ebp]
	push	eax
	movzx	ecx, WORD PTR _py$8[ebp]
	push	ecx
	movzx	edx, WORD PTR _px$9[ebp]
	push	edx
	call	?Distance@@YAMFFFF@Z			; Distance
	add	esp, 16					; 00000010H
	fstp	DWORD PTR tv250[ebp]
	movss	xmm0, DWORD PTR __real@42480000
	comiss	xmm0, DWORD PTR tv250[ebp]
	jbe	SHORT $LN4@FinalizeFl

; 1819 : 				{
; 1820 : 					d1 = AngleTo(px,py,x,y);

	movzx	eax, WORD PTR _y$10[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$11[ebp]
	push	ecx
	movzx	edx, WORD PTR _py$8[ebp]
	push	edx
	movzx	eax, WORD PTR _px$9[ebp]
	push	eax
	call	?AngleTo@@YAMFFFF@Z			; AngleTo
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _d1$1[ebp]

; 1821 : 					d2 = AngleTo(x,y,nx,ny);

	movzx	ecx, WORD PTR _ny$6[ebp]
	push	ecx
	movzx	edx, WORD PTR _nx$7[ebp]
	push	edx
	movzx	eax, WORD PTR _y$10[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$11[ebp]
	push	ecx
	call	?AngleTo@@YAMFFFF@Z			; AngleTo
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _d2$2[ebp]

; 1822 : 					d3 = d2 - d1;

	movss	xmm0, DWORD PTR _d2$2[ebp]
	subss	xmm0, DWORD PTR _d1$1[ebp]
	movss	DWORD PTR _d3$3[ebp], xmm0

; 1823 : 					if (d3 < 0.1F && d3 > -0.1F)

	movss	xmm0, DWORD PTR __real@3dcccccd
	comiss	xmm0, DWORD PTR _d3$3[ebp]
	jbe	SHORT $LN4@FinalizeFl
	movss	xmm0, DWORD PTR _d3$3[ebp]
	comiss	xmm0, DWORD PTR __real@bdcccccd
	jbe	SHORT $LN4@FinalizeFl

; 1824 : 					{
; 1825 : 						w->DeleteWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?DeleteWP@WayPointClass@@QAEXXZ		; WayPointClass::DeleteWP

; 1826 : 						w = pw;

	mov	edx, DWORD PTR _pw$5[ebp]
	mov	DWORD PTR _w$[ebp], edx
$LN4@FinalizeFl:

; 1827 : 					}
; 1828 : 				}
; 1829 : 				// Check if waypoint is co-located with adjacent waypoints
; 1830 : 				if (w != pw && ((px == x && py == y) || (x == nx && y == ny)))

	mov	eax, DWORD PTR _w$[ebp]
	cmp	eax, DWORD PTR _pw$5[ebp]
	je	SHORT $LN3@FinalizeFl
	movsx	ecx, WORD PTR _px$9[ebp]
	movsx	edx, WORD PTR _x$11[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@FinalizeFl
	movsx	eax, WORD PTR _py$8[ebp]
	movsx	ecx, WORD PTR _y$10[ebp]
	cmp	eax, ecx
	je	SHORT $LN2@FinalizeFl
$LN1@FinalizeFl:
	movsx	edx, WORD PTR _x$11[ebp]
	movsx	eax, WORD PTR _nx$7[ebp]
	cmp	edx, eax
	jne	SHORT $LN3@FinalizeFl
	movsx	ecx, WORD PTR _y$10[ebp]
	movsx	edx, WORD PTR _ny$6[ebp]
	cmp	ecx, edx
	jne	SHORT $LN3@FinalizeFl
$LN2@FinalizeFl:

; 1831 : 				{
; 1832 : 					w->DeleteWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?DeleteWP@WayPointClass@@QAEXXZ		; WayPointClass::DeleteWP

; 1833 : 					w = pw;

	mov	eax, DWORD PTR _pw$5[ebp]
	mov	DWORD PTR _w$[ebp], eax
$LN3@FinalizeFl:

; 1834 : 				}
; 1835 : 			}
; 1836 : 		}
; 1837 : 		w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 1838 : 	}

	jmp	$LN11@FinalizeFl
$LN10@FinalizeFl:

; 1839 : 	flight->SetFinal(1);

	push	1
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 1840 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FinalizeFlight@@YAXPAVUnitClass@@H@Z ENDP		; FinalizeFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
tv192 = -36						; size = 4
tv145 = -32						; size = 4
_squadron$ = -28					; size = 4
_flight$ = -24						; size = 4
_x$ = -20						; size = 2
_y$ = -16						; size = 2
_tid$ = -12						; size = 2
_bx$ = -8						; size = 2
_by$ = -4						; size = 2
_mis$ = 8						; size = 4
_pack$ = 12						; size = 4
?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z PROC ; AttachFlight

; 1675 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi

; 1676 : 	Squadron	squadron;
; 1677 : 	Flight		flight;
; 1678 : 	short		tid;
; 1679 : 	GridIndex	bx,by,x,y;
; 1680 : 
; 1681 : 	if (!TeamInfo[mis->who]->atm)

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	cmp	DWORD PTR [edx+876], 0
	jne	SHORT $LN11@AttachFlig

; 1682 : 	{
; 1683 : #ifdef KEV_DEBUG
; 1684 : 		MonoPrint("Error, I don't own the ATM!\n");
; 1685 : #endif
; 1686 : 		return NULL;

	xor	eax, eax
	jmp	$LN12@AttachFlig
$LN11@AttachFlig:

; 1687 : 	}
; 1688 : 	if (!pack)

	cmp	DWORD PTR _pack$[ebp], 0
	jne	SHORT $LN10@AttachFlig

; 1689 : 		return NULL;

	xor	eax, eax
	jmp	$LN12@AttachFlig
$LN10@AttachFlig:

; 1690 : 	pack->GetLocation(&bx,&by);

	lea	eax, DWORD PTR _by$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pack$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1691 : 	if (mis->flags & AMIS_IMMEDIATE)

	mov	edx, DWORD PTR _mis$[ebp]
	mov	eax, DWORD PTR [edx+44]
	and	eax, 65536				; 00010000H
	je	$LN9@AttachFlig

; 1692 : 	{
; 1693 : 		flight = TeamInfo[mis->who]->atm->FindBestAirFlight(mis);		// We steal the aircraft from a current flight (all the aircraft)

	mov	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+32]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	mov	ecx, DWORD PTR [ecx+876]
	call	?FindBestAirFlight@AirTaskingManagerClass@@QAEPAVFlightClass@@PAVMissionRequestClass@@@Z ; AirTaskingManagerClass::FindBestAirFlight
	mov	DWORD PTR _flight$[ebp], eax

; 1694 : 		if (!flight)

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN8@AttachFlig

; 1695 : 			return NULL;

	xor	eax, eax
	jmp	$LN12@AttachFlig
$LN8@AttachFlig:

; 1696 : 		mis->aircraft = flight->GetTotalVehicles();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	edx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [edx+61], al

; 1697 : 		// Ok, this package is a go - add it locally
; 1698 : 		if (!PackInserted){

	cmp	DWORD PTR ?PackInserted@@3HA, 0		; PackInserted
	jne	SHORT $LN7@AttachFlig

; 1699 : 			// sfr: only say its inserted if its really inserted
; 1700 : 			pack->SetSendCreate(VuEntity::VU_SC_DONT_SEND);

	push	0
	mov	ecx, DWORD PTR _pack$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 1701 : 			PackInserted = (vuDatabase->/*Silent*/Insert(pack) == VU_SUCCESS);

	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert
	cmp	eax, 1
	jne	SHORT $LN14@AttachFlig
	mov	DWORD PTR tv145[ebp], 1
	jmp	SHORT $LN15@AttachFlig
$LN14@AttachFlig:
	mov	DWORD PTR tv145[ebp], 0
$LN15@AttachFlig:
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR ?PackInserted@@3HA, ecx	; PackInserted
$LN7@AttachFlig:

; 1702 : 		}
; 1703 : 		// Transfer the flight to the new parent
; 1704 : 		TransferFlight((Flight)flight,pack);

	mov	edx, DWORD PTR _pack$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?TransferFlight@@YAXPAVFlightClass@@PAVPackageClass@@@Z ; TransferFlight
	add	esp, 8

; 1705 : 	}
; 1706 : 	else

	jmp	$LN6@AttachFlig
$LN9@AttachFlig:

; 1707 : 	{
; 1708 : 		squadron = TeamInfo[mis->who]->atm->FindBestAir(mis, bx, by);

	movzx	ecx, WORD PTR _by$[ebp]
	push	ecx
	movzx	edx, WORD PTR _bx$[ebp]
	push	edx
	mov	eax, DWORD PTR _mis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+32]
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	mov	ecx, DWORD PTR [eax+876]
	call	?FindBestAir@AirTaskingManagerClass@@QAEPAVSquadronClass@@PAVMissionRequestClass@@FF@Z ; AirTaskingManagerClass::FindBestAir
	mov	DWORD PTR _squadron$[ebp], eax

; 1709 : 		if (!squadron)

	cmp	DWORD PTR _squadron$[ebp], 0
	jne	SHORT $LN5@AttachFlig

; 1710 : 			return NULL;

	xor	eax, eax
	jmp	$LN12@AttachFlig
$LN5@AttachFlig:

; 1711 : 		if (!bx && !by)												// Call this our home base	for this package set

	movsx	ecx, WORD PTR _bx$[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@AttachFlig
	movsx	edx, WORD PTR _by$[ebp]
	test	edx, edx
	jne	SHORT $LN4@AttachFlig

; 1712 : 		{
; 1713 : 			squadron->GetLocation(&bx,&by);

	lea	eax, DWORD PTR _by$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1714 : 			pack->SetLocation(bx,by);

	movzx	edx, WORD PTR _by$[ebp]
	push	edx
	movzx	eax, WORD PTR _bx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pack$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation
$LN4@AttachFlig:

; 1715 : 		}
; 1716 : 		// Ok, this package is a go - add it locally
; 1717 : 		if (!PackInserted){

	cmp	DWORD PTR ?PackInserted@@3HA, 0		; PackInserted
	jne	SHORT $LN3@AttachFlig

; 1718 : 			// sfr: only say its inserted if its really inserted
; 1719 : 			pack->SetSendCreate(VuEntity::VU_SC_DONT_SEND);

	push	0
	mov	ecx, DWORD PTR _pack$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 1720 : 			PackInserted = (vuDatabase->/*Silent*/Insert(pack) == VU_SUCCESS);

	mov	ecx, DWORD PTR _pack$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert
	cmp	eax, 1
	jne	SHORT $LN16@AttachFlig
	mov	DWORD PTR tv192[ebp], 1
	jmp	SHORT $LN17@AttachFlig
$LN16@AttachFlig:
	mov	DWORD PTR tv192[ebp], 0
$LN17@AttachFlig:
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR ?PackInserted@@3HA, edx	; PackInserted
$LN3@AttachFlig:

; 1721 : 		}
; 1722 : 		tid = GetClassID(DOMAIN_AIR,CLASS_UNIT,TYPE_FLIGHT,squadron->GetSType(),squadron->GetSPType(),0,0,0);

	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetSPType@CampBaseClass@@QBEEXZ	; CampBaseClass::GetSPType
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	ecx, al
	push	ecx
	push	1
	push	6
	push	2
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	WORD PTR _tid$[ebp], ax

; 1723 : #ifdef DEBUG
; 1724 : 		ShiAssert (tid);
; 1725 : 		if (!tid)
; 1726 : 			return NULL;
; 1727 : #endif
; 1728 : 		tid += VU_LAST_ENTITY_TYPE;

	movsx	edx, WORD PTR _tid$[ebp]
	add	edx, 100				; 00000064H
	mov	WORD PTR _tid$[ebp], dx

; 1729 : 		flight = NewFlight(tid,pack,squadron);

	mov	eax, DWORD PTR _squadron$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pack$[ebp]
	push	ecx
	movsx	edx, WORD PTR _tid$[ebp]
	push	edx
	call	?NewFlight@@YAPAVFlightClass@@HPAVUnitClass@@0@Z ; NewFlight
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _flight$[ebp], eax

; 1730 : 		if (!flight)

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN2@AttachFlig

; 1731 : 			return NULL;

	xor	eax, eax
	jmp	$LN12@AttachFlig
$LN2@AttachFlig:

; 1732 : 		flight->SetOwner(squadron->GetOwner());

	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+320]
	call	eax

; 1733 : 		squadron->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1734 : 		flight->SetLocation(x,y);

	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 1735 : 		pack->GetUnitDestination(&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pack$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1736 : 		flight->SetUnitDestination(x,y);

	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination

; 1737 : 		flight->SetFinal(0);

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 1738 : 		// If we've got a bomber assigned to a lead strike role, switch the mission type to strat
; 1739 : 		// bomb so that everything will be planned correctly
; 1740 : 		if (!pack->GetFlights() &&
; 1741 : 			MissionData[mis->mission].skill == ARO_S &&
; 1742 : 			squadron->GetRating(ARO_SB) > squadron->GetRating(ARO_S) &&
; 1743 : 			// RV - Biker - Don't convert all to STRATBOMB
; 1744 : 			rand()%100 > 25)

	mov	ecx, DWORD PTR _pack$[ebp]
	call	?GetFlights@PackageClass@@QAEEXZ	; PackageClass::GetFlights
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@AttachFlig
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	shl	edx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+2]
	cmp	eax, 3
	jne	SHORT $LN6@AttachFlig
	push	5
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetRating@SquadronClass@@QAEEH@Z	; SquadronClass::GetRating
	movzx	esi, al
	push	3
	mov	ecx, DWORD PTR _squadron$[ebp]
	call	?GetRating@SquadronClass@@QAEEH@Z	; SquadronClass::GetRating
	movzx	ecx, al
	cmp	esi, ecx
	jle	SHORT $LN6@AttachFlig
	call	_rand
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	cmp	edx, 25					; 00000019H
	jle	SHORT $LN6@AttachFlig

; 1745 : 		{
; 1746 : 			mis->mission = AMIS_STRATBOMB;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [edx+60], 18			; 00000012H

; 1747 : 			pack->GetMissionRequest()->mission = AMIS_STRATBOMB;

	mov	ecx, DWORD PTR _pack$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	BYTE PTR [eax+60], 18			; 00000012H
$LN6@AttachFlig:

; 1748 : 		}
; 1749 : 	}
; 1750 : 	flight->SetUnitMissionID(pack->GetFlights());

	mov	ecx, DWORD PTR _pack$[ebp]
	call	?GetFlights@PackageClass@@QAEEXZ	; PackageClass::GetFlights
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+616]
	call	eax

; 1751 : #ifdef KEV_ADEBUG
; 1752 : 	MonoPrint("Attaching flight %d to package %d\n",flight->GetCampID(),pack->GetCampID());
; 1753 : #endif
; 1754 : 	return flight;

	mov	eax, DWORD PTR _flight$[ebp]
$LN12@AttachFlig:

; 1755 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ENDP ; AttachFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_new_package$ = -28					; size = 4
$T2 = -24						; size = 4
tv72 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
?NewPackage@@YAPAVPackageClass@@H@Z PROC		; NewPackage

; 142  : PackageClass* NewPackage (int type){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewPackage@@YAPAVPackageClass@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 143  : 	PackageClass	*new_package;
; 144  : 	/*VuEnterCriticalSection();
; 145  : 	lastVolatileId = vuAssignmentId;
; 146  : 	vuAssignmentId = lastPackageId;
; 147  : 	//	vuAssignmentId = lastLowVolitileId;
; 148  : 	vuLowWrapNumber = FIRST_LOW_VOLATILE_VU_ID_NUMBER;
; 149  : 	vuHighWrapNumber = (FIRST_LOW_VOLATILE_VU_ID_NUMBER + LAST_LOW_VOLATILE_VU_ID_NUMBER)/2;*/
; 150  : 	new_package = new PackageClass (type);

	push	476					; 000001dcH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@NewPackage
	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0PackageClass@@QAE@G@Z		; PackageClass::PackageClass
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@NewPackage
$LN3@NewPackage:
	mov	DWORD PTR tv72[ebp], 0
$LN4@NewPackage:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _new_package$[ebp], edx

; 151  : 	/*lastPackageId = vuAssignmentId;
; 152  : 	//	lastLowVolitileId = vuAssignmentId;
; 153  : 	vuAssignmentId = lastVolatileId;
; 154  : 	vuLowWrapNumber = FIRST_VOLATILE_VU_ID_NUMBER;
; 155  : 	vuHighWrapNumber = LAST_VOLATILE_VU_ID_NUMBER;
; 156  : 	VuExitCriticalSection();*/
; 157  : 	return new_package;

	mov	eax, DWORD PTR _new_package$[ebp]

; 158  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?NewPackage@@YAPAVPackageClass@@H@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?NewPackage@@YAPAVPackageClass@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NewPackage@@YAPAVPackageClass@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewPackage@@YAPAVPackageClass@@H@Z ENDP		; NewPackage
; Function compile flags: /Odtp
;	COMDAT ??_GPackageClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPackageClass@@UAEPAXI@Z PROC			; PackageClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PackageClass@@UAE@XZ			; PackageClass::~PackageClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPackageClass@@UAEPAXI@Z ENDP			; PackageClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?GetUnitAssemblyPoint@PackageClass@@UAEXHPAF0@Z PROC	; PackageClass::GetUnitAssemblyPoint
; _this$ = ecx

; 1494 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1495 : 	switch (type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN7@GetUnitAss
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN9@GetUnitAss[ecx*4]
$LN4@GetUnitAss:

; 1496 : 	{
; 1497 : 			case 0:
; 1498 : 					*x = iax;

	mov	edx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+348]
	mov	WORD PTR [edx], cx

; 1499 : 					*y = iay;

	mov	edx, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+350]
	mov	WORD PTR [edx], cx

; 1500 : 					break;

	jmp	SHORT $LN7@GetUnitAss
$LN3@GetUnitAss:

; 1501 : 			case 1:
; 1502 : 					*x = eay;

	mov	edx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+354]
	mov	WORD PTR [edx], cx

; 1503 : 					*y = eay;

	mov	edx, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+354]
	mov	WORD PTR [edx], cx

; 1504 : 					break;

	jmp	SHORT $LN7@GetUnitAss
$LN2@GetUnitAss:

; 1505 : 			case 2:
; 1506 : 					*x = bpy;

	mov	edx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+358]
	mov	WORD PTR [edx], cx

; 1507 : 					*y = bpy;

	mov	edx, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+358]
	mov	WORD PTR [edx], cx

; 1508 : 					break;

	jmp	SHORT $LN7@GetUnitAss
$LN1@GetUnitAss:

; 1509 : 			case 3:
; 1510 : 					*x = tpx;

	mov	edx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+360]
	mov	WORD PTR [edx], cx

; 1511 : 					*y = tpy;

	mov	edx, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+362]
	mov	WORD PTR [edx], cx
$LN7@GetUnitAss:

; 1512 : 					break;
; 1513 : 	}
; 1514 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN9@GetUnitAss:
	DD	$LN4@GetUnitAss
	DD	$LN3@GetUnitAss
	DD	$LN2@GetUnitAss
	DD	$LN1@GetUnitAss
?GetUnitAssemblyPoint@PackageClass@@UAEXHPAF0@Z ENDP	; PackageClass::GetUnitAssemblyPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
?SetUnitAssemblyPoint@PackageClass@@UAEXHFF@Z PROC	; PackageClass::SetUnitAssemblyPoint
; _this$ = ecx

; 1471 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1472 : 	switch (type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN7@SetUnitAss
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN9@SetUnitAss[ecx*4]
$LN4@SetUnitAss:

; 1473 : 	{
; 1474 : 			case 0:
; 1475 : 					iax = x;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR [edx+348], ax

; 1476 : 					iay = y;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _y$[ebp]
	mov	WORD PTR [ecx+350], dx

; 1477 : 					break;

	jmp	SHORT $LN7@SetUnitAss
$LN3@SetUnitAss:

; 1478 : 			case 1:
; 1479 : 					eax = x;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _x$[ebp]
	mov	WORD PTR [eax+352], cx

; 1480 : 					eay = y;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR [edx+354], ax

; 1481 : 					break;

	jmp	SHORT $LN7@SetUnitAss
$LN2@SetUnitAss:

; 1482 : 			case 2:
; 1483 : 					bpx = x;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _x$[ebp]
	mov	WORD PTR [ecx+356], dx

; 1484 : 					bpy = y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _y$[ebp]
	mov	WORD PTR [eax+358], cx

; 1485 : 					break;

	jmp	SHORT $LN7@SetUnitAss
$LN1@SetUnitAss:

; 1486 : 			case 3:
; 1487 : 					tpx = x;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR [edx+360], ax

; 1488 : 					tpy = y;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _y$[ebp]
	mov	WORD PTR [ecx+362], dx
$LN7@SetUnitAss:

; 1489 : 					break;
; 1490 : 	}
; 1491 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN9@SetUnitAss:
	DD	$LN4@SetUnitAss
	DD	$LN3@SetUnitAss
	DD	$LN2@SetUnitAss
	DD	$LN1@SetUnitAss
?SetUnitAssemblyPoint@PackageClass@@UAEXHFF@Z ENDP	; PackageClass::SetUnitAssemblyPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_e$ = -4						; size = 4
?GetMainFlight@PackageClass@@QAEPAVFlightClass@@XZ PROC	; PackageClass::GetMainFlight
; _this$ = ecx

; 1649 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1650 : 	Unit	e;
; 1651 : 
; 1652 : 	e = GetFirstUnitElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _e$[ebp], eax

; 1653 : 	if (e && e->IsFlight() && e->GetUnitMissionID() == 0)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN1@GetMainFli
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN1@GetMainFli
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+688]
	call	eax
	test	eax, eax
	jne	SHORT $LN1@GetMainFli

; 1654 : 		return (Flight)e;

	mov	eax, DWORD PTR _e$[ebp]
	jmp	SHORT $LN2@GetMainFli
$LN1@GetMainFli:

; 1655 : 	return NULL;

	xor	eax, eax
$LN2@GetMainFli:

; 1656 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMainFlight@PackageClass@@QAEPAVFlightClass@@XZ ENDP	; PackageClass::GetMainFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_e$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ PROC	; PackageClass::GetMainFlightID
; _this$ = ecx

; 1639 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1640 : 	Unit	e;
; 1641 : 
; 1642 : 	e = GetFirstUnitElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _e$[ebp], eax

; 1643 : 	if (e && e->IsFlight() && e->GetUnitMissionID() == 0)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN1@GetMainFli
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN1@GetMainFli
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+688]
	call	eax
	test	eax, eax
	jne	SHORT $LN1@GetMainFli

; 1644 : 		return e->Id();

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@GetMainFli
$LN1@GetMainFli:

; 1645 : 	return FalconNullId;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@GetMainFli:

; 1646 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ENDP	; PackageClass::GetMainFlightID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_flight$ = 8						; size = 4
?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z PROC	; PackageClass::CancelFlight
; _this$ = ecx

; 1517 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1518 : 	flight->SetDead(1);

	push	1
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetDead@UnitClass@@QAEXH@Z		; UnitClass::SetDead

; 1519 : 	RemoveChild(flight->Id());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+980]
	call	eax

; 1520 : 	flight->Remove();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Remove@CampBaseClass@@QAEHXZ		; CampBaseClass::Remove

; 1521 : 	/* sfr: flight will be removed anyway, even if not in DB, since the remove call
; 1522 : 	will ref unref it.
; 1523 : 	// JPO - another memory leak - lets assume if its not in the database then it s not been added
; 1524 : 	if(VuState() < VU_MEM_ACTIVE || flight->Remove() == VU_NO_OP)
; 1525 : 	{
; 1526 : 		// Never inserted - let vu do the deletion.
; 1527 : 		VuReferenceEntity(flight);
; 1528 : 		VuDeReferenceEntity(flight);
; 1529 : 	}
; 1530 : 	*/
; 1531 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ENDP	; PackageClass::CancelFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -116						; size = 8
_f$3 = -108						; size = 4
_target$4 = -104					; size = 4
_e$ = -100						; size = 4
_this$ = -96						; size = 4
_mis$5 = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?CheckNeedRequests@PackageClass@@QAEHXZ PROC		; PackageClass::CheckNeedRequests
; _this$ = ecx

; 584  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CheckNeedRequests@PackageClass@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 585  : 	if (Final() || Aborted())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@UnitClass@@QBEHXZ		; UnitClass::Final
	test	eax, eax
	jne	SHORT $LN20@CheckNeedR
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Aborted@UnitClass@@QBEHXZ		; UnitClass::Aborted
	test	eax, eax
	je	SHORT $LN21@CheckNeedR
$LN20@CheckNeedR:

; 586  : 		return -1;

	or	eax, -1
	jmp	$LN22@CheckNeedR
$LN21@CheckNeedR:

; 587  : 
; 588  : 	Unit			e;
; 589  : 
; 590  : 	// Check if we're waiting on planning elements
; 591  : 	if (wait_cycles)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+344]
	test	ecx, ecx
	je	SHORT $LN19@CheckNeedR

; 592  : 		wait_cycles--;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+344]
	sub	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+344], al
$LN19@CheckNeedR:

; 593  : 
; 594  : 	if (!wait_cycles || Camp_GetCurrentTime() > takeoff + (AMIS_TAKEOFF_DELAY-1) * CampaignMinutes)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+344]
	test	eax, eax
	je	SHORT $LN17@CheckNeedR
	call	?Camp_GetCurrentTime@@YAKXZ		; Camp_GetCurrentTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+364]
	add	edx, 540000				; 00083d60H
	cmp	eax, edx
	jbe	$LN18@CheckNeedR
$LN17@CheckNeedR:

; 595  : 	{
; 596  : 		// 2001-09-16 REMOVED by M.N. We don't need this anymore - is done by AddTankerWaypoints result
; 597  : 		// -> If no tanker, packageelement->KillUnit();
; 598  : 		/*	if (wait_for & AMIS_NEEDTANKER)
; 599  : 			{
; 600  : 		// Cancel package if no tanker planned
; 601  : 		wait_for = 0;
; 602  : 		KillUnit();
; 603  : 		return 0;
; 604  : 		}				*/
; 605  : 		if ((wait_for & AMIS_BARCAP) || (wait_for & AMIS_SWEEP))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+346]
	and	ecx, 1
	jne	SHORT $LN15@CheckNeedR
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+346]
	and	eax, 7
	je	SHORT $LN16@CheckNeedR
$LN15@CheckNeedR:

; 606  : 		{
; 607  : 			// if we're still waiting on these, they arn't planned yet and probably won't be. 
; 608  : 			wait_for |= AMIS_BARCAP | AMIS_SWEEP;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+346]
	or	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+346], dx

; 609  : 			wait_for ^= AMIS_BARCAP | AMIS_SWEEP;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+346]
	xor	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+346], dx
$LN16@CheckNeedR:

; 610  : 		}
; 611  : 		if ((package_flags & AMIS_ADDBDA) && (mis_request.priority > MINIMUM_BDA_PRIORITY))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 8
	je	$LN14@CheckNeedR
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+448]
	movsx	edx, WORD PTR ?MINIMUM_BDA_PRIORITY@@3FA ; MINIMUM_BDA_PRIORITY
	cmp	ecx, edx
	jle	$LN14@CheckNeedR

; 612  : 		{
; 613  : 			MissionRequestClass		mis;

	lea	ecx, DWORD PTR _mis$5[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 614  : 			Objective				target;
; 615  : 
; 616  : 			// Add BDA with any spare aircraft
; 617  : 			GetUnitDestination(&mis.tx,&mis.ty);

	lea	eax, DWORD PTR _mis$5[ebp+42]
	push	eax
	lea	ecx, DWORD PTR _mis$5[ebp+40]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 618  : 			target = GetObjectiveByXY(mis.tx,mis.ty);

	movzx	edx, WORD PTR _mis$5[ebp+42]
	push	edx
	movzx	eax, WORD PTR _mis$5[ebp+40]
	push	eax
	call	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z ; GetObjectiveByXY
	add	esp, 8
	mov	DWORD PTR _target$4[ebp], eax

; 619  : 			if (target)

	cmp	DWORD PTR _target$4[ebp], 0
	je	$LN13@CheckNeedR

; 620  : 			{
; 621  : 				mis.mission = AMIS_BDA;

	mov	BYTE PTR _mis$5[ebp+60], 30		; 0000001eH

; 622  : 				mis.who = GetTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _mis$5[ebp+32], al

; 623  : 				mis.vs = target->GetTeam();

	mov	ecx, DWORD PTR _target$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _target$4[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _mis$5[ebp+33], al

; 624  : 				mis.targetID = target->Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _target$4[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _mis$5[ebp+8], edx
	mov	DWORD PTR _mis$5[ebp+12], eax

; 625  : 				mis.target_num = 255;

	mov	ecx, 255				; 000000ffH
	mov	WORD PTR _mis$5[ebp+50], cx

; 626  : 				mis.aircraft = MissionData[mis.mission].str;

	movzx	edx, BYTE PTR _mis$5[ebp+60]
	shl	edx, 5
	mov	al, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+18]
	mov	BYTE PTR _mis$5[ebp+61], al

; 627  : 				mis.tot = mis_request.tot + (CampaignTime)(MissionData[mis.mission].separation)*CampaignSeconds;

	movzx	ecx, BYTE PTR _mis$5[ebp+60]
	shl	ecx, 5
	movsx	edx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[ecx+14]
	imul	edx, 1000				; 000003e8H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+428]
	mov	DWORD PTR _mis$5[ebp+36], edx

; 628  : 				mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$5[ebp+58], 3

; 629  : 				mis.roe_check = ROE_AIR_ENGAGE;

	mov	BYTE PTR _mis$5[ebp+63], 4

; 630  : 				mis.caps = caps | MissionData[mis.mission].caps;

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+378]
	movzx	eax, BYTE PTR _mis$5[ebp+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+24]
	or	edx, ecx
	mov	WORD PTR _mis$5[ebp+48], dx

; 631  : 				mis.speed = mis_request.speed;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+444]
	mov	WORD PTR _mis$5[ebp+52], ax

; 632  : 				mis.priority = GetPriority(&mis);

	lea	ecx, DWORD PTR _mis$5[ebp]
	push	ecx
	call	?GetPriority@@YAHPAVMissionRequestClass@@@Z ; GetPriority
	add	esp, 4
	mov	WORD PTR _mis$5[ebp+56], ax

; 633  : 				e = AttachFlight(&mis,this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR _mis$5[ebp]
	push	eax
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _e$[ebp], eax

; 634  : 				if (e)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN13@CheckNeedR

; 635  : 				{
; 636  : 					if (e->BuildMission(&mis) == PRET_SUCCESS){

	lea	ecx, DWORD PTR _mis$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+732]
	call	edx
	cmp	eax, 3
	jne	SHORT $LN11@CheckNeedR

; 637  : 						RecordFlightAddition((Flight)e,&mis,0);

	push	0
	lea	eax, DWORD PTR _mis$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition

; 638  : 					}
; 639  : 					else{

	jmp	SHORT $LN13@CheckNeedR
$LN11@CheckNeedR:

; 640  : 						CancelFlight((Flight)e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight
$LN13@CheckNeedR:

; 641  : 					}
; 642  : 				}
; 643  : 			}
; 644  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$5[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
$LN14@CheckNeedR:

; 645  : 
; 646  : 		// 2001-09-11 ADDED BY M.N. if the packags wants a tanker AND the package 
; 647  : 		// really *needs* a tanker, add refueling waypoints
; 648  : 
; 649  : 		if (g_bTankerWaypoints)

	movzx	eax, BYTE PTR ?g_bTankerWaypoints@@3_NA	; g_bTankerWaypoints
	test	eax, eax
	je	$LN9@CheckNeedR

; 650  : 		{
; 651  : 			if ((wait_for & AMIS_ADDTANKER) && (package_flags & AMIS_NEEDTANKER))

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+346]
	and	edx, 512				; 00000200H
	je	$LN9@CheckNeedR
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 1024				; 00000400H
	je	SHORT $LN9@CheckNeedR

; 652  : 			{
; 653  : 				e = GetFirstUnitElement();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+996]
	call	edx
	mov	DWORD PTR _e$[ebp], eax

; 654  : 				Flight f = (Flight)e;

	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _f$3[ebp], eax
$LN7@CheckNeedR:

; 655  : 				while (e)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN9@CheckNeedR

; 656  : 				{
; 657  : 					// add to all package elements that really need to refuel
; 658  : 					if (e->GetUnitMission() != AMIS_TANKER && f->refuel != 0)

	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN5@CheckNeedR
	mov	ecx, DWORD PTR _f$3[ebp]
	cmp	DWORD PTR [ecx+452], 0
	je	SHORT $LN5@CheckNeedR

; 659  : 					{
; 660  : 						if (!AddTankerWayPoint (f,f->refuel))

	mov	edx, DWORD PTR _f$3[ebp]
	mov	eax, DWORD PTR [edx+452]
	push	eax
	mov	ecx, DWORD PTR _f$3[ebp]
	push	ecx
	call	?AddTankerWayPoint@@YAHPAVFlightClass@@H@Z ; AddTankerWayPoint
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@CheckNeedR

; 661  : 						{
; 662  : 							// M.N. remove the kill unit call - the 2D fuelneeded calculation has a too high 
; 663  : 							// variance so that we shouldn't delete the package here
; 664  : 							//						e->KillUnit();
; 665  : 							break;

	jmp	SHORT $LN9@CheckNeedR
$LN5@CheckNeedR:

; 666  : 						}
; 667  : 					}
; 668  : 					e = GetNextUnitElement();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1000]
	call	edx
	mov	DWORD PTR _e$[ebp], eax

; 669  : 					f = (Flight)e;

	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _f$3[ebp], eax

; 670  : 				}

	jmp	SHORT $LN7@CheckNeedR
$LN9@CheckNeedR:

; 671  : 			}
; 672  : 		}
; 673  : 		// END OF ADDED SECTION
; 674  : 
; 675  : 		// Now finalize our component flights
; 676  : 		e = GetFirstUnitElement();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _e$[ebp], eax
$LN3@CheckNeedR:

; 677  : 		while (e)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN1@CheckNeedR

; 678  : 		{
; 679  : 			FinalizeFlight(e,flights);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+345]
	push	edx
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	call	?FinalizeFlight@@YAXPAVUnitClass@@H@Z	; FinalizeFlight
	add	esp, 8

; 680  : 			e = GetNextUnitElement();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax
	mov	DWORD PTR _e$[ebp], eax

; 681  : 		}

	jmp	SHORT $LN3@CheckNeedR
$LN1@CheckNeedR:

; 682  : 		if (flights < 2)
; 683  : 		{
; 684  : 			// This package isn't really needed, only parent to one flight.
; 685  : 			// Can we just promote the flight to parent status and remove the package?
; 686  : 		}
; 687  : 		SetFinal(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 688  : 		package_flags = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0
$LN18@CheckNeedR:

; 689  : 	}
; 690  : 	return 0;

	xor	eax, eax
$LN22@CheckNeedR:

; 691  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckNeedRequests@PackageClass@@QAEHXZ$0:
	lea	ecx, DWORD PTR _mis$5[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$?CheckNeedRequests@PackageClass@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CheckNeedRequests@PackageClass@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckNeedRequests@PackageClass@@QAEHXZ ENDP		; PackageClass::CheckNeedRequests
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_i$ = -12						; size = 4
_j$ = -8						; size = 4
_this$ = -4						; size = 4
_eid$ = 8						; size = 8
?RemoveChild@PackageClass@@UAEXVVU_ID@@@Z PROC		; PackageClass::RemoveChild
; _this$ = ecx

; 1621 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1622 : 	int		i=0,j;

	mov	DWORD PTR _i$[ebp], 0
$LN7@RemoveChil:

; 1623 : 
; 1624 : 	while (i < elements)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+260]
	cmp	DWORD PTR _i$[ebp], ecx
	jge	$LN8@RemoveChil

; 1625 : 	{
; 1626 : 		if (element[i] == eid)

	lea	edx, DWORD PTR _eid$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax*8+264]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@RemoveChil

; 1627 : 		{
; 1628 : 			for (j=i; j < MAX_UNIT_CHILDREN-1; j++)

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN4@RemoveChil
$LN3@RemoveChil:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN4@RemoveChil:
	cmp	DWORD PTR _j$[ebp], 4
	jge	SHORT $LN2@RemoveChil

; 1629 : 				element[j] = element[j+1];

	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8+272]
	mov	edx, DWORD PTR [eax+edx*8+276]
	mov	eax, DWORD PTR _j$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+eax*8+264], ecx
	mov	DWORD PTR [esi+eax*8+268], edx
	jmp	SHORT $LN3@RemoveChil
$LN2@RemoveChil:

; 1630 : 			element[j] = FalconNullId;

	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+ecx*8+264], eax
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+ecx*8+268], eax

; 1631 : 			elements--;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+260]
	sub	dl, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+260], dl

; 1632 : 		}
; 1633 : 		else

	jmp	SHORT $LN1@RemoveChil
$LN5@RemoveChil:

; 1634 : 			i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN1@RemoveChil:

; 1635 : 	}

	jmp	$LN7@RemoveChil
$LN8@RemoveChil:

; 1636 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveChild@PackageClass@@UAEXVVU_ID@@@Z ENDP		; PackageClass::RemoveChild
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_e$ = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?DisposeChildren@PackageClass@@UAEXXZ PROC		; PackageClass::DisposeChildren
; _this$ = ecx

; 1602 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1603 : 	Unit		e;
; 1604 : 	int			i=elements-1;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+260]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@DisposeChi:

; 1605 : 
; 1606 : 	while (i >= 0)

	cmp	DWORD PTR _i$[ebp], 0
	jl	$LN5@DisposeChi

; 1607 : 	{
; 1608 : 		if (element[i])

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+264]
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN2@DisposeChi

; 1609 : 		{
; 1610 : 			e = (Unit)vuDatabase->Find(element[i]);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+268]
	push	eax
	mov	ecx, DWORD PTR [edx+ecx*8+264]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _e$[ebp], eax

; 1611 : 			if (e)

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN1@DisposeChi

; 1612 : 				e->KillUnit();

	mov	ecx, DWORD PTR _e$[ebp]
	call	?KillUnit@UnitClass@@QAEXXZ		; UnitClass::KillUnit
$LN1@DisposeChi:

; 1613 : 			element[i] = FalconNullId;

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+edx*8+264], ecx
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+edx*8+268], ecx

; 1614 : 			elements--;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+260]
	sub	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+260], al
$LN2@DisposeChi:

; 1615 : 		}
; 1616 : 		i--;

	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 1617 : 	}

	jmp	$LN4@DisposeChi
$LN5@DisposeChi:

; 1618 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisposeChildren@PackageClass@@UAEXXZ ENDP		; PackageClass::DisposeChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
$T2 = -16						; size = 8
_this$ = -8						; size = 4
_i$ = -4						; size = 4
_e$ = 8							; size = 4
?AddUnitChild@PackageClass@@UAEXPAVUnitClass@@@Z PROC	; PackageClass::AddUnitChild
; _this$ = ecx

; 1586 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1587 : 	int		i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN5@AddUnitChi:

; 1588 : 
; 1589 : 	while (element[i] && i < MAX_UNIT_CHILDREN)

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax*8+264]
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN4@AddUnitChi
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN4@AddUnitChi

; 1590 : 	{
; 1591 : 		if (element[i] == e->Id())

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax*8+264]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@AddUnitChi

; 1592 : 			return;

	jmp	SHORT $LN6@AddUnitChi
$LN3@AddUnitChi:

; 1593 : 		i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 1594 : 	}

	jmp	SHORT $LN5@AddUnitChi
$LN4@AddUnitChi:

; 1595 : 	if (i < MAX_UNIT_CHILDREN)

	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN2@AddUnitChi

; 1596 : 		element[i] = e->Id();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+ecx*8+264], edx
	mov	DWORD PTR [esi+ecx*8+268], eax
$LN2@AddUnitChi:

; 1597 : 	if (i >= elements)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+260]
	cmp	DWORD PTR _i$[ebp], eax
	jl	SHORT $LN6@AddUnitChi

; 1598 : 		elements = i+1;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+260], cl
$LN6@AddUnitChi:

; 1599 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?AddUnitChild@PackageClass@@UAEXPAVUnitClass@@@Z ENDP	; PackageClass::AddUnitChild
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_e$ = -8						; size = 4
_this$ = -4						; size = 4
_eid$ = 8						; size = 4
?GetUnitElementByID@PackageClass@@UAEPAVUnitClass@@H@Z PROC ; PackageClass::GetUnitElementByID
; _this$ = ecx

; 1560 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1561 : 	Unit	e = NULL;

	mov	DWORD PTR _e$[ebp], 0

; 1562 : 
; 1563 : 	if (eid < elements)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+260]
	cmp	DWORD PTR _eid$[ebp], ecx
	jge	SHORT $LN1@GetUnitEle

; 1564 : 		e = (Unit)vuDatabase->Find(element[eid]);

	mov	edx, DWORD PTR _eid$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8+268]
	push	ecx
	mov	edx, DWORD PTR [eax+edx*8+264]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _e$[ebp], eax
$LN1@GetUnitEle:

; 1565 : 
; 1566 : 	return e;

	mov	eax, DWORD PTR _e$[ebp]

; 1567 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitElementByID@PackageClass@@UAEPAVUnitClass@@H@Z ENDP ; PackageClass::GetUnitElementByID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_en$ = 8						; size = 4
?GetUnitElement@PackageClass@@UAEPAVUnitClass@@H@Z PROC	; PackageClass::GetUnitElement
; _this$ = ecx

; 1553 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1554 : 	if (en < elements && element[en])

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+260]
	cmp	DWORD PTR _en$[ebp], ecx
	jge	SHORT $LN1@GetUnitEle
	mov	edx, DWORD PTR _en$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+264]
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN1@GetUnitEle

; 1555 : 		return (Unit)vuDatabase->Find(element[en]);

	mov	ecx, DWORD PTR _en$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+268]
	push	eax
	mov	ecx, DWORD PTR [edx+ecx*8+264]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	jmp	SHORT $LN2@GetUnitEle
$LN1@GetUnitEle:

; 1556 : 	return NULL;

	xor	eax, eax
$LN2@GetUnitEle:

; 1557 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitElement@PackageClass@@UAEPAVUnitClass@@H@Z ENDP	; PackageClass::GetUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextUnitElement@PackageClass@@UAEPAVUnitClass@@XZ PROC ; PackageClass::GetNextUnitElement
; _this$ = ecx

; 1540 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1541 : 	c_element++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+261]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+261], cl
$LN3@GetNextUni:

; 1542 : 	while (c_element < elements)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+261]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+260]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextUni

; 1543 : 	{
; 1544 : 		if (element[c_element])

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+261]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+264]
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN1@GetNextUni

; 1545 : 			return FindUnit(element[c_element]);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+261]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8+268]
	push	ecx
	mov	edx, DWORD PTR [eax+edx*8+264]
	push	edx
	call	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z	; FindUnit
	add	esp, 8
	jmp	SHORT $LN4@GetNextUni
$LN1@GetNextUni:

; 1546 : 		c_element++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+261]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+261], cl

; 1547 : 	}

	jmp	SHORT $LN3@GetNextUni
$LN2@GetNextUni:

; 1548 : 	c_element=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+261], 0

; 1549 : 	return NULL;

	xor	eax, eax
$LN4@GetNextUni:

; 1550 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextUnitElement@PackageClass@@UAEPAVUnitClass@@XZ ENDP ; PackageClass::GetNextUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitElement@PackageClass@@UAEPAVUnitClass@@XZ PROC ; PackageClass::GetFirstUnitElement
; _this$ = ecx

; 1534 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1535 : 	c_element = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+261], 0

; 1536 : 	return FindUnit(element[c_element]);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+261]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8+268]
	push	ecx
	mov	edx, DWORD PTR [eax+edx*8+264]
	push	edx
	call	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z	; FindUnit
	add	esp, 8

; 1537 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitElement@PackageClass@@UAEPAVUnitClass@@XZ ENDP ; PackageClass::GetFirstUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -124						; size = 8
$T3 = -116						; size = 8
_enemy$ = -108						; size = 4
tv70 = -104						; size = 4
_flight$ = -100						; size = 4
_this$ = -96						; size = 4
_mis$ = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_them$ = 12						; size = 4
_triggered_flight$ = 16					; size = 8
?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z PROC ; PackageClass::HandleRequestReceipt
; _this$ = ecx

; 1353 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1354 : 	MissionRequestClass	mis;

	lea	ecx, DWORD PTR _mis$[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1355 : 	Unit				flight,enemy;
; 1356 : 
; 1357 : 	if (!wait_cycles)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+344]
	test	ecx, ecx
	jne	SHORT $LN27@HandleRequ

; 1358 : 		return;					// Error of sorts - response mission was planned after our wait period timed out

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN28@HandleRequ
$LN27@HandleRequ:

; 1359 : 
; 1360 : 	switch (type)

	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR tv70[ebp]
	sub	eax, 1
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 30			; 0000001eH
	ja	$LN25@HandleRequ
	mov	ecx, DWORD PTR tv70[ebp]
	movzx	edx, BYTE PTR $LN31@HandleRequ[ecx]
	jmp	DWORD PTR $LN33@HandleRequ[edx*4]
$LN24@HandleRequ:

; 1361 : 	{
; 1362 : 			case AMIS_BARCAP:
; 1363 : 			case AMIS_SWEEP:
; 1364 : 					wait_for |= AMIS_BARCAP | AMIS_SWEEP;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+346]
	or	ecx, 7
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+346], cx

; 1365 : 					wait_for ^= AMIS_BARCAP | AMIS_SWEEP;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+346]
	xor	ecx, 7
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+346], cx

; 1366 : 					responses |= PRESPONSE_CA;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+382]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+382], cx

; 1367 : 					interceptor = triggered_flight;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR [eax+304], ecx
	mov	edx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR [eax+308], edx

; 1368 : 					enemy = FindUnit(triggered_flight);

	mov	eax, DWORD PTR _triggered_flight$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	push	ecx
	call	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z	; FindUnit
	add	esp, 8
	mov	DWORD PTR _enemy$[ebp], eax

; 1369 : 					if (!enemy)

	cmp	DWORD PTR _enemy$[ebp], 0
	jne	SHORT $LN23@HandleRequ

; 1370 : 						return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN28@HandleRequ
$LN23@HandleRequ:

; 1371 : 					// RV - Biker - If we have no mission type return
; 1372 : 					if (MissionData[mis_request.mission].escorttype == AMIS_NONE)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+452]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+21]
	test	ecx, ecx
	jne	SHORT $LN22@HandleRequ

; 1373 : 						return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN28@HandleRequ

; 1374 : 					else

	jmp	SHORT $LN21@HandleRequ
$LN22@HandleRequ:

; 1375 : 					mis.mission = MissionData[mis_request.mission].escorttype;

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+452]
	shl	eax, 5
	mov	cl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+21]
	mov	BYTE PTR _mis$[ebp+60], cl
$LN21@HandleRequ:

; 1376 : 					mis.who = GetTeam();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	mov	BYTE PTR _mis$[ebp+32], al

; 1377 : 					mis.vs = them;

	mov	al, BYTE PTR _them$[ebp]
	mov	BYTE PTR _mis$[ebp+33], al

; 1378 : 					mis.target_num = 255;

	mov	ecx, 255				; 000000ffH
	mov	WORD PTR _mis$[ebp+50], cx

; 1379 : 					mis.aircraft = MissionData[mis.mission].str;

	movzx	edx, BYTE PTR _mis$[ebp+60]
	shl	edx, 5
	mov	al, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+18]
	mov	BYTE PTR _mis$[ebp+61], al

; 1380 : 					// skip this if our current package has enough air strength
; 1381 : 					mis.match_strength = GetUnitScore(enemy,Air);

	push	5
	mov	ecx, DWORD PTR _enemy$[ebp]
	push	ecx
	call	?GetUnitScore@@YAHPAVUnitClass@@W4MoveType@@@Z ; GetUnitScore
	add	esp, 8
	mov	WORD PTR _mis$[ebp+54], ax

; 1382 : 					//			mis.match_strength = enemy->GetUnitRoleScore(ARO_CA, CALC_TOTAL, USE_EXP | USE_VEH_COUNT);
; 1383 : 					if (aa_strength > mis.match_strength)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+468]
	movsx	ecx, WORD PTR _mis$[ebp+54]
	cmp	eax, ecx
	jle	SHORT $LN20@HandleRequ

; 1384 : 						return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN28@HandleRequ
$LN20@HandleRequ:

; 1385 : 					mis.match_strength -= aa_strength;		// we only want to match the excess

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+468]
	movsx	ecx, WORD PTR _mis$[ebp+54]
	sub	ecx, eax
	mov	WORD PTR _mis$[ebp+54], cx

; 1386 : 					mis.tot = mis_request.tot + MissionData[mis.mission].separation*CampaignSeconds;

	movzx	edx, BYTE PTR _mis$[ebp+60]
	shl	edx, 5
	movsx	eax, WORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+14]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+428]
	mov	DWORD PTR _mis$[ebp+36], eax

; 1387 : 					mis.tot_type = TYPE_EQ;

	mov	BYTE PTR _mis$[ebp+58], 3

; 1388 : 					mis.roe_check = ROE_AIR_ENGAGE;

	mov	BYTE PTR _mis$[ebp+63], 4

; 1389 : 					mis.priority = (mis.match_strength)/2;

	movsx	eax, WORD PTR _mis$[ebp+54]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	WORD PTR _mis$[ebp+56], ax

; 1390 : 					if (mis_request.flags & REQF_PART_OF_ACTION)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+436]
	and	eax, 1024				; 00000400H
	je	SHORT $LN19@HandleRequ

; 1391 : 					{
; 1392 : 						mis.flags = REQF_PART_OF_ACTION;

	mov	DWORD PTR _mis$[ebp+44], 1024		; 00000400H

; 1393 : 						mis.action_type = mis_request.action_type;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+451]
	mov	BYTE PTR _mis$[ebp+59], dl
$LN19@HandleRequ:

; 1394 : 					}
; 1395 : 					mis.targetID = triggered_flight;

	mov	eax, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR _mis$[ebp+8], eax
	mov	ecx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR _mis$[ebp+12], ecx

; 1396 : 					// Mission location is assembly point initially (if we have one)
; 1397 : 					// So we find the closest squadron to the assembly point
; 1398 : 					if (iax > 0 && iay > 0)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+348]
	test	eax, eax
	jle	SHORT $LN18@HandleRequ
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+350]
	test	edx, edx
	jle	SHORT $LN18@HandleRequ

; 1399 : 					{
; 1400 : 						mis.tx = iax;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+348]
	mov	WORD PTR _mis$[ebp+40], cx

; 1401 : 						mis.ty = iay;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+350]
	mov	WORD PTR _mis$[ebp+42], ax

; 1402 : 					}
; 1403 : 					else

	jmp	SHORT $LN17@HandleRequ
$LN18@HandleRequ:

; 1404 : 						GetUnitDestination(&mis.tx,&mis.ty);

	lea	ecx, DWORD PTR _mis$[ebp+42]
	push	ecx
	lea	edx, DWORD PTR _mis$[ebp+40]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination
$LN17@HandleRequ:

; 1405 : 					if (mis.mission == AMIS_ESCORT || mis.mission == AMIS_HAVCAP)

	movzx	eax, BYTE PTR _mis$[ebp+60]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN15@HandleRequ
	movzx	ecx, BYTE PTR _mis$[ebp+60]
	cmp	ecx, 3
	jne	$LN16@HandleRequ
$LN15@HandleRequ:

; 1406 : 					{
; 1407 : 						// Add a new flight to this package
; 1408 : 						mis.caps = caps | MissionData[mis.mission].caps;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+378]
	movzx	ecx, BYTE PTR _mis$[ebp+60]
	shl	ecx, 5
	movzx	edx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+24]
	or	eax, edx
	mov	WORD PTR _mis$[ebp+48], ax

; 1409 : 						mis.speed = mis_request.speed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+444]
	mov	WORD PTR _mis$[ebp+52], cx

; 1410 : 						mis.targetID = element[0];

	mov	edx, 8
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+264]
	mov	edx, DWORD PTR [eax+edx+268]
	mov	DWORD PTR _mis$[ebp+8], ecx
	mov	DWORD PTR _mis$[ebp+12], edx

; 1411 : 						mis.priority = GetPriority(&mis);

	lea	eax, DWORD PTR _mis$[ebp]
	push	eax
	call	?GetPriority@@YAHPAVMissionRequestClass@@@Z ; GetPriority
	add	esp, 4
	mov	WORD PTR _mis$[ebp+56], ax

; 1412 : 						flight = AttachFlight(&mis,this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _mis$[ebp]
	push	edx
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _flight$[ebp], eax

; 1413 : #ifdef DEBUG
; 1414 : 						gESCORTrequested++;
; 1415 : 						if (flight)
; 1416 : 							gESCORTgot++;
; 1417 : #endif
; 1418 : 						if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN14@HandleRequ

; 1419 : 						{
; 1420 : 							// Now set the mission destination correctly
; 1421 : 							GetUnitDestination(&mis.tx,&mis.ty);

	lea	eax, DWORD PTR _mis$[ebp+42]
	push	eax
	lea	ecx, DWORD PTR _mis$[ebp+40]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1422 : 							if (flight->BuildMission(&mis) == PRET_SUCCESS)

	lea	edx, DWORD PTR _mis$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+732]
	call	eax
	cmp	eax, 3
	jne	SHORT $LN13@HandleRequ

; 1423 : 							{
; 1424 : 								RecordFlightAddition((Flight)flight, &mis, 0);

	push	0
	lea	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition

; 1425 : 								flight->SetUnitMissionTarget(GetMainFlightID());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetMainFlightID
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+620]
	call	eax

; 1426 : 							}
; 1427 : 							else{

	jmp	SHORT $LN14@HandleRequ
$LN13@HandleRequ:

; 1428 : 								CancelFlight((Flight)flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight
$LN14@HandleRequ:

; 1429 : 							}
; 1430 : 						}
; 1431 : #ifdef KEV_ADEBUG
; 1432 : 						else
; 1433 : 							MonoPrint("Failed to find CA Escort!\n");
; 1434 : #endif
; 1435 : 					}

	jmp	SHORT $LN11@HandleRequ
$LN16@HandleRequ:

; 1436 : 					else if (mis.mission > 0)

	movzx	edx, BYTE PTR _mis$[ebp+60]
	test	edx, edx
	jle	SHORT $LN11@HandleRequ

; 1437 : 					{
; 1438 : 						// Request a new package (Sweep or RESCAP mostly)
; 1439 : 						if (mis.mission == AMIS_SWEEP && mis_request.mission >= AMIS_FAC && mis_request.mission <= AMIS_CAS)

	movzx	eax, BYTE PTR _mis$[ebp+60]
	cmp	eax, 7
	jne	SHORT $LN9@HandleRequ
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+452]
	cmp	edx, 19					; 00000013H
	jl	SHORT $LN9@HandleRequ
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+452]
	cmp	ecx, 22					; 00000016H
	jg	SHORT $LN9@HandleRequ

; 1440 : 							mis.context = friendlyCASExpected;

	mov	BYTE PTR _mis$[ebp+62], 25		; 00000019H
	jmp	SHORT $LN8@HandleRequ
$LN9@HandleRequ:

; 1441 : 						else if (mis.mission == AMIS_RESCAP)

	movzx	edx, BYTE PTR _mis$[ebp+60]
	cmp	edx, 5
	jne	SHORT $LN7@HandleRequ

; 1442 : 							mis.context = friendlyRescueExpected;

	mov	BYTE PTR _mis$[ebp+62], 24		; 00000018H

; 1443 : 						else

	jmp	SHORT $LN8@HandleRequ
$LN7@HandleRequ:

; 1444 : 							mis.context = friendlyAssetsExpected;

	mov	BYTE PTR _mis$[ebp+62], 26		; 0000001aH
$LN8@HandleRequ:

; 1445 : 						mis.requesterID = Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mis$[ebp], ecx
	mov	DWORD PTR _mis$[ebp+4], edx

; 1446 : 						mis.RequestMission();

	lea	ecx, DWORD PTR _mis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission
$LN11@HandleRequ:

; 1447 : 					}
; 1448 : 					break;

	jmp	$LN25@HandleRequ
$LN5@HandleRequ:

; 1449 : 			case AMIS_TANKER:
; 1450 : 					responses |= PRESPONSE_TANKER;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+382]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+382], cx

; 1451 : 					tanker = triggered_flight;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR [eax+336], ecx
	mov	edx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR [eax+340], edx

; 1452 : 					break;

	jmp	$LN25@HandleRequ
$LN4@HandleRequ:

; 1453 : 			case AMIS_AWACS:
; 1454 : 					responses |= PRESPONSE_AWACS;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+382]
	or	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+382], cx

; 1455 : 					awacs = triggered_flight;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR [eax+312], ecx
	mov	edx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR [eax+316], edx

; 1456 : 					break;

	jmp	SHORT $LN25@HandleRequ
$LN3@HandleRequ:

; 1457 : 			case AMIS_JSTAR:
; 1458 : 					responses |= PRESPONSE_JSTAR;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+382]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+382], cx

; 1459 : 					jstar = triggered_flight;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR [eax+320], ecx
	mov	edx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR [eax+324], edx

; 1460 : 					break;

	jmp	SHORT $LN25@HandleRequ
$LN2@HandleRequ:

; 1461 : 			case AMIS_ECM:
; 1462 : 					responses |= PRESPONSE_ECM;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+382]
	or	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+382], cx

; 1463 : 					ecm = triggered_flight;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _triggered_flight$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	edx, DWORD PTR _triggered_flight$[ebp+4]
	mov	DWORD PTR [eax+332], edx
$LN25@HandleRequ:

; 1464 : 					break;
; 1465 : 			default:
; 1466 : 					break;
; 1467 : 	}
; 1468 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
$LN28@HandleRequ:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN33@HandleRequ:
	DD	$LN24@HandleRequ
	DD	$LN4@HandleRequ
	DD	$LN3@HandleRequ
	DD	$LN5@HandleRequ
	DD	$LN2@HandleRequ
	DD	$LN25@HandleRequ
$LN31@HandleRequ:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	2
	DB	3
	DB	5
	DB	5
	DB	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z$0:
	lea	ecx, DWORD PTR _mis$[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HandleRequestReceipt@PackageClass@@UAEXHHVVU_ID@@@Z ENDP ; PackageClass::HandleRequestReceipt
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -236						; size = 8
$T3 = -228						; size = 8
$T4 = -220						; size = 8
$T5 = -212						; size = 8
$T6 = -204						; size = 8
$T7 = -196						; size = 8
$T8 = -188						; size = 8
$T9 = -180						; size = 8
_packit$10 = -172					; size = 12
_startTime$11 = -160					; size = 4
_bestAWACSDist$12 = -156				; size = 4
_bestECMDist$13 = -152					; size = 4
_bestTANKDist$14 = -148					; size = 4
_bestJSTARDist$15 = -144				; size = 4
_endTime$16 = -140					; size = 4
_y$17 = -136						; size = 2
_x$18 = -132						; size = 2
_y$19 = -128						; size = 2
_pmis$20 = -124						; size = 4
_x$21 = -120						; size = 2
_pack$22 = -116						; size = 4
_dist$23 = -112						; size = 4
_flight$24 = -108					; size = 4
_px$25 = -104						; size = 2
_py$26 = -100						; size = 2
_this$ = -96						; size = 4
_newmis$ = -92						; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_mis$ = 8						; size = 4
_targetd$ = 12						; size = 4
?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z PROC ; PackageClass::FindSupportFlights
; _this$ = ecx

; 1184 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 	MissionRequestClass	newmis;

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1186 : 
; 1187 : 	if (!(package_flags & AMIS_SUPPORT_MASK))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 1
	or	ecx, 2
	or	ecx, 4
	or	ecx, 512				; 00000200H
	jne	SHORT $LN20@FindSuppor

; 1188 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	jmp	$LN21@FindSuppor
$LN20@FindSuppor:

; 1189 : 
; 1190 : 	if (TeamInfo[GetTeam()] && TeamInfo[GetTeam()]->atm && TeamInfo[GetTeam()]->atm->packageList)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	je	$LN19@FindSuppor
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	cmp	DWORD PTR [edx+876], 0
	je	$LN19@FindSuppor
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	mov	eax, DWORD PTR [edx+876]
	cmp	DWORD PTR [eax+192], 0
	je	$LN19@FindSuppor

; 1191 : 	{
; 1192 : 		// Look for any existing missions which can help us out.
; 1193 : 		Package			pack;
; 1194 : 		Flight			flight;
; 1195 : 		MissionRequest	pmis;
; 1196 : 		GridIndex		px,py;
; 1197 : 		float			dist;
; 1198 : 		float			bestAWACSDist=(float)Map_Max_X*Map_Max_Y;		// Reasonable maximum distance squared

	movsx	ecx, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cvtsi2ss xmm0, ecx
	movsx	edx, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cvtsi2ss xmm1, edx
	mulss	xmm0, xmm1
	movss	DWORD PTR _bestAWACSDist$12[ebp], xmm0

; 1199 : 		float			bestJSTARDist=(float)Map_Max_X*Map_Max_Y;		// Reasonable maximum distance squared

	movsx	eax, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cvtsi2ss xmm0, eax
	movsx	ecx, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cvtsi2ss xmm1, ecx
	mulss	xmm0, xmm1
	movss	DWORD PTR _bestJSTARDist$15[ebp], xmm0

; 1200 : 		float			bestTANKDist=(float)Map_Max_X*Map_Max_Y;		// Reasonable maximum distance squared

	movsx	edx, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cvtsi2ss xmm0, edx
	movsx	eax, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cvtsi2ss xmm1, eax
	mulss	xmm0, xmm1
	movss	DWORD PTR _bestTANKDist$14[ebp], xmm0

; 1201 : 		float			bestECMDist=(float)Map_Max_X*Map_Max_Y;		// Reasonable maximum distance squared

	movsx	ecx, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cvtsi2ss xmm0, ecx
	movsx	edx, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cvtsi2ss xmm1, edx
	mulss	xmm0, xmm1
	movss	DWORD PTR _bestECMDist$13[ebp], xmm0

; 1202 : 		CampaignTime	startTime, endTime;
; 1203 : 
; 1204 : 		startTime = mis->tot - 10*CampaignMinutes;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 600000				; 000927c0H
	mov	DWORD PTR _startTime$11[ebp], ecx

; 1205 : 		endTime = mis->tot + (MissionData[mis->mission].loitertime+10)*CampaignMinutes;

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	add	ecx, 10					; 0000000aH
	imul	ecx, 60000				; 0000ea60H
	mov	edx, DWORD PTR _mis$[ebp]
	add	ecx, DWORD PTR [edx+36]
	mov	DWORD PTR _endTime$16[ebp], ecx

; 1206 : 		VuListIterator	packit(TeamInfo[GetTeam()]->atm->packageList);

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	mov	eax, DWORD PTR [edx+876]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	lea	ecx, DWORD PTR _packit$10[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1207 : 		pack = (Package) GetFirstUnit(&packit);

	lea	edx, DWORD PTR _packit$10[ebp]
	push	edx
	call	?GetFirstUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetFirstUnit
	add	esp, 4
	mov	DWORD PTR _pack$22[ebp], eax
$LN18@FindSuppor:

; 1208 : 		while (pack)

	cmp	DWORD PTR _pack$22[ebp], 0
	je	$LN17@FindSuppor

; 1209 : 		{
; 1210 : 			pmis = pack->GetMissionRequest();

	mov	ecx, DWORD PTR _pack$22[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	DWORD PTR _pmis$20[ebp], eax

; 1211 : 			flight = (FlightClass*) pack->GetFirstUnitElement();

	mov	eax, DWORD PTR _pack$22[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pack$22[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _flight$24[ebp], eax

; 1212 : 			if (flight && !flight->Aborted() && pmis->tot < startTime)

	cmp	DWORD PTR _flight$24[ebp], 0
	je	$LN6@FindSuppor
	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?Aborted@UnitClass@@QBEHXZ		; UnitClass::Aborted
	test	eax, eax
	jne	$LN6@FindSuppor
	mov	ecx, DWORD PTR _pmis$20[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	edx, DWORD PTR _startTime$11[ebp]
	jae	$LN6@FindSuppor

; 1213 : 			{
; 1214 : 				if ((package_flags & AMIS_ADDAWACS) && flight->GetUnitMission() == AMIS_AWACS)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 1
	je	$LN14@FindSuppor
	mov	edx, DWORD PTR _flight$24[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$24[ebp]
	mov	edx, DWORD PTR [eax+664]
	call	edx
	cmp	eax, 26					; 0000001aH
	jne	$LN14@FindSuppor

; 1215 : 				{
; 1216 : 					pack->GetUnitDestination(&px,&py);

	lea	eax, DWORD PTR _py$26[ebp]
	push	eax
	lea	ecx, DWORD PTR _px$25[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pack$22[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1217 : 					dist = (float)DistSqu(mis->tx,mis->ty,px,py);

	movzx	edx, WORD PTR _py$26[ebp]
	push	edx
	movzx	eax, WORD PTR _px$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+42]
	push	edx
	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, WORD PTR [eax+40]
	push	ecx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dist$23[ebp], xmm0

; 1218 : 					if (pmis->tot + MissionData[AMIS_AWACS].loitertime*CampaignMinutes > endTime && dist < bestAWACSDist)

	mov	edx, 32					; 00000020H
	imul	edx, 26					; 0000001aH
	movsx	eax, WORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+16]
	imul	eax, 60000				; 0000ea60H
	mov	ecx, DWORD PTR _pmis$20[ebp]
	add	eax, DWORD PTR [ecx+36]
	cmp	eax, DWORD PTR _endTime$16[ebp]
	jbe	SHORT $LN14@FindSuppor
	movss	xmm0, DWORD PTR _bestAWACSDist$12[ebp]
	comiss	xmm0, DWORD PTR _dist$23[ebp]
	jbe	SHORT $LN14@FindSuppor

; 1219 : 					{
; 1220 : 						awacs = flight->Id();

	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+312], ecx
	mov	DWORD PTR [eax+316], edx

; 1221 : 						bestAWACSDist = dist;

	movss	xmm0, DWORD PTR _dist$23[ebp]
	movss	DWORD PTR _bestAWACSDist$12[ebp], xmm0
$LN14@FindSuppor:

; 1222 : 					}
; 1223 : 				}
; 1224 : 				if ((package_flags & AMIS_ADDJSTAR) && flight->GetUnitMission() == AMIS_JSTAR)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 2
	je	$LN12@FindSuppor
	mov	eax, DWORD PTR _flight$24[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$24[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 27					; 0000001bH
	jne	$LN12@FindSuppor

; 1225 : 				{
; 1226 : 					pack->GetUnitDestination(&px,&py);

	lea	ecx, DWORD PTR _py$26[ebp]
	push	ecx
	lea	edx, DWORD PTR _px$25[ebp]
	push	edx
	mov	ecx, DWORD PTR _pack$22[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1227 : 					dist = (float)DistSqu(mis->tx,mis->ty,px,py);

	movzx	eax, WORD PTR _py$26[ebp]
	push	eax
	movzx	ecx, WORD PTR _px$25[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+42]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+40]
	push	edx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dist$23[ebp], xmm0

; 1228 : 					if (pmis->tot + MissionData[AMIS_JSTAR].loitertime*CampaignMinutes > endTime && dist < bestJSTARDist)

	mov	eax, 32					; 00000020H
	imul	eax, 27					; 0000001bH
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	imul	ecx, 60000				; 0000ea60H
	mov	edx, DWORD PTR _pmis$20[ebp]
	add	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR _endTime$16[ebp]
	jbe	SHORT $LN12@FindSuppor
	movss	xmm0, DWORD PTR _bestJSTARDist$15[ebp]
	comiss	xmm0, DWORD PTR _dist$23[ebp]
	jbe	SHORT $LN12@FindSuppor

; 1229 : 					{
; 1230 : 						jstar = flight->Id();

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], ecx
	mov	DWORD PTR [eax+324], edx

; 1231 : 						bestJSTARDist = dist;

	movss	xmm0, DWORD PTR _dist$23[ebp]
	movss	DWORD PTR _bestJSTARDist$15[ebp], xmm0
$LN12@FindSuppor:

; 1232 : 					}
; 1233 : 				}
; 1234 : 				if ((package_flags & AMIS_ADDECM) && (targetd & NEED_ECM) && flight->GetUnitMission() == AMIS_ECM)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 4
	je	$LN10@FindSuppor
	mov	eax, DWORD PTR _targetd$[ebp]
	and	eax, 2
	je	$LN10@FindSuppor
	mov	ecx, DWORD PTR _flight$24[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$24[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 31					; 0000001fH
	jne	$LN10@FindSuppor

; 1235 : 				{
; 1236 : 					pack->GetUnitDestination(&px,&py);

	lea	ecx, DWORD PTR _py$26[ebp]
	push	ecx
	lea	edx, DWORD PTR _px$25[ebp]
	push	edx
	mov	ecx, DWORD PTR _pack$22[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1237 : 					dist = (float)DistSqu(mis->tx,mis->ty,px,py);

	movzx	eax, WORD PTR _py$26[ebp]
	push	eax
	movzx	ecx, WORD PTR _px$25[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+42]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+40]
	push	edx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dist$23[ebp], xmm0

; 1238 : 					if (pmis->tot + MissionData[AMIS_ECM].loitertime*CampaignMinutes > endTime && dist < bestECMDist)

	mov	eax, 32					; 00000020H
	imul	eax, 31					; 0000001fH
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	imul	ecx, 60000				; 0000ea60H
	mov	edx, DWORD PTR _pmis$20[ebp]
	add	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR _endTime$16[ebp]
	jbe	SHORT $LN10@FindSuppor
	movss	xmm0, DWORD PTR _bestECMDist$13[ebp]
	comiss	xmm0, DWORD PTR _dist$23[ebp]
	jbe	SHORT $LN10@FindSuppor

; 1239 : 					{
; 1240 : 						ecm = flight->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	DWORD PTR [eax+332], edx

; 1241 : 						bestECMDist = dist;

	movss	xmm0, DWORD PTR _dist$23[ebp]
	movss	DWORD PTR _bestECMDist$13[ebp], xmm0
$LN10@FindSuppor:

; 1242 : 					}
; 1243 : 				}
; 1244 : 				if ((package_flags & AMIS_ADDTANKER) && flight->GetUnitMission() == AMIS_TANKER)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 512				; 00000200H
	je	$LN6@FindSuppor
	mov	eax, DWORD PTR _flight$24[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$24[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 28					; 0000001cH
	jne	$LN6@FindSuppor

; 1245 : 				{
; 1246 : 					GridIndex	x,y;
; 1247 : 					pack->GetUnitDestination(&px,&py);

	lea	ecx, DWORD PTR _py$26[ebp]
	push	ecx
	lea	edx, DWORD PTR _px$25[ebp]
	push	edx
	mov	ecx, DWORD PTR _pack$22[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 1248 : 					GetUnitAssemblyPoint(0,&x,&y);

	lea	eax, DWORD PTR _y$17[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$21[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+812]
	call	edx

; 1249 : 					if (x && y)

	movsx	eax, WORD PTR _x$21[ebp]
	test	eax, eax
	je	SHORT $LN8@FindSuppor
	movsx	ecx, WORD PTR _y$17[ebp]
	test	ecx, ecx
	je	SHORT $LN8@FindSuppor

; 1250 : 						dist = (float)DistSqu(x,y,px,py);

	movzx	edx, WORD PTR _py$26[ebp]
	push	edx
	movzx	eax, WORD PTR _px$25[ebp]
	push	eax
	movzx	ecx, WORD PTR _y$17[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$21[ebp]
	push	edx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dist$23[ebp], xmm0

; 1251 : 					else

	jmp	SHORT $LN7@FindSuppor
$LN8@FindSuppor:

; 1252 : 						dist = (float)DistSqu(mis->tx,mis->ty,px,py);

	movzx	eax, WORD PTR _py$26[ebp]
	push	eax
	movzx	ecx, WORD PTR _px$25[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+42]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+40]
	push	edx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dist$23[ebp], xmm0
$LN7@FindSuppor:

; 1253 : 					if (pmis->tot + MissionData[AMIS_TANKER].loitertime*CampaignMinutes > endTime && dist < bestTANKDist)

	mov	eax, 32					; 00000020H
	imul	eax, 28					; 0000001cH
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	imul	ecx, 60000				; 0000ea60H
	mov	edx, DWORD PTR _pmis$20[ebp]
	add	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR _endTime$16[ebp]
	jbe	SHORT $LN6@FindSuppor
	movss	xmm0, DWORD PTR _bestTANKDist$14[ebp]
	comiss	xmm0, DWORD PTR _dist$23[ebp]
	jbe	SHORT $LN6@FindSuppor

; 1254 : 					{
; 1255 : 						tanker = flight->Id();

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], ecx
	mov	DWORD PTR [eax+340], edx

; 1256 : 						bestTANKDist = dist;

	movss	xmm0, DWORD PTR _dist$23[ebp]
	movss	DWORD PTR _bestTANKDist$14[ebp], xmm0
$LN6@FindSuppor:

; 1257 : 					}
; 1258 : 				}
; 1259 : 			}
; 1260 : 			pack = (Package) GetNextUnit(&packit);

	lea	ecx, DWORD PTR _packit$10[ebp]
	push	ecx
	call	?GetNextUnit@@YAPAVUnitClass@@PAVVuListIterator@@@Z ; GetNextUnit
	add	esp, 4
	mov	DWORD PTR _pack$22[ebp], eax

; 1261 : 		}

	jmp	$LN18@FindSuppor
$LN17@FindSuppor:

; 1262 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _packit$10[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN19@FindSuppor:

; 1263 : 
; 1264 : 	// Now request anything we couldn't find
; 1265 : 	if ((package_flags & AMIS_ADDAWACS) && awacs == FalconNullId)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 1
	je	$LN5@FindSuppor
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@FindSuppor

; 1266 : 	{
; 1267 : 		newmis.requesterID = Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], ecx
	mov	DWORD PTR _newmis$[ebp+4], edx

; 1268 : 		newmis.targetID = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _newmis$[ebp+8], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _newmis$[ebp+12], ecx

; 1269 : 		newmis.who = GetTeam();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	mov	BYTE PTR _newmis$[ebp+32], al

; 1270 : 		newmis.vs = 0;

	mov	BYTE PTR _newmis$[ebp+33], 0

; 1271 : 		newmis.tot = mis_request.tot;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR _newmis$[ebp+36], ecx

; 1272 : 		newmis.tot_type = TYPE_LE;

	mov	BYTE PTR _newmis$[ebp+58], 2

; 1273 : 		newmis.tx = mis->tx;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+40]
	mov	WORD PTR _newmis$[ebp+40], ax

; 1274 : 		newmis.ty = mis->ty;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dx, WORD PTR [ecx+42]
	mov	WORD PTR _newmis$[ebp+42], dx

; 1275 : 		newmis.mission = AMIS_AWACS;

	mov	BYTE PTR _newmis$[ebp+60], 26		; 0000001aH

; 1276 : 		newmis.roe_check = ROE_AIR_OVERFLY;

	mov	BYTE PTR _newmis$[ebp+63], 7

; 1277 : 		newmis.context = friendlyAWACSNeeded;

	mov	BYTE PTR _newmis$[ebp+62], 44		; 0000002cH

; 1278 : 		newmis.aircraft = 0;

	mov	BYTE PTR _newmis$[ebp+61], 0

; 1279 : 		newmis.priority = 0;

	xor	eax, eax
	mov	WORD PTR _newmis$[ebp+56], ax

; 1280 : 		newmis.flags = REQF_NEEDRESPONSE;

	mov	DWORD PTR _newmis$[ebp+44], 4

; 1281 : 		newmis.RequestMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission
$LN5@FindSuppor:

; 1282 : 	}
; 1283 : 	if ((package_flags & AMIS_ADDJSTAR) && jstar == FalconNullId)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 2
	je	$LN4@FindSuppor
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN4@FindSuppor

; 1284 : 	{
; 1285 : 		newmis.requesterID = Id();

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], edx
	mov	DWORD PTR _newmis$[ebp+4], eax

; 1286 : 		newmis.targetID = FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _newmis$[ebp+8], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _newmis$[ebp+12], edx

; 1287 : 		newmis.who = GetTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _newmis$[ebp+32], al

; 1288 : 		newmis.vs = 0;

	mov	BYTE PTR _newmis$[ebp+33], 0

; 1289 : 		newmis.tot = mis_request.tot;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 1290 : 		newmis.tot_type = TYPE_LE;

	mov	BYTE PTR _newmis$[ebp+58], 2

; 1291 : 		newmis.tx = mis->tx;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	cx, WORD PTR [eax+40]
	mov	WORD PTR _newmis$[ebp+40], cx

; 1292 : 		newmis.ty = mis->ty;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+42]
	mov	WORD PTR _newmis$[ebp+42], ax

; 1293 : 		newmis.mission = AMIS_JSTAR;

	mov	BYTE PTR _newmis$[ebp+60], 27		; 0000001bH

; 1294 : 		newmis.roe_check = ROE_AIR_OVERFLY;

	mov	BYTE PTR _newmis$[ebp+63], 7

; 1295 : 		newmis.context = enemyGroundForcesPresent;

	mov	BYTE PTR _newmis$[ebp+62], 16		; 00000010H

; 1296 : 		newmis.aircraft = 0;

	mov	BYTE PTR _newmis$[ebp+61], 0

; 1297 : 		newmis.priority = 0;

	xor	ecx, ecx
	mov	WORD PTR _newmis$[ebp+56], cx

; 1298 : 		newmis.flags = REQF_NEEDRESPONSE;

	mov	DWORD PTR _newmis$[ebp+44], 4

; 1299 : 		newmis.RequestMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission
$LN4@FindSuppor:

; 1300 : 	}
; 1301 : 
; 1302 : 	// 4. Trigger conditional mission requests.
; 1303 : 	if ((package_flags & AMIS_ADDECM) && (targetd & NEED_ECM) && ecm == FalconNullId)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 4
	je	$LN3@FindSuppor
	mov	ecx, DWORD PTR _targetd$[ebp]
	and	ecx, 2
	je	$LN3@FindSuppor
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN3@FindSuppor

; 1304 : 	{
; 1305 : 		newmis.requesterID = Id();

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], ecx
	mov	DWORD PTR _newmis$[ebp+4], edx

; 1306 : 		newmis.targetID = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _newmis$[ebp+8], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _newmis$[ebp+12], ecx

; 1307 : 		newmis.who = GetTeam();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	mov	BYTE PTR _newmis$[ebp+32], al

; 1308 : 		newmis.vs = 0;

	mov	BYTE PTR _newmis$[ebp+33], 0

; 1309 : 		newmis.tot = mis_request.tot;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR _newmis$[ebp+36], ecx

; 1310 : 		newmis.tot_type = TYPE_EQ;

	mov	BYTE PTR _newmis$[ebp+58], 3

; 1311 : 		newmis.tx = mis->tx;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+40]
	mov	WORD PTR _newmis$[ebp+40], ax

; 1312 : 		newmis.ty = mis->ty;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dx, WORD PTR [ecx+42]
	mov	WORD PTR _newmis$[ebp+42], dx

; 1313 : 		newmis.mission = AMIS_ECM;

	mov	BYTE PTR _newmis$[ebp+60], 31		; 0000001fH

; 1314 : 		newmis.roe_check = ROE_AIR_OVERFLY;

	mov	BYTE PTR _newmis$[ebp+63], 7

; 1315 : 		newmis.context = enemyRadarPresent;

	mov	BYTE PTR _newmis$[ebp+62], 17		; 00000011H

; 1316 : 		newmis.aircraft = 0;

	mov	BYTE PTR _newmis$[ebp+61], 0

; 1317 : 		newmis.priority = 0;

	xor	eax, eax
	mov	WORD PTR _newmis$[ebp+56], ax

; 1318 : 		newmis.flags = REQF_NEEDRESPONSE;

	mov	DWORD PTR _newmis$[ebp+44], 4

; 1319 : 		newmis.RequestMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission
$LN3@FindSuppor:

; 1320 : 	}
; 1321 : 	if ((package_flags & AMIS_ADDTANKER) && tanker == FalconNullId)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	and	edx, 512				; 00000200H
	je	$LN2@FindSuppor
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN2@FindSuppor

; 1322 : 	{
; 1323 : 		GridIndex	x,y;
; 1324 : 		// Make sure some tankers are going to be here - later only ask for it if we'll be
; 1325 : 		// short on fuel.
; 1326 : 		newmis.requesterID = Id();

	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], edx
	mov	DWORD PTR _newmis$[ebp+4], eax

; 1327 : 		newmis.targetID = FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _newmis$[ebp+8], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _newmis$[ebp+12], edx

; 1328 : 		newmis.who = GetTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _newmis$[ebp+32], al

; 1329 : 		newmis.vs = 0;

	mov	BYTE PTR _newmis$[ebp+33], 0

; 1330 : 		newmis.tot = mis_request.tot;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 1331 : 		newmis.tot_type = TYPE_LE;

	mov	BYTE PTR _newmis$[ebp+58], 2

; 1332 : 		newmis.tx = mis->tx;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	cx, WORD PTR [eax+40]
	mov	WORD PTR _newmis$[ebp+40], cx

; 1333 : 		newmis.ty = mis->ty;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+42]
	mov	WORD PTR _newmis$[ebp+42], ax

; 1334 : 		GetUnitAssemblyPoint(0,&x,&y);

	lea	ecx, DWORD PTR _y$19[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$18[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+812]
	call	eax

; 1335 : 		if (x && y)

	movsx	ecx, WORD PTR _x$18[ebp]
	test	ecx, ecx
	je	SHORT $LN1@FindSuppor
	movsx	edx, WORD PTR _y$19[ebp]
	test	edx, edx
	je	SHORT $LN1@FindSuppor

; 1336 : 		{
; 1337 : 			newmis.tx = x;

	mov	ax, WORD PTR _x$18[ebp]
	mov	WORD PTR _newmis$[ebp+40], ax

; 1338 : 			newmis.ty = y;

	mov	cx, WORD PTR _y$19[ebp]
	mov	WORD PTR _newmis$[ebp+42], cx
$LN1@FindSuppor:

; 1339 : 		}
; 1340 : 		newmis.mission = AMIS_TANKER;

	mov	BYTE PTR _newmis$[ebp+60], 28		; 0000001cH

; 1341 : 		newmis.roe_check = ROE_AIR_OVERFLY;

	mov	BYTE PTR _newmis$[ebp+63], 7

; 1342 : 		newmis.context = friendlyAssetsRefueling;

	mov	BYTE PTR _newmis$[ebp+62], 27		; 0000001bH

; 1343 : 		newmis.priority = 50;			// We REALLY need this tanker

	mov	edx, 50					; 00000032H
	mov	WORD PTR _newmis$[ebp+56], dx

; 1344 : 		newmis.aircraft = 0;

	mov	BYTE PTR _newmis$[ebp+61], 0

; 1345 : 		newmis.flags = REQF_NEEDRESPONSE | REQF_ONETRY;

	mov	DWORD PTR _newmis$[ebp+44], 260		; 00000104H

; 1346 : 		newmis.RequestMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestMission

; 1347 : 		wait_for |= AMIS_ADDTANKER;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+346]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+346], cx

; 1348 : 		wait_cycles = (uchar)PACKAGE_CYCLES_TO_WAIT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR ?PACKAGE_CYCLES_TO_WAIT@@3FA
	mov	BYTE PTR [eax+344], cl
$LN2@FindSuppor:

; 1349 : 	}
; 1350 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
$LN21@FindSuppor:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z$0:
	lea	ecx, DWORD PTR _newmis$[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__unwindfunclet$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z$1:
	lea	ecx, DWORD PTR _packit$10[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z ENDP ; PackageClass::FindSupportFlights
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_eaw$1 = -32						; size = 4
_aw$2 = -28						; size = 4
_tw$3 = -24						; size = 4
_lw$4 = -20						; size = 4
_intarget$5 = -16					; size = 4
_bw$6 = -12						; size = 4
_this$ = -8						; size = 4
_w$7 = -4						; size = 4
_flight$ = 8						; size = 4
_mis$ = 12						; size = 4
_targetd$ = 16						; size = 4
?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z PROC ; PackageClass::RecordFlightAddition
; _this$ = ecx

; 1122 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1123 : 	flights++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+345]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+345], cl

; 1124 : 	aa_strength += GetUnitScore (flight, Air);

	push	5
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?GetUnitScore@@YAHPAVUnitClass@@W4MoveType@@@Z ; GetUnitScore
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+468]
	add	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+468], dx

; 1125 : 	if (flights == 1)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+345]
	cmp	edx, 1
	jne	$LN19@RecordFlig

; 1126 : 	{
; 1127 : 		WayPoint	w,aw=NULL,bw=NULL,tw=NULL,eaw=NULL,lw=NULL;

	mov	DWORD PTR _aw$2[ebp], 0
	mov	DWORD PTR _bw$6[ebp], 0
	mov	DWORD PTR _tw$3[ebp], 0
	mov	DWORD PTR _eaw$1[ebp], 0
	mov	DWORD PTR _lw$4[ebp], 0

; 1128 : 		int			intarget = 0;

	mov	DWORD PTR _intarget$5[ebp], 0

; 1129 : 
; 1130 : 		// Do some stuff for the first flight only
; 1131 : 		mis->speed = flight->GetCombatSpeed();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetCombatSpeed@UnitClass@@QBEHXZ	; UnitClass::GetCombatSpeed
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	WORD PTR [ecx+52], ax

; 1132 : 		mis_request.speed = mis->speed;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _mis$[ebp]
	mov	cx, WORD PTR [eax+52]
	mov	WORD PTR [edx+444], cx

; 1133 : 		mis_request.tot = flight->GetUnitTOT();

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+692]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+428], eax

; 1134 : 		// If we can add SEAD, and havn't already decided to, check if we need to
; 1135 : 		if ((package_flags & AMIS_ADDSEAD) && !(targetd & NEED_SEAD))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 32					; 00000020H
	je	SHORT $LN18@RecordFlig
	mov	ecx, DWORD PTR _targetd$[ebp]
	and	ecx, 1
	jne	SHORT $LN18@RecordFlig

; 1136 : 			targetd |= CheckPathThreats(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?CheckPathThreats@@YAHPAVUnitClass@@@Z	; CheckPathThreats
	add	esp, 4
	or	eax, DWORD PTR _targetd$[ebp]
	mov	DWORD PTR _targetd$[ebp], eax
	jmp	SHORT $LN17@RecordFlig
$LN18@RecordFlig:

; 1137 : 		// If we can add ECM, check if we need to
; 1138 : 		else if (package_flags & AMIS_ADDECM)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 4
	je	SHORT $LN17@RecordFlig

; 1139 : 			targetd |= CheckPathThreats(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?CheckPathThreats@@YAHPAVUnitClass@@@Z	; CheckPathThreats
	add	esp, 4
	or	eax, DWORD PTR _targetd$[ebp]
	mov	DWORD PTR _targetd$[ebp], eax
$LN17@RecordFlig:

; 1140 : 		if (!(MissionData[mis->mission].flags & AMIS_TARGET_ONLY))

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	shl	ecx, 5
	mov	edx, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[ecx+28]
	and	edx, 262144				; 00040000H
	jne	$LN19@RecordFlig

; 1141 : 		{
; 1142 : 			// Find assembly points
; 1143 : 			w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$7[ebp], eax
$LN14@RecordFlig:

; 1144 : 			while (w)

	cmp	DWORD PTR _w$7[ebp], 0
	je	$LN13@RecordFlig

; 1145 : 			{
; 1146 : 				if (w->GetWPFlags() & WPF_ASSEMBLE && !aw)

	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 2
	je	SHORT $LN12@RecordFlig
	cmp	DWORD PTR _aw$2[ebp], 0
	jne	SHORT $LN12@RecordFlig

; 1147 : 					aw = w;

	mov	eax, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _aw$2[ebp], eax
$LN12@RecordFlig:

; 1148 : 				if (w->GetWPFlags() & WPF_BREAKPOINT)

	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 4
	je	SHORT $LN11@RecordFlig

; 1149 : 					bw = w;

	mov	ecx, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _bw$6[ebp], ecx
$LN11@RecordFlig:

; 1150 : 				if (w->GetWPFlags() & WPF_TARGET || w->GetWPFlags() & WPF_IP || w->GetWPFlags() & WPF_CP || /* w->GetWPFlags() & WPF_TURNPOINT || */ w->GetWPFlags() & WPF_REPEAT)

	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	jne	SHORT $LN9@RecordFlig
	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 8
	jne	SHORT $LN9@RecordFlig
	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 32					; 00000020H
	jne	SHORT $LN9@RecordFlig
	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 64					; 00000040H
	je	SHORT $LN10@RecordFlig
$LN9@RecordFlig:

; 1151 : 				{
; 1152 : 					if (!bw)

	cmp	DWORD PTR _bw$6[ebp], 0
	jne	SHORT $LN8@RecordFlig

; 1153 : 						bw = lw;

	mov	edx, DWORD PTR _lw$4[ebp]
	mov	DWORD PTR _bw$6[ebp], edx
$LN8@RecordFlig:

; 1154 : 					if (lw->GetWPFlags() & WPF_TARGET || lw->GetWPFlags() & WPF_CP)

	mov	ecx, DWORD PTR _lw$4[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	jne	SHORT $LN6@RecordFlig
	mov	ecx, DWORD PTR _lw$4[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 32					; 00000020H
	je	SHORT $LN7@RecordFlig
$LN6@RecordFlig:

; 1155 : 						tw = w;			// Just passed the target waypoint

	mov	eax, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _tw$3[ebp], eax
$LN7@RecordFlig:

; 1156 : 					intarget = 1;

	mov	DWORD PTR _intarget$5[ebp], 1
	jmp	SHORT $LN5@RecordFlig
$LN10@RecordFlig:

; 1157 : 				}
; 1158 : 				else if (intarget) // && !tw)

	cmp	DWORD PTR _intarget$5[ebp], 0
	je	SHORT $LN4@RecordFlig

; 1159 : 				{
; 1160 : 					tw = w;				// Just passed the target waypoint

	mov	ecx, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _tw$3[ebp], ecx

; 1161 : 					intarget = 0;

	mov	DWORD PTR _intarget$5[ebp], 0

; 1162 : 				}
; 1163 : 				else

	jmp	SHORT $LN5@RecordFlig
$LN4@RecordFlig:

; 1164 : 					intarget = 0;

	mov	DWORD PTR _intarget$5[ebp], 0
$LN5@RecordFlig:

; 1165 : 				if (w->GetWPFlags() & WPF_ASSEMBLE)

	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 2
	je	SHORT $LN2@RecordFlig

; 1166 : 					eaw = w;

	mov	edx, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _eaw$1[ebp], edx
$LN2@RecordFlig:

; 1167 : 				lw = w;

	mov	eax, DWORD PTR _w$7[ebp]
	mov	DWORD PTR _lw$4[ebp], eax

; 1168 : 				w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$7[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$7[ebp], eax

; 1169 : 			}

	jmp	$LN14@RecordFlig
$LN13@RecordFlig:

; 1170 : 			if (!bw && MissionData[mis->mission].flags & AMIS_NO_BREAKPT)

	cmp	DWORD PTR _bw$6[ebp], 0
	jne	SHORT $LN1@RecordFlig
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	shl	edx, 5
	mov	eax, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+28]
	and	eax, 524288				; 00080000H
	je	SHORT $LN1@RecordFlig

; 1171 : 				bw = tw;

	mov	ecx, DWORD PTR _tw$3[ebp]
	mov	DWORD PTR _bw$6[ebp], ecx
$LN1@RecordFlig:

; 1172 : 			ShiAssert (bw && tw && aw && eaw)
; 1173 : 					// copy ingress and egress paths to package
; 1174 : 					w = bw->GetNextWP();

	mov	ecx, DWORD PTR _bw$6[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$7[ebp], eax

; 1175 : 			ingress =  CloneWPToList(aw, w);

	mov	edx, DWORD PTR _w$7[ebp]
	push	edx
	mov	eax, DWORD PTR _aw$2[ebp]
	push	eax
	call	?CloneWPToList@@YAPAVWayPointClass@@PAV1@0@Z ; CloneWPToList
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+384], eax

; 1176 : 			w = eaw->GetNextWP();

	mov	ecx, DWORD PTR _eaw$1[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$7[ebp], eax

; 1177 : 			egress =  CloneWPToList(tw, w);

	mov	edx, DWORD PTR _w$7[ebp]
	push	edx
	mov	eax, DWORD PTR _tw$3[ebp]
	push	eax
	call	?CloneWPToList@@YAPAVWayPointClass@@PAV1@0@Z ; CloneWPToList
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+388], eax
$LN19@RecordFlig:

; 1178 : 		}
; 1179 : 	}
; 1180 : 	return targetd;

	mov	eax, DWORD PTR _targetd$[ebp]

; 1181 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ENDP ; PackageClass::RecordFlightAddition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -408						; size = 8
$T3 = -400						; size = 8
$T4 = -392						; size = 8
$T5 = -384						; size = 8
$T6 = -376						; size = 8
$T7 = -368						; size = 8
$T8 = -360						; size = 8
_bs$ = -352						; size = 4
_retval$ = -348						; size = 4
$T9 = -344						; size = 4
$T10 = -340						; size = 4
$T11 = -336						; size = 4
$T12 = -332						; size = 4
$T13 = -328						; size = 4
$T14 = -324						; size = 4
$T15 = -320						; size = 4
$T16 = -316						; size = 4
_uc$17 = -312						; size = 4
_result$ = -308						; size = 4
_fid$18 = -304						; size = 2
_fid2$19 = -300						; size = 2
_count$20 = -296					; size = 4
_hs$ = -292						; size = 4
_ls$ = -288						; size = 4
_j$21 = -284						; size = 4
_f$22 = -280						; size = 4
_stat$23 = -276						; size = 4
_add_at_end$ = -272					; size = 4
tv169 = -266						; size = 1
tv701 = -265						; size = 1
_targetd$ = -264					; size = 4
_target$ = -260						; size = 4
_tar$ = -256						; size = 4
_targets$ = -252					; size = 4
_flight$ = -248						; size = 4
_this$ = -244						; size = 4
_newmis$ = -240						; size = 76
_targetf$ = -164					; size = 20
_targeted$ = -144					; size = 128
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_mis$ = 8						; size = 4
_assemblyList$ = 12					; size = 4
?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z PROC ; PackageClass::BuildPackage
; _this$ = ecx

; 694  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 695  : 	int			targets=0,tar=0,retval = PRET_SUCCESS,result;

	mov	DWORD PTR _targets$[ebp], 0
	mov	DWORD PTR _tar$[ebp], 0
	mov	DWORD PTR _retval$[ebp], 3

; 696  : 	int			targetf[5],targetd=0,hs,ls,bs=0;

	mov	DWORD PTR _targetd$[ebp], 0
	mov	DWORD PTR _bs$[ebp], 0

; 697  : 	uchar		targeted[128];
; 698  : 	Flight		flight=NULL,add_at_end=NULL;

	mov	DWORD PTR _flight$[ebp], 0
	mov	DWORD PTR _add_at_end$[ebp], 0

; 699  : 	CampEntity	target = NULL;

	mov	DWORD PTR _target$[ebp], 0

; 700  : 	MissionRequestClass	newmis;

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 701  : 
; 702  : 	SetUnitDestination(mis->tx,mis->ty);

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, WORD PTR [eax+42]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetUnitDestination@UnitClass@@QAEXFF@Z	; UnitClass::SetUnitDestination

; 703  : 	SetLocation(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLocation@CampBaseClass@@QAEXFF@Z	; CampBaseClass::SetLocation

; 704  : 	mis_request = *mis;

	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 392				; 00000188H
	mov	ecx, 19					; 00000013H
	mov	esi, DWORD PTR _mis$[ebp]
	rep movsd

; 705  : 	interceptor = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+304], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+308], eax

; 706  : 	package_flags = MissionData[mis->mission].flags;

	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	shl	edx, 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+28]
	mov	DWORD PTR [eax+372], ecx

; 707  : 	escort_type = MissionData[mis->mission].escorttype;					// 2001-09-19 M.N.

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+21]
	mov	BYTE PTR [ecx+376], dl

; 708  : 
; 709  : 	aa_strength = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+468], ax

; 710  : 	flights = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+345], 0

; 711  : 	SetFinal(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFinal@UnitClass@@QAEXH@Z		; UnitClass::SetFinal

; 712  : 
; 713  : 	mis->min_to = 127;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [eax+71], 127			; 0000007fH

; 714  : 	mis->max_to = -127;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [ecx+72], -127			; ffffff81H

; 715  : 
; 716  : 	// RV - Biker - Reduce possibility for large airlift flights
; 717  : 	if (mis->mission == AMIS_AIRLIFT && mis->aircraft > 2) {

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	cmp	eax, 33					; 00000021H
	jne	SHORT $LN82@BuildPacka
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	edx, 2
	jle	SHORT $LN82@BuildPacka

; 718  : 		mis->aircraft = (rand()%(mis->aircraft))+1;

	call	_rand
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [ecx+61]
	cdq
	idiv	ecx
	add	edx, 1
	mov	eax, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [eax+61], dl
$LN82@BuildPacka:

; 719  : 	}
; 720  : 
; 721  : 	// RV - Biker - We have a problem with converted missions (4 ship where in MissionData only 1 is allowed)
; 722  : 	mis->aircraft = min(mis->aircraft, MissionData[mis->mission].str);

	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	shl	ecx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+18]
	cmp	edx, eax
	jge	SHORT $LN85@BuildPacka
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dl, BYTE PTR [ecx+61]
	mov	BYTE PTR tv169[ebp], dl
	jmp	SHORT $LN86@BuildPacka
$LN85@BuildPacka:
	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	shl	ecx, 5
	mov	dl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+18]
	mov	BYTE PTR tv169[ebp], dl
$LN86@BuildPacka:
	mov	eax, DWORD PTR _mis$[ebp]
	mov	cl, BYTE PTR tv169[ebp]
	mov	BYTE PTR [eax+61], cl

; 723  : 
; 724  : 	// 1. Analyse target, determine # of strikes (and type?) needed.
; 725  : 	memset(targeted,0,FEATURES_PER_OBJ);

	push	32					; 00000020H
	push	0
	lea	edx, DWORD PTR _targeted$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 726  : 	if (mis->targetID)

	mov	ecx, DWORD PTR _mis$[ebp]
	add	ecx, 8
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN81@BuildPacka

; 727  : 		target = FindEntity(mis->targetID);

	mov	eax, DWORD PTR _mis$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _target$[ebp], eax
$LN81@BuildPacka:

; 728  : 	if (target && target->IsObjective())

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN80@BuildPacka
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	$LN80@BuildPacka

; 729  : 	{
; 730  : 		if (mis->target_num < FEATURES_PER_OBJ)

	mov	ecx, DWORD PTR _mis$[ebp]
	movsx	edx, WORD PTR [ecx+50]
	cmp	edx, 32					; 00000020H
	jge	SHORT $LN79@BuildPacka

; 731  : 		{
; 732  : 			targets = 1;

	mov	DWORD PTR _targets$[ebp], 1

; 733  : 			targetf[tar] = mis->target_num;

	mov	eax, DWORD PTR _mis$[ebp]
	movsx	ecx, WORD PTR [eax+50]
	mov	edx, DWORD PTR _tar$[ebp]
	mov	DWORD PTR _targetf$[ebp+edx*4], ecx

; 734  : 			targeted[mis->target_num] = 1;

	mov	eax, DWORD PTR _mis$[ebp]
	movsx	ecx, WORD PTR [eax+50]
	mov	BYTE PTR _targeted$[ebp+ecx], 1

; 735  : 		}
; 736  : 		else

	jmp	$LN78@BuildPacka
$LN79@BuildPacka:

; 737  : 		{
; 738  : 			// Plan enough strikes to get the target to 0% efficiency (assuming one target per flight)
; 739  : 			int		stat,f,j,count=0;

	mov	DWORD PTR _count$20[ebp], 0

; 740  : 			short	fid,fid2;
; 741  : 
; 742  : 			stat = ((Objective)target)->GetObjectiveStatus();

	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	edx, al
	mov	DWORD PTR _stat$23[ebp], edx
$LN77@BuildPacka:

; 743  : 			while (stat > 0 && tar < 5 && targets < 4 && count < 10)

	cmp	DWORD PTR _stat$23[ebp], 0
	jle	$LN76@BuildPacka
	cmp	DWORD PTR _tar$[ebp], 5
	jge	$LN76@BuildPacka
	cmp	DWORD PTR _targets$[ebp], 4
	jge	$LN76@BuildPacka
	cmp	DWORD PTR _count$20[ebp], 10		; 0000000aH
	jge	$LN76@BuildPacka

; 744  : 			{
; 745  : 				count++;

	mov	eax, DWORD PTR _count$20[ebp]
	add	eax, 1
	mov	DWORD PTR _count$20[ebp], eax

; 746  : 				f = BestTargetFeature((Objective)target,targeted);

	lea	ecx, DWORD PTR _targeted$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	call	?BestTargetFeature@@YAHPAVObjectiveClass@@QAE@Z ; BestTargetFeature
	add	esp, 8
	mov	DWORD PTR _f$22[ebp], eax

; 747  : 				if (f >= FEATURES_PER_OBJ || !((Objective)target)->GetFeatureValue(f))

	cmp	DWORD PTR _f$22[ebp], 32		; 00000020H
	jge	SHORT $LN74@BuildPacka
	mov	eax, DWORD PTR _f$22[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	test	eax, eax
	jne	SHORT $LN75@BuildPacka
$LN74@BuildPacka:

; 748  : 				{
; 749  : 					count = 10;

	mov	DWORD PTR _count$20[ebp], 10		; 0000000aH

; 750  : 					continue;

	jmp	$LN77@BuildPacka
$LN75@BuildPacka:

; 751  : 				}
; 752  : 				targeted[f] = 1;

	mov	ecx, DWORD PTR _f$22[ebp]
	mov	BYTE PTR _targeted$[ebp+ecx], 1

; 753  : 				for (j=0; j<targets; j++)

	mov	DWORD PTR _j$21[ebp], 0
	jmp	SHORT $LN73@BuildPacka
$LN72@BuildPacka:
	mov	edx, DWORD PTR _j$21[ebp]
	add	edx, 1
	mov	DWORD PTR _j$21[ebp], edx
$LN73@BuildPacka:
	mov	eax, DWORD PTR _j$21[ebp]
	cmp	eax, DWORD PTR _targets$[ebp]
	jge	$LN71@BuildPacka

; 754  : 				{
; 755  : 					// Check to make sure the types are different - otherwise it looks weird.
; 756  : 					fid = ((Objective)target)->GetFeatureID(targetf[j]);

	mov	ecx, DWORD PTR _j$21[ebp]
	mov	edx, DWORD PTR _targetf$[ebp+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	WORD PTR _fid$18[ebp], ax

; 757  : 					fid2 = ((Objective)target)->GetFeatureID(f);

	mov	eax, DWORD PTR _f$22[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	WORD PTR _fid2$19[ebp], ax

; 758  : 					if (Falcon4ClassTable[fid].vuClassData.classInfo_[VU_TYPE] == Falcon4ClassTable[fid2].vuClassData.classInfo_[VU_TYPE])

	movsx	ecx, WORD PTR _fid$18[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	shl	edx, 1
	movzx	eax, BYTE PTR [ecx+edx+8]
	movsx	ecx, WORD PTR _fid2$19[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	shl	edx, 1
	movzx	ecx, BYTE PTR [ecx+edx+8]
	cmp	eax, ecx
	jne	SHORT $LN70@BuildPacka

; 759  : 						j=100;

	mov	DWORD PTR _j$21[ebp], 100		; 00000064H
$LN70@BuildPacka:

; 760  : 				}

	jmp	$LN72@BuildPacka
$LN71@BuildPacka:

; 761  : 				if (j>50)

	cmp	DWORD PTR _j$21[ebp], 50		; 00000032H
	jle	SHORT $LN69@BuildPacka

; 762  : 					continue;

	jmp	$LN77@BuildPacka
$LN69@BuildPacka:

; 763  : 				stat -= ((Objective)target)->GetFeatureValue(f);

	mov	edx, DWORD PTR _f$22[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	mov	ecx, DWORD PTR _stat$23[ebp]
	sub	ecx, eax
	mov	DWORD PTR _stat$23[ebp], ecx

; 764  : 				if (MissionData[mis->mission].str > 2)

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+18]
	cmp	ecx, 2
	jle	SHORT $LN68@BuildPacka

; 765  : 					// TJL 10/24/03 Allow for Large strike packages in campaign
; 766  : 					if (g_bLargeStrike)

	movzx	edx, BYTE PTR ?g_bLargeStrike@@3_NA	; g_bLargeStrike
	test	edx, edx
	je	SHORT $LN67@BuildPacka

; 767  : 					{
; 768  : 						stat = 100; //TJL 10/24/03 Multiple 4 ships

	mov	DWORD PTR _stat$23[ebp], 100		; 00000064H

; 769  : 					}
; 770  : 					else

	jmp	SHORT $LN68@BuildPacka
$LN67@BuildPacka:

; 771  : 					{
; 772  : 						stat = 0;			// Never fly multiple 4 ship flights

	mov	DWORD PTR _stat$23[ebp], 0
$LN68@BuildPacka:

; 773  : 					}
; 774  : 				targetf[tar] = f;

	mov	eax, DWORD PTR _tar$[ebp]
	mov	ecx, DWORD PTR _f$22[ebp]
	mov	DWORD PTR _targetf$[ebp+eax*4], ecx

; 775  : 				tar++;

	mov	edx, DWORD PTR _tar$[ebp]
	add	edx, 1
	mov	DWORD PTR _tar$[ebp], edx

; 776  : 				targets++;

	mov	eax, DWORD PTR _targets$[ebp]
	add	eax, 1
	mov	DWORD PTR _targets$[ebp], eax

; 777  : 				// Force a second strike for high priority packages (the ATM_HIGH_PRIORITY define
; 778  : 				// is a hack - probably should read in from AIInputs)
; 779  : 				if (mis->priority > ATM_HIGH_PRIORITY && targets < 2)

	mov	ecx, DWORD PTR _mis$[ebp]
	movsx	edx, WORD PTR [ecx+56]
	cmp	edx, 150				; 00000096H
	jle	SHORT $LN65@BuildPacka
	cmp	DWORD PTR _targets$[ebp], 2
	jge	SHORT $LN65@BuildPacka

; 780  : 					stat = 100;

	mov	DWORD PTR _stat$23[ebp], 100		; 00000064H
$LN65@BuildPacka:

; 781  : 			}

	jmp	$LN77@BuildPacka
$LN76@BuildPacka:

; 782  : 			if (targets < 1)

	cmp	DWORD PTR _targets$[ebp], 1
	jge	SHORT $LN78@BuildPacka

; 783  : 				return PRET_NOTARGET;

	mov	DWORD PTR $T16[ebp], 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T16[ebp]
	jmp	$LN83@BuildPacka
$LN78@BuildPacka:

; 784  : 		}
; 785  : 		if (targets > 1)

	cmp	DWORD PTR _targets$[ebp], 1
	jle	SHORT $LN63@BuildPacka

; 786  : 		{
; 787  : 			// Reduce number of flights while keeping 2 aircraft per target
; 788  : 			mis->aircraft = targets * 2;

	mov	eax, DWORD PTR _targets$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [ecx+61], al

; 789  : 			targets = 1;

	mov	DWORD PTR _targets$[ebp], 1

; 790  : 			// Limit number of aircraft assigned to low priority targets
; 791  : 			if (mis->priority < ATM_HIGH_PRIORITY)

	mov	edx, DWORD PTR _mis$[ebp]
	movsx	eax, WORD PTR [edx+56]
	cmp	eax, 150				; 00000096H
	jge	SHORT $LN62@BuildPacka

; 792  : 				mis->aircraft = 4;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [ecx+61], 4
$LN62@BuildPacka:

; 793  : 			if (mis->aircraft > 4)

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	eax, 4
	jle	SHORT $LN63@BuildPacka

; 794  : 			{
; 795  : 				mis->aircraft = 4;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [ecx+61], 4

; 796  : 				targets = 2;

	mov	DWORD PTR _targets$[ebp], 2
$LN63@BuildPacka:

; 797  : 			}
; 798  : 		}
; 799  : 	}

	jmp	$LN60@BuildPacka
$LN80@BuildPacka:

; 800  : 	else if (target && target->IsUnit())

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN59@BuildPacka
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	$LN59@BuildPacka

; 801  : 	{
; 802  : 		targets = 1;

	mov	DWORD PTR _targets$[ebp], 1

; 803  : 		targetf[tar] = 255;

	mov	eax, DWORD PTR _tar$[ebp]
	mov	DWORD PTR _targetf$[ebp+eax*4], 255	; 000000ffH

; 804  : 		if (mis->mission == AMIS_SEADSTRIKE)

	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	cmp	edx, 11					; 0000000bH
	jne	SHORT $LN58@BuildPacka

; 805  : 		{
; 806  : 			UnitClassDataType	*uc = ((Unit)target)->GetUnitClassData();

	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _uc$17[ebp], eax

; 807  : 			if (uc->RadarVehicle < 255 && ((Unit)target)->GetNumVehicles(uc->RadarVehicle))

	mov	eax, DWORD PTR _uc$17[ebp]
	movzx	ecx, BYTE PTR [eax+328]
	cmp	ecx, 255				; 000000ffH
	jge	SHORT $LN58@BuildPacka
	mov	edx, DWORD PTR _uc$17[ebp]
	movzx	eax, BYTE PTR [edx+328]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetNumVehicles@UnitClass@@QAEHH@Z	; UnitClass::GetNumVehicles
	test	eax, eax
	je	SHORT $LN58@BuildPacka

; 808  : 				targetf[tar] = uc->RadarVehicle;

	mov	ecx, DWORD PTR _uc$17[ebp]
	movzx	edx, BYTE PTR [ecx+328]
	mov	eax, DWORD PTR _tar$[ebp]
	mov	DWORD PTR _targetf$[ebp+eax*4], edx
$LN58@BuildPacka:

; 809  : 		}
; 810  : 		if (mis->mission == AMIS_ONCALLCAS)

	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	cmp	edx, 20					; 00000014H
	jne	SHORT $LN56@BuildPacka

; 811  : 		{
; 812  : 			targets = ONCALL_CAS_FLIGHTS_PER_REQUEST;

	movsx	eax, WORD PTR ?ONCALL_CAS_FLIGHTS_PER_REQUEST@@3FA ; ONCALL_CAS_FLIGHTS_PER_REQUEST
	mov	DWORD PTR _targets$[ebp], eax

; 813  : 			memset(targetf,255,5);

	push	5
	push	255					; 000000ffH
	lea	ecx, DWORD PTR _targetf$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN56@BuildPacka:

; 814  : 		}
; 815  : 	}
; 816  : 	else			// Location

	jmp	SHORT $LN60@BuildPacka
$LN59@BuildPacka:

; 817  : 	{
; 818  : 		targets = 1;

	mov	DWORD PTR _targets$[ebp], 1

; 819  : 		targetf[tar] = 255;

	mov	edx, DWORD PTR _tar$[ebp]
	mov	DWORD PTR _targetf$[ebp+edx*4], 255	; 000000ffH
$LN60@BuildPacka:

; 820  : 	}
; 821  : 
; 822  : 	// Check target viability (SAM coverage at target)
; 823  : 	ls = ScoreThreatFast (mis->tx, mis->ty, GetAltitudeLevel(MissionData[mis->mission].minalt*100), mis->who);

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+8]
	imul	ecx, 100				; 00000064H
	push	ecx
	call	?GetAltitudeLevel@@YAHH@Z		; GetAltitudeLevel
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+42]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+40]
	push	edx
	call	?ScoreThreatFast@@YAHFFHE@Z		; ScoreThreatFast
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ls$[ebp], eax

; 824  : 	hs = ScoreThreatFast (mis->tx, mis->ty, GetAltitudeLevel(MissionData[mis->mission].maxalt*100), mis->who);

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+10]
	imul	ecx, 100				; 00000064H
	push	ecx
	call	?GetAltitudeLevel@@YAHH@Z		; GetAltitudeLevel
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, WORD PTR [edx+42]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	movzx	edx, WORD PTR [ecx+40]
	push	edx
	call	?ScoreThreatFast@@YAHFFHE@Z		; ScoreThreatFast
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hs$[ebp], eax

; 825  : 	if (ls > MIN_SEADESCORT_THREAT || hs > MIN_SEADESCORT_THREAT)

	movsx	eax, WORD PTR ?MIN_SEADESCORT_THREAT@@3FA ; MIN_SEADESCORT_THREAT
	cmp	DWORD PTR _ls$[ebp], eax
	jg	SHORT $LN53@BuildPacka
	movsx	ecx, WORD PTR ?MIN_SEADESCORT_THREAT@@3FA ; MIN_SEADESCORT_THREAT
	cmp	DWORD PTR _hs$[ebp], ecx
	jle	SHORT $LN54@BuildPacka
$LN53@BuildPacka:

; 826  : 		targetd |= NEED_SEAD;

	mov	edx, DWORD PTR _targetd$[ebp]
	or	edx, 1
	mov	DWORD PTR _targetd$[ebp], edx
$LN54@BuildPacka:

; 827  : 	if (mis->priority > ATM_HIGH_PRIORITY && ls && hs)

	mov	eax, DWORD PTR _mis$[ebp]
	movsx	ecx, WORD PTR [eax+56]
	cmp	ecx, 150				; 00000096H
	jle	SHORT $LN52@BuildPacka
	cmp	DWORD PTR _ls$[ebp], 0
	je	SHORT $LN52@BuildPacka
	cmp	DWORD PTR _hs$[ebp], 0
	je	SHORT $LN52@BuildPacka

; 828  : 		targetd |= NEED_SEAD;

	mov	edx, DWORD PTR _targetd$[ebp]
	or	edx, 1
	mov	DWORD PTR _targetd$[ebp], edx
$LN52@BuildPacka:

; 829  : 	if (package_flags & AMIS_HIGHTHREAT)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 32768				; 00008000H
	je	SHORT $LN51@BuildPacka

; 830  : 		tar = MAX_FLYMISSION_HIGHTHREAT;

	movsx	edx, WORD PTR ?MAX_FLYMISSION_HIGHTHREAT@@3FA ; MAX_FLYMISSION_HIGHTHREAT
	mov	DWORD PTR _tar$[ebp], edx
	jmp	SHORT $LN50@BuildPacka
$LN51@BuildPacka:

; 831  : 	else if (package_flags & AMIS_NOTHREAT)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 8192				; 00002000H
	je	SHORT $LN49@BuildPacka

; 832  : 		tar = MAX_FLYMISSION_NOTHREAT;

	movsx	edx, WORD PTR ?MAX_FLYMISSION_NOTHREAT@@3FA ; MAX_FLYMISSION_NOTHREAT
	mov	DWORD PTR _tar$[ebp], edx

; 833  : 	else

	jmp	SHORT $LN50@BuildPacka
$LN49@BuildPacka:

; 834  : 		tar = MAX_FLYMISSION_THREAT;

	movsx	eax, WORD PTR ?MAX_FLYMISSION_THREAT@@3FA ; MAX_FLYMISSION_THREAT
	mov	DWORD PTR _tar$[ebp], eax
$LN50@BuildPacka:

; 835  : 	if (ls > tar && hs > tar)

	mov	ecx, DWORD PTR _ls$[ebp]
	cmp	ecx, DWORD PTR _tar$[ebp]
	jle	$LN47@BuildPacka
	mov	edx, DWORD PTR _hs$[ebp]
	cmp	edx, DWORD PTR _tar$[ebp]
	jle	SHORT $LN47@BuildPacka

; 836  : 	{
; 837  : 		// If the threat is so high even SEAD can't get in, just cancel now.
; 838  : 		if (ls > MAX_FLYMISSION_HIGHTHREAT && hs > MAX_FLYMISSION_HIGHTHREAT)

	movsx	eax, WORD PTR ?MAX_FLYMISSION_HIGHTHREAT@@3FA ; MAX_FLYMISSION_HIGHTHREAT
	cmp	DWORD PTR _ls$[ebp], eax
	jle	SHORT $LN46@BuildPacka
	movsx	ecx, WORD PTR ?MAX_FLYMISSION_HIGHTHREAT@@3FA ; MAX_FLYMISSION_HIGHTHREAT
	cmp	DWORD PTR _hs$[ebp], ecx
	jle	SHORT $LN46@BuildPacka

; 839  : 			return PRET_CANCELED;

	mov	DWORD PTR $T9[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN83@BuildPacka
$LN46@BuildPacka:

; 840  : 		// Trigger an OCA strike mission and cancel this mission
; 841  : 		CallInOCAStrikes (mis);

	mov	edx, DWORD PTR _mis$[ebp]
	push	edx
	call	?CallInOCAStrikes@@YAHPAVMissionRequestClass@@@Z ; CallInOCAStrikes
	add	esp, 4

; 842  : 		return PRET_CANCELED;

	mov	DWORD PTR $T14[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T14[ebp]
	jmp	$LN83@BuildPacka
$LN47@BuildPacka:

; 843  : 	}
; 844  : 
; 845  : 	tar = 0;

	mov	DWORD PTR _tar$[ebp], 0
$LN45@BuildPacka:

; 846  : 	while (targets)

	cmp	DWORD PTR _targets$[ebp], 0
	je	$LN44@BuildPacka

; 847  : 	{
; 848  : 		// 2. Create and build these strikes
; 849  : 		mis->target_num = targetf[tar];

	mov	eax, DWORD PTR _mis$[ebp]
	mov	ecx, DWORD PTR _tar$[ebp]
	mov	dx, WORD PTR _targetf$[ebp+ecx*4]
	mov	WORD PTR [eax+50], dx

; 850  : 		mis->caps |= MissionData[mis->mission].caps;

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	shl	ecx, 5
	movzx	edx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+24]
	mov	eax, DWORD PTR _mis$[ebp]
	movsx	ecx, WORD PTR [eax+48]
	or	ecx, edx
	mov	edx, DWORD PTR _mis$[ebp]
	mov	WORD PTR [edx+48], cx

; 851  : 		if (!mis->aircraft)

	mov	eax, DWORD PTR _mis$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	jne	SHORT $LN43@BuildPacka

; 852  : 			mis->aircraft = MissionData[mis->mission].str;

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+18]
	mov	BYTE PTR [ecx+61], dl
$LN43@BuildPacka:

; 853  : 		flight = AttachFlight(mis,this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _flight$[ebp], eax

; 854  : 		if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN42@BuildPacka

; 855  : 		{
; 856  : 			mis->tx = mis_request.tx;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+432]
	mov	WORD PTR [edx+40], cx

; 857  : 			mis->ty = mis_request.ty;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+434]
	mov	WORD PTR [edx+42], cx

; 858  : 			if (MissionData[mis->mission].loitertime)

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	test	ecx, ecx
	je	SHORT $LN41@BuildPacka

; 859  : 				mis->tot = mis_request.tot + MissionData[mis->mission].loitertime*flights*CampaignMinutes;

	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	shl	eax, 5
	movsx	ecx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+345]
	imul	ecx, eax
	imul	ecx, 60000				; 0000ea60H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+428]
	mov	eax, DWORD PTR _mis$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 860  : 			else

	jmp	SHORT $LN40@BuildPacka
$LN41@BuildPacka:

; 861  : 				mis->tot = mis_request.tot + (CampaignTime)((flights)*10*CampaignSeconds);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+345]
	imul	edx, 10					; 0000000aH
	imul	edx, 1000				; 000003e8H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+428]
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	DWORD PTR [ecx+36], edx
$LN40@BuildPacka:

; 862  : 			result = flight->BuildMission(mis);

	mov	edx, DWORD PTR _mis$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+732]
	call	eax
	mov	DWORD PTR _result$[ebp], eax

; 863  : 			if (result == PRET_SUCCESS)

	cmp	DWORD PTR _result$[ebp], 3
	jne	SHORT $LN39@BuildPacka

; 864  : 			{
; 865  : 				targetd = RecordFlightAddition(flight, mis, targetd);

	mov	ecx, DWORD PTR _targetd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition
	mov	DWORD PTR _targetd$[ebp], eax

; 866  : 				flight->SetTarget(0);		

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetTarget@UnitClass@@QAEXPAVFalconEntity@@@Z ; UnitClass::SetTarget

; 867  : 			}
; 868  : 			else

	jmp	$LN42@BuildPacka
$LN39@BuildPacka:

; 869  : 			{
; 870  : 				CancelFlight((Flight)flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight

; 871  : 				if (result == PRET_ABORTED && !flights && (ls || hs))

	cmp	DWORD PTR _result$[ebp], 4
	jne	SHORT $LN37@BuildPacka
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+345]
	test	eax, eax
	jne	SHORT $LN37@BuildPacka
	cmp	DWORD PTR _ls$[ebp], 0
	jne	SHORT $LN36@BuildPacka
	cmp	DWORD PTR _hs$[ebp], 0
	je	SHORT $LN37@BuildPacka
$LN36@BuildPacka:

; 872  : 				{
; 873  : 					// This flight couldn't get to target
; 874  : 					return PRET_ABORTED;

	mov	DWORD PTR $T13[ebp], 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T13[ebp]
	jmp	$LN83@BuildPacka
$LN37@BuildPacka:

; 875  : 				}
; 876  : 				if (result == PRET_CANCELED && !flights)

	cmp	DWORD PTR _result$[ebp], 5
	jne	SHORT $LN42@BuildPacka
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+345]
	test	edx, edx
	jne	SHORT $LN42@BuildPacka

; 877  : 				{
; 878  : 					// This flight probably could arm itself or get to the target -
; 879  : 					// If we can disable us from finding the squadron next time through,
; 880  : 					// that'd be ideal, otherwise we need to cancel
; 881  : 					return PRET_CANCELED;

	mov	DWORD PTR $T11[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN83@BuildPacka
$LN42@BuildPacka:

; 882  : 				}
; 883  : 			}
; 884  : 		}
; 885  : 		// If we're gonna add a FAC, do it now
; 886  : 		// This is kinda annoying, because we have to fuck with the flights counter, etc..
; 887  : 		// But if I need to convert my ONCALLCAS to a PRPLANCAS I only want to have to
; 888  : 		// convert one.
; 889  : 		if (flights == 1 && (package_flags & AMIS_ADDFAC))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+345]
	cmp	ecx, 1
	jne	$LN34@BuildPacka
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 2048				; 00000800H
	je	$LN34@BuildPacka

; 890  : 		{
; 891  : 			// Add FAC directly
; 892  : 			newmis = *mis;

	mov	ecx, 19					; 00000013H
	mov	esi, DWORD PTR _mis$[ebp]
	lea	edi, DWORD PTR _newmis$[ebp]
	rep movsd

; 893  : 			newmis.mission = AMIS_FAC;

	mov	BYTE PTR _newmis$[ebp+60], 19		; 00000013H

; 894  : 			newmis.target_num = 255;

	mov	ecx, 255				; 000000ffH
	mov	WORD PTR _newmis$[ebp+50], cx

; 895  : 			newmis.targetID = FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _newmis$[ebp+8], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _newmis$[ebp+12], eax

; 896  : 			newmis.tot = mis_request.tot - 5 * CampaignMinutes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	sub	edx, 300000				; 000493e0H
	mov	DWORD PTR _newmis$[ebp+36], edx

; 897  : 			newmis.caps |= MissionData[newmis.mission].caps;

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+24]
	movsx	edx, WORD PTR _newmis$[ebp+48]
	or	edx, ecx
	mov	WORD PTR _newmis$[ebp+48], dx

; 898  : 			newmis.aircraft = MissionData[newmis.mission].str;

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	mov	cl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+18]
	mov	BYTE PTR _newmis$[ebp+61], cl

; 899  : 			newmis.flags = REQF_USERESERVES;

	mov	DWORD PTR _newmis$[ebp+44], 1

; 900  : 			newmis.priority = 0;

	xor	edx, edx
	mov	WORD PTR _newmis$[ebp+56], dx

; 901  : 			newmis.priority = GetPriority(&newmis);

	lea	eax, DWORD PTR _newmis$[ebp]
	push	eax
	call	?GetPriority@@YAHPAVMissionRequestClass@@@Z ; GetPriority
	add	esp, 4
	mov	WORD PTR _newmis$[ebp+56], ax

; 902  : 			add_at_end = AttachFlight(&newmis,this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _newmis$[ebp]
	push	edx
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _add_at_end$[ebp], eax

; 903  : 
; 904  : 			if (add_at_end)

	cmp	DWORD PTR _add_at_end$[ebp], 0
	je	SHORT $LN33@BuildPacka

; 905  : 			{
; 906  : 				if (add_at_end->BuildMission(&newmis) != PRET_SUCCESS){

	lea	eax, DWORD PTR _newmis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _add_at_end$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _add_at_end$[ebp]
	mov	eax, DWORD PTR [edx+732]
	call	eax
	cmp	eax, 3
	je	SHORT $LN32@BuildPacka

; 907  : 					CancelFlight((Flight)add_at_end);

	mov	ecx, DWORD PTR _add_at_end$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight

; 908  : 					add_at_end = NULL;

	mov	DWORD PTR _add_at_end$[ebp], 0

; 909  : 				}
; 910  : 				else {

	jmp	SHORT $LN31@BuildPacka
$LN32@BuildPacka:

; 911  : 					RemoveChild(add_at_end->Id());		// Play games to get the ordering right

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _add_at_end$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+980]
	call	eax
$LN31@BuildPacka:

; 912  : 				}
; 913  : 			}
; 914  : 			else 

	jmp	$LN34@BuildPacka
$LN33@BuildPacka:

; 915  : 			{
; 916  : 				// No FAC available - we need to convert our ONCALLCAS to PREPLANCAS or cancel
; 917  : 				flight = (Flight) GetFirstUnitElement();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _flight$[ebp], eax

; 918  : 				mis->tx = mis_request.tx;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+432]
	mov	WORD PTR [ecx+40], ax

; 919  : 				mis->ty = mis_request.ty;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+434]
	mov	WORD PTR [ecx+42], ax

; 920  : 				mis_request.mission = mis->mission = AMIS_PRPLANCAS;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	BYTE PTR [ecx+60], 21			; 00000015H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+452], 21			; 00000015H

; 921  : 				if (flight->BuildMission(mis) != PRET_SUCCESS)

	mov	eax, DWORD PTR _mis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+732]
	call	eax
	cmp	eax, 3
	je	$LN29@BuildPacka

; 922  : 				{
; 923  : 					CancelFlight((Flight)flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight

; 924  : 					DeleteWPList(ingress);	ingress = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+384]
	push	eax
	call	?DeleteWPList@@YAXPAVWayPointClass@@@Z	; DeleteWPList
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+384], 0

; 925  : 					DeleteWPList(egress);	egress = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+388]
	push	eax
	call	?DeleteWPList@@YAXPAVWayPointClass@@@Z	; DeleteWPList
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+388], 0

; 926  : 					DisposeWayPoints();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeWayPoints@UnitClass@@QAEXXZ	; UnitClass::DisposeWayPoints

; 927  : 					return PRET_CANCELED;

	mov	DWORD PTR $T10[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN83@BuildPacka
$LN29@BuildPacka:

; 928  : 				}
; 929  : 				targets = 1;

	mov	DWORD PTR _targets$[ebp], 1
$LN34@BuildPacka:

; 930  : 			}
; 931  : 		}
; 932  : 		targets--;

	mov	edx, DWORD PTR _targets$[ebp]
	sub	edx, 1
	mov	DWORD PTR _targets$[ebp], edx

; 933  : 		tar++;

	mov	eax, DWORD PTR _tar$[ebp]
	add	eax, 1
	mov	DWORD PTR _tar$[ebp], eax

; 934  : 	}

	jmp	$LN45@BuildPacka
$LN44@BuildPacka:

; 935  : 	// Correct for any weirded out target locations (ie: ONCALLCAS missions)
; 936  : 	mis->tx = mis_request.tx;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+432]
	mov	WORD PTR [ecx+40], ax

; 937  : 	mis->ty = mis_request.ty;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+434]
	mov	WORD PTR [ecx+42], ax

; 938  : 
; 939  : 	if (add_at_end)

	cmp	DWORD PTR _add_at_end$[ebp], 0
	je	SHORT $LN28@BuildPacka

; 940  : 	{
; 941  : 		AddUnitChild(add_at_end);

	mov	ecx, DWORD PTR _add_at_end$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+972]
	call	edx

; 942  : 		flights++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+345]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+345], cl
$LN28@BuildPacka:

; 943  : 	}
; 944  : 
; 945  : 	if (!flights || !flight)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+345]
	test	ecx, ecx
	je	SHORT $LN26@BuildPacka
	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN27@BuildPacka
$LN26@BuildPacka:

; 946  : 		return PRET_NO_ASSETS;

	mov	DWORD PTR $T12[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T12[ebp]
	jmp	$LN83@BuildPacka
$LN27@BuildPacka:

; 947  : 
; 948  : #ifdef KEV_ADEBUG
; 949  : 	MonoPrint("Building team #%d %s mission (%d) at %d,%d\n",mis->who,MissStr[mis_request.mission],mis_request.mission,mis->tx,mis->ty);
; 950  : #endif
; 951  : 	//TJL 11/13/03 Scene of a repeated CTD  
; 952  : 	/*
; 953  : 	   if (flight->IsHelicopter())
; 954  : 	   {
; 955  : 	// Helocopter flights don't make any requests or ask for support
; 956  : 	return PRET_SUCCESS;
; 957  : 	}
; 958  : 	 */ 
; 959  : 
; 960  : 
; 961  : 	// 3. Trigger required mission requests
; 962  : 	if ((package_flags & AMIS_ADDSEAD) && (targetd & NEED_SEAD))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 32					; 00000020H
	je	$LN25@BuildPacka
	mov	ecx, DWORD PTR _targetd$[ebp]
	and	ecx, 1
	je	$LN25@BuildPacka

; 963  : 	{
; 964  : 		// Add SEAD directly
; 965  : 		newmis = *mis;

	mov	ecx, 19					; 00000013H
	mov	esi, DWORD PTR _mis$[ebp]
	lea	edi, DWORD PTR _newmis$[ebp]
	rep movsd

; 966  : 		newmis.mission = AMIS_SEADESCORT;

	mov	BYTE PTR _newmis$[ebp+60], 12		; 0000000cH

; 967  : 		newmis.targetID = element[0];

	mov	edx, 8
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+264]
	mov	edx, DWORD PTR [eax+edx+268]
	mov	DWORD PTR _newmis$[ebp+8], ecx
	mov	DWORD PTR _newmis$[ebp+12], edx

; 968  : 		newmis.target_num = 255;

	mov	eax, 255				; 000000ffH
	mov	WORD PTR _newmis$[ebp+50], ax

; 969  : 		newmis.tot = mis_request.tot;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 970  : 		newmis.caps |= MissionData[newmis.mission].caps;

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+24]
	movsx	edx, WORD PTR _newmis$[ebp+48]
	or	edx, ecx
	mov	WORD PTR _newmis$[ebp+48], dx

; 971  : 		// RV - Biker - Limit size of escort to size of main flight
; 972  : 		//newmis.aircraft = MissionData[newmis.mission].str;
; 973  : 		newmis.aircraft = min(MissionData[newmis.mission].str, mis->aircraft);

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+18]
	mov	edx, DWORD PTR _mis$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	ecx, eax
	jge	SHORT $LN87@BuildPacka
	movzx	ecx, BYTE PTR _newmis$[ebp+60]
	shl	ecx, 5
	mov	dl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+18]
	mov	BYTE PTR tv701[ebp], dl
	jmp	SHORT $LN88@BuildPacka
$LN87@BuildPacka:
	mov	eax, DWORD PTR _mis$[ebp]
	mov	cl, BYTE PTR [eax+61]
	mov	BYTE PTR tv701[ebp], cl
$LN88@BuildPacka:
	mov	dl, BYTE PTR tv701[ebp]
	mov	BYTE PTR _newmis$[ebp+61], dl

; 974  : 		newmis.priority = 0;

	xor	eax, eax
	mov	WORD PTR _newmis$[ebp+56], ax

; 975  : 		newmis.priority = GetPriority(&newmis);

	lea	ecx, DWORD PTR _newmis$[ebp]
	push	ecx
	call	?GetPriority@@YAHPAVMissionRequestClass@@@Z ; GetPriority
	add	esp, 4
	mov	WORD PTR _newmis$[ebp+56], ax

; 976  : 		//		newmis.flags = REQF_USERESERVES;
; 977  : 		flight = AttachFlight(&newmis,this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR _newmis$[ebp]
	push	eax
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _flight$[ebp], eax

; 978  : #ifdef DEBUG
; 979  : 		gSEADrequested++;
; 980  : 		if (flight)
; 981  : 			gSEADgot++;
; 982  : #endif
; 983  : 		if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN25@BuildPacka

; 984  : 		{
; 985  : 			newmis.tot = mis_request.tot + (CampaignTime)(MissionData[newmis.mission].separation)*CampaignSeconds;

	movzx	ecx, BYTE PTR _newmis$[ebp+60]
	shl	ecx, 5
	movsx	edx, WORD PTR ?MissionData@@3PAUMissionDataType@@A[ecx+14]
	imul	edx, 1000				; 000003e8H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+428]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 986  : 			if (flight->BuildMission(&newmis) == PRET_SUCCESS)

	lea	ecx, DWORD PTR _newmis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+732]
	call	edx
	cmp	eax, 3
	jne	SHORT $LN23@BuildPacka

; 987  : 			{
; 988  : 				targetd = RecordFlightAddition(flight, mis, targetd);

	mov	eax, DWORD PTR _targetd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition
	mov	DWORD PTR _targetd$[ebp], eax

; 989  : 				flight->SetUnitMissionTarget(GetMainFlightID());

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetMainFlightID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax

; 990  : 			}
; 991  : 			else {

	jmp	SHORT $LN25@BuildPacka
$LN23@BuildPacka:

; 992  : 				CancelFlight((Flight)flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight
$LN25@BuildPacka:

; 993  : 			}
; 994  : 		}
; 995  : #ifdef KEV_ADEBUG
; 996  : 		else
; 997  : 			MonoPrint("Failed to find SEAD Escort!\n");
; 998  : #endif
; 999  : 	}
; 1000 : 
; 1001 : 	// Marco edit - We want Escort regardless of threat
; 1002 : 	if ((package_flags & AMIS_ADDESCORT) ) // && mis->vs && TeamInfo[mis->vs]->atm->averageCAStrength > aa_strength)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 16					; 00000010H
	je	$LN21@BuildPacka

; 1003 : 	{
; 1004 : 		// Add ESCORT directly
; 1005 : 		newmis = *mis;

	mov	ecx, 19					; 00000013H
	mov	esi, DWORD PTR _mis$[ebp]
	lea	edi, DWORD PTR _newmis$[ebp]
	rep movsd

; 1006 : 		// RV - Biker - If we have no mission type give 50% sead escort 50% fighter escort
; 1007 : 		if (escort_type != AMIS_NONE)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+376]
	test	edx, edx
	je	SHORT $LN20@BuildPacka

; 1008 : 		newmis.mission = escort_type;	// 2001-11-10 Modified by M.N. use requested escort type

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+376]
	mov	BYTE PTR _newmis$[ebp+60], cl

; 1009 : 		else {

	jmp	SHORT $LN19@BuildPacka
$LN20@BuildPacka:

; 1010 : 			if (rand()&1) {

	call	_rand
	and	eax, 1
	je	SHORT $LN18@BuildPacka

; 1011 : 				newmis.mission = AMIS_SEADESCORT;

	mov	BYTE PTR _newmis$[ebp+60], 12		; 0000000cH

; 1012 : 			}
; 1013 : 			else {

	jmp	SHORT $LN19@BuildPacka
$LN18@BuildPacka:

; 1014 : 				newmis.mission = AMIS_ESCORT;

	mov	BYTE PTR _newmis$[ebp+60], 10		; 0000000aH
$LN19@BuildPacka:

; 1015 : 			}
; 1016 : 		}
; 1017 : 				
; 1018 : 		newmis.targetID = element[0];

	mov	edx, 8
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+264]
	mov	edx, DWORD PTR [eax+edx+268]
	mov	DWORD PTR _newmis$[ebp+8], ecx
	mov	DWORD PTR _newmis$[ebp+12], edx

; 1019 : 		newmis.target_num = 255;

	mov	eax, 255				; 000000ffH
	mov	WORD PTR _newmis$[ebp+50], ax

; 1020 : 		newmis.tot = mis_request.tot;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 1021 : 		newmis.caps |= MissionData[newmis.mission].caps;

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+24]
	movsx	edx, WORD PTR _newmis$[ebp+48]
	or	edx, ecx
	mov	WORD PTR _newmis$[ebp+48], dx

; 1022 : 		newmis.aircraft = MissionData[newmis.mission].str;

	movzx	eax, BYTE PTR _newmis$[ebp+60]
	shl	eax, 5
	mov	cl, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+18]
	mov	BYTE PTR _newmis$[ebp+61], cl

; 1023 : 		newmis.priority = GetPriority(&newmis);

	lea	edx, DWORD PTR _newmis$[ebp]
	push	edx
	call	?GetPriority@@YAHPAVMissionRequestClass@@@Z ; GetPriority
	add	esp, 4
	mov	WORD PTR _newmis$[ebp+56], ax

; 1024 : 		//		newmis.flags = REQF_USERESERVES;
; 1025 : 		flight = AttachFlight(&newmis,this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newmis$[ebp]
	push	ecx
	call	?AttachFlight@@YAPAVFlightClass@@PAVMissionRequestClass@@PAVPackageClass@@@Z ; AttachFlight
	add	esp, 8
	mov	DWORD PTR _flight$[ebp], eax

; 1026 : 		if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN21@BuildPacka

; 1027 : 		{
; 1028 : 			newmis.tot = mis_request.tot + (CampaignTime)(MissionData[newmis.mission].separation)*CampaignSeconds;

	movzx	edx, BYTE PTR _newmis$[ebp+60]
	shl	edx, 5
	movsx	eax, WORD PTR ?MissionData@@3PAUMissionDataType@@A[edx+14]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+428]
	mov	DWORD PTR _newmis$[ebp+36], eax

; 1029 : 			if (flight->BuildMission(&newmis) == PRET_SUCCESS)

	lea	edx, DWORD PTR _newmis$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+732]
	call	eax
	cmp	eax, 3
	jne	SHORT $LN15@BuildPacka

; 1030 : 			{
; 1031 : 				targetd = RecordFlightAddition(flight, mis, targetd);

	mov	ecx, DWORD PTR _targetd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mis$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordFlightAddition@PackageClass@@QAEHPAVFlightClass@@PAVMissionRequestClass@@H@Z ; PackageClass::RecordFlightAddition
	mov	DWORD PTR _targetd$[ebp], eax

; 1032 : 				flight->SetUnitMissionTarget(GetMainFlightID());

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetMainFlightID
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax

; 1033 : 			}
; 1034 : 			else{

	jmp	SHORT $LN21@BuildPacka
$LN15@BuildPacka:

; 1035 : 				CancelFlight((Flight)flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelFlight@PackageClass@@QAEXPAVFlightClass@@@Z ; PackageClass::CancelFlight
$LN21@BuildPacka:

; 1036 : 			}
; 1037 : 		}
; 1038 : 	}
; 1039 : 
; 1040 : 
; 1041 : 	if (package_flags & AMIS_ADDBARCAP)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	and	eax, 64					; 00000040H
	je	$LN13@BuildPacka

; 1042 : 	{
; 1043 : 		// Request and enemy BARCAP mission
; 1044 : 		newmis.requesterID = Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], edx
	mov	DWORD PTR _newmis$[ebp+4], eax

; 1045 : 		newmis.targetID = GetMainFlightID();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetMainFlightID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp+8], edx
	mov	DWORD PTR _newmis$[ebp+12], eax

; 1046 : 		newmis.vs = GetTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _newmis$[ebp+33], al

; 1047 : 		newmis.tot = mis_request.tot - 240 + (rand()%120 * CampaignSeconds);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+428]
	call	_rand
	cdq
	mov	ecx, 120				; 00000078H
	idiv	ecx
	imul	edx, 1000				; 000003e8H
	lea	edx, DWORD PTR [esi+edx-240]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 1048 : 		newmis.tot_type = TYPE_EQ;

	mov	BYTE PTR _newmis$[ebp+58], 3

; 1049 : 		newmis.tx = mis->tx;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	cx, WORD PTR [eax+40]
	mov	WORD PTR _newmis$[ebp+40], cx

; 1050 : 		newmis.ty = mis->ty;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+42]
	mov	WORD PTR _newmis$[ebp+42], ax

; 1051 : 		newmis.match_strength = aa_strength;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+468]
	mov	WORD PTR _newmis$[ebp+54], dx

; 1052 : 		newmis.mission = AMIS_BARCAP;

	mov	BYTE PTR _newmis$[ebp+60], 1

; 1053 : 		newmis.roe_check = ROE_AIR_ENGAGE;

	mov	BYTE PTR _newmis$[ebp+63], 4

; 1054 : 		newmis.priority = mis->priority / 5;

	mov	eax, DWORD PTR _mis$[ebp]
	movsx	eax, WORD PTR [eax+56]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	WORD PTR _newmis$[ebp+56], ax

; 1055 : 		if (MissionData[mis_request.mission].skill == ARO_GA)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+452]
	shl	eax, 5
	movzx	ecx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[eax+2]
	cmp	ecx, 4
	jne	SHORT $LN12@BuildPacka

; 1056 : 			newmis.context = enemyCASAircraftPresent;

	mov	BYTE PTR _newmis$[ebp+62], 19		; 00000013H

; 1057 : 		else

	jmp	SHORT $LN11@BuildPacka
$LN12@BuildPacka:

; 1058 : 			newmis.context = enemyStrikesExpected;

	mov	BYTE PTR _newmis$[ebp+62], 14		; 0000000eH
$LN11@BuildPacka:

; 1059 : 		newmis.flags = REQF_NEEDRESPONSE | REQF_ONETRY;

	mov	DWORD PTR _newmis$[ebp+44], 260		; 00000104H

; 1060 : 		if (mis->flags & REQF_PART_OF_ACTION)

	mov	edx, DWORD PTR _mis$[ebp]
	mov	eax, DWORD PTR [edx+44]
	and	eax, 1024				; 00000400H
	je	SHORT $LN10@BuildPacka

; 1061 : 			newmis.flags |= REQF_PART_OF_ACTION;

	mov	ecx, DWORD PTR _newmis$[ebp+44]
	or	ecx, 1024				; 00000400H
	mov	DWORD PTR _newmis$[ebp+44], ecx
$LN10@BuildPacka:

; 1062 : 		newmis.action_type = mis->action_type;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	al, BYTE PTR [edx+59]
	mov	BYTE PTR _newmis$[ebp+59], al

; 1063 : 		newmis.aircraft = 2*flights;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+345]
	shl	edx, 1
	mov	BYTE PTR _newmis$[ebp+61], dl

; 1064 : 		if (newmis.aircraft > 4)

	movzx	eax, BYTE PTR _newmis$[ebp+61]
	cmp	eax, 4
	jle	SHORT $LN9@BuildPacka

; 1065 : 			newmis.aircraft = 4;		

	mov	BYTE PTR _newmis$[ebp+61], 4
$LN9@BuildPacka:

; 1066 : 		newmis.RequestEnemyMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestEnemyMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestEnemyMission

; 1067 : 		wait_for |= AMIS_ADDBARCAP;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+346]
	or	edx, 64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+346], dx

; 1068 : 		wait_cycles = (uchar)PACKAGE_CYCLES_TO_WAIT;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR ?PACKAGE_CYCLES_TO_WAIT@@3FA
	mov	BYTE PTR [ecx+344], dl
$LN13@BuildPacka:

; 1069 : #ifdef DEBUG
; 1070 : 		gBARCAPrequested++;
; 1071 : #endif
; 1072 : 	}
; 1073 : 	if (package_flags & AMIS_ADDSWEEP)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	and	ecx, 128				; 00000080H
	je	$LN8@BuildPacka

; 1074 : 	{
; 1075 : 		// Request an enemy Sweep mission
; 1076 : 		newmis.requesterID = Id();

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp], ecx
	mov	DWORD PTR _newmis$[ebp+4], edx

; 1077 : 		newmis.targetID = GetMainFlightID();

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMainFlightID@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetMainFlightID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newmis$[ebp+8], ecx
	mov	DWORD PTR _newmis$[ebp+12], edx

; 1078 : 		newmis.vs = GetTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	BYTE PTR _newmis$[ebp+33], al

; 1079 : 		newmis.tot = mis_request.tot - 60 + (rand()%120 * CampaignSeconds);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+428]
	call	_rand
	cdq
	mov	ecx, 120				; 00000078H
	idiv	ecx
	imul	edx, 1000				; 000003e8H
	lea	edx, DWORD PTR [esi+edx-60]
	mov	DWORD PTR _newmis$[ebp+36], edx

; 1080 : 		newmis.tot_type = TYPE_LE;

	mov	BYTE PTR _newmis$[ebp+58], 2

; 1081 : 		newmis.tx = mis->tx;

	mov	eax, DWORD PTR _mis$[ebp]
	mov	cx, WORD PTR [eax+40]
	mov	WORD PTR _newmis$[ebp+40], cx

; 1082 : 		newmis.ty = mis->ty;

	mov	edx, DWORD PTR _mis$[ebp]
	mov	ax, WORD PTR [edx+42]
	mov	WORD PTR _newmis$[ebp+42], ax

; 1083 : 		newmis.match_strength = aa_strength;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+468]
	mov	WORD PTR _newmis$[ebp+54], dx

; 1084 : 		newmis.mission = AMIS_SWEEP;

	mov	BYTE PTR _newmis$[ebp+60], 7

; 1085 : 		newmis.priority = 0;

	xor	eax, eax
	mov	WORD PTR _newmis$[ebp+56], ax

; 1086 : 		newmis.roe_check = ROE_AIR_ENGAGE;

	mov	BYTE PTR _newmis$[ebp+63], 4

; 1087 : 		if (MissionData[mis_request.mission].skill == ARO_GA || MissionData[mis_request.mission].skill == ARO_REC)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+452]
	shl	edx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+2]
	cmp	eax, 4
	je	SHORT $LN6@BuildPacka
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+452]
	shl	edx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+2]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN7@BuildPacka
$LN6@BuildPacka:

; 1088 : 			newmis.context = enemyCASAircraftPresent;

	mov	BYTE PTR _newmis$[ebp+62], 19		; 00000013H
	jmp	SHORT $LN5@BuildPacka
$LN7@BuildPacka:

; 1089 : 		else if (MissionData[mis_request.mission].skill == ARO_ASW)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+452]
	shl	edx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+2]
	cmp	eax, 8
	jne	SHORT $LN4@BuildPacka

; 1090 : 			newmis.context = enemyAircraftPresent;

	mov	BYTE PTR _newmis$[ebp+62], 15		; 0000000fH

; 1091 : 		else

	jmp	SHORT $LN5@BuildPacka
$LN4@BuildPacka:

; 1092 : 			newmis.context = enemySupportAircraftPresent;

	mov	BYTE PTR _newmis$[ebp+62], 18		; 00000012H
$LN5@BuildPacka:

; 1093 : 		if (mis->flags & REQF_PART_OF_ACTION)

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	and	edx, 1024				; 00000400H
	je	SHORT $LN2@BuildPacka

; 1094 : 			newmis.flags |= REQF_PART_OF_ACTION;

	mov	eax, DWORD PTR _newmis$[ebp+44]
	or	eax, 1024				; 00000400H
	mov	DWORD PTR _newmis$[ebp+44], eax
$LN2@BuildPacka:

; 1095 : 		newmis.action_type = mis->action_type;

	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dl, BYTE PTR [ecx+59]
	mov	BYTE PTR _newmis$[ebp+59], dl

; 1096 : 		newmis.flags = REQF_NEEDRESPONSE | REQF_ONETRY;

	mov	DWORD PTR _newmis$[ebp+44], 260		; 00000104H

; 1097 : 		newmis.aircraft = 2*flights;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+345]
	shl	ecx, 1
	mov	BYTE PTR _newmis$[ebp+61], cl

; 1098 : 		if (newmis.aircraft > 4)

	movzx	edx, BYTE PTR _newmis$[ebp+61]
	cmp	edx, 4
	jle	SHORT $LN1@BuildPacka

; 1099 : 			newmis.aircraft = 4;		

	mov	BYTE PTR _newmis$[ebp+61], 4
$LN1@BuildPacka:

; 1100 : 		newmis.RequestEnemyMission();

	lea	ecx, DWORD PTR _newmis$[ebp]
	call	?RequestEnemyMission@MissionRequestClass@@QAEHXZ ; MissionRequestClass::RequestEnemyMission

; 1101 : 		wait_for |= AMIS_ADDSWEEP;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+346]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+346], cx

; 1102 : 		wait_cycles = (uchar)PACKAGE_CYCLES_TO_WAIT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR ?PACKAGE_CYCLES_TO_WAIT@@3FA
	mov	BYTE PTR [eax+344], cl
$LN8@BuildPacka:

; 1103 : #ifdef DEBUG
; 1104 : 		gSWEEPrequested++;
; 1105 : #endif
; 1106 : 	}
; 1107 : 
; 1108 : 
; 1109 : 	FindSupportFlights(mis, targetd);

	mov	edx, DWORD PTR _targetd$[ebp]
	push	edx
	mov	eax, DWORD PTR _mis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z ; PackageClass::FindSupportFlights

; 1110 : 
; 1111 : #ifdef DEBUG
; 1112 : 	if (mis->mission == AMIS_BARCAP)
; 1113 : 		gBARCAPgot++;
; 1114 : 	if (mis->mission == AMIS_SWEEP)
; 1115 : 		gSWEEPgot++;
; 1116 : #endif
; 1117 : 	return PRET_SUCCESS;

	mov	DWORD PTR $T15[ebp], 3
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newmis$[ebp]
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	eax, DWORD PTR $T15[ebp]
$LN83@BuildPacka:

; 1118 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z$0:
	lea	ecx, DWORD PTR _newmis$[ebp]
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-408]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildPackage@PackageClass@@UAEHPAVMissionRequestClass@@PAVFalconPrivateList@@@Z ENDP ; PackageClass::BuildPackage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bits$ = -1						; size = 1
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
?ReadDirty@PackageClass@@QAEXPAPAEPAJ@Z PROC		; PackageClass::ReadDirty
; _this$ = ecx

; 1993 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1994 : 	uchar bits;
; 1995 : 
; 1996 : 	//read bitfield
; 1997 : 	memcpychk(&bits, stream, sizeof(uchar), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bits$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1998 : 
; 1999 : 	if (bits & DIRTY_TANKER) {

	movzx	eax, BYTE PTR _bits$[ebp]
	and	eax, 1
	je	SHORT $LN4@ReadDirty

; 2000 : 		memcpychk(&tanker, stream, sizeof(VU_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 336				; 00000150H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN4@ReadDirty:

; 2001 : 	}
; 2002 : 
; 2003 : 	if (bits & DIRTY_PACKAGE_FLAGS)	{

	movzx	ecx, BYTE PTR _bits$[ebp]
	and	ecx, 2
	je	SHORT $LN3@ReadDirty

; 2004 : 		memcpychk(&package_flags, stream, sizeof(ulong), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN3@ReadDirty:

; 2005 : 	}
; 2006 : 
; 2007 : 	if (bits & DIRTY_TAKEOFF) {

	movzx	edx, BYTE PTR _bits$[ebp]
	and	edx, 4
	je	SHORT $LN2@ReadDirty

; 2008 : 		memcpychk(&takeoff, stream, sizeof(CampaignTime), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 364				; 0000016cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN2@ReadDirty:

; 2009 : 	}
; 2010 : 
; 2011 : 	if (bits & DIRTY_TP_TIME) {

	movzx	eax, BYTE PTR _bits$[ebp]
	and	eax, 8
	je	SHORT $LN5@ReadDirty

; 2012 : 		memcpychk(&tp_time, stream, sizeof(CampaignTime), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN5@ReadDirty:

; 2013 : 	}
; 2014 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ReadDirty@PackageClass@@QAEXPAPAEPAJ@Z ENDP		; PackageClass::ReadDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?WriteDirty@PackageClass@@QAEXPAPAE@Z PROC		; PackageClass::WriteDirty
; _this$ = ecx

; 1955 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1956 : 	//MonoPrint ("  PC %08x", dirty_package);
; 1957 : 
; 1958 : 	*(uchar *)*stream = dirty_package;

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+472]
	mov	BYTE PTR [ecx], al

; 1959 : 	*stream += sizeof (uchar);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1960 : 
; 1961 : 	if (dirty_package & DIRTY_TANKER)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+472]
	and	edx, 1
	je	SHORT $LN4@WriteDirty

; 1962 : 	{
; 1963 : 		*(VU_ID*)*stream = tanker;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [eax+340]
	mov	eax, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1964 : 		*stream += sizeof (VU_ID);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@WriteDirty:

; 1965 : 	}
; 1966 : 
; 1967 : 	if (dirty_package & DIRTY_PACKAGE_FLAGS)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+472]
	and	edx, 2
	je	SHORT $LN3@WriteDirty

; 1968 : 	{
; 1969 : 		*(ulong*)*stream = package_flags;

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	mov	DWORD PTR [ecx], eax

; 1970 : 		*stream += sizeof (ulong);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@WriteDirty:

; 1971 : 	}
; 1972 : 
; 1973 : 	if (dirty_package & DIRTY_TAKEOFF)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+472]
	and	edx, 4
	je	SHORT $LN2@WriteDirty

; 1974 : 	{
; 1975 : 		*(CampaignTime*)*stream = takeoff;

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR [ecx], eax

; 1976 : 		*stream += sizeof (CampaignTime);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@WriteDirty:

; 1977 : 	}
; 1978 : 
; 1979 : 	if (dirty_package & DIRTY_TP_TIME)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+472]
	and	edx, 8
	je	SHORT $LN1@WriteDirty

; 1980 : 	{
; 1981 : 		*(CampaignTime*)*stream = tp_time;

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+368]
	mov	DWORD PTR [ecx], eax

; 1982 : 		*stream += sizeof (CampaignTime);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx
$LN1@WriteDirty:

; 1983 : 	}
; 1984 : 
; 1985 : 	dirty_package = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+472], 0

; 1986 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?WriteDirty@PackageClass@@QAEXPAPAE@Z ENDP		; PackageClass::WriteDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bits$ = 8						; size = 4
_score$ = 12						; size = 4
?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z PROC ; PackageClass::MakePackageDirty
; _this$ = ecx

; 1937 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1938 : 	if ((!IsLocal()) || (VuState() != VU_MEM_ACTIVE)){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@MakePackag
	mov	ecx, DWORD PTR _this$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN3@MakePackag
$LN2@MakePackag:

; 1939 : 		return;

	jmp	SHORT $LN4@MakePackag
$LN3@MakePackag:

; 1940 : 	}
; 1941 : 
; 1942 : 	if (!IsAggregate() && (score != SEND_RELIABLEANDOOB)){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAggregate@CampBaseClass@@QAEHXZ	; CampBaseClass::IsAggregate
	test	eax, eax
	jne	SHORT $LN1@MakePackag
	cmp	DWORD PTR _score$[ebp], 268435456	; 10000000H
	je	SHORT $LN1@MakePackag

; 1943 : 		score = static_cast<Dirtyness>(score << 4);

	mov	ecx, DWORD PTR _score$[ebp]
	shl	ecx, 4
	mov	DWORD PTR _score$[ebp], ecx
$LN1@MakePackag:

; 1944 : 	}
; 1945 : 	dirty_package |= bits;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+472]
	or	eax, DWORD PTR _bits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+472], eax

; 1946 : 
; 1947 : 	MakeDirty (DIRTY_PACKAGE, score);

	mov	edx, DWORD PTR _score$[ebp]
	push	edx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeDirty@FalconEntity@@QAEXW4Dirty_Class@@W4Dirtyness@@@Z ; FalconEntity::MakeDirty
$LN4@MakePackag:

; 1948 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ENDP ; PackageClass::MakePackageDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?IsPackage@PackageClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPackage@PackageClass@@UAEHXZ PROC			; PackageClass::IsPackage, COMDAT
; _this$ = ecx

; 123  : 		virtual int IsPackage (void)									{	return TRUE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPackage@PackageClass@@UAEHXZ ENDP			; PackageClass::IsPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?Real@PackageClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Real@PackageClass@@UAEHXZ PROC				; PackageClass::Real, COMDAT
; _this$ = ecx

; 122  : 		virtual int Real (void)											{	return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Real@PackageClass@@UAEHXZ ENDP				; PackageClass::Real
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?Father@PackageClass@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Father@PackageClass@@UBEHXZ PROC			; PackageClass::Father, COMDAT
; _this$ = ecx

; 121  : 		virtual int Father() const										{	return 1; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?Father@PackageClass@@UBEHXZ ENDP			; PackageClass::Father
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?CheckTactic@PackageClass@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?CheckTactic@PackageClass@@UAEHH@Z PROC			; PackageClass::CheckTactic, COMDAT
; _this$ = ecx

; 120  : 		virtual int CheckTactic (int)									{	return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckTactic@PackageClass@@UAEHH@Z ENDP			; PackageClass::CheckTactic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?ChooseTactic@PackageClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ChooseTactic@PackageClass@@UAEHXZ PROC			; PackageClass::ChooseTactic, COMDAT
; _this$ = ecx

; 119  : 		virtual int ChooseTactic (void)									{	return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?ChooseTactic@PackageClass@@UAEHXZ ENDP			; PackageClass::ChooseTactic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_e$ = -8						; size = 4
_this$ = -4						; size = 4
_time$ = 8						; size = 4
?MoveUnit@PackageClass@@UAEHK@Z PROC			; PackageClass::MoveUnit
; _this$ = ecx

; 570  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 571  : 	Unit			e;
; 572  : 	e = GetFirstUnitElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _e$[ebp], eax

; 573  : 	if (!e)

	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN1@MoveUnit

; 574  : 	{
; 575  : 		// This package is gone
; 576  : 		KillUnit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?KillUnit@UnitClass@@QAEXXZ		; UnitClass::KillUnit

; 577  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@MoveUnit
$LN1@MoveUnit:

; 578  : 	}
; 579  : 
; 580  : 	return 1;

	mov	eax, 1
$LN2@MoveUnit:

; 581  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?MoveUnit@PackageClass@@UAEHK@Z ENDP			; PackageClass::MoveUnit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?Reaction@PackageClass@@UAEHPAVCampBaseClass@@HM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?Reaction@PackageClass@@UAEHPAVCampBaseClass@@HM@Z PROC	; PackageClass::Reaction, COMDAT
; _this$ = ecx

; 117  : 		virtual int Reaction (CampEntity, int, float)	{	return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Reaction@PackageClass@@UAEHPAVCampBaseClass@@HM@Z ENDP	; PackageClass::Reaction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@PackageClass@@UAEHPAVVuFullUpdateEvent@@@Z PROC	; PackageClass::Handle
; _this$ = ecx

; 563  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 564  : 	return (AirUnitClass::Handle(event));

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Handle@AirUnitClass@@UAEHPAVVuFullUpdateEvent@@@Z ; AirUnitClass::Handle

; 565  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@PackageClass@@UAEHPAVVuFullUpdateEvent@@@Z ENDP	; PackageClass::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_w$ = -12						; size = 4
_this$ = -8						; size = 4
_ew$ = -2						; size = 1
_iw$ = -1						; size = 1
_stream$ = 8						; size = 4
?Save@PackageClass@@UAEHPAPAE@Z PROC			; PackageClass::Save
; _this$ = ecx

; 459  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 460  : 	WayPoint		w;
; 461  : 	uchar			iw=0,ew=0;

	mov	BYTE PTR _iw$[ebp], 0
	mov	BYTE PTR _ew$[ebp], 0

; 462  : 
; 463  : 	AirUnitClass::Save(stream);

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@AirUnitClass@@UAEHPAPAE@Z		; AirUnitClass::Save

; 464  : 	if (save_log)

	cmp	DWORD PTR ?save_log@@3PAU_iobuf@@A, 0	; save_log
	je	SHORT $LN11@Save

; 465  : 	{
; 466  : 		fprintf (save_log, "%08x PackageClass ", *stream - start_save_stream);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR ?start_save_stream@@3HA	; start_save_stream
	push	edx
	push	OFFSET ??_C@_0BD@OHALJGBI@?$CF08x?5PackageClass?5?$AA@
	mov	eax, DWORD PTR ?save_log@@3PAU_iobuf@@A	; save_log
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 467  : 		fflush (save_log);

	mov	ecx, DWORD PTR ?save_log@@3PAU_iobuf@@A	; save_log
	push	ecx
	call	_fflush
	add	esp, 4
$LN11@Save:

; 468  : 	}
; 469  : 
; 470  : 	memcpy(*stream, &elements, sizeof(uchar)); 							*stream += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 260				; 00000104H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 471  : #ifdef CAMPTOOL
; 472  : 	if (gRenameIds)
; 473  : 	{
; 474  : 		for (int i=0; i<elements; i++)
; 475  : 			element[i].num_ = RenameTable[element[i].num_];
; 476  : 		interceptor.num_ = RenameTable[interceptor.num_];
; 477  : 		awacs.num_ = RenameTable[awacs.num_];
; 478  : 		jstar.num_ = RenameTable[jstar.num_];
; 479  : 		ecm.num_ = RenameTable[ecm.num_];
; 480  : 		tanker.num_ = RenameTable[tanker.num_];
; 481  : 		mis_request.requesterID.num_ = RenameTable[mis_request.requesterID.num_];
; 482  : 		mis_request.targetID.num_ = RenameTable[mis_request.targetID.num_];
; 483  : 	}
; 484  : #endif
; 485  : 	memcpy(*stream, element, sizeof(VU_ID)*elements);				*stream += sizeof(VU_ID)*elements; 

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+260]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+260]
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx*8]
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 486  : 	memcpy(*stream, &interceptor, sizeof(VU_ID));					*stream += sizeof(VU_ID); 

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 487  : 	memcpy(*stream, &awacs, sizeof(VU_ID));							*stream += sizeof(VU_ID); 

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 488  : 	memcpy(*stream, &jstar, sizeof(VU_ID));							*stream += sizeof(VU_ID); 

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 489  : 	memcpy(*stream, &ecm, sizeof(VU_ID));							*stream += sizeof(VU_ID); 

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 490  : 	memcpy(*stream, &tanker, sizeof(VU_ID));						*stream += sizeof(VU_ID); 

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 491  : 	memcpy(*stream, &wait_cycles, sizeof(uchar));					*stream += sizeof(uchar); 

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 344				; 00000158H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 492  : 
; 493  : 	// If this package has already been planned, we can save some room
; 494  : 	if (Final() && !wait_cycles)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@UnitClass@@QBEHXZ		; UnitClass::Final
	test	eax, eax
	je	$LN10@Save
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	jne	$LN10@Save

; 495  : 	{
; 496  : 		memcpy(*stream, &requests, sizeof(short));					*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 380				; 0000017cH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 497  : 		memcpy(*stream, &responses, sizeof(short));					*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 382				; 0000017eH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 498  : 		memcpy(*stream, &mis_request.mission, sizeof(short));		*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 452				; 000001c4H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 499  : 		memcpy(*stream, &mis_request.context, sizeof(short));		*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 454				; 000001c6H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 500  : 		memcpy(*stream, &mis_request.requesterID, sizeof(VU_ID));	*stream += sizeof(VU_ID); 	

	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 501  : 		memcpy(*stream, &mis_request.targetID, sizeof(VU_ID));		*stream += sizeof(VU_ID); 	

	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 400				; 00000190H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 502  : 		memcpy(*stream, &mis_request.tot, sizeof(CampaignTime));	*stream += sizeof(CampaignTime); 	

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 428				; 000001acH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 503  : 		memcpy(*stream, &mis_request.action_type, sizeof(uchar));	*stream += sizeof(uchar); 	

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 451				; 000001c3H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 504  : 		memcpy(*stream, &mis_request.priority, sizeof(short));		*stream += sizeof(short); 	

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 448				; 000001c0H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 505  : 	}
; 506  : 
; 507  : 	// Otherwise, we'd better save everything
; 508  : 	else

	jmp	$LN9@Save
$LN10@Save:

; 509  : 	{
; 510  : 		// Count route lengths
; 511  : 		w = ingress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	DWORD PTR _w$[ebp], ecx
$LN8@Save:

; 512  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN7@Save

; 513  : 		{
; 514  : 			iw++;

	mov	dl, BYTE PTR _iw$[ebp]
	add	dl, 1
	mov	BYTE PTR _iw$[ebp], dl

; 515  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 516  : 		}

	jmp	SHORT $LN8@Save
$LN7@Save:

; 517  : 		w = egress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	mov	DWORD PTR _w$[ebp], ecx
$LN6@Save:

; 518  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN5@Save

; 519  : 		{
; 520  : 			ew++;

	mov	dl, BYTE PTR _ew$[ebp]
	add	dl, 1
	mov	BYTE PTR _ew$[ebp], dl

; 521  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 522  : 		}

	jmp	SHORT $LN6@Save
$LN5@Save:

; 523  : 
; 524  : 		memcpy(*stream, &flights, sizeof(uchar));					*stream += sizeof(uchar); 

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 345				; 00000159H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 525  : 		memcpy(*stream, &wait_for, sizeof(short));					*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 346				; 0000015aH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 526  : 		memcpy(*stream, &iax, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 348				; 0000015cH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 527  : 		memcpy(*stream, &iay, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 350				; 0000015eH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 528  : 		memcpy(*stream, &eax, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 352				; 00000160H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 529  : 		memcpy(*stream, &eay, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 354				; 00000162H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 530  : 		memcpy(*stream, &bpx, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 356				; 00000164H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 531  : 		memcpy(*stream, &bpy, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 358				; 00000166H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 532  : 		memcpy(*stream, &tpx, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 533  : 		memcpy(*stream, &tpy, sizeof(GridIndex));					*stream += sizeof(GridIndex); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 362				; 0000016aH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 534  : 		memcpy(*stream, &takeoff, sizeof(CampaignTime));			*stream += sizeof(CampaignTime); 

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 364				; 0000016cH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 535  : 		memcpy(*stream, &tp_time, sizeof(CampaignTime));			*stream += sizeof(CampaignTime); 

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 536  : 		//		package flags need to be saved always... MOVE IN FUTURE
; 537  : 		memcpy(*stream, &package_flags, sizeof(ulong));				*stream += sizeof(ulong); 

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 372				; 00000174H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 538  : 		memcpy(*stream, &caps, sizeof(short));						*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 378				; 0000017aH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 539  : 		memcpy(*stream, &requests, sizeof(short));					*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 380				; 0000017cH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 540  : 		memcpy(*stream, &responses, sizeof(short));					*stream += sizeof(short); 

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 382				; 0000017eH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 541  : 		// save routes
; 542  : 		memcpy(*stream, &iw, sizeof(uchar));						*stream += sizeof(uchar);

	push	1
	lea	eax, DWORD PTR _iw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 543  : 		w = ingress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	DWORD PTR _w$[ebp], ecx
$LN4@Save:

; 544  : 		while (w) 

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN3@Save

; 545  : 		{
; 546  : 			w->Save(stream);

	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?Save@WayPointClass@@QAEHPAPAE@Z	; WayPointClass::Save

; 547  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 548  : 		}

	jmp	SHORT $LN4@Save
$LN3@Save:

; 549  : 		memcpy(*stream, &ew, sizeof(uchar));						*stream += sizeof(uchar);

	push	1
	lea	eax, DWORD PTR _ew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 550  : 		w = egress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	mov	DWORD PTR _w$[ebp], ecx
$LN2@Save:

; 551  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN1@Save

; 552  : 		{
; 553  : 			w->Save(stream);

	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?Save@WayPointClass@@QAEHPAPAE@Z	; WayPointClass::Save

; 554  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 555  : 		}

	jmp	SHORT $LN2@Save
$LN1@Save:

; 556  : 		memcpy(*stream, &mis_request, sizeof(MissionRequestClass)); *stream += sizeof(MissionRequestClass);

	push	76					; 0000004cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 76					; 0000004cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx
$LN9@Save:

; 557  : 	}
; 558  : 	return PackageClass::SaveSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@PackageClass@@UAEHXZ		; PackageClass::SaveSize

; 559  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@PackageClass@@UAEHPAPAE@Z ENDP			; PackageClass::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_ew$ = -20						; size = 4
_iw$ = -16						; size = 4
_this$ = -12						; size = 4
_size$ = -8						; size = 4
_w$ = -4						; size = 4
?SaveSize@PackageClass@@UAEHXZ PROC			; PackageClass::SaveSize
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	WayPoint	w;
; 381  : 	int			iw=0,ew=0,size;

	mov	DWORD PTR _iw$[ebp], 0
	mov	DWORD PTR _ew$[ebp], 0

; 382  : 
; 383  : 	size = AirUnitClass::SaveSize()
; 384  : 			+ sizeof(uchar)
; 385  : 			//		+ sizeof(VU_ID)*MAX_UNIT_CHILDREN	
; 386  : 			+ sizeof(VU_ID)*elements	
; 387  : 			+ sizeof(VU_ID)
; 388  : 			+ sizeof(VU_ID)
; 389  : 			+ sizeof(VU_ID)
; 390  : 			+ sizeof(VU_ID)
; 391  : 			+ sizeof(VU_ID)
; 392  : 			+ sizeof(uchar);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@AirUnitClass@@UAEHXZ		; AirUnitClass::SaveSize
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+260]
	lea	eax, DWORD PTR [eax+edx*8+42]
	mov	DWORD PTR _size$[ebp], eax

; 393  : 
; 394  : 	// If this package has already been planned, we can save some room
; 395  : 	if (Final() && !wait_cycles)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@UnitClass@@QBEHXZ		; UnitClass::Final
	test	eax, eax
	je	SHORT $LN10@SaveSize
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	jne	SHORT $LN10@SaveSize

; 396  : 	{
; 397  : 		size += sizeof(short)
; 398  : 				+ sizeof(short)
; 399  : 				+ sizeof(short)
; 400  : 				+ sizeof(short)
; 401  : 				+ sizeof(VU_ID)
; 402  : 				+ sizeof(VU_ID)
; 403  : 				+ sizeof(CampaignTime)
; 404  : 				+ sizeof(uchar)
; 405  : 				+ sizeof(short);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 31					; 0000001fH
	mov	DWORD PTR _size$[ebp], eax

; 406  : 	}
; 407  : 	else

	jmp	$LN9@SaveSize
$LN10@SaveSize:

; 408  : 	{
; 409  : 		// Count route lengths
; 410  : 		w = ingress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+384]
	mov	DWORD PTR _w$[ebp], edx
$LN8@SaveSize:

; 411  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN7@SaveSize

; 412  : 		{
; 413  : 			iw++;

	mov	eax, DWORD PTR _iw$[ebp]
	add	eax, 1
	mov	DWORD PTR _iw$[ebp], eax

; 414  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 415  : 		}

	jmp	SHORT $LN8@SaveSize
$LN7@SaveSize:

; 416  : 		w = egress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR _w$[ebp], edx
$LN6@SaveSize:

; 417  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN5@SaveSize

; 418  : 		{
; 419  : 			ew++;

	mov	eax, DWORD PTR _ew$[ebp]
	add	eax, 1
	mov	DWORD PTR _ew$[ebp], eax

; 420  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 421  : 		}

	jmp	SHORT $LN6@SaveSize
$LN5@SaveSize:

; 422  : 
; 423  : 		size += sizeof(uchar) 			
; 424  : 				+ sizeof(short) 			
; 425  : 				+ sizeof(GridIndex) 		
; 426  : 				+ sizeof(GridIndex) 		
; 427  : 				+ sizeof(GridIndex) 		
; 428  : 				+ sizeof(GridIndex) 		
; 429  : 				+ sizeof(GridIndex) 		
; 430  : 				+ sizeof(GridIndex) 		
; 431  : 				+ sizeof(GridIndex) 		
; 432  : 				+ sizeof(GridIndex) 		
; 433  : 				+ sizeof(CampaignTime)		
; 434  : 				+ sizeof(CampaignTime)		
; 435  : 				+ sizeof(ulong) 			
; 436  : 				+ sizeof(short) 			
; 437  : 				+ sizeof(short) 			
; 438  : 				+ sizeof(short) 	
; 439  : 				+ sizeof(uchar)
; 440  : 				+ sizeof(uchar)
; 441  : 				+ sizeof(MissionRequestClass);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 115				; 00000073H
	mov	DWORD PTR _size$[ebp], ecx

; 442  : 		w = ingress;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+384]
	mov	DWORD PTR _w$[ebp], eax
$LN4@SaveSize:

; 443  : 		while (w) 

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN3@SaveSize

; 444  : 		{
; 445  : 			size += w->SaveSize();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?SaveSize@WayPointClass@@QAEHXZ		; WayPointClass::SaveSize
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax

; 446  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 447  : 		}

	jmp	SHORT $LN4@SaveSize
$LN3@SaveSize:

; 448  : 		w = egress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR _w$[ebp], edx
$LN2@SaveSize:

; 449  : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN9@SaveSize

; 450  : 		{
; 451  : 			size += w->SaveSize();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?SaveSize@WayPointClass@@QAEHXZ		; WayPointClass::SaveSize
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax

; 452  : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 453  : 		}

	jmp	SHORT $LN2@SaveSize
$LN9@SaveSize:

; 454  : 	}
; 455  : 	return size;

	mov	eax, DWORD PTR _size$[ebp]

; 456  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@PackageClass@@UAEHXZ ENDP			; PackageClass::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_nw$ = -24						; size = 4
_w$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1PackageClass@@UAE@XZ PROC				; PackageClass::~PackageClass
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PackageClass@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PackageClass@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 348  : 	if (IsAwake())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAwake@CampBaseClass@@QAEHXZ		; CampBaseClass::IsAwake
	test	eax, eax
	je	SHORT $LN6@PackageCla

; 349  : 		Sleep();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sleep@UnitClass@@UAEHXZ		; UnitClass::Sleep
$LN6@PackageCla:

; 350  : 
; 351  : 	WayPoint		w,nw;
; 352  : 
; 353  : 	w = egress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR _w$[ebp], edx
$LN5@PackageCla:

; 354  : 	while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN4@PackageCla

; 355  : 	{
; 356  : 		nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$[ebp], eax

; 357  : 		delete w;

	mov	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 358  : 		w = nw;

	mov	edx, DWORD PTR _nw$[ebp]
	mov	DWORD PTR _w$[ebp], edx

; 359  : 	}

	jmp	SHORT $LN5@PackageCla
$LN4@PackageCla:

; 360  : 	egress = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], 0

; 361  : 	w = ingress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+384]
	mov	DWORD PTR _w$[ebp], edx
$LN3@PackageCla:

; 362  : 	while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN2@PackageCla

; 363  : 	{
; 364  : 		nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$[ebp], eax

; 365  : 		delete w;

	mov	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 366  : 		w = nw;

	mov	edx, DWORD PTR _nw$[ebp]
	mov	DWORD PTR _w$[ebp], edx

; 367  : 	}

	jmp	SHORT $LN3@PackageCla
$LN2@PackageCla:

; 368  : 	ingress = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 0

; 369  : 	if (wp_list)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+244], 0
	je	SHORT $LN1@PackageCla

; 370  : 		DisposeWayPoints();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeWayPoints@UnitClass@@QAEXXZ	; UnitClass::DisposeWayPoints
$LN1@PackageCla:

; 371  : 	wp_list = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+244], 0

; 372  : #ifdef DEBUG_COUNT
; 373  : 	gPackageCount--;
; 374  : 	mypacklist.DelObj(Id().num_);
; 375  : #endif
; 376  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AirUnitClass@@UAE@XZ			; AirUnitClass::~AirUnitClass
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1PackageClass@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AirUnitClass@@UAE@XZ			; AirUnitClass::~AirUnitClass
__unwindfunclet$??1PackageClass@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$??1PackageClass@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PackageClass@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PackageClass@@UAE@XZ ENDP				; PackageClass::~PackageClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 4
$T3 = -56						; size = 4
tv414 = -52						; size = 4
$T4 = -48						; size = 4
tv393 = -44						; size = 4
$T5 = -40						; size = 4
_w$6 = -36						; size = 4
_lw$7 = -32						; size = 4
_this$ = -28						; size = 4
_threat_stats$8 = -24					; size = 2
_threat_stats$9 = -20					; size = 2
_wps$10 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0PackageClass@@QAE@PAPAEPAJ@Z PROC			; PackageClass::PackageClass
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PackageClass@@QAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AirUnitClass@@QAE@PAPAEPAJ@Z		; AirUnitClass::AirUnitClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7PackageClass@@6B@
	push	OFFSET ??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	5
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 264				; 00000108H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 192  : 	if (load_log) {

	cmp	DWORD PTR ?load_log@@3PAU_iobuf@@A, 0	; load_log
	je	SHORT $LN24@PackageCla

; 193  : 		fprintf (load_log, "%08x PackageClass ", *stream - start_load_stream);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR ?start_load_stream@@3HA	; start_load_stream
	push	edx
	push	OFFSET ??_C@_0BD@OHALJGBI@?$CF08x?5PackageClass?5?$AA@
	mov	eax, DWORD PTR ?load_log@@3PAU_iobuf@@A	; load_log
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 194  : 		fflush (load_log);

	mov	ecx, DWORD PTR ?load_log@@3PAU_iobuf@@A	; load_log
	push	ecx
	call	_fflush
	add	esp, 4
$LN24@PackageCla:

; 195  : 	}
; 196  : 
; 197  : 	if (share_.id_.creator_ == vuLocalSession.creator_){

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN23@PackageCla

; 198  : 		PackageNS.UseId(share_.id_.num_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, OFFSET ?PackageNS@@3VIdNamespace@@A ; PackageNS
	call	?UseId@IdNamespace@@QAEXK@Z		; IdNamespace::UseId
$LN23@PackageCla:

; 199  : 		// && share_.id_.num_ > lastPackageId){
; 200  : 		//printf("does this happen?");
; 201  : 	//	lastPackageId = share_.id_.num_;
; 202  : 	}
; 203  : 
; 204  : 	memset(element,0,sizeof(VU_ID)*MAX_UNIT_CHILDREN);

	push	40					; 00000028H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 205  : 	memcpychk(&elements, stream, sizeof(uchar), rem); 

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 260				; 00000104H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 206  : 	memcpychk(element, stream, sizeof(VU_ID)*elements, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+260]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 264				; 00000108H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 207  : #ifdef DEBUG
; 208  : 	for (int i=0; i<elements; i++)
; 209  : 		element[i].num_ &= 0xffff;
; 210  : #endif
; 211  : 	memcpychk(&interceptor, stream, sizeof(VU_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 304				; 00000130H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 212  : 
; 213  : 	if (gCampDataVersion >= 7)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 7	; gCampDataVersion
	jl	SHORT $LN22@PackageCla

; 214  : 		memcpychk(&awacs, stream, sizeof(VU_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 215  : 		memcpychk(&jstar, stream, sizeof(VU_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 320				; 00000140H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 216  : 		memcpychk(&ecm, stream, sizeof(VU_ID), rem);	 

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 217  : 		memcpychk(&tanker, stream, sizeof(VU_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 336				; 00000150H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN22@PackageCla:

; 218  : 	}
; 219  : #ifdef DEBUG
; 220  : 	awacs.num_ &= 0x0000ffff;
; 221  : 	jstar.num_ &= 0x0000ffff;
; 222  : 	ecm.num_ &= 0x0000ffff;
; 223  : 	tanker.num_ &= 0x0000ffff;
; 224  : #endif
; 225  : 	memcpychk(&wait_cycles, stream, sizeof(uchar), rem); 

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 226  : 
; 227  : 	// If this package has already been planned, we can save some room
; 228  : 	if (Final() && !wait_cycles) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@UnitClass@@QBEHXZ		; UnitClass::Final
	test	eax, eax
	je	$LN21@PackageCla
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	jne	$LN21@PackageCla

; 229  : 
; 230  : 		memcpychk(&requests, stream, sizeof(short), rem); 

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 380				; 0000017cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 231  : 
; 232  : 		if (gCampDataVersion < 35)

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 35	; gCampDataVersion, 00000023H
	jge	SHORT $LN20@PackageCla

; 233  : 		{			
; 234  : 			short	threat_stats;
; 235  : 			memcpychk(&threat_stats, stream, sizeof(short), rem); 

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _threat_stats$9[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN20@PackageCla:

; 236  : 		}
; 237  : 
; 238  : 		memcpychk(&responses, stream, sizeof(short), rem);			

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 382				; 0000017eH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 239  : 		memcpychk(&mis_request.mission, stream, sizeof(short), rem);	

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 452				; 000001c4H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 240  : 		memcpychk(&mis_request.context, stream, sizeof(short), rem);	

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 454				; 000001c6H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 241  : 		memcpychk(&mis_request.requesterID, stream, sizeof(VU_ID), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 242  : 		memcpychk(&mis_request.targetID, stream, sizeof(VU_ID), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 400				; 00000190H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 243  : 
; 244  : #ifdef DEBUG
; 245  : 		mis_request.requesterID.num_ &= 0x0000ffff;
; 246  : 		mis_request.targetID.num_ &= 0x0000ffff;
; 247  : #endif
; 248  : 
; 249  : 		if (gCampDataVersion >= 26)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 26	; gCampDataVersion, 0000001aH
	jl	SHORT $LN19@PackageCla

; 250  : 			memcpychk(&mis_request.tot, stream, sizeof(CampaignTime), rem); 	

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 428				; 000001acH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
	jmp	SHORT $LN18@PackageCla
$LN19@PackageCla:

; 251  : 		}
; 252  : 		else if (gCampDataVersion >= 16){

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 16	; gCampDataVersion, 00000010H
	jl	SHORT $LN18@PackageCla

; 253  : 			memcpychk(&mis_request.tot, stream, sizeof(CampaignTime), rem); 	

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 428				; 000001acH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN18@PackageCla:

; 254  : 		}
; 255  : 		if (gCampDataVersion >= 35)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 35	; gCampDataVersion, 00000023H
	jl	SHORT $LN16@PackageCla

; 256  : 			memcpychk(&mis_request.action_type, stream, sizeof(uchar), rem);	

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 451				; 000001c3H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 257  : 		}
; 258  : 		else{

	jmp	SHORT $LN15@PackageCla
$LN16@PackageCla:

; 259  : 			mis_request.action_type = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+451], 0
$LN15@PackageCla:

; 260  : 		}
; 261  : 
; 262  : 		if (gCampDataVersion >= 41)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 41	; gCampDataVersion, 00000029H
	jl	SHORT $LN14@PackageCla

; 263  : 			memcpychk(&mis_request.priority, stream, sizeof(short), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 448				; 000001c0H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 264  : 		}
; 265  : 		else {

	jmp	SHORT $LN13@PackageCla
$LN14@PackageCla:

; 266  : 			mis_request.priority = 1;

	mov	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+448], cx
$LN13@PackageCla:

; 267  : 		}
; 268  : 
; 269  : 		ingress = NULL;			

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 0

; 270  : 		egress = NULL;	

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+388], 0

; 271  : 		package_flags = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+372], 0

; 272  : 	}
; 273  : 
; 274  : 	// Otherwise, we'd better save everything
; 275  : 	else {

	jmp	$LN12@PackageCla
$LN21@PackageCla:

; 276  : 		uchar		wps;
; 277  : 		WayPoint	w,lw;
; 278  : 
; 279  : 		memcpychk(&flights, stream, sizeof(uchar), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 345				; 00000159H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 280  : 		memcpychk(&wait_for, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 346				; 0000015aH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 281  : 		memcpychk(&iax, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 282  : 		memcpychk(&iay, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 350				; 0000015eH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 283  : 		memcpychk(&eax, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 284  : 		memcpychk(&eay, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 354				; 00000162H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 285  : 		memcpychk(&bpx, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 356				; 00000164H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 286  : 		memcpychk(&bpy, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 358				; 00000166H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 287  : 		memcpychk(&tpx, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 360				; 00000168H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 288  : 		memcpychk(&tpy, stream, sizeof(GridIndex), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 362				; 0000016aH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 289  : 		memcpychk(&takeoff, stream, sizeof(CampaignTime), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 364				; 0000016cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 290  : 		memcpychk(&tp_time, stream, sizeof(CampaignTime), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 368				; 00000170H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 291  : 		memcpychk(&package_flags, stream, sizeof(ulong), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 372				; 00000174H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 292  : 		memcpychk(&caps, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 378				; 0000017aH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 293  : 		memcpychk(&requests, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 380				; 0000017cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 294  : 
; 295  : 		if (gCampDataVersion < 35) {

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 35	; gCampDataVersion, 00000023H
	jge	SHORT $LN11@PackageCla

; 296  : 			short	threat_stats;
; 297  : 			memcpychk(&threat_stats, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _threat_stats$8[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN11@PackageCla:

; 298  : 		}
; 299  : 
; 300  : 		memcpychk(&responses, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 382				; 0000017eH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 301  : 		// Read in routes
; 302  : 		memcpychk(&wps, stream, sizeof(uchar), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wps$10[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 303  : 		ingress = lw = NULL;

	mov	DWORD PTR _lw$7[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lw$7[ebp]
	mov	DWORD PTR [eax+384], ecx
$LN10@PackageCla:

; 304  : 		
; 305  : 		while (wps) {

	movzx	edx, BYTE PTR _wps$10[ebp]
	test	edx, edx
	je	SHORT $LN9@PackageCla

; 306  : 			w = new WayPointClass(stream, rem);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN27@PackageCla
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0WayPointClass@@QAE@PAPAEPAJ@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv393[ebp], eax
	jmp	SHORT $LN28@PackageCla
$LN27@PackageCla:
	mov	DWORD PTR tv393[ebp], 0
$LN28@PackageCla:
	mov	edx, DWORD PTR tv393[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _w$6[ebp], eax

; 307  : 			if (!lw)

	cmp	DWORD PTR _lw$7[ebp], 0
	jne	SHORT $LN8@PackageCla

; 308  : 				ingress = lw = w;

	mov	ecx, DWORD PTR _w$6[ebp]
	mov	DWORD PTR _lw$7[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _lw$7[ebp]
	mov	DWORD PTR [edx+384], eax

; 309  : 			else

	jmp	SHORT $LN7@PackageCla
$LN8@PackageCla:

; 310  : 				lw->InsertWP(w);

	mov	ecx, DWORD PTR _w$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lw$7[ebp]
	call	?InsertWP@WayPointClass@@QAEXPAV1@@Z	; WayPointClass::InsertWP
$LN7@PackageCla:

; 311  : 			lw = w;

	mov	edx, DWORD PTR _w$6[ebp]
	mov	DWORD PTR _lw$7[ebp], edx

; 312  : 			wps--;

	mov	al, BYTE PTR _wps$10[ebp]
	sub	al, 1
	mov	BYTE PTR _wps$10[ebp], al

; 313  : 		}

	jmp	$LN10@PackageCla
$LN9@PackageCla:

; 314  : 
; 315  : 		memcpychk(&wps, stream, sizeof(uchar), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	lea	eax, DWORD PTR _wps$10[ebp]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 316  : 
; 317  : 		egress = lw = NULL;

	mov	DWORD PTR _lw$7[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _lw$7[ebp]
	mov	DWORD PTR [ecx+388], edx
$LN6@PackageCla:

; 318  : 		while (wps) {

	movzx	eax, BYTE PTR _wps$10[ebp]
	test	eax, eax
	je	SHORT $LN5@PackageCla

; 319  : 			w = new WayPointClass(stream, rem);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN29@PackageCla
	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@PAPAEPAJ@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv414[ebp], eax
	jmp	SHORT $LN30@PackageCla
$LN29@PackageCla:
	mov	DWORD PTR tv414[ebp], 0
$LN30@PackageCla:
	mov	eax, DWORD PTR tv414[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _w$6[ebp], ecx

; 320  : 			if (!lw)

	cmp	DWORD PTR _lw$7[ebp], 0
	jne	SHORT $LN4@PackageCla

; 321  : 				egress = lw = w;

	mov	edx, DWORD PTR _w$6[ebp]
	mov	DWORD PTR _lw$7[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lw$7[ebp]
	mov	DWORD PTR [eax+388], ecx

; 322  : 			else

	jmp	SHORT $LN3@PackageCla
$LN4@PackageCla:

; 323  : 				lw->InsertWP(w);

	mov	edx, DWORD PTR _w$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _lw$7[ebp]
	call	?InsertWP@WayPointClass@@QAEXPAV1@@Z	; WayPointClass::InsertWP
$LN3@PackageCla:

; 324  : 			lw = w;

	mov	eax, DWORD PTR _w$6[ebp]
	mov	DWORD PTR _lw$7[ebp], eax

; 325  : 			wps--;

	mov	cl, BYTE PTR _wps$10[ebp]
	sub	cl, 1
	mov	BYTE PTR _wps$10[ebp], cl

; 326  : 		}

	jmp	$LN6@PackageCla
$LN5@PackageCla:

; 327  : 
; 328  : 		if (gCampDataVersion < 35)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 35	; gCampDataVersion, 00000023H
	jge	SHORT $LN2@PackageCla

; 329  : 			// This isn't valid any more
; 330  : 			memcpychk(&mis_request, stream, 64, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 331  : 		}
; 332  : 		else {

	jmp	SHORT $LN12@PackageCla
$LN2@PackageCla:

; 333  : 			// MLR Had a CTD here while exiting Takeoff TE, 
; 334  : 			// called by LoadCampaign()->LoadUnit()->DecodeUnitData()->NewUnit()
; 335  : 			// the stream isn't long enough, trying to copy 76 bytes.  Reason unknown?
; 336  : 			memcpychk(&mis_request, stream, sizeof(MissionRequestClass), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	76					; 0000004cH
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN12@PackageCla:

; 337  : 		}
; 338  : 	}
; 339  : 	dirty_package = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+472], 0

; 340  : #ifdef DEBUG_COUNT
; 341  : 	gPackageCount++;
; 342  : 	mypacklist.AddObj(Id().num_, this);
; 343  : #endif
; 344  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AirUnitClass@@UAE@XZ			; AirUnitClass::~AirUnitClass
__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0PackageClass@@QAE@PAPAEPAJ@Z$3:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0PackageClass@@QAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PackageClass@@QAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PackageClass@@QAE@PAPAEPAJ@Z ENDP			; PackageClass::PackageClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 2
??0PackageClass@@QAE@G@Z PROC				; PackageClass::PackageClass
; _this$ = ecx

; 161  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PackageClass@@QAE@G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?PackageNS@@3VIdNamespace@@A	; PackageNS
	call	?GetIdFromNamespace@@YAKAAVIdNamespace@@@Z ; GetIdFromNamespace
	add	esp, 4
	push	eax
	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AirUnitClass@@QAE@GK@Z		; AirUnitClass::AirUnitClass
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7PackageClass@@6B@
	push	OFFSET ??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	5
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 264				; 00000108H
	push	edx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0MissionRequestClass@@QAE@XZ		; MissionRequestClass::MissionRequestClass
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 162  : 	elements = 0;		

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+260], 0

; 163  : 	c_element = 0;		

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+261], 0

; 164  : 	memset(element,0,sizeof(VU_ID)*MAX_UNIT_CHILDREN);

	push	40					; 00000028H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 264				; 00000108H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 165  : 	interceptor = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+304], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+308], edx

; 166  : 	wait_cycles = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 0

; 167  : 	flights = 0;			

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+345], 0

; 168  : 	wait_for = 0;		

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+346], dx

; 169  : 	iax = iay = 0;			

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+350], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+348], ax

; 170  : 	eax = eay = 0;			

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+354], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+352], cx

; 171  : 	bpx = bpy = 0;			

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+358], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+356], dx

; 172  : 	tpx = tpy = 0;			

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+362], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+360], ax

; 173  : 	takeoff = 0;			

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+364], 0

; 174  : 	tp_time = 0;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0

; 175  : 	caps = 0;			

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+378], cx

; 176  : 	package_flags = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0

; 177  : 	requests = 0;		

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+380], cx

; 178  : 	responses = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+382], ax

; 179  : 	aa_strength = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+468], dx

; 180  : 	ingress = NULL;			

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+384], 0

; 181  : 	egress = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+388], 0

; 182  : 	dirty_package = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+472], 0

; 183  : 	SetParent(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParent@UnitClass@@QAEXH@Z		; UnitClass::SetParent

; 184  : #ifdef DEBUG_COUNT
; 185  : 	gPackageCount++;
; 186  : 	mypacklist.AddObj(Id().num_, this);
; 187  : #endif
; 188  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0PackageClass@@QAE@G@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AirUnitClass@@UAE@XZ			; AirUnitClass::~AirUnitClass
__unwindfunclet$??0PackageClass@@QAE@G@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1MissionRequestClass@@QAE@XZ		; MissionRequestClass::~MissionRequestClass
__ehhandler$??0PackageClass@@QAE@G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PackageClass@@QAE@G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PackageClass@@QAE@G@Z ENDP				; PackageClass::PackageClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTPTime@PackageClass@@QAEXK@Z PROC			; PackageClass::SetTPTime
; _this$ = ecx

; 1925 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1926 : 	tp_time = t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+368], ecx

; 1927 : 
; 1928 : 	MakePackageDirty (DIRTY_TP_TIME, DDP[119].priority);

	mov	edx, 4
	imul	edx, 119				; 00000077H
	mov	eax, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	ecx, DWORD PTR [eax+edx]
	push	ecx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ; PackageClass::MakePackageDirty

; 1929 : 	//	MakePackageDirty (DIRTY_TP_TIME, SEND_EVENTUALLY);
; 1930 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetTPTime@PackageClass@@QAEXK@Z ENDP			; PackageClass::SetTPTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
?SetPackageFlags@PackageClass@@QAEXK@Z PROC		; PackageClass::SetPackageFlags
; _this$ = ecx

; 1901 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1902 : 	package_flags |= f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	or	ecx, DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+372], ecx

; 1903 : 
; 1904 : 	MakePackageDirty (DIRTY_PACKAGE_FLAGS, DDP[117].priority);

	mov	eax, 4
	imul	eax, 117				; 00000075H
	mov	ecx, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ; PackageClass::MakePackageDirty

; 1905 : 	//	MakePackageDirty (DIRTY_PACKAGE_FLAGS, SEND_EVENTUALLY);
; 1906 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPackageFlags@PackageClass@@QAEXK@Z ENDP		; PackageClass::SetPackageFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTakeoff@PackageClass@@QAEXK@Z PROC			; PackageClass::SetTakeoff
; _this$ = ecx

; 1913 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1914 : 	takeoff = t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+364], ecx

; 1915 : 
; 1916 : 	MakePackageDirty (DIRTY_TAKEOFF, DDP[118].priority);

	mov	edx, 4
	imul	edx, 118				; 00000076H
	mov	eax, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	ecx, DWORD PTR [eax+edx]
	push	ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ; PackageClass::MakePackageDirty

; 1917 : 	//	MakePackageDirty (DIRTY_TAKEOFF, SEND_EVENTUALLY);
; 1918 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetTakeoff@PackageClass@@QAEXK@Z ENDP			; PackageClass::SetTakeoff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetTanker@PackageClass@@QAEXVVU_ID@@@Z PROC		; PackageClass::SetTanker
; _this$ = ecx

; 1889 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1890 : 	tanker = t;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+336], ecx
	mov	edx, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR [eax+340], edx

; 1891 : 
; 1892 : 	MakePackageDirty (DIRTY_TANKER, DDP[116].priority);

	mov	eax, 4
	imul	eax, 116				; 00000074H
	mov	ecx, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakePackageDirty@PackageClass@@QAEXW4Dirty_Package@@W4Dirtyness@@@Z ; PackageClass::MakePackageDirty

; 1893 : 	//	MakePackageDirty (DIRTY_TANKER, SEND_EVENTUALLY);
; 1894 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTanker@PackageClass@@QAEXVVU_ID@@@Z ENDP		; PackageClass::SetTanker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ PROC ; PackageClass::GetMissionRequest, COMDAT
; _this$ = ecx

; 96   : 		MissionRequestClass *GetMissionRequest (void)	{ return &mis_request; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ENDP ; PackageClass::GetMissionRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetFlights@PackageClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlights@PackageClass@@QAEEXZ PROC			; PackageClass::GetFlights, COMDAT
; _this$ = ecx

; 91   : 		uchar GetFlights (void)							{ return flights; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+345]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlights@PackageClass@@QAEEXZ ENDP			; PackageClass::GetFlights
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\camptask\package.cpp
_TEXT	SEGMENT
_fac$ = -8						; size = 4
_this$ = -4						; size = 4
?GetFACFlight@PackageClass@@QAEPAVFlightClass@@XZ PROC	; PackageClass::GetFACFlight
; _this$ = ecx

; 1868 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1869 : 	Flight	fac;
; 1870 : 
; 1871 : 	if (MissionData[mis_request.mission].skill != ARO_GA)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+452]
	shl	ecx, 5
	movzx	edx, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[ecx+2]
	cmp	edx, 4
	je	SHORT $LN4@GetFACFlig

; 1872 : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN5@GetFACFlig
$LN4@GetFACFlig:

; 1873 : 
; 1874 : 	fac = (Flight) GetFirstUnitElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _fac$[ebp], eax
$LN3@GetFACFlig:

; 1875 : 	while (fac)

	cmp	DWORD PTR _fac$[ebp], 0
	je	SHORT $LN2@GetFACFlig

; 1876 : 	{
; 1877 : 		if (fac->GetUnitMission() == AMIS_FAC)

	mov	ecx, DWORD PTR _fac$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _fac$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 19					; 00000013H
	jne	SHORT $LN1@GetFACFlig

; 1878 : 			return fac;

	mov	eax, DWORD PTR _fac$[ebp]
	jmp	SHORT $LN5@GetFACFlig
$LN1@GetFACFlig:

; 1879 : 		fac = (Flight) GetNextUnitElement();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax
	mov	DWORD PTR _fac$[ebp], eax

; 1880 : 	}

	jmp	SHORT $LN3@GetFACFlig
$LN2@GetFACFlig:

; 1881 : 	return NULL;

	xor	eax, eax
$LN5@GetFACFlig:

; 1882 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFACFlight@PackageClass@@QAEPAVFlightClass@@XZ ENDP	; PackageClass::GetFACFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetRating@SquadronClass@@QAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetRating@SquadronClass@@QAEEH@Z PROC			; SquadronClass::GetRating, COMDAT
; _this$ = ecx

; 71   : 	uchar GetRating(int i) { return rating[i]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [eax+1428]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRating@SquadronClass@@QAEEH@Z ENDP			; SquadronClass::GetRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\airunit.h
;	COMDAT ?GetKias@AirUnitClass@@UBEMXZ
_TEXT	SEGMENT
tv82 = -12						; size = 4
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?GetKias@AirUnitClass@@UBEMXZ PROC			; AirUnitClass::GetKias, COMDAT
; _this$ = ecx

; 56   : 		virtual float GetKias()	const 						{ return GetVt() * FTPSEC_TO_KNOTS; }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	call	eax
	fstp	DWORD PTR tv80[ebp]
	movss	xmm0, DWORD PTR tv80[ebp]
	mulss	xmm0, DWORD PTR __real@3f17ac60
	movss	DWORD PTR tv82[ebp], xmm0
	fld	DWORD PTR tv82[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetKias@AirUnitClass@@UBEMXZ ENDP			; AirUnitClass::GetKias
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\airunit.h
;	COMDAT ?GetVt@AirUnitClass@@UBEMXZ
_TEXT	SEGMENT
tv79 = -8						; size = 4
_this$ = -4						; size = 4
?GetVt@AirUnitClass@@UBEMXZ PROC			; AirUnitClass::GetVt, COMDAT
; _this$ = ecx

; 55   : 		virtual float GetVt() const							{ return GetUnitSpeed() * KPH_TO_FPS; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+516]
	call	eax
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3f693e32
	movss	DWORD PTR tv79[ebp], xmm0
	fld	DWORD PTR tv79[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVt@AirUnitClass@@UBEMXZ ENDP			; AirUnitClass::GetVt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\airunit.h
;	COMDAT ?MaxUpdateTime@AirUnitClass@@UBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MaxUpdateTime@AirUnitClass@@UBEKXZ PROC		; AirUnitClass::MaxUpdateTime, COMDAT
; _this$ = ecx

; 50   : 		virtual CampaignTime MaxUpdateTime() const			{ return AIR_UPDATE_CHECK_INTERVAL*CampaignSeconds; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR ?AIR_UPDATE_CHECK_INTERVAL@@3FA ; AIR_UPDATE_CHECK_INTERVAL
	imul	eax, 1000				; 000003e8H
	mov	esp, ebp
	pop	ebp
	ret	0
?MaxUpdateTime@AirUnitClass@@UBEKXZ ENDP		; AirUnitClass::MaxUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?UpdateParentStatistics@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateParentStatistics@UnitClass@@UAEHXZ PROC		; UnitClass::UpdateParentStatistics, COMDAT
; _this$ = ecx

; 559  : 	virtual int UpdateParentStatistics (void)					{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateParentStatistics@UnitClass@@UAEHXZ ENDP		; UnitClass::UpdateParentStatistics
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ReorganizeUnit@UnitClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReorganizeUnit@UnitClass@@UAEXXZ PROC			; UnitClass::ReorganizeUnit, COMDAT
; _this$ = ecx

; 558  : 	virtual void ReorganizeUnit (void)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?ReorganizeUnit@UnitClass@@UAEXXZ ENDP			; UnitClass::ReorganizeUnit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetPrevUnitElement@UnitClass@@UAEPAV1@PAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?GetPrevUnitElement@UnitClass@@UAEPAV1@PAV1@@Z PROC	; UnitClass::GetPrevUnitElement, COMDAT
; _this$ = ecx

; 554  : 	virtual Unit GetPrevUnitElement (Unit)						{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPrevUnitElement@UnitClass@@UAEPAV1@PAV1@@Z ENDP	; UnitClass::GetPrevUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNextUnitElement@UnitClass@@UBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextUnitElement@UnitClass@@UBEPAV1@XZ PROC		; UnitClass::GetNextUnitElement, COMDAT
; _this$ = ecx

; 551  : 	virtual Unit GetNextUnitElement() const						{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextUnitElement@UnitClass@@UBEPAV1@XZ ENDP		; UnitClass::GetNextUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitElement@UnitClass@@UBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitElement@UnitClass@@UBEPAV1@XZ PROC		; UnitClass::GetFirstUnitElement, COMDAT
; _this$ = ecx

; 550  : 	virtual Unit GetFirstUnitElement() const					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitElement@UnitClass@@UBEPAV1@XZ ENDP		; UnitClass::GetFirstUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitParent@UnitClass@@UAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitParent@UnitClass@@UAEXPAV1@@Z PROC		; UnitClass::SetUnitParent, COMDAT
; _this$ = ecx

; 543  : 	virtual void SetUnitParent (Unit)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitParent@UnitClass@@UAEXPAV1@@Z ENDP		; UnitClass::SetUnitParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitParentID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitParentID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitParentID, COMDAT
; _this$ = ecx

; 542  : 	virtual VU_ID GetUnitParentID (void)						{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitParentID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitParentID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitParent@UnitClass@@UBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitParent@UnitClass@@UBEPAV1@XZ PROC		; UnitClass::GetUnitParent, COMDAT
; _this$ = ecx

; 541  : 	virtual Unit GetUnitParent() const							{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitParent@UnitClass@@UBEPAV1@XZ ENDP		; UnitClass::GetUnitParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?RallyUnit@UnitClass@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?RallyUnit@UnitClass@@UAEHH@Z PROC			; UnitClass::RallyUnit, COMDAT
; _this$ = ecx

; 538  : 	virtual int RallyUnit (int)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?RallyUnit@UnitClass@@UAEHH@Z ENDP			; UnitClass::RallyUnit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?BuildMission@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BuildMission@UnitClass@@UAEHXZ PROC			; UnitClass::BuildMission, COMDAT
; _this$ = ecx

; 537  : 	virtual int BuildMission (void)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?BuildMission@UnitClass@@UAEHXZ ENDP			; UnitClass::BuildMission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?CheckForSurrender@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckForSurrender@UnitClass@@UAEHXZ PROC		; UnitClass::CheckForSurrender, COMDAT
; _this$ = ecx

; 536  : 	virtual int CheckForSurrender (void)						{ return 1; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckForSurrender@UnitClass@@UAEHXZ ENDP		; UnitClass::CheckForSurrender
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetObjMovementType@UnitClass@@UAE?AW4MoveType@@PAVObjectiveClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetObjMovementType@UnitClass@@UAE?AW4MoveType@@PAVObjectiveClass@@H@Z PROC ; UnitClass::GetObjMovementType, COMDAT
; _this$ = ecx

; 535  : 	virtual MoveType GetObjMovementType (Objective, int)	{ return CampBaseClass::GetMovementType(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ ; FalconEntity::GetMovementType
	mov	esp, ebp
	pop	ebp
	ret	8
?GetObjMovementType@UnitClass@@UAE?AW4MoveType@@PAVObjectiveClass@@H@Z ENDP ; UnitClass::GetObjMovementType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitCurrentDestination@UnitClass@@UAEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetUnitCurrentDestination@UnitClass@@UAEXPAF0@Z PROC	; UnitClass::GetUnitCurrentDestination, COMDAT
; _this$ = ecx

; 534  : 	virtual void GetUnitCurrentDestination(GridIndex*, GridIndex*)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetUnitCurrentDestination@UnitClass@@UAEXPAF0@Z ENDP	; UnitClass::GetUnitCurrentDestination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitCurrentDestination@UnitClass@@UAEXFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 2
___formal$ = 12						; size = 2
?SetUnitCurrentDestination@UnitClass@@UAEXFF@Z PROC	; UnitClass::SetUnitCurrentDestination, COMDAT
; _this$ = ecx

; 533  : 	virtual void SetUnitCurrentDestination(GridIndex, GridIndex)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitCurrentDestination@UnitClass@@UAEXFF@Z ENDP	; UnitClass::SetUnitCurrentDestination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNextMoveDirection@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextMoveDirection@UnitClass@@UAEHXZ PROC		; UnitClass::GetNextMoveDirection, COMDAT
; _this$ = ecx

; 532  : 	virtual int GetNextMoveDirection (void)						{ return Here; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 8
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextMoveDirection@UnitClass@@UAEHXZ ENDP		; UnitClass::GetNextMoveDirection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ClearUnitPath@UnitClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearUnitPath@UnitClass@@UAEXXZ PROC			; UnitClass::ClearUnitPath, COMDAT
; _this$ = ecx

; 531  : 	virtual void ClearUnitPath (void)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearUnitPath@UnitClass@@UAEXXZ ENDP			; UnitClass::ClearUnitPath
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitNextMove@UnitClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetUnitNextMove@UnitClass@@UAEXXZ PROC			; UnitClass::SetUnitNextMove, COMDAT
; _this$ = ecx

; 530  : 	virtual void SetUnitNextMove (void)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetUnitNextMove@UnitClass@@UAEXXZ ENDP			; UnitClass::SetUnitNextMove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitHeading@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitHeading@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitHeading, COMDAT
; _this$ = ecx

; 529  : 	virtual int GetUnitHeading (void)							{ return Here; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 8
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitHeading@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitHeading
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitDivision@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitDivision@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitDivision, COMDAT
; _this$ = ecx

; 528  : 	virtual int GetUnitDivision (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitDivision@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitDivision
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitPosition@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitPosition@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitPosition, COMDAT
; _this$ = ecx

; 527  : 	virtual int GetUnitPosition (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitPosition@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMode@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitMode@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitMode, COMDAT
; _this$ = ecx

; 526  : 	virtual int GetUnitMode (void)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitMode@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitElement@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitElement@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitElement, COMDAT
; _this$ = ecx

; 525  : 	virtual int GetUnitElement (void) 							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitElement@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitFatigue@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitFatigue@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitFatigue, COMDAT
; _this$ = ecx

; 524  : 	virtual int GetUnitFatigue (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitFatigue@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitFatigue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitOrders@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitOrders@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitOrders, COMDAT
; _this$ = ecx

; 523  : 	virtual int GetUnitOrders (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitOrders@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitOrders
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitObjectiveID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitObjectiveID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitObjectiveID, COMDAT
; _this$ = ecx

; 522  : 	virtual VU_ID GetUnitObjectiveID (void)						{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitObjectiveID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitObjectiveID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSecondaryObjID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitSecondaryObjID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitSecondaryObjID, COMDAT
; _this$ = ecx

; 521  : 	virtual VU_ID GetUnitSecondaryObjID (void)					{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitSecondaryObjID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitSecondaryObjID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitPrimaryObjID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitPrimaryObjID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitPrimaryObjID, COMDAT
; _this$ = ecx

; 520  : 	virtual VU_ID GetUnitPrimaryObjID (void)					{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitPrimaryObjID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitPrimaryObjID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitObjective@UnitClass@@UAEPAVObjectiveClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitObjective@UnitClass@@UAEPAVObjectiveClass@@XZ PROC ; UnitClass::GetUnitObjective, COMDAT
; _this$ = ecx

; 519  : 	virtual Objective GetUnitObjective (void)					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitObjective@UnitClass@@UAEPAVObjectiveClass@@XZ ENDP ; UnitClass::GetUnitObjective
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSecondaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitSecondaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ PROC ; UnitClass::GetUnitSecondaryObj, COMDAT
; _this$ = ecx

; 518  : 	virtual Objective GetUnitSecondaryObj (void)				{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitSecondaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ ENDP ; UnitClass::GetUnitSecondaryObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitPrimaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitPrimaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ PROC ; UnitClass::GetUnitPrimaryObj, COMDAT
; _this$ = ecx

; 517  : 	virtual Objective GetUnitPrimaryObj (void)					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitPrimaryObj@UnitClass@@UAEPAVObjectiveClass@@XZ ENDP ; UnitClass::GetUnitPrimaryObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitHeading@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitHeading@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitHeading, COMDAT
; _this$ = ecx

; 516  : 	virtual void SetUnitHeading (int)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitHeading@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitHeading
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitDivision@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitDivision@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitDivision, COMDAT
; _this$ = ecx

; 515  : 	virtual void SetUnitDivision (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitDivision@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitDivision
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitPosition@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitPosition@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitPosition, COMDAT
; _this$ = ecx

; 514  : 	virtual void SetUnitPosition (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitPosition@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitMode@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitMode@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitMode, COMDAT
; _this$ = ecx

; 513  : 	virtual void SetUnitMode (int)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMode@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitFatigue@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitFatigue@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitFatigue, COMDAT
; _this$ = ecx

; 511  : 	virtual void SetUnitFatigue (int) 						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitFatigue@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitFatigue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitOrders@UnitClass@@UAEXHVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?SetUnitOrders@UnitClass@@UAEXHVVU_ID@@@Z PROC		; UnitClass::SetUnitOrders, COMDAT
; _this$ = ecx

; 510  : 	virtual void SetUnitOrders (int, VU_ID)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetUnitOrders@UnitClass@@UAEXHVVU_ID@@@Z ENDP		; UnitClass::SetUnitOrders
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitOrders@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitOrders@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitOrders, COMDAT
; _this$ = ecx

; 509  : 	virtual void SetUnitOrders (int)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitOrders@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitOrders
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitObjective@UnitClass@@UAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetUnitObjective@UnitClass@@UAEXVVU_ID@@@Z PROC	; UnitClass::SetUnitObjective, COMDAT
; _this$ = ecx

; 508  : 	virtual void SetUnitObjective (VU_ID)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitObjective@UnitClass@@UAEXVVU_ID@@@Z ENDP	; UnitClass::SetUnitObjective
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitSecondaryObj@UnitClass@@UAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetUnitSecondaryObj@UnitClass@@UAEXVVU_ID@@@Z PROC	; UnitClass::SetUnitSecondaryObj, COMDAT
; _this$ = ecx

; 507  : 	virtual void SetUnitSecondaryObj (VU_ID)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitSecondaryObj@UnitClass@@UAEXVVU_ID@@@Z ENDP	; UnitClass::SetUnitSecondaryObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitPrimaryObj@UnitClass@@UAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetUnitPrimaryObj@UnitClass@@UAEXVVU_ID@@@Z PROC	; UnitClass::SetUnitPrimaryObj, COMDAT
; _this$ = ecx

; 506  : 	virtual void SetUnitPrimaryObj (VU_ID)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitPrimaryObj@UnitClass@@UAEXVVU_ID@@@Z ENDP	; UnitClass::SetUnitPrimaryObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetLastResupply@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastResupply@UnitClass@@UAEHXZ PROC			; UnitClass::GetLastResupply, COMDAT
; _this$ = ecx

; 497  : 	virtual int GetLastResupply (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastResupply@UnitClass@@UAEHXZ ENDP			; UnitClass::GetLastResupply
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetLastResupplyTime@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastResupplyTime@UnitClass@@UAEKXZ PROC		; UnitClass::GetLastResupplyTime, COMDAT
; _this$ = ecx

; 496  : 	virtual CampaignTime GetLastResupplyTime (void)				{ return TheCampaign.CurrentTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastResupplyTime@UnitClass@@UAEKXZ ENDP		; UnitClass::GetLastResupplyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitStores@UnitClass@@UAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?GetUnitStores@UnitClass@@UAEEH@Z PROC			; UnitClass::GetUnitStores, COMDAT
; _this$ = ecx

; 495  : 	virtual uchar GetUnitStores (int)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitStores@UnitClass@@UAEEH@Z ENDP			; UnitClass::GetUnitStores
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetSquadronFuel@UnitClass@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSquadronFuel@UnitClass@@UAEJXZ PROC			; UnitClass::GetSquadronFuel, COMDAT
; _this$ = ecx

; 494  : 	virtual long GetSquadronFuel (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSquadronFuel@UnitClass@@UAEJXZ ENDP			; UnitClass::GetSquadronFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMorale@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitMorale@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitMorale, COMDAT
; _this$ = ecx

; 493  : 	virtual int GetUnitMorale (void) 							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitMorale@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitMorale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSupply@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitSupply@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitSupply, COMDAT
; _this$ = ecx

; 492  : 	virtual int GetUnitSupply (void) 							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitSupply@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitSupply
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSpecialty@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitSpecialty@UnitClass@@UAEHXZ PROC		; UnitClass::GetUnitSpecialty, COMDAT
; _this$ = ecx

; 491  : 	virtual int GetUnitSpecialty (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitSpecialty@UnitClass@@UAEHXZ ENDP		; UnitClass::GetUnitSpecialty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetLastResupplyTime@UnitClass@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLastResupplyTime@UnitClass@@UAEXK@Z PROC		; UnitClass::SetLastResupplyTime, COMDAT
; _this$ = ecx

; 490  : 	virtual void SetLastResupplyTime (CampaignTime)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLastResupplyTime@UnitClass@@UAEXK@Z ENDP		; UnitClass::SetLastResupplyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetLastResupply@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLastResupply@UnitClass@@UAEXH@Z PROC		; UnitClass::SetLastResupply, COMDAT
; _this$ = ecx

; 489  : 	virtual void SetLastResupply (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLastResupply@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetLastResupply
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitStores@UnitClass@@UAEXHE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
?SetUnitStores@UnitClass@@UAEXHE@Z PROC			; UnitClass::SetUnitStores, COMDAT
; _this$ = ecx

; 488  : 	virtual void SetUnitStores (int, uchar)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitStores@UnitClass@@UAEXHE@Z ENDP			; UnitClass::SetUnitStores
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetSquadronFuel@UnitClass@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetSquadronFuel@UnitClass@@UAEXJ@Z PROC		; UnitClass::SetSquadronFuel, COMDAT
; _this$ = ecx

; 487  : 	virtual void SetSquadronFuel (long)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSquadronFuel@UnitClass@@UAEXJ@Z ENDP		; UnitClass::SetSquadronFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitMorale@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitMorale@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitMorale, COMDAT
; _this$ = ecx

; 486  : 	virtual void SetUnitMorale (int)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMorale@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitMorale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitSupply@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitSupply@UnitClass@@UAEXH@Z PROC			; UnitClass::SetUnitSupply, COMDAT
; _this$ = ecx

; 485  : 	virtual void SetUnitSupply (int)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitSupply@UnitClass@@UAEXH@Z ENDP			; UnitClass::SetUnitSupply
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitSpecialty@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitSpecialty@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitSpecialty, COMDAT
; _this$ = ecx

; 484  : 	virtual void SetUnitSpecialty (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitSpecialty@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitSpecialty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?UseFuel@UnitClass@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?UseFuel@UnitClass@@UAEXJ@Z PROC			; UnitClass::UseFuel, COMDAT
; _this$ = ecx

; 481  : 	virtual void UseFuel (long)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?UseFuel@UnitClass@@UAEXJ@Z ENDP			; UnitClass::UseFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?IncrementTime@UnitClass@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?IncrementTime@UnitClass@@UAEXK@Z PROC			; UnitClass::IncrementTime, COMDAT
; _this$ = ecx

; 480  : 	virtual void IncrementTime (CampaignTime) 				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?IncrementTime@UnitClass@@UAEXK@Z ENDP			; UnitClass::IncrementTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?BuildMission@UnitClass@@UAEHPAVMissionRequestClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?BuildMission@UnitClass@@UAEHPAVMissionRequestClass@@@Z PROC ; UnitClass::BuildMission, COMDAT
; _this$ = ecx

; 479  : 	virtual int BuildMission(MissionRequestClass*)			{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?BuildMission@UnitClass@@UAEHPAVMissionRequestClass@@@Z ENDP ; UnitClass::BuildMission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetKnownEmitters@UnitClass@@UAEPAVFalconPrivateList@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetKnownEmitters@UnitClass@@UAEPAVFalconPrivateList@@XZ PROC ; UnitClass::GetKnownEmitters, COMDAT
; _this$ = ecx

; 478  : 	virtual F4PFList GetKnownEmitters (void)					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetKnownEmitters@UnitClass@@UAEPAVFalconPrivateList@@XZ ENDP ; UnitClass::GetKnownEmitters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ETA@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ETA@UnitClass@@UAEKXZ PROC				; UnitClass::ETA, COMDAT
; _this$ = ecx

; 477  : 	virtual CampaignTime ETA (void)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?ETA@UnitClass@@UAEKXZ ENDP				; UnitClass::ETA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?DumpWeapons@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DumpWeapons@UnitClass@@UAEHXZ PROC			; UnitClass::DumpWeapons, COMDAT
; _this$ = ecx

; 476  : 	virtual int DumpWeapons (void)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?DumpWeapons@UnitClass@@UAEHXZ ENDP			; UnitClass::DumpWeapons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?LoadWeapons@UnitClass@@UAEHPAXPAEW4MoveType@@HHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
?LoadWeapons@UnitClass@@UAEHPAXPAEW4MoveType@@HHH@Z PROC ; UnitClass::LoadWeapons, COMDAT
; _this$ = ecx

; 475  : 	virtual int LoadWeapons (void*, uchar*, MoveType, int, int, int)	{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?LoadWeapons@UnitClass@@UAEHPAXPAEW4MoveType@@HHH@Z ENDP ; UnitClass::LoadWeapons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitAirbaseID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitAirbaseID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitAirbaseID, COMDAT
; _this$ = ecx

; 474  : 	virtual VU_ID GetUnitAirbaseID (void)						{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitAirbaseID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitAirbaseID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitAirbase@UnitClass@@UAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitAirbase@UnitClass@@UAEPAVCampBaseClass@@XZ PROC	; UnitClass::GetUnitAirbase, COMDAT
; _this$ = ecx

; 473  : 	virtual CampEntity GetUnitAirbase (void)					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitAirbase@UnitClass@@UAEPAVCampBaseClass@@XZ ENDP	; UnitClass::GetUnitAirbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSquadronID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitSquadronID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitSquadronID, COMDAT
; _this$ = ecx

; 472  : 	virtual VU_ID GetUnitSquadronID (void)						{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitSquadronID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSquadron@UnitClass@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitSquadron@UnitClass@@UAEPAV1@XZ PROC		; UnitClass::GetUnitSquadron, COMDAT
; _this$ = ecx

; 471  : 	virtual Unit GetUnitSquadron (void)							{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitSquadron@UnitClass@@UAEPAV1@XZ ENDP		; UnitClass::GetUnitSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitTOT@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitTOT@UnitClass@@UAEKXZ PROC			; UnitClass::GetUnitTOT, COMDAT
; _this$ = ecx

; 470  : 	virtual CampaignTime GetUnitTOT (void)						{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitTOT@UnitClass@@UAEKXZ ENDP			; UnitClass::GetUnitTOT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMissionID@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitMissionID@UnitClass@@UAEHXZ PROC		; UnitClass::GetUnitMissionID, COMDAT
; _this$ = ecx

; 469  : 	virtual int GetUnitMissionID (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitMissionID@UnitClass@@UAEHXZ ENDP		; UnitClass::GetUnitMissionID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMissionTargetID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetUnitMissionTargetID@UnitClass@@UAE?AVVU_ID@@XZ PROC	; UnitClass::GetUnitMissionTargetID, COMDAT
; _this$ = ecx

; 468  : 	virtual VU_ID GetUnitMissionTargetID (void)					{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitMissionTargetID@UnitClass@@UAE?AVVU_ID@@XZ ENDP	; UnitClass::GetUnitMissionTargetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMissionTarget@UnitClass@@UAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitMissionTarget@UnitClass@@UAEPAVCampBaseClass@@XZ PROC ; UnitClass::GetUnitMissionTarget, COMDAT
; _this$ = ecx

; 467  : 	virtual CampEntity GetUnitMissionTarget (void)				{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitMissionTarget@UnitClass@@UAEPAVCampBaseClass@@XZ ENDP ; UnitClass::GetUnitMissionTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitPriority@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitPriority@UnitClass@@UAEHXZ PROC			; UnitClass::GetUnitPriority, COMDAT
; _this$ = ecx

; 466  : 	virtual int GetUnitPriority (void)							{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitPriority@UnitClass@@UAEHXZ ENDP			; UnitClass::GetUnitPriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitCurrentRole@UnitClass@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitCurrentRole@UnitClass@@UBEHXZ PROC		; UnitClass::GetUnitCurrentRole, COMDAT
; _this$ = ecx

; 465  : 	virtual int GetUnitCurrentRole() const						{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitCurrentRole@UnitClass@@UBEHXZ ENDP		; UnitClass::GetUnitCurrentRole
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitNormalRole@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitNormalRole@UnitClass@@UAEHXZ PROC		; UnitClass::GetUnitNormalRole, COMDAT
; _this$ = ecx

; 464  : 	virtual int GetUnitNormalRole (void)						{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitNormalRole@UnitClass@@UAEHXZ ENDP		; UnitClass::GetUnitNormalRole
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitMission@UnitClass@@UAE?AW4MissionTypeEnum@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitMission@UnitClass@@UAE?AW4MissionTypeEnum@@XZ PROC ; UnitClass::GetUnitMission, COMDAT
; _this$ = ecx

; 463  : 	virtual MissionTypeEnum GetUnitMission (void)							{ return (MissionTypeEnum)0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitMission@UnitClass@@UAE?AW4MissionTypeEnum@@XZ ENDP ; UnitClass::GetUnitMission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetBurntFuel@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBurntFuel@UnitClass@@UAEHXZ PROC			; UnitClass::GetBurntFuel, COMDAT
; _this$ = ecx

; 462  : 	virtual int GetBurntFuel (void)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBurntFuel@UnitClass@@UAEHXZ ENDP			; UnitClass::GetBurntFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetAirTarget@UnitClass@@UAEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAirTarget@UnitClass@@UAEPAVFalconEntity@@XZ PROC	; UnitClass::GetAirTarget, COMDAT
; _this$ = ecx

; 461  : 	virtual FalconEntity* GetAirTarget (void)					{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAirTarget@UnitClass@@UAEPAVFalconEntity@@XZ ENDP	; UnitClass::GetAirTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetAirTargetID@UnitClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAirTargetID@UnitClass@@UAE?AVVU_ID@@XZ PROC		; UnitClass::GetAirTargetID, COMDAT
; _this$ = ecx

; 460  : 	virtual VU_ID GetAirTargetID (void)							{ return FalconNullId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAirTargetID@UnitClass@@UAE?AVVU_ID@@XZ ENDP		; UnitClass::GetAirTargetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetCombatTime@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCombatTime@UnitClass@@UAEKXZ PROC			; UnitClass::GetCombatTime, COMDAT
; _this$ = ecx

; 459  : 	virtual CampaignTime GetCombatTime (void)					{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCombatTime@UnitClass@@UAEKXZ ENDP			; UnitClass::GetCombatTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetMoveTime@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMoveTime@UnitClass@@UAEKXZ PROC			; UnitClass::GetMoveTime, COMDAT
; _this$ = ecx

; 458  : 	virtual CampaignTime GetMoveTime (void)						{ return TheCampaign.CurrentTime - last_check; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	sub	ecx, DWORD PTR [eax+184]
	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMoveTime@UnitClass@@UAEKXZ ENDP			; UnitClass::GetMoveTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNumberOfLoadouts@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumberOfLoadouts@UnitClass@@UAEHXZ PROC		; UnitClass::GetNumberOfLoadouts, COMDAT
; _this$ = ecx

; 457  : 	virtual int GetNumberOfLoadouts (void)						{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumberOfLoadouts@UnitClass@@UAEHXZ ENDP		; UnitClass::GetNumberOfLoadouts
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetLoadout@UnitClass@@UAEXPAULoadoutStruct@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetLoadout@UnitClass@@UAEXPAULoadoutStruct@@H@Z PROC	; UnitClass::SetLoadout, COMDAT
; _this$ = ecx

; 456  : 	virtual void SetLoadout (LoadoutStruct*, int)	{ ShiWarning("Shouldn't be here"); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetLoadout@UnitClass@@UAEXPAULoadoutStruct@@H@Z ENDP	; UnitClass::SetLoadout
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitAirbase@UnitClass@@UAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetUnitAirbase@UnitClass@@UAEXVVU_ID@@@Z PROC		; UnitClass::SetUnitAirbase, COMDAT
; _this$ = ecx

; 455  : 	virtual void SetUnitAirbase (VU_ID)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitAirbase@UnitClass@@UAEXVVU_ID@@@Z ENDP		; UnitClass::SetUnitAirbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitSquadron@UnitClass@@UAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetUnitSquadron@UnitClass@@UAEXVVU_ID@@@Z PROC		; UnitClass::SetUnitSquadron, COMDAT
; _this$ = ecx

; 454  : 	virtual void SetUnitSquadron (VU_ID)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitSquadron@UnitClass@@UAEXVVU_ID@@@Z ENDP		; UnitClass::SetUnitSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitTOT@UnitClass@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitTOT@UnitClass@@UAEXK@Z PROC			; UnitClass::SetUnitTOT, COMDAT
; _this$ = ecx

; 453  : 	virtual void SetUnitTOT (CampaignTime)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitTOT@UnitClass@@UAEXK@Z ENDP			; UnitClass::SetUnitTOT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitMissionTarget@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitMissionTarget@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitMissionTarget, COMDAT
; _this$ = ecx

; 452  : 	virtual void SetUnitMissionTarget (int)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMissionTarget@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitMissionTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitMissionID@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitMissionID@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitMissionID, COMDAT
; _this$ = ecx

; 451  : 	virtual void SetUnitMissionID (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMissionID@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitMissionID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitPriority@UnitClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitPriority@UnitClass@@UAEXH@Z PROC		; UnitClass::SetUnitPriority, COMDAT
; _this$ = ecx

; 450  : 	virtual void SetUnitPriority (int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitPriority@UnitClass@@UAEXH@Z ENDP		; UnitClass::SetUnitPriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitRole@UnitClass@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?SetUnitRole@UnitClass@@UAEXE@Z PROC			; UnitClass::SetUnitRole, COMDAT
; _this$ = ecx

; 449  : 	virtual void SetUnitRole (uchar)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitRole@UnitClass@@UAEXE@Z ENDP			; UnitClass::SetUnitRole
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitMission@UnitClass@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?SetUnitMission@UnitClass@@UAEXE@Z PROC			; UnitClass::SetUnitMission, COMDAT
; _this$ = ecx

; 448  : 	virtual void SetUnitMission (uchar)						{}			

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMission@UnitClass@@UAEXE@Z ENDP			; UnitClass::SetUnitMission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetBurntFuel@UnitClass@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetBurntFuel@UnitClass@@UAEXJ@Z PROC			; UnitClass::SetBurntFuel, COMDAT
; _this$ = ecx

; 447  : 	virtual void SetBurntFuel (long)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBurntFuel@UnitClass@@UAEXJ@Z ENDP			; UnitClass::SetBurntFuel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetCombatTime@UnitClass@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetCombatTime@UnitClass@@UAEXK@Z PROC			; UnitClass::SetCombatTime, COMDAT
; _this$ = ecx

; 446  : 	virtual void SetCombatTime (CampaignTime)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCombatTime@UnitClass@@UAEXK@Z ENDP			; UnitClass::SetCombatTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitLastMove@UnitClass@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetUnitLastMove@UnitClass@@UAEXK@Z PROC		; UnitClass::SetUnitLastMove, COMDAT
; _this$ = ecx

; 445  : 	virtual void SetUnitLastMove (CampaignTime)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitLastMove@UnitClass@@UAEXK@Z ENDP		; UnitClass::SetUnitLastMove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetNumVehicles@UnitClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vg$ = 8						; size = 4
?GetNumVehicles@UnitClass@@QAEHH@Z PROC			; UnitClass::GetNumVehicles, COMDAT
; _this$ = ecx

; 365  : 	int GetNumVehicles (int vg)						{ return (int)((roster >> (vg*2)) & 0x03); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _vg$[ebp]
	shl	ecx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+192]
	sar	eax, cl
	and	eax, 3
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumVehicles@UnitClass@@QAEHH@Z ENDP			; UnitClass::GetNumVehicles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetTarget@UnitClass@@QAEXPAVFalconEntity@@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 8
_this$ = -12						; size = 4
$T3 = -8						; size = 4
tv73 = -4						; size = 4
_e$ = 8							; size = 4
?SetTarget@UnitClass@@QAEXPAVFalconEntity@@@Z PROC	; UnitClass::SetTarget, COMDAT
; _this$ = ecx

; 359  : 	void SetTarget (FalconEntity *e)				{ target_id = (e)? e->Id() : FalconNullId; }

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN3@SetTarget
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@SetTarget
$LN3@SetTarget:
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR $T2[ebp+4], edx
	lea	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], eax
$LN4@SetTarget:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+212], eax
	mov	DWORD PTR [edx+216], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTarget@UnitClass@@QAEXPAVFalconEntity@@@Z ENDP	; UnitClass::SetTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SetUnitDestination@UnitClass@@QAEXFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
?SetUnitDestination@UnitClass@@QAEXFF@Z PROC		; UnitClass::SetUnitDestination, COMDAT
; _this$ = ecx

; 356  : 	void SetUnitDestination (GridIndex x, GridIndex y)	{ 	dest_x = (GridIndex)(x+1); dest_y = (GridIndex)(y+1); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+200], ax
	movsx	edx, WORD PTR _y$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+202], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitDestination@UnitClass@@QAEXFF@Z ENDP		; UnitClass::SetUnitDestination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetRealPosition@UnitClass@@UAEXPAM00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?GetRealPosition@UnitClass@@UAEXPAM00@Z PROC		; UnitClass::GetRealPosition, COMDAT
; _this$ = ecx

; 347  : 	virtual void GetRealPosition (float*, float*, float*) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRealPosition@UnitClass@@UAEXPAM00@Z ENDP		; UnitClass::GetRealPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SimSetOrientation@UnitClass@@UAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?SimSetOrientation@UnitClass@@UAEXMMM@Z PROC		; UnitClass::SimSetOrientation, COMDAT
; _this$ = ecx

; 346  : 	virtual void SimSetOrientation (float, float, float) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SimSetOrientation@UnitClass@@UAEXMMM@Z ENDP		; UnitClass::SimSetOrientation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SimSetLocation@UnitClass@@UAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?SimSetLocation@UnitClass@@UAEXMMM@Z PROC		; UnitClass::SimSetLocation, COMDAT
; _this$ = ecx

; 344  : 	virtual void SimSetLocation (float x, float y, float z)	{ SetPosition(x,y,z); MakeCampBaseDirty (DIRTY_POSITION, DDP[182].priority); MakeCampBaseDirty (DIRTY_ALTITUDE, DDP[183].priority); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPosition@VuEntity@@QAEXMMM@Z	; VuEntity::SetPosition
	mov	eax, 4
	imul	eax, 182				; 000000b6H
	mov	ecx, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeCampBaseDirty@CampBaseClass@@QAEXW4Dirty_Campaign_Base@@W4Dirtyness@@@Z ; CampBaseClass::MakeCampBaseDirty
	mov	eax, 4
	imul	eax, 183				; 000000b7H
	mov	ecx, DWORD PTR ?DDP@@3PAUDirtyDataClassType@@A ; DDP
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeCampBaseDirty@CampBaseClass@@QAEXW4Dirty_Campaign_Base@@W4Dirtyness@@@Z ; CampBaseClass::MakeCampBaseDirty
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SimSetLocation@UnitClass@@UAEXMMM@Z ENDP		; UnitClass::SimSetLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Final@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Final@UnitClass@@QBEHXZ PROC				; UnitClass::Final, COMDAT
; _this$ = ecx

; 330  : 	int Final () const								{ return (int)unit_flags & U_FINAL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 1048576				; 00100000H
	mov	esp, ebp
	pop	ebp
	ret	0
?Final@UnitClass@@QBEHXZ ENDP				; UnitClass::Final
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Aborted@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Aborted@UnitClass@@QBEHXZ PROC				; UnitClass::Aborted, COMDAT
; _this$ = ecx

; 321  : 	int Aborted () const								{ return (int)unit_flags & U_BROKEN; }		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 32768				; 00008000H
	mov	esp, ebp
	pop	ebp
	ret	0
?Aborted@UnitClass@@QBEHXZ ENDP				; UnitClass::Aborted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?IsDead@UnitClass@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDead@UnitClass@@UBEHXZ PROC				; UnitClass::IsDead, COMDAT
; _this$ = ecx

; 307  : 	virtual int IsDead() const						{ return (int)unit_flags & U_DEAD; }		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDead@UnitClass@@UBEHXZ ENDP				; UnitClass::IsDead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?IsUnit@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsUnit@UnitClass@@UAEHXZ PROC				; UnitClass::IsUnit, COMDAT
; _this$ = ecx

; 274  : 	virtual int IsUnit (void)										{ return TRUE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsUnit@UnitClass@@UAEHXZ ENDP				; UnitClass::IsUnit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetVehicleDeagData@UnitClass@@UAEHPAVSimInitDataClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetVehicleDeagData@UnitClass@@UAEHPAVSimInitDataClass@@H@Z PROC ; UnitClass::GetVehicleDeagData, COMDAT
; _this$ = ecx

; 266  : 	virtual int GetVehicleDeagData(SimInitDataClass*, int)			{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVehicleDeagData@UnitClass@@UAEHPAVSimInitDataClass@@H@Z ENDP ; UnitClass::GetVehicleDeagData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?SupplyUnit@UnitClass@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?SupplyUnit@UnitClass@@UAEXHH@Z PROC			; UnitClass::SupplyUnit, COMDAT
; _this$ = ecx

; 265  : 	virtual void SupplyUnit (int, int)								{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SupplyUnit@UnitClass@@UAEXHH@Z ENDP			; UnitClass::SupplyUnit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitFuelNeed@UnitClass@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?GetUnitFuelNeed@UnitClass@@UAEHH@Z PROC		; UnitClass::GetUnitFuelNeed, COMDAT
; _this$ = ecx

; 264  : 	virtual int GetUnitFuelNeed (int)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitFuelNeed@UnitClass@@UAEHH@Z ENDP		; UnitClass::GetUnitFuelNeed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitSupplyNeed@UnitClass@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?GetUnitSupplyNeed@UnitClass@@UAEHH@Z PROC		; UnitClass::GetUnitSupplyNeed, COMDAT
; _this$ = ecx

; 263  : 	virtual int GetUnitSupplyNeed (int)								{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitSupplyNeed@UnitClass@@UAEHH@Z ENDP		; UnitClass::GetUnitSupplyNeed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?CombatTime@UnitClass@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CombatTime@UnitClass@@UAEKXZ PROC			; UnitClass::CombatTime, COMDAT
; _this$ = ecx

; 262  : 	virtual CampaignTime CombatTime (void)							{ return CampaignDay; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 86400000				; 05265c00H
	mov	esp, ebp
	pop	ebp
	ret	0
?CombatTime@UnitClass@@UAEKXZ ENDP			; UnitClass::CombatTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ChooseTarget@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ChooseTarget@UnitClass@@UAEHXZ PROC			; UnitClass::ChooseTarget, COMDAT
; _this$ = ecx

; 253  : 	virtual int ChooseTarget (void)									{ return -1; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?ChooseTarget@UnitClass@@UAEHXZ ENDP			; UnitClass::ChooseTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?DetectOnMove@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DetectOnMove@UnitClass@@UAEHXZ PROC			; UnitClass::DetectOnMove, COMDAT
; _this$ = ecx

; 252  : 	virtual int DetectOnMove (void)									{ return -1; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?DetectOnMove@UnitClass@@UAEHXZ ENDP			; UnitClass::DetectOnMove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?AdjustForSupply@UnitClass@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AdjustForSupply@UnitClass@@UAEMXZ PROC			; UnitClass::AdjustForSupply, COMDAT
; _this$ = ecx

; 250  : 	virtual float AdjustForSupply(void)								{ return 1.0F; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld1
	mov	esp, ebp
	pop	ebp
	ret	0
?AdjustForSupply@UnitClass@@UAEMXZ ENDP			; UnitClass::AdjustForSupply
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?DoCombat@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoCombat@UnitClass@@UAEHXZ PROC			; UnitClass::DoCombat, COMDAT
; _this$ = ecx

; 245  : 	virtual int DoCombat (void)										{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?DoCombat@UnitClass@@UAEHXZ ENDP			; UnitClass::DoCombat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ClearDeaggregationData@UnitClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearDeaggregationData@UnitClass@@UAEXXZ PROC		; UnitClass::ClearDeaggregationData, COMDAT
; _this$ = ecx

; 242  : 	virtual void ClearDeaggregationData (void)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDeaggregationData@UnitClass@@UAEXXZ ENDP		; UnitClass::ClearDeaggregationData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?ShouldDeaggregate@UnitClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ShouldDeaggregate@UnitClass@@UAEHXZ PROC		; UnitClass::ShouldDeaggregate, COMDAT
; _this$ = ecx

; 241  : 	virtual int	ShouldDeaggregate(void)								{return TRUE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?ShouldDeaggregate@UnitClass@@UAEHXZ ENDP		; UnitClass::ShouldDeaggregate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitDeaggregationData@UnitClass@@UAEPAVUnitDeaggregationData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitDeaggregationData@UnitClass@@UAEPAVUnitDeaggregationData@@XZ PROC ; UnitClass::GetUnitDeaggregationData, COMDAT
; _this$ = ecx

; 240  : 	virtual UnitDeaggregationData* GetUnitDeaggregationData (void)	{ return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitDeaggregationData@UnitClass@@UAEPAVUnitDeaggregationData@@XZ ENDP ; UnitClass::GetUnitDeaggregationData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetDeaggregationPoint@UnitClass@@UAEHHPAPAVCampBaseClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetDeaggregationPoint@UnitClass@@UAEHHPAPAVCampBaseClass@@@Z PROC ; UnitClass::GetDeaggregationPoint, COMDAT
; _this$ = ecx

; 239  : 	virtual int GetDeaggregationPoint (int, CampEntity*)			{ return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDeaggregationPoint@UnitClass@@UAEHHPAPAVCampBaseClass@@@Z ENDP ; UnitClass::GetDeaggregationPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?CanShootWeapon@UnitClass@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?CanShootWeapon@UnitClass@@UAEHH@Z PROC			; UnitClass::CanShootWeapon, COMDAT
; _this$ = ecx

; 238  : 	virtual int CanShootWeapon (int)								{ return TRUE; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?CanShootWeapon@UnitClass@@UAEHH@Z ENDP			; UnitClass::CanShootWeapon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?GetObjectiveStatus@ObjectiveClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ PROC		; ObjectiveClass::GetObjectiveStatus, COMDAT
; _this$ = ecx

; 270  : 	uchar GetObjectiveStatus (void)							{	return obj_data.status; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+199]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ENDP		; ObjectiveClass::GetObjectiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSPType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSPType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSPType, COMDAT
; _this$ = ecx

; 291  : 	uchar GetSPType (void) const						{	return (EntityType())->classInfo_[VU_SPTYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 2
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSPType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSPType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?HasEntity@CampBaseClass@@UBEHPAVVuEntity@@@Z
_TEXT	SEGMENT
tv81 = -8						; size = 4
_this$ = -4						; size = 4
_e$ = 8							; size = 4
?HasEntity@CampBaseClass@@UBEHPAVVuEntity@@@Z PROC	; CampBaseClass::HasEntity, COMDAT
; _this$ = ecx

; 281  : 	virtual int HasEntity(VuEntity *e) const    {   

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		return ((components && (components->Find(e) != NULL)) || (this == e)); 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 0
	je	SHORT $LN3@HasEntity
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	call	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z ; VuCollection::Find
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@HasEntity
$LN3@HasEntity:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR _e$[ebp]
	je	SHORT $LN4@HasEntity
	mov	DWORD PTR tv81[ebp], 0
	jmp	SHORT $LN5@HasEntity
$LN4@HasEntity:
	mov	DWORD PTR tv81[ebp], 1
$LN5@HasEntity:
	mov	eax, DWORD PTR tv81[ebp]

; 283  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?HasEntity@CampBaseClass@@UBEHPAVVuEntity@@@Z ENDP	; CampBaseClass::HasEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?IsAggregate@CampBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsAggregate@CampBaseClass@@QAEHXZ PROC			; CampBaseClass::IsAggregate, COMDAT
; _this$ = ecx

; 278  : 	int IsAggregate (void)						{	return local_flags & CBC_AGGREGATE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+156]
	and	eax, 128				; 00000080H
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAggregate@CampBaseClass@@QAEHXZ ENDP			; CampBaseClass::IsAggregate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?IsAwake@CampBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsAwake@CampBaseClass@@QAEHXZ PROC			; CampBaseClass::IsAwake, COMDAT
; _this$ = ecx

; 273  : 	int IsAwake (void)							{	return local_flags & CBC_AWAKE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+156]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAwake@CampBaseClass@@QAEHXZ ENDP			; CampBaseClass::IsAwake
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?IsEmitting@CampBaseClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmitting@CampBaseClass@@UAEHXZ PROC			; CampBaseClass::IsEmitting, COMDAT
; _this$ = ecx

; 269  : 	virtual int IsEmitting (void)				{	return base_flags & CBC_EMITTING; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+150]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmitting@CampBaseClass@@UAEHXZ ENDP			; CampBaseClass::IsEmitting
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?IsCampBase@CampBaseClass@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsCampBase@CampBaseClass@@UAE_NXZ PROC			; CampBaseClass::IsCampBase, COMDAT
; _this$ = ecx

; 268  : 	virtual bool IsCampBase() { return true; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCampBase@CampBaseClass@@UAE_NXZ ENDP			; CampBaseClass::IsCampBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetMissilesFlying@CampBaseClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissilesFlying@CampBaseClass@@UAEHXZ PROC		; CampBaseClass::GetMissilesFlying, COMDAT
; _this$ = ecx

; 249  : 	virtual int GetMissilesFlying (void)				{ return 0; } // MLR 10/3/2004 - finishing what //me123 started

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissilesFlying@CampBaseClass@@UAEHXZ ENDP		; CampBaseClass::GetMissilesFlying
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?StepRadar@CampBaseClass@@UAEHHHM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
_d$ = 12						; size = 4
_range$ = 16						; size = 4
?StepRadar@CampBaseClass@@UAEHHHM@Z PROC		; CampBaseClass::StepRadar, COMDAT
; _this$ = ecx

; 240  : 	virtual int StepRadar (int t,int d, float range)								{	return FEC_RADAR_OFF; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?StepRadar@CampBaseClass@@UAEHHHM@Z ENDP		; CampBaseClass::StepRadar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetCountry@CampBaseClass@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCountry@CampBaseClass@@UAEEXZ PROC			; CampBaseClass::GetCountry, COMDAT
; _this$ = ecx

; 239  : 	virtual uchar GetCountry (void)								{	return owner; }		// New FalcEnt friendly form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCountry@CampBaseClass@@UAEEXZ ENDP			; CampBaseClass::GetCountry
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetTeam@CampBaseClass@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTeam@CampBaseClass@@UAEEXZ PROC			; CampBaseClass::GetTeam, COMDAT
; _this$ = ecx

; 238  : 	virtual uchar GetTeam (void)								{	return ::GetTeam(owner); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+154]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeam@CampBaseClass@@UAEEXZ ENDP			; CampBaseClass::GetTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetCampID@CampBaseClass@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampID@CampBaseClass@@UAEFXZ PROC			; CampBaseClass::GetCampID, COMDAT
; _this$ = ecx

; 237  : 	virtual short GetCampID (void)								{	return camp_id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+152]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampID@CampBaseClass@@UAEFXZ ENDP			; CampBaseClass::GetCampID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?UseId@IdNamespace@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?UseId@IdNamespace@@QAEXK@Z PROC			; IdNamespace::UseId, COMDAT
; _this$ = ecx

; 57   : 	void UseId(VU_ID_NUMBER id){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 		if (id >= curId){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jb	SHORT $LN3@UseId

; 59   : 			++curId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 60   : 			if (curId > hiWrap){ curId = lowWrap; }

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN3@UseId
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx
$LN3@UseId:

; 61   : 		}
; 62   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?UseId@IdNamespace@@QAEXK@Z ENDP			; IdNamespace::UseId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPLocation@WayPointClass@@QBEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetWPLocation@WayPointClass@@QBEXPAF0@Z PROC		; WayPointClass::GetWPLocation, COMDAT
; _this$ = ecx

; 205  : 	void GetWPLocation (GridIndex* x, GridIndex* y) const { *x = GridX; *y = GridY; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWPLocation@WayPointClass@@QBEXPAF0@Z ENDP		; WayPointClass::GetWPLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetPrevWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPrevWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetPrevWP, COMDAT
; _this$ = ecx

; 176  : 	WayPoint GetPrevWP (void)						{ return PrevWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPrevWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetPrevWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPFlags@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPFlags@WayPointClass@@QAEKXZ PROC			; WayPointClass::GetWPFlags, COMDAT
; _this$ = ecx

; 173  : 	ulong GetWPFlags (void)							{ return (ulong)Flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPFlags@WayPointClass@@QAEKXZ ENDP			; WayPointClass::GetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPFlags@WayPointClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
?SetWPFlags@WayPointClass@@QAEXK@Z PROC			; WayPointClass::SetWPFlags, COMDAT
; _this$ = ecx

; 163  : 	void SetWPFlags (ulong f)						{ Flags = (ulong) f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPFlags@WayPointClass@@QAEXK@Z ENDP			; WayPointClass::SetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPRouteAction@WayPointClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?SetWPRouteAction@WayPointClass@@QAEXH@Z PROC		; WayPointClass::SetWPRouteAction, COMDAT
; _this$ = ecx

; 161  : 	void SetWPRouteAction (int a)					{ RouteAction = (uchar) a; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _a$[ebp]
	mov	BYTE PTR [eax+25], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPRouteAction@WayPointClass@@QAEXH@Z ENDP		; WayPointClass::SetWPRouteAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPAction@WayPointClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?SetWPAction@WayPointClass@@QAEXH@Z PROC		; WayPointClass::SetWPAction, COMDAT
; _this$ = ecx

; 160  : 	void SetWPAction (int a)						{ Action = (uchar) a; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _a$[ebp]
	mov	BYTE PTR [eax+24], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPAction@WayPointClass@@QAEXH@Z ENDP		; WayPointClass::SetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?GetSEARCHtimer@FalconEntity@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSEARCHtimer@FalconEntity@@UAEKXZ PROC		; FalconEntity::GetSEARCHtimer, COMDAT
; _this$ = ecx

; 198  : 	virtual VU_TIME GetSEARCHtimer(void)				{ return 0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSEARCHtimer@FalconEntity@@UAEKXZ ENDP		; FalconEntity::GetSEARCHtimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?GetAQUIREtimer@FalconEntity@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAQUIREtimer@FalconEntity@@UAEKXZ PROC		; FalconEntity::GetAQUIREtimer, COMDAT
; _this$ = ecx

; 197  : 	virtual VU_TIME GetAQUIREtimer(void)				{ return 0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAQUIREtimer@FalconEntity@@UAEKXZ ENDP		; FalconEntity::GetAQUIREtimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?SetStepSearchMode@FalconEntity@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?SetStepSearchMode@FalconEntity@@UAEXE@Z PROC		; FalconEntity::SetStepSearchMode, COMDAT
; _this$ = ecx

; 196  : 	virtual void SetStepSearchMode(uchar)					{ };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStepSearchMode@FalconEntity@@UAEXE@Z ENDP		; FalconEntity::SetStepSearchMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?SetSEARCHtimer@FalconEntity@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newTime$ = 8						; size = 4
?SetSEARCHtimer@FalconEntity@@UAEXK@Z PROC		; FalconEntity::SetSEARCHtimer, COMDAT
; _this$ = ecx

; 194  : 	virtual void SetSEARCHtimer(VU_TIME newTime)		{ };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSEARCHtimer@FalconEntity@@UAEXK@Z ENDP		; FalconEntity::SetSEARCHtimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?SetAQUIREtimer@FalconEntity@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newTime$ = 8						; size = 4
?SetAQUIREtimer@FalconEntity@@UAEXK@Z PROC		; FalconEntity::SetAQUIREtimer, COMDAT
; _this$ = ecx

; 193  : 	virtual void SetAQUIREtimer(VU_TIME newTime)		{ };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAQUIREtimer@FalconEntity@@UAEXK@Z ENDP		; FalconEntity::SetAQUIREtimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?HasAreaJamming@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasAreaJamming@FalconEntity@@UAEHXZ PROC		; FalconEntity::HasAreaJamming, COMDAT
; _this$ = ecx

; 162  : 	virtual int HasAreaJamming (void)			{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?HasAreaJamming@FalconEntity@@UAEHXZ ENDP		; FalconEntity::HasAreaJamming
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?HasSPJamming@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasSPJamming@FalconEntity@@UAEHXZ PROC			; FalconEntity::HasSPJamming, COMDAT
; _this$ = ecx

; 161  : 	virtual int HasSPJamming (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?HasSPJamming@FalconEntity@@UAEHXZ ENDP			; FalconEntity::HasSPJamming
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsAreaJamming@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsAreaJamming@FalconEntity@@UAEHXZ PROC		; FalconEntity::IsAreaJamming, COMDAT
; _this$ = ecx

; 160  : 	virtual int IsAreaJamming (void)            { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAreaJamming@FalconEntity@@UAEHXZ ENDP		; FalconEntity::IsAreaJamming
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSPJamming@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSPJamming@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsSPJamming, COMDAT
; _this$ = ecx

; 159  : 	virtual int IsSPJamming (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSPJamming@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsSPJamming
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsTaskForce@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTaskForce@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsTaskForce, COMDAT
; _this$ = ecx

; 158  : 	virtual int IsTaskForce (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTaskForce@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsTaskForce
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsTeam@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTeam@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsTeam, COMDAT
; _this$ = ecx

; 157  : 	virtual int IsTeam (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTeam@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSquadron@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSquadron@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsSquadron, COMDAT
; _this$ = ecx

; 155  : 	virtual int IsSquadron (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSquadron@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsFlight@FalconEntity@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFlight@FalconEntity@@UBEHXZ PROC			; FalconEntity::IsFlight, COMDAT
; _this$ = ecx

; 154  : 	virtual int IsFlight() const				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFlight@FalconEntity@@UBEHXZ ENDP			; FalconEntity::IsFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsBrigade@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBrigade@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsBrigade, COMDAT
; _this$ = ecx

; 153  : 	virtual int IsBrigade (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBrigade@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsBrigade
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsBattalion@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBattalion@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsBattalion, COMDAT
; _this$ = ecx

; 152  : 	virtual int IsBattalion (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBattalion@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsBattalion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsObjective@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsObjective@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsObjective, COMDAT
; _this$ = ecx

; 151  : 	virtual int IsObjective (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsObjective@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsObjective
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ PROC	; FalconEntity::GetMovementType, COMDAT
; _this$ = ecx

; 149  : 	virtual MoveType GetMovementType (void)		{ return NoMove; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ ENDP	; FalconEntity::GetMovementType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsDead@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDead@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsDead, COMDAT
; _this$ = ecx

; 144  : 	virtual int IsDead (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDead@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsDead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsExploding@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsExploding@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsExploding, COMDAT
; _this$ = ecx

; 143  : 	virtual int IsExploding (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsExploding@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsExploding
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsWeapon@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsWeapon@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsWeapon, COMDAT
; _this$ = ecx

; 142  : 	virtual int IsWeapon (void)   				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsWeapon@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsWeapon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsShip@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsShip@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsShip, COMDAT
; _this$ = ecx

; 141  : 	virtual int IsShip (void) 			        { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShip@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsShip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsGroundVehicle@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGroundVehicle@FalconEntity@@UAEHXZ PROC		; FalconEntity::IsGroundVehicle, COMDAT
; _this$ = ecx

; 140  : 	virtual int IsGroundVehicle (void) 			{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGroundVehicle@FalconEntity@@UAEHXZ ENDP		; FalconEntity::IsGroundVehicle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsAirplane@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsAirplane@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsAirplane, COMDAT
; _this$ = ecx

; 139  : 	virtual int IsAirplane (void)	   			{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAirplane@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsAirplane
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsEject@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEject@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsEject, COMDAT
; _this$ = ecx

; 138  : 	virtual int IsEject (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEject@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsEject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsHelicopter@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsHelicopter@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsHelicopter, COMDAT
; _this$ = ecx

; 137  : 	virtual int IsHelicopter (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsHelicopter@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsHelicopter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsStatic@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsStatic@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsStatic, COMDAT
; _this$ = ecx

; 136  : 	virtual int IsStatic (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStatic@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsStatic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsVehicle@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsVehicle@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsVehicle, COMDAT
; _this$ = ecx

; 135  : 	virtual int IsVehicle (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsVehicle@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsVehicle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsMover@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMover@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsMover, COMDAT
; _this$ = ecx

; 134  : 	virtual int IsMover (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMover@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsMover
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsGun@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGun@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsGun, COMDAT
; _this$ = ecx

; 133  : 	virtual int IsGun (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGun@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsGun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsBomb@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBomb@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsBomb, COMDAT
; _this$ = ecx

; 132  : 	virtual int IsBomb (void)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBomb@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsBomb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsLauncher@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLauncher@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsLauncher, COMDAT
; _this$ = ecx

; 131  : 	virtual int IsLauncher (void)               { return FALSE; } // MLR 3/4/2004 - rocket pods

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLauncher@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsLauncher
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsMissile@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMissile@FalconEntity@@UAEHXZ PROC			; FalconEntity::IsMissile, COMDAT
; _this$ = ecx

; 130  : 	virtual int IsMissile (void)				{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMissile@FalconEntity@@UAEHXZ ENDP			; FalconEntity::IsMissile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?CombatClass@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CombatClass@FalconEntity@@UAEHXZ PROC			; FalconEntity::CombatClass, COMDAT
; _this$ = ecx

; 127  : 	virtual int CombatClass (void)				{ return 999; } // 2002-02-25 ADDED BY S.G. No combat class for non flight or non aircraft class

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 999				; 000003e7H
	mov	esp, ebp
	pop	ebp
	ret	0
?CombatClass@FalconEntity@@UAEHXZ ENDP			; FalconEntity::CombatClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?SetSearchMode@FalconEntity@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?SetSearchMode@FalconEntity@@UAEXE@Z PROC		; FalconEntity::SetSearchMode, COMDAT
; _this$ = ecx

; 126  : 	virtual void SetSearchMode (uchar)		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSearchMode@FalconEntity@@UAEXE@Z ENDP		; FalconEntity::SetSearchMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?ReturnToSearch@FalconEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReturnToSearch@FalconEntity@@UAEXXZ PROC		; FalconEntity::ReturnToSearch, COMDAT
; _this$ = ecx

; 124  : 	virtual void ReturnToSearch (void)			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?ReturnToSearch@FalconEntity@@UAEXXZ ENDP		; FalconEntity::ReturnToSearch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?SetRadarMode@FalconEntity@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?SetRadarMode@FalconEntity@@UAEXE@Z PROC		; FalconEntity::SetRadarMode, COMDAT
; _this$ = ecx

; 123  : 	virtual void SetRadarMode (uchar)		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRadarMode@FalconEntity@@UAEXE@Z ENDP		; FalconEntity::SetRadarMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?GetRadarMode@FalconEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRadarMode@FalconEntity@@UAEHXZ PROC			; FalconEntity::GetRadarMode, COMDAT
; _this$ = ecx

; 121  : 	virtual int GetRadarMode (void)				{ return FEC_RADAR_OFF; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRadarMode@FalconEntity@@UAEHXZ ENDP			; FalconEntity::GetRadarMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSimBase@FalconEntity@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSimBase@FalconEntity@@UAE_NXZ PROC			; FalconEntity::IsSimBase, COMDAT
; _this$ = ecx

; 98   : 	virtual bool IsSimBase() { return false; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSimBase@FalconEntity@@UAE_NXZ ENDP			; FalconEntity::IsSimBase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sc$ = 8						; size = 4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z PROC	; VuEntity::SetSendCreate, COMDAT
; _this$ = ecx

; 148  : 	void SetSendCreate(VU_SEND_TYPE sc) { share_.flags_.breakdown_.sendCreate_ = sc; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sc$[ebp]
	and	eax, 3
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, -193				; ffffff3fH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ENDP	; VuEntity::SetSendCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
