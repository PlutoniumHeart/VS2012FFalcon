; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\CAMPAIGN\CAMPUI\MissEval.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?FormatTable@@3PAY04HA				; FormatTable
PUBLIC	?ScoreAdjustment@@3PAFA				; ScoreAdjustment
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
_DATA	SEGMENT
?FormatTable@@3PAY04HA DD 00H				; FormatTable
	DD	06daH
	DD	06daH
	DD	06a8H
	DD	06a8H
	DD	00H
	DD	06d9H
	DD	06d9H
	DD	06a7H
	DD	06a7H
	DD	00H
	DD	06dbH
	DD	06dbH
	DD	06a9H
	DD	06a9H
	DD	00H
	DD	06d6H
	DD	06d6H
	DD	06a4H
	DD	06a4H
	DD	00H
	DD	06d7H
	DD	06d7H
	DD	06a5H
	DD	06a5H
	DD	00H
	DD	06ddH
	DD	06ddH
	DD	06abH
	DD	06abH
	DD	00H
	DD	06deH
	DD	06deH
	DD	06acH
	DD	06acH
	DD	00H
	DD	06dfH
	DD	06dfH
	DD	06adH
	DD	06adH
	DD	00H
	DD	06d8H
	DD	06d8H
	DD	06a6H
	DD	06a6H
	DD	00H
	DD	06e0H
	DD	06e0H
	DD	06aeH
	DD	06aeH
	DD	00H
	DD	06e1H
	DD	06e1H
	DD	06afH
	DD	06afH
	DD	00H
	DD	06e2H
	DD	06e2H
	DD	06b0H
	DD	06b0H
	DD	00H
	DD	06e5H
	DD	06e5H
	DD	06b3H
	DD	06b3H
	DD	00H
	DD	06e3H
	DD	06e3H
	DD	06b1H
	DD	06b1H
	DD	00H
	DD	06e4H
	DD	06e4H
	DD	06b2H
	DD	06b2H
	DD	00H
	DD	06e6H
	DD	06e6H
	DD	06b4H
	DD	06b4H
	DD	00H
	DD	06eaH
	DD	06eaH
	DD	06b8H
	DD	06b8H
	DD	00H
	DD	06ebH
	DD	06ebH
	DD	06b9H
	DD	06b9H
	DD	00H
	DD	06ecH
	DD	06ecH
	DD	06baH
	DD	06baH
	DD	00H
	DD	06edH
	DD	06edH
	DD	06bbH
	DD	06bbH
	DD	00H
	DD	06bcH
	DD	06bcH
	DD	06bcH
	DD	06bcH
	DD	00H
	DD	06bdH
	DD	06bdH
	DD	06bdH
	DD	06bdH
?ScoreAdjustment@@3PAFA DW 0fff6H			; ScoreAdjustment
	DW	0fffbH
	DW	06H
	DW	0cH
	DW	00H
	DW	00H
_DATA	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	__tcsstr
PUBLIC	__tcscmp
PUBLIC	?_tcsstr@@YAPADPADPBD@Z				; _tcsstr
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?Type@VuEntity@@QBEGXZ				; VuEntity::Type
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?IsCampaign@FalconEntity@@QAEHXZ		; FalconEntity::IsCampaign
PUBLIC	?IsSim@FalconEntity@@QAEHXZ			; FalconEntity::IsSim
PUBLIC	?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ	; WayPointClass::GetWPTargetID
PUBLIC	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
PUBLIC	?GetWPTargetBuilding@WayPointClass@@QAEEXZ	; WayPointClass::GetWPTargetBuilding
PUBLIC	?GetWPFlags@WayPointClass@@QAEKXZ		; WayPointClass::GetWPFlags
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetPrevWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetPrevWP
PUBLIC	?GetWPAltitude@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAltitude
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	?GetWPDepartureTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPDepartureTime
PUBLIC	?GetWPLocation@WayPointClass@@QBEXPAF0@Z	; WayPointClass::GetWPLocation
PUBLIC	?InPackage@CampBaseClass@@QAEHXZ		; CampBaseClass::InPackage
PUBLIC	?GetDomain@CampBaseClass@@QBEEXZ		; CampBaseClass::GetDomain
PUBLIC	?GetType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetType
PUBLIC	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	?Moving@UnitClass@@QBEHXZ			; UnitClass::Moving
PUBLIC	?Broken@UnitClass@@QBEHXZ			; UnitClass::Broken
PUBLIC	?GetTarget@UnitClass@@QAEPAVFalconEntity@@XZ	; UnitClass::GetTarget
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ	; ObjectiveClass::GetObjectiveStatus
PUBLIC	?GetInterceptor@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetInterceptor
PUBLIC	?GetAwacs@PackageClass@@QAE?AVVU_ID@@XZ		; PackageClass::GetAwacs
PUBLIC	?GetJStar@PackageClass@@QAE?AVVU_ID@@XZ		; PackageClass::GetJStar
PUBLIC	?GetECM@PackageClass@@QAE?AVVU_ID@@XZ		; PackageClass::GetECM
PUBLIC	?GetTanker@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetTanker
PUBLIC	?GetResponses@PackageClass@@QAEFXZ		; PackageClass::GetResponses
PUBLIC	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
PUBLIC	?GetOriginalMission@FlightClass@@QAEEXZ		; FlightClass::GetOriginalMission
PUBLIC	?GetEvalFlags@FlightClass@@QAEEXZ		; FlightClass::GetEvalFlags
PUBLIC	?GetMissionContext@FlightClass@@QAEEXZ		; FlightClass::GetMissionContext
PUBLIC	?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ	; FlightClass::GetRequesterID
PUBLIC	??0EventElement@@QAE@XZ				; EventElement::EventElement
PUBLIC	??1EventElement@@QAE@XZ				; EventElement::~EventElement
PUBLIC	??_GEventElement@@QAEPAXI@Z			; EventElement::`scalar deleting destructor'
PUBLIC	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
PUBLIC	??0WeaponDataClass@@QAE@XZ			; WeaponDataClass::WeaponDataClass
PUBLIC	??1WeaponDataClass@@QAE@XZ			; WeaponDataClass::~WeaponDataClass
PUBLIC	??0PilotDataClass@@QAE@XZ			; PilotDataClass::PilotDataClass
PUBLIC	??1PilotDataClass@@QAE@XZ			; PilotDataClass::~PilotDataClass
PUBLIC	??_GPilotDataClass@@QAEPAXI@Z			; PilotDataClass::`scalar deleting destructor'
PUBLIC	??0FlightDataClass@@QAE@XZ			; FlightDataClass::FlightDataClass
PUBLIC	??1FlightDataClass@@QAE@XZ			; FlightDataClass::~FlightDataClass
PUBLIC	??_GFlightDataClass@@QAEPAXI@Z			; FlightDataClass::`scalar deleting destructor'
PUBLIC	??0MissionEvaluationClass@@QAE@XZ		; MissionEvaluationClass::MissionEvaluationClass
PUBLIC	??1MissionEvaluationClass@@QAE@XZ		; MissionEvaluationClass::~MissionEvaluationClass
PUBLIC	?CleanupFlightData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupFlightData
PUBLIC	?CleanupPilotData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupPilotData
PUBLIC	?PreDogfightEval@MissionEvaluationClass@@QAEXXZ	; MissionEvaluationClass::PreDogfightEval
PUBLIC	?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z ; MissionEvaluationClass::PreMissionEval
PUBLIC	?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ; MissionEvaluationClass::PreEvalFlight
PUBLIC	?RecordTargetStatus@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVCampBaseClass@@@Z ; MissionEvaluationClass::RecordTargetStatus
PUBLIC	?PostMissionEval@MissionEvaluationClass@@QAEHXZ	; MissionEvaluationClass::PostMissionEval
PUBLIC	?ServerFileLog@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z ; MissionEvaluationClass::ServerFileLog
PUBLIC	?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ; MissionEvaluationClass::MissionSuccess
PUBLIC	?SetPackageData@MissionEvaluationClass@@QAEXXZ	; MissionEvaluationClass::SetPackageData
PUBLIC	?ClearPackageData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPackageData
PUBLIC	?ClearPotentialTargets@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPotentialTargets
PUBLIC	?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::FindPotentialTargets
PUBLIC	?CollectThreats@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVWayPointClass@@@Z ; MissionEvaluationClass::CollectThreats
PUBLIC	?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z ; MissionEvaluationClass::CollectThreats
PUBLIC	?GetTeamKills@MissionEvaluationClass@@QAEXPAF@Z	; MissionEvaluationClass::GetTeamKills
PUBLIC	?GetTeamDeaths@MissionEvaluationClass@@QAEXPAF@Z ; MissionEvaluationClass::GetTeamDeaths
PUBLIC	?GetTeamScore@MissionEvaluationClass@@QAEXPAF@Z	; MissionEvaluationClass::GetTeamScore
PUBLIC	?GetKills@MissionEvaluationClass@@QAEHPAVFalconSessionEntity@@@Z ; MissionEvaluationClass::GetKills
PUBLIC	?GetMaxKills@MissionEvaluationClass@@QAEHXZ	; MissionEvaluationClass::GetMaxKills
PUBLIC	?GetMaxScore@MissionEvaluationClass@@QAEHXZ	; MissionEvaluationClass::GetMaxScore
PUBLIC	?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z ; MissionEvaluationClass::RegisterShotAtPlayer
PUBLIC	?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z ; MissionEvaluationClass::RegisterShot
PUBLIC	?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z ; MissionEvaluationClass::RegisterHit
PUBLIC	?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z ; MissionEvaluationClass::RegisterKill
PUBLIC	?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z ; MissionEvaluationClass::RegisterPlayerJoin
PUBLIC	?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z ; MissionEvaluationClass::RegisterEjection
PUBLIC	?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z ; MissionEvaluationClass::RegisterLanding
PUBLIC	?RegisterContact@MissionEvaluationClass@@QAEXPAVUnitClass@@@Z ; MissionEvaluationClass::RegisterContact
PUBLIC	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z	; MissionEvaluationClass::ParseTime
PUBLIC	?ParseTime@MissionEvaluationClass@@QAEXNPAD@Z	; MissionEvaluationClass::ParseTime
PUBLIC	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList
PUBLIC	?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconEntity@@0H@Z ; MissionEvaluationClass::RegisterKill
PUBLIC	?RegisterMove@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ; MissionEvaluationClass::RegisterMove
PUBLIC	?RegisterAbort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ; MissionEvaluationClass::RegisterAbort
PUBLIC	?RegisterRelief@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ; MissionEvaluationClass::RegisterRelief
PUBLIC	?RegisterDivert@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVMissionRequestClass@@@Z ; MissionEvaluationClass::RegisterDivert
PUBLIC	?RegisterRoundWon@MissionEvaluationClass@@QAEXH@Z ; MissionEvaluationClass::RegisterRoundWon
PUBLIC	?RegisterWin@MissionEvaluationClass@@QAEXH@Z	; MissionEvaluationClass::RegisterWin
PUBLIC	?RegisterEvent@MissionEvaluationClass@@QAEXFFHHPAD@Z ; MissionEvaluationClass::RegisterEvent
PUBLIC	?Register3DAWACSabort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ; MissionEvaluationClass::Register3DAWACSabort
PUBLIC	?SetFinalAircraft@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ; MissionEvaluationClass::SetFinalAircraft
PUBLIC	?GetPilotName@MissionEvaluationClass@@QAEHHPAD@Z ; MissionEvaluationClass::GetPilotName
PUBLIC	?GetFlightName@MissionEvaluationClass@@QAEHPAD@Z ; MissionEvaluationClass::GetFlightName
PUBLIC	?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ; MissionEvaluationClass::AddNewPlayerPilot
PUBLIC	?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ; MissionEvaluationClass::AddNewPilot
PUBLIC	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
PUBLIC	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@HH@Z ; MissionEvaluationClass::FindPilotData
PUBLIC	?FindPilotDataFromAC@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotDataFromAC
PUBLIC	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
PUBLIC	?SetupPilots@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::SetupPilots
PUBLIC	?SetPlayerPilot@MissionEvaluationClass@@QAEXPAVFlightClass@@E@Z ; MissionEvaluationClass::SetPlayerPilot
PUBLIC	?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::RebuildEvaluationData
PUBLIC	?UpdateFlightHours@LogBookData@@QAEXM@Z		; LogBookData::UpdateFlightHours
PUBLIC	?SetAceFactor@LogBookData@@QAEXM@Z		; LogBookData::SetAceFactor
PUBLIC	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
PUBLIC	?GetPlayerName@FalconSessionEntity@@QAEPADXZ	; FalconSessionEntity::GetPlayerName
PUBLIC	?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerCallsign
PUBLIC	?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerFlightID
PUBLIC	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
PUBLIC	?GetAceFactor@FalconSessionEntity@@QBEMXZ	; FalconSessionEntity::GetAceFactor
PUBLIC	?GetInitAceFactor@FalconSessionEntity@@QBEMXZ	; FalconSessionEntity::GetInitAceFactor
PUBLIC	?GetAircraftNum@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetAircraftNum
PUBLIC	?GetPilotSlot@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetPilotSlot
PUBLIC	?GetKill@FalconSessionEntity@@QBEGG@Z		; FalconSessionEntity::GetKill
PUBLIC	?GetMissions@FalconSessionEntity@@QBEGXZ	; FalconSessionEntity::GetMissions
PUBLIC	?GetRating@FalconSessionEntity@@QBEEXZ		; FalconSessionEntity::GetRating
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?SetKill@FalconSessionEntity@@QAEXGG@Z		; FalconSessionEntity::SetKill
PUBLIC	?SetMissions@FalconSessionEntity@@QAEXG@Z	; FalconSessionEntity::SetMissions
PUBLIC	?SetRating@FalconSessionEntity@@QAEXE@Z		; FalconSessionEntity::SetRating
PUBLIC	?GetSlot@SimBaseClass@@QAEHXZ			; SimBaseClass::GetSlot
PUBLIC	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetFormatString@@YAXHPAD@Z			; GetFormatString
PUBLIC	?FindAlternateLandingStrip@@YAPAVObjectiveClass@@PAVFlightClass@@@Z ; FindAlternateLandingStrip
PUBLIC	?UpdateEvaluators@@YAXPAVFlightDataClass@@PAVPilotDataClass@@@Z ; UpdateEvaluators
PUBLIC	?CheckForNewPlayer@@YAXPAVFalconSessionEntity@@@Z ; CheckForNewPlayer
PUBLIC	?ScoreCampaign@@YAHW4score_type@@H@Z		; ScoreCampaign
PUBLIC	?ScoreDogfight@@YAHW4score_type@@H@Z		; ScoreDogfight
PUBLIC	?ScoreInstantAction@@YAHW4score_type@@H@Z	; ScoreInstantAction
PUBLIC	?RecordPlayerFlightStart@@YAXXZ			; RecordPlayerFlightStart
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0M@MGCAHMKC@debrief?4txt?$AA@		; `string'
PUBLIC	??_C@_01MCMALHOG@a?$AA@				; `string'
PUBLIC	??_C@_0DN@GBIKDBEL@?6?6?6?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_0BI@HKCLIKLE@?$CFd?1?$CFd?1?$CFd?5?$CF02d?3?$CF02d?3?$CF02d?$AA@ ; `string'
PUBLIC	??_C@_0BM@IKDBNCFO@RECORD?5BEGIN?5TIMESTAMP?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_0P@GHEJFKFN@Instant?5Action?$AA@		; `string'
PUBLIC	??_C@_08DLBHGMLL@DogFight?$AA@			; `string'
PUBLIC	??_C@_0BE@NJKPNHIC@Tactical?5Engagement?$AA@	; `string'
PUBLIC	??_C@_08FHHBCJKK@Campaign?$AA@			; `string'
PUBLIC	??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@		; `string'
PUBLIC	??_C@_09FCDNMMPE@Networked?$AA@			; `string'
PUBLIC	??_C@_05IEALKJIG@Local?$AA@			; `string'
PUBLIC	??_C@_0BF@OIBLHPO@Game?5is?5?$CFs?5type?5?$CFs?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@CHCLLJFL@Mission?5name?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@BCFAANAH@?6Mission?5Type?3?5?$CFs?5?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@EEBFOKCB@Flight?5Unique?5Id?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@EOLDELII@?$CFd?5Ship?5Flight?6?$AA@	; `string'
PUBLIC	??_C@_0O@MMEDOBLI@Ac?5type?3?5?$CFs?5?6?$AA@	; `string'
PUBLIC	??_C@_0N@IDPGLABD@Contry?3?5?$CFs?5?6?$AA@	; `string'
PUBLIC	??_C@_0BA@NIINDLH@?6FLIGHT?5EVENTS?6?$AA@	; `string'
PUBLIC	??_C@_0L@LGCHIIGB@Event?5?$CFs?5?6?$AA@		; `string'
PUBLIC	??_C@_0BA@MJCDAMBC@?6?9?9?9?9?9?9?9?9?9?9?9?9?9?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@OPDOHJIC@PILOT?5SLOT?5?$CFd?3?6?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@CGHEKCME@Human?5Player?3?5?$CFs?5?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@BMFMJKBJ@AI?5Player?3?5?$CFs?5?6?$AA@	; `string'
PUBLIC	??_C@_0P@FFIOHKIF@Callsign?3?5?$CFs?5?6?$AA@	; `string'
PUBLIC	??_C@_05LILJEDNC@?5?9?5OK?$AA@			; `string'
PUBLIC	??_C@_06NOBDHMG@?5?9?5KIA?$AA@			; `string'
PUBLIC	??_C@_06CIIKGIBK@?5?9?5MIA?$AA@			; `string'
PUBLIC	??_C@_0L@KAFIAHBI@?5?9?5RESCUED?$AA@		; `string'
PUBLIC	??_C@_0BC@NECBLOHJ@Pilot?5status?5?$CFs?5?6?$AA@ ; `string'
PUBLIC	??_C@_0M@JCOFIOFE@?5?9?5REPAIRED?$AA@		; `string'
PUBLIC	??_C@_0L@FHMPLEDI@?5?9?5DAMAGED?$AA@		; `string'
PUBLIC	??_C@_0N@IDDEJMDM@?5?9?5DESTROYED?$AA@		; `string'
PUBLIC	??_C@_0BG@GABCFBAO@?5?9?5DAMAGED?5Left?5side?5?$AA@ ; `string'
PUBLIC	??_C@_0BG@LDLHFPBO@?5?9?5DAMAGED?5Right?5side?$AA@ ; `string'
PUBLIC	??_C@_0BG@BNPCKKMF@?5?9?5DAMAGED?5Both?5sides?$AA@ ; `string'
PUBLIC	??_C@_0BF@GEHCBOF@Aircraft?5status?5?$CFs?5?6?$AA@ ; `string'
PUBLIC	??_C@_0O@MKLLNEPG@AA?5Kills?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_0O@GKFOALCL@AG?5Kills?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_0O@BOOAMHGH@AS?5Kills?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_0O@ONMLABMD@AN?5Kills?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_0O@EABMAKLM@Shoot?5At?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_0BI@LGLGDDGC@Other?5Player?5Kills?5?$CFd?5?6?$AA@ ; `string'
PUBLIC	??_C@_0P@KGHBHCCE@?6WEAPON?5DATA?5?6?$AA@	; `string'
PUBLIC	??_C@_0BC@FFNAOCDI@?6LOADOUT?5?$CFd?3?5?$CFs?5?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@CKMJDHIO@Starting?5Load?5?$CFd?5?6?$AA@ ; `string'
PUBLIC	??_C@_0L@MGLLPEAD@Fired?5?$CFd?5?6?$AA@		; `string'
PUBLIC	??_C@_0M@EKLGELON@Missed?5?$CFd?5?6?$AA@	; `string'
PUBLIC	??_C@_08NDFEGOJK@Hit?5?$CFd?5?6?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BL@PHCKMIHC@?$CFs?5?$CFs?5launched?5?$CFs?5at?5?$CFs?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BF@IDBLIENJ@?$CFs?5launched?5at?5?$CFs?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_04HGGBINEM@?$CFs?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BN@CKAKIEH@Session?5is?5not?5in?5this?5game?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@IFLHMPKP@ScoreDogfight?5?$CFd?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@DFDAEAKG@Session?5not?5in?5this?5local?5game?6?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@399edbf9
PUBLIC	__real@3f000000
PUBLIC	__real@41c80000
PUBLIC	__real@42c80000
PUBLIC	__real@44192000
PUBLIC	__real@4479f99a
PUBLIC	__real@447a0000
PUBLIC	__real@46072400
PUBLIC	__real@49742400
PUBLIC	__real@4a5bba00
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fputs:PROC
EXTRN	__snprintf:PROC
EXTRN	_sprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__FileTimeToLocalFileTime@8:PROC
EXTRN	__imp__GetSystemTimeAsFileTime@4:PROC
EXTRN	__imp__FileTimeToDosDateTime@12:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__mbscmp:PROC
EXTRN	__mbsstr:PROC
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z:PROC ; VuGridIterator::VuGridIterator
EXTRN	??1VuGridIterator@@UAE@XZ:PROC			; VuGridIterator::~VuGridIterator
EXTRN	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ:PROC ; VuGridIterator::GetFirst
EXTRN	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ:PROC ; VuGridIterator::GetNext
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	_MonoPrint:PROC
EXTRN	?F4IsBadReadPtr@@YA_NPBXI@Z:PROC		; F4IsBadReadPtr
EXTRN	?GetWeaponHitChance@@YAHHH@Z:PROC		; GetWeaponHitChance
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	?GetTeam@@YAEE@Z:PROC				; GetTeam
EXTRN	?GetSpotted@CampBaseClass@@QAEHE@Z:PROC		; CampBaseClass::GetSpotted
EXTRN	?SetInPackage@CampBaseClass@@QAEXH@Z:PROC	; CampBaseClass::SetInPackage
EXTRN	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z:PROC ; GetVehicleClassData
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ:PROC ; UnitClass::GetUnitClassData
EXTRN	?GetUnitDestination@UnitClass@@QAEXPAF0@Z:PROC	; UnitClass::GetUnitDestination
EXTRN	?GetVehicleID@UnitClass@@QAEFH@Z:PROC		; UnitClass::GetVehicleID
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetFeatureValue@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureValue
EXTRN	?GetFeatureID@ObjectiveClass@@QAEHH@Z:PROC	; ObjectiveClass::GetFeatureID
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?BestTargetFeature@@YAHPAVObjectiveClass@@QAE@Z:PROC ; BestTargetFeature
EXTRN	?DistSqu@@YAHFFFF@Z:PROC			; DistSqu
EXTRN	?Distance@@YAMFFFF@Z:PROC			; Distance
EXTRN	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z:PROC	; FindUnit
EXTRN	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z:PROC ; FindEntity
EXTRN	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z:PROC ; GetEntityByCampID
EXTRN	?FindNearestObjective@@YAPAVObjectiveClass@@PAVVuLinkedList@@FFPAM@Z:PROC ; FindNearestObjective
EXTRN	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z:PROC ; GetObjectiveByXY
EXTRN	?GridToSim@@YAMF@Z:PROC				; GridToSim
EXTRN	?FindPlayer@@YAPAVFalconSessionEntity@@PAVFlightClass@@E@Z:PROC ; FindPlayer
EXTRN	?FindPlayer@@YAPAVFalconSessionEntity@@VVU_ID@@EE@Z:PROC ; FindPlayer
EXTRN	?GetPilotName@@YAXHPADH@Z:PROC			; GetPilotName
EXTRN	?GetCallsign@@YAXHHPAD@Z:PROC			; GetCallsign
EXTRN	?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z:PROC ; PackageClass::FindSupportFlights
EXTRN	?GetOverrideWP@FlightClass@@QAEPAVWayPointClass@@XZ:PROC ; FlightClass::GetOverrideWP
EXTRN	?SetEvalFlag@FlightClass@@QAEXEH@Z:PROC		; FlightClass::SetEvalFlag
EXTRN	?GetPilotID@FlightClass@@QAEHH@Z:PROC		; FlightClass::GetPilotID
EXTRN	?InsertEventToList@@YAXPAVEventElement@@0@Z:PROC ; InsertEventToList
EXTRN	?DisposeEventList@@YAXPAVEventElement@@@Z:PROC	; DisposeEventList
EXTRN	?GetCCRelations@@YAHEE@Z:PROC			; GetCCRelations
EXTRN	?GetTTRelations@@YAHEE@Z:PROC			; GetTTRelations
EXTRN	?GetRoE@@YAHEEH@Z:PROC				; GetRoE
EXTRN	?ApplyPlayerInput@@YAXEVVU_ID@@H@Z:PROC		; ApplyPlayerInput
EXTRN	?GetTimeString@@YAPADKQADH@Z:PROC		; GetTimeString
EXTRN	?ReadIndexedString@@YAXHPADH@Z:PROC		; ReadIndexedString
EXTRN	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z:PROC ; GetFeatureClassData
EXTRN	?SaveData@LogBookData@@QAEHXZ:PROC		; LogBookData::SaveData
EXTRN	?UpdateDogfight@LogBookData@@QAEXFMFFFFF@Z:PROC	; LogBookData::UpdateDogfight
EXTRN	?UpdateCampaign@LogBookData@@QAEXPAUCAMP_MISS_STRUCT@@@Z:PROC ; LogBookData::UpdateCampaign
EXTRN	?SetAceFactorKill@FalconSessionEntity@@QAEXM@Z:PROC ; FalconSessionEntity::SetAceFactorKill
EXTRN	?SetAceFactorDeath@FalconSessionEntity@@QAEXM@Z:PROC ; FalconSessionEntity::SetAceFactorDeath
EXTRN	?SendEvalData@@YAXPAVFlightDataClass@@PAVPilotDataClass@@@Z:PROC ; SendEvalData
EXTRN	??0UI_SendChatMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; UI_SendChatMessage::UI_SendChatMessage
EXTRN	?GetOwner@@YAEPAEFF@Z:PROC			; GetOwner
EXTRN	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z:PROC ; UIComms::FindCampaignPlayer
EXTRN	?AddIndexedStringToBuffer@@YAXHPAD@Z:PROC	; AddIndexedStringToBuffer
EXTRN	?ConstructOrderedSentence@@YAXFPAD0ZZ:PROC	; ConstructOrderedSentence
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?get_title@tactical_mission@@QAEPADXZ:PROC	; tactical_mission::get_title
EXTRN	?RatePilot@@YAXPAVFlightClass@@HH@Z:PROC	; RatePilot
EXTRN	?AddWeaponToUsageList@@YAHH@Z:PROC		; AddWeaponToUsageList
EXTRN	?AddAircraftToKillsList@@YAHH@Z:PROC		; AddAircraftToKillsList
EXTRN	?AddObjectToKillsList@@YAHH@Z:PROC		; AddObjectToKillsList
EXTRN	?score_player_ejected@@YAHXZ:PROC		; score_player_ejected
EXTRN	?ConvertTeamToStringIndex@@YAHHHHH@Z:PROC	; ConvertTeamToStringIndex
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuxGameTime@@3KA:DWORD				; vuxGameTime
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?MissionData@@3PAUMissionDataType@@A:BYTE	; MissionData
EXTRN	?WeaponDataTable@@3PAUWeaponClassDataType@@A:DWORD ; WeaponDataTable
EXTRN	?RocketDataTable@@3PAURocketClassDataType@@A:DWORD ; RocketDataTable
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?DefaultDamageMods@@3PAEA:BYTE			; DefaultDamageMods
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?LOW_ALTITUDE_CUTOFF@@3FA:WORD			; LOW_ALTITUDE_CUTOFF
EXTRN	?MAX_AIR_SEARCH@@3FA:WORD			; MAX_AIR_SEARCH
EXTRN	?AllAirList@@3PAVVuLinkedList@@A:DWORD		; AllAirList
EXTRN	?POList@@3PAVFalconPrivateOrderedList@@A:DWORD	; POList
EXTRN	?ObjProxList@@3PAVVuGridTree@@A:DWORD		; ObjProxList
EXTRN	?RealUnitProxList@@3PAVVuGridTree@@A:DWORD	; RealUnitProxList
EXTRN	?SimDogfight@@3VDogfightClass@@A:BYTE		; SimDogfight
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?current_tactical_mission@@3PAVtactical_mission@@A:DWORD ; current_tactical_mission
EXTRN	?g_bLogEvents@@3_NA:BYTE			; g_bLogEvents
EXTRN	?NumWeaponTypes@@3FA:WORD			; NumWeaponTypes
EXTRN	?NumRocketTypes@@3FA:WORD			; NumRocketTypes
EXTRN	?g_bNoAAAEventRecords@@3_NA:BYTE		; g_bNoAAAEventRecords
EXTRN	?gRefreshScoresList@@3JA:DWORD			; gRefreshScoresList
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@4a5bba00
CONST	SEGMENT
__real@4a5bba00 DD 04a5bba00r			; 3.6e+006
CONST	ENDS
;	COMDAT __real@49742400
CONST	SEGMENT
__real@49742400 DD 049742400r			; 1e+006
CONST	ENDS
;	COMDAT __real@46072400
CONST	SEGMENT
__real@46072400 DD 046072400r			; 8649
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@4479f99a
CONST	SEGMENT
__real@4479f99a DD 04479f99ar			; 999.9
CONST	ENDS
;	COMDAT __real@44192000
CONST	SEGMENT
__real@44192000 DD 044192000r			; 612.5
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@399edbf9
CONST	SEGMENT
__real@399edbf9 DD 0399edbf9r			; 0.000303
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DFDAEAKG@Session?5not?5in?5this?5local?5game?6?$AA@
CONST	SEGMENT
??_C@_0CA@DFDAEAKG@Session?5not?5in?5this?5local?5game?6?$AA@ DB 'Session'
	DB	' not in this local game', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IFLHMPKP@ScoreDogfight?5?$CFd?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BF@IFLHMPKP@ScoreDogfight?5?$CFd?5?$CFd?6?$AA@ DB 'ScoreDogfight %'
	DB	'd %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CKAKIEH@Session?5is?5not?5in?5this?5game?6?$AA@
CONST	SEGMENT
??_C@_0BN@CKAKIEH@Session?5is?5not?5in?5this?5game?6?$AA@ DB 'Session is '
	DB	'not in this game', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
CONST	SEGMENT
??_C@_04HGGBINEM@?$CFs?$CFd?$AA@ DB '%s%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IDBLIENJ@?$CFs?5launched?5at?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BF@IDBLIENJ@?$CFs?5launched?5at?5?$CFs?5?$CFs?$AA@ DB '%s launched'
	DB	' at %s %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PHCKMIHC@?$CFs?5?$CFs?5launched?5?$CFs?5at?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BL@PHCKMIHC@?$CFs?5?$CFs?5launched?5?$CFs?5at?5?$CFs?5?$CFs?$AA@ DB '%'
	DB	's %s launched %s at %s %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NDFEGOJK@Hit?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_08NDFEGOJK@Hit?5?$CFd?5?6?$AA@ DB 'Hit %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EKLGELON@Missed?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0M@EKLGELON@Missed?5?$CFd?5?6?$AA@ DB 'Missed %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MGLLPEAD@Fired?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0L@MGLLPEAD@Fired?5?$CFd?5?6?$AA@ DB 'Fired %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CKMJDHIO@Starting?5Load?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0BD@CKMJDHIO@Starting?5Load?5?$CFd?5?6?$AA@ DB 'Starting Load %d ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FFNAOCDI@?6LOADOUT?5?$CFd?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BC@FFNAOCDI@?6LOADOUT?5?$CFd?3?5?$CFs?5?6?$AA@ DB 0aH, 'LOADOUT %d'
	DB	': %s ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KGHBHCCE@?6WEAPON?5DATA?5?6?$AA@
CONST	SEGMENT
??_C@_0P@KGHBHCCE@?6WEAPON?5DATA?5?6?$AA@ DB 0aH, 'WEAPON DATA ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGLGDDGC@Other?5Player?5Kills?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@LGLGDDGC@Other?5Player?5Kills?5?$CFd?5?6?$AA@ DB 'Other Player '
	DB	'Kills %d ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EABMAKLM@Shoot?5At?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0O@EABMAKLM@Shoot?5At?5?$CFd?5?6?$AA@ DB 'Shoot At %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ONMLABMD@AN?5Kills?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0O@ONMLABMD@AN?5Kills?5?$CFd?5?6?$AA@ DB 'AN Kills %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BOOAMHGH@AS?5Kills?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0O@BOOAMHGH@AS?5Kills?5?$CFd?5?6?$AA@ DB 'AS Kills %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFOALCL@AG?5Kills?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0O@GKFOALCL@AG?5Kills?5?$CFd?5?6?$AA@ DB 'AG Kills %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKLLNEPG@AA?5Kills?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0O@MKLLNEPG@AA?5Kills?5?$CFd?5?6?$AA@ DB 'AA Kills %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GEHCBOF@Aircraft?5status?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BF@GEHCBOF@Aircraft?5status?5?$CFs?5?6?$AA@ DB 'Aircraft status %s'
	DB	' ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BNPCKKMF@?5?9?5DAMAGED?5Both?5sides?$AA@
CONST	SEGMENT
??_C@_0BG@BNPCKKMF@?5?9?5DAMAGED?5Both?5sides?$AA@ DB ' - DAMAGED Both si'
	DB	'des', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LDLHFPBO@?5?9?5DAMAGED?5Right?5side?$AA@
CONST	SEGMENT
??_C@_0BG@LDLHFPBO@?5?9?5DAMAGED?5Right?5side?$AA@ DB ' - DAMAGED Right s'
	DB	'ide', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GABCFBAO@?5?9?5DAMAGED?5Left?5side?5?$AA@
CONST	SEGMENT
??_C@_0BG@GABCFBAO@?5?9?5DAMAGED?5Left?5side?5?$AA@ DB ' - DAMAGED Left s'
	DB	'ide ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IDDEJMDM@?5?9?5DESTROYED?$AA@
CONST	SEGMENT
??_C@_0N@IDDEJMDM@?5?9?5DESTROYED?$AA@ DB ' - DESTROYED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHMPLEDI@?5?9?5DAMAGED?$AA@
CONST	SEGMENT
??_C@_0L@FHMPLEDI@?5?9?5DAMAGED?$AA@ DB ' - DAMAGED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JCOFIOFE@?5?9?5REPAIRED?$AA@
CONST	SEGMENT
??_C@_0M@JCOFIOFE@?5?9?5REPAIRED?$AA@ DB ' - REPAIRED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NECBLOHJ@Pilot?5status?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BC@NECBLOHJ@Pilot?5status?5?$CFs?5?6?$AA@ DB 'Pilot status %s ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KAFIAHBI@?5?9?5RESCUED?$AA@
CONST	SEGMENT
??_C@_0L@KAFIAHBI@?5?9?5RESCUED?$AA@ DB ' - RESCUED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CIIKGIBK@?5?9?5MIA?$AA@
CONST	SEGMENT
??_C@_06CIIKGIBK@?5?9?5MIA?$AA@ DB ' - MIA', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NOBDHMG@?5?9?5KIA?$AA@
CONST	SEGMENT
??_C@_06NOBDHMG@?5?9?5KIA?$AA@ DB ' - KIA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LILJEDNC@?5?9?5OK?$AA@
CONST	SEGMENT
??_C@_05LILJEDNC@?5?9?5OK?$AA@ DB ' - OK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFIOHKIF@Callsign?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0P@FFIOHKIF@Callsign?3?5?$CFs?5?6?$AA@ DB 'Callsign: %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BMFMJKBJ@AI?5Player?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BA@BMFMJKBJ@AI?5Player?3?5?$CFs?5?6?$AA@ DB 'AI Player: %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CGHEKCME@Human?5Player?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BD@CGHEKCME@Human?5Player?3?5?$CFs?5?6?$AA@ DB 'Human Player: %s ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OPDOHJIC@PILOT?5SLOT?5?$CFd?3?6?6?$AA@
CONST	SEGMENT
??_C@_0BB@OPDOHJIC@PILOT?5SLOT?5?$CFd?3?6?6?$AA@ DB 'PILOT SLOT %d:', 0aH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MJCDAMBC@?6?9?9?9?9?9?9?9?9?9?9?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_0BA@MJCDAMBC@?6?9?9?9?9?9?9?9?9?9?9?9?9?9?6?$AA@ DB 0aH, '---------'
	DB	'----', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LGCHIIGB@Event?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0L@LGCHIIGB@Event?5?$CFs?5?6?$AA@ DB 'Event %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIINDLH@?6FLIGHT?5EVENTS?6?$AA@
CONST	SEGMENT
??_C@_0BA@NIINDLH@?6FLIGHT?5EVENTS?6?$AA@ DB 0aH, 'FLIGHT EVENTS', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IDPGLABD@Contry?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0N@IDPGLABD@Contry?3?5?$CFs?5?6?$AA@ DB 'Contry: %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMEDOBLI@Ac?5type?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0O@MMEDOBLI@Ac?5type?3?5?$CFs?5?6?$AA@ DB 'Ac type: %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EOLDELII@?$CFd?5Ship?5Flight?6?$AA@
CONST	SEGMENT
??_C@_0BA@EOLDELII@?$CFd?5Ship?5Flight?6?$AA@ DB '%d Ship Flight', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EEBFOKCB@Flight?5Unique?5Id?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BG@EEBFOKCB@Flight?5Unique?5Id?3?5?$CFd?6?$AA@ DB 'Flight Unique I'
	DB	'd: %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BCFAANAH@?6Mission?5Type?3?5?$CFs?5?6?$AA@
CONST	SEGMENT
??_C@_0BE@BCFAANAH@?6Mission?5Type?3?5?$CFs?5?6?$AA@ DB 0aH, 'Mission Typ'
	DB	'e: %s ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CHCLLJFL@Mission?5name?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@CHCLLJFL@Mission?5name?3?5?$CFs?6?$AA@ DB 'Mission name: %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OIBLHPO@Game?5is?5?$CFs?5type?5?$CFs?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BF@OIBLHPO@Game?5is?5?$CFs?5type?5?$CFs?$AN?6?$AA@ DB 'Game is %s '
	DB	'type %s', 0dH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05IEALKJIG@Local?$AA@
CONST	SEGMENT
??_C@_05IEALKJIG@Local?$AA@ DB 'Local', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FCDNMMPE@Networked?$AA@
CONST	SEGMENT
??_C@_09FCDNMMPE@Networked?$AA@ DB 'Networked', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@
CONST	SEGMENT
??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@ DB '<unknown>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FHHBCJKK@Campaign?$AA@
CONST	SEGMENT
??_C@_08FHHBCJKK@Campaign?$AA@ DB 'Campaign', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJKPNHIC@Tactical?5Engagement?$AA@
CONST	SEGMENT
??_C@_0BE@NJKPNHIC@Tactical?5Engagement?$AA@ DB 'Tactical Engagement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DLBHGMLL@DogFight?$AA@
CONST	SEGMENT
??_C@_08DLBHGMLL@DogFight?$AA@ DB 'DogFight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHEJFKFN@Instant?5Action?$AA@
CONST	SEGMENT
??_C@_0P@GHEJFKFN@Instant?5Action?$AA@ DB 'Instant Action', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IKDBNCFO@RECORD?5BEGIN?5TIMESTAMP?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@IKDBNCFO@RECORD?5BEGIN?5TIMESTAMP?5?$CFs?4?6?$AA@ DB 'RECORD BE'
	DB	'GIN TIMESTAMP %s.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HKCLIKLE@?$CFd?1?$CFd?1?$CFd?5?$CF02d?3?$CF02d?3?$CF02d?$AA@
CONST	SEGMENT
??_C@_0BI@HKCLIKLE@?$CFd?1?$CFd?1?$CFd?5?$CF02d?3?$CF02d?3?$CF02d?$AA@ DB '%'
	DB	'd/%d/%d %02d:%02d:%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@GBIKDBEL@?6?6?6?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0DN@GBIKDBEL@?6?6?6?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB 0aH
	DB	0aH, 0aH, '---------------------------------------------------'
	DB	'-----', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT
??_C@_01MCMALHOG@a?$AA@ DB 'a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGCAHMKC@debrief?4txt?$AA@
CONST	SEGMENT
??_C@_0M@MGCAHMKC@debrief?4txt?$AA@ DB 'debrief.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ$0
__unwindtable$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z$0
__unwindtable$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z$0
__unwindtable$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z$0
__unwindtable$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z$0
__unwindtable$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z$0
__unwindtable$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z$0
__unwindtable$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z$0
__unwindtable$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ$0
__unwindtable$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z$0
__unwindtable$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z$0
__unwindtable$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ$0
__unwindtable$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z$1
__unwindtable$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$2
__ehfuncinfo$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
?RecordPlayerFlightStart@@YAXXZ PROC			; RecordPlayerFlightStart

; 4484 : 	{

	push	ebp
	mov	ebp, esp

; 4485 : 	TheCampaign.MissionEvaluator->player_start_time = vuxGameTime;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+176], ecx

; 4486 : 	}

	pop	ebp
	ret	0
?RecordPlayerFlightStart@@YAXXZ ENDP			; RecordPlayerFlightStart
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
?ScoreInstantAction@@YAHW4score_type@@H@Z PROC		; ScoreInstantAction

; 4362 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4363 : 	switch (type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	ja	SHORT $LN7@ScoreInsta
	mov	ecx, DWORD PTR tv64[ebp]
	movzx	edx, BYTE PTR $LN11@ScoreInsta[ecx]
	jmp	DWORD PTR $LN12@ScoreInsta[edx*4]
$LN6@ScoreInsta:

; 4364 : 	{
; 4365 : 		case SCORE_FIRE_WEAPON:
; 4366 : 		{
; 4367 : 			return AddWeaponToUsageList (index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?AddWeaponToUsageList@@YAHH@Z		; AddWeaponToUsageList
	add	esp, 4
	jmp	SHORT $LN9@ScoreInsta
$LN5@ScoreInsta:

; 4368 : 		}
; 4369 : 
; 4370 : 		case SCORE_KILL_ENEMY:
; 4371 : 		{
; 4372 : 			return AddAircraftToKillsList(index);

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	call	?AddAircraftToKillsList@@YAHH@Z		; AddAircraftToKillsList
	add	esp, 4
	jmp	SHORT $LN9@ScoreInsta
$LN4@ScoreInsta:

; 4373 : 		}
; 4374 : 
; 4375 : 		case SCORE_KILL_FRIENDLY:
; 4376 : 		{
; 4377 : 			return AddAircraftToKillsList(index);

	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	call	?AddAircraftToKillsList@@YAHH@Z		; AddAircraftToKillsList
	add	esp, 4
	jmp	SHORT $LN9@ScoreInsta
$LN3@ScoreInsta:

; 4378 : 		}
; 4379 : 
; 4380 : 		case SCORE_KILL_ENEMY_GROUND:
; 4381 : 		{
; 4382 : 			return AddObjectToKillsList(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?AddObjectToKillsList@@YAHH@Z		; AddObjectToKillsList
	add	esp, 4
	jmp	SHORT $LN9@ScoreInsta
$LN2@ScoreInsta:

; 4383 : 		}
; 4384 : 
; 4385 : 		case SCORE_KILL_FRIENDLY_GROUND:
; 4386 : 		{
; 4387 : 			return AddObjectToKillsList(index);

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	call	?AddObjectToKillsList@@YAHH@Z		; AddObjectToKillsList
	add	esp, 4
	jmp	SHORT $LN9@ScoreInsta
$LN1@ScoreInsta:

; 4388 : 		}
; 4389 : 
; 4390 : 		case SCORE_PILOT_EJECTED:
; 4391 : 		{
; 4392 : 			return score_player_ejected ();;

	call	?score_player_ejected@@YAHXZ		; score_player_ejected
	jmp	SHORT $LN9@ScoreInsta
$LN7@ScoreInsta:

; 4393 : 		}
; 4394 : 	}
; 4395 : 
; 4396 : 	return 1;

	mov	eax, 1
$LN9@ScoreInsta:

; 4397 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@ScoreInsta:
	DD	$LN6@ScoreInsta
	DD	$LN1@ScoreInsta
	DD	$LN5@ScoreInsta
	DD	$LN4@ScoreInsta
	DD	$LN3@ScoreInsta
	DD	$LN2@ScoreInsta
	DD	$LN7@ScoreInsta
$LN11@ScoreInsta:
	DB	0
	DB	6
	DB	6
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	5
?ScoreInstantAction@@YAHW4score_type@@H@Z ENDP		; ScoreInstantAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv67 = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
?ScoreDogfight@@YAHW4score_type@@H@Z PROC		; ScoreDogfight

; 4332 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4333 : 	MonoPrint ("ScoreDogfight %d %d\n", type, index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BF@IFLHMPKP@ScoreDogfight?5?$CFd?5?$CFd?6?$AA@
	call	_MonoPrint
	add	esp, 12					; 0000000cH

; 4334 : 
; 4335 : 	switch (type)

	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	mov	eax, DWORD PTR tv67[ebp]
	sub	eax, 8
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 15			; 0000000fH
	ja	SHORT $LN3@ScoreDogfi
	mov	ecx, DWORD PTR tv67[ebp]
	movzx	edx, BYTE PTR $LN7@ScoreDogfi[ecx]
	jmp	DWORD PTR $LN8@ScoreDogfi[edx*4]
$LN2@ScoreDogfi:

; 4336 : 	{
; 4337 : 		case SCORE_KILL_ENEMY:
; 4338 : 		{
; 4339 : 			gRefreshScoresList=1;

	mov	DWORD PTR ?gRefreshScoresList@@3JA, 1	; gRefreshScoresList

; 4340 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN5@ScoreDogfi
$LN1@ScoreDogfi:

; 4341 : 		}
; 4342 : 		case SCORE_KILL_FRIENDLY:
; 4343 : 		case SCORE_GROUND_COLLISION:
; 4344 : 		case SCORE_FEATURE_COLLISION:
; 4345 : 		case SCORE_VEHICLE_COLLISION:
; 4346 : 		case SCORE_DEBREE_KILL:
; 4347 : 		case SCORE_BOMB_KILL:
; 4348 : //		case SCORE_PILOT_EJECTED:	// KCK: This will be scored when the ground collision comes through
; 4349 : 		{
; 4350 : 			gRefreshScoresList=1;

	mov	DWORD PTR ?gRefreshScoresList@@3JA, 1	; gRefreshScoresList

; 4351 : 			return -1;

	or	eax, -1
	jmp	SHORT $LN5@ScoreDogfi
$LN3@ScoreDogfi:

; 4352 : 		}
; 4353 : 	}
; 4354 : 	return 0;

	xor	eax, eax
$LN5@ScoreDogfi:

; 4355 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@ScoreDogfi:
	DD	$LN2@ScoreDogfi
	DD	$LN1@ScoreDogfi
	DD	$LN3@ScoreDogfi
$LN7@ScoreDogfi:
	DB	0
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	1
	DB	1
	DB	1
	DB	1
?ScoreDogfight@@YAHW4score_type@@H@Z ENDP		; ScoreDogfight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
?ScoreCampaign@@YAHW4score_type@@H@Z PROC		; ScoreCampaign

; 4218 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4219 : 	switch (type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 25			; 00000019H
	ja	$LN23@ScoreCampa
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN27@ScoreCampa[ecx*4]
$LN22@ScoreCampa:

; 4220 : 	{
; 4221 : 		case SCORE_FIRE_WEAPON:
; 4222 : 		{
; 4223 : 			return -1;

	or	eax, -1
	jmp	$LN25@ScoreCampa
$LN21@ScoreCampa:

; 4224 : 		}
; 4225 : 
; 4226 : 		case SCORE_GROUND_COLLISION:
; 4227 : 		case SCORE_FEATURE_COLLISION:
; 4228 : 		case SCORE_VEHICLE_COLLISION:
; 4229 : 		case SCORE_DEBREE_KILL:
; 4230 : 		case SCORE_BOMB_KILL:
; 4231 : 		{
; 4232 : 			return -25;

	mov	eax, -25				; ffffffe7H
	jmp	$LN25@ScoreCampa
$LN20@ScoreCampa:

; 4233 : 		}
; 4234 : 
; 4235 : 		case SCORE_GROUND_COLLISION_KILL:
; 4236 : 		case SCORE_VEHICLE_KILL:
; 4237 : 		{
; 4238 : 			return -15;

	mov	eax, -15				; fffffff1H
	jmp	$LN25@ScoreCampa
$LN19@ScoreCampa:

; 4239 : 		}
; 4240 : 
; 4241 : 		case SCORE_PILOT_EJECTED:
; 4242 : 		case SCORE_PILOT_EJECTED_KILL:
; 4243 : 		{
; 4244 : 			return 10;		// We ejected from a damaged airplane

	mov	eax, 10					; 0000000aH
	jmp	$LN25@ScoreCampa
$LN18@ScoreCampa:

; 4245 : 		}
; 4246 : 
; 4247 : 		case SCORE_PILOT_LOST:
; 4248 : 		case SCORE_PILOT_FOUND:
; 4249 : 		{
; 4250 : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN25@ScoreCampa
$LN17@ScoreCampa:

; 4251 : 		}
; 4252 : 
; 4253 : 		case SCORE_PILOT_LANDED:
; 4254 : 		{
; 4255 : 			return 2;

	mov	eax, 2
	jmp	SHORT $LN25@ScoreCampa
$LN16@ScoreCampa:

; 4256 : 		}
; 4257 : 
; 4258 : 		case SCORE_HIT_ENEMY:
; 4259 : 		{
; 4260 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN25@ScoreCampa
$LN15@ScoreCampa:

; 4261 : 		}
; 4262 : 
; 4263 : 		case SCORE_HIT_FRIENDLY:
; 4264 : 		{
; 4265 : 			return -2;

	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN25@ScoreCampa
$LN14@ScoreCampa:

; 4266 : 		}
; 4267 : 
; 4268 : 		case SCORE_KILL_ENEMY:
; 4269 : 		{
; 4270 : 			return 4;

	mov	eax, 4
	jmp	SHORT $LN25@ScoreCampa
$LN13@ScoreCampa:

; 4271 : 		}
; 4272 : 
; 4273 : 		case SCORE_KILL_FRIENDLY:
; 4274 : 		{
; 4275 : 			return -15;

	mov	eax, -15				; fffffff1H
	jmp	SHORT $LN25@ScoreCampa
$LN12@ScoreCampa:

; 4276 : 		}
; 4277 : 
; 4278 : 		case SCORE_KILL_ENEMY_FEATURE:
; 4279 : 		{
; 4280 : 			if (index > 49) //  || (value > 0 && o->Id() == package_element->target_id))

	cmp	DWORD PTR _index$[ebp], 49		; 00000031H
	jle	SHORT $LN11@ScoreCampa

; 4281 : 				return 4;		// High value or at our target

	mov	eax, 4
	jmp	SHORT $LN25@ScoreCampa
	jmp	SHORT $LN7@ScoreCampa
$LN11@ScoreCampa:

; 4282 : 			else if (index > 0)

	cmp	DWORD PTR _index$[ebp], 0
	jle	SHORT $LN9@ScoreCampa

; 4283 : 				return 2;		// Moderate value

	mov	eax, 2
	jmp	SHORT $LN25@ScoreCampa

; 4284 : 			else

	jmp	SHORT $LN7@ScoreCampa
$LN9@ScoreCampa:

; 4285 : 				return 0;

	xor	eax, eax
	jmp	SHORT $LN25@ScoreCampa
$LN7@ScoreCampa:

; 4286 : 		}
; 4287 : 
; 4288 : 		case SCORE_KILL_FRIENDLY_FEATURE:
; 4289 : 		{
; 4290 : 			return -10;

	mov	eax, -10				; fffffff6H
	jmp	SHORT $LN25@ScoreCampa
$LN6@ScoreCampa:

; 4291 : 		}
; 4292 : 
; 4293 : 		case SCORE_KILL_ENEMY_NAVAL:
; 4294 : 		{
; 4295 : 			return 3 + index;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 3
	jmp	SHORT $LN25@ScoreCampa
$LN5@ScoreCampa:

; 4296 : 		}
; 4297 : 
; 4298 : 		case SCORE_KILL_FRIENDLY_NAVAL:
; 4299 : 		{
; 4300 : 			return (-10 - index);

	mov	eax, -10				; fffffff6H
	sub	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN25@ScoreCampa
$LN4@ScoreCampa:

; 4301 : 		}
; 4302 : 
; 4303 : 		case SCORE_KILL_ENEMY_GROUND:
; 4304 : 		{
; 4305 : 			return 2;

	mov	eax, 2
	jmp	SHORT $LN25@ScoreCampa
$LN3@ScoreCampa:

; 4306 : 		}
; 4307 : 
; 4308 : 		case SCORE_KILL_FRIENDLY_GROUND:
; 4309 : 		{
; 4310 : 			return -8;

	mov	eax, -8					; fffffff8H
	jmp	SHORT $LN25@ScoreCampa
$LN2@ScoreCampa:

; 4311 : 		}
; 4312 : 
; 4313 : 		case SCORE_DIRECT_KILL_GROUND:
; 4314 : 		{
; 4315 : 			return 2;

	mov	eax, 2
	jmp	SHORT $LN25@ScoreCampa
$LN1@ScoreCampa:

; 4316 : 		}
; 4317 : 
; 4318 : 		case SCORE_HIT_OUR_TARGET:
; 4319 : 		{
; 4320 : 			return 2;

	mov	eax, 2
	jmp	SHORT $LN25@ScoreCampa
$LN23@ScoreCampa:

; 4321 : 		}
; 4322 : 	}
; 4323 : 
; 4324 : 	return 0;

	xor	eax, eax
$LN25@ScoreCampa:

; 4325 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN27@ScoreCampa:
	DD	$LN22@ScoreCampa
	DD	$LN18@ScoreCampa
	DD	$LN18@ScoreCampa
	DD	$LN19@ScoreCampa
	DD	$LN19@ScoreCampa
	DD	$LN17@ScoreCampa
	DD	$LN16@ScoreCampa
	DD	$LN15@ScoreCampa
	DD	$LN14@ScoreCampa
	DD	$LN13@ScoreCampa
	DD	$LN12@ScoreCampa
	DD	$LN7@ScoreCampa
	DD	$LN6@ScoreCampa
	DD	$LN5@ScoreCampa
	DD	$LN4@ScoreCampa
	DD	$LN3@ScoreCampa
	DD	$LN2@ScoreCampa
	DD	$LN1@ScoreCampa
	DD	$LN21@ScoreCampa
	DD	$LN20@ScoreCampa
	DD	$LN21@ScoreCampa
	DD	$LN21@ScoreCampa
	DD	$LN21@ScoreCampa
	DD	$LN21@ScoreCampa
	DD	$LN23@ScoreCampa
	DD	$LN20@ScoreCampa
?ScoreCampaign@@YAHW4score_type@@H@Z ENDP		; ScoreCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -28						; size = 8
tv90 = -20						; size = 4
_pflight$ = -16						; size = 4
_pilot_data$ = -12					; size = 4
_flight_ptr$ = -8					; size = 4
_pslot$ = -2						; size = 1
_acnum$ = -1						; size = 1
_session$ = 8						; size = 4
?CheckForNewPlayer@@YAXPAVFalconSessionEntity@@@Z PROC	; CheckForNewPlayer

; 4111 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 4112 : 	Flight				pflight = session->GetPlayerFlight();

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _pflight$[ebp], eax

; 4113 : 	uchar				pslot = session->GetPilotSlot();

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	mov	BYTE PTR _pslot$[ebp], al

; 4114 : 	uchar				acnum = session->GetAircraftNum();

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetAircraftNum@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetAircraftNum
	mov	BYTE PTR _acnum$[ebp], al

; 4115 : 	PilotDataClass		*pilot_data;
; 4116 : 	FlightDataClass		*flight_ptr;
; 4117 : 
; 4118 : 	if (!pflight || pslot == 255 || acnum > PILOTS_PER_FLIGHT)

	cmp	DWORD PTR _pflight$[ebp], 0
	je	SHORT $LN8@CheckForNe
	movzx	eax, BYTE PTR _pslot$[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN8@CheckForNe
	movzx	ecx, BYTE PTR _acnum$[ebp]
	cmp	ecx, 4
	jle	SHORT $LN9@CheckForNe
$LN8@CheckForNe:

; 4119 : 		return;

	jmp	$LN10@CheckForNe
$LN9@CheckForNe:

; 4120 : 
; 4121 : 	if ((session) && (session->GetGame () != FalconLocalGame))

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN7@CheckForNe
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@CheckForNe
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN13@CheckForNe
$LN12@CheckForNe:
	mov	DWORD PTR tv90[ebp], 0
$LN13@CheckForNe:
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	cmp	eax, DWORD PTR tv90[ebp]
	je	SHORT $LN7@CheckForNe

; 4122 : 	{
; 4123 : 		MonoPrint ("Session is not in this game\n");

	push	OFFSET ??_C@_0BN@CKAKIEH@Session?5is?5not?5in?5this?5game?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 4124 : 		return;

	jmp	$LN10@CheckForNe
$LN7@CheckForNe:

; 4125 : 	}
; 4126 : 
; 4127 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 4128 : 
; 4129 : 	// FRB - CTD's here
; 4130 : 	flight_ptr = TheCampaign.MissionEvaluator->flight_data;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN6@CheckForNe:

; 4131 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN5@CheckForNe

; 4132 : 		{
; 4133 : 		if (flight_ptr->flight_id == pflight->Id())

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _pflight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@CheckForNe

; 4134 : 			{
; 4135 : 			pilot_data = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_data$[ebp], edx
$LN3@CheckForNe:

; 4136 : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN2@CheckForNe

; 4137 : 				{
; 4138 : 				if (pilot_data->pilot_slot == pslot)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	movzx	edx, BYTE PTR _pslot$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@CheckForNe

; 4139 : 					{
; 4140 : 					pilot_data->aircraft_slot = acnum;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR _acnum$[ebp]
	mov	BYTE PTR [eax+60], cl

; 4141 : 					CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 4142 : 					return;

	jmp	SHORT $LN10@CheckForNe
$LN1@CheckForNe:

; 4143 : 					}
; 4144 : 				pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 4145 : 				}

	jmp	SHORT $LN3@CheckForNe
$LN2@CheckForNe:

; 4146 : 			TheCampaign.MissionEvaluator->AddNewPlayerPilot (flight_ptr, acnum, pflight, session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pflight$[ebp]
	push	edx
	movzx	eax, BYTE PTR _acnum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	call	?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ; MissionEvaluationClass::AddNewPlayerPilot

; 4147 : 			CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 4148 : 			return;

	jmp	SHORT $LN10@CheckForNe
$LN4@CheckForNe:

; 4149 : 			}		
; 4150 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 4151 : 		}

	jmp	$LN6@CheckForNe
$LN5@CheckForNe:

; 4152 : //	KCK: I don't think this line is correct.
; 4153 : //	TheCampaign.MissionEvaluator->PreEvalFlight(pflight,NULL);
; 4154 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN10@CheckForNe:

; 4155 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?CheckForNewPlayer@@YAXPAVFalconSessionEntity@@@Z ENDP	; CheckForNewPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv170 = -28						; size = 4
tv151 = -24						; size = 4
tv137 = -20						; size = 4
tv89 = -16						; size = 4
_flight_ptr$ = -12					; size = 4
_pilot_ptr$ = -8					; size = 4
_session$ = -4						; size = 4
_flight_data$ = 8					; size = 4
_pilot_data$ = 12					; size = 4
?UpdateEvaluators@@YAXPAVFlightDataClass@@PAVPilotDataClass@@@Z PROC ; UpdateEvaluators

; 4433 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 4434 : 	// First, check if this is the session who is tracking this record
; 4435 : 	FalconSessionEntity		*session = NULL;

	mov	DWORD PTR _session$[ebp], 0

; 4436 : 	FlightDataClass			*flight_ptr;
; 4437 : 	PilotDataClass			*pilot_ptr;
; 4438 : 
; 4439 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 4440 : 
; 4441 : 	// Check if this record is the local player
; 4442 : 	if (pilot_data->pilot_slot != NO_PILOT)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN12@UpdateEval

; 4443 : 		session = FindPlayer(flight_data->flight_id, pilot_data->aircraft_slot, pilot_data->pilot_slot);

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _flight_data$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	call	?FindPlayer@@YAPAVFalconSessionEntity@@VVU_ID@@EE@Z ; FindPlayer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _session$[ebp], eax
$LN12@UpdateEval:

; 4444 : 
; 4445 : 	if ((session) && (session->GetGame () != FalconLocalGame))

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN11@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN16@UpdateEval
$LN15@UpdateEval:
	mov	DWORD PTR tv89[ebp], 0
$LN16@UpdateEval:
	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	cmp	eax, DWORD PTR tv89[ebp]
	je	SHORT $LN11@UpdateEval

; 4446 : 	{
; 4447 : 		MonoPrint ("Session not in this local game\n");

	push	OFFSET ??_C@_0CA@DFDAEAKG@Session?5not?5in?5this?5local?5game?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 4448 : 		CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 4449 : 		return;

	jmp	$LN13@UpdateEval
$LN11@UpdateEval:

; 4450 : 	}
; 4451 : 
; 4452 : 	if (!session && FalconLocalGame && FalconLocalGame->GetGameType() == game_Dogfight)

	cmp	DWORD PTR _session$[ebp], 0
	jne	$LN10@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN18@UpdateEval
$LN17@UpdateEval:
	mov	DWORD PTR tv137[ebp], 0
$LN18@UpdateEval:
	cmp	DWORD PTR tv137[ebp], 0
	je	$LN10@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN19@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN20@UpdateEval
$LN19@UpdateEval:
	mov	DWORD PTR tv151[ebp], 0
$LN20@UpdateEval:
	mov	ecx, DWORD PTR tv151[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	jne	SHORT $LN10@UpdateEval

; 4453 : 		{
; 4454 : 		// For Dogfight games, host controls all data
; 4455 : 		if (FalconLocalGame->IsLocal())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@UpdateEval
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN22@UpdateEval
$LN21@UpdateEval:
	mov	DWORD PTR tv170[ebp], 0
$LN22@UpdateEval:
	mov	ecx, DWORD PTR tv170[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@UpdateEval

; 4456 : 			session = FalconLocalSession;

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	DWORD PTR _session$[ebp], eax
$LN9@UpdateEval:

; 4457 : 		}

	jmp	$LN8@UpdateEval
$LN10@UpdateEval:

; 4458 : 	else if (!session)

	cmp	DWORD PTR _session$[ebp], 0
	jne	$LN8@UpdateEval

; 4459 : 		{
; 4460 : 		// For Campaign or TacE, the first player in the package controls the data
; 4461 : 		flight_ptr = TheCampaign.MissionEvaluator->flight_data;

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _flight_ptr$[ebp], eax
$LN6@UpdateEval:

; 4462 : 		while (!session && flight_ptr)

	cmp	DWORD PTR _session$[ebp], 0
	jne	SHORT $LN8@UpdateEval
	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN8@UpdateEval

; 4463 : 			{
; 4464 : 			// The tracking session will be the first player in the package
; 4465 : 			pilot_ptr = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_ptr$[ebp], edx
$LN4@UpdateEval:

; 4466 : 			while (!session && pilot_ptr)

	cmp	DWORD PTR _session$[ebp], 0
	jne	SHORT $LN3@UpdateEval
	cmp	DWORD PTR _pilot_ptr$[ebp], 0
	je	SHORT $LN3@UpdateEval

; 4467 : 				{
; 4468 : 				if (pilot_ptr->pilot_slot != NO_PILOT)

	mov	eax, DWORD PTR _pilot_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN2@UpdateEval

; 4469 : 					session = FindPlayer(flight_ptr->flight_id, pilot_ptr->aircraft_slot, pilot_ptr->pilot_slot);

	mov	edx, DWORD PTR _pilot_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	push	eax
	mov	ecx, DWORD PTR _pilot_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	call	?FindPlayer@@YAPAVFalconSessionEntity@@VVU_ID@@EE@Z ; FindPlayer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _session$[ebp], eax
$LN2@UpdateEval:

; 4470 : 				pilot_ptr = pilot_ptr->next_pilot;

	mov	eax, DWORD PTR _pilot_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_ptr$[ebp], ecx

; 4471 : 				}

	jmp	SHORT $LN4@UpdateEval
$LN3@UpdateEval:

; 4472 : 			flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 4473 : 			}

	jmp	SHORT $LN6@UpdateEval
$LN8@UpdateEval:

; 4474 : 		}
; 4475 : 
; 4476 : 	if (session == FalconLocalSession)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	DWORD PTR _session$[ebp], eax
	jne	SHORT $LN1@UpdateEval

; 4477 : 		SendEvalData (flight_data, pilot_data);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight_data$[ebp]
	push	edx
	call	?SendEvalData@@YAXPAVFlightDataClass@@PAVPilotDataClass@@@Z ; SendEvalData
	add	esp, 8
$LN1@UpdateEval:

; 4478 : 
; 4479 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN13@UpdateEval:

; 4480 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateEvaluators@@YAXPAVFlightDataClass@@PAVPilotDataClass@@@Z ENDP ; UpdateEvaluators
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv76 = -8						; size = 4
tv79 = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
?CalcScore@@YAHW4score_type@@H@Z PROC			; CalcScore

; 4404 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4405 : 	switch (FalconLocalGame->GetGameType ())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@CalcScore
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN9@CalcScore
$LN8@CalcScore:
	mov	DWORD PTR tv76[ebp], 0
$LN9@CalcScore:
	mov	ecx, DWORD PTR tv76[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 3
	ja	SHORT $LN4@CalcScore
	mov	edx, DWORD PTR tv79[ebp]
	jmp	DWORD PTR $LN10@CalcScore[edx*4]
$LN3@CalcScore:

; 4406 : 	{
; 4407 : 		case game_InstantAction:
; 4408 : 		{
; 4409 : 			return ScoreInstantAction (type, index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	?ScoreInstantAction@@YAHW4score_type@@H@Z ; ScoreInstantAction
	add	esp, 8
	jmp	SHORT $LN6@CalcScore
$LN2@CalcScore:

; 4410 : 		}
; 4411 : 
; 4412 : 		case game_Dogfight:
; 4413 : 		{
; 4414 : 			return ScoreDogfight (type, index);

	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	?ScoreDogfight@@YAHW4score_type@@H@Z	; ScoreDogfight
	add	esp, 8
	jmp	SHORT $LN6@CalcScore
$LN1@CalcScore:

; 4415 : 		}
; 4416 : 
; 4417 : 		case game_TacticalEngagement:
; 4418 : 		case game_Campaign:
; 4419 : 		{
; 4420 : 			return ScoreCampaign (type, index);

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	?ScoreCampaign@@YAHW4score_type@@H@Z	; ScoreCampaign
	add	esp, 8
	jmp	SHORT $LN6@CalcScore
$LN4@CalcScore:

; 4421 : 		}
; 4422 : 	}
; 4423 : 
; 4424 : 	return 0;

	xor	eax, eax
$LN6@CalcScore:

; 4425 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@CalcScore:
	DD	$LN3@CalcScore
	DD	$LN2@CalcScore
	DD	$LN1@CalcScore
	DD	$LN1@CalcScore
?CalcScore@@YAHW4score_type@@H@Z ENDP			; CalcScore
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_as$ = -16						; size = 4
_w$ = -12						; size = 4
_x$ = -8						; size = 2
_y$ = -4						; size = 2
_flight$ = 8						; size = 4
?FindAlternateLandingStrip@@YAPAVObjectiveClass@@PAVFlightClass@@@Z PROC ; FindAlternateLandingStrip

; 4090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 4091 : 	WayPoint		w;
; 4092 : 	Objective		as;
; 4093 : 	GridIndex		x,y;
; 4094 : 
; 4095 : 	w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN4@FindAltern:

; 4096 : 	// Find the alternate waypoint, if we've got one
; 4097 : 	while (w && !(w->GetWPFlags() & WPF_ALTERNATE)){

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN3@FindAltern
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1024				; 00000400H
	jne	SHORT $LN3@FindAltern

; 4098 : 		w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 4099 : 	}

	jmp	SHORT $LN4@FindAltern
$LN3@FindAltern:

; 4100 : 	if (w){

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN2@FindAltern

; 4101 : 		w->GetWPLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 4102 : 		as = GetObjectiveByXY(x, y);

	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	call	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z ; GetObjectiveByXY
	add	esp, 8
	mov	DWORD PTR _as$[ebp], eax

; 4103 : 		if (as){

	cmp	DWORD PTR _as$[ebp], 0
	je	SHORT $LN2@FindAltern

; 4104 : 			return as;

	mov	eax, DWORD PTR _as$[ebp]
	jmp	SHORT $LN5@FindAltern
$LN2@FindAltern:

; 4105 : 		}
; 4106 : 	}
; 4107 : 	return NULL;

	xor	eax, eax
$LN5@FindAltern:

; 4108 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindAlternateLandingStrip@@YAPAVObjectiveClass@@PAVFlightClass@@@Z ENDP ; FindAlternateLandingStrip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv80 = -4						; size = 4
_eventType$ = 8						; size = 4
_format$ = 12						; size = 4
?GetFormatString@@YAXHPAD@Z PROC			; GetFormatString

; 134  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 135  : 	ReadIndexedString(FormatTable[eventType][FalconLocalGame->GetGameType()],format,79);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@GetFormatS
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@GetFormatS
$LN3@GetFormatS:
	mov	DWORD PTR tv80[ebp], 0
$LN4@GetFormatS:
	push	79					; 0000004fH
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	esi, DWORD PTR _eventType$[ebp]
	imul	esi, 20					; 00000014H
	mov	ecx, DWORD PTR tv80[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	edx, DWORD PTR ?FormatTable@@3PAY04HA[esi+eax*4]
	push	edx
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 136  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFormatString@@YAXHPAD@Z ENDP			; GetFormatString
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ PROC ; SimBaseClass::GetCampaignObject, COMDAT
; _this$ = ecx

; 212  : 	CampBaseClass *GetCampaignObject (void) { return campaignObject.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ENDP ; SimBaseClass::GetCampaignObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?GetSlot@SimBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSlot@SimBaseClass@@QAEHXZ PROC			; SimBaseClass::GetSlot, COMDAT
; _this$ = ecx

; 155  : 	int GetSlot () { return slotNumber;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+236]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSlot@SimBaseClass@@QAEHXZ ENDP			; SimBaseClass::GetSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?SetRating@FalconSessionEntity@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newrat$ = 8						; size = 1
?SetRating@FalconSessionEntity@@QAEXE@Z PROC		; FalconSessionEntity::SetRating, COMDAT
; _this$ = ecx

; 185  : 	void SetRating(uchar newrat)		{ rating = newrat; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newrat$[ebp]
	mov	BYTE PTR [eax+521], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRating@FalconSessionEntity@@QAEXE@Z ENDP		; FalconSessionEntity::SetRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?SetMissions@FalconSessionEntity@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_count$ = 8						; size = 2
?SetMissions@FalconSessionEntity@@QAEXG@Z PROC		; FalconSessionEntity::SetMissions, COMDAT
; _this$ = ecx

; 184  : 	void SetMissions(ushort count)		{ missions = count; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _count$[ebp]
	mov	WORD PTR [eax+508], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMissions@FalconSessionEntity@@QAEXG@Z ENDP		; FalconSessionEntity::SetMissions
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?SetKill@FalconSessionEntity@@QAEXGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CAT$ = 8						; size = 2
_kill$ = 12						; size = 2
?SetKill@FalconSessionEntity@@QAEXGG@Z PROC		; FalconSessionEntity::SetKill, COMDAT
; _this$ = ecx

; 183  : 	void SetKill(ushort CAT,ushort kill){ if(CAT < _KILL_CATS_) kills[CAT]=kill; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _CAT$[ebp]
	cmp	eax, 4
	jge	SHORT $LN2@SetKill
	movzx	ecx, WORD PTR _CAT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _kill$[ebp]
	mov	WORD PTR [edx+ecx*2+500], ax
$LN2@SetKill:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetKill@FalconSessionEntity@@QAEXGG@Z ENDP		; FalconSessionEntity::SetKill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetRating@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRating@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetRating, COMDAT
; _this$ = ecx

; 152  : 	uchar GetRating() const                       { return rating; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+521]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRating@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetRating
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetMissions@FalconSessionEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissions@FalconSessionEntity@@QBEGXZ PROC		; FalconSessionEntity::GetMissions, COMDAT
; _this$ = ecx

; 151  : 	ushort GetMissions() const                    { return missions; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+508]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissions@FalconSessionEntity@@QBEGXZ ENDP		; FalconSessionEntity::GetMissions
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetKill@FalconSessionEntity@@QBEGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CAT$ = 8						; size = 2
?GetKill@FalconSessionEntity@@QBEGG@Z PROC		; FalconSessionEntity::GetKill, COMDAT
; _this$ = ecx

; 150  : 	ushort GetKill(ushort CAT) const              { if(CAT < _KILL_CATS_) return(kills[CAT]); return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _CAT$[ebp]
	cmp	eax, 4
	jge	SHORT $LN1@GetKill
	movzx	ecx, WORD PTR _CAT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2+500]
	jmp	SHORT $LN2@GetKill
$LN1@GetKill:
	xor	eax, eax
$LN2@GetKill:
	mov	esp, ebp
	pop	ebp
	ret	4
?GetKill@FalconSessionEntity@@QBEGG@Z ENDP		; FalconSessionEntity::GetKill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPilotSlot@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotSlot@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetPilotSlot, COMDAT
; _this$ = ecx

; 146  : 	uchar GetPilotSlot (void) const               { return pilotSlot; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+512]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotSlot@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetAircraftNum@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAircraftNum@FalconSessionEntity@@QBEEXZ PROC	; FalconSessionEntity::GetAircraftNum, COMDAT
; _this$ = ecx

; 145  : 	uchar GetAircraftNum (void) const             { return aircraftNum; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+511]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAircraftNum@FalconSessionEntity@@QBEEXZ ENDP	; FalconSessionEntity::GetAircraftNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetInitAceFactor@FalconSessionEntity@@QBEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetInitAceFactor@FalconSessionEntity@@QBEMXZ PROC	; FalconSessionEntity::GetInitAceFactor, COMDAT
; _this$ = ecx

; 142  : 	float GetInitAceFactor() const                { return(initAceFactor); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+492]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInitAceFactor@FalconSessionEntity@@QBEMXZ ENDP	; FalconSessionEntity::GetInitAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetAceFactor@FalconSessionEntity@@QBEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetAceFactor@FalconSessionEntity@@QBEMXZ PROC		; FalconSessionEntity::GetAceFactor, COMDAT
; _this$ = ecx

; 141  : 	float GetAceFactor() const                    { return(AceFactor); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+488]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAceFactor@FalconSessionEntity@@QBEMXZ ENDP		; FalconSessionEntity::GetAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ PROC ; FalconSessionEntity::GetPlayerFlight, COMDAT
; _this$ = ecx

; 139  : 	FlightClass* GetPlayerFlight(void) const      { return playerFlightPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ENDP ; FalconSessionEntity::GetPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerFlightID, COMDAT
; _this$ = ecx

; 134  : 	VU_ID GetPlayerFlightID(void) const           { return playerFlight; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+460]
	mov	edx, DWORD PTR [eax+464]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerFlightID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ PROC	; FalconSessionEntity::GetPlayerCallsign, COMDAT
; _this$ = ecx

; 132  : 	_TCHAR* GetPlayerCallsign(void)               { return callSign; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ENDP	; FalconSessionEntity::GetPlayerCallsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerName@FalconSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerName@FalconSessionEntity@@QAEPADXZ PROC	; FalconSessionEntity::GetPlayerName, COMDAT
; _this$ = ecx

; 131  : 	_TCHAR* GetPlayerName(void)                   { return name; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerName@FalconSessionEntity@@QAEPADXZ ENDP	; FalconSessionEntity::GetPlayerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?SetAceFactor@LogBookData@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Factor$ = 8						; size = 4
?SetAceFactor@LogBookData@@QAEXM@Z PROC			; LogBookData::SetAceFactor, COMDAT
; _this$ = ecx

; 188  : 	void	SetAceFactor(float Factor)				{Pilot.AceFactor = Factor;SaveData();}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Factor$[ebp]
	movss	DWORD PTR [eax+76], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAceFactor@LogBookData@@QAEXM@Z ENDP			; LogBookData::SetAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?UpdateFlightHours@LogBookData@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Hours$ = 8						; size = 4
?UpdateFlightHours@LogBookData@@QAEXM@Z PROC		; LogBookData::UpdateFlightHours, COMDAT
; _this$ = ecx

; 155  : 	void	UpdateFlightHours(float Hours)			{Pilot.FlightHours += Hours;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	addss	xmm0, DWORD PTR _Hours$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateFlightHours@LogBookData@@QAEXM@Z ENDP		; LogBookData::UpdateFlightHours
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_flit$2 = -108						; size = 12
tv234 = -96						; size = 4
$T3 = -92						; size = 4
tv160 = -88						; size = 4
$T4 = -84						; size = 4
_pilot_data$5 = -80					; size = 4
_session$6 = -76					; size = 4
$T7 = -72						; size = 4
_tmp_pilot$8 = -68					; size = 4
$T9 = -64						; size = 4
tv90 = -60						; size = 4
tv76 = -56						; size = 4
_last_ptr$10 = -52					; size = 4
_last_pilot$11 = -48					; size = 4
_tmp_ptr$12 = -44					; size = 4
_kill$13 = -40						; size = 4
_uelement$14 = -36					; size = 4
_i$15 = -32						; size = 4
_flight$16 = -28					; size = 4
_this$ = -24						; size = 4
_pilot_data$17 = -20					; size = 4
_flight_ptr$18 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ PROC ; MissionEvaluationClass::RebuildEvaluationData
; _this$ = ecx

; 3949 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3950 : 	// KCK: This function will traverse all our data structures, throwing out any which 
; 3951 : 	// we don't need anymore and adding any new ones which have popped up
; 3952 : 
; 3953 : 	// NOTE: Dogfight only
; 3954 : 	if (!FalconLocalGame || FalconLocalGame->GetGameType() != game_Dogfight){

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN38@RebuildEva
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN39@RebuildEva
$LN38@RebuildEva:
	mov	DWORD PTR tv76[ebp], 0
$LN39@RebuildEva:
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN34@RebuildEva
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN40@RebuildEva
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN41@RebuildEva
$LN40@RebuildEva:
	mov	DWORD PTR tv90[ebp], 0
$LN41@RebuildEva:
	mov	ecx, DWORD PTR tv90[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	je	SHORT $LN35@RebuildEva
$LN34@RebuildEva:

; 3955 : 		return;

	jmp	$LN36@RebuildEva

; 3956 : 	}
; 3957 : 	else {

	jmp	$LN36@RebuildEva
$LN35@RebuildEva:

; 3958 : 		Unit				uelement;
; 3959 : 		FlightDataClass		*flight_ptr,*last_ptr=NULL,*tmp_ptr;

	mov	DWORD PTR _last_ptr$10[ebp], 0

; 3960 : 		PilotDataClass		*pilot_data,*last_pilot,*tmp_pilot;
; 3961 : 		Flight				flight;
; 3962 : 		int					i,kill;
; 3963 : 		static int			evalCount=0;
; 3964 : 		FalconSessionEntity	*session;
; 3965 : 
; 3966 : 		ShiAssert(flight_data == NULL || FALSE == F4IsBadReadPtr(flight_data, sizeof *flight_data));
; 3967 : 		// sfr @todo remove JB check
; 3968 : 		if (flight_data && F4IsBadReadPtr(flight_data, sizeof(FlightDataClass))) // JB 010305 CTD

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN32@RebuildEva
	push	168					; 000000a8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN32@RebuildEva

; 3969 : 			return;

	jmp	$LN36@RebuildEva
$LN32@RebuildEva:

; 3970 : 
; 3971 : 		CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3972 : 
; 3973 : 		// Traverse all our lists and remove anything we don't have references to anymore
; 3974 : 		flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$18[ebp], ecx
$LN31@RebuildEva:

; 3975 : 		while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$18[ebp], 0
	je	$LN30@RebuildEva

; 3976 : 			{
; 3977 : 			flight = (Flight)FindUnit(flight_ptr->flight_id);

	mov	edx, DWORD PTR _flight_ptr$18[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	call	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z	; FindUnit
	add	esp, 8
	mov	DWORD PTR _flight$16[ebp], eax

; 3978 : 			if (!flight)

	cmp	DWORD PTR _flight$16[ebp], 0
	jne	$LN29@RebuildEva

; 3979 : 				{
; 3980 : 				if (last_ptr)

	cmp	DWORD PTR _last_ptr$10[ebp], 0
	je	SHORT $LN28@RebuildEva

; 3981 : 					last_ptr->next_flight = flight_ptr->next_flight;

	mov	edx, DWORD PTR _last_ptr$10[ebp]
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR [edx+164], ecx

; 3982 : 				else

	jmp	SHORT $LN27@RebuildEva
$LN28@RebuildEva:

; 3983 : 					flight_data = flight_ptr->next_flight;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR [edx+204], ecx
$LN27@RebuildEva:

; 3984 : 				tmp_ptr = flight_ptr;

	mov	edx, DWORD PTR _flight_ptr$18[ebp]
	mov	DWORD PTR _tmp_ptr$12[ebp], edx

; 3985 : 				if (player_element == tmp_ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _tmp_ptr$12[ebp]
	jne	SHORT $LN26@RebuildEva

; 3986 : 					player_element = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
$LN26@RebuildEva:

; 3987 : 				if (package_element == tmp_ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _tmp_ptr$12[ebp]
	jne	SHORT $LN25@RebuildEva

; 3988 : 					package_element = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
$LN25@RebuildEva:

; 3989 : 				flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$18[ebp], ecx

; 3990 : 				delete tmp_ptr;

	mov	edx, DWORD PTR _tmp_ptr$12[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T9[ebp], eax
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN42@RebuildEva
	push	1
	mov	ecx, DWORD PTR $T9[ebp]
	call	??_GFlightDataClass@@QAEPAXI@Z
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN43@RebuildEva
$LN42@RebuildEva:
	mov	DWORD PTR tv160[ebp], 0
$LN43@RebuildEva:

; 3991 : 				}
; 3992 : 			else

	jmp	$LN24@RebuildEva
$LN29@RebuildEva:

; 3993 : 				{
; 3994 : 				// Check for team change
; 3995 : 				flight_ptr->flight_team = flight->GetTeam();

	mov	ecx, DWORD PTR _flight$16[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$16[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	ecx, DWORD PTR _flight_ptr$18[ebp]
	mov	BYTE PTR [ecx+60], al

; 3996 : 				// Check pilots
; 3997 : 				last_pilot = NULL;

	mov	DWORD PTR _last_pilot$11[ebp], 0

; 3998 : 				pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$18[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$17[ebp], eax
$LN23@RebuildEva:

; 3999 : 				while (pilot_data)

	cmp	DWORD PTR _pilot_data$17[ebp], 0
	je	$LN22@RebuildEva

; 4000 : 					{
; 4001 : 					kill = 0;

	mov	DWORD PTR _kill$13[ebp], 0

; 4002 : 					if (flight->pilots[pilot_data->aircraft_slot] == NO_PILOT && flight->player_slots[pilot_data->aircraft_slot] == NO_PILOT)

	mov	ecx, DWORD PTR _pilot_data$17[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	mov	eax, DWORD PTR _flight$16[ebp]
	movzx	ecx, BYTE PTR [eax+edx+412]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN21@RebuildEva
	mov	edx, DWORD PTR _pilot_data$17[ebp]
	movzx	eax, BYTE PTR [edx+60]
	mov	ecx, DWORD PTR _flight$16[ebp]
	movzx	edx, BYTE PTR [ecx+eax+420]
	cmp	edx, 255				; 000000ffH
	jne	SHORT $LN21@RebuildEva

; 4003 : 						kill++;		// Neither slot

	mov	eax, DWORD PTR _kill$13[ebp]
	add	eax, 1
	mov	DWORD PTR _kill$13[ebp], eax
	jmp	$LN20@RebuildEva
$LN21@RebuildEva:

; 4004 : 					else if (flight->pilots[pilot_data->aircraft_slot] != NO_PILOT && flight->player_slots[pilot_data->aircraft_slot] == NO_PILOT && pilot_data->pilot_slot != pilot_data->aircraft_slot)

	mov	ecx, DWORD PTR _pilot_data$17[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	mov	eax, DWORD PTR _flight$16[ebp]
	movzx	ecx, BYTE PTR [eax+edx+412]
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN19@RebuildEva
	mov	edx, DWORD PTR _pilot_data$17[ebp]
	movzx	eax, BYTE PTR [edx+60]
	mov	ecx, DWORD PTR _flight$16[ebp]
	movzx	edx, BYTE PTR [ecx+eax+420]
	cmp	edx, 255				; 000000ffH
	jne	SHORT $LN19@RebuildEva
	mov	eax, DWORD PTR _pilot_data$17[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	mov	edx, DWORD PTR _pilot_data$17[ebp]
	movzx	eax, BYTE PTR [edx+60]
	cmp	ecx, eax
	je	SHORT $LN19@RebuildEva

; 4005 : 						kill++;		// Player in AI slot

	mov	ecx, DWORD PTR _kill$13[ebp]
	add	ecx, 1
	mov	DWORD PTR _kill$13[ebp], ecx
	jmp	SHORT $LN20@RebuildEva
$LN19@RebuildEva:

; 4006 : 					else if (flight->player_slots[pilot_data->aircraft_slot] != NO_PILOT && pilot_data->pilot_slot == pilot_data->aircraft_slot)

	mov	edx, DWORD PTR _pilot_data$17[ebp]
	movzx	eax, BYTE PTR [edx+60]
	mov	ecx, DWORD PTR _flight$16[ebp]
	movzx	edx, BYTE PTR [ecx+eax+420]
	cmp	edx, 255				; 000000ffH
	je	SHORT $LN20@RebuildEva
	mov	eax, DWORD PTR _pilot_data$17[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	mov	edx, DWORD PTR _pilot_data$17[ebp]
	movzx	eax, BYTE PTR [edx+60]
	cmp	ecx, eax
	jne	SHORT $LN20@RebuildEva

; 4007 : 						kill++;		// AI in player slot

	mov	ecx, DWORD PTR _kill$13[ebp]
	add	ecx, 1
	mov	DWORD PTR _kill$13[ebp], ecx
$LN20@RebuildEva:

; 4008 : 					if (kill)

	cmp	DWORD PTR _kill$13[ebp], 0
	je	SHORT $LN16@RebuildEva

; 4009 : 						{
; 4010 : 						if (last_pilot)

	cmp	DWORD PTR _last_pilot$11[ebp], 0
	je	SHORT $LN15@RebuildEva

; 4011 : 							last_pilot->next_pilot = pilot_data->next_pilot;

	mov	edx, DWORD PTR _last_pilot$11[ebp]
	mov	eax, DWORD PTR _pilot_data$17[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR [edx+444], ecx

; 4012 : 						else

	jmp	SHORT $LN14@RebuildEva
$LN15@RebuildEva:

; 4013 : 							flight_ptr->pilot_list = pilot_data->next_pilot;

	mov	edx, DWORD PTR _flight_ptr$18[ebp]
	mov	eax, DWORD PTR _pilot_data$17[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR [edx+152], ecx
$LN14@RebuildEva:

; 4014 : 						tmp_pilot = pilot_data;

	mov	edx, DWORD PTR _pilot_data$17[ebp]
	mov	DWORD PTR _tmp_pilot$8[ebp], edx

; 4015 : 						if (player_pilot == tmp_pilot)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _tmp_pilot$8[ebp]
	jne	SHORT $LN13@RebuildEva

; 4016 : 							{
; 4017 : #ifdef FUNKY_KEVIN_DEBUG_STUFF
; 4018 : 							ShiAssert(!inMission);
; 4019 : #endif
; 4020 : 							player_pilot = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN13@RebuildEva:

; 4021 : 							}
; 4022 : 						pilot_data = pilot_data->next_pilot;

	mov	eax, DWORD PTR _pilot_data$17[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_data$17[ebp], ecx

; 4023 : 						delete tmp_pilot;

	mov	edx, DWORD PTR _tmp_pilot$8[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T7[ebp], eax
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN44@RebuildEva
	push	1
	mov	ecx, DWORD PTR $T7[ebp]
	call	??_GPilotDataClass@@QAEPAXI@Z
	mov	DWORD PTR tv234[ebp], eax
	jmp	SHORT $LN45@RebuildEva
$LN44@RebuildEva:
	mov	DWORD PTR tv234[ebp], 0
$LN45@RebuildEva:

; 4024 : 						}
; 4025 : 					else

	jmp	SHORT $LN12@RebuildEva
$LN16@RebuildEva:

; 4026 : 						{
; 4027 : 						last_pilot = pilot_data;

	mov	ecx, DWORD PTR _pilot_data$17[ebp]
	mov	DWORD PTR _last_pilot$11[ebp], ecx

; 4028 : 						pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$17[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$17[ebp], eax
$LN12@RebuildEva:

; 4029 : 						}
; 4030 : 					}

	jmp	$LN23@RebuildEva
$LN22@RebuildEva:

; 4031 : 				last_ptr = flight_ptr;

	mov	ecx, DWORD PTR _flight_ptr$18[ebp]
	mov	DWORD PTR _last_ptr$10[ebp], ecx

; 4032 : 				flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$18[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$18[ebp], eax
$LN24@RebuildEva:

; 4033 : 				}
; 4034 : 			}

	jmp	$LN31@RebuildEva
$LN30@RebuildEva:

; 4035 : 
; 4036 : 		// Now add any additional flights which matter
; 4037 : 		{
; 4038 : 			VuListIterator		flit(AllAirList);

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	ecx
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4039 : 			uelement = (Unit) flit.GetFirst();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _uelement$14[ebp], eax
$LN11@RebuildEva:

; 4040 : 			while (uelement){

	cmp	DWORD PTR _uelement$14[ebp], 0
	je	$LN10@RebuildEva

; 4041 : 				if (uelement->IsFlight()){

	mov	edx, DWORD PTR _uelement$14[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uelement$14[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	$LN9@RebuildEva

; 4042 : 					flight = (FlightClass*)uelement;

	mov	eax, DWORD PTR _uelement$14[ebp]
	mov	DWORD PTR _flight$16[ebp], eax

; 4043 : 					flight_ptr = FindFlightData(flight);

	mov	ecx, DWORD PTR _flight$16[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$18[ebp], eax

; 4044 : 					if (flight_ptr){

	cmp	DWORD PTR _flight_ptr$18[ebp], 0
	je	$LN8@RebuildEva

; 4045 : 						// Already exists - just check for new players
; 4046 : 						for (i=0; i<PILOTS_PER_FLIGHT; i++){

	mov	DWORD PTR _i$15[ebp], 0
	jmp	SHORT $LN7@RebuildEva
$LN6@RebuildEva:
	mov	edx, DWORD PTR _i$15[ebp]
	add	edx, 1
	mov	DWORD PTR _i$15[ebp], edx
$LN7@RebuildEva:
	cmp	DWORD PTR _i$15[ebp], 4
	jge	$LN5@RebuildEva

; 4047 : 							if (flight->plane_stats[i] == AIRCRAFT_AVAILABLE && !FindPilotDataFromAC(flight_ptr,i))

	mov	eax, DWORD PTR _flight$16[ebp]
	add	eax, DWORD PTR _i$15[ebp]
	movzx	ecx, BYTE PTR [eax+416]
	cmp	ecx, 4
	jne	$LN4@RebuildEva
	mov	edx, DWORD PTR _i$15[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotDataFromAC@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotDataFromAC
	test	eax, eax
	jne	$LN4@RebuildEva

; 4048 : 							{
; 4049 : 								// Add this pilot
; 4050 : 								session = FindPlayer((Flight)uelement,i);

	movzx	ecx, BYTE PTR _i$15[ebp]
	push	ecx
	mov	edx, DWORD PTR _uelement$14[ebp]
	push	edx
	call	?FindPlayer@@YAPAVFalconSessionEntity@@PAVFlightClass@@E@Z ; FindPlayer
	add	esp, 8
	mov	DWORD PTR _session$6[ebp], eax

; 4051 : 								if (session)

	cmp	DWORD PTR _session$6[ebp], 0
	je	SHORT $LN3@RebuildEva

; 4052 : 									AddNewPlayerPilot(flight_ptr, i, (Flight)uelement, session);

	mov	eax, DWORD PTR _session$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _uelement$14[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$15[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ; MissionEvaluationClass::AddNewPlayerPilot

; 4053 : 								else

	jmp	SHORT $LN4@RebuildEva
$LN3@RebuildEva:

; 4054 : 								{
; 4055 : 									PilotDataClass	*pilot_data = AddNewPilot(flight_ptr, i, i, flight);

	mov	ecx, DWORD PTR _flight$16[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$15[ebp]
	push	edx
	mov	eax, DWORD PTR _i$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$18[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ; MissionEvaluationClass::AddNewPilot
	mov	DWORD PTR _pilot_data$5[ebp], eax

; 4056 : 									// AI Pilots named by callsign
; 4057 : 									_stprintf(pilot_data->pilot_name,"%s%d",flight_ptr->name,i+1);

	mov	edx, DWORD PTR _i$15[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	push	eax
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
	mov	ecx, DWORD PTR _pilot_data$5[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 4058 : 									_stprintf(pilot_data->pilot_callsign,"%s%d",flight_ptr->name,i+1);

	mov	edx, DWORD PTR _i$15[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _flight_ptr$18[ebp]
	push	eax
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
	mov	ecx, DWORD PTR _pilot_data$5[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN4@RebuildEva:

; 4059 : 								}
; 4060 : 							}
; 4061 : 						}

	jmp	$LN6@RebuildEva
$LN5@RebuildEva:

; 4062 : 					}
; 4063 : 					else

	jmp	SHORT $LN1@RebuildEva
$LN8@RebuildEva:

; 4064 : 					{
; 4065 : 						// Add the whole thing
; 4066 : 						PreEvalFlight(flight, NULL);

	push	0
	mov	edx, DWORD PTR _flight$16[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ; MissionEvaluationClass::PreEvalFlight
$LN1@RebuildEva:

; 4067 : 					}
; 4068 : 					uelement->SetInPackage(1);

	push	1
	mov	ecx, DWORD PTR _uelement$14[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage
$LN9@RebuildEva:

; 4069 : 				}
; 4070 : 				uelement = (Unit) flit.GetNext();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _uelement$14[ebp], eax

; 4071 : 			}

	jmp	$LN11@RebuildEva
$LN10@RebuildEva:

; 4072 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 4073 : 
; 4074 : //		evalCount++;
; 4075 : //		if (evalCount > 500 && !(SimDogfight.flags & DF_GAME_OVER))
; 4076 : //			{
; 4077 : //			// Periodically send any evaluation data we may have
; 4078 : //			SendAllEvalData();
; 4079 : //			}
; 4080 : 
; 4081 : 		CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN36@RebuildEva:

; 4082 : 		}
; 4083 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ$0:
	lea	ecx, DWORD PTR _flit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RebuildEvaluationData@MissionEvaluationClass@@QAEXXZ ENDP ; MissionEvaluationClass::RebuildEvaluationData
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_element$ = -12						; size = 4
_this$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight$ = 8						; size = 4
_aircraft_slot$ = 12					; size = 1
?SetPlayerPilot@MissionEvaluationClass@@QAEXPAVFlightClass@@E@Z PROC ; MissionEvaluationClass::SetPlayerPilot
; _this$ = ecx

; 3922 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3923 : 	Flight				element;
; 3924 : 	FlightDataClass		*flight_ptr;
; 3925 : 
; 3926 : 	// KCK: Currently, this function isn't being called.
; 3927 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3928 : 	CleanupPilotData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupPilotData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupPilotData

; 3929 : 
; 3930 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN5@SetPlayerP:

; 3931 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@SetPlayerP

; 3932 : 		{
; 3933 : 		element = (Flight)FindUnit(flight_ptr->flight_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	call	?FindUnit@@YAPAVUnitClass@@VVU_ID@@@Z	; FindUnit
	add	esp, 8
	mov	DWORD PTR _element$[ebp], eax

; 3934 : 		if (element && flight_ptr->camp_id)

	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN3@SetPlayerP
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	test	eax, eax
	je	SHORT $LN3@SetPlayerP

; 3935 : 			{
; 3936 : 			if (element == flight)

	mov	ecx, DWORD PTR _element$[ebp]
	cmp	ecx, DWORD PTR _flight$[ebp]
	jne	SHORT $LN2@SetPlayerP

; 3937 : 				player_element = flight_ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN2@SetPlayerP:

; 3938 : 			flight_ptr->num_pilots = 0;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+108], 0

; 3939 : 			SetupPilots(flight_ptr, element);

	mov	edx, DWORD PTR _element$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupPilots@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::SetupPilots

; 3940 : 			}
; 3941 : 		else

	jmp	SHORT $LN1@SetPlayerP
$LN3@SetPlayerP:

; 3942 : 			flight_ptr->camp_id = 0;		

	xor	ecx, ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	WORD PTR [edx+36], cx
$LN1@SetPlayerP:

; 3943 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 3944 : 		}

	jmp	SHORT $LN5@SetPlayerP
$LN4@SetPlayerP:

; 3945 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3946 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?SetPlayerPilot@MissionEvaluationClass@@QAEXPAVFlightClass@@E@Z ENDP ; MissionEvaluationClass::SetPlayerPilot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -44						; size = 8
$T2 = -36						; size = 8
_p$ = -28						; size = 4
_pilot_data$3 = -24					; size = 4
_pilot_data$4 = -20					; size = 4
tv76 = -16						; size = 4
_this$ = -12						; size = 4
_session$ = -8						; size = 4
_i$ = -4						; size = 4
_flight_ptr$ = 8					; size = 4
_flight$ = 12						; size = 4
?SetupPilots@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVFlightClass@@@Z PROC ; MissionEvaluationClass::SetupPilots
; _this$ = ecx

; 3868 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 3869 : 	int					i,p;
; 3870 : 	FalconSessionEntity	*session;
; 3871 : 
; 3872 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3873 : 
; 3874 : 	if (FalconLocalGame->GetGameType() == game_Dogfight)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@SetupPilot
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN21@SetupPilot
$LN20@SetupPilot:
	mov	DWORD PTR tv76[ebp], 0
$LN21@SetupPilot:
	mov	ecx, DWORD PTR tv76[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	jne	$LN17@SetupPilot

; 3875 : 		{
; 3876 : 		// Add all pilots
; 3877 : 		for (i=0; i<PILOTS_PER_FLIGHT; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@SetupPilot
$LN15@SetupPilot:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN16@SetupPilot:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN14@SetupPilot

; 3878 : 			{
; 3879 : 			if (flight->plane_stats[i] == AIRCRAFT_AVAILABLE)

	mov	edx, DWORD PTR _flight$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+416]
	cmp	eax, 4
	jne	$LN13@SetupPilot

; 3880 : 				{
; 3881 : 				session = gCommsMgr->FindCampaignPlayer(flight->Id(),i);

	movzx	ecx, BYTE PTR _i$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _session$[ebp], eax

; 3882 : 				if (session)

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN12@SetupPilot

; 3883 : 					AddNewPlayerPilot(flight_ptr, i, flight, session);

	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ; MissionEvaluationClass::AddNewPlayerPilot

; 3884 : 				else

	jmp	SHORT $LN13@SetupPilot
$LN12@SetupPilot:

; 3885 : 					{
; 3886 : 					PilotDataClass	*pilot_data = AddNewPilot (flight_ptr, i, i, flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ; MissionEvaluationClass::AddNewPilot
	mov	DWORD PTR _pilot_data$4[ebp], eax

; 3887 : 					// AI Pilots named by callsign
; 3888 : 					_stprintf(pilot_data->pilot_name,"%s%d",flight_ptr->name,i+1);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
	mov	ecx, DWORD PTR _pilot_data$4[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 3889 : 					_stprintf(pilot_data->pilot_callsign,"%s%d",flight_ptr->name,i+1);

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
	mov	ecx, DWORD PTR _pilot_data$4[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN13@SetupPilot:

; 3890 : 					}
; 3891 : 				}
; 3892 : 			}

	jmp	$LN15@SetupPilot
$LN14@SetupPilot:

; 3893 : 		}
; 3894 : 	else

	jmp	$LN10@SetupPilot
$LN17@SetupPilot:

; 3895 : 		{
; 3896 : 		// Add all default pilots
; 3897 : 		for (i=0; i<PILOTS_PER_FLIGHT; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SetupPilot
$LN8@SetupPilot:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@SetupPilot:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN7@SetupPilot

; 3898 : 			{
; 3899 : 			if (flight->plane_stats[i] == AIRCRAFT_AVAILABLE)

	mov	eax, DWORD PTR _flight$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+416]
	cmp	ecx, 4
	jne	SHORT $LN6@SetupPilot

; 3900 : 				{
; 3901 : 				PilotDataClass	*pilot_data = AddNewPilot (flight_ptr, i, i, flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ; MissionEvaluationClass::AddNewPilot
	mov	DWORD PTR _pilot_data$3[ebp], eax

; 3902 : 				p = flight->GetPilotID(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetPilotID@FlightClass@@QAEHH@Z	; FlightClass::GetPilotID
	mov	DWORD PTR _p$[ebp], eax

; 3903 : 				::GetPilotName(p,pilot_data->pilot_name,29);

	push	29					; 0000001dH
	mov	ecx, DWORD PTR _pilot_data$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	?GetPilotName@@YAXHPADH@Z		; GetPilotName
	add	esp, 12					; 0000000cH

; 3904 : 				_stprintf(pilot_data->pilot_callsign,"%s%d",flight_ptr->name,i+1);

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd?$AA@
	mov	edx, DWORD PTR _pilot_data$3[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN6@SetupPilot:

; 3905 : 				}
; 3906 : 			}

	jmp	SHORT $LN8@SetupPilot
$LN7@SetupPilot:

; 3907 : 		// Now add any current player pilots
; 3908 : 		for (i=0; i<PILOTS_PER_FLIGHT; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@SetupPilot
$LN4@SetupPilot:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@SetupPilot:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN10@SetupPilot

; 3909 : 			{
; 3910 : 			if (flight->plane_stats[i] == AIRCRAFT_AVAILABLE)

	mov	ecx, DWORD PTR _flight$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [ecx+416]
	cmp	edx, 4
	jne	SHORT $LN2@SetupPilot

; 3911 : 				{
; 3912 : 				session = gCommsMgr->FindCampaignPlayer(flight->Id(),i);

	movzx	eax, BYTE PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _session$[ebp], eax

; 3913 : 				if (session)

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN2@SetupPilot

; 3914 : 					AddNewPlayerPilot(flight_ptr, i, flight, session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ; MissionEvaluationClass::AddNewPlayerPilot
$LN2@SetupPilot:

; 3915 : 				}
; 3916 : 			}

	jmp	SHORT $LN4@SetupPilot
$LN10@SetupPilot:

; 3917 : 		}
; 3918 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3919 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?SetupPilots@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVFlightClass@@@Z ENDP ; MissionEvaluationClass::SetupPilots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight$ = 8						; size = 4
?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z PROC ; MissionEvaluationClass::FindFlightData
; _this$ = ecx

; 3847 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 3848 : 	FlightDataClass	*flight_ptr;
; 3849 : 
; 3850 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3851 : 
; 3852 : 	flight_ptr = TheCampaign.MissionEvaluator->flight_data;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN3@FindFlight:

; 3853 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN2@FindFlight

; 3854 : 		{
; 3855 : 		if (flight_ptr->flight_id == flight->Id())

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@FindFlight

; 3856 : 			{
; 3857 : 			CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3858 : 			return flight_ptr;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	jmp	SHORT $LN4@FindFlight
$LN1@FindFlight:

; 3859 : 			}
; 3860 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 3861 : 		}

	jmp	SHORT $LN3@FindFlight
$LN2@FindFlight:

; 3862 : 
; 3863 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3864 : 	return NULL;

	xor	eax, eax
$LN4@FindFlight:

; 3865 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ENDP ; MissionEvaluationClass::FindFlightData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_ret_data$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
_flight_ptr$ = 8					; size = 4
_aircraft_slot$ = 12					; size = 4
?FindPilotDataFromAC@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z PROC ; MissionEvaluationClass::FindPilotDataFromAC
; _this$ = ecx

; 3823 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3824 : 	// Find the current pilot for this aircraft/flight combo.
; 3825 : 	PilotDataClass *pilot_data = NULL;

	mov	DWORD PTR _pilot_data$[ebp], 0

; 3826 : 	PilotDataClass *ret_data = NULL;

	mov	DWORD PTR _ret_data$[ebp], 0

; 3827 : 
; 3828 : 	if (!flight_ptr) // JB 010628 CTD

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	jne	SHORT $LN4@FindPilotD

; 3829 : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN5@FindPilotD
$LN4@FindPilotD:

; 3830 : 
; 3831 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3832 : 
; 3833 : 	// Since several players can have the same ac number, we take the last we find.
; 3834 : 	pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN3@FindPilotD:

; 3835 : 	while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN2@FindPilotD

; 3836 : 		{
; 3837 : 		if (pilot_data->aircraft_slot == aircraft_slot)

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	cmp	eax, DWORD PTR _aircraft_slot$[ebp]
	jne	SHORT $LN1@FindPilotD

; 3838 : 			ret_data = pilot_data;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR _ret_data$[ebp], ecx
$LN1@FindPilotD:

; 3839 : 		pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 3840 : 		}

	jmp	SHORT $LN3@FindPilotD
$LN2@FindPilotD:

; 3841 : 
; 3842 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3843 : 	return ret_data;

	mov	eax, DWORD PTR _ret_data$[ebp]
$LN5@FindPilotD:

; 3844 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?FindPilotDataFromAC@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ENDP ; MissionEvaluationClass::FindPilotDataFromAC
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_retval$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight_id$ = 8						; size = 4
_pilot_num$ = 12					; size = 4
?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@HH@Z PROC ; MissionEvaluationClass::FindPilotData
; _this$ = ecx

; 3805 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3806 : 	FlightDataClass			*flight_ptr;
; 3807 : 	PilotDataClass			*retval=NULL;

	mov	DWORD PTR _retval$[ebp], 0

; 3808 : 
; 3809 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3810 : 
; 3811 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN3@FindPilotD:

; 3812 : 	while (flight_ptr && !retval){

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN2@FindPilotD
	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN2@FindPilotD

; 3813 : 		if (flight_ptr->camp_id == flight_id)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	cmp	eax, DWORD PTR _flight_id$[ebp]
	jne	SHORT $LN1@FindPilotD

; 3814 : 			retval = FindPilotData(flight_ptr,pilot_num);

	mov	ecx, DWORD PTR _pilot_num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _retval$[ebp], eax
$LN1@FindPilotD:

; 3815 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 3816 : 	}

	jmp	SHORT $LN3@FindPilotD
$LN2@FindPilotD:

; 3817 : 
; 3818 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3819 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 3820 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@HH@Z ENDP ; MissionEvaluationClass::FindPilotData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
_flight_ptr$ = 8					; size = 4
_pilot_num$ = 12					; size = 4
?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z PROC ; MissionEvaluationClass::FindPilotData
; _this$ = ecx

; 3791 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3792 : 	PilotDataClass	*pilot_data;
; 3793 : 
; 3794 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3795 : 
; 3796 : 	pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN2@FindPilotD:

; 3797 : 	while ((pilot_data) && (pilot_data->pilot_slot != pilot_num))

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN1@FindPilotD
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	eax, DWORD PTR _pilot_num$[ebp]
	je	SHORT $LN1@FindPilotD

; 3798 : 		pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx
	jmp	SHORT $LN2@FindPilotD
$LN1@FindPilotD:

; 3799 : 
; 3800 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3801 : 	return pilot_data;

	mov	eax, DWORD PTR _pilot_data$[ebp]

; 3802 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ENDP ; MissionEvaluationClass::FindPilotData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -76						; size = 4
_loadout$ = -72						; size = 4
$T2 = -68						; size = 4
tv71 = -64						; size = 4
$T3 = -60						; size = 4
_load$ = -56						; size = 4
_new_weap$ = -52					; size = 4
_nw$ = -48						; size = 4
_w$ = -44						; size = 4
_j$4 = -40						; size = 4
_wid$ = -36						; size = 4
_wi$ = -32						; size = 4
_prev_pilot$ = -28					; size = 4
_k$ = -24						; size = 4
_pilot_data$ = -20					; size = 4
_entryfound$5 = -13					; size = 1
__$EHRec$ = -12						; size = 12
_flight_ptr$ = 8					; size = 4
_pilot_num$ = 12					; size = 4
_ac_num$ = 16						; size = 4
_flight$ = 20						; size = 4
?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z PROC ; MissionEvaluationClass::AddNewPilot
; _this$ = ecx

; 3684 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3685 : 	PilotDataClass	*pilot_data = new PilotDataClass;

	push	448					; 000001c0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN29@AddNewPilo
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0PilotDataClass@@QAE@XZ		; PilotDataClass::PilotDataClass
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN30@AddNewPilo
$LN29@AddNewPilo:
	mov	DWORD PTR tv71[ebp], 0
$LN30@AddNewPilo:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 3686 : 	PilotDataClass	*prev_pilot=NULL;

	mov	DWORD PTR _prev_pilot$[ebp], 0

; 3687 : 	int				k=0,w=0,wid=0,wi=0,nw=0,new_weap=0,load=0;

	mov	DWORD PTR _k$[ebp], 0
	mov	DWORD PTR _w$[ebp], 0
	mov	DWORD PTR _wid$[ebp], 0
	mov	DWORD PTR _wi$[ebp], 0
	mov	DWORD PTR _nw$[ebp], 0
	mov	DWORD PTR _new_weap$[ebp], 0
	mov	DWORD PTR _load$[ebp], 0

; 3688 : 	LoadoutStruct	*loadout = NULL;

	mov	DWORD PTR _loadout$[ebp], 0

; 3689 : 
; 3690 : 	// Assign a new pilot_slot
; 3691 : 	pilot_data->pilot_slot = pilot_num;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	al, BYTE PTR _pilot_num$[ebp]
	mov	BYTE PTR [edx+61], al

; 3692 : 	flight_ptr->num_pilots++;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	dl, BYTE PTR [ecx+108]
	add	dl, 1
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+108], dl

; 3693 : 
; 3694 : 	// Insert it into the list properly
; 3695 : 	prev_pilot = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _prev_pilot$[ebp], edx
$LN26@AddNewPilo:

; 3696 : 	while (prev_pilot && prev_pilot->next_pilot && prev_pilot->next_pilot->pilot_slot <= pilot_data->pilot_slot)

	cmp	DWORD PTR _prev_pilot$[ebp], 0
	je	SHORT $LN25@AddNewPilo
	mov	eax, DWORD PTR _prev_pilot$[ebp]
	cmp	DWORD PTR [eax+444], 0
	je	SHORT $LN25@AddNewPilo
	mov	ecx, DWORD PTR _prev_pilot$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	movzx	eax, BYTE PTR [edx+61]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	eax, edx
	jg	SHORT $LN25@AddNewPilo

; 3697 : 		prev_pilot = prev_pilot->next_pilot;

	mov	eax, DWORD PTR _prev_pilot$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _prev_pilot$[ebp], ecx
	jmp	SHORT $LN26@AddNewPilo
$LN25@AddNewPilo:

; 3698 : 
; 3699 : 	if (prev_pilot)

	cmp	DWORD PTR _prev_pilot$[ebp], 0
	je	SHORT $LN24@AddNewPilo

; 3700 : 		{
; 3701 : 		pilot_data->next_pilot = prev_pilot->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR _prev_pilot$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR [edx+444], ecx

; 3702 : 		prev_pilot->next_pilot = pilot_data;

	mov	edx, DWORD PTR _prev_pilot$[ebp]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [edx+444], eax

; 3703 : 		}
; 3704 : 	else

	jmp	SHORT $LN23@AddNewPilo
$LN24@AddNewPilo:

; 3705 : 		{
; 3706 : 		flight_ptr->pilot_list = pilot_data;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [ecx+152], edx

; 3707 : 		pilot_data->next_pilot = NULL;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [eax+444], 0
$LN23@AddNewPilo:

; 3708 : 		}
; 3709 : 
; 3710 : 	pilot_data->aircraft_slot = ac_num;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR _ac_num$[ebp]
	mov	BYTE PTR [ecx+60], dl

; 3711 : 	if (ac_num == pilot_num)

	mov	eax, DWORD PTR _ac_num$[ebp]
	cmp	eax, DWORD PTR _pilot_num$[ebp]
	jne	SHORT $LN22@AddNewPilo

; 3712 : 		pilot_data->pilot_id = flight->GetPilotID(ac_num);

	mov	ecx, DWORD PTR _ac_num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetPilotID@FlightClass@@QAEHH@Z	; FlightClass::GetPilotID
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+62], ax

; 3713 : 	else

	jmp	SHORT $LN21@AddNewPilo
$LN22@AddNewPilo:

; 3714 : 		pilot_data->pilot_id = -1;							// Player Pilot

	or	eax, -1
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [ecx+62], ax
$LN21@AddNewPilo:

; 3715 : 	pilot_data->pilot_status = PILOT_IN_USE;		

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+65], 4

; 3716 : 	for (k=0; k<(HARDPOINT_MAX/2)+2; k++)

	mov	DWORD PTR _k$[ebp], 0
	jmp	SHORT $LN20@AddNewPilo
$LN19@AddNewPilo:
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
$LN20@AddNewPilo:
	cmp	DWORD PTR _k$[ebp], 10			; 0000000aH
	jge	SHORT $LN18@AddNewPilo

; 3717 : 		{
; 3718 : 		pilot_data->weapon_data[k].root_event = NULL;

	mov	ecx, DWORD PTR _k$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [edx+ecx+116], 0

; 3719 : 		pilot_data->weapon_data[k].events = 0;

	mov	eax, DWORD PTR _k$[ebp]
	imul	eax, 36					; 00000024H
	xor	ecx, ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+eax+112], cx

; 3720 : 		}

	jmp	SHORT $LN19@AddNewPilo
$LN18@AddNewPilo:

; 3721 : 	// Check for player defined loadouts..
; 3722 : 	loadout = flight->GetLoadout(ac_num);

	mov	eax, DWORD PTR _ac_num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _loadout$[ebp], eax

; 3723 : 	// Move to constructor
; 3724 : //	memset(pilot_data->weapon_data,0,sizeof(WeaponDataClass)*(HARDPOINT_MAX/2)+1);
; 3725 : 	for (nw=0,w=0; w<HARDPOINT_MAX; w++)

	mov	DWORD PTR _nw$[ebp], 0
	mov	DWORD PTR _w$[ebp], 0
	jmp	SHORT $LN17@AddNewPilo
$LN16@AddNewPilo:
	mov	ecx, DWORD PTR _w$[ebp]
	add	ecx, 1
	mov	DWORD PTR _w$[ebp], ecx
$LN17@AddNewPilo:
	cmp	DWORD PTR _w$[ebp], 16			; 00000010H
	jge	$LN15@AddNewPilo

; 3726 : 		{
; 3727 : 		wid = flight->GetUnitWeaponId(w,ac_num);

	mov	edx, DWORD PTR _ac_num$[ebp]
	push	edx
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+584]
	call	eax
	mov	DWORD PTR _wid$[ebp], eax

; 3728 : 		if (!wid)

	cmp	DWORD PTR _wid$[ebp], 0
	jne	SHORT $LN14@AddNewPilo

; 3729 : 			continue;

	jmp	SHORT $LN16@AddNewPilo
$LN14@AddNewPilo:

; 3730 : 		wi = 0;

	mov	DWORD PTR _wi$[ebp], 0

; 3731 : 
; 3732 : /*		// JB 010104 Marco Edit 
; 3733 : 		// Check if LAU3A - if so set to 2.75in FFAR
; 3734 : 		if (wid == 71)
; 3735 : 			wid = 163 ;
; 3736 : 		// Check if UB-38-57 or UB-19-57 - if so set to 57mm S5 Rocket
; 3737 : 		if (wid == 93 || wid == 94)
; 3738 : 			wid = 163; //wid = 181 ;
; 3739 : 		// JB 010104 Marco Edit 
; 3740 : */
; 3741 : 
; 3742 : // 2002-04-14 MN use RocketDataType instead of hack
; 3743 : 		bool entryfound = false;

	mov	BYTE PTR _entryfound$5[ebp], 0

; 3744 : 		for (int j=0; j<NumRocketTypes; j++)

	mov	DWORD PTR _j$4[ebp], 0
	jmp	SHORT $LN13@AddNewPilo
$LN12@AddNewPilo:
	mov	ecx, DWORD PTR _j$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$4[ebp], ecx
$LN13@AddNewPilo:
	movsx	edx, WORD PTR ?NumRocketTypes@@3FA	; NumRocketTypes
	cmp	DWORD PTR _j$4[ebp], edx
	jge	SHORT $LN11@AddNewPilo

; 3745 : 		{
; 3746 : 			if (wid == RocketDataTable[j].weaponId)

	mov	eax, DWORD PTR _j$4[ebp]
	imul	eax, 6
	mov	ecx, DWORD PTR ?RocketDataTable@@3PAURocketClassDataType@@A ; RocketDataTable
	movsx	edx, WORD PTR [ecx+eax]
	cmp	DWORD PTR _wid$[ebp], edx
	jne	SHORT $LN10@AddNewPilo

; 3747 : 			{
; 3748 : 				if (RocketDataTable[j].nweaponId) // 0 = don't change weapon ID

	mov	eax, DWORD PTR _j$4[ebp]
	imul	eax, 6
	mov	ecx, DWORD PTR ?RocketDataTable@@3PAURocketClassDataType@@A ; RocketDataTable
	movsx	edx, WORD PTR [ecx+eax+2]
	test	edx, edx
	je	SHORT $LN9@AddNewPilo

; 3749 : 					wid = RocketDataTable[j].nweaponId;

	mov	eax, DWORD PTR _j$4[ebp]
	imul	eax, 6
	mov	ecx, DWORD PTR ?RocketDataTable@@3PAURocketClassDataType@@A ; RocketDataTable
	movsx	edx, WORD PTR [ecx+eax+2]
	mov	DWORD PTR _wid$[ebp], edx
$LN9@AddNewPilo:

; 3750 : 				entryfound = true;

	mov	BYTE PTR _entryfound$5[ebp], 1

; 3751 : 				break;

	jmp	SHORT $LN11@AddNewPilo
$LN10@AddNewPilo:

; 3752 : 			}
; 3753 : 		}

	jmp	SHORT $LN12@AddNewPilo
$LN11@AddNewPilo:

; 3754 : // 2002-04-16 MN sh*t... what should that do here ? copy and paste error...
; 3755 : /*		if (!entryfound)	// use generic 2.75mm rocket
; 3756 : 		{
; 3757 : 			wid = gRocketId;
; 3758 : 		}
; 3759 : */
; 3760 : 		for (k=HARDPOINT_MAX/2+1; k>=0; k--)

	mov	DWORD PTR _k$[ebp], 9
	jmp	SHORT $LN8@AddNewPilo
$LN7@AddNewPilo:
	mov	eax, DWORD PTR _k$[ebp]
	sub	eax, 1
	mov	DWORD PTR _k$[ebp], eax
$LN8@AddNewPilo:
	cmp	DWORD PTR _k$[ebp], 0
	jl	SHORT $LN6@AddNewPilo

; 3761 : 			{
; 3762 : 			if (pilot_data->weapon_data[k].weapon_id == wid)

	mov	ecx, DWORD PTR _k$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+ecx+104]
	cmp	eax, DWORD PTR _wid$[ebp]
	jne	SHORT $LN5@AddNewPilo

; 3763 : 				{
; 3764 : 				wi = k;

	mov	ecx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _wi$[ebp], ecx

; 3765 : 				new_weap = 0;

	mov	DWORD PTR _new_weap$[ebp], 0
$LN5@AddNewPilo:

; 3766 : 				}
; 3767 : 			if (!pilot_data->weapon_data[k].weapon_id)

	mov	edx, DWORD PTR _k$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+edx+104]
	test	ecx, ecx
	jne	SHORT $LN4@AddNewPilo

; 3768 : 				{
; 3769 : 				wi = k;

	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _wi$[ebp], edx

; 3770 : 				new_weap = 1;

	mov	DWORD PTR _new_weap$[ebp], 1
$LN4@AddNewPilo:

; 3771 : 				}
; 3772 : 			}

	jmp	SHORT $LN7@AddNewPilo
$LN6@AddNewPilo:

; 3773 : 		if (new_weap)

	cmp	DWORD PTR _new_weap$[ebp], 0
	je	SHORT $LN3@AddNewPilo

; 3774 : 			{
; 3775 : 			nw++;

	mov	eax, DWORD PTR _nw$[ebp]
	add	eax, 1
	mov	DWORD PTR _nw$[ebp], eax

; 3776 : 			_stprintf(pilot_data->weapon_data[wi].weapon_name,WeaponDataTable[wid].Name);

	mov	ecx, DWORD PTR _wid$[ebp]
	imul	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	lea	eax, DWORD PTR [edx+ecx+12]
	push	eax
	mov	ecx, DWORD PTR _wi$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	lea	eax, DWORD PTR [edx+ecx+84]
	push	eax
	call	_sprintf
	add	esp, 8

; 3777 : 			pilot_data->weapon_data[wi].weapon_id = wid;

	mov	ecx, DWORD PTR _wi$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	ax, WORD PTR _wid$[ebp]
	mov	WORD PTR [edx+ecx+104], ax
$LN3@AddNewPilo:

; 3778 : 			}
; 3779 : 		load = flight->GetUnitWeaponCount(w,ac_num);

	mov	ecx, DWORD PTR _ac_num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+588]
	call	eax
	mov	DWORD PTR _load$[ebp], eax

; 3780 : 		if (WeaponDataTable[wid].Flags & WEAP_ONETENTH)

	mov	ecx, DWORD PTR _wid$[ebp]
	imul	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movzx	eax, WORD PTR [edx+ecx+10]
	and	eax, 32768				; 00008000H
	je	SHORT $LN2@AddNewPilo

; 3781 : 			pilot_data->weapon_data[wi].starting_load += 10 * load;

	mov	ecx, DWORD PTR _wi$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _load$[ebp]
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+ecx+106]
	add	ecx, edx
	mov	edx, DWORD PTR _wi$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+edx+106], cx

; 3782 : 		else

	jmp	SHORT $LN1@AddNewPilo
$LN2@AddNewPilo:

; 3783 : 			pilot_data->weapon_data[wi].starting_load += load;

	mov	ecx, DWORD PTR _wi$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+ecx+106]
	add	eax, DWORD PTR _load$[ebp]
	mov	ecx, DWORD PTR _wi$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+ecx+106], ax
$LN1@AddNewPilo:

; 3784 : 		}

	jmp	$LN16@AddNewPilo
$LN15@AddNewPilo:

; 3785 : 	pilot_data->weapon_types = nw;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR _nw$[ebp]
	mov	BYTE PTR [eax+81], cl

; 3786 : 
; 3787 : 	return pilot_data;

	mov	eax, DWORD PTR _pilot_data$[ebp]

; 3788 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::AddNewPilot
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
_flight_ptr$ = 8					; size = 4
_ac_num$ = 12						; size = 4
_flight$ = 16						; size = 4
_player$ = 20						; size = 4
?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z PROC ; MissionEvaluationClass::AddNewPlayerPilot
; _this$ = ecx

; 3662 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3663 : 	if (!player)

	cmp	DWORD PTR _player$[ebp], 0
	jne	SHORT $LN2@AddNewPlay

; 3664 : 		return NULL;

	xor	eax, eax
	jmp	$LN3@AddNewPlay
$LN2@AddNewPlay:

; 3665 : 
; 3666 : #ifdef FUNKY_KEVIN_DEBUG_STUFF
; 3667 : 	ShiAssert(!inMission || player != FalconLocalSession);
; 3668 : #endif
; 3669 : 
; 3670 : 	// Tack on a new slot
; 3671 : 	PilotDataClass	*pilot_data = AddNewPilot(flight_ptr,player->GetPilotSlot(),ac_num,flight);

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ac_num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _player$[ebp]
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HHPAVFlightClass@@@Z ; MissionEvaluationClass::AddNewPilot
	mov	DWORD PTR _pilot_data$[ebp], eax

; 3672 : 	sprintf(pilot_data->pilot_name,player->GetPlayerName());

	mov	ecx, DWORD PTR _player$[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 3673 : 	sprintf(pilot_data->pilot_callsign,player->GetPlayerCallsign());

	mov	ecx, DWORD PTR _player$[ebp]
	call	?GetPlayerCallsign@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerCallsign
	push	eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	call	_sprintf
	add	esp, 8

; 3674 : 	pilot_data->pilot_flags |= PFLAG_PLAYER_CONTROLLED;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+64], cl

; 3675 : 	if (player == FalconLocalSession)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	DWORD PTR _player$[ebp], eax
	jne	SHORT $LN1@AddNewPlay

; 3676 : 		{
; 3677 : 		player_pilot = pilot_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 3678 : 		player_aircraft_slot = ac_num;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _ac_num$[ebp]
	mov	BYTE PTR [edx+20], al
$LN1@AddNewPlay:

; 3679 : 		}
; 3680 : 	return pilot_data;

	mov	eax, DWORD PTR _pilot_data$[ebp]
$LN3@AddNewPlay:

; 3681 : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AddNewPlayerPilot@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@HPAVFlightClass@@PAVFalconSessionEntity@@@Z ENDP ; MissionEvaluationClass::AddNewPlayerPilot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?GetFlightName@MissionEvaluationClass@@QAEHPAD@Z PROC	; MissionEvaluationClass::GetFlightName
; _this$ = ecx

; 3643 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3644 : 	int				retval=0;

	mov	DWORD PTR _retval$[ebp], 0

; 3645 : 
; 3646 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3647 : 
; 3648 : 	if (player_element)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@GetFlightN

; 3649 : 		{
; 3650 : 		_tcscpy(buffer, player_element->name);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 3651 : 		retval = 1;

	mov	DWORD PTR _retval$[ebp], 1

; 3652 : 		}
; 3653 : 	else

	jmp	SHORT $LN1@GetFlightN
$LN2@GetFlightN:

; 3654 : 		_tcscpy(buffer, "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN1@GetFlightN:

; 3655 : 
; 3656 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3657 : 
; 3658 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 3659 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFlightName@MissionEvaluationClass@@QAEHPAD@Z ENDP	; MissionEvaluationClass::GetFlightName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_pilot_ptr$ = -4					; size = 4
_pilot_num$ = 8						; size = 4
_buffer$ = 12						; size = 4
?GetPilotName@MissionEvaluationClass@@QAEHHPAD@Z PROC	; MissionEvaluationClass::GetPilotName
; _this$ = ecx

; 3613 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3614 : 	PilotDataClass	*pilot_ptr = NULL;

	mov	DWORD PTR _pilot_ptr$[ebp], 0

; 3615 : 	int				retval=0;

	mov	DWORD PTR _retval$[ebp], 0

; 3616 : 
; 3617 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3618 : 
; 3619 : 	if (player_element)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@GetPilotNa

; 3620 : 		{
; 3621 : 		pilot_ptr = player_element->pilot_list;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_ptr$[ebp], eax

; 3622 : 
; 3623 : 		if (pilot_ptr)

	cmp	DWORD PTR _pilot_ptr$[ebp], 0
	je	SHORT $LN6@GetPilotNa
$LN4@GetPilotNa:

; 3624 : 			{
; 3625 : 			while (pilot_ptr && pilot_ptr->pilot_slot != pilot_num)

	cmp	DWORD PTR _pilot_ptr$[ebp], 0
	je	SHORT $LN6@GetPilotNa
	mov	ecx, DWORD PTR _pilot_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	edx, DWORD PTR _pilot_num$[ebp]
	je	SHORT $LN6@GetPilotNa

; 3626 : 				pilot_ptr = pilot_ptr->next_pilot;

	mov	eax, DWORD PTR _pilot_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_ptr$[ebp], ecx
	jmp	SHORT $LN4@GetPilotNa
$LN6@GetPilotNa:

; 3627 : 			}
; 3628 : 		}
; 3629 : 	if (pilot_ptr && pilot_ptr->pilot_id != NO_PILOT)

	cmp	DWORD PTR _pilot_ptr$[ebp], 0
	je	SHORT $LN2@GetPilotNa
	mov	edx, DWORD PTR _pilot_ptr$[ebp]
	movsx	eax, WORD PTR [edx+62]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN2@GetPilotNa

; 3630 : 		{
; 3631 : 		_tcscpy(buffer, pilot_ptr->pilot_name);

	mov	ecx, DWORD PTR _pilot_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 3632 : 		retval = 1;

	mov	DWORD PTR _retval$[ebp], 1

; 3633 : 		}
; 3634 : 	else

	jmp	SHORT $LN1@GetPilotNa
$LN2@GetPilotNa:

; 3635 : 		_tcscpy(buffer, "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN1@GetPilotNa:

; 3636 : 
; 3637 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3638 : 
; 3639 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 3640 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?GetPilotName@MissionEvaluationClass@@QAEHHPAD@Z ENDP	; MissionEvaluationClass::GetPilotName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -20						; size = 4
_flight_ptr$ = -16					; size = 4
_campId$ = -12						; size = 2
_numAC$ = -8						; size = 2
_i$ = -4						; size = 2
_flight$ = 8						; size = 4
?SetFinalAircraft@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z PROC ; MissionEvaluationClass::SetFinalAircraft
; _this$ = ecx

; 3584 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 3585 : 	short				campId,numAC,i;
; 3586 : 	FlightDataClass		*flight_ptr;
; 3587 : 
; 3588 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3589 : 
; 3590 : 	campId = flight->GetCampID();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	WORD PTR _campId$[ebp], ax

; 3591 : 	numAC = 0;

	xor	ecx, ecx
	mov	WORD PTR _numAC$[ebp], cx

; 3592 : 	flight_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _flight_ptr$[ebp], eax
$LN7@SetFinalAi:

; 3593 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN6@SetFinalAi

; 3594 : 		{
; 3595 : 		if (flight_ptr->camp_id == campId)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	movsx	eax, WORD PTR _campId$[ebp]
	cmp	edx, eax
	jne	SHORT $LN5@SetFinalAi

; 3596 : 			{
; 3597 : 			// Count remaining aircraft
; 3598 : 			for (i=0; i<PILOTS_PER_FLIGHT; i++)

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN4@SetFinalAi
$LN3@SetFinalAi:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN4@SetFinalAi:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 4
	jge	SHORT $LN2@SetFinalAi

; 3599 : 				{
; 3600 : 				if (flight->plane_stats[i] == AIRCRAFT_AVAILABLE)

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _flight$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+416]
	cmp	eax, 4
	jne	SHORT $LN1@SetFinalAi

; 3601 : 					numAC++;

	mov	cx, WORD PTR _numAC$[ebp]
	add	cx, 1
	mov	WORD PTR _numAC$[ebp], cx
$LN1@SetFinalAi:

; 3602 : 				}

	jmp	SHORT $LN3@SetFinalAi
$LN2@SetFinalAi:

; 3603 : 			// Record remaining aircraft
; 3604 : 			flight_ptr->finish_aircraft = static_cast<uchar>(numAC);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	al, BYTE PTR _numAC$[ebp]
	mov	BYTE PTR [edx+59], al
$LN5@SetFinalAi:

; 3605 : 			}		
; 3606 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 3607 : 		}

	jmp	SHORT $LN7@SetFinalAi
$LN6@SetFinalAi:

; 3608 : 
; 3609 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3610 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?SetFinalAircraft@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::SetFinalAircraft
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -20						; size = 4
tv90 = -16						; size = 4
_meflags$ = -12						; size = 4
_flight_ptr$ = -8					; size = 4
_w$ = -4						; size = 4
_flight$ = 8						; size = 4
?Register3DAWACSabort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z PROC ; MissionEvaluationClass::Register3DAWACSabort
; _this$ = ecx

; 3395 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 3396 : 	WayPoint w;
; 3397 : 	int	meflags = 0;

	mov	DWORD PTR _meflags$[ebp], 0

; 3398 : 	FlightDataClass	*flight_ptr = NULL;

	mov	DWORD PTR _flight_ptr$[ebp], 0

; 3399 : 
; 3400 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3401 : 
; 3402 : 	flight_ptr = FindFlightData(flight);

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3403 : 	if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN5@Register3D

; 3404 : 	{
; 3405 : 		meflags = flight_ptr->status_flags;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _meflags$[ebp], edx

; 3406 : 		w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN4@Register3D:

; 3407 : 		while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN3@Register3D

; 3408 : 		{
; 3409 : 			if (w->GetWPFlags() & WPF_TARGET)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN2@Register3D

; 3410 : 			{
; 3411 : 				if (w->GetWPTarget() && w->GetWPTarget()->GetTeam() == flight->GetTeam())

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	test	eax, eax
	je	SHORT $LN1@Register3D
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	mov	DWORD PTR tv90[ebp], eax
	mov	eax, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN1@Register3D

; 3412 : 					meflags |= MISEVAL_FLIGHT_ABORT_BY_AWACS;

	mov	edx, DWORD PTR _meflags$[ebp]
	or	edx, 1073741824				; 40000000H
	mov	DWORD PTR _meflags$[ebp], edx
$LN1@Register3D:

; 3413 : 				break;

	jmp	SHORT $LN3@Register3D
$LN2@Register3D:

; 3414 : 			}
; 3415 : 			w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 3416 : 		}

	jmp	SHORT $LN4@Register3D
$LN3@Register3D:

; 3417 : 		flight_ptr->status_flags = meflags;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR _meflags$[ebp]
	mov	DWORD PTR [eax+32], ecx
$LN5@Register3D:

; 3418 : 	}
; 3419 : 
; 3420 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3421 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Register3DAWACSabort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::Register3DAWACSabort
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_role$ = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_eteam$ = 16						; size = 4
_type$ = 20						; size = 4
_event$ = 24						; size = 4
?RegisterEvent@MissionEvaluationClass@@QAEXFFHHPAD@Z PROC ; MissionEvaluationClass::RegisterEvent
; _this$ = ecx

; 3538 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 3539 : 	int		role;
; 3540 : 
; 3541 : 	if (!(flags & MISEVAL_MISSION_IN_PROGRESS))

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 1
	jne	SHORT $LN13@RegisterEv

; 3542 : 		return;

	jmp	$LN14@RegisterEv
$LN13@RegisterEv:

; 3543 : 
; 3544 : 	if (team != eteam)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+25]
	cmp	eax, DWORD PTR _eteam$[ebp]
	je	SHORT $LN12@RegisterEv

; 3545 : 		return;

	jmp	$LN14@RegisterEv
$LN12@RegisterEv:

; 3546 : 
; 3547 : 	// Filter out types by role
; 3548 : 	role = MissionData[package_mission].skill;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	shl	edx, 5
	movzx	eax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+2]
	mov	DWORD PTR _role$[ebp], eax

; 3549 : 	if (type != FalconCampEventMessage::campStrike)

	cmp	DWORD PTR _type$[ebp], 1
	je	SHORT $LN11@RegisterEv

; 3550 : 		{
; 3551 : 		if (role == ARO_CA && type != FalconCampEventMessage::campAirCombat)

	cmp	DWORD PTR _role$[ebp], 1
	jne	SHORT $LN10@RegisterEv
	cmp	DWORD PTR _type$[ebp], 2
	je	SHORT $LN10@RegisterEv

; 3552 : 			return;

	jmp	$LN14@RegisterEv
	jmp	SHORT $LN11@RegisterEv
$LN10@RegisterEv:

; 3553 : 		else if (role == ARO_GA && type != FalconCampEventMessage::campGroundAttack)

	cmp	DWORD PTR _role$[ebp], 4
	jne	SHORT $LN11@RegisterEv
	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN11@RegisterEv

; 3554 : 			return;

	jmp	$LN14@RegisterEv
$LN11@RegisterEv:

; 3555 : 		}
; 3556 : 
; 3557 : 	if (DistSqu(x,y,tx,ty) < RELATED_EVENT_RANGE_SQ)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+186]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+184]
	push	ecx
	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cmp	eax, 900				; 00000384H
	jge	$LN14@RegisterEv

; 3558 : 		{
; 3559 : 		// Check if already in our list
; 3560 : 		for (int i=0; i<MAX_RELATED_EVENTS; i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN6@RegisterEv
$LN5@RegisterEv:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN6@RegisterEv:
	cmp	DWORD PTR _i$3[ebp], 5
	jge	SHORT $LN4@RegisterEv

; 3561 : 			{
; 3562 : 			if (related_events[i] && _tcscmp(related_events[i],event) == 0)

	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+236], 0
	je	SHORT $LN3@RegisterEv
	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+236]
	push	ecx
	call	__tcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@RegisterEv

; 3563 : 				return;

	jmp	$LN14@RegisterEv
$LN3@RegisterEv:

; 3564 : 			}

	jmp	SHORT $LN5@RegisterEv
$LN4@RegisterEv:

; 3565 : 		if (related_events[last_related_event])

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+233]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+236], 0
	je	SHORT $LN2@RegisterEv

; 3566 : 			delete related_events[last_related_event];

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+233]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+236]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@RegisterEv:

; 3567 : 		#ifdef USE_SH_POOLS
; 3568 : 		related_events[last_related_event] = (_TCHAR *)MemAllocPtr( gTextMemPool, sizeof(_TCHAR)*(_tcslen(event)+1), FALSE );
; 3569 : 		#else
; 3570 : 		related_events[last_related_event] = new _TCHAR[_tcslen(event)+1];

	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+233]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+eax*4+236], edx

; 3571 : 		#endif
; 3572 : 		strcpy(related_events[last_related_event],event);

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+233]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+236]
	push	ecx
	call	_strcpy
	add	esp, 8

; 3573 : 		last_related_event++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+233]
	add	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+233], al

; 3574 : 		if (last_related_event >= MAX_RELATED_EVENTS)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+233]
	cmp	eax, 5
	jl	SHORT $LN14@RegisterEv

; 3575 : 			last_related_event = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+233], 0
$LN14@RegisterEv:

; 3576 : 		}
; 3577 : 	}

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?RegisterEvent@MissionEvaluationClass@@QAEXFFHHPAD@Z ENDP ; MissionEvaluationClass::RegisterEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_best$ = -16						; size = 4
_flight_ptr$ = -12					; size = 4
_this$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
_team$ = 8						; size = 4
?RegisterWin@MissionEvaluationClass@@QAEXH@Z PROC	; MissionEvaluationClass::RegisterWin
; _this$ = ecx

; 3503 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 3504 : 	// This team won (-1 means player with highest score won)
; 3505 : 	FlightDataClass		*flight_ptr;
; 3506 : 	PilotDataClass		*pilot_data;
; 3507 : 	int					best=GetMaxScore();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxScore@MissionEvaluationClass@@QAEHXZ ; MissionEvaluationClass::GetMaxScore
	mov	DWORD PTR _best$[ebp], eax

; 3508 : 
; 3509 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3510 : 	flags |= MISEVAL_GAME_COMPLETED;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	or	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+26], cx

; 3511 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN10@RegisterWi:

; 3512 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN9@RegisterWi

; 3513 : 		{
; 3514 : 		if (team == -1 || flight_ptr->flight_team == team)

	cmp	DWORD PTR _team$[ebp], -1
	je	SHORT $LN7@RegisterWi
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	cmp	eax, DWORD PTR _team$[ebp]
	jne	SHORT $LN8@RegisterWi
$LN7@RegisterWi:

; 3515 : 			{
; 3516 : 			pilot_data = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_data$[ebp], edx
$LN6@RegisterWi:

; 3517 : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN8@RegisterWi

; 3518 : 				{
; 3519 : 				if (team != -1)

	cmp	DWORD PTR _team$[ebp], -1
	je	SHORT $LN4@RegisterWi

; 3520 : 					pilot_data->pilot_flags |= PFLAG_WON_GAME;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	or	ecx, 2
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+64], cl
	jmp	SHORT $LN3@RegisterWi
$LN4@RegisterWi:

; 3521 : 				else if (pilot_data->score >= best)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+78]
	cmp	ecx, DWORD PTR _best$[ebp]
	jl	SHORT $LN3@RegisterWi

; 3522 : 					pilot_data->pilot_flags |= PFLAG_WON_GAME;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+64]
	or	eax, 2
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [ecx+64], al
$LN3@RegisterWi:

; 3523 : 				if (pilot_data->player_kills)

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+71]
	test	eax, eax
	je	SHORT $LN1@RegisterWi

; 3524 : 					flags |= MISEVAL_ONLINE_GAME;

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+26]
	or	edx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+26], dx
$LN1@RegisterWi:

; 3525 : 				pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 3526 : 				}

	jmp	SHORT $LN6@RegisterWi
$LN8@RegisterWi:

; 3527 : 			}
; 3528 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 3529 : 		}

	jmp	$LN10@RegisterWi
$LN9@RegisterWi:

; 3530 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3531 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterWin@MissionEvaluationClass@@QAEXH@Z ENDP	; MissionEvaluationClass::RegisterWin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?RegisterRoundWon@MissionEvaluationClass@@QAEXH@Z PROC	; MissionEvaluationClass::RegisterRoundWon
; _this$ = ecx

; 3498 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3499 : 	rounds_won[team]++;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _team$[ebp]
	mov	cl, BYTE PTR [eax+228]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _team$[ebp]
	mov	BYTE PTR [edx+228], cl

; 3500 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterRoundWon@MissionEvaluationClass@@QAEXH@Z ENDP	; MissionEvaluationClass::RegisterRoundWon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 8
_target$ = -12						; size = 4
_this$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight$ = 8						; size = 4
_mis$ = 12						; size = 4
?RegisterDivert@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVMissionRequestClass@@@Z PROC ; MissionEvaluationClass::RegisterDivert
; _this$ = ecx

; 3466 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 3467 : 	FlightDataClass		*flight_ptr;
; 3468 : 	CampEntity			target = NULL;

	mov	DWORD PTR _target$[ebp], 0

; 3469 : 
; 3470 : 	if (!(flags & MISEVAL_MISSION_IN_PROGRESS))

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 1
	jne	SHORT $LN4@RegisterDi

; 3471 : 		return;

	jmp	$LN5@RegisterDi
$LN4@RegisterDi:

; 3472 : 
; 3473 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3474 : 	flight_ptr = FindFlightData(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3475 : 	if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN3@RegisterDi

; 3476 : 		{
; 3477 : 		// KCK TODO: Convert this flight's mission to the divert mission
; 3478 : 		flight_ptr->mission = mis->mission;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR _mis$[ebp]
	mov	dl, BYTE PTR [ecx+60]
	mov	BYTE PTR [eax+61], dl

; 3479 : 		if (flight_ptr == package_element)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	$LN3@RegisterDi

; 3480 : 			{
; 3481 : 			// Trying to track down a potential bug here.. It's hard enough to
; 3482 : 			// get diverts I figure I'll let QA do the testing..
; 3483 : 			// ShiAssert (!"Show this to Kevin K."); - Not any more - RH
; 3484 : 
; 3485 : 			flight_ptr->mission_context = flight->GetMissionContext();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetMissionContext@FlightClass@@QAEEXZ	; FlightClass::GetMissionContext
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+94], al

; 3486 : 			flight_ptr->requester_id = flight->GetRequesterID();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ ; FlightClass::GetRequesterID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx

; 3487 : 			flight_ptr->target_id = flight->GetUnitMissionTargetID();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+684]
	call	edx
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], edx

; 3488 : 			ShiAssert (flight_ptr->target_id == mis->targetID);
; 3489 : 			if (flight_ptr->target_id != FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@RegisterDi

; 3490 : 				target = (CampEntity) vuDatabase->Find(flight_ptr->target_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _target$[ebp], eax
$LN1@RegisterDi:

; 3491 : 			RecordTargetStatus(flight_ptr, target);

	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordTargetStatus@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVCampBaseClass@@@Z ; MissionEvaluationClass::RecordTargetStatus
$LN3@RegisterDi:

; 3492 : 			}
; 3493 : 		}
; 3494 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN5@RegisterDi:

; 3495 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?RegisterDivert@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVMissionRequestClass@@@Z ENDP ; MissionEvaluationClass::RegisterDivert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight$ = 8						; size = 4
?RegisterRelief@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z PROC ; MissionEvaluationClass::RegisterRelief
; _this$ = ecx

; 3452 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3453 : 	FlightDataClass		*flight_ptr;
; 3454 : 
; 3455 : 	if (!(flags & MISEVAL_MISSION_IN_PROGRESS))

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 1
	jne	SHORT $LN2@RegisterRe

; 3456 : 		return;

	jmp	SHORT $LN3@RegisterRe
$LN2@RegisterRe:

; 3457 : 
; 3458 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3459 : 	flight_ptr = FindFlightData(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3460 : 	if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN1@RegisterRe

; 3461 : 		flight_ptr->status_flags |= MISEVAL_FLIGHT_RELIEVED;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	or	ecx, 268435456				; 10000000H
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [edx+32], ecx
$LN1@RegisterRe:

; 3462 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN3@RegisterRe:

; 3463 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterRelief@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::RegisterRelief
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -36						; size = 8
$T2 = -28						; size = 8
$T3 = -20						; size = 8
_copyFlags$ = -12					; size = 4
_this$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_flight$ = 8						; size = 4
?RegisterAbort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z PROC ; MissionEvaluationClass::RegisterAbort
; _this$ = ecx

; 3427 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 3428 : 	FlightDataClass		*flight_ptr;
; 3429 : 	int					copyFlags = 0;

	mov	DWORD PTR _copyFlags$[ebp], 0

; 3430 : 
; 3431 : 	if (!(flags & MISEVAL_MISSION_IN_PROGRESS))

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 1
	jne	SHORT $LN6@RegisterAb

; 3432 : 		return;

	jmp	$LN7@RegisterAb
$LN6@RegisterAb:

; 3433 : 
; 3434 : 	if (package_element && package_element->flight_id == flight->Id())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN5@RegisterAb
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@RegisterAb

; 3435 : 		copyFlags = MISEVAL_FLIGHT_F_TARGET_ABORTED;

	mov	DWORD PTR _copyFlags$[ebp], 4194304	; 00400000H
$LN5@RegisterAb:

; 3436 : 
; 3437 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3438 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN4@RegisterAb:

; 3439 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN3@RegisterAb

; 3440 : 		{
; 3441 : 		if (flight_ptr->flight_id == flight->Id())

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@RegisterAb

; 3442 : 			flight_ptr->status_flags |= MISEVAL_FLIGHT_ABORTED;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 4
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN2@RegisterAb:

; 3443 : 		if (flight_ptr->target_id == flight->Id())

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@RegisterAb

; 3444 : 			flight_ptr->status_flags |= MISEVAL_FLIGHT_TARGET_ABORTED;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	or	ecx, 262144				; 00040000H
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [edx+32], ecx
$LN1@RegisterAb:

; 3445 : 		flight_ptr->status_flags |= copyFlags;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	or	ecx, DWORD PTR _copyFlags$[ebp]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 3446 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 3447 : 		}

	jmp	$LN4@RegisterAb
$LN3@RegisterAb:

; 3448 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN7@RegisterAb:

; 3449 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterAbort@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::RegisterAbort
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_cds$ = -64						; size = 4
_ds$ = -60						; size = 4
_tont$1 = -56						; size = 4
tv176 = -52						; size = 4
_nw$ = -48						; size = 4
_this$ = -44						; size = 4
_tofft$2 = -40						; size = 4
_now$ = -36						; size = 4
_flight_ptr$ = -32					; size = 4
_w$ = -28						; size = 4
_feflags$ = -24						; size = 4
_meflags$ = -20						; size = 4
_wx$ = -16						; size = 2
_wy$ = -12						; size = 2
_fx$ = -8						; size = 2
_fy$ = -4						; size = 2
_flight$ = 8						; size = 4
?RegisterMove@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z PROC ; MissionEvaluationClass::RegisterMove
; _this$ = ecx

; 3299 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 3300 : 	WayPoint		w,nw;
; 3301 : 	GridIndex		fx,fy,wx,wy;
; 3302 : 	float			ds,cds=1000000.0F;

	movss	xmm0, DWORD PTR __real@49742400
	movss	DWORD PTR _cds$[ebp], xmm0

; 3303 : 	int				feflags, meflags = 0;

	mov	DWORD PTR _meflags$[ebp], 0

; 3304 : 	CampaignTime	now = TheCampaign.CurrentTime;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR _now$[ebp], eax

; 3305 : 	FlightDataClass	*flight_ptr = NULL;

	mov	DWORD PTR _flight_ptr$[ebp], 0

; 3306 : 
; 3307 : 	ShiAssert(flight);
; 3308 : 	if (!flight)

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN20@RegisterMo

; 3309 : 		return;

	jmp	$LN21@RegisterMo
$LN20@RegisterMo:

; 3310 : 
; 3311 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3312 : 
; 3313 : 	// Determine stuff about the flight
; 3314 : 	flight->GetLocation(&fx,&fy);

	lea	ecx, DWORD PTR _fy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fx$[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 3315 : 	feflags = flight->GetEvalFlags();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetEvalFlags@FlightClass@@QAEEXZ	; FlightClass::GetEvalFlags
	movzx	eax, al
	mov	DWORD PTR _feflags$[ebp], eax

; 3316 : 	if ((flags & MISEVAL_MISSION_IN_PROGRESS) && flight->InPackage())

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+26]
	and	edx, 1
	je	SHORT $LN17@RegisterMo
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?InPackage@CampBaseClass@@QAEHXZ	; CampBaseClass::InPackage
	test	eax, eax
	je	SHORT $LN17@RegisterMo

; 3317 : 		{
; 3318 : 		// Detailed check for flights in our package
; 3319 : 		flight_ptr = FindFlightData(flight);

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3320 : 		if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN18@RegisterMo

; 3321 : 			meflags = flight_ptr->status_flags;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _meflags$[ebp], edx

; 3322 : 		else

	jmp	SHORT $LN17@RegisterMo
$LN18@RegisterMo:

; 3323 : 			flight->SetInPackage(0);

	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage
$LN17@RegisterMo:

; 3324 : 		}
; 3325 : 
; 3326 : 	// Check for friendly territory
; 3327 : 	if (GetOwner(TheCampaign.CampMapData, fx, fy) == flight->GetTeam())

	movzx	eax, WORD PTR _fy$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fx$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+296
	push	edx
	call	?GetOwner@@YAEPAEFF@Z			; GetOwner
	add	esp, 12					; 0000000cH
	movzx	esi, al
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN16@RegisterMo

; 3328 : 		{
; 3329 : 		// Check for getting home if we've been at our target, and either our mission time is over, or we've been relieved
; 3330 : 		if (meflags & MISEVAL_FLIGHT_GOT_TO_TARGET && (meflags & MISEVAL_FLIGHT_STATION_OVER || meflags & MISEVAL_FLIGHT_RELIEVED))

	mov	edx, DWORD PTR _meflags$[ebp]
	and	edx, 33554432				; 02000000H
	je	SHORT $LN15@RegisterMo
	mov	eax, DWORD PTR _meflags$[ebp]
	and	eax, 67108864				; 04000000H
	jne	SHORT $LN14@RegisterMo
	mov	ecx, DWORD PTR _meflags$[ebp]
	and	ecx, 268435456				; 10000000H
	je	SHORT $LN15@RegisterMo
$LN14@RegisterMo:

; 3331 : 			meflags |= MISEVAL_FLIGHT_GOT_HOME;

	mov	edx, DWORD PTR _meflags$[ebp]
	or	edx, 134217728				; 08000000H
	mov	DWORD PTR _meflags$[ebp], edx
$LN15@RegisterMo:

; 3332 : 		}
; 3333 : 	else

	jmp	SHORT $LN13@RegisterMo
$LN16@RegisterMo:

; 3334 : 		{
; 3335 : 		// Set mission started if we're over enemy territory
; 3336 : 		feflags |= FEVAL_MISSION_STARTED;

	mov	eax, DWORD PTR _feflags$[ebp]
	or	eax, 1
	mov	DWORD PTR _feflags$[ebp], eax
$LN13@RegisterMo:

; 3337 : 		}
; 3338 : 
; 3339 : 	// Check waypoint related stuff
; 3340 : 	w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN12@RegisterMo:

; 3341 : 	while (w)

	cmp	DWORD PTR _w$[ebp], 0
	je	$LN11@RegisterMo

; 3342 : 		{
; 3343 : 		w->GetWPLocation(&wx,&wy);

	lea	ecx, DWORD PTR _wy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wx$[ebp]
	push	edx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 3344 : 		if (w->GetWPFlags() & WPF_TARGET)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	$LN3@RegisterMo

; 3345 : 			{
; 3346 : // 2002-02-13 MN check if target got occupied by us and has not been engaged yet - for 2D flights
; 3347 : // 2002-03-03 MN fix - only for strike missions
; 3348 : 			if (w->GetWPTarget() && w->GetWPTarget()->GetTeam() == flight->GetTeam() &&
; 3349 : 				(flight->GetUnitMission() > AMIS_SEADESCORT && flight->GetUnitMission() < AMIS_FAC))

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	test	eax, eax
	je	SHORT $LN9@RegisterMo
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	mov	DWORD PTR tv176[ebp], eax
	mov	eax, DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv176[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	esi, al
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN9@RegisterMo
	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+664]
	call	edx
	cmp	eax, 12					; 0000000cH
	jle	SHORT $LN9@RegisterMo
	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 19					; 00000013H
	jge	SHORT $LN9@RegisterMo

; 3350 : 				meflags |= MISEVAL_FLIGHT_ABORT_BY_AWACS;

	mov	ecx, DWORD PTR _meflags$[ebp]
	or	ecx, 1073741824				; 40000000H
	mov	DWORD PTR _meflags$[ebp], ecx
$LN9@RegisterMo:

; 3351 : 			// Determine station times
; 3352 : 			CampaignTime	tont,tofft;
; 3353 : 			ds = (float)DistSqu(fx,fy,wx,wy);

	movzx	edx, WORD PTR _wy$[ebp]
	push	edx
	movzx	eax, WORD PTR _wx$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fy$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fx$[ebp]
	push	edx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _ds$[ebp], xmm0

; 3354 : 			tont = w->GetWPArrivalTime();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	mov	DWORD PTR _tont$1[ebp], eax

; 3355 : 			tofft = w->GetWPDepartureTime();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	DWORD PTR _tofft$2[ebp], eax

; 3356 : 			nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$[ebp], eax

; 3357 : 			if (nw && nw->GetWPFlags() & WPF_TARGET)

	cmp	DWORD PTR _nw$[ebp], 0
	je	SHORT $LN8@RegisterMo
	mov	ecx, DWORD PTR _nw$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN8@RegisterMo

; 3358 : 				tofft = nw->GetWPDepartureTime();

	mov	ecx, DWORD PTR _nw$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	DWORD PTR _tofft$2[ebp], eax
$LN8@RegisterMo:

; 3359 : 			// Determine if we're in our VOL or not
; 3360 : 			if (now > tont && now < tofft)

	mov	eax, DWORD PTR _now$[ebp]
	cmp	eax, DWORD PTR _tont$1[ebp]
	jbe	SHORT $LN7@RegisterMo
	mov	ecx, DWORD PTR _now$[ebp]
	cmp	ecx, DWORD PTR _tofft$2[ebp]
	jae	SHORT $LN7@RegisterMo

; 3361 : 				feflags |= FEVAL_ON_STATION;

	mov	edx, DWORD PTR _feflags$[ebp]
	or	edx, 4
	mov	DWORD PTR _feflags$[ebp], edx
	jmp	SHORT $LN5@RegisterMo
$LN7@RegisterMo:

; 3362 : 			// Check if our VOL time is over
; 3363 : 			else if (now > tofft)

	mov	eax, DWORD PTR _now$[ebp]
	cmp	eax, DWORD PTR _tofft$2[ebp]
	jbe	SHORT $LN5@RegisterMo

; 3364 : 				{
; 3365 : 				feflags &= ~FEVAL_ON_STATION;

	mov	ecx, DWORD PTR _feflags$[ebp]
	and	ecx, -5					; fffffffbH
	mov	DWORD PTR _feflags$[ebp], ecx

; 3366 : 				meflags |= MISEVAL_FLIGHT_STATION_OVER;

	mov	edx, DWORD PTR _meflags$[ebp]
	or	edx, 67108864				; 04000000H
	mov	DWORD PTR _meflags$[ebp], edx
$LN5@RegisterMo:

; 3367 : 				}
; 3368 : 			// Determine if we're close enough for government work
; 3369 : 			if (now > tont + STATION_TIME_LENIENCY && now < tofft - STATION_TIME_LENIENCY && ds > STATION_DIST_LENIENCY*STATION_DIST_LENIENCY)

	mov	eax, DWORD PTR _tont$1[ebp]
	add	eax, 180000				; 0002bf20H
	cmp	DWORD PTR _now$[ebp], eax
	jbe	SHORT $LN4@RegisterMo
	mov	ecx, DWORD PTR _tofft$2[ebp]
	sub	ecx, 180000				; 0002bf20H
	cmp	DWORD PTR _now$[ebp], ecx
	jae	SHORT $LN4@RegisterMo
	movss	xmm0, DWORD PTR _ds$[ebp]
	comiss	xmm0, DWORD PTR __real@46072400
	jbe	SHORT $LN4@RegisterMo

; 3370 : 				meflags |= MISEVAL_FLIGHT_OFF_STATION;

	mov	edx, DWORD PTR _meflags$[ebp]
	or	edx, 536870912				; 20000000H
	mov	DWORD PTR _meflags$[ebp], edx
$LN4@RegisterMo:

; 3371 : 			// Check if we got to our target
; 3372 : 			if (ds < TARGET_DIST_LENIENCY*TARGET_DIST_LENIENCY)

	movss	xmm0, DWORD PTR __real@41c80000
	comiss	xmm0, DWORD PTR _ds$[ebp]
	jbe	SHORT $LN3@RegisterMo

; 3373 : 				{
; 3374 : 				if (flight_ptr && flight_ptr == player_element && !(meflags & MISEVAL_FLIGHT_GOT_TO_TARGET))

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN2@RegisterMo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN2@RegisterMo
	mov	edx, DWORD PTR _meflags$[ebp]
	and	edx, 33554432				; 02000000H
	jne	SHORT $LN2@RegisterMo

; 3375 : 					actual_tot = TheCampaign.CurrentTime;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [eax+168], ecx
$LN2@RegisterMo:

; 3376 : 				feflags |= FEVAL_GOT_TO_TARGET;

	mov	edx, DWORD PTR _feflags$[ebp]
	or	edx, 2
	mov	DWORD PTR _feflags$[ebp], edx

; 3377 : 				meflags |= MISEVAL_FLIGHT_GOT_TO_TARGET;

	mov	eax, DWORD PTR _meflags$[ebp]
	or	eax, 33554432				; 02000000H
	mov	DWORD PTR _meflags$[ebp], eax

; 3378 : 				// Set mission started
; 3379 : 				feflags |= FEVAL_MISSION_STARTED;

	mov	ecx, DWORD PTR _feflags$[ebp]
	or	ecx, 1
	mov	DWORD PTR _feflags$[ebp], ecx
$LN3@RegisterMo:

; 3380 : 				}
; 3381 : 			}
; 3382 : 		w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 3383 : 		}

	jmp	$LN12@RegisterMo
$LN11@RegisterMo:

; 3384 : 
; 3385 : 	// copy the flags back in
; 3386 : 	flight->SetEvalFlag(feflags, 1); // 2002-02-19 MODIFIED BY S.G. Added the 1 at then end of the function to specify feflags contains all the flags.

	push	1
	movzx	edx, BYTE PTR _feflags$[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?SetEvalFlag@FlightClass@@QAEXEH@Z	; FlightClass::SetEvalFlag

; 3387 : 	if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN1@RegisterMo

; 3388 : 		flight_ptr->status_flags = meflags;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR _meflags$[ebp]
	mov	DWORD PTR [eax+32], ecx
$LN1@RegisterMo:

; 3389 : 
; 3390 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN21@RegisterMo:

; 3391 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterMove@MissionEvaluationClass@@QAEXPAVFlightClass@@@Z ENDP ; MissionEvaluationClass::RegisterMove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -84						; size = 8
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
_flight$5 = -52						; size = 4
_copyFlags$6 = -48					; size = 4
_sid$ = -44						; size = 4
_tmp_ptr$7 = -40					; size = 4
_i$ = -36						; size = 4
_tmp_ptr$8 = -32					; size = 4
_tid$ = -28						; size = 4
_this$ = -24						; size = 4
_campShooter$ = -20					; size = 4
_campTarget$ = -16					; size = 4
_flight_ptr$ = -12					; size = 4
_cx$9 = -8						; size = 2
_cy$10 = -4						; size = 2
_shooter$ = 8						; size = 4
_target$ = 12						; size = 4
_targetEl$ = 16						; size = 4
?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconEntity@@0H@Z PROC ; MissionEvaluationClass::RegisterKill
; _this$ = ecx

; 3162 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 3163 : 	int				sid,tid,i;
; 3164 : 	CampEntity		campTarget,campShooter;
; 3165 : 	FlightDataClass	*flight_ptr;
; 3166 : 
; 3167 : 	if (!(flags & MISEVAL_MISSION_IN_PROGRESS))

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 1
	jne	SHORT $LN45@RegisterKi

; 3168 : 		return;

	jmp	$LN46@RegisterKi
$LN45@RegisterKi:

; 3169 : 
; 3170 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3171 : 
; 3172 : 	// Get their indexes
; 3173 : 	tid = target->Type() - VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _target$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	edx, ax
	sub	edx, 100				; 00000064H
	mov	DWORD PTR _tid$[ebp], edx

; 3174 : 	sid = shooter->Type() - VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _shooter$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	sub	eax, 100				; 00000064H
	mov	DWORD PTR _sid$[ebp], eax

; 3175 : 
; 3176 : 	// Get campaign objects
; 3177 : 	if (target->IsCampaign())

	mov	ecx, DWORD PTR _target$[ebp]
	call	?IsCampaign@FalconEntity@@QAEHXZ	; FalconEntity::IsCampaign
	test	eax, eax
	je	SHORT $LN44@RegisterKi

; 3178 : 		campTarget = (CampBaseClass*)target;

	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _campTarget$[ebp], ecx

; 3179 : 	else

	jmp	SHORT $LN43@RegisterKi
$LN44@RegisterKi:

; 3180 : 		{
; 3181 : 		campTarget = ((SimBaseClass*)target)->GetCampaignObject();

	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	DWORD PTR _campTarget$[ebp], eax

; 3182 : 		targetEl = ((SimBaseClass*)target)->GetSlot();

	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetSlot@SimBaseClass@@QAEHXZ		; SimBaseClass::GetSlot
	mov	DWORD PTR _targetEl$[ebp], eax
$LN43@RegisterKi:

; 3183 : 		}
; 3184 : 	if (shooter->IsCampaign())

	mov	ecx, DWORD PTR _shooter$[ebp]
	call	?IsCampaign@FalconEntity@@QAEHXZ	; FalconEntity::IsCampaign
	test	eax, eax
	je	SHORT $LN42@RegisterKi

; 3185 : 		campShooter = (CampBaseClass*)shooter;

	mov	edx, DWORD PTR _shooter$[ebp]
	mov	DWORD PTR _campShooter$[ebp], edx

; 3186 : 	else

	jmp	SHORT $LN41@RegisterKi
$LN42@RegisterKi:

; 3187 : 		campShooter = ((SimBaseClass*)shooter)->GetCampaignObject();

	mov	ecx, DWORD PTR _shooter$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	DWORD PTR _campShooter$[ebp], eax
$LN41@RegisterKi:

; 3188 : 
; 3189 : 	// Check for hits by us
; 3190 : 	if (campShooter->IsFlight() && campShooter->InPackage())

	mov	eax, DWORD PTR _campShooter$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	$LN18@RegisterKi
	mov	ecx, DWORD PTR _campShooter$[ebp]
	call	?InPackage@CampBaseClass@@QAEHXZ	; CampBaseClass::InPackage
	test	eax, eax
	je	$LN18@RegisterKi

; 3191 : 		{
; 3192 : 		flight_ptr = FindFlightData((FlightClass*)campShooter);

	mov	ecx, DWORD PTR _campShooter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3193 : 
; 3194 : 		if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN18@RegisterKi

; 3195 : 			{
; 3196 : 			if (Falcon4ClassTable[tid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_AIR && GetRoE(campShooter->GetTeam(),campTarget->GetTeam(),ROE_AIR_FIRE))

	mov	edx, DWORD PTR _tid$[ebp]
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	imul	eax, 0
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 2
	jne	SHORT $LN38@RegisterKi
	push	5
	mov	edx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN38@RegisterKi

; 3197 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_GOT_AKILL;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+32], eax
	jmp	$LN21@RegisterKi
$LN38@RegisterKi:

; 3198 : 			else if (Falcon4ClassTable[tid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_LAND && GetRoE(campShooter->GetTeam(),campTarget->GetTeam(),ROE_GROUND_FIRE))

	mov	edx, DWORD PTR _tid$[ebp]
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	imul	eax, 0
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 3
	jne	$LN36@RegisterKi
	push	1
	mov	edx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN36@RegisterKi

; 3199 : 				{
; 3200 : 				if (Falcon4ClassTable[tid].dataType == DTYPE_OBJECTIVE || Falcon4ClassTable[tid].dataType == DTYPE_FEATURE)

	mov	edx, DWORD PTR _tid$[ebp]
	imul	edx, 81					; 00000051H
	mov	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	ecx, BYTE PTR [eax+edx+76]
	cmp	ecx, 3
	je	SHORT $LN34@RegisterKi
	mov	edx, DWORD PTR _tid$[ebp]
	imul	edx, 81					; 00000051H
	mov	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	ecx, BYTE PTR [eax+edx+76]
	cmp	ecx, 1
	jne	SHORT $LN35@RegisterKi
$LN34@RegisterKi:

; 3201 : 					{
; 3202 : 					flight_ptr->status_flags |= MISEVAL_FLIGHT_GOT_SKILL;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 3203 : 					// High value for hitting target feature
; 3204 : 					for (i=0; i<MAX_TARGET_FEATURES; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN33@RegisterKi
$LN32@RegisterKi:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN33@RegisterKi:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN31@RegisterKi

; 3205 : 						{
; 3206 : 						if (flight_ptr->target_features[i] < 255 && flight_ptr->target_features[i] == targetEl)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+88]
	cmp	ecx, 255				; 000000ffH
	jge	SHORT $LN30@RegisterKi
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+88]
	cmp	eax, DWORD PTR _targetEl$[ebp]
	jne	SHORT $LN30@RegisterKi

; 3207 : 							flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_HIGH_VAL;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 256				; 00000100H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN30@RegisterKi:

; 3208 : 						}

	jmp	SHORT $LN32@RegisterKi
$LN31@RegisterKi:

; 3209 : 					}
; 3210 : 				else if (Falcon4ClassTable[tid].dataType == DTYPE_UNIT || Falcon4ClassTable[tid].dataType == DTYPE_VEHICLE)

	jmp	$LN25@RegisterKi
$LN35@RegisterKi:
	mov	ecx, DWORD PTR _tid$[ebp]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 4
	je	SHORT $LN27@RegisterKi
	mov	ecx, DWORD PTR _tid$[ebp]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 5
	jne	$LN25@RegisterKi
$LN27@RegisterKi:

; 3211 : 					{
; 3212 : 					flight_ptr->status_flags |= MISEVAL_FLIGHT_GOT_GKILL;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 32					; 00000020H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx

; 3213 : 					// High value for killing radar vehicle
; 3214 : 					if (targetEl == ((UnitClass*)campTarget)->GetUnitClassData()->RadarVehicle)

	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	movzx	ecx, BYTE PTR [eax+328]
	cmp	DWORD PTR _targetEl$[ebp], ecx
	jne	SHORT $LN26@RegisterKi

; 3215 : 						flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_HIGH_VAL;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN26@RegisterKi:

; 3216 : 					// For most air to ground missions, we're ok as long as we've hit the correct brigade
; 3217 : 					if (flight_ptr->target_id && (flight_ptr->target_id == ((UnitClass*)campTarget)->GetUnitParentID() || flight_ptr->target_id == campTarget->Id()))

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN25@RegisterKi
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+948]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@RegisterKi
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@RegisterKi
$LN24@RegisterKi:

; 3218 : 						flight_ptr->status_flags |= MISEVAL_FLIGHT_TARGET_HIT;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 65536				; 00010000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN25@RegisterKi:

; 3219 : 					}
; 3220 : 				}

	jmp	SHORT $LN21@RegisterKi
$LN36@RegisterKi:

; 3221 : 			else if (Falcon4ClassTable[tid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_SEA && GetRoE(campShooter->GetTeam(),campTarget->GetTeam(),ROE_NAVAL_FIRE))

	mov	ecx, DWORD PTR _tid$[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	imul	edx, 0
	movzx	eax, BYTE PTR [ecx+edx+8]
	cmp	eax, 4
	jne	SHORT $LN21@RegisterKi
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _campShooter$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _campShooter$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	push	eax
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN21@RegisterKi

; 3222 : 				{
; 3223 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_GOT_NKILL;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 64					; 00000040H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx

; 3224 : 				// High value for hitting capital ship
; 3225 : 				if (!targetEl)

	cmp	DWORD PTR _targetEl$[ebp], 0
	jne	SHORT $LN21@RegisterKi

; 3226 : 					flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_HIGH_VAL;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 256				; 00000100H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN21@RegisterKi:

; 3227 : 				}
; 3228 : 
; 3229 : 			if (campTarget->Id() == flight_ptr->target_id || campTarget->GetCampID() == flight_ptr->target_camp_id)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@RegisterKi
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+80]
	cmp	ecx, eax
	jne	SHORT $LN20@RegisterKi
$LN19@RegisterKi:

; 3230 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_TARGET_HIT;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 65536				; 00010000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN20@RegisterKi:

; 3231 : 			if (campTarget->IsUnit() && ((UnitClass*)campTarget)->IsDead())

	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	SHORT $LN18@RegisterKi
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+552]
	call	eax
	test	eax, eax
	je	SHORT $LN18@RegisterKi

; 3232 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_TARGET_KILLED;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 131072				; 00020000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN18@RegisterKi:

; 3233 : 			}
; 3234 : 		}
; 3235 : 
; 3236 : 	// Check for hits against us
; 3237 : 	if (campTarget->IsFlight() && campTarget->InPackage())

	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	$LN6@RegisterKi
	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?InPackage@CampBaseClass@@QAEHXZ	; CampBaseClass::InPackage
	test	eax, eax
	je	$LN6@RegisterKi

; 3238 : 		{
; 3239 : 		flight_ptr = FindFlightData((FlightClass*)campTarget);

	mov	ecx, DWORD PTR _campTarget$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFlightData@MissionEvaluationClass@@QAEPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::FindFlightData
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3240 : 
; 3241 : 		if (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN6@RegisterKi

; 3242 : 			{
; 3243 : 			flight_ptr->status_flags |= MISEVAL_FLIGHT_LOSSES;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, 1
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 3244 : 			if (campTarget->IsUnit() && ((UnitClass*)campTarget)->IsDead())

	mov	edx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN15@RegisterKi
	mov	eax, DWORD PTR _campTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _campTarget$[ebp]
	mov	eax, DWORD PTR [edx+552]
	call	eax
	test	eax, eax
	je	SHORT $LN15@RegisterKi

; 3245 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_DESTROYED;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 2
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN15@RegisterKi:

; 3246 : 			if (Falcon4ClassTable[sid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_AIR)

	mov	ecx, DWORD PTR _sid$[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	imul	edx, 0
	movzx	eax, BYTE PTR [ecx+edx+8]
	cmp	eax, 2
	jne	SHORT $LN14@RegisterKi

; 3247 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_BY_AIR;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 4096				; 00001000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
	jmp	SHORT $LN10@RegisterKi
$LN14@RegisterKi:

; 3248 : 			else if (Falcon4ClassTable[sid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_LAND)

	mov	ecx, DWORD PTR _sid$[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	imul	edx, 0
	movzx	eax, BYTE PTR [ecx+edx+8]
	cmp	eax, 3
	jne	SHORT $LN12@RegisterKi

; 3249 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_BY_GROUND;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 8192				; 00002000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
	jmp	SHORT $LN10@RegisterKi
$LN12@RegisterKi:

; 3250 : 			else if (Falcon4ClassTable[sid].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_SEA)

	mov	ecx, DWORD PTR _sid$[ebp]
	imul	ecx, 81					; 00000051H
	add	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, 1
	imul	edx, 0
	movzx	eax, BYTE PTR [ecx+edx+8]
	cmp	eax, 4
	jne	SHORT $LN10@RegisterKi

; 3251 : 				flight_ptr->status_flags |= MISEVAL_FLIGHT_HIT_BY_NAVAL;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 16384				; 00004000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN10@RegisterKi:

; 3252 : 
; 3253 : 			if (package_element && campTarget->Id() == package_element->flight_id)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN6@RegisterKi
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 40					; 00000028H
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@RegisterKi

; 3254 : 				{
; 3255 : 				// Package element hit - set flags on all elements
; 3256 : 				FlightDataClass		*tmp_ptr;
; 3257 : 				int					copyFlags;
; 3258 : 
; 3259 : 				copyFlags = MISEVAL_FLIGHT_F_TARGET_HIT;

	mov	DWORD PTR _copyFlags$6[ebp], 1048576	; 00100000H

; 3260 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_DESTROYED)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 2
	je	SHORT $LN8@RegisterKi

; 3261 : 					copyFlags |= MISEVAL_FLIGHT_F_TARGET_KILLED;

	mov	edx, DWORD PTR _copyFlags$6[ebp]
	or	edx, 2097152				; 00200000H
	mov	DWORD PTR _copyFlags$6[ebp], edx
$LN8@RegisterKi:

; 3262 : 				tmp_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _tmp_ptr$7[ebp], ecx
$LN7@RegisterKi:

; 3263 : 				while (tmp_ptr)

	cmp	DWORD PTR _tmp_ptr$7[ebp], 0
	je	SHORT $LN6@RegisterKi

; 3264 : 					{
; 3265 : 					tmp_ptr->status_flags |= copyFlags;

	mov	edx, DWORD PTR _tmp_ptr$7[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, DWORD PTR _copyFlags$6[ebp]
	mov	ecx, DWORD PTR _tmp_ptr$7[ebp]
	mov	DWORD PTR [ecx+32], eax

; 3266 : 					tmp_ptr = tmp_ptr->next_flight;

	mov	edx, DWORD PTR _tmp_ptr$7[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _tmp_ptr$7[ebp], eax

; 3267 : 					}

	jmp	SHORT $LN7@RegisterKi
$LN6@RegisterKi:

; 3268 : 				}
; 3269 : 			}
; 3270 : 		}
; 3271 : 
; 3272 : 	// Check for area hits
; 3273 : 	if (flags & MISEVAL_EVALUATE_HITS_IN_AREA)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+26]
	and	edx, 2
	je	$LN2@RegisterKi

; 3274 : 		{
; 3275 : 		GridIndex		cx,cy;
; 3276 : 		campTarget->GetLocation(&cx,&cy);

	lea	eax, DWORD PTR _cy$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _cx$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _campTarget$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 3277 : 		//if (DistSqu(tx,ty,cx,cy) < 0.5F * STATION_DIST_LENIENCY*STATION_DIST_LENIENCY) // JB 010215
; 3278 : 		if (DistSqu(tx,ty,cx,cy) < 0.5F * STATION_DIST_HITS_LENIENCY*STATION_DIST_HITS_LENIENCY) // JB 010215

	movzx	edx, WORD PTR _cy$10[ebp]
	push	edx
	movzx	eax, WORD PTR _cx$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+186]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+184]
	push	ecx
	call	?DistSqu@@YAHFFFF@Z			; DistSqu
	add	esp, 16					; 00000010H
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR __real@44192000
	comiss	xmm1, xmm0
	jbe	SHORT $LN2@RegisterKi

; 3279 : 			{
; 3280 : 			// Area hit - set flags on all elements which were covering VOL
; 3281 : 			FlightDataClass		*tmp_ptr;
; 3282 : 			Flight				flight;
; 3283 : 			tmp_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _tmp_ptr$8[ebp], eax
$LN3@RegisterKi:

; 3284 : 			while (tmp_ptr)

	cmp	DWORD PTR _tmp_ptr$8[ebp], 0
	je	SHORT $LN2@RegisterKi

; 3285 : 				{
; 3286 : 				flight = (Flight)vuDatabase->Find(tmp_ptr->flight_id);

	mov	ecx, DWORD PTR _tmp_ptr$8[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$5[ebp], eax

; 3287 : 				if (flight->GetEvalFlags() & FEVAL_ON_STATION)

	mov	ecx, DWORD PTR _flight$5[ebp]
	call	?GetEvalFlags@FlightClass@@QAEEXZ	; FlightClass::GetEvalFlags
	movzx	ecx, al
	and	ecx, 4
	je	SHORT $LN1@RegisterKi

; 3288 : 					tmp_ptr->status_flags |= MISEVAL_FLIGHT_F_AREA_HIT;

	mov	edx, DWORD PTR _tmp_ptr$8[ebp]
	mov	eax, DWORD PTR [edx+32]
	or	eax, 8388608				; 00800000H
	mov	ecx, DWORD PTR _tmp_ptr$8[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN1@RegisterKi:

; 3289 : 				tmp_ptr = tmp_ptr->next_flight;

	mov	edx, DWORD PTR _tmp_ptr$8[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _tmp_ptr$8[ebp], eax

; 3290 : 				}

	jmp	SHORT $LN3@RegisterKi
$LN2@RegisterKi:

; 3291 : 			}
; 3292 : 		}
; 3293 : 
; 3294 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN46@RegisterKi:

; 3295 : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconEntity@@0H@Z ENDP ; MissionEvaluationClass::RegisterKill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_curEvent$ = -4						; size = 4
_theEvent$ = 8						; size = 4
_flight_ptr$ = 12					; size = 4
_pilot_data$ = 16					; size = 4
_wn$ = 20						; size = 4
?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z PROC ; MissionEvaluationClass::AddEventToList
; _this$ = ecx

; 3111 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3112 : 	EventElement* curEvent = NULL;

	mov	DWORD PTR _curEvent$[ebp], 0

; 3113 : 
; 3114 : 	theEvent->next = NULL;

	mov	eax, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR [eax+148], 0

; 3115 : 	if (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN9@AddEventTo

; 3116 : 		{
; 3117 : 		pilot_data->weapon_data[wn].events++;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	ax, WORD PTR [edx+ecx+112]
	add	ax, 1
	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+ecx+112], ax

; 3118 : 		if (!pilot_data->weapon_data[wn].root_event)

	mov	eax, DWORD PTR _wn$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	cmp	DWORD PTR [ecx+eax+116], 0
	jne	SHORT $LN8@AddEventTo

; 3119 : 			pilot_data->weapon_data[wn].root_event = theEvent;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR [eax+edx+116], ecx

; 3120 : 		else

	jmp	SHORT $LN7@AddEventTo
$LN8@AddEventTo:

; 3121 : 			curEvent = pilot_data->weapon_data[wn].root_event;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+edx+116]
	mov	DWORD PTR _curEvent$[ebp], ecx
$LN7@AddEventTo:

; 3122 : 		}
; 3123 : 	else

	jmp	SHORT $LN6@AddEventTo
$LN9@AddEventTo:

; 3124 : 		{
; 3125 : 		flight_ptr->events++;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	ax, WORD PTR [edx+156]
	add	ax, 1
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	WORD PTR [ecx+156], ax

; 3126 : 		if (!flight_ptr->root_event)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	cmp	DWORD PTR [edx+160], 0
	jne	SHORT $LN5@AddEventTo

; 3127 : 			flight_ptr->root_event = theEvent;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR [eax+160], ecx

; 3128 : 		else

	jmp	SHORT $LN6@AddEventTo
$LN5@AddEventTo:

; 3129 : 			curEvent = flight_ptr->root_event;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	DWORD PTR _curEvent$[ebp], eax
$LN6@AddEventTo:

; 3130 : 		}
; 3131 : 	if (!curEvent)							// Added directly to root, we're done

	cmp	DWORD PTR _curEvent$[ebp], 0
	jne	SHORT $LN2@AddEventTo

; 3132 : 		return;

	jmp	SHORT $LN10@AddEventTo
$LN2@AddEventTo:

; 3133 : 
; 3134 : 	while (curEvent->next && curEvent->next != curEvent)

	mov	ecx, DWORD PTR _curEvent$[ebp]
	cmp	DWORD PTR [ecx+148], 0
	je	SHORT $LN1@AddEventTo
	mov	edx, DWORD PTR _curEvent$[ebp]
	mov	eax, DWORD PTR [edx+148]
	cmp	eax, DWORD PTR _curEvent$[ebp]
	je	SHORT $LN1@AddEventTo

; 3135 : 		curEvent = curEvent->next;

	mov	ecx, DWORD PTR _curEvent$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	DWORD PTR _curEvent$[ebp], edx
	jmp	SHORT $LN2@AddEventTo
$LN1@AddEventTo:

; 3136 : 
; 3137 : 	ShiAssert (curEvent != theEvent);
; 3138 : 
; 3139 : 	curEvent->next = theEvent;

	mov	eax, DWORD PTR _curEvent$[ebp]
	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR [eax+148], ecx
$LN10@AddEventTo:

; 3140 : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ENDP ; MissionEvaluationClass::AddEventToList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
_time_str$ = 16						; size = 4
?ParseTime@MissionEvaluationClass@@QAEXNPAD@Z PROC	; MissionEvaluationClass::ParseTime
; _this$ = ecx

; 3106 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3107 : 	GetTimeString(FloatToInt32((float)time*VU_TICS_PER_SECOND), time_str);

	push	1
	mov	eax, DWORD PTR _time_str$[ebp]
	push	eax
	cvtsd2ss xmm0, QWORD PTR _time$[ebp]
	mulss	xmm0, DWORD PTR __real@447a0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 3108 : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ParseTime@MissionEvaluationClass@@QAEXNPAD@Z ENDP	; MissionEvaluationClass::ParseTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 4
_time_str$ = 12						; size = 4
?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z PROC	; MissionEvaluationClass::ParseTime
; _this$ = ecx

; 3101 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3102 : 	GetTimeString(time, time_str);

	push	1
	mov	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 3103 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ENDP	; MissionEvaluationClass::ParseTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_score$ = -4						; size = 4
_contact$ = 8						; size = 4
?RegisterContact@MissionEvaluationClass@@QAEXPAVUnitClass@@@Z PROC ; MissionEvaluationClass::RegisterContact
; _this$ = ecx

; 3083 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3084 : 	ulong		score;
; 3085 : 	// KCK NOTE: This assumes that Register Contact is only called once per contact!
; 3086 : 
; 3087 : 	// KCK: This only scores threats currently.
; 3088 : 	// Possibly, the score should vary by mission type
; 3089 : 	// i.e: SEAD missions score Air Defenses highest
; 3090 : 	//		ESCORT score Air to Air threats highest
; 3091 : 	//		BARCAP score enemy attack/bomber aircraft highest
; 3092 : 	score = contact->GetHitChance(LowAir,0);

	push	0
	push	4
	mov	eax, DWORD PTR _contact$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _contact$[ebp]
	mov	eax, DWORD PTR [edx+392]
	call	eax
	mov	DWORD PTR _score$[ebp], eax

; 3093 : 	if (contact->IsFlight())

	mov	ecx, DWORD PTR _contact$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _contact$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN2@RegisterCo

; 3094 : 		score *= contact->GetTotalVehicles();

	mov	ecx, DWORD PTR _contact$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	imul	eax, DWORD PTR _score$[ebp]
	mov	DWORD PTR _score$[ebp], eax
$LN2@RegisterCo:

; 3095 : 	if (contact->Broken())

	mov	ecx, DWORD PTR _contact$[ebp]
	call	?Broken@UnitClass@@QBEHXZ		; UnitClass::Broken
	test	eax, eax
	je	SHORT $LN1@RegisterCo

; 3096 : 		score /= 4;

	mov	ecx, DWORD PTR _score$[ebp]
	shr	ecx, 2
	mov	DWORD PTR _score$[ebp], ecx
$LN1@RegisterCo:

; 3097 : 	contact_score += score;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _score$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 3098 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterContact@MissionEvaluationClass@@QAEXPAVUnitClass@@@Z ENDP ; MissionEvaluationClass::RegisterContact
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -148						; size = 4
tv143 = -144						; size = 4
tv91 = -140						; size = 4
$T3 = -136						; size = 4
_theEvent$ = -132					; size = 4
_this$ = -128						; size = 4
_flight_ptr$ = -124					; size = 4
_pilot_data$ = -120					; size = 4
_format$ = -116						; size = 80
_time_str$ = -36					; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lm$ = 8						; size = 4
_pilot_status$ = 12					; size = 4
?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z PROC ; MissionEvaluationClass::RegisterLanding
; _this$ = ecx

; 3040 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3041 : 	_TCHAR					time_str[20],format[80];
; 3042 : 	PilotDataClass			*pilot_data;
; 3043 : 	EventElement			*theEvent;
; 3044 : 	FlightDataClass			*flight_ptr;
; 3045 : 
; 3046 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 3047 : 
; 3048 : 	// Check if someone in the package fired this.
; 3049 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN6@RegisterLa:

; 3050 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN5@RegisterLa

; 3051 : 		{
; 3052 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN4@RegisterLa:

; 3053 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN3@RegisterLa

; 3054 : 			{
; 3055 : 			if (lm->dataBlock.campID && lm->dataBlock.campID == flight_ptr->camp_id &&	
; 3056 : 				lm->dataBlock.pilotID == pilot_data->pilot_slot)

	mov	ecx, DWORD PTR _lm$[ebp]
	movzx	edx, WORD PTR [ecx+48]
	test	edx, edx
	je	$LN2@RegisterLa
	mov	eax, DWORD PTR _lm$[ebp]
	movzx	ecx, WORD PTR [eax+48]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	cmp	ecx, eax
	jne	$LN2@RegisterLa
	mov	ecx, DWORD PTR _lm$[ebp]
	movzx	edx, BYTE PTR [ecx+50]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	edx, ecx
	jne	$LN2@RegisterLa

; 3057 : 				{
; 3058 : 				// We're interested
; 3059 : 				theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN9@RegisterLa
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN10@RegisterLa
$LN9@RegisterLa:
	mov	DWORD PTR tv91[ebp], 0
$LN10@RegisterLa:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _theEvent$[ebp], eax

; 3060 : 				ParseTime(TheCampaign.CurrentTime, time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 3061 : 				GetFormatString(FET_PILOT_LANDED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	15					; 0000000fH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 3062 : 				if (pilot_data->pilot_status == PILOT_IN_USE && FalconLocalGame->GetGameType() != game_Dogfight)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+65]
	cmp	edx, 4
	jne	SHORT $LN1@RegisterLa
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@RegisterLa
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN12@RegisterLa
$LN11@RegisterLa:
	mov	DWORD PTR tv143[ebp], 0
$LN12@RegisterLa:
	mov	ecx, DWORD PTR tv143[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	je	SHORT $LN1@RegisterLa

; 3063 : 					pilot_data->pilot_status = pilot_status;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR _pilot_status$[ebp]
	mov	BYTE PTR [ecx+65], dl
$LN1@RegisterLa:

; 3064 : //				pilot_data->aircraft_status = VIS_DESTROYED;
; 3065 : 				pilot_data->score += CalcScore (SCORE_PILOT_LANDED, 0);

	push	0
	push	5
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 3066 : 				//if (pilot_data == player_pilot) Cobra it always fails this check
; 3067 : 				//we now allow it to flag the player landing :)
; 3068 : 					logbook_data.Flags |= LANDED_AIRCRAFT;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+256]
	or	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+256], dx

; 3069 : 				ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 3070 : 				theEvent->eventTime = TheCampaign.CurrentTime;

	mov	edx, DWORD PTR _theEvent$[ebp]
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [edx+16], eax

; 3071 : 				AddEventToList(theEvent,flight_ptr,0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 3072 : 				CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3073 : 				return;

	jmp	SHORT $LN7@RegisterLa
$LN2@RegisterLa:

; 3074 : 				}
; 3075 : 			pilot_data = pilot_data->next_pilot;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 3076 : 			}

	jmp	$LN4@RegisterLa
$LN3@RegisterLa:

; 3077 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 3078 : 		}

	jmp	$LN6@RegisterLa
$LN5@RegisterLa:

; 3079 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN7@RegisterLa:

; 3080 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterLanding@MissionEvaluationClass@@QAEXPAVFalconLandingMessage@@H@Z ENDP ; MissionEvaluationClass::RegisterLanding
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -148						; size = 4
tv143 = -144						; size = 4
tv91 = -140						; size = 4
$T3 = -136						; size = 4
_theEvent$ = -132					; size = 4
_this$ = -128						; size = 4
_flight_ptr$ = -124					; size = 4
_pilot_data$ = -120					; size = 4
_format$ = -116						; size = 80
_time_str$ = -36					; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_em$ = 8						; size = 4
_pilot_status$ = 12					; size = 4
?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z PROC ; MissionEvaluationClass::RegisterEjection
; _this$ = ecx

; 2986 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2987 : 	_TCHAR					time_str[20],format[80];
; 2988 : 	PilotDataClass			*pilot_data;
; 2989 : 	EventElement			*theEvent;
; 2990 : 	FlightDataClass			*flight_ptr;
; 2991 : 
; 2992 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2993 : 
; 2994 : 	// Check if someone in the package fired this.
; 2995 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN9@RegisterEj:

; 2996 : 	while (flight_ptr){

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN8@RegisterEj

; 2997 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN7@RegisterEj:

; 2998 : 		while (pilot_data){

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN6@RegisterEj

; 2999 : 			if (em->dataBlock.eCampID && em->dataBlock.eCampID == flight_ptr->camp_id &&	
; 3000 : 				em->dataBlock.ePilotID == pilot_data->pilot_slot)

	mov	ecx, DWORD PTR _em$[ebp]
	movzx	edx, WORD PTR [ecx+64]
	test	edx, edx
	je	$LN5@RegisterEj
	mov	eax, DWORD PTR _em$[ebp]
	movzx	ecx, WORD PTR [eax+64]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	cmp	ecx, eax
	jne	$LN5@RegisterEj
	mov	ecx, DWORD PTR _em$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	edx, ecx
	jne	$LN5@RegisterEj

; 3001 : 			{
; 3002 : 				// We're interested
; 3003 : 				theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@RegisterEj
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN13@RegisterEj
$LN12@RegisterEj:
	mov	DWORD PTR tv91[ebp], 0
$LN13@RegisterEj:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _theEvent$[ebp], eax

; 3004 : 				ParseTime(TheCampaign.CurrentTime, time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 3005 : 				GetFormatString(FET_PILOT_EJECTED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	12					; 0000000cH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 3006 : 				// Only record pilot status in non-dogfight games
; 3007 : 				if (pilot_data->pilot_status == PILOT_IN_USE && FalconLocalGame->GetGameType() != game_Dogfight){

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+65]
	cmp	edx, 4
	jne	SHORT $LN4@RegisterEj
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@RegisterEj
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN15@RegisterEj
$LN14@RegisterEj:
	mov	DWORD PTR tv143[ebp], 0
$LN15@RegisterEj:
	mov	ecx, DWORD PTR tv143[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	je	SHORT $LN4@RegisterEj

; 3008 : 					pilot_data->pilot_status = pilot_status;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR _pilot_status$[ebp]
	mov	BYTE PTR [ecx+65], dl
$LN4@RegisterEj:

; 3009 : 				}
; 3010 : 				pilot_data->aircraft_status = VIS_DESTROYED;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+66], 3

; 3011 : 				if (em->dataBlock.hadLastShooter)	// Ejected after taking damage

	mov	ecx, DWORD PTR _em$[ebp]
	movzx	edx, BYTE PTR [ecx+67]
	test	edx, edx
	je	SHORT $LN3@RegisterEj

; 3012 : 				{
; 3013 : 					pilot_data->score += CalcScore (SCORE_VEHICLE_KILL, 0);			// Score vehicle death

	push	0
	push	25					; 00000019H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 3014 : 					pilot_data->score += CalcScore (SCORE_PILOT_EJECTED_KILL, 0);	// Score the ejection

	push	0
	push	4
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 3015 : 				}
; 3016 : 				else								// Ejected undamaged

	jmp	SHORT $LN2@RegisterEj
$LN3@RegisterEj:

; 3017 : 				{
; 3018 : 					pilot_data->score += CalcScore (SCORE_GROUND_COLLISION, 0);		// Score ground collistion

	push	0
	push	18					; 00000012H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 3019 : 					pilot_data->score += CalcScore (SCORE_PILOT_EJECTED, 0);		// Score the ejection

	push	0
	push	3
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 3020 : 					if (pilot_data == player_pilot){

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN2@RegisterEj

; 3021 : 						logbook_data.Flags |= EJECT_UNDAMAGED;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+256]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+256], cx
$LN2@RegisterEj:

; 3022 : 					}
; 3023 : 				}
; 3024 : 				ConstructOrderedSentence(
; 3025 : 					MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str
; 3026 : 				);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 3027 : 				theEvent->eventTime = TheCampaign.CurrentTime;

	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [ecx+16], edx

; 3028 : 				AddEventToList(theEvent,flight_ptr,0,0);

	push	0
	push	0
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 3029 : 				CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 3030 : 				return;

	jmp	SHORT $LN10@RegisterEj
$LN5@RegisterEj:

; 3031 : 			}
; 3032 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 3033 : 		}

	jmp	$LN7@RegisterEj
$LN6@RegisterEj:

; 3034 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 3035 : 	}

	jmp	$LN9@RegisterEj
$LN8@RegisterEj:

; 3036 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN10@RegisterEj:

; 3037 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterEjection@MissionEvaluationClass@@QAEXPAVFalconEjectMessage@@H@Z ENDP ; MissionEvaluationClass::RegisterEjection
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -180						; size = 8
$T3 = -172						; size = 4
$T4 = -168						; size = 4
$T5 = -164						; size = 4
$T6 = -160						; size = 4
tv199 = -156						; size = 4
tv143 = -152						; size = 4
$T7 = -148						; size = 4
_pilot_data$ = -144					; size = 4
_this$ = -140						; size = 4
_theEvent$ = -136					; size = 4
_chat$8 = -132						; size = 4
_flight_ptr$ = -128					; size = 4
_format$ = -124						; size = 80
_time_str$ = -44					; size = 20
_pnum$ = -24						; size = 5
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fpsm$ = 8						; size = 4
?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z PROC ; MissionEvaluationClass::RegisterPlayerJoin
; _this$ = ecx

; 2931 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 168				; 000000a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2932 : 	_TCHAR					time_str[20],format[80],pnum[5];
; 2933 : 	PilotDataClass			*pilot_data;
; 2934 : 	EventElement			*theEvent;
; 2935 : 	FlightDataClass			*flight_ptr;
; 2936 : 
; 2937 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2938 : 
; 2939 : 	// Check if someone in the package fired this.
; 2940 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN9@RegisterPl:

; 2941 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN8@RegisterPl

; 2942 : 	{
; 2943 : 		if (flight_ptr->flight_id == FalconLocalSession->GetPlayerFlightID())

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerFlightID
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@RegisterPl

; 2944 : 			flags |= MISEVAL_MISSION_IN_PROGRESS;

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+26]
	or	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+26], dx
$LN7@RegisterPl:

; 2945 : 		pilot_data = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_data$[ebp], edx
$LN6@RegisterPl:

; 2946 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN5@RegisterPl

; 2947 : 		{
; 2948 : 			if (fpsm->dataBlock.campID && fpsm->dataBlock.campID == flight_ptr->camp_id &&	
; 2949 : 				fpsm->dataBlock.pilotID == pilot_data->pilot_slot)

	mov	eax, DWORD PTR _fpsm$[ebp]
	movzx	ecx, WORD PTR [eax+84]
	test	ecx, ecx
	je	$LN4@RegisterPl
	mov	edx, DWORD PTR _fpsm$[ebp]
	movzx	eax, WORD PTR [edx+84]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	jne	$LN4@RegisterPl
	mov	eax, DWORD PTR _fpsm$[ebp]
	movzx	ecx, BYTE PTR [eax+87]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	ecx, eax
	jne	$LN4@RegisterPl

; 2950 : 			{
; 2951 : 				// We're interested
; 2952 : 				theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN12@RegisterPl
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN13@RegisterPl
$LN12@RegisterPl:
	mov	DWORD PTR tv143[ebp], 0
$LN13@RegisterPl:
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _theEvent$[ebp], edx

; 2953 : 				ParseTime(vuxGameTime,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2954 : 				ReadIndexedString(pilot_data->aircraft_slot+1,pnum,4);

	push	4
	lea	edx, DWORD PTR _pnum$[ebp]
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	add	ecx, 1
	push	ecx
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2955 : 				if (fpsm->dataBlock.state == PSM_STATE_ENTERED_SIM)

	mov	edx, DWORD PTR _fpsm$[ebp]
	cmp	DWORD PTR [edx+89], 2
	jne	SHORT $LN3@RegisterPl

; 2956 : 					GetFormatString(FET_PILOT_JOINED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	13					; 0000000dH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
	jmp	SHORT $LN2@RegisterPl
$LN3@RegisterPl:

; 2957 : 				else if (fpsm->dataBlock.state == PSM_STATE_LEFT_SIM)

	mov	ecx, DWORD PTR _fpsm$[ebp]
	cmp	DWORD PTR [ecx+89], 4
	jne	SHORT $LN2@RegisterPl

; 2958 : 					GetFormatString(FET_PILOT_EXITED,format);

	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	push	14					; 0000000eH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
$LN2@RegisterPl:

; 2959 : 				ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,fpsm->dataBlock.callsign,flight_ptr->name,pnum,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pnum$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _fpsm$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2960 : 				theEvent->eventTime = vuxGameTime;

	mov	eax, DWORD PTR _theEvent$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+16], ecx

; 2961 : 				AddEventToList(theEvent,flight_ptr,0,0);

	push	0
	push	0
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 2962 : 
; 2963 : 				{
; 2964 : 					UI_SendChatMessage *chat;
; 2965 : 
; 2966 : 					chat = new UI_SendChatMessage (FalconNullId, FalconLocalSession);

	push	62					; 0000003eH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN14@RegisterPl
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0UI_SendChatMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; UI_SendChatMessage::UI_SendChatMessage
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN15@RegisterPl
$LN14@RegisterPl:
	mov	DWORD PTR tv199[ebp], 0
$LN15@RegisterPl:
	mov	eax, DWORD PTR tv199[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _chat$8[ebp], ecx

; 2967 : 
; 2968 : 					chat->dataBlock.from = FalconNullId;

	mov	edx, DWORD PTR _chat$8[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+48], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+52], ecx

; 2969 : 					chat->dataBlock.size = (strlen (theEvent->eventString) + 1) * sizeof (char);

	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	ecx, DWORD PTR _chat$8[ebp]
	mov	WORD PTR [ecx+56], ax

; 2970 : 					chat->dataBlock.message = new char [strlen (theEvent->eventString) + 1];

	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	eax, DWORD PTR _chat$8[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+58], ecx

; 2971 : 					memcpy (chat->dataBlock.message, theEvent->eventString, chat->dataBlock.size);

	mov	edx, DWORD PTR _chat$8[ebp]
	movsx	eax, WORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _chat$8[ebp]
	mov	eax, DWORD PTR [edx+58]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2972 : 					FalconSendMessage (chat, TRUE);

	push	1
	mov	ecx, DWORD PTR _chat$8[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 2973 : 				}
; 2974 : 
; 2975 : 				CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2976 : 				return;

	jmp	SHORT $LN10@RegisterPl
$LN4@RegisterPl:

; 2977 : 			}          
; 2978 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 2979 : 		}

	jmp	$LN6@RegisterPl
$LN5@RegisterPl:

; 2980 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 2981 : 	}

	jmp	$LN9@RegisterPl
$LN8@RegisterPl:

; 2982 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN10@RegisterPl:

; 2983 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-172]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterPlayerJoin@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z ENDP ; MissionEvaluationClass::RegisterPlayerJoin
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_classID$2 = -488					; size = 4
$T3 = -484						; size = 4
$T4 = -480						; size = 4
tv1186 = -476						; size = 4
$T5 = -472						; size = 4
_windex$ = -468						; size = 4
$T6 = -464						; size = 4
$T7 = -460						; size = 4
_uc$8 = -456						; size = 4
tv637 = -452						; size = 4
$T9 = -448						; size = 4
_fid$10 = -444						; size = 4
tv629 = -440						; size = 4
$T11 = -436						; size = 4
tv163 = -432						; size = 4
$T12 = -428						; size = 4
tv151 = -424						; size = 4
_posted$ = -420						; size = 4
tv692 = -416						; size = 4
tv871 = -412						; size = 4
tv1346 = -408						; size = 4
$T13 = -404						; size = 4
$T14 = -400						; size = 4
_dsession$15 = -396					; size = 4
_drop$ = -392						; size = 4
_ssession$16 = -388					; size = 4
_value$17 = -384					; size = 4
_ssession$18 = -380					; size = 4
_dsession$19 = -376					; size = 4
_baseevent$20 = -372					; size = 4
_o$21 = -368						; size = 4
_bonus$22 = -364					; size = 4
_foundEvent$23 = -360					; size = 4
_f$24 = -356						; size = 4
_sptr$25 = -352						; size = 4
_nokill$ = -348						; size = 4
_target_flight$ = -344					; size = 4
_wn$ = -340						; size = 4
_target_data$ = -336					; size = 4
_fc$ = -332						; size = 4
_shooter_flight$ = -328					; size = 4
_shooter_data$ = -324					; size = 4
_vc$ = -320						; size = 4
_flight_ptr$ = -316					; size = 4
_tmpevent$26 = -312					; size = 4
_theEvent$ = -308					; size = 4
_this$ = -304						; size = 4
_pilot_data$ = -300					; size = 4
_time_str$ = -296					; size = 128
_pnum$ = -168						; size = 5
_format$ = -160						; size = 80
_tmp2$ = -80						; size = 30
_tmp$ = -48						; size = 30
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dtm$ = 8						; size = 4
_type$ = 12						; size = 4
_pilot_status$ = 16					; size = 4
?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z PROC ; MissionEvaluationClass::RegisterKill
; _this$ = ecx

; 2396 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 476				; 000001dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2397 : 	_TCHAR					time_str[128],format[80],tmp[30],tmp2[30],pnum[5];
; 2398 : 	VehicleClassDataType	*vc;
; 2399 : 	FeatureClassDataType	*fc;
; 2400 : 	PilotDataClass			*pilot_data,*shooter_data=NULL,*target_data=NULL;

	mov	DWORD PTR _shooter_data$[ebp], 0
	mov	DWORD PTR _target_data$[ebp], 0

; 2401 : 	EventElement			*theEvent;
; 2402 : 	int						wn,windex,drop=0,posted=0,nokill=0;

	mov	DWORD PTR _drop$[ebp], 0
	mov	DWORD PTR _posted$[ebp], 0
	mov	DWORD PTR _nokill$[ebp], 0

; 2403 : 	FlightDataClass			*flight_ptr,*shooter_flight=NULL,*target_flight=NULL;

	mov	DWORD PTR _shooter_flight$[ebp], 0
	mov	DWORD PTR _target_flight$[ebp], 0

; 2404 : 
; 2405 : // 2002-02-08 MN don't evaluate if FEAT_NO_HITEVAL (like trees...)
; 2406 : 	if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 1
	jne	SHORT $LN140@RegisterKi

; 2407 : 	{
; 2408 : 		// get classtbl entry for feature
; 2409 : 		fc = GetFeatureClassData (dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+67]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2410 : 		if (fc && (fc->Flags & FEAT_NO_HITEVAL))

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN140@RegisterKi
	mov	eax, DWORD PTR _fc$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 16					; 00000010H
	je	SHORT $LN140@RegisterKi

; 2411 : 			return;

	jmp	$LN142@RegisterKi
$LN140@RegisterKi:

; 2412 : 	}
; 2413 : 
; 2414 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2415 : 
; 2416 : 	flight_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _flight_ptr$[ebp], eax
$LN139@RegisterKi:

; 2417 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN138@RegisterKi

; 2418 : 		{
; 2419 : 		// Did we get killed?
; 2420 : 		if (dtm->dataBlock.dCampID && dtm->dataBlock.dCampID == flight_ptr->camp_id)		// hit plane in this flight

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+64]
	test	edx, edx
	je	$LN82@RegisterKi
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+64]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	cmp	ecx, eax
	jne	$LN82@RegisterKi

; 2421 : 			{
; 2422 : 			// edg: It has been observed that pilot_data will be NULL when
; 2423 : 			// feature is the entity.  Do check for this and don't exec the next
; 2424 : 			// block of code if NULL.  I'm not sure this entirely correct
; 2425 : 			pilot_data = FindPilotData(flight_ptr,dtm->dataBlock.dPilotID);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _pilot_data$[ebp], eax

; 2426 : 
; 2427 : 			// Don't do this if the pilot is already toast (or ejected)
; 2428 : 			if (pilot_data && pilot_data->pilot_status == PILOT_IN_USE)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN82@RegisterKi
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+65]
	cmp	edx, 4
	jne	$LN82@RegisterKi

; 2429 : 				{
; 2430 : 				// Only record pilot status in non-dogfight games
; 2431 : 				if (FalconLocalGame->GetGameType() != game_Dogfight)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN144@RegisterKi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN145@RegisterKi
$LN144@RegisterKi:
	mov	DWORD PTR tv151[ebp], 0
$LN145@RegisterKi:
	mov	ecx, DWORD PTR tv151[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	je	SHORT $LN135@RegisterKi

; 2432 : 					pilot_data->pilot_status = pilot_status;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR _pilot_status$[ebp]
	mov	BYTE PTR [ecx+65], dl
$LN135@RegisterKi:

; 2433 : 
; 2434 : 				theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T14[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN146@RegisterKi
	mov	ecx, DWORD PTR $T14[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv163[ebp], eax
	jmp	SHORT $LN147@RegisterKi
$LN146@RegisterKi:
	mov	DWORD PTR tv163[ebp], 0
$LN147@RegisterKi:
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _theEvent$[ebp], ecx

; 2435 : 				ParseTime(TheCampaign.CurrentTime,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2436 : 	
; 2437 : 				pilot_data->aircraft_status = VIS_DESTROYED;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [ecx+66], 3

; 2438 : 				ReadIndexedString(pilot_data->aircraft_slot+1,pnum,4);

	push	4
	lea	edx, DWORD PTR _pnum$[ebp]
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	add	ecx, 1
	push	ecx
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2439 : 
; 2440 : 				// Find shooter flight and pilot data, if they're also in our package
; 2441 : 				shooter_data = NULL;

	mov	DWORD PTR _shooter_data$[ebp], 0

; 2442 : 				shooter_flight = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _shooter_flight$[ebp], eax
$LN134@RegisterKi:

; 2443 : 				while (shooter_flight && !shooter_data)

	cmp	DWORD PTR _shooter_flight$[ebp], 0
	je	SHORT $LN133@RegisterKi
	cmp	DWORD PTR _shooter_data$[ebp], 0
	jne	SHORT $LN133@RegisterKi

; 2444 : 				{
; 2445 : 					if (shooter_flight->camp_id == dtm->dataBlock.fCampID)

	mov	ecx, DWORD PTR _shooter_flight$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+78]
	cmp	edx, ecx
	jne	SHORT $LN132@RegisterKi

; 2446 : 					{
; 2447 : 						shooter_data = FindPilotData(shooter_flight,dtm->dataBlock.fPilotID);

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _shooter_flight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _shooter_data$[ebp], eax

; 2448 : 						if (!shooter_data)

	cmp	DWORD PTR _shooter_data$[ebp], 0
	jne	SHORT $LN131@RegisterKi

; 2449 : 						{
; 2450 : 							break;

	jmp	SHORT $LN133@RegisterKi
$LN131@RegisterKi:

; 2451 : 						}
; 2452 : 					}
; 2453 : 					else

	jmp	SHORT $LN130@RegisterKi
$LN132@RegisterKi:

; 2454 : 					{
; 2455 : 						shooter_flight = shooter_flight->next_flight;

	mov	edx, DWORD PTR _shooter_flight$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _shooter_flight$[ebp], eax
$LN130@RegisterKi:

; 2456 : 					}
; 2457 : 				}

	jmp	SHORT $LN134@RegisterKi
$LN133@RegisterKi:

; 2458 : 
; 2459 : 				// Crash or kill?
; 2460 : 				if (!dtm->dataBlock.fIndex || dtm->dataBlock.damageType == FalconDamageType::GroundCollisionDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+81]
	test	edx, edx
	je	SHORT $LN128@RegisterKi
	mov	eax, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [eax+48], 5
	jne	$LN129@RegisterKi
$LN128@RegisterKi:

; 2461 : 					{
; 2462 : 					// Ground collision
; 2463 : 					GetFormatString(FET_PILOT_CRASHED,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	8
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2464 : 					ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2465 : 					if (pilot_data == shooter_data)			

	mov	eax, DWORD PTR _pilot_data$[ebp]
	cmp	eax, DWORD PTR _shooter_data$[ebp]
	jne	SHORT $LN127@RegisterKi

; 2466 : 						{
; 2467 : 						// We killed ourselves
; 2468 : 						pilot_data->score += CalcScore (SCORE_GROUND_COLLISION, 0);

	push	0
	push	18					; 00000012H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2469 : 						logbook_data.KilledBySelf = 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], 1

; 2470 : 						if (pilot_data == player_pilot)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN126@RegisterKi

; 2471 : 							{
; 2472 : 							logbook_data.Flags |= CRASH_UNDAMAGED;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+256]
	or	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+256], dx
$LN126@RegisterKi:

; 2473 : 							}
; 2474 : 						}
; 2475 : 					else					

	jmp	SHORT $LN125@RegisterKi
$LN127@RegisterKi:

; 2476 : 						{
; 2477 : 						// Crashed after taking damage
; 2478 : 						pilot_data->score += CalcScore (SCORE_GROUND_COLLISION_KILL, 0);

	push	0
	push	19					; 00000013H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN125@RegisterKi:

; 2479 : 						}
; 2480 : 					nokill = 1;

	mov	DWORD PTR _nokill$[ebp], 1
	jmp	$LN101@RegisterKi
$LN129@RegisterKi:

; 2481 : 					}
; 2482 : 				else if (dtm->dataBlock.damageType == FalconDamageType::FeatureCollisionDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [ecx+48], 7
	jne	$LN123@RegisterKi

; 2483 : 					{
; 2484 : 					// Hit feature
; 2485 : 					fc = GetFeatureClassData (dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE);

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+81]
	sub	eax, 100				; 00000064H
	push	eax
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2486 : 					GetFormatString(FET_COLLIDED_WITH_FEATURE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	7
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2487 : 					if (fc) // JB 010113

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN122@RegisterKi

; 2488 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,fc->Name,time_str,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fc$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2489 : 					else

	jmp	SHORT $LN121@RegisterKi
$LN122@RegisterKi:

; 2490 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,"",time_str,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH
$LN121@RegisterKi:

; 2491 : 					if (pilot_data && pilot_data == player_pilot && shooter_data == player_pilot)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN120@RegisterKi
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN120@RegisterKi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _shooter_data$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	SHORT $LN120@RegisterKi

; 2492 : 						{
; 2493 : 						logbook_data.KilledBySelf = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], 1
$LN120@RegisterKi:

; 2494 : 						}
; 2495 : 					pilot_data->score += CalcScore (SCORE_FEATURE_COLLISION, 0);

	push	0
	push	20					; 00000014H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
	jmp	$LN101@RegisterKi
$LN123@RegisterKi:

; 2496 : 					}
; 2497 : 				else if (dtm->dataBlock.damageType == FalconDamageType::ObjectCollisionDamage || dtm->dataBlock.damageType == FalconDamageType::CollisionDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [ecx+48], 6
	je	SHORT $LN117@RegisterKi
	mov	edx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [edx+48], 2
	jne	$LN118@RegisterKi
$LN117@RegisterKi:

; 2498 : 					{
; 2499 : 					// Hit vehicle
; 2500 : 					if (shooter_flight && shooter_data)

	cmp	DWORD PTR _shooter_flight$[ebp], 0
	je	$LN116@RegisterKi
	cmp	DWORD PTR _shooter_data$[ebp], 0
	je	SHORT $LN116@RegisterKi

; 2501 : 						{
; 2502 : 						// determine other guy's callsign
; 2503 : 						_stprintf(tmp,shooter_flight->name);

	mov	eax, DWORD PTR _shooter_flight$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 2504 : 						ReadIndexedString(shooter_data->aircraft_slot+1,tmp2,4);

	push	4
	lea	edx, DWORD PTR _tmp2$[ebp]
	push	edx
	mov	eax, DWORD PTR _shooter_data$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	add	ecx, 1
	push	ecx
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2505 : 						GetFormatString(FET_COLLIDED_WITH_PILOT,format);

	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	push	5
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2506 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,shooter_data->pilot_callsign,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _shooter_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 24					; 00000018H

; 2507 : 						}
; 2508 : 					else

	jmp	$LN111@RegisterKi
$LN116@RegisterKi:

; 2509 : 						{
; 2510 : 						// determine vehicle name and country
; 2511 : 						vc = GetVehicleClassData (dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE);

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+81]
	sub	eax, 100				; 00000064H
	push	eax
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 2512 : 						if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN114@RegisterKi

; 2513 : 							ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.fSide, F4LANG_FEMININE),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	push	0
	push	0
	push	1
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2514 : //							ReadIndexedString(3821+20*dtm->dataBlock.fSide,tmp2,29);
; 2515 : 						else

	jmp	SHORT $LN113@RegisterKi
$LN114@RegisterKi:

; 2516 : 							ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.fSide),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH
$LN113@RegisterKi:

; 2517 : //							ReadIndexedString(3820+20*dtm->dataBlock.fSide,tmp2,29);
; 2518 : 						GetFormatString(FET_COLLIDED_WITH_VEHICLE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	6
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2519 : 						if (vc) // JB 010113 Death due to ejected pilot collision was causing a CTD

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN112@RegisterKi

; 2520 : 							ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,tmp2,vc->Name,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2521 : 						else

	jmp	SHORT $LN111@RegisterKi
$LN112@RegisterKi:

; 2522 : 							ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,tmp2,"",time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _tmp2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH
$LN111@RegisterKi:

; 2523 : 						}
; 2524 : 					nokill = 1;

	mov	DWORD PTR _nokill$[ebp], 1

; 2525 : 					pilot_data->score += CalcScore (SCORE_VEHICLE_COLLISION, 0);

	push	0
	push	21					; 00000015H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
	jmp	$LN101@RegisterKi
$LN118@RegisterKi:

; 2526 : 					}
; 2527 : 				else if (dtm->dataBlock.damageType == FalconDamageType::DebrisDamage || dtm->dataBlock.damageType == FalconDamageType::ProximityDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [ecx+48], 8
	je	SHORT $LN108@RegisterKi
	mov	edx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [edx+48], 9
	jne	SHORT $LN109@RegisterKi
$LN108@RegisterKi:

; 2528 : 					{
; 2529 : 					// Killed by debris
; 2530 : 					GetFormatString(FET_PILOT_KILLED_BY_DEBREE,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	9
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2531 : 					ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2532 : 					pilot_data->score += CalcScore (SCORE_DEBREE_KILL, 0);

	push	0
	push	22					; 00000016H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+78]
	add	ecx, eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+78], cx
	jmp	$LN101@RegisterKi
$LN109@RegisterKi:

; 2533 : 					}
; 2534 : 				else if (dtm->dataBlock.damageType == FalconDamageType::BombDamage)

	mov	eax, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [eax+48], 3
	jne	SHORT $LN106@RegisterKi

; 2535 : 					{
; 2536 : 					// hit by bomb
; 2537 : 					GetFormatString(FET_PILOT_KILLED_BY_BOMB,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	10					; 0000000aH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2538 : 					ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2539 : 					pilot_data->score += CalcScore (SCORE_BOMB_KILL, 0);

	push	0
	push	23					; 00000017H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
	jmp	$LN101@RegisterKi
$LN106@RegisterKi:

; 2540 : 					}
; 2541 : 				else if (dtm->dataBlock.damageType == FalconDamageType::FODDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [ecx+48], 4
	jne	SHORT $LN104@RegisterKi

; 2542 : 					{
; 2543 : 					// Act of god
; 2544 : 					GetFormatString(FET_PILOT_KILLED_BY_OTHER,format);

	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	push	11					; 0000000bH
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2545 : 					ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2546 : 					pilot_data->score += CalcScore (SCORE_OTHER_KILL, 0);

	push	0
	push	24					; 00000018H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
	jmp	$LN101@RegisterKi
$LN104@RegisterKi:

; 2547 : 					}
; 2548 : 				else if (dtm->dataBlock.damageType == FalconDamageType::OtherDamage)

	mov	ecx, DWORD PTR _dtm$[ebp]
	cmp	DWORD PTR [ecx+48], 10			; 0000000aH
	jne	SHORT $LN102@RegisterKi

; 2549 : 					{
; 2550 : 					// Ignore this death
; 2551 : 					drop = 1;	

	mov	DWORD PTR _drop$[ebp], 1

; 2552 : 					shooter_flight = flight_ptr;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR _shooter_flight$[ebp], edx

; 2553 : 					}
; 2554 : 				else

	jmp	$LN101@RegisterKi
$LN102@RegisterKi:

; 2555 : 					{
; 2556 : 					if (shooter_flight && shooter_data)

	cmp	DWORD PTR _shooter_flight$[ebp], 0
	je	SHORT $LN100@RegisterKi
	cmp	DWORD PTR _shooter_data$[ebp], 0
	je	SHORT $LN100@RegisterKi

; 2557 : 						{
; 2558 : 						GetFormatString(FET_PILOT_DOWNED_BY_PACKMATE,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	0
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2559 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,shooter_data->pilot_callsign,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _shooter_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 24					; 00000018H

; 2560 : 						}
; 2561 : 					else

	jmp	$LN91@RegisterKi
$LN100@RegisterKi:

; 2562 : 						{
; 2563 : 						// Determine shooter type
; 2564 : 						if (Falcon4ClassTable[dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_VEHICLE)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+81]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 5
	jne	SHORT $LN98@RegisterKi

; 2565 : 							vc = GetVehicleClassData (dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+81]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 2566 : 						else

	jmp	SHORT $LN97@RegisterKi
$LN98@RegisterKi:

; 2567 : 							{
; 2568 : 							UnitClassDataType *uc;
; 2569 : 							ShiAssert(Falcon4ClassTable[dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_UNIT);
; 2570 : 							uc = (UnitClassDataType*)Falcon4ClassTable[dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE].dataPtr;

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+81]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+ecx+77]
	mov	DWORD PTR _uc$8[ebp], eax

; 2571 : 							vc = GetVehicleClassData(uc->VehicleType[0]);

	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _uc$8[ebp]
	movsx	eax, WORD PTR [edx+ecx+68]
	push	eax
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax
$LN97@RegisterKi:

; 2572 : 							}
; 2573 : 						if (vc) // JB 010113

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN96@RegisterKi

; 2574 : 							_stprintf(tmp,vc->Name);

	mov	ecx, DWORD PTR _vc$[ebp]
	add	ecx, 8
	push	ecx
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 2575 : 						else

	jmp	SHORT $LN95@RegisterKi
$LN96@RegisterKi:

; 2576 : 							_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8
$LN95@RegisterKi:

; 2577 : 						if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN94@RegisterKi

; 2578 : 							ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.fSide, F4LANG_FEMININE),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	push	0
	push	0
	push	1
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2579 : //							ReadIndexedString(3821+20*dtm->dataBlock.fSide,tmp2,29);
; 2580 : 						else

	jmp	SHORT $LN93@RegisterKi
$LN94@RegisterKi:

; 2581 : 							ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.fSide),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH
$LN93@RegisterKi:

; 2582 : //							ReadIndexedString(3820+20*dtm->dataBlock.fSide,tmp2,29);
; 2583 : 						GetFormatString(FET_PILOT_DOWNED_BY_VEHICLE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	1
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2584 : 						if (vc) // JB 010113

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN92@RegisterKi

; 2585 : 							ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,tmp2,vc->Name,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR _vc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2586 : 						else

	jmp	SHORT $LN91@RegisterKi
$LN92@RegisterKi:

; 2587 : 							ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->pilot_callsign,tmp2,"",time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _tmp2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH
$LN91@RegisterKi:

; 2588 : 						}
; 2589 : 
; 2590 : 					if (Falcon4ClassTable[dtm->dataBlock.fIndex-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_AIR)

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+81]
	sub	edx, 100				; 00000064H
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	imul	eax, 0
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 2
	jne	SHORT $LN90@RegisterKi

; 2591 : 						friendly_aa_losses++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+22]
	add	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+22], al

; 2592 : 					else

	jmp	SHORT $LN89@RegisterKi
$LN90@RegisterKi:

; 2593 : 						friendly_ga_losses++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+23]
	add	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+23], al
$LN89@RegisterKi:

; 2594 : 					pilot_data->score += CalcScore (SCORE_VEHICLE_KILL, 0);

	push	0
	push	25					; 00000019H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+78]
	add	ecx, eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+78], cx

; 2595 : 					drop = 1;		// Don't post this if someone in our package caused this death

	mov	DWORD PTR _drop$[ebp], 1
$LN101@RegisterKi:

; 2596 : 					}
; 2597 : 
; 2598 : 				// Ace factor and death scoring
; 2599 : 				if (shooter_data && shooter_data->pilot_slot > PILOTS_PER_FLIGHT)

	cmp	DWORD PTR _shooter_data$[ebp], 0
	je	$LN88@RegisterKi
	mov	eax, DWORD PTR _shooter_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	ecx, 4
	jle	$LN88@RegisterKi

; 2600 : 					{
; 2601 : 					// Player killed us.
; 2602 : 					FalconSessionEntity	*ssession = gCommsMgr->FindCampaignPlayer(shooter_flight->flight_id,shooter_data->aircraft_slot);

	mov	edx, DWORD PTR _shooter_data$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	push	eax
	mov	ecx, DWORD PTR _shooter_flight$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _ssession$16[ebp], eax

; 2603 : 					FalconSessionEntity	*dsession = gCommsMgr->FindCampaignPlayer(flight_ptr->flight_id,pilot_data->aircraft_slot);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _dsession$15[ebp], eax

; 2604 : 					if (ssession && dsession && ssession != dsession && GetCCRelations(dtm->dataBlock.fSide,dtm->dataBlock.dSide) != Allied)

	cmp	DWORD PTR _ssession$16[ebp], 0
	je	SHORT $LN87@RegisterKi
	cmp	DWORD PTR _dsession$15[ebp], 0
	je	SHORT $LN87@RegisterKi
	mov	eax, DWORD PTR _ssession$16[ebp]
	cmp	eax, DWORD PTR _dsession$15[ebp]
	je	SHORT $LN87@RegisterKi
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, BYTE PTR [ecx+69]
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetCCRelations@@YAHEE@Z		; GetCCRelations
	add	esp, 8
	cmp	eax, 1
	je	SHORT $LN87@RegisterKi

; 2605 : 						dsession->SetAceFactorDeath(ssession->GetInitAceFactor());

	mov	ecx, DWORD PTR _ssession$16[ebp]
	call	?GetInitAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetInitAceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _dsession$15[ebp]
	call	?SetAceFactorDeath@FalconSessionEntity@@QAEXM@Z ; FalconSessionEntity::SetAceFactorDeath
$LN87@RegisterKi:

; 2606 : 					pilot_data->deaths[VS_HUMAN]++;

	mov	edx, 2
	shl	edx, 0
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cx, WORD PTR [eax+edx+74]
	add	cx, 1
	mov	edx, 2
	shl	edx, 0
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+edx+74], cx

; 2607 : 					}
; 2608 : 				else

	jmp	SHORT $LN86@RegisterKi
$LN88@RegisterKi:

; 2609 : 					{
; 2610 : 					pilot_data->deaths[VS_AI]++;

	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	ax, WORD PTR [edx+ecx+74]
	add	ax, 1
	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+ecx+74], ax
$LN86@RegisterKi:

; 2611 : 					}
; 2612 : 
; 2613 : 				// Update remote scores for this guy
; 2614 : //				UpdateEvaluators(flight_ptr, pilot_data);
; 2615 : 
; 2616 : 				// Need to determine how to tell when we're killed by a player
; 2617 : 				if (dtm->dataBlock.fPilotID > PILOTS_PER_FLIGHT && !logbook_data.KilledBySelf)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	cmp	ecx, 4
	jle	SHORT $LN85@RegisterKi
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+296], 0
	jne	SHORT $LN85@RegisterKi

; 2618 : 					logbook_data.KilledByHuman = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 1
$LN85@RegisterKi:

; 2619 : 
; 2620 : 				theEvent->eventTime = TheCampaign.CurrentTime;

	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [ecx+16], edx

; 2621 : 
; 2622 : 				// Only post this event if it's not also going to be posted as a kill
; 2623 : 				// i.e. If both shooter and dead guy are in same flight and it's one of several
; 2624 : 				// messages which show in both catagories, drop the message
; 2625 : 				if (drop && (shooter_flight == flight_ptr || FalconLocalGame->GetGameType() == game_Dogfight))

	cmp	DWORD PTR _drop$[ebp], 0
	je	$LN84@RegisterKi
	mov	eax, DWORD PTR _shooter_flight$[ebp]
	cmp	eax, DWORD PTR _flight_ptr$[ebp]
	je	SHORT $LN83@RegisterKi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN148@RegisterKi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv629[ebp], eax
	jmp	SHORT $LN149@RegisterKi
$LN148@RegisterKi:
	mov	DWORD PTR tv629[ebp], 0
$LN149@RegisterKi:
	mov	ecx, DWORD PTR tv629[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	jne	SHORT $LN84@RegisterKi
$LN83@RegisterKi:

; 2626 : 					delete theEvent;

	mov	edx, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T9[ebp], eax
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN150@RegisterKi
	push	1
	mov	ecx, DWORD PTR $T9[ebp]
	call	??_GEventElement@@QAEPAXI@Z
	mov	DWORD PTR tv637[ebp], eax
	jmp	SHORT $LN151@RegisterKi
$LN150@RegisterKi:
	mov	DWORD PTR tv637[ebp], 0
$LN151@RegisterKi:

; 2627 : 				else

	jmp	SHORT $LN82@RegisterKi
$LN84@RegisterKi:

; 2628 : 					{
; 2629 : 					AddEventToList(theEvent,flight_ptr,NULL,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 2630 : 					posted = 1;

	mov	DWORD PTR _posted$[ebp], 1
$LN82@RegisterKi:

; 2631 : 					}
; 2632 : 				}
; 2633 : 			}
; 2634 : 
; 2635 : 		// Did we do the killing?
; 2636 : 		if (dtm->dataBlock.fCampID && dtm->dataBlock.fCampID == flight_ptr->camp_id)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+78]
	test	ecx, ecx
	je	$LN28@RegisterKi
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+78]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	jne	$LN28@RegisterKi

; 2637 : 			{
; 2638 : 			// edg: It has been observed that pilot_data will be NULL when
; 2639 : 			// feature is the entity.  Do check for this and don't exec the next
; 2640 : 			// block of code if NULL.  I'm not sure this entirely correct
; 2641 : 			pilot_data = FindPilotData(flight_ptr,dtm->dataBlock.fPilotID);

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _pilot_data$[ebp], eax

; 2642 : 			if (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN28@RegisterKi

; 2643 : 				{
; 2644 : 				if (dtm->dataBlock.fCampID && dtm->dataBlock.fCampID == flight_ptr->camp_id && 
; 2645 : 					(dtm->dataBlock.fPilotID != dtm->dataBlock.dPilotID || dtm->dataBlock.fCampID != dtm->dataBlock.dCampID))

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+78]
	test	ecx, ecx
	je	$LN30@RegisterKi
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+78]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	jne	$LN30@RegisterKi
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	cmp	ecx, eax
	jne	SHORT $LN78@RegisterKi
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+78]
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+64]
	cmp	edx, ecx
	je	$LN30@RegisterKi
$LN78@RegisterKi:

; 2646 : 					{
; 2647 : 					theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN152@RegisterKi
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv692[ebp], eax
	jmp	SHORT $LN153@RegisterKi
$LN152@RegisterKi:
	mov	DWORD PTR tv692[ebp], 0
$LN153@RegisterKi:
	mov	edx, DWORD PTR tv692[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _theEvent$[ebp], eax

; 2648 : 					ParseTime(TheCampaign.CurrentTime,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2649 : 
; 2650 : 					// Check if the target is also someone we're tracking messages for
; 2651 : 					target_data = NULL;

	mov	DWORD PTR _target_data$[ebp], 0

; 2652 : 					target_flight = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _target_flight$[ebp], ecx
$LN77@RegisterKi:

; 2653 : 					while (target_flight && !target_data)

	cmp	DWORD PTR _target_flight$[ebp], 0
	je	SHORT $LN76@RegisterKi
	cmp	DWORD PTR _target_data$[ebp], 0
	jne	SHORT $LN76@RegisterKi

; 2654 : 						{
; 2655 : 						if (target_flight->camp_id == dtm->dataBlock.dCampID)

	mov	edx, DWORD PTR _target_flight$[ebp]
	movsx	eax, WORD PTR [edx+36]
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+64]
	cmp	eax, edx
	jne	SHORT $LN75@RegisterKi

; 2656 : 							{
; 2657 : 							target_data = FindPilotData(target_flight,dtm->dataBlock.dPilotID);

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	push	ecx
	mov	edx, DWORD PTR _target_flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _target_data$[ebp], eax

; 2658 : 							if (!target_data)

	cmp	DWORD PTR _target_data$[ebp], 0
	jne	SHORT $LN74@RegisterKi

; 2659 : 								break;

	jmp	SHORT $LN76@RegisterKi
$LN74@RegisterKi:

; 2660 : 							}
; 2661 : 						else

	jmp	SHORT $LN73@RegisterKi
$LN75@RegisterKi:

; 2662 : 							target_flight = target_flight->next_flight;

	mov	eax, DWORD PTR _target_flight$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _target_flight$[ebp], ecx
$LN73@RegisterKi:

; 2663 : 						}

	jmp	SHORT $LN77@RegisterKi
$LN76@RegisterKi:

; 2664 : 
; 2665 : 					// We're interested - and log this as a kill
; 2666 : 					if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_VEHICLE)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	edx, BYTE PTR [ecx+eax+76]
	cmp	edx, 5
	jne	SHORT $LN72@RegisterKi

; 2667 : 						{
; 2668 : 						vc = GetVehicleClassData (dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	push	ecx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 2669 : 						if (vc) // JB 010113

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN71@RegisterKi

; 2670 : 							_stprintf(tmp,vc->Name);

	mov	edx, DWORD PTR _vc$[ebp]
	add	edx, 8
	push	edx
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 2671 : 						else

	jmp	SHORT $LN70@RegisterKi
$LN71@RegisterKi:

; 2672 : 							_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8
$LN70@RegisterKi:
	jmp	SHORT $LN66@RegisterKi
$LN72@RegisterKi:

; 2673 : 						}
; 2674 : 					else if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	edx, BYTE PTR [ecx+eax+76]
	cmp	edx, 1
	jne	SHORT $LN66@RegisterKi

; 2675 : 						{
; 2676 : 						// get classtbl entry for feature
; 2677 : 						fc = GetFeatureClassData (dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	push	ecx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2678 : 						if (fc) // JB 010113

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN67@RegisterKi

; 2679 : 							_stprintf(tmp,fc->Name);

	mov	edx, DWORD PTR _fc$[ebp]
	add	edx, 8
	push	edx
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 2680 : 						else

	jmp	SHORT $LN66@RegisterKi
$LN67@RegisterKi:

; 2681 : 							_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8
$LN66@RegisterKi:

; 2682 : 						}
; 2683 : 					if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_AIR)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 2
	jne	$LN65@RegisterKi

; 2684 : 						{
; 2685 : 						// Air to air kill
; 2686 : 						if (GetRoE(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide),ROE_AIR_FIRE) == ROE_ALLOWED)

	push	5
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN64@RegisterKi

; 2687 : 							{
; 2688 : 							pilot_data->score += CalcScore (SCORE_KILL_ENEMY, dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);			// Hit enemy

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	push	ecx
	push	8
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+78]
	add	ecx, eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+78], cx

; 2689 : 							pilot_data->aa_kills++;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+67]
	add	cl, 1
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+67], cl

; 2690 : 							}
; 2691 : 						else

	jmp	SHORT $LN63@RegisterKi
$LN64@RegisterKi:

; 2692 : 							pilot_data->score += CalcScore (SCORE_KILL_FRIENDLY, dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);		// Hit friendly/neutral

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	push	ecx
	push	9
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+78]
	add	ecx, eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+78], cx
$LN63@RegisterKi:

; 2693 : 						if (target_flight && target_data)

	cmp	DWORD PTR _target_flight$[ebp], 0
	je	SHORT $LN62@RegisterKi
	cmp	DWORD PTR _target_data$[ebp], 0
	je	SHORT $LN62@RegisterKi

; 2694 : 							GetFormatString(FET_PILOT_KILLED_PACKMATE,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	2
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2695 : 						else

	jmp	SHORT $LN61@RegisterKi
$LN62@RegisterKi:

; 2696 : 							GetFormatString(FET_PILOT_KILLED_VEHICLE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	3
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
$LN61@RegisterKi:
	jmp	$LN46@RegisterKi
$LN65@RegisterKi:

; 2697 : 						}
; 2698 : 					else if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_CLASS] == CLASS_FEATURE)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 2
	jne	$LN59@RegisterKi

; 2699 : 						{
; 2700 : 						// Feature kill
; 2701 : 						if (!GetRoE(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide),ROE_AIR_ATTACK) == ROE_ALLOWED)

	push	8
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN154@RegisterKi
	mov	DWORD PTR tv871[ebp], 1
	jmp	SHORT $LN155@RegisterKi
$LN154@RegisterKi:
	mov	DWORD PTR tv871[ebp], 0
$LN155@RegisterKi:
	cmp	DWORD PTR tv871[ebp], 1
	jne	SHORT $LN58@RegisterKi

; 2702 : 							pilot_data->score += CalcScore (SCORE_KILL_FRIENDLY_FEATURE, 0);			// Hit friendly/neutral

	push	0
	push	11					; 0000000bH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2703 : 						else

	jmp	$LN57@RegisterKi
$LN58@RegisterKi:

; 2704 : 							{
; 2705 : 							// Find it's relative value		// Hit enemy
; 2706 : 							Objective	o = (Objective)GetEntityByCampID(dtm->dataBlock.dCampID);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+64]
	push	edx
	call	?GetEntityByCampID@@YAPAVCampBaseClass@@H@Z ; GetEntityByCampID
	add	esp, 4
	mov	DWORD PTR _o$21[ebp], eax

; 2707 : 							int			fid,f,value=0,classID;

	mov	DWORD PTR _value$17[ebp], 0

; 2708 : 							fid = o->static_data.class_data->FirstFeature;

	mov	eax, DWORD PTR _o$21[ebp]
	mov	ecx, DWORD PTR [eax+232]
	movsx	edx, WORD PTR [ecx+52]
	mov	DWORD PTR _fid$10[ebp], edx

; 2709 : 							for (f=0; f<o->static_data.class_data->Features && !value; f++,fid++)

	mov	DWORD PTR _f$24[ebp], 0
	jmp	SHORT $LN56@RegisterKi
$LN55@RegisterKi:
	mov	eax, DWORD PTR _f$24[ebp]
	add	eax, 1
	mov	DWORD PTR _f$24[ebp], eax
	mov	ecx, DWORD PTR _fid$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _fid$10[ebp], ecx
$LN56@RegisterKi:
	mov	edx, DWORD PTR _o$21[ebp]
	mov	eax, DWORD PTR [edx+232]
	movzx	ecx, BYTE PTR [eax+50]
	cmp	DWORD PTR _f$24[ebp], ecx
	jge	SHORT $LN54@RegisterKi
	cmp	DWORD PTR _value$17[ebp], 0
	jne	SHORT $LN54@RegisterKi

; 2710 : 								{
; 2711 : 								classID = o->GetFeatureID(f);

	mov	edx, DWORD PTR _f$24[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$21[ebp]
	call	?GetFeatureID@ObjectiveClass@@QAEHH@Z	; ObjectiveClass::GetFeatureID
	mov	DWORD PTR _classID$2[ebp], eax

; 2712 : 								if (classID == dtm->dataBlock.dIndex)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	cmp	DWORD PTR _classID$2[ebp], ecx
	jne	SHORT $LN53@RegisterKi

; 2713 : 									value = o->GetFeatureValue(f);

	mov	edx, DWORD PTR _f$24[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$21[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	mov	DWORD PTR _value$17[ebp], eax
$LN53@RegisterKi:

; 2714 : 								}

	jmp	SHORT $LN55@RegisterKi
$LN54@RegisterKi:

; 2715 : 							pilot_data->score += CalcScore (SCORE_KILL_ENEMY_FEATURE, value);

	mov	eax, DWORD PTR _value$17[ebp]
	push	eax
	push	10					; 0000000aH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2716 : 							pilot_data->as_kills++;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+69]
	add	dl, 1
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+69], dl
$LN57@RegisterKi:

; 2717 : 							}
; 2718 : 						nokill = 0;

	mov	DWORD PTR _nokill$[ebp], 0

; 2719 : 						GetFormatString(FET_PILOT_DESTROYED_VEHICLE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	4
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
	jmp	$LN46@RegisterKi
$LN59@RegisterKi:

; 2720 : 						}
; 2721 : 					else if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_DOMAIN] == DOMAIN_SEA)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, 1
	imul	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 4
	jne	$LN51@RegisterKi

; 2722 : 						{
; 2723 : 						// Naval Vehicle kill
; 2724 : 						int bonus = 0;

	mov	DWORD PTR _bonus$22[ebp], 0

; 2725 : 						if (!dtm->dataBlock.dPilotID)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	test	ecx, ecx
	jne	SHORT $LN50@RegisterKi

; 2726 : 							bonus += 3;						// Capitol ship!

	mov	edx, DWORD PTR _bonus$22[ebp]
	add	edx, 3
	mov	DWORD PTR _bonus$22[ebp], edx
$LN50@RegisterKi:

; 2727 : 						if (GetRoE(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide),ROE_AIR_ATTACK) == ROE_ALLOWED)

	push	8
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN49@RegisterKi

; 2728 : 							{
; 2729 : 							pilot_data->score += CalcScore (SCORE_KILL_ENEMY_NAVAL, bonus);		// Hit enemy

	mov	eax, DWORD PTR _bonus$22[ebp]
	push	eax
	push	12					; 0000000cH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2730 : 							pilot_data->an_kills++;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+70]
	add	dl, 1
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+70], dl

; 2731 : 							}
; 2732 : 						else

	jmp	SHORT $LN48@RegisterKi
$LN49@RegisterKi:

; 2733 : 							pilot_data->score -= CalcScore (SCORE_KILL_FRIENDLY_NAVAL, bonus);	// Hit friendly/neutral

	mov	ecx, DWORD PTR _bonus$22[ebp]
	push	ecx
	push	13					; 0000000dH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+78]
	sub	ecx, eax
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [edx+78], cx
$LN48@RegisterKi:

; 2734 : 						nokill = 0;

	mov	DWORD PTR _nokill$[ebp], 0

; 2735 : 						GetFormatString(FET_PILOT_DESTROYED_VEHICLE,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	4
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
	jmp	$LN46@RegisterKi
$LN51@RegisterKi:

; 2736 : 						}
; 2737 : 					else if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_CLASS] == CLASS_VEHICLE)

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+67]
	sub	edx, 100				; 00000064H
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	shl	eax, 0
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 7
	jne	$LN46@RegisterKi

; 2738 : 						{
; 2739 : 						// Ground Vehicle kill
; 2740 : 						if (GetRoE(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide),ROE_AIR_ATTACK) == ROE_ALLOWED)

	push	8
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	push	ecx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN45@RegisterKi

; 2741 : 							{
; 2742 : 							pilot_data->score += CalcScore (SCORE_KILL_ENEMY_GROUND, dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);		// Hit enemy

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+67]
	sub	eax, 100				; 00000064H
	push	eax
	push	14					; 0000000eH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2743 : 							pilot_data->ag_kills++;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+68]
	add	dl, 1
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+68], dl

; 2744 : 							}
; 2745 : 						else

	jmp	SHORT $LN44@RegisterKi
$LN45@RegisterKi:

; 2746 : 							pilot_data->score += CalcScore (SCORE_KILL_FRIENDLY_GROUND, dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);		// Hit friendly/neutral

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+67]
	sub	edx, 100				; 00000064H
	push	edx
	push	15					; 0000000fH
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN44@RegisterKi:

; 2747 : 						nokill = 0;

	mov	DWORD PTR _nokill$[ebp], 0

; 2748 : 						GetFormatString(FET_PILOT_DESTROYED_VEHICLE,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	4
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
$LN46@RegisterKi:

; 2749 : 						}
; 2750 : 					if (package_element && dtm->dataBlock.dCampID == package_element->target_camp_id)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN42@RegisterKi
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+64]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	edx, WORD PTR [eax+80]
	cmp	ecx, edx
	jne	SHORT $LN42@RegisterKi

; 2751 : 						{
; 2752 : 						pilot_data->score += CalcScore (SCORE_DIRECT_KILL_GROUND, 0);			// Hit actual target, so get a bonus

	push	0
	push	16					; 00000010H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2753 : 						if (pilot_data == player_pilot)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN42@RegisterKi

; 2754 : 							logbook_data.Flags |= DESTROYED_PRIMARY;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+256]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+256], cx
$LN42@RegisterKi:

; 2755 : 						}
; 2756 : 					if (target_data && target_data->pilot_slot > PILOTS_PER_FLIGHT)

	cmp	DWORD PTR _target_data$[ebp], 0
	je	$LN39@RegisterKi
	mov	eax, DWORD PTR _target_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	ecx, 4
	jle	$LN39@RegisterKi

; 2757 : 						{
; 2758 : 						// Player Kill
; 2759 : 						FalconSessionEntity	*dsession = gCommsMgr->FindCampaignPlayer(target_flight->flight_id,target_data->aircraft_slot);

	mov	edx, DWORD PTR _target_data$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	push	eax
	mov	ecx, DWORD PTR _target_flight$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _dsession$19[ebp], eax

; 2760 : 						FalconSessionEntity	*ssession = gCommsMgr->FindCampaignPlayer(flight_ptr->flight_id,pilot_data->aircraft_slot);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _ssession$18[ebp], eax

; 2761 : 						pilot_data->player_kills++;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+71]
	add	cl, 1
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+71], cl

; 2762 : 						if (pilot_data == player_pilot && GetCCRelations(dtm->dataBlock.fSide,dtm->dataBlock.dSide) == Allied)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	SHORT $LN40@RegisterKi
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	push	eax
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, BYTE PTR [ecx+83]
	push	edx
	call	?GetCCRelations@@YAHEE@Z		; GetCCRelations
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN40@RegisterKi

; 2763 : 							{
; 2764 : 							logbook_data.Flags |= FR_HUMAN_KILLED;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+256]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+256], cx
$LN40@RegisterKi:

; 2765 : 							}
; 2766 : 						if (ssession && dsession && ssession != dsession && GetCCRelations(dtm->dataBlock.fSide,dtm->dataBlock.dSide) != Allied)

	cmp	DWORD PTR _ssession$18[ebp], 0
	je	SHORT $LN39@RegisterKi
	cmp	DWORD PTR _dsession$19[ebp], 0
	je	SHORT $LN39@RegisterKi
	mov	eax, DWORD PTR _ssession$18[ebp]
	cmp	eax, DWORD PTR _dsession$19[ebp]
	je	SHORT $LN39@RegisterKi
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, BYTE PTR [ecx+69]
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetCCRelations@@YAHEE@Z		; GetCCRelations
	add	esp, 8
	cmp	eax, 1
	je	SHORT $LN39@RegisterKi

; 2767 : 							ssession->SetAceFactorKill(dsession->GetInitAceFactor());

	mov	ecx, DWORD PTR _dsession$19[ebp]
	call	?GetInitAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetInitAceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _ssession$18[ebp]
	call	?SetAceFactorKill@FalconSessionEntity@@QAEXM@Z ; FalconSessionEntity::SetAceFactorKill
$LN39@RegisterKi:

; 2768 : 						}
; 2769 : 					if (pilot_data == player_pilot && pilot_data != target_data)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN37@RegisterKi
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	cmp	ecx, DWORD PTR _target_data$[ebp]
	je	SHORT $LN37@RegisterKi

; 2770 : 						{
; 2771 : 						if (GetTTRelations(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide)) == Allied)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	push	eax
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	ecx, al
	push	ecx
	call	?GetTTRelations@@YAHEE@Z		; GetTTRelations
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN37@RegisterKi

; 2772 : 							{
; 2773 : 							logbook_data.FriendlyFireKills++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+312]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+312], eax
$LN37@RegisterKi:

; 2774 : 							}
; 2775 : 						}
; 2776 : 					if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN36@RegisterKi

; 2777 : 						ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.dSide, F4LANG_FEMININE),tmp2,29);

	push	29					; 0000001dH
	lea	edx, DWORD PTR _tmp2$[ebp]
	push	edx
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2778 : //						ReadIndexedString(3821+20*dtm->dataBlock.dSide,tmp2,29);
; 2779 : 					else

	jmp	SHORT $LN35@RegisterKi
$LN36@RegisterKi:

; 2780 : 						ReadIndexedString(ConvertTeamToStringIndex(dtm->dataBlock.dSide),tmp2,29);

	push	29					; 0000001dH
	lea	edx, DWORD PTR _tmp2$[ebp]
	push	edx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH
$LN35@RegisterKi:

; 2781 : //						ReadIndexedString(3820+20*dtm->dataBlock.dSide,tmp2,29);
; 2782 : 					if (target_data)

	cmp	DWORD PTR _target_data$[ebp], 0
	je	SHORT $LN34@RegisterKi

; 2783 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,target_data->pilot_callsign,tmp2,tmp,pilot_data->pilot_callsign,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pilot_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp2$[ebp]
	push	edx
	mov	eax, DWORD PTR _target_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 32					; 00000020H

; 2784 : 					else

	jmp	SHORT $LN33@RegisterKi
$LN34@RegisterKi:

; 2785 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,tmp,tmp2,tmp,pilot_data->pilot_callsign,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	lea	eax, DWORD PTR _tmp2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 32					; 00000020H
$LN33@RegisterKi:

; 2786 : 					theEvent->eventTime = TheCampaign.CurrentTime;

	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [ecx+16], edx

; 2787 : 
; 2788 : 					// If we've already handeled this event in a different format, drop it
; 2789 : 					// (i.e. We collided with someone in this flight)
; 2790 : 					if (nokill || (posted && target_flight == flight_ptr))

	cmp	DWORD PTR _nokill$[ebp], 0
	jne	SHORT $LN31@RegisterKi
	cmp	DWORD PTR _posted$[ebp], 0
	je	SHORT $LN32@RegisterKi
	mov	eax, DWORD PTR _target_flight$[ebp]
	cmp	eax, DWORD PTR _flight_ptr$[ebp]
	jne	SHORT $LN32@RegisterKi
$LN31@RegisterKi:

; 2791 : 						delete theEvent;

	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR $T11[ebp], edx
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN156@RegisterKi
	push	1
	mov	ecx, DWORD PTR $T11[ebp]
	call	??_GEventElement@@QAEPAXI@Z
	mov	DWORD PTR tv1186[ebp], eax
	jmp	SHORT $LN157@RegisterKi
$LN156@RegisterKi:
	mov	DWORD PTR tv1186[ebp], 0
$LN157@RegisterKi:

; 2792 : 					else

	jmp	SHORT $LN30@RegisterKi
$LN32@RegisterKi:

; 2793 : 						AddEventToList(theEvent,flight_ptr,NULL,0);

	push	0
	push	0
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theEvent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList
$LN30@RegisterKi:

; 2794 : 					}
; 2795 : 
; 2796 : 				// Adjust the fire event to reflect a kill
; 2797 : 				pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN29@RegisterKi:

; 2798 : 				while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN28@RegisterKi

; 2799 : 					{
; 2800 : 					for (wn=0; wn<pilot_data->weapon_types; wn++)

	mov	DWORD PTR _wn$[ebp], 0
	jmp	SHORT $LN27@RegisterKi
$LN26@RegisterKi:
	mov	ecx, DWORD PTR _wn$[ebp]
	add	ecx, 1
	mov	DWORD PTR _wn$[ebp], ecx
$LN27@RegisterKi:
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+81]
	cmp	DWORD PTR _wn$[ebp], eax
	jge	$LN25@RegisterKi

; 2801 : 						{
; 2802 : 						windex = WeaponDataTable[pilot_data->weapon_data[wn].weapon_id].Index + VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+ecx+104]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movsx	edx, WORD PTR [ecx+eax]
	add	edx, 100				; 00000064H
	mov	DWORD PTR _windex$[ebp], edx

; 2803 : 						if (dtm->dataBlock.fPilotID == pilot_data->pilot_slot && dtm->dataBlock.fWeaponID == windex)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	ecx, eax
	jne	$LN10@RegisterKi
	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+84]
	cmp	edx, DWORD PTR _windex$[ebp]
	jne	$LN10@RegisterKi

; 2804 : 							{
; 2805 : 							EventElement	*tmpevent,*baseevent=NULL;

	mov	DWORD PTR _baseevent$20[ebp], 0

; 2806 : 							int				foundEvent=FALSE;

	mov	DWORD PTR _foundEvent$23[ebp], 0

; 2807 : 							ParseTime(TheCampaign.CurrentTime,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2808 : 							// Check if this belonged to our target, and flag a hit if necessary
; 2809 : 							if (dtm->dataBlock.dCampID == flight_ptr->target_camp_id)

	mov	edx, DWORD PTR _dtm$[ebp]
	movzx	eax, WORD PTR [edx+64]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+80]
	cmp	eax, edx
	jne	SHORT $LN23@RegisterKi

; 2810 : 								pilot_data->score += CalcScore (SCORE_HIT_OUR_TARGET, 0);

	push	0
	push	17					; 00000011H
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN23@RegisterKi:

; 2811 : 							// We're interested, need to show this as a kill
; 2812 : 							// Now we want to find the weapon fire event and replace our 'damage' message with a 'destroyed'
; 2813 : 							tmpevent = pilot_data->weapon_data[wn].root_event;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+ecx+116]
	mov	DWORD PTR _tmpevent$26[ebp], eax
$LN22@RegisterKi:

; 2814 : 							while (tmpevent && !foundEvent)

	cmp	DWORD PTR _tmpevent$26[ebp], 0
	je	$LN21@RegisterKi
	cmp	DWORD PTR _foundEvent$23[ebp], 0
	jne	$LN21@RegisterKi

; 2815 : 								{
; 2816 : 								if (tmpevent->vuIdData1 == dtm->dataBlock.fWeaponUID)

	mov	ecx, DWORD PTR _dtm$[ebp]
	add	ecx, 86					; 00000056H
	push	ecx
	mov	ecx, DWORD PTR _tmpevent$26[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN12@RegisterKi

; 2817 : 									{
; 2818 : 									_TCHAR	*sptr;
; 2819 : 									// Several options can have happened here:
; 2820 : 									// 1) We haven't recorded the weapon hitting anything yet - 
; 2821 : 									//    so we want to replace the 'miss' message with a 'hit' message
; 2822 : 									// 2) The weapon hit something and damaged it, and now we're getting
; 2823 : 									//    a death message for the same object - so we want to replace
; 2824 : 									//    the 'hit - damaged' with 'hit - destroyed'.
; 2825 : 									// 3) The weapon hit something else and either damaged or destroyed
; 2826 : 									//    it, and now something else has been hit - so we want to make
; 2827 : 									//    a new message with the result here.
; 2828 : 									// 
; 2829 : 									// Check for a miss event first (this is the easy case)
; 2830 : 									ReadIndexedString(1799,tmp,79);

	push	79					; 0000004fH
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	push	1799					; 00000707H
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2831 : 									sptr = _tcsstr(tmpevent->eventString,tmp);

	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?_tcsstr@@YAPADPADPBD@Z			; _tcsstr
	add	esp, 8
	mov	DWORD PTR _sptr$25[ebp], eax

; 2832 : 									if (sptr)

	cmp	DWORD PTR _sptr$25[ebp], 0
	je	$LN19@RegisterKi

; 2833 : 										{
; 2834 : 										// The first time we hit something with a weapon, we need to turn
; 2835 : 										// a miss into a hit.
; 2836 : 										if (GetRoE(GetTeam(dtm->dataBlock.fSide),GetTeam(dtm->dataBlock.dSide),ROE_AIR_FIRE) == ROE_ALLOWED)

	push	5
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	edx, al
	push	edx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN18@RegisterKi

; 2837 : 											pilot_data->score += CalcScore (SCORE_HIT_ENEMY, 0);		// Hit enemy

	push	0
	push	6
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2838 : 										else

	jmp	SHORT $LN17@RegisterKi
$LN18@RegisterKi:

; 2839 : 											pilot_data->score += CalcScore (SCORE_HIT_FRIENDLY, 0);		// Hit friendly/neutral

	push	0
	push	7
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN17@RegisterKi:

; 2840 : 										pilot_data->weapon_data[wn].hit++;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	al, BYTE PTR [edx+ecx+110]
	add	al, 1
	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+ecx+110], al

; 2841 : 										pilot_data->weapon_data[wn].missed--;

	mov	eax, DWORD PTR _wn$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+eax+109]
	sub	dl, 1
	mov	eax, DWORD PTR _wn$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [ecx+eax+109], dl

; 2842 : 										foundEvent = TRUE;

	mov	DWORD PTR _foundEvent$23[ebp], 1

; 2843 : 										*sptr = 0;

	mov	edx, DWORD PTR _sptr$25[ebp]
	mov	BYTE PTR [edx], 0

; 2844 : 										}
; 2845 : 									else

	jmp	$LN13@RegisterKi
$LN19@RegisterKi:

; 2846 : 										{
; 2847 : 										// Check for a hit event next
; 2848 : 										ReadIndexedString(1798,tmp,79);

	push	79					; 0000004fH
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	push	1798					; 00000706H
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2849 : 										sptr = _tcsstr(tmpevent->eventString,tmp);

	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?_tcsstr@@YAPADPADPBD@Z			; _tcsstr
	add	esp, 8
	mov	DWORD PTR _sptr$25[ebp], eax

; 2850 : 										// We'd better have one or something is very wrong
; 2851 : 										ShiAssert(sptr);
; 2852 : 										// Now determine if it's the same target or not
; 2853 : 										if (sptr)

	cmp	DWORD PTR _sptr$25[ebp], 0
	je	SHORT $LN13@RegisterKi

; 2854 : 											{
; 2855 : 											if (tmpevent->vuIdData2 == dtm->dataBlock.dEntityID)

	mov	eax, DWORD PTR _dtm$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _tmpevent$26[ebp]
	add	ecx, 8
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@RegisterKi

; 2856 : 												{
; 2857 : 												foundEvent = TRUE;

	mov	DWORD PTR _foundEvent$23[ebp], 1

; 2858 : 												*sptr = 0;

	mov	edx, DWORD PTR _sptr$25[ebp]
	mov	BYTE PTR [edx], 0
$LN14@RegisterKi:

; 2859 : 												}
; 2860 : 											// In IA or dogfight, take it regardless of the target -
; 2861 : 											// we're just going to list the last thing killed in this
; 2862 : 											// section (the rest of the kills are listed in a different
; 2863 : 											// format
; 2864 : 											if (TheCampaign.Flags & CAMP_LIGHT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 128				; 00000080H
	je	SHORT $LN13@RegisterKi

; 2865 : 												{
; 2866 : 												foundEvent = TRUE;

	mov	DWORD PTR _foundEvent$23[ebp], 1

; 2867 : 												*sptr = 0;

	mov	ecx, DWORD PTR _sptr$25[ebp]
	mov	BYTE PTR [ecx], 0
$LN13@RegisterKi:

; 2868 : 												}
; 2869 : 											}
; 2870 : 										}
; 2871 : 									// If we haven't found the first event for this weapon yet, record
; 2872 : 									// it now.
; 2873 : 									if (!baseevent)

	cmp	DWORD PTR _baseevent$20[ebp], 0
	jne	SHORT $LN12@RegisterKi

; 2874 : 										baseevent = tmpevent;

	mov	edx, DWORD PTR _tmpevent$26[ebp]
	mov	DWORD PTR _baseevent$20[ebp], edx
$LN12@RegisterKi:

; 2875 : 									}
; 2876 : 								if (!foundEvent)

	cmp	DWORD PTR _foundEvent$23[ebp], 0
	jne	SHORT $LN11@RegisterKi

; 2877 : 									tmpevent = tmpevent->next;

	mov	eax, DWORD PTR _tmpevent$26[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	DWORD PTR _tmpevent$26[ebp], ecx
$LN11@RegisterKi:

; 2878 : 								}

	jmp	$LN22@RegisterKi
$LN21@RegisterKi:

; 2879 : 							// In IA or dogfight, don't list multiple kills or cannon kills - we have no
; 2880 : 							// fire event to match to, so it'd look lame. Besides, the kills are listed
; 2881 : 							// in another format anyway.
; 2882 : 							if (tmpevent || !(TheCampaign.Flags & CAMP_LIGHT))

	cmp	DWORD PTR _tmpevent$26[ebp], 0
	jne	SHORT $LN9@RegisterKi
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 128				; 00000080H
	jne	$LN10@RegisterKi
$LN9@RegisterKi:

; 2883 : 								{
; 2884 : 								// Make a new event if we need to
; 2885 : 								if (!tmpevent)

	cmp	DWORD PTR _tmpevent$26[ebp], 0
	jne	$LN8@RegisterKi

; 2886 : 									{
; 2887 : 									tmpevent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN158@RegisterKi
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv1346[ebp], eax
	jmp	SHORT $LN159@RegisterKi
$LN158@RegisterKi:
	mov	DWORD PTR tv1346[ebp], 0
$LN159@RegisterKi:
	mov	eax, DWORD PTR tv1346[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _tmpevent$26[ebp], ecx

; 2888 : 									tmpevent->vuIdData1 = dtm->dataBlock.fWeaponUID;

	mov	edx, DWORD PTR _dtm$[ebp]
	mov	eax, DWORD PTR [edx+86]
	mov	ecx, DWORD PTR [edx+90]
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx

; 2889 : 									tmpevent->eventTime = TheCampaign.CurrentTime;

	mov	eax, DWORD PTR _tmpevent$26[ebp]
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [eax+16], ecx

; 2890 : 									ReadIndexedString(1726,tmpevent->eventString,MAX_EVENT_STRING_LEN);

	push	128					; 00000080H
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	1726					; 000006beH
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2891 : 									InsertEventToList(tmpevent, baseevent);

	mov	eax, DWORD PTR _baseevent$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpevent$26[ebp]
	push	ecx
	call	?InsertEventToList@@YAXPAVEventElement@@0@Z ; InsertEventToList
	add	esp, 8
$LN8@RegisterKi:

; 2892 : 									}
; 2893 : 								tmpevent->vuIdData2 = dtm->dataBlock.dEntityID;

	mov	edx, DWORD PTR _dtm$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR [edx+60]
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx

; 2894 : 								if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_VEHICLE)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 5
	jne	SHORT $LN7@RegisterKi

; 2895 : 									{
; 2896 : 									vc = GetVehicleClassData (dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+67]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 2897 : 									if (vc)

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN6@RegisterKi

; 2898 : 										_stprintf(tmp,vc->Name);

	mov	eax, DWORD PTR _vc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 2899 : 									else

	jmp	SHORT $LN5@RegisterKi
$LN6@RegisterKi:

; 2900 : 										_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN5@RegisterKi:
	jmp	SHORT $LN1@RegisterKi
$LN7@RegisterKi:

; 2901 : 									}
; 2902 : 								else if (Falcon4ClassTable[dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	eax, DWORD PTR _dtm$[ebp]
	movzx	ecx, WORD PTR [eax+67]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 1
	jne	SHORT $LN1@RegisterKi

; 2903 : 									{
; 2904 : 									fc = GetFeatureClassData (dtm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dtm$[ebp]
	movzx	edx, WORD PTR [ecx+67]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2905 : 									if (fc) // JB 010113									

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN2@RegisterKi

; 2906 : 										_stprintf(tmp,fc->Name);

	mov	eax, DWORD PTR _fc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 2907 : 									else

	jmp	SHORT $LN1@RegisterKi
$LN2@RegisterKi:

; 2908 : 										_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN1@RegisterKi:

; 2909 : 									}
; 2910 : #ifdef DEBUG
; 2911 : 								else
; 2912 : 									ShiAssert(0);
; 2913 : #endif
; 2914 : 								// Add on the destroyed message
; 2915 : 								GetFormatString(FET_DESTROYED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	19					; 00000013H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2916 : 								ConstructOrderedSentence(128, time_str,format,tmpevent->eventString,tmp);

	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$26[ebp]
	add	edx, 20					; 00000014H
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2917 : 								_sntprintf(tmpevent->eventString,MAX_EVENT_STRING_LEN,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	push	128					; 00000080H
	mov	eax, DWORD PTR _tmpevent$26[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	__snprintf
	add	esp, 12					; 0000000cH
$LN10@RegisterKi:

; 2918 : 								}
; 2919 : 							}
; 2920 : 						}

	jmp	$LN26@RegisterKi
$LN25@RegisterKi:

; 2921 : 					pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 2922 : 					}

	jmp	$LN29@RegisterKi
$LN28@RegisterKi:

; 2923 : 				}
; 2924 : 			}
; 2925 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 2926 : 		}

	jmp	$LN139@RegisterKi
$LN138@RegisterKi:

; 2927 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN142@RegisterKi:

; 2928 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$0:
	mov	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$1:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z$2:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterKill@MissionEvaluationClass@@QAEXPAVFalconDeathMessage@@HH@Z ENDP ; MissionEvaluationClass::RegisterKill
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -300						; size = 4
_windex$ = -296						; size = 4
_this$ = -292						; size = 4
_vc$ = -288						; size = 4
tv261 = -284						; size = 4
$T3 = -280						; size = 4
_baseevent$ = -276					; size = 4
_foundEvent$4 = -272					; size = 4
_sptr$5 = -268						; size = 4
_fc$ = -264						; size = 4
_flight_ptr$ = -260					; size = 4
_wn$ = -256						; size = 4
_tmpevent$ = -252					; size = 4
_pilot_data$ = -248					; size = 4
_time_str$ = -244					; size = 128
_format$ = -116						; size = 80
_tmp$ = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dmm$ = 8						; size = 4
?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z PROC ; MissionEvaluationClass::RegisterHit
; _this$ = ecx

; 2240 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2241 : 	_TCHAR					time_str[128],format[80],tmp[20];
; 2242 : 	PilotDataClass			*pilot_data;
; 2243 : 	int						wn,windex;
; 2244 : 	VehicleClassDataType	*vc;
; 2245 : 	FeatureClassDataType	*fc;
; 2246 : 	FlightDataClass			*flight_ptr;
; 2247 : 	EventElement			*tmpevent,*baseevent=NULL;

	mov	DWORD PTR _baseevent$[ebp], 0

; 2248 : 
; 2249 : // 2002-02-08 MN don't evaluate if FEAT_NO_HITEVAL (like trees...)
; 2250 : 	if (Falcon4ClassTable[dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+71]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 1
	jne	SHORT $LN37@RegisterHi

; 2251 : 	{
; 2252 : 		// get classtbl entry for feature
; 2253 : 		fc = GetFeatureClassData (dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, WORD PTR [ecx+71]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2254 : 		if (fc && (fc->Flags & FEAT_NO_HITEVAL))

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN37@RegisterHi
	mov	eax, DWORD PTR _fc$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 16					; 00000010H
	je	SHORT $LN37@RegisterHi

; 2255 : 			return;

	jmp	$LN38@RegisterHi
$LN37@RegisterHi:

; 2256 : 	}
; 2257 : 	
; 2258 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2259 : 
; 2260 : 	flight_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _flight_ptr$[ebp], eax
$LN35@RegisterHi:

; 2261 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN34@RegisterHi

; 2262 : 		{
; 2263 : 		// Did we cause this damage?
; 2264 : 		if (dmm->dataBlock.fCampID && dmm->dataBlock.fCampID == flight_ptr->camp_id)

	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, WORD PTR [ecx+82]
	test	edx, edx
	je	$LN33@RegisterHi
	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+82]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	cmp	ecx, eax
	jne	$LN33@RegisterHi

; 2265 : 			{
; 2266 : 			pilot_data = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_data$[ebp], edx
$LN32@RegisterHi:

; 2267 : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN31@RegisterHi

; 2268 : 				{
; 2269 : 				if (dmm->dataBlock.fPilotID == pilot_data->pilot_slot)

	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, BYTE PTR [eax+84]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	ecx, eax
	jne	$LN30@RegisterHi

; 2270 : 					{
; 2271 : 					for (wn=0; wn<pilot_data->weapon_types; wn++)

	mov	DWORD PTR _wn$[ebp], 0
	jmp	SHORT $LN29@RegisterHi
$LN28@RegisterHi:
	mov	ecx, DWORD PTR _wn$[ebp]
	add	ecx, 1
	mov	DWORD PTR _wn$[ebp], ecx
$LN29@RegisterHi:
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+81]
	cmp	DWORD PTR _wn$[ebp], eax
	jge	$LN30@RegisterHi

; 2272 : 						{
; 2273 : 						windex = WeaponDataTable[pilot_data->weapon_data[wn].weapon_id].Index + VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+ecx+104]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movsx	edx, WORD PTR [ecx+eax]
	add	edx, 100				; 00000064H
	mov	DWORD PTR _windex$[ebp], edx

; 2274 : 						// Check if fired by this flight
; 2275 : 						if (dmm->dataBlock.fWeaponID == windex)

	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+88]
	cmp	ecx, DWORD PTR _windex$[ebp]
	jne	$LN26@RegisterHi

; 2276 : 							{
; 2277 : 							int			foundEvent=FALSE;

	mov	DWORD PTR _foundEvent$4[ebp], 0

; 2278 : 							// We hit with one of these weapons, match to a weapon fire event
; 2279 : 							tmpevent = pilot_data->weapon_data[wn].root_event;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+edx+116]
	mov	DWORD PTR _tmpevent$[ebp], ecx
$LN25@RegisterHi:

; 2280 : 							while (tmpevent && !foundEvent)

	cmp	DWORD PTR _tmpevent$[ebp], 0
	je	$LN24@RegisterHi
	cmp	DWORD PTR _foundEvent$4[ebp], 0
	jne	$LN24@RegisterHi

; 2281 : 								{
; 2282 : 								if (tmpevent->vuIdData1 == dmm->dataBlock.fWeaponUID)

	mov	edx, DWORD PTR _dmm$[ebp]
	add	edx, 90					; 0000005aH
	push	edx
	mov	ecx, DWORD PTR _tmpevent$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN23@RegisterHi

; 2283 : 									{
; 2284 : 									_TCHAR	*sptr;
; 2285 : 									// Several options can have happened here:
; 2286 : 									// 1) We haven't recorded the weapon hitting anything yet - 
; 2287 : 									//    so we want to replace the 'miss' message with a 'hit' message
; 2288 : 									// 3) The weapon hit something else and either damaged or destroyed
; 2289 : 									//    it, and now another entity has been hit - so we want to make
; 2290 : 									//    a new message with the result here.
; 2291 : 									// 
; 2292 : 									// Check for a miss event first (this is the easy case)
; 2293 : 									ReadIndexedString(1799,tmp,79);

	push	79					; 0000004fH
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	push	1799					; 00000707H
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2294 : 									sptr = _tcsstr(tmpevent->eventString,tmp);

	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	mov	eax, DWORD PTR _tmpevent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?_tcsstr@@YAPADPADPBD@Z			; _tcsstr
	add	esp, 8
	mov	DWORD PTR _sptr$5[ebp], eax

; 2295 : 									if (sptr)

	cmp	DWORD PTR _sptr$5[ebp], 0
	je	$LN22@RegisterHi

; 2296 : 										{
; 2297 : 										// The first time we hit something with a weapon, we need to turn
; 2298 : 										// a miss into a hit.
; 2299 : 										if (GetRoE(GetTeam(dmm->dataBlock.fSide),GetTeam(dmm->dataBlock.dSide),ROE_AIR_FIRE) == ROE_ALLOWED)

	push	5
	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, BYTE PTR [ecx+73]
	push	edx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, BYTE PTR [ecx+87]
	push	edx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4
	movzx	eax, al
	push	eax
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN21@RegisterHi

; 2300 : 											pilot_data->score += CalcScore (SCORE_HIT_ENEMY, 0);		// Hit enemy

	push	0
	push	6
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 2301 : 										else

	jmp	SHORT $LN20@RegisterHi
$LN21@RegisterHi:

; 2302 : 											pilot_data->score += CalcScore (SCORE_HIT_FRIENDLY, 0);		// Hit friendly/neutral

	push	0
	push	7
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN20@RegisterHi:

; 2303 : 										pilot_data->weapon_data[wn].hit++;

	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	al, BYTE PTR [edx+ecx+110]
	add	al, 1
	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+ecx+110], al

; 2304 : 										pilot_data->weapon_data[wn].missed--;

	mov	eax, DWORD PTR _wn$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+eax+109]
	sub	dl, 1
	mov	eax, DWORD PTR _wn$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [ecx+eax+109], dl

; 2305 : 										foundEvent = TRUE;

	mov	DWORD PTR _foundEvent$4[ebp], 1

; 2306 : 										*sptr = 0;

	mov	edx, DWORD PTR _sptr$5[ebp]
	mov	BYTE PTR [edx], 0

; 2307 : 										}
; 2308 : 									else

	jmp	SHORT $LN19@RegisterHi
$LN22@RegisterHi:

; 2309 : 										{
; 2310 : 										// Check for a hit event next
; 2311 : 										ReadIndexedString(1798,tmp,79);

	push	79					; 0000004fH
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	push	1798					; 00000706H
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2312 : 										sptr = _tcsstr(tmpevent->eventString,tmp);

	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?_tcsstr@@YAPADPADPBD@Z			; _tcsstr
	add	esp, 8
	mov	DWORD PTR _sptr$5[ebp], eax

; 2313 : 										// We'd better have one or something is very wrong
; 2314 : 										ShiAssert(sptr);
; 2315 : 										// Now determine if it's the same target or not
; 2316 : 										if (sptr && tmpevent->vuIdData2 == dmm->dataBlock.dEntityID)

	cmp	DWORD PTR _sptr$5[ebp], 0
	je	SHORT $LN19@RegisterHi
	mov	eax, DWORD PTR _dmm$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _tmpevent$[ebp]
	add	ecx, 8
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@RegisterHi

; 2317 : 											{
; 2318 : 											foundEvent = TRUE;

	mov	DWORD PTR _foundEvent$4[ebp], 1

; 2319 : 											*sptr = 0;

	mov	edx, DWORD PTR _sptr$5[ebp]
	mov	BYTE PTR [edx], 0
$LN19@RegisterHi:

; 2320 : 											}
; 2321 : 										}
; 2322 : 									// If we haven't found the first event for this weapon yet, record
; 2323 : 									// it now.
; 2324 : 									if (!baseevent)

	cmp	DWORD PTR _baseevent$[ebp], 0
	jne	SHORT $LN23@RegisterHi

; 2325 : 										baseevent = tmpevent;

	mov	eax, DWORD PTR _tmpevent$[ebp]
	mov	DWORD PTR _baseevent$[ebp], eax
$LN23@RegisterHi:

; 2326 : 									}
; 2327 : 								if (!foundEvent)

	cmp	DWORD PTR _foundEvent$4[ebp], 0
	jne	SHORT $LN16@RegisterHi

; 2328 : 									tmpevent = tmpevent->next;

	mov	ecx, DWORD PTR _tmpevent$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	DWORD PTR _tmpevent$[ebp], edx
$LN16@RegisterHi:

; 2329 : 								}

	jmp	$LN25@RegisterHi
$LN24@RegisterHi:

; 2330 : 							// Make a new event if we need to
; 2331 : 							if (!tmpevent)

	cmp	DWORD PTR _tmpevent$[ebp], 0
	jne	$LN15@RegisterHi

; 2332 : 								{
; 2333 : 								// In IA or dogfight, don't list multiple hits
; 2334 : 								if (TheCampaign.Flags & CAMP_LIGHT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 128				; 00000080H
	je	SHORT $LN14@RegisterHi

; 2335 : 									{
; 2336 : 									CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2337 : 									return;

	jmp	$LN38@RegisterHi
$LN14@RegisterHi:

; 2338 : 									}
; 2339 : 								tmpevent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN40@RegisterHi
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv261[ebp], eax
	jmp	SHORT $LN41@RegisterHi
$LN40@RegisterHi:
	mov	DWORD PTR tv261[ebp], 0
$LN41@RegisterHi:
	mov	ecx, DWORD PTR tv261[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmpevent$[ebp], edx

; 2340 : 								tmpevent->vuIdData1 = dmm->dataBlock.fWeaponUID;

	mov	eax, DWORD PTR _dmm$[ebp]
	mov	ecx, DWORD PTR [eax+90]
	mov	edx, DWORD PTR [eax+94]
	mov	eax, DWORD PTR _tmpevent$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 2341 : 								tmpevent->eventTime = TheCampaign.CurrentTime;

	mov	ecx, DWORD PTR _tmpevent$[ebp]
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [ecx+16], edx

; 2342 : 								ReadIndexedString(1726,tmpevent->eventString,MAX_EVENT_STRING_LEN);

	push	128					; 00000080H
	mov	eax, DWORD PTR _tmpevent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	push	1726					; 000006beH
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2343 : 								InsertEventToList (tmpevent, baseevent);

	mov	ecx, DWORD PTR _baseevent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$[ebp]
	push	edx
	call	?InsertEventToList@@YAXPAVEventElement@@0@Z ; InsertEventToList
	add	esp, 8
$LN15@RegisterHi:

; 2344 : 								}
; 2345 : 							tmpevent->vuIdData2 = dmm->dataBlock.dEntityID;

	mov	eax, DWORD PTR _dmm$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR [eax+64]
	mov	eax, DWORD PTR _tmpevent$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx

; 2346 : 							ParseTime(TheCampaign.CurrentTime,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2347 : 							if (Falcon4ClassTable[dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_VEHICLE)

	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+71]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 5
	jne	SHORT $LN13@RegisterHi

; 2348 : 								{
; 2349 : 								vc = GetVehicleClassData (dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, WORD PTR [ecx+71]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 2350 : 								if (vc) // JB 010113

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN12@RegisterHi

; 2351 : 									_stprintf(tmp,vc->Name);

	mov	eax, DWORD PTR _vc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 2352 : 								else

	jmp	SHORT $LN11@RegisterHi
$LN12@RegisterHi:

; 2353 : 									_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN11@RegisterHi:
	jmp	SHORT $LN10@RegisterHi
$LN13@RegisterHi:

; 2354 : 								}
; 2355 : 							else if (Falcon4ClassTable[dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+71]
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 1
	jne	SHORT $LN10@RegisterHi

; 2356 : 								{
; 2357 : 								fc = GetFeatureClassData (dmm->dataBlock.dIndex-VU_LAST_ENTITY_TYPE);

	mov	ecx, DWORD PTR _dmm$[ebp]
	movzx	edx, WORD PTR [ecx+71]
	sub	edx, 100				; 00000064H
	push	edx
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	mov	DWORD PTR _fc$[ebp], eax

; 2358 : 								if (fc) // JB 010113

	cmp	DWORD PTR _fc$[ebp], 0
	je	SHORT $LN8@RegisterHi

; 2359 : 									_stprintf(tmp,fc->Name);

	mov	eax, DWORD PTR _fc$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 2360 : 								else

	jmp	SHORT $LN10@RegisterHi
$LN8@RegisterHi:

; 2361 : 									_stprintf(tmp,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _tmp$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN10@RegisterHi:

; 2362 : 								}
; 2363 : 							// Add on the damaged message
; 2364 : 							GetFormatString(FET_DAMAGED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	18					; 00000012H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2365 : 							ConstructOrderedSentence(128, time_str,format,tmpevent->eventString,tmp);

	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpevent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 20					; 00000014H

; 2366 : 							_sntprintf(tmpevent->eventString,MAX_EVENT_STRING_LEN,time_str);

	lea	edx, DWORD PTR _time_str$[ebp]
	push	edx
	push	128					; 00000080H
	mov	eax, DWORD PTR _tmpevent$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	__snprintf
	add	esp, 12					; 0000000cH

; 2367 : 							CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2368 : 							return;

	jmp	$LN38@RegisterHi
$LN26@RegisterHi:

; 2369 : 							}
; 2370 : 						}

	jmp	$LN28@RegisterHi
$LN30@RegisterHi:

; 2371 : 					}
; 2372 : 				pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 2373 : 				}

	jmp	$LN32@RegisterHi
$LN31@RegisterHi:

; 2374 : 			}
; 2375 : 		// Did we take this damage?
; 2376 : 		else if (dmm->dataBlock.dCampID && dmm->dataBlock.dCampID == flight_ptr->camp_id)

	jmp	SHORT $LN6@RegisterHi
$LN33@RegisterHi:
	mov	eax, DWORD PTR _dmm$[ebp]
	movzx	ecx, WORD PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN6@RegisterHi
	mov	edx, DWORD PTR _dmm$[ebp]
	movzx	eax, WORD PTR [edx+68]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	jne	SHORT $LN6@RegisterHi

; 2377 : 			{
; 2378 : 			pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN4@RegisterHi:

; 2379 : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN6@RegisterHi

; 2380 : 				{
; 2381 : 				if (dmm->dataBlock.dPilotID == pilot_data->pilot_slot)

	mov	edx, DWORD PTR _dmm$[ebp]
	movzx	eax, BYTE PTR [edx+70]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	eax, edx
	jne	SHORT $LN2@RegisterHi

; 2382 : 					{
; 2383 : 					// Just mark us as damaged
; 2384 : 					if (pilot_data->aircraft_status != VIS_DESTROYED)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	cmp	ecx, 3
	je	SHORT $LN2@RegisterHi

; 2385 : 						pilot_data->aircraft_status = VIS_DAMAGED;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [edx+66], 2
$LN2@RegisterHi:

; 2386 : 					}				
; 2387 : 				pilot_data = pilot_data->next_pilot;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 2388 : 				}

	jmp	SHORT $LN4@RegisterHi
$LN6@RegisterHi:

; 2389 : 			}
; 2390 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 2391 : 		}

	jmp	$LN35@RegisterHi
$LN34@RegisterHi:

; 2392 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN38@RegisterHi:

; 2393 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterHit@MissionEvaluationClass@@QAEXPAVFalconDamageMessage@@@Z ENDP ; MissionEvaluationClass::RegisterHit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -184						; size = 8
$T3 = -176						; size = 4
_windex$ = -172						; size = 4
tv145 = -168						; size = 4
$T4 = -164						; size = 4
_this$ = -160						; size = 4
_theEvent$ = -156					; size = 4
_entity$5 = -152					; size = 4
_flight_ptr$ = -148					; size = 4
_wn$ = -144						; size = 4
_pilot_data$ = -140					; size = 4
_format$ = -136						; size = 80
_time_str$ = -56					; size = 20
_target_name$ = -36					; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wfm$ = 8						; size = 4
?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z PROC ; MissionEvaluationClass::RegisterShot
; _this$ = ecx

; 2141 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2142 : 	_TCHAR				time_str[20],format[80],target_name[20] = {0};

	mov	BYTE PTR _target_name$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _target_name$[ebp+1], eax
	mov	DWORD PTR _target_name$[ebp+5], eax
	mov	DWORD PTR _target_name$[ebp+9], eax
	mov	DWORD PTR _target_name$[ebp+13], eax
	mov	WORD PTR _target_name$[ebp+17], ax
	mov	BYTE PTR _target_name$[ebp+19], al

; 2143 : 	PilotDataClass		*pilot_data;
; 2144 : 	EventElement		*theEvent;
; 2145 : 	int					wn,windex;
; 2146 : 	FlightDataClass		*flight_ptr;
; 2147 : 
; 2148 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2149 : 
; 2150 : 	// Check if someone in the package fired this.
; 2151 : 	flight_ptr = flight_data;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	mov	DWORD PTR _flight_ptr$[ebp], edx
$LN24@RegisterSh:

; 2152 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN23@RegisterSh

; 2153 : 		{
; 2154 : 		if (!wfm->dataBlock.fCampID || wfm->dataBlock.fCampID != flight_ptr->camp_id)

	mov	eax, DWORD PTR _wfm$[ebp]
	movzx	ecx, WORD PTR [eax+60]
	test	ecx, ecx
	je	SHORT $LN21@RegisterSh
	mov	edx, DWORD PTR _wfm$[ebp]
	movzx	eax, WORD PTR [edx+60]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	je	SHORT $LN22@RegisterSh
$LN21@RegisterSh:

; 2155 : 			{
; 2156 : 			flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 2157 : 			continue;

	jmp	SHORT $LN24@RegisterSh
$LN22@RegisterSh:

; 2158 : 			}
; 2159 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN20@RegisterSh:

; 2160 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN19@RegisterSh

; 2161 : 			{
; 2162 : 			if (wfm->dataBlock.fPilotID == pilot_data->pilot_slot)

	mov	ecx, DWORD PTR _wfm$[ebp]
	movzx	edx, BYTE PTR [ecx+62]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	edx, ecx
	jne	$LN18@RegisterSh

; 2163 : 				{
; 2164 : 
; 2165 : 				for (wn=0; wn<pilot_data->weapon_types; wn++)

	mov	DWORD PTR _wn$[ebp], 0
	jmp	SHORT $LN17@RegisterSh
$LN16@RegisterSh:
	mov	edx, DWORD PTR _wn$[ebp]
	add	edx, 1
	mov	DWORD PTR _wn$[ebp], edx
$LN17@RegisterSh:
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	cmp	DWORD PTR _wn$[ebp], ecx
	jge	$LN18@RegisterSh

; 2166 : 					{
; 2167 : 					windex = WeaponDataTable[pilot_data->weapon_data[wn].weapon_id].Index + VU_LAST_ENTITY_TYPE;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+edx+104]
	imul	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movsx	eax, WORD PTR [edx+ecx]
	add	eax, 100				; 00000064H
	mov	DWORD PTR _windex$[ebp], eax

; 2168 : 					if (wfm->dataBlock.fWeaponID == windex) // && wfm->dataBlock.fireOnOff == 1)

	mov	ecx, DWORD PTR _wfm$[ebp]
	movzx	edx, WORD PTR [ecx+66]
	cmp	edx, DWORD PTR _windex$[ebp]
	jne	$LN14@RegisterSh

; 2169 : 						{
; 2170 : 						// We're interested
; 2171 : 						theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN27@RegisterSh
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN28@RegisterSh
$LN27@RegisterSh:
	mov	DWORD PTR tv145[ebp], 0
$LN28@RegisterSh:
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _theEvent$[ebp], ecx

; 2172 : 						// Only subtract from our score for non guns and non-photos
; 2173 : 						if (!(WeaponDataTable[pilot_data->weapon_data[wn].weapon_id].Flags & WEAP_ONETENTH) && wfm->dataBlock.weaponType != FalconWeaponsFire::Recon)

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+edx+104]
	imul	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movzx	eax, WORD PTR [edx+ecx+10]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN13@RegisterSh
	mov	ecx, DWORD PTR _wfm$[ebp]
	cmp	DWORD PTR [ecx+48], 7
	je	SHORT $LN13@RegisterSh

; 2174 : 							pilot_data->score += CalcScore (SCORE_FIRE_WEAPON, windex - VU_LAST_ENTITY_TYPE);

	mov	edx, DWORD PTR _windex$[ebp]
	sub	edx, 100				; 00000064H
	push	edx
	push	0
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
	jmp	SHORT $LN12@RegisterSh
$LN13@RegisterSh:

; 2175 : 						else if (TheCampaign.Flags & CAMP_LIGHT)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 128				; 00000080H
	je	SHORT $LN12@RegisterSh

; 2176 : 							{
; 2177 : 							// Don't record gun shots in IA and dogfight
; 2178 : 							CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2179 : 							return;

	jmp	$LN25@RegisterSh
$LN12@RegisterSh:

; 2180 : 							}
; 2181 : 						// Chalk up a weapon fired mark (assume a miss):
; 2182 : 						pilot_data->weapon_data[wn].fired++;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+edx+108]
	add	cl, 1
	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+edx+108], cl

; 2183 : 						ParseTime(TheCampaign.CurrentTime,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2184 : #ifdef DEBUG
; 2185 : 						// Try and find a bug where weapon shots are being doubled
; 2186 : 						ShiAssert (wfm->dataBlock.fWeaponUID.num_ != 0);
; 2187 : 						EventElement *tmpevent = pilot_data->weapon_data[wn].root_event;
; 2188 : 						while (tmpevent)
; 2189 : 							{
; 2190 : 							ShiAssert (tmpevent->vuIdData1 != wfm->dataBlock.fWeaponUID);
; 2191 : 							tmpevent = tmpevent->next;
; 2192 : 							}
; 2193 : #endif
; 2194 : 						// In case of camera "shots", evaluate hit immediately
; 2195 : 						if (wfm->dataBlock.weaponType == FalconWeaponsFire::Recon)

	mov	eax, DWORD PTR _wfm$[ebp]
	cmp	DWORD PTR [eax+48], 7
	jne	$LN10@RegisterSh

; 2196 : 							{
; 2197 : 							FalconEntity	*entity = (FalconEntity*) vuDatabase->Find(wfm->dataBlock.targetId);

	mov	ecx, DWORD PTR _wfm$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR [ecx+76]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _entity$5[ebp], eax

; 2198 : 							if (entity && entity->IsSim())

	cmp	DWORD PTR _entity$5[ebp], 0
	je	$LN9@RegisterSh
	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?IsSim@FalconEntity@@QAEHXZ		; FalconEntity::IsSim
	test	eax, eax
	je	$LN9@RegisterSh

; 2199 : 								{
; 2200 : 								if (((SimBaseClass*)entity)->GetCampaignObject()->Id() == flight_ptr->target_id)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@RegisterSh

; 2201 : 									flight_ptr->status_flags |= MISEVAL_FLIGHT_TARGET_HIT;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	or	edx, 65536				; 00010000H
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], edx
$LN8@RegisterSh:

; 2202 : 								if (Falcon4ClassTable[entity->Type() - VU_LAST_ENTITY_TYPE].dataType == DTYPE_VEHICLE)

	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	ecx, ax
	sub	ecx, 100				; 00000064H
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	eax, BYTE PTR [edx+ecx+76]
	cmp	eax, 5
	jne	SHORT $LN7@RegisterSh

; 2203 : 									_stprintf(target_name,GetVehicleClassData(entity->Type() - VU_LAST_ENTITY_TYPE)->Name);

	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	ecx, ax
	sub	ecx, 100				; 00000064H
	push	ecx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	add	eax, 8
	push	eax
	lea	edx, DWORD PTR _target_name$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
	jmp	SHORT $LN6@RegisterSh
$LN7@RegisterSh:

; 2204 : 								else if (Falcon4ClassTable[entity->Type() - VU_LAST_ENTITY_TYPE].dataType == DTYPE_FEATURE)

	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	sub	eax, 100				; 00000064H
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	movzx	edx, BYTE PTR [ecx+eax+76]
	cmp	edx, 1
	jne	SHORT $LN6@RegisterSh

; 2205 : 									_stprintf(target_name,GetFeatureClassData(entity->Type() - VU_LAST_ENTITY_TYPE)->Name);

	mov	ecx, DWORD PTR _entity$5[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	sub	eax, 100				; 00000064H
	push	eax
	call	?GetFeatureClassData@@YAPAUFeatureClassDataType@@H@Z ; GetFeatureClassData
	add	esp, 4
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _target_name$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8
$LN6@RegisterSh:

; 2206 : 								pilot_data->weapon_data[wn].hit++;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+edx+110]
	add	cl, 1
	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+edx+110], cl

; 2207 : 								GetFormatString(FET_PHOTO_TAKEN_HIT,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	21					; 00000015H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2208 : 								}
; 2209 : 							else

	jmp	SHORT $LN4@RegisterSh
$LN9@RegisterSh:

; 2210 : 								{
; 2211 : 								pilot_data->weapon_data[wn].missed++;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+edx+109]
	add	cl, 1
	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+edx+109], cl

; 2212 : 								GetFormatString(FET_PHOTO_TAKEN_MISSED,format);

	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	20					; 00000014H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
$LN4@RegisterSh:

; 2213 : 								}
; 2214 : 							}
; 2215 : 						else

	jmp	SHORT $LN3@RegisterSh
$LN10@RegisterSh:

; 2216 : 							{
; 2217 : 							pilot_data->weapon_data[wn].missed++;

	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	cl, BYTE PTR [eax+edx+109]
	add	cl, 1
	mov	edx, DWORD PTR _wn$[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+edx+109], cl

; 2218 : 							if (Falcon4ClassTable[wfm->dataBlock.fWeaponID-VU_LAST_ENTITY_TYPE].vuClassData.classInfo_[VU_TYPE] == TYPE_GUN)

	mov	ecx, DWORD PTR _wfm$[ebp]
	movzx	edx, WORD PTR [ecx+66]
	sub	edx, 100				; 00000064H
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, 1
	shl	eax, 1
	movzx	ecx, BYTE PTR [edx+eax+8]
	cmp	ecx, 3
	jne	SHORT $LN2@RegisterSh

; 2219 : 								GetFormatString(FET_FIRED_MISSED,format);

	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	push	16					; 00000010H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8

; 2220 : 							else

	jmp	SHORT $LN3@RegisterSh
$LN2@RegisterSh:

; 2221 : 								GetFormatString(FET_RELEASED_MISSED,format);

	lea	eax, DWORD PTR _format$[ebp]
	push	eax
	push	17					; 00000011H
	call	?GetFormatString@@YAXHPAD@Z		; GetFormatString
	add	esp, 8
$LN3@RegisterSh:

; 2222 : 							}
; 2223 : 						ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,pilot_data->weapon_data[wn].weapon_name,time_str,pilot_data->pilot_callsign,target_name);

	lea	ecx, DWORD PTR _target_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wn$[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	lea	eax, DWORD PTR [edx+ecx+84]
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2224 : 						theEvent->vuIdData1 = wfm->dataBlock.fWeaponUID;

	mov	eax, DWORD PTR _wfm$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [eax+72]
	mov	eax, DWORD PTR _theEvent$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 2225 : 						theEvent->eventTime = TheCampaign.CurrentTime;

	mov	ecx, DWORD PTR _theEvent$[ebp]
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR [ecx+16], edx

; 2226 : 						AddEventToList(theEvent,flight_ptr,pilot_data,wn);

	mov	eax, DWORD PTR _wn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 2227 : 						CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2228 : 						return;

	jmp	SHORT $LN25@RegisterSh
$LN14@RegisterSh:

; 2229 : 						}
; 2230 : 					}

	jmp	$LN16@RegisterSh
$LN18@RegisterSh:

; 2231 : 				}
; 2232 : 			pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 2233 : 			}

	jmp	$LN20@RegisterSh
$LN19@RegisterSh:

; 2234 : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 2235 : 		}

	jmp	$LN24@RegisterSh
$LN23@RegisterSh:

; 2236 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN25@RegisterSh:

; 2237 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterShot@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@@Z ENDP ; MissionEvaluationClass::RegisterShot
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -168						; size = 4
_weaponindx$ = -164					; size = 4
tv142 = -160						; size = 4
$T3 = -156						; size = 4
_theEvent$ = -152					; size = 4
_shooter_data$ = -148					; size = 4
_shooter_flight$ = -144					; size = 4
_this$ = -140						; size = 4
_loop$ = -136						; size = 4
_target_flight$ = -132					; size = 4
_target_data$ = -128					; size = 4
_format$ = -124						; size = 80
_time_str$ = -44					; size = 20
_pnum$ = -24						; size = 5
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wfm$ = 8						; size = 4
_CampID$ = 12						; size = 2
_fPilotID$ = 16						; size = 1
?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z PROC ; MissionEvaluationClass::RegisterShotAtPlayer
; _this$ = ecx

; 2068 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2069 : 	EventElement			*theEvent;
; 2070 : 	_TCHAR					time_str[20],format[80],pnum[5];
; 2071 : 
; 2072 : // 2002-04-07 MN don't record gun shots at us or when someone takes a picture from us ;-)....
; 2073 : 	if (g_bNoAAAEventRecords && (wfm->dataBlock.weaponType == FalconWeaponsFire::GUN || wfm->dataBlock.weaponType == FalconWeaponsFire::Recon))

	movzx	eax, BYTE PTR ?g_bNoAAAEventRecords@@3_NA ; g_bNoAAAEventRecords
	test	eax, eax
	je	SHORT $LN16@RegisterSh
	mov	ecx, DWORD PTR _wfm$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN15@RegisterSh
	mov	edx, DWORD PTR _wfm$[ebp]
	cmp	DWORD PTR [edx+48], 7
	jne	SHORT $LN16@RegisterSh
$LN15@RegisterSh:

; 2074 : 		return;

	jmp	$LN17@RegisterSh
$LN16@RegisterSh:

; 2075 : 
; 2076 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2077 : 
; 2078 : 	// Check if the target is also someone we're tracking messages for
; 2079 : 	PilotDataClass	*target_data = NULL;

	mov	DWORD PTR _target_data$[ebp], 0

; 2080 : 	FlightDataClass	*target_flight = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _target_flight$[ebp], ecx

; 2081 : 	PilotDataClass	*shooter_data = NULL;

	mov	DWORD PTR _shooter_data$[ebp], 0

; 2082 : 	FlightDataClass	*shooter_flight = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _shooter_flight$[ebp], eax
$LN14@RegisterSh:

; 2083 : 
; 2084 : //find the target
; 2085 : 	while (target_flight && !target_data)

	cmp	DWORD PTR _target_flight$[ebp], 0
	je	SHORT $LN13@RegisterSh
	cmp	DWORD PTR _target_data$[ebp], 0
	jne	SHORT $LN13@RegisterSh

; 2086 : 		{
; 2087 : 		if (target_flight->camp_id == CampID)

	mov	ecx, DWORD PTR _target_flight$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	movzx	eax, WORD PTR _CampID$[ebp]
	cmp	edx, eax
	jne	SHORT $LN12@RegisterSh

; 2088 : 			{
; 2089 : 			target_data = FindPilotData(target_flight,fPilotID);

	movzx	ecx, BYTE PTR _fPilotID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target_flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _target_data$[ebp], eax

; 2090 : 			break;

	jmp	SHORT $LN13@RegisterSh
$LN12@RegisterSh:

; 2091 : 			}
; 2092 : 		target_flight = target_flight->next_flight;

	mov	eax, DWORD PTR _target_flight$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _target_flight$[ebp], ecx

; 2093 : 		}

	jmp	SHORT $LN14@RegisterSh
$LN13@RegisterSh:

; 2094 : 
; 2095 : 	if (!target_data) 

	cmp	DWORD PTR _target_data$[ebp], 0
	jne	SHORT $LN10@RegisterSh

; 2096 : 	{
; 2097 : 			CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2098 : 			return;

	jmp	$LN17@RegisterSh
$LN10@RegisterSh:

; 2099 : 	}
; 2100 : 
; 2101 : // find the shooter
; 2102 : 	while (shooter_flight && !shooter_data)

	cmp	DWORD PTR _shooter_flight$[ebp], 0
	je	SHORT $LN9@RegisterSh
	cmp	DWORD PTR _shooter_data$[ebp], 0
	jne	SHORT $LN9@RegisterSh

; 2103 : 		{
; 2104 : 		if (shooter_flight->camp_id == wfm->dataBlock.fCampID)

	mov	edx, DWORD PTR _shooter_flight$[ebp]
	movsx	eax, WORD PTR [edx+36]
	mov	ecx, DWORD PTR _wfm$[ebp]
	movzx	edx, WORD PTR [ecx+60]
	cmp	eax, edx
	jne	SHORT $LN8@RegisterSh

; 2105 : 			{
; 2106 : 			shooter_data = FindPilotData(shooter_flight,wfm->dataBlock.fPilotID);

	mov	eax, DWORD PTR _wfm$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	push	ecx
	mov	edx, DWORD PTR _shooter_flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPilotData@MissionEvaluationClass@@QAEPAVPilotDataClass@@PAVFlightDataClass@@H@Z ; MissionEvaluationClass::FindPilotData
	mov	DWORD PTR _shooter_data$[ebp], eax

; 2107 : 			break;

	jmp	SHORT $LN9@RegisterSh
$LN8@RegisterSh:

; 2108 : 			}
; 2109 : 		shooter_flight = shooter_flight->next_flight;

	mov	eax, DWORD PTR _shooter_flight$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _shooter_flight$[ebp], ecx

; 2110 : 		}

	jmp	SHORT $LN10@RegisterSh
$LN9@RegisterSh:

; 2111 : 
; 2112 : 	// Record a event
; 2113 : 	theEvent = new EventElement;

	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN19@RegisterSh
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0EventElement@@QAE@XZ			; EventElement::EventElement
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN20@RegisterSh
$LN19@RegisterSh:
	mov	DWORD PTR tv142[ebp], 0
$LN20@RegisterSh:
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _theEvent$[ebp], eax

; 2114 : 	ParseTime(vuxGameTime,time_str);

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseTime@MissionEvaluationClass@@QAEXKPAD@Z ; MissionEvaluationClass::ParseTime

; 2115 : 	ReadIndexedString(target_data->aircraft_slot+1,pnum,4);

	push	4
	lea	eax, DWORD PTR _pnum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	add	edx, 1
	push	edx
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 2116 : 	//int weaponindx = WeaponDataTable[GetWeaponIdFromDescriptionIndex(wfm->dataBlock.fWeaponID-VU_LAST_ENTITY_TYPE)].Index;
; 2117 : 	int weaponindx;
; 2118 :     int loop = 0;

	mov	DWORD PTR _loop$[ebp], 0

; 2119 : 	for (loop =0; loop<NumWeaponTypes;loop++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN7@RegisterSh
$LN6@RegisterSh:
	mov	eax, DWORD PTR _loop$[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$[ebp], eax
$LN7@RegisterSh:
	movsx	ecx, WORD PTR ?NumWeaponTypes@@3FA	; NumWeaponTypes
	cmp	DWORD PTR _loop$[ebp], ecx
	jge	SHORT $LN5@RegisterSh

; 2120 : 	{
; 2121 : 		weaponindx = WeaponDataTable[loop].Index +VU_LAST_ENTITY_TYPE;

	mov	edx, DWORD PTR _loop$[ebp]
	imul	edx, 60					; 0000003cH
	mov	eax, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movsx	ecx, WORD PTR [eax+edx]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _weaponindx$[ebp], ecx

; 2122 : 		if (wfm->dataBlock.fWeaponID == weaponindx) break;

	mov	edx, DWORD PTR _wfm$[ebp]
	movzx	eax, WORD PTR [edx+66]
	cmp	eax, DWORD PTR _weaponindx$[ebp]
	jne	SHORT $LN4@RegisterSh
	jmp	SHORT $LN5@RegisterSh
$LN4@RegisterSh:

; 2123 : 	}

	jmp	SHORT $LN6@RegisterSh
$LN5@RegisterSh:

; 2124 : if (shooter_data)

	cmp	DWORD PTR _shooter_data$[ebp], 0
	je	SHORT $LN3@RegisterSh

; 2125 : 	sprintf(format,"%s %s launched %s at %s %s",shooter_flight->aircraft_name,shooter_data->pilot_callsign,WeaponDataTable[loop].Name,target_data->pilot_callsign ,time_str );

	lea	ecx, DWORD PTR _time_str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	mov	eax, DWORD PTR _loop$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	lea	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	eax, DWORD PTR _shooter_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	mov	ecx, DWORD PTR _shooter_flight$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	push	OFFSET ??_C@_0BL@PHCKMIHC@?$CFs?5?$CFs?5launched?5?$CFs?5at?5?$CFs?5?$CFs?$AA@
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_sprintf
	add	esp, 28					; 0000001cH

; 2126 : else

	jmp	SHORT $LN2@RegisterSh
$LN3@RegisterSh:

; 2127 : 	sprintf(format,"%s launched at %s %s",WeaponDataTable[loop].Name,target_data->pilot_callsign ,time_str );

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target_data$[ebp]
	add	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _loop$[ebp]
	imul	edx, 60					; 0000003cH
	mov	eax, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	lea	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	push	OFFSET ??_C@_0BF@IDBLIENJ@?$CFs?5launched?5at?5?$CFs?5?$CFs?$AA@
	lea	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H
$LN2@RegisterSh:

; 2128 : 
; 2129 : 	ConstructOrderedSentence(MAX_EVENT_STRING_LEN, theEvent->eventString,format,target_data->pilot_callsign,target_flight->name,pnum,time_str);

	lea	eax, DWORD PTR _time_str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pnum$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target_flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _target_data$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	lea	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _theEvent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	128					; 00000080H
	call	?ConstructOrderedSentence@@YAXFPAD0ZZ	; ConstructOrderedSentence
	add	esp, 28					; 0000001cH

; 2130 : 	theEvent->eventTime = vuxGameTime;

	mov	eax, DWORD PTR _theEvent$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+16], ecx

; 2131 : 	AddEventToList(theEvent,target_flight,0,0);

	push	0
	push	0
	mov	edx, DWORD PTR _target_flight$[ebp]
	push	edx
	mov	eax, DWORD PTR _theEvent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddEventToList@MissionEvaluationClass@@QAEXPAVEventElement@@PAVFlightDataClass@@PAVPilotDataClass@@H@Z ; MissionEvaluationClass::AddEventToList

; 2132 : 
; 2133 : 	ShiAssert(player_pilot);
; 2134 : 
; 2135 : 	if (target_data)

	cmp	DWORD PTR _target_data$[ebp], 0
	je	SHORT $LN1@RegisterSh

; 2136 : 		target_data->shot_at++;

	mov	ecx, DWORD PTR _target_data$[ebp]
	mov	dl, BYTE PTR [ecx+72]
	add	dl, 1
	mov	eax, DWORD PTR _target_data$[ebp]
	mov	BYTE PTR [eax+72], dl
$LN1@RegisterSh:

; 2137 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN17@RegisterSh:

; 2138 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterShotAtPlayer@MissionEvaluationClass@@QAEXPAVFalconWeaponsFire@@GE@Z ENDP ; MissionEvaluationClass::RegisterShotAtPlayer
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_best$ = -12						; size = 4
_flight_ptr$ = -8					; size = 4
_pilot_data$ = -4					; size = 4
?GetMaxScore@MissionEvaluationClass@@QAEHXZ PROC	; MissionEvaluationClass::GetMaxScore
; _this$ = ecx

; 2042 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2043 : 	FlightDataClass		*flight_ptr;
; 2044 : 	PilotDataClass		*pilot_data;
; 2045 : 	int					best=0;

	mov	DWORD PTR _best$[ebp], 0

; 2046 : 
; 2047 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2048 : 
; 2049 : 	// Check if someone in the package fired this.
; 2050 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN5@GetMaxScor:

; 2051 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@GetMaxScor

; 2052 : 		{
; 2053 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN3@GetMaxScor:

; 2054 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN2@GetMaxScor

; 2055 : 			{
; 2056 : 			if (pilot_data->score > best)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	cmp	edx, DWORD PTR _best$[ebp]
	jle	SHORT $LN1@GetMaxScor

; 2057 : 				best = pilot_data->score;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+78]
	mov	DWORD PTR _best$[ebp], ecx
$LN1@GetMaxScor:

; 2058 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 2059 : 			}

	jmp	SHORT $LN3@GetMaxScor
$LN2@GetMaxScor:

; 2060 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 2061 : 		}

	jmp	SHORT $LN5@GetMaxScor
$LN4@GetMaxScor:

; 2062 : 
; 2063 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2064 : 	return best;

	mov	eax, DWORD PTR _best$[ebp]

; 2065 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxScore@MissionEvaluationClass@@QAEHXZ ENDP	; MissionEvaluationClass::GetMaxScore
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_best$ = -12						; size = 4
_flight_ptr$ = -8					; size = 4
_pilot_data$ = -4					; size = 4
?GetMaxKills@MissionEvaluationClass@@QAEHXZ PROC	; MissionEvaluationClass::GetMaxKills
; _this$ = ecx

; 2016 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2017 : 	FlightDataClass		*flight_ptr;
; 2018 : 	PilotDataClass		*pilot_data;
; 2019 : 	int					best=0;

	mov	DWORD PTR _best$[ebp], 0

; 2020 : 
; 2021 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2022 : 
; 2023 : 	// Check if someone in the package fired this.
; 2024 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN5@GetMaxKill:

; 2025 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@GetMaxKill

; 2026 : 		{
; 2027 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN3@GetMaxKill:

; 2028 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN2@GetMaxKill

; 2029 : 			{
; 2030 : 			if (pilot_data->aa_kills > best)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+67]
	cmp	edx, DWORD PTR _best$[ebp]
	jle	SHORT $LN1@GetMaxKill

; 2031 : 				best = pilot_data->aa_kills;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+67]
	mov	DWORD PTR _best$[ebp], ecx
$LN1@GetMaxKill:

; 2032 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 2033 : 			}

	jmp	SHORT $LN3@GetMaxKill
$LN2@GetMaxKill:

; 2034 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 2035 : 		}

	jmp	SHORT $LN5@GetMaxKill
$LN4@GetMaxKill:

; 2036 : 
; 2037 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2038 : 	return best;

	mov	eax, DWORD PTR _best$[ebp]

; 2039 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxKills@MissionEvaluationClass@@QAEHXZ ENDP	; MissionEvaluationClass::GetMaxKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
_this$ = -12						; size = 4
_flight_ptr$ = -8					; size = 4
_pilot_data$ = -4					; size = 4
_player$ = 8						; size = 4
?GetKills@MissionEvaluationClass@@QAEHPAVFalconSessionEntity@@@Z PROC ; MissionEvaluationClass::GetKills
; _this$ = ecx

; 1989 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1990 : 	FlightDataClass		*flight_ptr;
; 1991 : 	PilotDataClass		*pilot_data;
; 1992 : 
; 1993 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1994 : 
; 1995 : 	// Check if someone in the package fired this.
; 1996 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN5@GetKills:

; 1997 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@GetKills

; 1998 : 		{
; 1999 : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN3@GetKills:

; 2000 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN2@GetKills

; 2001 : 			{
; 2002 : 			if (flight_ptr->flight_id == player->GetPlayerFlightID() && pilot_data->pilot_slot == player->GetPilotSlot())

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _player$[ebp]
	call	?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerFlightID
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 40					; 00000028H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetKills
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	esi, BYTE PTR [eax+61]
	mov	ecx, DWORD PTR _player$[ebp]
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN1@GetKills

; 2003 : 				{
; 2004 : 				CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2005 : 				return pilot_data->aa_kills;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+67]
	jmp	SHORT $LN6@GetKills
$LN1@GetKills:

; 2006 : 				}
; 2007 : 			pilot_data = pilot_data->next_pilot;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 2008 : 			}

	jmp	SHORT $LN3@GetKills
$LN2@GetKills:

; 2009 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 2010 : 		}

	jmp	SHORT $LN5@GetKills
$LN4@GetKills:

; 2011 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2012 : 	return 0;

	xor	eax, eax
$LN6@GetKills:

; 2013 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetKills@MissionEvaluationClass@@QAEHPAVFalconSessionEntity@@@Z ENDP ; MissionEvaluationClass::GetKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pilot_data$ = -12					; size = 4
_flight_ptr$ = -8					; size = 4
_t$ = -4						; size = 4
_score$ = 8						; size = 4
?GetTeamScore@MissionEvaluationClass@@QAEXPAF@Z PROC	; MissionEvaluationClass::GetTeamScore
; _this$ = ecx

; 1954 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1955 : 	FlightDataClass		*flight_ptr;
; 1956 : 	PilotDataClass		*pilot_data;
; 1957 : 	int					t;
; 1958 : 
; 1959 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1960 : 
; 1961 : 	// KCK: If we're in match play, we need to gather our 'score' from rounds won
; 1962 : 	if (SimDogfight.GetGameType() == dog_TeamMatchplay)

	mov	ecx, OFFSET ?SimDogfight@@3VDogfightClass@@A ; SimDogfight
	call	?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ; DogfightClass::GetGameType
	cmp	eax, 2
	jne	SHORT $LN12@GetTeamSco

; 1963 : 		{
; 1964 : 		for (t=0; t<MAX_DOGFIGHT_TEAMS; t++)

	mov	DWORD PTR _t$[ebp], 0
	jmp	SHORT $LN11@GetTeamSco
$LN10@GetTeamSco:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN11@GetTeamSco:
	cmp	DWORD PTR _t$[ebp], 5
	jge	SHORT $LN9@GetTeamSco

; 1965 : 			score[t] = rounds_won[t];

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _t$[ebp]
	movzx	dx, BYTE PTR [ecx+228]
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _score$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	jmp	SHORT $LN10@GetTeamSco
$LN9@GetTeamSco:

; 1966 : 		}
; 1967 : 	else

	jmp	$LN8@GetTeamSco
$LN12@GetTeamSco:

; 1968 : 		{
; 1969 : 		for (t=0; t<MAX_DOGFIGHT_TEAMS; t++)

	mov	DWORD PTR _t$[ebp], 0
	jmp	SHORT $LN7@GetTeamSco
$LN6@GetTeamSco:
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 1
	mov	DWORD PTR _t$[ebp], edx
$LN7@GetTeamSco:
	cmp	DWORD PTR _t$[ebp], 5
	jge	SHORT $LN5@GetTeamSco

; 1970 : 			score[t] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR _score$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	jmp	SHORT $LN6@GetTeamSco
$LN5@GetTeamSco:

; 1971 : 
; 1972 : 		// Check if someone in the package fired this.
; 1973 : 		flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN4@GetTeamSco:

; 1974 : 		while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN8@GetTeamSco

; 1975 : 			{
; 1976 : 			pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN2@GetTeamSco:

; 1977 : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN1@GetTeamSco

; 1978 : 				{
; 1979 : 				score[flight_ptr->flight_team] += pilot_data->score;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [eax+78]
	mov	eax, DWORD PTR _score$[ebp]
	movsx	edx, WORD PTR [eax+edx*2]
	add	edx, ecx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	mov	eax, DWORD PTR _score$[ebp]
	mov	WORD PTR [eax+ecx*2], dx

; 1980 : 				pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 1981 : 				}

	jmp	SHORT $LN2@GetTeamSco
$LN1@GetTeamSco:

; 1982 : 			flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 1983 : 			}

	jmp	SHORT $LN4@GetTeamSco
$LN8@GetTeamSco:

; 1984 : 		}
; 1985 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1986 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTeamScore@MissionEvaluationClass@@QAEXPAF@Z ENDP	; MissionEvaluationClass::GetTeamScore
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_t$ = -12						; size = 4
_pilot_data$ = -8					; size = 4
_flight_ptr$ = -4					; size = 4
_deaths$ = 8						; size = 4
?GetTeamDeaths@MissionEvaluationClass@@QAEXPAF@Z PROC	; MissionEvaluationClass::GetTeamDeaths
; _this$ = ecx

; 1893 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1894 : 	FlightDataClass		*flight_ptr;
; 1895 : 	PilotDataClass		*pilot_data;
; 1896 : 	int					t;
; 1897 : 
; 1898 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1899 : 
; 1900 : 	for (t=0; t<MAX_DOGFIGHT_TEAMS; t++)

	mov	DWORD PTR _t$[ebp], 0
	jmp	SHORT $LN7@GetTeamDea
$LN6@GetTeamDea:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN7@GetTeamDea:
	cmp	DWORD PTR _t$[ebp], 5
	jge	SHORT $LN5@GetTeamDea

; 1901 : 		deaths[t] = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _deaths$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	jmp	SHORT $LN6@GetTeamDea
$LN5@GetTeamDea:

; 1902 : 
; 1903 : 	// Check if someone in the package fired this.
; 1904 : 	flight_ptr = flight_data;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	mov	DWORD PTR _flight_ptr$[ebp], edx
$LN4@GetTeamDea:

; 1905 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN3@GetTeamDea

; 1906 : 		{
; 1907 : 		pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN2@GetTeamDea:

; 1908 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN1@GetTeamDea

; 1909 : 			{
; 1910 : 			deaths[flight_ptr->flight_team] += pilot_data->deaths[VS_HUMAN] + pilot_data->deaths[VS_AI];

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	mov	ecx, 2
	shl	ecx, 0
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	ecx, WORD PTR [edx+ecx+74]
	mov	edx, 2
	imul	edx, 0
	mov	esi, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [esi+edx+74]
	add	ecx, edx
	mov	edx, DWORD PTR _deaths$[ebp]
	movsx	eax, WORD PTR [edx+eax*2]
	add	eax, ecx
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	mov	ecx, DWORD PTR _deaths$[ebp]
	mov	WORD PTR [ecx+edx*2], ax

; 1911 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 1912 : 			}

	jmp	SHORT $LN2@GetTeamDea
$LN1@GetTeamDea:

; 1913 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 1914 : 		}

	jmp	SHORT $LN4@GetTeamDea
$LN3@GetTeamDea:

; 1915 : 
; 1916 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1917 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTeamDeaths@MissionEvaluationClass@@QAEXPAF@Z ENDP	; MissionEvaluationClass::GetTeamDeaths
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pilot_data$ = -12					; size = 4
_t$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
_kills$ = 8						; size = 4
?GetTeamKills@MissionEvaluationClass@@QAEXPAF@Z PROC	; MissionEvaluationClass::GetTeamKills
; _this$ = ecx

; 1828 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1829 : 	FlightDataClass		*flight_ptr;
; 1830 : 	PilotDataClass		*pilot_data;
; 1831 : 	int					t;
; 1832 : 
; 1833 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1834 : 
; 1835 : 	for (t=0; t<MAX_DOGFIGHT_TEAMS; t++)

	mov	DWORD PTR _t$[ebp], 0
	jmp	SHORT $LN7@GetTeamKil
$LN6@GetTeamKil:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN7@GetTeamKil:
	cmp	DWORD PTR _t$[ebp], 5
	jge	SHORT $LN5@GetTeamKil

; 1836 : 		kills[t] = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _kills$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	jmp	SHORT $LN6@GetTeamKil
$LN5@GetTeamKil:

; 1837 : 
; 1838 : 	// Check if someone in the package fired this.
; 1839 : 	flight_ptr = flight_data;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	mov	DWORD PTR _flight_ptr$[ebp], edx
$LN4@GetTeamKil:

; 1840 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN3@GetTeamKil

; 1841 : 		{
; 1842 : 		pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN2@GetTeamKil:

; 1843 : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN1@GetTeamKil

; 1844 : 			{
; 1845 : 			kills[flight_ptr->flight_team] += pilot_data->aa_kills;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+67]
	mov	ecx, DWORD PTR _kills$[ebp]
	movsx	eax, WORD PTR [ecx+eax*2]
	add	eax, edx
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	mov	ecx, DWORD PTR _kills$[ebp]
	mov	WORD PTR [ecx+edx*2], ax

; 1846 : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 1847 : 			}

	jmp	SHORT $LN2@GetTeamKil
$LN1@GetTeamKil:

; 1848 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 1849 : 		}

	jmp	SHORT $LN4@GetTeamKil
$LN3@GetTeamKil:

; 1850 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1851 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTeamKills@MissionEvaluationClass@@QAEXPAF@Z ENDP	; MissionEvaluationClass::GetTeamKills
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_myit$ = -136						; size = 60
_wid$ = -76						; size = 4
_wd$ = -72						; size = 4
_hc$ = -68						; size = 4
_alt$ = -64						; size = 4
_mt$ = -60						; size = 4
_y$ = -56						; size = 2
_x$ = -52						; size = 2
_j$ = -48						; size = 4
_k$ = -44						; size = 4
_this$ = -40						; size = 4
_i$ = -36						; size = 4
_d$ = -32						; size = 4
_e$ = -28						; size = 4
_tteam$ = -24						; size = 8
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_X$ = 8							; size = 2
_Y$ = 12						; size = 2
_Z$ = 16						; size = 4
_flags$ = 20						; size = 4
_dists$ = 24						; size = 4
?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z PROC ; MissionEvaluationClass::CollectThreats
; _this$ = ecx

; 1745 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1746 : 	int				d,hc,alt=0,i,j,k,wd,wid;

	mov	DWORD PTR _alt$[ebp], 0

; 1747 : 	MoveType		mt;
; 1748 : 	GridIndex		x,y;
; 1749 : 	Unit			e;
; 1750 : 	uchar			tteam[NUM_TEAMS];
; 1751 : #ifdef VU_GRID_TREE_Y_MAJOR
; 1752 : 	VuGridIterator	myit(RealUnitProxList,(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(MAX_AIR_SEARCH));

	movzx	eax, WORD PTR ?MAX_AIR_SEARCH@@3FA	; MAX_AIR_SEARCH
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	ecx, WORD PTR _Y$[ebp]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	movzx	edx, WORD PTR _X$[ebp]
	push	edx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?RealUnitProxList@@3PAVVuGridTree@@A ; RealUnitProxList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z ; VuGridIterator::VuGridIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1753 : #else
; 1754 : 	VuGridIterator	myit(RealUnitProxList,(BIG_SCALAR)GridToSim(Y),(BIG_SCALAR)GridToSim(X),(BIG_SCALAR)GridToSim(MAX_AIR_SEARCH));
; 1755 : #endif
; 1756 : 
; 1757 : 	alt = 3 * FloatToInt32(Z * 0.000303F);		// Convert feet to km, then adjust heavy (1 km alt = 3 km range)

	cvtsi2ss xmm0, DWORD PTR _Z$[ebp]
	mulss	xmm0, DWORD PTR __real@399edbf9
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	imul	eax, 3
	mov	DWORD PTR _alt$[ebp], eax

; 1758 : 	alt = alt*alt;						// pre square, to save calculations

	mov	ecx, DWORD PTR _alt$[ebp]
	imul	ecx, DWORD PTR _alt$[ebp]
	mov	DWORD PTR _alt$[ebp], ecx

; 1759 :  	if (Z > LOW_ALTITUDE_CUTOFF)

	movsx	edx, WORD PTR ?LOW_ALTITUDE_CUTOFF@@3FA	; LOW_ALTITUDE_CUTOFF
	cmp	DWORD PTR _Z$[ebp], edx
	jle	SHORT $LN27@CollectThr

; 1760 : 		mt = Air;

	mov	DWORD PTR _mt$[ebp], 5

; 1761 : 	else

	jmp	SHORT $LN26@CollectThr
$LN27@CollectThr:

; 1762 : 		mt = LowAir;

	mov	DWORD PTR _mt$[ebp], 4
$LN26@CollectThr:

; 1763 : 	
; 1764 : 	// Set up roe checks
; 1765 : 	for (d=0; d<NUM_TEAMS && TeamInfo[d]; d++)

	mov	DWORD PTR _d$[ebp], 0
	jmp	SHORT $LN25@CollectThr
$LN24@CollectThr:
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, 1
	mov	DWORD PTR _d$[ebp], eax
$LN25@CollectThr:
	cmp	DWORD PTR _d$[ebp], 8
	jge	SHORT $LN23@CollectThr
	mov	ecx, DWORD PTR _d$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN23@CollectThr

; 1766 : 		tteam[d] = GetRoE(d,team,ROE_AIR_ENGAGE);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+25]
	push	eax
	movzx	ecx, BYTE PTR _d$[ebp]
	push	ecx
	call	?GetRoE@@YAHEEH@Z			; GetRoE
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _d$[ebp]
	mov	BYTE PTR _tteam$[ebp+edx], al
	jmp	SHORT $LN24@CollectThr
$LN23@CollectThr:

; 1767 : 
; 1768 : 	// Tranverse our list
; 1769 : 	e = (Unit) myit.GetFirst();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetFirst
	mov	DWORD PTR _e$[ebp], eax
$LN22@CollectThr:

; 1770 : 	while (e && !threat_ids[MAX_COLLECTED_THREATS-1])

	cmp	DWORD PTR _e$[ebp], 0
	je	$LN21@CollectThr
	mov	eax, 2
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+eax+30]
	test	edx, edx
	jne	$LN21@CollectThr

; 1771 : 		{
; 1772 : 		if (tteam[e->GetTeam()])

	mov	eax, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	movzx	edx, BYTE PTR _tteam$[ebp+ecx]
	test	edx, edx
	je	$LN7@CollectThr

; 1773 : 			{
; 1774 : 			if (!(flags & FIND_NOMOVERS && e->Moving()) && 
; 1775 : 				!(flags & FIND_NOAIR && e->GetDomain() == DOMAIN_AIR) &&
; 1776 : 				(flags & FIND_FINDUNSPOTTED || e->GetSpotted(team)))

	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 16					; 00000010H
	je	SHORT $LN18@CollectThr
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Moving@UnitClass@@QBEHXZ		; UnitClass::Moving
	test	eax, eax
	jne	$LN7@CollectThr
$LN18@CollectThr:
	mov	ecx, DWORD PTR _flags$[ebp]
	and	ecx, 4
	je	SHORT $LN17@CollectThr
	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetDomain@CampBaseClass@@QBEEXZ	; CampBaseClass::GetDomain
	movzx	edx, al
	cmp	edx, 2
	je	$LN7@CollectThr
$LN17@CollectThr:
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN16@CollectThr
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+25]
	push	edx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetSpotted@CampBaseClass@@QAEHE@Z	; CampBaseClass::GetSpotted
	test	eax, eax
	je	$LN7@CollectThr
$LN16@CollectThr:

; 1777 : 				{
; 1778 : 				// Find the distance
; 1779 : 				e->GetLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _e$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1780 : 				d = FloatToInt32(Distance(X,Y,x,y));

	movzx	edx, WORD PTR _y$[ebp]
	push	edx
	movzx	eax, WORD PTR _x$[ebp]
	push	eax
	movzx	ecx, WORD PTR _Y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _X$[ebp]
	push	edx
	call	?Distance@@YAMFFFF@Z			; Distance
	add	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _d$[ebp], eax

; 1781 : 
; 1782 : 				// Find hitchance
; 1783 : 				hc = e->GetAproxHitChance(mt,d);

	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+396]
	call	edx
	mov	DWORD PTR _hc$[ebp], eax

; 1784 : 				if (hc && mt == Air)					// Do a reasonable altitude adjusted guess

	cmp	DWORD PTR _hc$[ebp], 0
	je	SHORT $LN15@CollectThr
	cmp	DWORD PTR _mt$[ebp], 5
	jne	SHORT $LN15@CollectThr

; 1785 : 					hc = e->GetAproxHitChance(mt,FloatToInt32((float)sqrt((float)(alt+d*d))));

	mov	eax, DWORD PTR _d$[ebp]
	imul	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _alt$[ebp]
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _mt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+396]
	call	edx
	mov	DWORD PTR _hc$[ebp], eax
$LN15@CollectThr:

; 1786 : 
; 1787 : 				if (hc > 0)

	cmp	DWORD PTR _hc$[ebp], 0
	jle	$LN7@CollectThr

; 1788 : 					{
; 1789 : 					j = -1;

	mov	DWORD PTR _j$[ebp], -1

; 1790 : 					// Check if we've already found it before
; 1791 : 					for (i=0; i<MAX_COLLECTED_THREATS; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@CollectThr
$LN12@CollectThr:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@CollectThr:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN11@CollectThr

; 1792 : 						{
; 1793 : 						if (threat_x[i] == x && threat_y[i] == y)

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+ecx*2+40]
	movsx	ecx, WORD PTR _x$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN10@CollectThr
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+edx*2+50]
	movsx	edx, WORD PTR _y$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN10@CollectThr

; 1794 : 							j=0;

	mov	DWORD PTR _j$[ebp], 0
$LN10@CollectThr:

; 1795 : 						}

	jmp	SHORT $LN12@CollectThr
$LN11@CollectThr:

; 1796 : 					// Now find which weapon it was which can hit us
; 1797 : 					for (i=0; i<VEHICLE_GROUPS_PER_UNIT && j<0; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@CollectThr
$LN8@CollectThr:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@CollectThr:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	$LN7@CollectThr
	cmp	DWORD PTR _j$[ebp], 0
	jge	$LN7@CollectThr

; 1798 : 						{
; 1799 : 						wid = e->GetBestVehicleWeapon(i, DefaultDamageMods, mt, d, &k);

	lea	ecx, DWORD PTR _k$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	eax, DWORD PTR _mt$[ebp]
	push	eax
	push	OFFSET ?DefaultDamageMods@@3PAEA	; DefaultDamageMods
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [eax+568]
	call	edx
	mov	DWORD PTR _wid$[ebp], eax

; 1800 : 						if (wid && GetWeaponHitChance (wid, mt) > MINIMUM_VIABLE_THREAT)

	cmp	DWORD PTR _wid$[ebp], 0
	je	$LN1@CollectThr
	mov	eax, DWORD PTR _mt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wid$[ebp]
	push	ecx
	call	?GetWeaponHitChance@@YAHHH@Z		; GetWeaponHitChance
	add	esp, 8
	cmp	eax, 9
	jle	$LN1@CollectThr

; 1801 : 							{
; 1802 : 							// find the best distance to replace
; 1803 : 							for (k=0,wd=0; k<MAX_COLLECTED_THREATS; k++)

	mov	DWORD PTR _k$[ebp], 0
	mov	DWORD PTR _wd$[ebp], 0
	jmp	SHORT $LN5@CollectThr
$LN4@CollectThr:
	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
$LN5@CollectThr:
	cmp	DWORD PTR _k$[ebp], 5
	jge	SHORT $LN3@CollectThr

; 1804 : 								{
; 1805 : 								if (dists[k] > wd && d < dists[k])

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _dists$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR _wd$[ebp]
	jle	SHORT $LN2@CollectThr
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _dists$[ebp]
	mov	edx, DWORD PTR _d$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jge	SHORT $LN2@CollectThr

; 1806 : 									{
; 1807 : 									j = k;

	mov	eax, DWORD PTR _k$[ebp]
	mov	DWORD PTR _j$[ebp], eax

; 1808 : 									wd = dists[k];

	mov	ecx, DWORD PTR _k$[ebp]
	mov	edx, DWORD PTR _dists$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _wd$[ebp], eax
$LN2@CollectThr:

; 1809 : 									}
; 1810 : 								}

	jmp	SHORT $LN4@CollectThr
$LN3@CollectThr:

; 1811 : 							if (j >= 0)

	cmp	DWORD PTR _j$[ebp], 0
	jl	SHORT $LN1@CollectThr

; 1812 : 								{
; 1813 : 								dists[j] = d;

	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _dists$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 1814 : 								threat_ids[j] = e->class_data->VehicleType[i];

	mov	ecx, DWORD PTR _e$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
	mov	dx, WORD PTR [edx+esi*2+68]
	mov	WORD PTR [ecx+eax*2+30], dx

; 1815 : 								threat_x[j] = x;

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _x$[ebp]
	mov	WORD PTR [ecx+eax*2+40], dx

; 1816 : 								threat_y[j] = y;

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _y$[ebp]
	mov	WORD PTR [ecx+eax*2+50], dx
$LN1@CollectThr:

; 1817 : 								}
; 1818 : 							}
; 1819 : 						}

	jmp	$LN8@CollectThr
$LN7@CollectThr:

; 1820 : 					}
; 1821 : 				}
; 1822 : 			}
; 1823 : 		e = (Unit) myit.GetNext();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetNext
	mov	DWORD PTR _e$[ebp], eax

; 1824 : 		}

	jmp	$LN22@CollectThr
$LN21@CollectThr:

; 1825 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuGridIterator@@UAE@XZ		; VuGridIterator::~VuGridIterator
__ehhandler$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z ENDP ; MissionEvaluationClass::CollectThreats
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_dist$ = -84						; size = 4
_xd$ = -80						; size = 4
_yd$ = -76						; size = 4
_nw$ = -72						; size = 4
_d$ = -68						; size = 4
_nx$ = -64						; size = 2
_ny$ = -60						; size = 2
_this$ = -56						; size = 4
_step$ = -52						; size = 4
_i$ = -48						; size = 4
_w$ = -44						; size = 4
_fx$ = -40						; size = 2
_fy$ = -36						; size = 2
_x$ = -32						; size = 2
_y$ = -28						; size = 2
_dists$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_flight$ = 8						; size = 4
_tw$ = 12						; size = 4
?CollectThreats@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVWayPointClass@@@Z PROC ; MissionEvaluationClass::CollectThreats
; _this$ = ecx

; 1696 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1697 : 	WayPoint		w,nw;
; 1698 : 	int				step,i;
; 1699 : 	GridIndex		x,y,fx,fy,nx,ny;
; 1700 : 	float			xd,yd,d;
; 1701 : 	int				dist,dists[MAX_COLLECTED_THREATS];
; 1702 : 
; 1703 : 	memset(threat_ids,0,sizeof(short)*MAX_COLLECTED_THREATS);

	push	10					; 0000000aH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1704 : 	for (i=0; i<MAX_COLLECTED_THREATS; i++){

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@CollectThr
$LN10@CollectThr:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN11@CollectThr:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN9@CollectThr

; 1705 : 		dists[i] = 999;

	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _dists$[ebp+edx*4], 999	; 000003e7H

; 1706 : 		threat_x[i] = threat_y[i] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx*2+50], ax
	xor	eax, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx*2+40], ax

; 1707 : 	}

	jmp	SHORT $LN10@CollectThr
$LN9@CollectThr:

; 1708 : 
; 1709 : 	// Collect threats at target first;
; 1710 : 	if (tw){

	cmp	DWORD PTR _tw$[ebp], 0
	je	SHORT $LN8@CollectThr

; 1711 : 		tw->GetWPLocation(&x,&y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1712 : 		CollectThreats (x, y, tw->GetWPAltitude(), FIND_NOAIR | FIND_FINDUNSPOTTED, dists);

	lea	edx, DWORD PTR _dists$[ebp]
	push	edx
	push	132					; 00000084H
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPAltitude@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAltitude
	push	eax
	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z ; MissionEvaluationClass::CollectThreats
$LN8@CollectThr:

; 1713 : 	}
; 1714 : 
; 1715 : 	// Collect threats along route
; 1716 : 	w = flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax

; 1717 : 	nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$[ebp], eax
$LN7@CollectThr:

; 1718 : 	while (w && nw && w != tw){

	cmp	DWORD PTR _w$[ebp], 0
	je	$LN6@CollectThr
	cmp	DWORD PTR _nw$[ebp], 0
	je	$LN6@CollectThr
	mov	edx, DWORD PTR _w$[ebp]
	cmp	edx, DWORD PTR _tw$[ebp]
	je	$LN6@CollectThr

; 1719 : 		w->GetWPLocation(&fx,&fy);

	lea	eax, DWORD PTR _fy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1720 : 		nw->GetWPLocation(&nx,&ny);

	lea	edx, DWORD PTR _ny$[ebp]
	push	edx
	lea	eax, DWORD PTR _nx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nw$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1721 : 		d = Distance(fx,fy,nx,ny);

	movzx	ecx, WORD PTR _ny$[ebp]
	push	ecx
	movzx	edx, WORD PTR _nx$[ebp]
	push	edx
	movzx	eax, WORD PTR _fy$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fx$[ebp]
	push	ecx
	call	?Distance@@YAMFFFF@Z			; Distance
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _d$[ebp]

; 1722 : 		dist = FloatToInt32(d);

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _dist$[ebp], eax

; 1723 : 		// JB 010614 CTD
; 1724 : 		if (d != 0.0){

	cvtss2sd xmm0, DWORD PTR _d$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN5@CollectThr

; 1725 : 			xd = (float)(nx-fx)/d;

	movsx	edx, WORD PTR _nx$[ebp]
	movsx	eax, WORD PTR _fx$[ebp]
	sub	edx, eax
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR _xd$[ebp], xmm0

; 1726 : 			yd = (float)(ny-fy)/d;

	movsx	ecx, WORD PTR _ny$[ebp]
	movsx	edx, WORD PTR _fy$[ebp]
	sub	ecx, edx
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR _yd$[ebp], xmm0

; 1727 : 		}
; 1728 : 		else

	jmp	SHORT $LN4@CollectThr
$LN5@CollectThr:

; 1729 : 		{ /////?????????????????????????????????
; 1730 : 			xd = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _xd$[ebp], xmm0

; 1731 : 			yd = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _yd$[ebp], xmm0
$LN4@CollectThr:

; 1732 : 		}
; 1733 : 		for (step=0; step<=dist; step+=5)

	mov	DWORD PTR _step$[ebp], 0
	jmp	SHORT $LN3@CollectThr
$LN2@CollectThr:
	mov	eax, DWORD PTR _step$[ebp]
	add	eax, 5
	mov	DWORD PTR _step$[ebp], eax
$LN3@CollectThr:
	mov	ecx, DWORD PTR _step$[ebp]
	cmp	ecx, DWORD PTR _dist$[ebp]
	jg	SHORT $LN1@CollectThr

; 1734 : 		{
; 1735 : 			x = fx + (GridIndex)(xd*step + 0.5F);

	movsx	edx, WORD PTR _fx$[ebp]
	cvtsi2ss xmm0, DWORD PTR _step$[ebp]
	mulss	xmm0, DWORD PTR _xd$[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	movsx	ecx, ax
	add	edx, ecx
	mov	WORD PTR _x$[ebp], dx

; 1736 : 			y = fy + (GridIndex)(yd*step + 0.5F);

	movsx	edx, WORD PTR _fy$[ebp]
	cvtsi2ss xmm0, DWORD PTR _step$[ebp]
	mulss	xmm0, DWORD PTR _yd$[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	movsx	ecx, ax
	add	edx, ecx
	mov	WORD PTR _y$[ebp], dx

; 1737 : 			CollectThreats (x, y, tw->GetWPAltitude(), FIND_NOAIR | FIND_FINDUNSPOTTED, dists);

	lea	edx, DWORD PTR _dists$[ebp]
	push	edx
	push	132					; 00000084H
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPAltitude@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAltitude
	push	eax
	movzx	eax, WORD PTR _y$[ebp]
	push	eax
	movzx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CollectThreats@MissionEvaluationClass@@QAEXFFHHPAH@Z ; MissionEvaluationClass::CollectThreats

; 1738 : 		}

	jmp	SHORT $LN2@CollectThr
$LN1@CollectThr:

; 1739 : 		w = nw;

	mov	edx, DWORD PTR _nw$[ebp]
	mov	DWORD PTR _w$[ebp], edx

; 1740 : 		nw = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _nw$[ebp], eax

; 1741 : 	}

	jmp	$LN7@CollectThr
$LN6@CollectThr:

; 1742 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?CollectThreats@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVWayPointClass@@@Z ENDP ; MissionEvaluationClass::CollectThreats
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 8
$T3 = -84						; size = 4
_d$4 = -80						; size = 4
tv129 = -76						; size = 4
_wd$5 = -72						; size = 4
_myit$6 = -68						; size = 4
$T7 = -64						; size = 4
_y$8 = -60						; size = 2
_x$9 = -56						; size = 2
_j$ = -52						; size = 4
_this$ = -48						; size = 4
_i$ = -44						; size = 4
_o$ = -40						; size = 4
_dists$10 = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ PROC ; MissionEvaluationClass::FindPotentialTargets
; _this$ = ecx

; 1650 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1651 : 	int					i,j;
; 1652 : 	Objective			o;
; 1653 : 
; 1654 : 	ClearPotentialTargets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPotentialTargets@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPotentialTargets

; 1655 : 
; 1656 : 	if (package_mission == AMIS_BARCAP || package_mission == AMIS_BARCAP2)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	cmp	ecx, 1
	je	SHORT $LN13@FindPotent
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	cmp	eax, 2
	jne	$LN8@FindPotent
$LN13@FindPotent:

; 1657 : 		{
; 1658 : #ifdef VU_GRID_TREE_Y_MAJOR
; 1659 : 		VuGridIterator*		myit = new VuGridIterator(ObjProxList,(BIG_SCALAR)GridToSim(tx),(BIG_SCALAR)GridToSim(ty),(BIG_SCALAR)GridToSim(MissionData[package_mission].mindistance));

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN17@FindPotent
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	shl	edx, 5
	movzx	ax, BYTE PTR ?MissionData@@3PAUMissionDataType@@A[edx+22]
	movzx	ecx, ax
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+186]
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+184]
	push	edx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?ObjProxList@@3PAVVuGridTree@@A ; ObjProxList
	push	eax
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0VuGridIterator@@QAE@PAVVuGridTree@@MMM@Z ; VuGridIterator::VuGridIterator
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN18@FindPotent
$LN17@FindPotent:
	mov	DWORD PTR tv129[ebp], 0
$LN18@FindPotent:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _myit$6[ebp], edx

; 1660 : #else
; 1661 : 		VuGridIterator*		myit = new VuGridIterator(ObjProxList,(BIG_SCALAR)GridToSim(ty),(BIG_SCALAR)GridToSim(tx),(BIG_SCALAR)GridToSim(MissionData[package_mission].mindistance));
; 1662 : #endif
; 1663 : 		float				d,wd,dists[MAX_POTENTIAL_TARGETS];
; 1664 : 		GridIndex			x,y;
; 1665 : 
; 1666 : 		for (i=0; i<MAX_POTENTIAL_TARGETS; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@FindPotent
$LN11@FindPotent:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@FindPotent:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN10@FindPotent

; 1667 : 			dists[i] = 999.9F;

	mov	ecx, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR __real@4479f99a
	movss	DWORD PTR _dists$10[ebp+ecx*4], xmm0
	jmp	SHORT $LN11@FindPotent
$LN10@FindPotent:

; 1668 : 		o = (Objective) myit->GetFirst();

	mov	ecx, DWORD PTR _myit$6[ebp]
	call	?GetFirst@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN9@FindPotent:

; 1669 : 		while (o)

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN8@FindPotent

; 1670 : 			{
; 1671 : 			if (o->GetTeam() == team && o->GetObjectiveStatus() > 30 && (o->GetType() == TYPE_BRIDGE || o->GetType() == TYPE_AIRBASE || o->GetType() == TYPE_DEPOT || o->GetType() == TYPE_ARMYBASE || o->GetType() == TYPE_FACTORY || o->GetType() == TYPE_RADAR || o->GetType() == TYPE_PORT || o->GetType() == TYPE_REFINERY || o->GetType() == TYPE_POWERPLANT))

	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	movzx	eax, al
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+25]
	cmp	eax, edx
	jne	$LN1@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	eax, al
	cmp	eax, 30					; 0000001eH
	jle	$LN1@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 6
	je	$LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	edx, al
	cmp	edx, 1
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 3
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	edx, al
	cmp	edx, 11					; 0000000bH
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 21					; 00000015H
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	edx, al
	cmp	edx, 25					; 00000019H
	je	SHORT $LN6@FindPotent
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	eax, al
	cmp	eax, 20					; 00000014H
	jne	$LN1@FindPotent
$LN6@FindPotent:

; 1672 : 				{
; 1673 : 				o->GetLocation(&x,&y);

	lea	ecx, DWORD PTR _y$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1674 : 				d = Distance(x,y,tx,ty);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+186]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+184]
	push	eax
	movzx	ecx, WORD PTR _y$8[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$9[ebp]
	push	edx
	call	?Distance@@YAMFFFF@Z			; Distance
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _d$4[ebp]

; 1675 : 				// find the best distance to replace
; 1676 : 				for (i=0,j=-1,wd=0.0F; i<MAX_POTENTIAL_TARGETS; i++)

	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], -1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _wd$5[ebp], xmm0
	jmp	SHORT $LN5@FindPotent
$LN4@FindPotent:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@FindPotent:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN3@FindPotent

; 1677 : 					{
; 1678 : 					if (dists[i] > wd && d < dists[i])

	mov	ecx, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR _dists$10[ebp+ecx*4]
	comiss	xmm0, DWORD PTR _wd$5[ebp]
	jbe	SHORT $LN2@FindPotent
	mov	edx, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR _dists$10[ebp+edx*4]
	comiss	xmm0, DWORD PTR _d$4[ebp]
	jbe	SHORT $LN2@FindPotent

; 1679 : 						{
; 1680 : 						j = i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _j$[ebp], eax

; 1681 : 						wd = dists[i];

	mov	ecx, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR _dists$10[ebp+ecx*4]
	movss	DWORD PTR _wd$5[ebp], xmm0
$LN2@FindPotent:

; 1682 : 						}
; 1683 : 					}

	jmp	SHORT $LN4@FindPotent
$LN3@FindPotent:

; 1684 : 				if (j >= 0)

	cmp	DWORD PTR _j$[ebp], 0
	jl	SHORT $LN1@FindPotent

; 1685 : 					{
; 1686 : 					dists[j] = d;

	mov	edx, DWORD PTR _j$[ebp]
	movss	xmm0, DWORD PTR _d$4[ebp]
	movss	DWORD PTR _dists$10[ebp+edx*4], xmm0

; 1687 : 					potential_targets[j] = o->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _j$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+eax*8+124], ecx
	mov	DWORD PTR [esi+eax*8+128], edx
$LN1@FindPotent:

; 1688 : 					}
; 1689 : 				}
; 1690 : 			o = (Objective) myit->GetNext();

	mov	ecx, DWORD PTR _myit$6[ebp]
	call	?GetNext@VuGridIterator@@QAEPAVVuEntity@@XZ ; VuGridIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 1691 : 			}

	jmp	$LN9@FindPotent
$LN8@FindPotent:

; 1692 : 		}
; 1693 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ ENDP ; MissionEvaluationClass::FindPotentialTargets
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?ClearPotentialTargets@MissionEvaluationClass@@QAEXXZ PROC ; MissionEvaluationClass::ClearPotentialTargets
; _this$ = ecx

; 1644 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 	for (int i=0; i<MAX_POTENTIAL_TARGETS; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@ClearPoten
$LN2@ClearPoten:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@ClearPoten:
	cmp	DWORD PTR _i$1[ebp], 5
	jge	SHORT $LN4@ClearPoten

; 1646 : 		potential_targets[i] = FalconNullId;

	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+ecx*8+124], eax
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+ecx*8+128], eax
	jmp	SHORT $LN2@ClearPoten
$LN4@ClearPoten:

; 1647 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearPotentialTargets@MissionEvaluationClass@@QAEXXZ ENDP ; MissionEvaluationClass::ClearPotentialTargets
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_ent$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
?ClearPackageData@MissionEvaluationClass@@QAEXXZ PROC	; MissionEvaluationClass::ClearPackageData
; _this$ = ecx

; 1628 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1629 : 	// Clear the package pointer for everything associated with the local player's package
; 1630 : 	CampEntity			ent;
; 1631 : 	FlightDataClass		*flight_ptr;
; 1632 : 
; 1633 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN3@ClearPacka:

; 1634 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@ClearPacka

; 1635 : 		{
; 1636 : 		ent = (CampEntity) vuDatabase->Find(flight_ptr->flight_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1637 : 		if (ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN1@ClearPacka

; 1638 : 			ent->SetInPackage(0);

	push	0
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage
$LN1@ClearPacka:

; 1639 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 1640 : 		}

	jmp	SHORT $LN3@ClearPacka
$LN4@ClearPacka:

; 1641 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearPackageData@MissionEvaluationClass@@QAEXXZ ENDP	; MissionEvaluationClass::ClearPackageData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_ent$ = -8						; size = 4
_flight_ptr$ = -4					; size = 4
?SetPackageData@MissionEvaluationClass@@QAEXXZ PROC	; MissionEvaluationClass::SetPackageData
; _this$ = ecx

; 1612 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 	// Set the package pointer for everything associated with the local player's package
; 1614 : 	CampEntity			ent;
; 1615 : 	FlightDataClass		*flight_ptr;
; 1616 : 
; 1617 : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN3@SetPackage:

; 1618 : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN4@SetPackage

; 1619 : 		{
; 1620 : 		ent = (CampEntity) vuDatabase->Find(flight_ptr->flight_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$[ebp], eax

; 1621 : 		if (ent)

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN1@SetPackage

; 1622 : 			ent->SetInPackage(1);

	push	1
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage
$LN1@SetPackage:

; 1623 : 		flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 1624 : 		}

	jmp	SHORT $LN3@SetPackage
$LN4@SetPackage:

; 1625 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SetPackageData@MissionEvaluationClass@@QAEXXZ ENDP	; MissionEvaluationClass::SetPackageData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_statloss$1 = -60					; size = 4
_statloss$2 = -56					; size = 4
_statloss$3 = -52					; size = 4
_kills$4 = -48						; size = 4
_e$5 = -44						; size = 4
_e$6 = -40						; size = 4
tv153 = -36						; size = 4
_e$7 = -32						; size = 4
_fired$8 = -28						; size = 4
_losses$ = -24						; size = 4
_hit$9 = -20						; size = 4
_i$10 = -16						; size = 4
_this$ = -12						; size = 4
_pilot_data$11 = -8					; size = 4
_retval$ = -4						; size = 4
_flight_ptr$ = 8					; size = 4
?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z PROC ; MissionEvaluationClass::MissionSuccess
; _this$ = ecx

; 1193 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1194 : 	int		retval = Failed, losses;

	mov	DWORD PTR _retval$[ebp], 0

; 1195 : 
; 1196 : 	if (!flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	jne	SHORT $LN130@MissionSuc

; 1197 : 		return retval;

	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN131@MissionSuc
$LN130@MissionSuc:

; 1198 : 
; 1199 : // 2002-02-13 MN Check if we got an Abort from AWACS and the target has not been engaged
; 1200 : // If it has been engaged, mission failed
; 1201 : 	if (flight_ptr->status_flags & MISEVAL_FLIGHT_ABORT_BY_AWACS)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 1073741824				; 40000000H
	je	$LN127@MissionSuc

; 1202 : 		if (!(flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_HIT))

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 65536				; 00010000H
	jne	SHORT $LN128@MissionSuc

; 1203 : 		{
; 1204 : 			flight_ptr->failure_code = 1;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 1

; 1205 : 			return AWACSAbort;

	mov	eax, 5
	jmp	$LN131@MissionSuc

; 1206 : 		}
; 1207 : 		else

	jmp	$LN127@MissionSuc
$LN128@MissionSuc:

; 1208 : // We hit the target, but got AWACS order to abort before..
; 1209 : 		{
; 1210 : 			int			statloss = 0;

	mov	DWORD PTR _statloss$3[ebp], 0

; 1211 : 			CampEntity	e = FindEntity(flight_ptr->target_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	push	ecx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _e$7[ebp], eax

; 1212 : 			if (e && e->IsObjective())

	cmp	DWORD PTR _e$7[ebp], 0
	je	SHORT $LN126@MissionSuc
	mov	edx, DWORD PTR _e$7[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$7[ebp]
	mov	edx, DWORD PTR [eax+236]
	call	edx
	test	eax, eax
	je	SHORT $LN126@MissionSuc

; 1213 : 				statloss = flight_ptr->target_status - ((Objective)e)->GetObjectiveStatus();

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	esi, BYTE PTR [eax+93]
	mov	ecx, DWORD PTR _e$7[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	ecx, al
	sub	esi, ecx
	mov	DWORD PTR _statloss$3[ebp], esi
$LN126@MissionSuc:

; 1214 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_HIT_HIGH_VAL || statloss > 35)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 256				; 00000100H
	jne	SHORT $LN124@MissionSuc
	cmp	DWORD PTR _statloss$3[ebp], 35		; 00000023H
	jle	SHORT $LN125@MissionSuc
$LN124@MissionSuc:

; 1215 : 				{
; 1216 : 				flight_ptr->failure_code = 4;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 4
	jmp	SHORT $LN121@MissionSuc
$LN125@MissionSuc:

; 1217 : 				}
; 1218 : 			else if (statloss > 10)

	cmp	DWORD PTR _statloss$3[ebp], 10		; 0000000aH
	jle	SHORT $LN122@MissionSuc

; 1219 : 				{
; 1220 : 				flight_ptr->failure_code = 3;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 3

; 1221 : 				}
; 1222 : 			else

	jmp	SHORT $LN121@MissionSuc
$LN122@MissionSuc:

; 1223 : 				{
; 1224 : 				flight_ptr->failure_code = 2;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 2
$LN121@MissionSuc:

; 1225 : 				}
; 1226 : 			return retval;

	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN131@MissionSuc
$LN127@MissionSuc:

; 1227 : 		}
; 1228 : 
; 1229 : 	// Check for in progress
; 1230 : 	if (!(flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_TO_TARGET) &&
; 1231 : 		!(flight_ptr->status_flags & MISEVAL_FLIGHT_STATION_OVER) &&
; 1232 : 		!(flight_ptr->status_flags & MISEVAL_FLIGHT_OFF_STATION) &&
; 1233 : 		!(flight_ptr->status_flags & MISEVAL_FLIGHT_DESTROYED) &&
; 1234 : 		!(flight_ptr->status_flags & MISEVAL_FLIGHT_ABORTED))

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 33554432				; 02000000H
	jne	SHORT $LN120@MissionSuc
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 67108864				; 04000000H
	jne	SHORT $LN120@MissionSuc
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 536870912				; 20000000H
	jne	SHORT $LN120@MissionSuc
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 2
	jne	SHORT $LN120@MissionSuc
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 4
	jne	SHORT $LN120@MissionSuc

; 1235 : 		{
; 1236 : 		flight_ptr->failure_code = 0;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 0

; 1237 : 		return Incomplete;

	mov	eax, 4
	jmp	$LN131@MissionSuc
$LN120@MissionSuc:

; 1238 : 		}
; 1239 : 
; 1240 : 	switch (flight_ptr->mission)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	mov	DWORD PTR tv153[ebp], ecx
	mov	edx, DWORD PTR tv153[ebp]
	sub	edx, 1
	mov	DWORD PTR tv153[ebp], edx
	cmp	DWORD PTR tv153[ebp], 37		; 00000025H
	ja	$LN3@MissionSuc
	mov	eax, DWORD PTR tv153[ebp]
	movzx	ecx, BYTE PTR $LN133@MissionSuc[eax]
	jmp	DWORD PTR $LN134@MissionSuc[ecx*4]
$LN117@MissionSuc:

; 1241 : 		{
; 1242 : 		case AMIS_BARCAP:
; 1243 : 		case AMIS_BARCAP2:
; 1244 : 		case AMIS_TARCAP:
; 1245 : 		case AMIS_RESCAP:
; 1246 : 		case AMIS_AMBUSHCAP:
; 1247 : 			// Determine if we stayed in the area or not
; 1248 : 			if (!(flight_ptr->status_flags & MISEVAL_FLIGHT_OFF_STATION))

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 536870912				; 20000000H
	jne	$LN116@MissionSuc

; 1249 : 				{
; 1250 : 				// Determine if our vol period is over or not
; 1251 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_STATION_OVER)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 67108864				; 04000000H
	je	SHORT $LN115@MissionSuc

; 1252 : 					{
; 1253 : 					// We completed the voll - simply check for damage or not
; 1254 : 					if (flight_ptr->status_flags & MISEVAL_FLIGHT_AREA_HIT)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 524288				; 00080000H
	je	SHORT $LN114@MissionSuc

; 1255 : 						{
; 1256 : 						retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1257 : 						flight_ptr->failure_code = 40;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 40			; 00000028H

; 1258 : 						}
; 1259 : 					else

	jmp	SHORT $LN113@MissionSuc
$LN114@MissionSuc:

; 1260 : 						{
; 1261 : 						retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1262 : 						flight_ptr->failure_code = 41;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 41			; 00000029H
$LN113@MissionSuc:

; 1263 : 						}

	jmp	SHORT $LN106@MissionSuc
$LN115@MissionSuc:

; 1264 : 					}
; 1265 : 				// Check if we had permission to leave early or not
; 1266 : 				else if (flight_ptr->status_flags & MISEVAL_FLIGHT_RELIEVED)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 268435456				; 10000000H
	je	SHORT $LN111@MissionSuc

; 1267 : 					{
; 1268 : 					if (flight_ptr->status_flags & MISEVAL_FLIGHT_AREA_HIT)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 524288				; 00080000H
	je	SHORT $LN110@MissionSuc

; 1269 : 						{
; 1270 : 						retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1271 : 						flight_ptr->failure_code = 40;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 40			; 00000028H
	jmp	SHORT $LN107@MissionSuc
$LN110@MissionSuc:

; 1272 : 						}
; 1273 : 					else if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_AKILL)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 16					; 00000010H
	je	SHORT $LN108@MissionSuc

; 1274 : 						{
; 1275 : 						retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1276 : 						flight_ptr->failure_code = 42;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 42			; 0000002aH

; 1277 : 						}
; 1278 : 					else

	jmp	SHORT $LN107@MissionSuc
$LN108@MissionSuc:

; 1279 : 						{
; 1280 : 						retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1281 : 						flight_ptr->failure_code = 43;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 43			; 0000002bH
$LN107@MissionSuc:

; 1282 : 						}
; 1283 : 					}
; 1284 : 				else

	jmp	SHORT $LN106@MissionSuc
$LN111@MissionSuc:

; 1285 : 					flight_ptr->failure_code = 57;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 57			; 00000039H
$LN106@MissionSuc:

; 1286 : 				}
; 1287 : 			else

	jmp	SHORT $LN105@MissionSuc
$LN116@MissionSuc:

; 1288 : 				flight_ptr->failure_code = 58;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 58			; 0000003aH
$LN105@MissionSuc:

; 1289 : 			break;

	jmp	$LN118@MissionSuc
$LN104@MissionSuc:

; 1290 : 		case AMIS_HAVCAP: 
; 1291 : 			// Check if our target was killed
; 1292 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_F_TARGET_KILLED)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 2097152				; 00200000H
	je	SHORT $LN103@MissionSuc

; 1293 : 				flight_ptr->failure_code = 48;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 48			; 00000030H
	jmp	$LN94@MissionSuc
$LN103@MissionSuc:

; 1294 : 			// Check if our target was hit
; 1295 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_F_TARGET_HIT)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 1048576				; 00100000H
	je	SHORT $LN101@MissionSuc

; 1296 : 				{
; 1297 : 				retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1298 : 				flight_ptr->failure_code = 49;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 49			; 00000031H
	jmp	SHORT $LN94@MissionSuc
$LN101@MissionSuc:

; 1299 : 				}
; 1300 : 			// Check if our target aborted
; 1301 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_F_TARGET_ABORTED)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 4194304				; 00400000H
	je	SHORT $LN99@MissionSuc

; 1302 : 				{
; 1303 : 				retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1304 : 				flight_ptr->failure_code = 50;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 50			; 00000032H

; 1305 : 				}
; 1306 : 			else

	jmp	SHORT $LN94@MissionSuc
$LN99@MissionSuc:

; 1307 : 				{
; 1308 : 				// Check if we completed our time
; 1309 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_STATION_OVER)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 67108864				; 04000000H
	je	SHORT $LN97@MissionSuc

; 1310 : 					{
; 1311 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1312 : 					flight_ptr->failure_code = 46;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 46			; 0000002eH
	jmp	SHORT $LN94@MissionSuc
$LN97@MissionSuc:

; 1313 : 					}
; 1314 : 				// Check if we were relieved
; 1315 : 				else if (flight_ptr->status_flags & MISEVAL_FLIGHT_RELIEVED)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 268435456				; 10000000H
	je	SHORT $LN95@MissionSuc

; 1316 : 					{
; 1317 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1318 : 					flight_ptr->failure_code = 47;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 47			; 0000002fH

; 1319 : 					}
; 1320 : 				else

	jmp	SHORT $LN94@MissionSuc
$LN95@MissionSuc:

; 1321 : 					{
; 1322 : 					retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1323 : 					flight_ptr->failure_code = 57;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 57			; 00000039H
$LN94@MissionSuc:

; 1324 : 					}
; 1325 : 				}
; 1326 : 			break;

	jmp	$LN118@MissionSuc
$LN93@MissionSuc:

; 1327 : 		case AMIS_INTERCEPT: 
; 1328 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_KILLED)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 131072				; 00020000H
	je	SHORT $LN92@MissionSuc

; 1329 : 				{
; 1330 : 				retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1331 : 				flight_ptr->failure_code = 35;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 35			; 00000023H
	jmp	SHORT $LN87@MissionSuc
$LN92@MissionSuc:

; 1332 : 				}
; 1333 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_ABORTED)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 262144				; 00040000H
	je	SHORT $LN90@MissionSuc

; 1334 : 				{
; 1335 : 				retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1336 : 				flight_ptr->failure_code = 36;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 36			; 00000024H
	jmp	SHORT $LN87@MissionSuc
$LN90@MissionSuc:

; 1337 : 				}
; 1338 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_HIT)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 65536				; 00010000H
	je	SHORT $LN88@MissionSuc

; 1339 : 				{
; 1340 : 				retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1341 : 				flight_ptr->failure_code = 37;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 37			; 00000025H

; 1342 : 				}
; 1343 : 			else

	jmp	SHORT $LN87@MissionSuc
$LN88@MissionSuc:

; 1344 : 				flight_ptr->failure_code = 38;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 38			; 00000026H
$LN87@MissionSuc:

; 1345 : 			break;

	jmp	$LN118@MissionSuc
$LN86@MissionSuc:

; 1346 : 		case AMIS_SWEEP:
; 1347 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_DESTROYED)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 2
	je	SHORT $LN85@MissionSuc

; 1348 : 				flight_ptr->failure_code = 30;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 30			; 0000001eH
	jmp	SHORT $LN77@MissionSuc
$LN85@MissionSuc:

; 1349 : 			else if ((flight_ptr->status_flags & MISEVAL_FLIGHT_LOSSES) || !(flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_TO_TARGET))

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 1
	jne	SHORT $LN82@MissionSuc
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 33554432				; 02000000H
	jne	SHORT $LN83@MissionSuc
$LN82@MissionSuc:

; 1350 : 				{
; 1351 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_AKILL)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 16					; 00000010H
	je	SHORT $LN81@MissionSuc

; 1352 : 					{
; 1353 : 					retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1354 : 					flight_ptr->failure_code = 32;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 32			; 00000020H

; 1355 : 					}
; 1356 : 				else

	jmp	SHORT $LN80@MissionSuc
$LN81@MissionSuc:

; 1357 : 					{
; 1358 : 					retval = Failed;

	mov	DWORD PTR _retval$[ebp], 0

; 1359 : 					flight_ptr->failure_code = 33;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 33			; 00000021H
$LN80@MissionSuc:

; 1360 : 					}
; 1361 : 				}
; 1362 : 			else

	jmp	SHORT $LN77@MissionSuc
$LN83@MissionSuc:

; 1363 : 				{
; 1364 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_AKILL)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 16					; 00000010H
	je	SHORT $LN78@MissionSuc

; 1365 : 					{
; 1366 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1367 : 					flight_ptr->failure_code = 31;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 31			; 0000001fH

; 1368 : 					}
; 1369 : 				else 

	jmp	SHORT $LN77@MissionSuc
$LN78@MissionSuc:

; 1370 : 					{
; 1371 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1372 : 					flight_ptr->failure_code = 34;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 34			; 00000022H
$LN77@MissionSuc:

; 1373 : 					}
; 1374 : 				}
; 1375 : 			break;

	jmp	$LN118@MissionSuc
$LN76@MissionSuc:

; 1376 : 		case AMIS_ESCORT:
; 1377 : 		case AMIS_SEADESCORT:
; 1378 : 			if (flight_ptr->mission == AMIS_ESCORT)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN75@MissionSuc

; 1379 : 				losses = friendly_aa_losses;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+22]
	mov	DWORD PTR _losses$[ebp], edx

; 1380 : 			else

	jmp	SHORT $LN74@MissionSuc
$LN75@MissionSuc:

; 1381 : 				losses = friendly_ga_losses;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23]
	mov	DWORD PTR _losses$[ebp], ecx
$LN74@MissionSuc:

; 1382 : 			if (package_element->status_flags & MISEVAL_FLIGHT_GOT_TO_TARGET ||
; 1383 : 				package_element->status_flags & MISEVAL_FLIGHT_ABORT_BY_AWACS)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 33554432				; 02000000H
	jne	SHORT $LN72@MissionSuc
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 1073741824				; 40000000H
	je	SHORT $LN73@MissionSuc
$LN72@MissionSuc:

; 1384 : 				{
; 1385 : 				if (package_element->status_flags & MISEVAL_FLIGHT_HIT_BY_GROUND && losses)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 8192				; 00002000H
	je	SHORT $LN71@MissionSuc
	cmp	DWORD PTR _losses$[ebp], 0
	je	SHORT $LN71@MissionSuc

; 1386 : 					{
; 1387 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1388 : 					if (losses == 1)

	cmp	DWORD PTR _losses$[ebp], 1
	jne	SHORT $LN70@MissionSuc

; 1389 : 						flight_ptr->failure_code = 25;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 25			; 00000019H

; 1390 : 					else

	jmp	SHORT $LN69@MissionSuc
$LN70@MissionSuc:

; 1391 : 						flight_ptr->failure_code = 26;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 26			; 0000001aH
$LN69@MissionSuc:

; 1392 : 					}
; 1393 : 				else

	jmp	SHORT $LN68@MissionSuc
$LN71@MissionSuc:

; 1394 : 					{
; 1395 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1396 : 					flight_ptr->failure_code = 27;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 27			; 0000001bH
$LN68@MissionSuc:

; 1397 : 					}

	jmp	$LN58@MissionSuc
$LN73@MissionSuc:

; 1398 : 				}
; 1399 : 			else if (package_element->status_flags & MISEVAL_FLIGHT_ABORTED)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 4
	je	SHORT $LN66@MissionSuc

; 1400 : 				{
; 1401 : 				if (package_element->status_flags & MISEVAL_FLIGHT_HIT_BY_GROUND && losses)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 8192				; 00002000H
	je	SHORT $LN65@MissionSuc
	cmp	DWORD PTR _losses$[ebp], 0
	je	SHORT $LN65@MissionSuc

; 1402 : 					{
; 1403 : 					retval = PartFailed;

	mov	DWORD PTR _retval$[ebp], 1

; 1404 : 					if (losses == 1)

	cmp	DWORD PTR _losses$[ebp], 1
	jne	SHORT $LN64@MissionSuc

; 1405 : 						flight_ptr->failure_code = 25;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 25			; 00000019H

; 1406 : 					else

	jmp	SHORT $LN63@MissionSuc
$LN64@MissionSuc:

; 1407 : 						flight_ptr->failure_code = 26;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 26			; 0000001aH
$LN63@MissionSuc:

; 1408 : 					}
; 1409 : 				else

	jmp	SHORT $LN62@MissionSuc
$LN65@MissionSuc:

; 1410 : 					{
; 1411 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1412 : 					flight_ptr->failure_code = 28;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 28			; 0000001cH
$LN62@MissionSuc:

; 1413 : 					}
; 1414 : 				}
; 1415 : 			else

	jmp	SHORT $LN58@MissionSuc
$LN66@MissionSuc:

; 1416 : 				{
; 1417 : 				retval = Failed;

	mov	DWORD PTR _retval$[ebp], 0

; 1418 : 				if (package_element->status_flags & MISEVAL_FLIGHT_STATION_OVER || package_element->status_flags & MISEVAL_FLIGHT_DESTROYED)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 67108864				; 04000000H
	jne	SHORT $LN59@MissionSuc
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 2
	je	SHORT $LN60@MissionSuc
$LN59@MissionSuc:

; 1419 : 					flight_ptr->failure_code = 25;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 25			; 00000019H

; 1420 : 				else

	jmp	SHORT $LN58@MissionSuc
$LN60@MissionSuc:

; 1421 : 					flight_ptr->failure_code = 24;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 24			; 00000018H
$LN58@MissionSuc:

; 1422 : 				}
; 1423 : 			break;

	jmp	$LN118@MissionSuc
$LN57@MissionSuc:

; 1424 : 		case AMIS_OCASTRIKE:
; 1425 : 		case AMIS_INTSTRIKE:
; 1426 : 		case AMIS_STRIKE:	
; 1427 : 		case AMIS_DEEPSTRIKE:
; 1428 : 		case AMIS_STSTRIKE:
; 1429 : 		case AMIS_STRATBOMB:
; 1430 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_HIT)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 65536				; 00010000H
	je	$LN56@MissionSuc

; 1431 : 				{
; 1432 : 				int			statloss = 0;

	mov	DWORD PTR _statloss$2[ebp], 0

; 1433 : 				CampEntity	e = FindEntity(flight_ptr->target_id);

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	push	edx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _e$6[ebp], eax

; 1434 : 				if (e && e->IsObjective())

	cmp	DWORD PTR _e$6[ebp], 0
	je	SHORT $LN55@MissionSuc
	mov	eax, DWORD PTR _e$6[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$6[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN55@MissionSuc

; 1435 : 					statloss = flight_ptr->target_status - ((Objective)e)->GetObjectiveStatus();

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	esi, BYTE PTR [ecx+93]
	mov	ecx, DWORD PTR _e$6[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	movzx	edx, al
	sub	esi, edx
	mov	DWORD PTR _statloss$2[ebp], esi
$LN55@MissionSuc:

; 1436 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_HIT_HIGH_VAL || statloss > 35)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 256				; 00000100H
	jne	SHORT $LN53@MissionSuc
	cmp	DWORD PTR _statloss$2[ebp], 35		; 00000023H
	jle	SHORT $LN54@MissionSuc
$LN53@MissionSuc:

; 1437 : 					{
; 1438 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1439 : 					flight_ptr->failure_code = 4;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 4
	jmp	SHORT $LN50@MissionSuc
$LN54@MissionSuc:

; 1440 : 					}
; 1441 : 				else if (statloss > 10)

	cmp	DWORD PTR _statloss$2[ebp], 10		; 0000000aH
	jle	SHORT $LN51@MissionSuc

; 1442 : 					{
; 1443 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1444 : 					flight_ptr->failure_code = 3;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 3

; 1445 : 					}
; 1446 : 				else

	jmp	SHORT $LN50@MissionSuc
$LN51@MissionSuc:

; 1447 : 					{
; 1448 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1449 : 					flight_ptr->failure_code = 2;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 2
$LN50@MissionSuc:

; 1450 : 					}
; 1451 : 				}
; 1452 : 			else

	jmp	SHORT $LN49@MissionSuc
$LN56@MissionSuc:

; 1453 : 				flight_ptr->failure_code = 1;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 1
$LN49@MissionSuc:

; 1454 : 			break;			

	jmp	$LN118@MissionSuc
$LN48@MissionSuc:

; 1455 : 		case AMIS_SEADSTRIKE:
; 1456 : 		case AMIS_PRPLANCAS: 
; 1457 : 		case AMIS_CAS:	
; 1458 : 		case AMIS_ASW:     
; 1459 : 		case AMIS_ASHIP:   
; 1460 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_HIT)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 65536				; 00010000H
	je	$LN47@MissionSuc

; 1461 : 				{
; 1462 : 				int			statloss = 0;

	mov	DWORD PTR _statloss$1[ebp], 0

; 1463 : 				CampEntity	e;
; 1464 : 				e = FindEntity(flight_ptr->target_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	push	ecx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _e$5[ebp], eax

; 1465 : 				if (e && e->IsUnit())

	cmp	DWORD PTR _e$5[ebp], 0
	je	SHORT $LN46@MissionSuc
	mov	edx, DWORD PTR _e$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$5[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN46@MissionSuc

; 1466 : 					statloss = FloatToInt32((float)(flight_ptr->target_status - ((Unit)e)->GetTotalVehicles())*100.0F/flight_ptr->target_status);

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	esi, BYTE PTR [eax+93]
	mov	ecx, DWORD PTR _e$5[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	sub	esi, eax
	cvtsi2ss xmm0, esi
	mulss	xmm0, DWORD PTR __real@42c80000
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+93]
	cvtsi2ss xmm1, edx
	divss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _statloss$1[ebp], eax
$LN46@MissionSuc:

; 1467 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_HIT_HIGH_VAL || statloss > 8)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 256				; 00000100H
	jne	SHORT $LN44@MissionSuc
	cmp	DWORD PTR _statloss$1[ebp], 8
	jle	SHORT $LN45@MissionSuc
$LN44@MissionSuc:

; 1468 : 					{
; 1469 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1470 : 					flight_ptr->failure_code = 8;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 8
	jmp	SHORT $LN41@MissionSuc
$LN45@MissionSuc:

; 1471 : 					}
; 1472 : 				else if (statloss > 2)

	cmp	DWORD PTR _statloss$1[ebp], 2
	jle	SHORT $LN42@MissionSuc

; 1473 : 					{
; 1474 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1475 : 					flight_ptr->failure_code = 7;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 7

; 1476 : 					}
; 1477 : 				else

	jmp	SHORT $LN41@MissionSuc
$LN42@MissionSuc:

; 1478 : 					{
; 1479 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1480 : 					flight_ptr->failure_code = 6;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 6
$LN41@MissionSuc:

; 1481 : 					}
; 1482 : 				}
; 1483 : 			else

	jmp	SHORT $LN40@MissionSuc
$LN47@MissionSuc:

; 1484 : 				flight_ptr->failure_code = 5;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 5
$LN40@MissionSuc:

; 1485 : 			break;			

	jmp	$LN118@MissionSuc
$LN39@MissionSuc:

; 1486 : 		case AMIS_SAD:	
; 1487 : 		case AMIS_INT:
; 1488 : 		case AMIS_BAI:
; 1489 : 		case AMIS_PATROL:	
; 1490 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_AKILL ||
; 1491 : 				flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_GKILL ||
; 1492 : 				flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_NKILL)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 16					; 00000010H
	jne	SHORT $LN37@MissionSuc
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 32					; 00000020H
	jne	SHORT $LN37@MissionSuc
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 64					; 00000040H
	je	$LN38@MissionSuc
$LN37@MissionSuc:

; 1493 : 				{
; 1494 : 				// Calculate hit ratio & kills
; 1495 : 				int				hit=0,fired=0,kills=0,i;

	mov	DWORD PTR _hit$9[ebp], 0
	mov	DWORD PTR _fired$8[ebp], 0
	mov	DWORD PTR _kills$4[ebp], 0

; 1496 : 				PilotDataClass	*pilot_data;
; 1497 : 				pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$11[ebp], ecx
$LN36@MissionSuc:

; 1498 : 				while (pilot_data)

	cmp	DWORD PTR _pilot_data$11[ebp], 0
	je	$LN35@MissionSuc

; 1499 : 					{
; 1500 : 					for (i=0; i<pilot_data->weapon_types; i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN34@MissionSuc
$LN33@MissionSuc:
	mov	edx, DWORD PTR _i$10[ebp]
	add	edx, 1
	mov	DWORD PTR _i$10[ebp], edx
$LN34@MissionSuc:
	mov	eax, DWORD PTR _pilot_data$11[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	cmp	DWORD PTR _i$10[ebp], ecx
	jge	$LN32@MissionSuc

; 1501 : 						{
; 1502 : 						hit += pilot_data->weapon_data[i].hit;

	mov	edx, DWORD PTR _i$10[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$11[ebp]
	movzx	ecx, BYTE PTR [eax+edx+110]
	add	ecx, DWORD PTR _hit$9[ebp]
	mov	DWORD PTR _hit$9[ebp], ecx

; 1503 : 						if (!(WeaponDataTable[pilot_data->weapon_data[i].weapon_id].GuidanceFlags & WEAP_GUIDED_MASK))

	mov	edx, DWORD PTR _i$10[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$11[ebp]
	movsx	ecx, WORD PTR [eax+edx+104]
	imul	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movzx	eax, WORD PTR [edx+ecx+42]
	and	eax, 31					; 0000001fH
	jne	SHORT $LN31@MissionSuc

; 1504 : 							hit += pilot_data->weapon_data[i].hit;			// double credit for unguided hits

	mov	ecx, DWORD PTR _i$10[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$11[ebp]
	movzx	eax, BYTE PTR [edx+ecx+110]
	add	eax, DWORD PTR _hit$9[ebp]
	mov	DWORD PTR _hit$9[ebp], eax
$LN31@MissionSuc:

; 1505 : 						if (!(WeaponDataTable[pilot_data->weapon_data[i].weapon_id].Flags & WEAP_ONETENTH))

	mov	ecx, DWORD PTR _i$10[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$11[ebp]
	movsx	eax, WORD PTR [edx+ecx+104]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movzx	edx, WORD PTR [ecx+eax+10]
	and	edx, 32768				; 00008000H
	jne	SHORT $LN30@MissionSuc

; 1506 : 							fired += pilot_data->weapon_data[i].fired;		// only count nongun weapons as fired

	mov	eax, DWORD PTR _i$10[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$11[ebp]
	movzx	edx, BYTE PTR [ecx+eax+108]
	add	edx, DWORD PTR _fired$8[ebp]
	mov	DWORD PTR _fired$8[ebp], edx
$LN30@MissionSuc:

; 1507 : 						}

	jmp	$LN33@MissionSuc
$LN32@MissionSuc:

; 1508 : 					kills += pilot_data->ag_kills + pilot_data->an_kills*4;

	mov	eax, DWORD PTR _pilot_data$11[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	mov	edx, DWORD PTR _pilot_data$11[ebp]
	movzx	eax, BYTE PTR [edx+70]
	add	ecx, DWORD PTR _kills$4[ebp]
	lea	ecx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _kills$4[ebp], ecx

; 1509 : 					pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$11[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$11[ebp], eax

; 1510 : 					}

	jmp	$LN36@MissionSuc
$LN35@MissionSuc:

; 1511 : 				if (kills > 4)

	cmp	DWORD PTR _kills$4[ebp], 4
	jle	SHORT $LN29@MissionSuc

; 1512 : 					{
; 1513 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1514 : 					flight_ptr->failure_code = 13;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 13			; 0000000dH
$LN29@MissionSuc:

; 1515 : 					}
; 1516 : 				if (kills > 0 && ((fired > 0 && ((hit*100)/fired) > 49) || (hit > 0 && !fired)))

	cmp	DWORD PTR _kills$4[ebp], 0
	jle	SHORT $LN28@MissionSuc
	cmp	DWORD PTR _fired$8[ebp], 0
	jle	SHORT $LN26@MissionSuc
	mov	eax, DWORD PTR _hit$9[ebp]
	imul	eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR _fired$8[ebp]
	cmp	eax, 49					; 00000031H
	jg	SHORT $LN27@MissionSuc
$LN26@MissionSuc:
	cmp	DWORD PTR _hit$9[ebp], 0
	jle	SHORT $LN28@MissionSuc
	cmp	DWORD PTR _fired$8[ebp], 0
	jne	SHORT $LN28@MissionSuc
$LN27@MissionSuc:

; 1517 : 					{
; 1518 : 					retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1519 : 					flight_ptr->failure_code = 11;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 11			; 0000000bH

; 1520 : 					}
; 1521 : 				else

	jmp	SHORT $LN25@MissionSuc
$LN28@MissionSuc:

; 1522 : 					{
; 1523 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1524 : 					flight_ptr->failure_code = 12;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 12			; 0000000cH
$LN25@MissionSuc:

; 1525 : 					}
; 1526 : 				}
; 1527 : 			else

	jmp	SHORT $LN24@MissionSuc
$LN38@MissionSuc:

; 1528 : 				flight_ptr->failure_code = 10;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 10			; 0000000aH
$LN24@MissionSuc:

; 1529 : 			break;

	jmp	$LN118@MissionSuc
$LN23@MissionSuc:

; 1530 : 		case AMIS_ONCALLCAS:
; 1531 : 			// Check to see that contact was made with FAC
; 1532 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_TO_TARGET)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 33554432				; 02000000H
	je	SHORT $LN22@MissionSuc

; 1533 : 				{
; 1534 : 				if (flight_ptr->status_flags & MISEVAL_FLIGHT_OFF_STATION)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 536870912				; 20000000H
	je	SHORT $LN21@MissionSuc

; 1535 : 					{
; 1536 : 					retval = Failed;

	mov	DWORD PTR _retval$[ebp], 0

; 1537 : 					flight_ptr->failure_code = 58;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 58			; 0000003aH

; 1538 : 					}
; 1539 : 				else

	jmp	SHORT $LN20@MissionSuc
$LN21@MissionSuc:

; 1540 : 					{
; 1541 : 					retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1542 : 					flight_ptr->failure_code = 52;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 52			; 00000034H
$LN20@MissionSuc:

; 1543 : 					}
; 1544 : 				}
; 1545 : 			else

	jmp	SHORT $LN19@MissionSuc
$LN22@MissionSuc:

; 1546 : 				flight_ptr->failure_code = 51;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 51			; 00000033H
$LN19@MissionSuc:

; 1547 : 			break;

	jmp	$LN118@MissionSuc
$LN18@MissionSuc:

; 1548 : 		case AMIS_RECON: 	
; 1549 : 		case AMIS_BDA:
; 1550 : 		case AMIS_RECONPATROL:
; 1551 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_TARGET_HIT)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 65536				; 00010000H
	je	SHORT $LN17@MissionSuc

; 1552 : 				{
; 1553 : 				flight_ptr->failure_code = 15;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 15			; 0000000fH

; 1554 : 				retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1555 : 				}
; 1556 : 			else

	jmp	SHORT $LN16@MissionSuc
$LN17@MissionSuc:

; 1557 : 				flight_ptr->failure_code = 16;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 16			; 00000010H
$LN16@MissionSuc:

; 1558 : 			break;

	jmp	$LN118@MissionSuc
$LN15@MissionSuc:

; 1559 : 		case AMIS_AWACS:    
; 1560 : 		case AMIS_JSTAR:     
; 1561 : 		case AMIS_TANKER:    
; 1562 : 		case AMIS_ECM:	
; 1563 : 		case AMIS_FAC:
; 1564 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_OFF_STATION)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 536870912				; 20000000H
	je	SHORT $LN14@MissionSuc

; 1565 : 				{
; 1566 : 				retval = Failed;

	mov	DWORD PTR _retval$[ebp], 0

; 1567 : 				flight_ptr->failure_code = 58;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 58			; 0000003aH
	jmp	SHORT $LN9@MissionSuc
$LN14@MissionSuc:

; 1568 : 				}
; 1569 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_RELIEVED)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 268435456				; 10000000H
	je	SHORT $LN12@MissionSuc

; 1570 : 				{
; 1571 : 				retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2

; 1572 : 				flight_ptr->failure_code = 56;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 56			; 00000038H
	jmp	SHORT $LN9@MissionSuc
$LN12@MissionSuc:

; 1573 : 				}
; 1574 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_STATION_OVER)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 67108864				; 04000000H
	je	SHORT $LN10@MissionSuc

; 1575 : 				{
; 1576 : 				retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1577 : 				flight_ptr->failure_code = 55;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 55			; 00000037H

; 1578 : 				}
; 1579 : 			else

	jmp	SHORT $LN9@MissionSuc
$LN10@MissionSuc:

; 1580 : 				flight_ptr->failure_code = 57;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 57			; 00000039H
$LN9@MissionSuc:

; 1581 : 			break;

	jmp	SHORT $LN118@MissionSuc
$LN8@MissionSuc:

; 1582 : 		case AMIS_SAR:       
; 1583 : 		case AMIS_AIRCAV:  
; 1584 : 		case AMIS_AIRLIFT:   
; 1585 : 			if (flight_ptr->status_flags & MISEVAL_FLIGHT_DESTROYED)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 2
	je	SHORT $LN7@MissionSuc

; 1586 : 				flight_ptr->failure_code = 30;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 30			; 0000001eH
	jmp	SHORT $LN4@MissionSuc
$LN7@MissionSuc:

; 1587 : 			else if (flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_TO_TARGET)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, 33554432				; 02000000H
	je	SHORT $LN5@MissionSuc

; 1588 : 				{
; 1589 : 				flight_ptr->failure_code = 60;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+96], 60			; 0000003cH

; 1590 : 				retval = Success;

	mov	DWORD PTR _retval$[ebp], 3

; 1591 : 				}
; 1592 : 			else

	jmp	SHORT $LN4@MissionSuc
$LN5@MissionSuc:

; 1593 : 				flight_ptr->failure_code = 61;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+96], 61			; 0000003dH
$LN4@MissionSuc:

; 1594 : 			break;

	jmp	SHORT $LN118@MissionSuc
$LN3@MissionSuc:

; 1595 : 		default:
; 1596 : 			flight_ptr->failure_code = 99;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 99			; 00000063H
$LN118@MissionSuc:

; 1597 : 			break;
; 1598 : 		}
; 1599 : 
; 1600 : 	// If we didn't fly it all the way home, knock off one success level
; 1601 : 	if (retval < Failed && !(flight_ptr->status_flags & MISEVAL_FLIGHT_GOT_HOME))

	cmp	DWORD PTR _retval$[ebp], 0
	jge	SHORT $LN2@MissionSuc
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 134217728				; 08000000H
	jne	SHORT $LN2@MissionSuc

; 1602 : 		retval -= 1;

	mov	eax, DWORD PTR _retval$[ebp]
	sub	eax, 1
	mov	DWORD PTR _retval$[ebp], eax
$LN2@MissionSuc:

; 1603 : 
; 1604 : 	// If we didn't fly it from the start, cap success at Partial.
; 1605 : 	if (retval == Success && (flight_ptr->status_flags & MISEVAL_FLIGHT_STARTED_LATE))

	cmp	DWORD PTR _retval$[ebp], 3
	jne	SHORT $LN1@MissionSuc
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	and	edx, 16777216				; 01000000H
	je	SHORT $LN1@MissionSuc

; 1606 : 		retval = PartSuccess;

	mov	DWORD PTR _retval$[ebp], 2
$LN1@MissionSuc:

; 1607 : 
; 1608 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN131@MissionSuc:

; 1609 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN134@MissionSuc:
	DD	$LN117@MissionSuc
	DD	$LN104@MissionSuc
	DD	$LN86@MissionSuc
	DD	$LN93@MissionSuc
	DD	$LN76@MissionSuc
	DD	$LN48@MissionSuc
	DD	$LN57@MissionSuc
	DD	$LN15@MissionSuc
	DD	$LN23@MissionSuc
	DD	$LN39@MissionSuc
	DD	$LN18@MissionSuc
	DD	$LN8@MissionSuc
	DD	$LN3@MissionSuc
$LN133@MissionSuc:
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	2
	DB	12					; 0000000cH
	DB	3
	DB	4
	DB	5
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	7
	DB	8
	DB	5
	DB	5
	DB	9
	DB	9
	DB	9
	DB	7
	DB	7
	DB	7
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	7
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	5
	DB	9
	DB	10					; 0000000aH
?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ENDP ; MissionEvaluationClass::MissionSuccess
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_pilotnumber$1 = -528					; size = 4
_CurrentTime$2 = -524					; size = 8
_filename$ = -516					; size = 4
tv228 = -512						; size = 4
tv242 = -508						; size = 4
tv253 = -504						; size = 4
_humansexitedflight$3 = -500				; size = 4
_event$4 = -496						; size = 4
_tmpevent$5 = -492					; size = 4
_j$6 = -488						; size = 4
_i$7 = -484						; size = 4
_pilotsinflight$8 = -480				; size = 4
tv245 = -476						; size = 4
_humansinflight$9 = -472				; size = 4
_gtype$10 = -468					; size = 4
_Time$11 = -464						; size = 2
_Date$12 = -460						; size = 2
_this$ = -456						; size = 4
_HasDoneFLightData$13 = -449				; size = 1
_j$14 = -448						; size = 4
_status$15 = -444					; size = 4
_flight_ptr$ = -440					; size = 4
_fp$ = -436						; size = 4
_pilot_data$ = -432					; size = 4
_Buffer$16 = -428					; size = 100
_tmp2$17 = -328						; size = 30
_Bufferb$18 = -296					; size = 40
_logstring$ = -256					; size = 250
__$ArrayPad$ = -4					; size = 4
_fpsm$ = 8						; size = 4
?ServerFileLog@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z PROC ; MissionEvaluationClass::ServerFileLog
; _this$ = ecx

; 719  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 528				; 00000210H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 720  : if (!g_bLogEvents) return;

	movzx	eax, BYTE PTR ?g_bLogEvents@@3_NA	; g_bLogEvents
	test	eax, eax
	jne	SHORT $LN51@ServerFile
	jmp	$LN52@ServerFile
$LN51@ServerFile:

; 721  : 	char *filename;
; 722  : 	char logstring [250];
; 723  : 	filename = "debrief.txt";

	mov	DWORD PTR _filename$[ebp], OFFSET ??_C@_0M@MGCAHMKC@debrief?4txt?$AA@

; 724  : 	FILE *fp = fopen(filename, "a");

	push	OFFSET ??_C@_01MCMALHOG@a?$AA@
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 725  : ///////////////////////////////////////////////////////////
; 726  : 	PilotDataClass		*pilot_data;
; 727  : 	FlightDataClass		*flight_ptr;
; 728  : 
; 729  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 730  : 
; 731  : 	player_end_time = vuxGameTime;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [edx+180], eax

; 732  : 	logbook_data.AircraftInPackage = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], 0

; 733  : 	friendly_losses = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+21], 0

; 734  : 	pack_success = MissionSuccess(package_element);	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ; MissionEvaluationClass::MissionSuccess
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], al

; 735  : 
; 736  : 	flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN50@ServerFile:

; 737  : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN49@ServerFile

; 738  : 		{
; 739  : 		if (flight_ptr->camp_id)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+36]
	test	eax, eax
	je	$LN48@ServerFile

; 740  : 			{
; 741  : 			// This flight was active at the mission start
; 742  : 			flight_ptr->mission_success = MissionSuccess(flight_ptr);

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ; MissionEvaluationClass::MissionSuccess
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+95], al

; 743  : 			pilot_data = flight_ptr->pilot_list;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 744  : 			flight_ptr->finish_aircraft = flight_ptr->start_aircraft;	

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	cl, BYTE PTR [eax+58]
	mov	BYTE PTR [edx+59], cl

; 745  : 
; 746  : // find out if we are the only human in this flight
; 747  : 			int humansinflight=0;

	mov	DWORD PTR _humansinflight$9[ebp], 0

; 748  : 			int humansexitedflight =0;

	mov	DWORD PTR _humansexitedflight$3[ebp], 0

; 749  : 			int pilotsinflight=0;

	mov	DWORD PTR _pilotsinflight$8[ebp], 0
$LN47@ServerFile:

; 750  : 			while(pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN46@ServerFile

; 751  : 				{
; 752  : 					pilotsinflight++;

	mov	edx, DWORD PTR _pilotsinflight$8[ebp]
	add	edx, 1
	mov	DWORD PTR _pilotsinflight$8[ebp], edx

; 753  : 					if (pilot_data->pilot_flags & PFLAG_PLAYER_CONTROLLED)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	and	ecx, 1
	je	SHORT $LN45@ServerFile

; 754  : 					{
; 755  : 						if (fpsm->dataBlock.pilotID == pilot_data->pilot_slot)

	mov	edx, DWORD PTR _fpsm$[ebp]
	movzx	eax, BYTE PTR [edx+87]
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	eax, edx
	jne	SHORT $LN44@ServerFile

; 756  : 						pilot_data->donefiledebrief = TRUE;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+82], 1
$LN44@ServerFile:

; 757  : 
; 758  : 						humansinflight++;

	mov	ecx, DWORD PTR _humansinflight$9[ebp]
	add	ecx, 1
	mov	DWORD PTR _humansinflight$9[ebp], ecx

; 759  : 						if (pilot_data->donefiledebrief)

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+82]
	test	eax, eax
	je	SHORT $LN45@ServerFile

; 760  : 						humansexitedflight++;

	mov	ecx, DWORD PTR _humansexitedflight$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _humansexitedflight$3[ebp], ecx
$LN45@ServerFile:

; 761  : 					}
; 762  : 					pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 763  : 				}

	jmp	$LN47@ServerFile
$LN46@ServerFile:

; 764  : // goto next flight there's either no humans in it or theres still humans flying
; 765  : 			if (!humansinflight || humansinflight > humansexitedflight) 

	cmp	DWORD PTR _humansinflight$9[ebp], 0
	je	SHORT $LN41@ServerFile
	mov	ecx, DWORD PTR _humansinflight$9[ebp]
	cmp	ecx, DWORD PTR _humansexitedflight$3[ebp]
	jle	SHORT $LN42@ServerFile
$LN41@ServerFile:

; 766  : 				{
; 767  : 				flight_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 768  : 				continue;

	jmp	$LN50@ServerFile
$LN42@ServerFile:

; 769  : 				}
; 770  : 
; 771  : // this is the last human player in the flight...do the whole flight output.
; 772  : 			bool HasDoneFLightData = FALSE;

	mov	BYTE PTR _HasDoneFLightData$13[ebp], 0

; 773  : 			pilot_data = flight_ptr->pilot_list;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 774  : 			int pilotnumber = 0;

	mov	DWORD PTR _pilotnumber$1[ebp], 0
$LN40@ServerFile:

; 775  : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN48@ServerFile

; 776  : 				{
; 777  : 				if (fpsm->dataBlock.campID && fpsm->dataBlock.campID == flight_ptr->camp_id && 
; 778  : 					(fpsm->dataBlock.pilotID == pilot_data->pilot_slot || pilot_data->donefiledebrief))

	mov	eax, DWORD PTR _fpsm$[ebp]
	movzx	ecx, WORD PTR [eax+84]
	test	ecx, ecx
	je	$LN38@ServerFile
	mov	edx, DWORD PTR _fpsm$[ebp]
	movzx	eax, WORD PTR [edx+84]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	cmp	eax, edx
	jne	$LN38@ServerFile
	mov	eax, DWORD PTR _fpsm$[ebp]
	movzx	ecx, BYTE PTR [eax+87]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	ecx, eax
	je	SHORT $LN37@ServerFile
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+82]
	test	edx, edx
	je	$LN38@ServerFile
$LN37@ServerFile:

; 779  : 					{	
; 780  : 					if (!HasDoneFLightData)

	movzx	eax, BYTE PTR _HasDoneFLightData$13[ebp]
	test	eax, eax
	jne	$LN36@ServerFile

; 781  : 						{
; 782  : 							HasDoneFLightData = TRUE;

	mov	BYTE PTR _HasDoneFLightData$13[ebp], 1

; 783  : 							sprintf(logstring, "\n\n\n--------------------------------------------------------\n");

	push	OFFSET ??_C@_0DN@GBIKDBEL@?6?6?6?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 784  : 							fputs(logstring, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 785  : 
; 786  : 							FILETIME	CurrentTime;
; 787  : 							GetSystemTimeAsFileTime(&CurrentTime);

	lea	ecx, DWORD PTR _CurrentTime$2[ebp]
	push	ecx
	call	DWORD PTR __imp__GetSystemTimeAsFileTime@4

; 788  : 							char Buffer[100];
; 789  : 
; 790  : 							WORD Date, Time;
; 791  : 							if (FileTimeToLocalFileTime(&CurrentTime, &CurrentTime) &&
; 792  : 										FileTimeToDosDateTime(&CurrentTime, &Date, &Time))

	lea	edx, DWORD PTR _CurrentTime$2[ebp]
	push	edx
	lea	eax, DWORD PTR _CurrentTime$2[ebp]
	push	eax
	call	DWORD PTR __imp__FileTimeToLocalFileTime@8
	test	eax, eax
	je	$LN35@ServerFile
	lea	ecx, DWORD PTR _Time$11[ebp]
	push	ecx
	lea	edx, DWORD PTR _Date$12[ebp]
	push	edx
	lea	eax, DWORD PTR _CurrentTime$2[ebp]
	push	eax
	call	DWORD PTR __imp__FileTimeToDosDateTime@12
	test	eax, eax
	je	$LN35@ServerFile

; 793  : 								{
; 794  : 									wsprintf(Buffer, "%d/%d/%d %02d:%02d:%02d",
; 795  : 												(Date / 32) & 15, Date & 31, (Date / 512) + 1980,
; 796  : 												(Time / 2048), (Time / 32) & 63, (Time & 31) * 2);

	movzx	ecx, WORD PTR _Time$11[ebp]
	and	ecx, 31					; 0000001fH
	shl	ecx, 1
	push	ecx
	movzx	eax, WORD PTR _Time$11[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	and	eax, 63					; 0000003fH
	push	eax
	movzx	eax, WORD PTR _Time$11[ebp]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	push	eax
	movzx	eax, WORD PTR _Date$12[ebp]
	cdq
	and	edx, 511				; 000001ffH
	add	eax, edx
	sar	eax, 9
	add	eax, 1980				; 000007bcH
	push	eax
	movzx	edx, WORD PTR _Date$12[ebp]
	and	edx, 31					; 0000001fH
	push	edx
	movzx	eax, WORD PTR _Date$12[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	and	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_0BI@HKCLIKLE@?$CFd?1?$CFd?1?$CFd?5?$CF02d?3?$CF02d?3?$CF02d?$AA@
	lea	eax, DWORD PTR _Buffer$16[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfA
	add	esp, 32					; 00000020H
$LN35@ServerFile:

; 797  : 								}
; 798  : 
; 799  : 							sprintf(logstring, "RECORD BEGIN TIMESTAMP %s.\n", Buffer);

	lea	ecx, DWORD PTR _Buffer$16[ebp]
	push	ecx
	push	OFFSET ??_C@_0BM@IKDBNCFO@RECORD?5BEGIN?5TIMESTAMP?5?$CFs?4?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 800  : 							fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 801  : 
; 802  : 							if (vuLocalSessionEntity && FalconLocalGame) 

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	$LN34@ServerFile
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN54@ServerFile
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv228[ebp], eax
	jmp	SHORT $LN55@ServerFile
$LN54@ServerFile:
	mov	DWORD PTR tv228[ebp], 0
$LN55@ServerFile:
	cmp	DWORD PTR tv228[ebp], 0
	je	$LN34@ServerFile

; 803  : 								{
; 804  : 								char *gtype;
; 805  : 								switch (FalconLocalGame->GetGameType()) 

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN56@ServerFile
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv242[ebp], eax
	jmp	SHORT $LN57@ServerFile
$LN56@ServerFile:
	mov	DWORD PTR tv242[ebp], 0
$LN57@ServerFile:
	mov	ecx, DWORD PTR tv242[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	DWORD PTR tv245[ebp], eax
	mov	edx, DWORD PTR tv245[ebp]
	sub	edx, 1
	mov	DWORD PTR tv245[ebp], edx
	cmp	DWORD PTR tv245[ebp], 3
	ja	SHORT $LN27@ServerFile
	mov	eax, DWORD PTR tv245[ebp]
	jmp	DWORD PTR $LN61@ServerFile[eax*4]
$LN31@ServerFile:

; 806  : 									{
; 807  : 										case 	game_InstantAction:
; 808  : 											gtype = "Instant Action";

	mov	DWORD PTR _gtype$10[ebp], OFFSET ??_C@_0P@GHEJFKFN@Instant?5Action?$AA@

; 809  : 											break;

	jmp	SHORT $LN32@ServerFile
$LN30@ServerFile:

; 810  : 										case 	game_Dogfight:
; 811  : 											gtype = "DogFight";

	mov	DWORD PTR _gtype$10[ebp], OFFSET ??_C@_08DLBHGMLL@DogFight?$AA@

; 812  : 											break;

	jmp	SHORT $LN32@ServerFile
$LN29@ServerFile:

; 813  : 										case game_TacticalEngagement:
; 814  : 											gtype = "Tactical Engagement";

	mov	DWORD PTR _gtype$10[ebp], OFFSET ??_C@_0BE@NJKPNHIC@Tactical?5Engagement?$AA@

; 815  : 											break;

	jmp	SHORT $LN32@ServerFile
$LN28@ServerFile:

; 816  : 										case game_Campaign:
; 817  : 											gtype = "Campaign";

	mov	DWORD PTR _gtype$10[ebp], OFFSET ??_C@_08FHHBCJKK@Campaign?$AA@

; 818  : 											break;

	jmp	SHORT $LN32@ServerFile
$LN27@ServerFile:

; 819  : 										default:
; 820  : 											gtype = "<unknown>";

	mov	DWORD PTR _gtype$10[ebp], OFFSET ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@
$LN32@ServerFile:

; 821  : 											break;				
; 822  : 									}
; 823  : 								sprintf(logstring, "Game is %s type %s\r\n", gtype,
; 824  : 								gCommsMgr && gCommsMgr->Online() ? "Networked" : "Local");

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN58@ServerFile
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN58@ServerFile
	mov	DWORD PTR tv253[ebp], OFFSET ??_C@_09FCDNMMPE@Networked?$AA@
	jmp	SHORT $LN59@ServerFile
$LN58@ServerFile:
	mov	DWORD PTR tv253[ebp], OFFSET ??_C@_05IEALKJIG@Local?$AA@
$LN59@ServerFile:
	mov	ecx, DWORD PTR tv253[ebp]
	push	ecx
	mov	edx, DWORD PTR _gtype$10[ebp]
	push	edx
	push	OFFSET ??_C@_0BF@OIBLHPO@Game?5is?5?$CFs?5type?5?$CFs?$AN?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 825  : 								fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8
$LN34@ServerFile:

; 826  : 								}
; 827  : 
; 828  : 							if (current_tactical_mission)

	cmp	DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A, 0 ; current_tactical_mission
	je	SHORT $LN26@ServerFile

; 829  : 							{
; 830  : 							sprintf(logstring, "Mission name: %s\n",current_tactical_mission->get_title());

	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?get_title@tactical_mission@@QAEPADXZ	; tactical_mission::get_title
	push	eax
	push	OFFSET ??_C@_0BC@CHCLLJFL@Mission?5name?3?5?$CFs?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 831  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8
$LN26@ServerFile:

; 832  : 							}
; 833  : 
; 834  : 							_TCHAR Bufferb[40] = "";

	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _Bufferb$18[ebp], al
	push	39					; 00000027H
	push	0
	lea	ecx, DWORD PTR _Bufferb$18[ebp+1]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 835  : 							AddIndexedStringToBuffer(300+flight_ptr->mission, Bufferb);

	lea	edx, DWORD PTR _Bufferb$18[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	add	ecx, 300				; 0000012cH
	push	ecx
	call	?AddIndexedStringToBuffer@@YAXHPAD@Z	; AddIndexedStringToBuffer
	add	esp, 8

; 836  : 							sprintf(logstring, "\nMission Type: %s \n", Bufferb);

	lea	edx, DWORD PTR _Bufferb$18[ebp]
	push	edx
	push	OFFSET ??_C@_0BE@BCFAANAH@?6Mission?5Type?3?5?$CFs?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 837  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 838  : 
; 839  : 							sprintf(logstring, "Flight Unique Id: %d\n", flight_ptr->name);

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@EEBFOKCB@Flight?5Unique?5Id?3?5?$CFd?6?$AA@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 840  : 							fputs(logstring, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 841  : 
; 842  : 							sprintf(logstring, "%d Ship Flight\n", pilotsinflight-humansinflight);

	mov	ecx, DWORD PTR _pilotsinflight$8[ebp]
	sub	ecx, DWORD PTR _humansinflight$9[ebp]
	push	ecx
	push	OFFSET ??_C@_0BA@EOLDELII@?$CFd?5Ship?5Flight?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 843  : 							fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 844  : 
; 845  : 							sprintf(logstring, "Ac type: %s \n",flight_data->aircraft_name);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	add	eax, 48					; 00000030H
	push	eax
	push	OFFSET ??_C@_0O@MMEDOBLI@Ac?5type?3?5?$CFs?5?6?$AA@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 846  : 							fputs(logstring, fp);	

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 847  : 
; 848  : 							_TCHAR tmp2[30];
; 849  : 							if (gLangIDNum == F4LANG_GERMAN)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 3		; gLangIDNum
	jne	SHORT $LN25@ServerFile

; 850  : 							ReadIndexedString(ConvertTeamToStringIndex(fpsm->dataBlock.side, F4LANG_FEMININE),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$17[ebp]
	push	ecx
	push	0
	push	0
	push	1
	mov	edx, DWORD PTR _fpsm$[ebp]
	movzx	eax, BYTE PTR [edx+88]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH

; 851  : 							else

	jmp	SHORT $LN24@ServerFile
$LN25@ServerFile:

; 852  : 							ReadIndexedString(ConvertTeamToStringIndex(fpsm->dataBlock.side),tmp2,29);

	push	29					; 0000001dH
	lea	ecx, DWORD PTR _tmp2$17[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _fpsm$[ebp]
	movzx	eax, BYTE PTR [edx+88]
	push	eax
	call	?ConvertTeamToStringIndex@@YAHHHHH@Z	; ConvertTeamToStringIndex
	add	esp, 16					; 00000010H
	push	eax
	call	?ReadIndexedString@@YAXHPADH@Z		; ReadIndexedString
	add	esp, 12					; 0000000cH
$LN24@ServerFile:

; 853  : 
; 854  : 							sprintf(logstring, "Contry: %s \n",tmp2);

	lea	ecx, DWORD PTR _tmp2$17[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@IDPGLABD@Contry?3?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 855  : 							fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 856  : 	///flight events
; 857  : 							sprintf(logstring, "\nFLIGHT EVENTS\n");

	push	OFFSET ??_C@_0BA@NIINDLH@?6FLIGHT?5EVENTS?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 858  : 							fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 859  : 
; 860  : 							EventElement *event = flight_ptr->root_event;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	DWORD PTR _event$4[ebp], eax

; 861  : 							for (int j=0; j<flight_ptr->events; j++)

	mov	DWORD PTR _j$6[ebp], 0
	jmp	SHORT $LN23@ServerFile
$LN22@ServerFile:
	mov	ecx, DWORD PTR _j$6[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$6[ebp], ecx
$LN23@ServerFile:
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movsx	eax, WORD PTR [edx+156]
	cmp	DWORD PTR _j$6[ebp], eax
	jge	SHORT $LN36@ServerFile

; 862  : 								{
; 863  : 								sprintf(logstring, "Event %s \n", event->eventString);

	mov	ecx, DWORD PTR _event$4[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	OFFSET ??_C@_0L@LGCHIIGB@Event?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 864  : 								fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 865  : 								event = event->next;

	mov	edx, DWORD PTR _event$4[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	DWORD PTR _event$4[ebp], eax

; 866  : 								}

	jmp	SHORT $LN22@ServerFile
$LN36@ServerFile:

; 867  : 
; 868  : 						}
; 869  : /// player data						
; 870  : 						sprintf(logstring, "\n-------------\n");

	push	OFFSET ??_C@_0BA@MJCDAMBC@?6?9?9?9?9?9?9?9?9?9?9?9?9?9?6?$AA@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 871  : 						fputs(logstring, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 872  : 						sprintf(logstring, "PILOT SLOT %d:\n\n",pilot_data->aircraft_slot+1);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	add	edx, 1
	push	edx
	push	OFFSET ??_C@_0BB@OPDOHJIC@PILOT?5SLOT?5?$CFd?3?6?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 873  : 						fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 874  : 
; 875  : 						if (pilot_data->pilot_flags & PFLAG_PLAYER_CONTROLLED)

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	and	ecx, 1
	je	SHORT $LN20@ServerFile

; 876  : 						sprintf(logstring, "Human Player: %s \n",pilot_data->pilot_name);

	mov	edx, DWORD PTR _pilot_data$[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@CGHEKCME@Human?5Player?3?5?$CFs?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN19@ServerFile
$LN20@ServerFile:

; 877  : 				
; 878  : 						else sprintf(logstring, "AI Player: %s \n",pilot_data->pilot_name);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BA@BMFMJKBJ@AI?5Player?3?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN19@ServerFile:

; 879  : 						fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 880  : 
; 881  : 						sprintf(logstring, "Callsign: %s \n",pilot_data->pilot_callsign);

	mov	edx, DWORD PTR _pilot_data$[ebp]
	add	edx, 30					; 0000001eH
	push	edx
	push	OFFSET ??_C@_0P@FFIOHKIF@Callsign?3?5?$CFs?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 882  : 						fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 883  : 
; 884  : 						char *status;
; 885  : 						if (pilot_data->pilot_status == PILOT_AVAILABLE) status = " - OK";

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+65]
	test	ecx, ecx
	jne	SHORT $LN18@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_05LILJEDNC@?5?9?5OK?$AA@
$LN18@ServerFile:

; 886  : 						if (pilot_data->pilot_status == PILOT_KIA) status = " - KIA";

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+65]
	cmp	eax, 1
	jne	SHORT $LN17@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_06NOBDHMG@?5?9?5KIA?$AA@
$LN17@ServerFile:

; 887  : 						if (pilot_data->pilot_status == PILOT_MIA) status = " - MIA";

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+65]
	cmp	edx, 2
	jne	SHORT $LN16@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_06CIIKGIBK@?5?9?5MIA?$AA@
$LN16@ServerFile:

; 888  : 						if (pilot_data->pilot_status == PILOT_RESCUED) status = " - RESCUED";

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+65]
	cmp	ecx, 3
	jne	SHORT $LN15@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0L@KAFIAHBI@?5?9?5RESCUED?$AA@
$LN15@ServerFile:

; 889  : 						if (pilot_data->pilot_status == PILOT_IN_USE) status = " - OK";

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+65]
	cmp	eax, 4
	jne	SHORT $LN14@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_05LILJEDNC@?5?9?5OK?$AA@
$LN14@ServerFile:

; 890  : 
; 891  : 						sprintf(logstring, "Pilot status %s \n",status);

	mov	ecx, DWORD PTR _status$15[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@NECBLOHJ@Pilot?5status?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 892  : 						fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 893  : 
; 894  : 						if (pilot_data->aircraft_status == VIS_NORMAL) status = " - OK";

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	test	eax, eax
	jne	SHORT $LN13@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_05LILJEDNC@?5?9?5OK?$AA@
$LN13@ServerFile:

; 895  : 						if (pilot_data->aircraft_status == VIS_REPAIRED) status = " - REPAIRED";

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	cmp	edx, 1
	jne	SHORT $LN12@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0M@JCOFIOFE@?5?9?5REPAIRED?$AA@
$LN12@ServerFile:

; 896  : 						if (pilot_data->aircraft_status == VIS_DAMAGED) status = " - DAMAGED";

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	cmp	ecx, 2
	jne	SHORT $LN11@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0L@FHMPLEDI@?5?9?5DAMAGED?$AA@
$LN11@ServerFile:

; 897  : 						if (pilot_data->aircraft_status== VIS_DESTROYED) status = " - DESTROYED";

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	cmp	eax, 3
	jne	SHORT $LN10@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0N@IDDEJMDM@?5?9?5DESTROYED?$AA@
$LN10@ServerFile:

; 898  : 						if (pilot_data->aircraft_status == VIS_LEFT_DEST) status = " - DAMAGED Left side ";

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	cmp	edx, 4
	jne	SHORT $LN9@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0BG@GABCFBAO@?5?9?5DAMAGED?5Left?5side?5?$AA@
$LN9@ServerFile:

; 899  : 						if (pilot_data->aircraft_status == VIS_RIGHT_DEST) status = " - DAMAGED Right side";

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	cmp	ecx, 5
	jne	SHORT $LN8@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0BG@LDLHFPBO@?5?9?5DAMAGED?5Right?5side?$AA@
$LN8@ServerFile:

; 900  : 						if (pilot_data->aircraft_status == VIS_BOTH_DEST) status = " - DAMAGED Both sides";

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	cmp	eax, 6
	jne	SHORT $LN7@ServerFile
	mov	DWORD PTR _status$15[ebp], OFFSET ??_C@_0BG@BNPCKKMF@?5?9?5DAMAGED?5Both?5sides?$AA@
$LN7@ServerFile:

; 901  : 
; 902  : 						sprintf(logstring, "Aircraft status %s \n",status);

	mov	ecx, DWORD PTR _status$15[ebp]
	push	ecx
	push	OFFSET ??_C@_0BF@GEHCBOF@Aircraft?5status?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 903  : 						fputs(logstring, fp);				

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 904  : 						
; 905  : 						sprintf(logstring, "AA Kills %d \n",pilot_data->aa_kills );

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+67]
	push	eax
	push	OFFSET ??_C@_0O@MKLLNEPG@AA?5Kills?5?$CFd?5?6?$AA@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 906  : 						fputs(logstring, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 907  : 					
; 908  : 						sprintf(logstring, "AG Kills %d \n",pilot_data->ag_kills );

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+68]
	push	edx
	push	OFFSET ??_C@_0O@GKFOALCL@AG?5Kills?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 909  : 						fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 910  : 
; 911  : 						sprintf(logstring, "AS Kills %d \n",pilot_data->as_kills);

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	push	ecx
	push	OFFSET ??_C@_0O@BOOAMHGH@AS?5Kills?5?$CFd?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 912  : 						fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 913  : 
; 914  : 						sprintf(logstring, "AN Kills %d \n",pilot_data->an_kills);

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+70]
	push	eax
	push	OFFSET ??_C@_0O@ONMLABMD@AN?5Kills?5?$CFd?5?6?$AA@
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 915  : 						fputs(logstring, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_fputs
	add	esp, 8

; 916  : 
; 917  : 						sprintf(logstring, "Shoot At %d \n",pilot_data->shot_at);

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+72]
	push	edx
	push	OFFSET ??_C@_0O@EABMAKLM@Shoot?5At?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 918  : 						fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 919  : 
; 920  : 						sprintf(logstring, "Other Player Kills %d \n",pilot_data->player_kills);

	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+71]
	push	ecx
	push	OFFSET ??_C@_0BI@LGLGDDGC@Other?5Player?5Kills?5?$CFd?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 921  : 						fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 922  : 
; 923  : 						sprintf(logstring, "\nWEAPON DATA \n");

	push	OFFSET ??_C@_0P@KGHBHCCE@?6WEAPON?5DATA?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 924  : 						fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 925  : 						for (int j=0; j<pilot_data->weapon_types; j++)

	mov	DWORD PTR _j$14[ebp], 0
	jmp	SHORT $LN6@ServerFile
$LN5@ServerFile:
	mov	edx, DWORD PTR _j$14[ebp]
	add	edx, 1
	mov	DWORD PTR _j$14[ebp], edx
$LN6@ServerFile:
	mov	eax, DWORD PTR _pilot_data$[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	cmp	DWORD PTR _j$14[ebp], ecx
	jge	$LN38@ServerFile

; 926  : 							{
; 927  : 							//weapon statistics
; 928  : 							sprintf(logstring, "\nLOADOUT %d: %s \n",j, pilot_data->weapon_data[j].weapon_name);

	mov	edx, DWORD PTR _j$14[ebp]
	imul	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pilot_data$[ebp]
	lea	ecx, DWORD PTR [eax+edx+84]
	push	ecx
	mov	edx, DWORD PTR _j$14[ebp]
	push	edx
	push	OFFSET ??_C@_0BC@FFNAOCDI@?6LOADOUT?5?$CFd?3?5?$CFs?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 929  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 930  : 
; 931  : 							sprintf(logstring, "Starting Load %d \n", pilot_data->weapon_data[j].starting_load);

	mov	eax, DWORD PTR _j$14[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+eax+106]
	push	edx
	push	OFFSET ??_C@_0BD@CKMJDHIO@Starting?5Load?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 932  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 933  : 							sprintf(logstring, "Fired %d \n", pilot_data->weapon_data[j].fired);

	mov	eax, DWORD PTR _j$14[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+108]
	push	edx
	push	OFFSET ??_C@_0L@MGLLPEAD@Fired?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 934  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 935  : 							sprintf(logstring, "Missed %d \n", pilot_data->weapon_data[j].missed);

	mov	eax, DWORD PTR _j$14[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+109]
	push	edx
	push	OFFSET ??_C@_0M@EKLGELON@Missed?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 936  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 937  : 							sprintf(logstring, "Hit %d \n", pilot_data->weapon_data[j].hit);

	mov	eax, DWORD PTR _j$14[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+110]
	push	edx
	push	OFFSET ??_C@_08NDFEGOJK@Hit?5?$CFd?5?6?$AA@
	lea	eax, DWORD PTR _logstring$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 938  : 							fputs(logstring, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_fputs
	add	esp, 8

; 939  : 							// weapon events
; 940  : 							EventElement *tmpevent = pilot_data->weapon_data[j].root_event;

	mov	eax, DWORD PTR _j$14[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+eax+116]
	mov	DWORD PTR _tmpevent$5[ebp], edx

; 941  : 							for (int i=0; i<pilot_data->weapon_data[j].events; i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN3@ServerFile
$LN2@ServerFile:
	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN3@ServerFile:
	mov	ecx, DWORD PTR _j$14[ebp]
	imul	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+ecx+112]
	cmp	DWORD PTR _i$7[ebp], eax
	jge	SHORT $LN1@ServerFile

; 942  : 								{
; 943  : 									sprintf(logstring, "Event %s \n", tmpevent->eventString);

	mov	ecx, DWORD PTR _tmpevent$5[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	OFFSET ??_C@_0L@LGCHIIGB@Event?5?$CFs?5?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 944  : 									fputs(logstring, fp);		

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 945  : 									tmpevent = tmpevent->next;

	mov	edx, DWORD PTR _tmpevent$5[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	DWORD PTR _tmpevent$5[ebp], eax

; 946  : 								}

	jmp	SHORT $LN2@ServerFile
$LN1@ServerFile:

; 947  : 							
; 948  : 							}

	jmp	$LN5@ServerFile
$LN38@ServerFile:

; 949  : 					}
; 950  : 				pilot_data = pilot_data->next_pilot;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	mov	DWORD PTR _pilot_data$[ebp], edx

; 951  : 				}

	jmp	$LN40@ServerFile
$LN48@ServerFile:

; 952  : 			}
; 953  : 		flight_ptr = flight_ptr->next_flight;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 954  : 		}

	jmp	$LN50@ServerFile
$LN49@ServerFile:

; 955  : 
; 956  : 
; 957  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 958  : 
; 959  : 
; 960  : //////////////////////////////////////////////////////////////
; 961  : 	sprintf(logstring, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	lea	edx, DWORD PTR _logstring$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 962  : 	fputs(logstring, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logstring$[ebp]
	push	ecx
	call	_fputs
	add	esp, 8

; 963  : 
; 964  : 
; 965  : 
; 966  : 
; 967  : 	fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4
$LN52@ServerFile:

; 968  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
$LN61@ServerFile:
	DD	$LN31@ServerFile
	DD	$LN30@ServerFile
	DD	$LN29@ServerFile
	DD	$LN28@ServerFile
?ServerFileLog@MissionEvaluationClass@@QAEXPAVFalconPlayerStatusMessage@@@Z ENDP ; MissionEvaluationClass::ServerFileLog
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T1 = -84						; size = 8
tv1097 = -76						; size = 8
_a$2 = -68						; size = 4
_rating$3 = -64						; size = 4
_rating$4 = -60						; size = 4
_vsHuman$5 = -56					; size = 4
tv432 = -52						; size = 4
tv1094 = -48						; size = 4
_o$6 = -44						; size = 4
tv132 = -40						; size = 4
_missions$7 = -36					; size = 4
_missions$8 = -32					; size = 4
_won$9 = -28						; size = 4
tv160 = -24						; size = 4
tv435 = -20						; size = 4
_i$ = -16						; size = 4
_flight_ptr$ = -12					; size = 4
_pilot_data$ = -8					; size = 4
_this$ = -4						; size = 4
?PostMissionEval@MissionEvaluationClass@@QAEHXZ PROC	; MissionEvaluationClass::PostMissionEval
; _this$ = ecx

; 972  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 973  : 	int					i;
; 974  : 	PilotDataClass		*pilot_data;
; 975  : 	FlightDataClass		*flight_ptr;
; 976  : 
; 977  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 978  : #ifdef DEBUG
; 979  : 	gPlayerPilotLock = 0;
; 980  : #endif
; 981  : 	player_end_time = vuxGameTime;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+180], ecx

; 982  : 	logbook_data.AircraftInPackage = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+272], 0

; 983  : 	friendly_losses = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0

; 984  : 	pack_success = MissionSuccess(package_element);	

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ; MissionEvaluationClass::MissionSuccess
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al

; 985  : 
; 986  : 	flight_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _flight_ptr$[ebp], eax
$LN58@PostMissio:

; 987  : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN57@PostMissio

; 988  : 		{
; 989  : 		if (flight_ptr->camp_id)

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movsx	edx, WORD PTR [ecx+36]
	test	edx, edx
	je	$LN56@PostMissio

; 990  : 			{
; 991  : 			// This flight was active at the mission start
; 992  : 			flight_ptr->mission_success = MissionSuccess(flight_ptr);

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MissionSuccess@MissionEvaluationClass@@QAEHPAVFlightDataClass@@@Z ; MissionEvaluationClass::MissionSuccess
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+95], al

; 993  : 			pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 994  : 			flight_ptr->finish_aircraft = flight_ptr->start_aircraft;		

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	al, BYTE PTR [edx+58]
	mov	BYTE PTR [ecx+59], al
$LN55@PostMissio:

; 995  : 			while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN54@PostMissio

; 996  : 				{
; 997  : 				if (FalconLocalGame->GetGameType () != game_Dogfight)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN61@PostMissio
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN62@PostMissio
$LN61@PostMissio:
	mov	DWORD PTR tv132[ebp], 0
$LN62@PostMissio:
	mov	ecx, DWORD PTR tv132[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 2
	je	SHORT $LN53@PostMissio

; 998  : 					{
; 999  : 					pilot_data->score += ScoreAdjustment[flight_ptr->mission_success];

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+95]
	movsx	ecx, WORD PTR ?ScoreAdjustment@@3PAFA[eax*2]
	mov	edx, DWORD PTR _pilot_data$[ebp]
	movsx	eax, WORD PTR [edx+78]
	add	eax, ecx
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [ecx+78], ax

; 1000 : 					pilot_data->score += ScoreAdjustment[pack_success]/2;

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	movsx	eax, WORD PTR ?ScoreAdjustment@@3PAFA[eax*2]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx
$LN53@PostMissio:

; 1001 : 					}
; 1002 : 				switch (pilot_data->pilot_status)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	dl, BYTE PTR [ecx+65]
	mov	BYTE PTR tv160[ebp], dl
	cmp	BYTE PTR tv160[ebp], 0
	jbe	SHORT $LN48@PostMissio
	cmp	BYTE PTR tv160[ebp], 2
	jbe	SHORT $LN50@PostMissio
	cmp	BYTE PTR tv160[ebp], 3
	je	SHORT $LN49@PostMissio
	jmp	SHORT $LN48@PostMissio
$LN50@PostMissio:

; 1003 : 					{
; 1004 : 					case PILOT_KIA:
; 1005 : 					case PILOT_MIA:
; 1006 : 						pilot_data->score += CalcScore (SCORE_PILOT_LOST, 0);

	push	0
	push	1
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 1007 : 						flight_ptr->finish_aircraft--;		

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	dl, BYTE PTR [ecx+59]
	sub	dl, 1
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+59], dl

; 1008 : 						break;

	jmp	SHORT $LN51@PostMissio
$LN49@PostMissio:

; 1009 : 					case PILOT_RESCUED:
; 1010 : 						pilot_data->score += CalcScore (SCORE_PILOT_FOUND, 0);

	push	0
	push	2
	call	?CalcScore@@YAHW4score_type@@H@Z	; CalcScore
	add	esp, 8
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	add	edx, eax
	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [eax+78], dx

; 1011 : 						flight_ptr->finish_aircraft--;		

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	dl, BYTE PTR [ecx+59]
	sub	dl, 1
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+59], dl
$LN48@PostMissio:
$LN51@PostMissio:

; 1012 : 						break;
; 1013 : 					default:
; 1014 : 						break;
; 1015 : 					}
; 1016 : 				if (pilot_data->score > 16)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	cmp	edx, 16					; 00000010H
	jle	SHORT $LN47@PostMissio

; 1017 : 					pilot_data->rating = Excellent;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+80], 4
	jmp	SHORT $LN40@PostMissio
$LN47@PostMissio:

; 1018 : 				else if (pilot_data->score > 6)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	cmp	edx, 6
	jle	SHORT $LN45@PostMissio

; 1019 : 					pilot_data->rating = Good;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+80], 3
	jmp	SHORT $LN40@PostMissio
$LN45@PostMissio:

; 1020 : 				else if (pilot_data->score > -6)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	cmp	edx, -6					; fffffffaH
	jle	SHORT $LN43@PostMissio

; 1021 : 					pilot_data->rating = Average;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+80], 2
	jmp	SHORT $LN40@PostMissio
$LN43@PostMissio:

; 1022 : 				else if (pilot_data->score > -16)

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movsx	edx, WORD PTR [ecx+78]
	cmp	edx, -16				; fffffff0H
	jle	SHORT $LN41@PostMissio

; 1023 : 					pilot_data->rating = Poor;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [eax+80], 1

; 1024 : 				else 

	jmp	SHORT $LN40@PostMissio
$LN41@PostMissio:

; 1025 : 					pilot_data->rating = Horrible;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	BYTE PTR [ecx+80], 0
$LN40@PostMissio:

; 1026 : 				
; 1027 : 				// KCK HACK: Per Gilman - cap success to PartSuccess if player didn't land
; 1028 : 				if (pilot_data->pilot_slot >= PILOTS_PER_FLIGHT && !(logbook_data.Flags & LANDED_AIRCRAFT) && flight_ptr->mission_success == Success && (!gCommsMgr || !gCommsMgr->Online()))

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	eax, 4
	jl	SHORT $LN39@PostMissio
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+256]
	and	edx, 2
	jne	SHORT $LN39@PostMissio
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+95]
	cmp	ecx, 3
	jne	SHORT $LN39@PostMissio
	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN38@PostMissio
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN39@PostMissio
$LN38@PostMissio:

; 1029 : 					flight_ptr->mission_success = PartSuccess;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+95], 2
$LN39@PostMissio:

; 1030 : 				// END HACK
; 1031 : 
; 1032 : 				// Record the rating (for records sake)
; 1033 : 				// KCK:We probably don't have the flight at this point though...
; 1034 : // 2002-02-16 MN Only rate a pilot if we didn't have to abort mission
; 1035 : 				if (!(flight_ptr->mission_success == AWACSAbort))

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+95]
	cmp	ecx, 5
	je	SHORT $LN37@PostMissio

; 1036 : 					RatePilot((Flight)vuDatabase->Find(flight_ptr->flight_id),pilot_data->aircraft_slot,pilot_data->rating);

	mov	edx, DWORD PTR _pilot_data$[ebp]
	movzx	eax, BYTE PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	push	eax
	call	?RatePilot@@YAXPAVFlightClass@@HH@Z	; RatePilot
	add	esp, 12					; 0000000cH
$LN37@PostMissio:

; 1037 : 				pilot_data = pilot_data->next_pilot;

	mov	eax, DWORD PTR _pilot_data$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	mov	DWORD PTR _pilot_data$[ebp], ecx

; 1038 : 				}

	jmp	$LN55@PostMissio
$LN54@PostMissio:

; 1039 : 			friendly_losses += flight_ptr->start_aircraft - flight_ptr->finish_aircraft;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+58]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+59]
	sub	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+21]
	add	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], dl

; 1040 : 			logbook_data.AircraftInPackage += flight_ptr->start_aircraft;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+58]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+272]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], edx
$LN56@PostMissio:

; 1041 : 			}
; 1042 : 
; 1043 : 		// On Call CAS package succeed if any of the components succeeded
; 1044 : 		if (package_mission == AMIS_ONCALLCAS && flight_ptr->mission != AMIS_FAC && flight_ptr->mission_success > pack_success)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	cmp	eax, 20					; 00000014H
	jne	SHORT $LN36@PostMissio
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+61]
	cmp	edx, 19					; 00000013H
	je	SHORT $LN36@PostMissio
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+95]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	cmp	ecx, eax
	jle	SHORT $LN36@PostMissio

; 1045 : 			pack_success = flight_ptr->mission_success;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	al, BYTE PTR [edx+95]
	mov	BYTE PTR [ecx+4], al
$LN36@PostMissio:

; 1046 : 
; 1047 : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 1048 : 		}

	jmp	$LN58@PostMissio
$LN57@PostMissio:

; 1049 : 
; 1050 : 	// WARNING: Weird place for this, but for now this will work
; 1051 : 	if (player_aircraft_slot < 255)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 255				; 000000ffH
	jge	SHORT $LN34@PostMissio

; 1052 : 		{
; 1053 : 		Objective	o;
; 1054 : 		// KCK: Techinally, we should probably use the parent PO if there is one, but whatever...
; 1055 : 		o = FindNearestObjective (POList, tx, ty, NULL);

	push	0
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+186]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	eax
	call	?FindNearestObjective@@YAPAVObjectiveClass@@PAVVuLinkedList@@FFPAM@Z ; FindNearestObjective
	add	esp, 16					; 00000010H
	mov	DWORD PTR _o$6[ebp], eax

; 1056 : 		if (o && player_pilot)

	cmp	DWORD PTR _o$6[ebp], 0
	je	SHORT $LN34@PostMissio
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN34@PostMissio

; 1057 : 			ApplyPlayerInput(team, o->Id(), player_pilot->score);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movsx	ecx, WORD PTR [eax+78]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _o$6[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+25]
	push	ecx
	call	?ApplyPlayerInput@@YAXEVVU_ID@@H@Z	; ApplyPlayerInput
	add	esp, 16					; 00000010H
$LN34@PostMissio:

; 1058 : 		}
; 1059 : 	// Update logbook data
; 1060 : 	ShiAssert (player_pilot);
; 1061 : 	if (player_pilot)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	$LN21@PostMissio

; 1062 : 	{
; 1063 : 		logbook_data.WeaponsExpended = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], 0

; 1064 : 		for (i=0; i<player_pilot->weapon_types; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN32@PostMissio
$LN31@PostMissio:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN32@PostMissio:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+81]
	cmp	DWORD PTR _i$[ebp], ecx
	jge	$LN30@PostMissio

; 1065 : 			{
; 1066 : 			// Only count guns once - regardless of number of bursts
; 1067 : 			if (player_pilot->weapon_data[i].weapon_id >= 0) // sanity check

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 36					; 00000024H
	movsx	edx, WORD PTR [eax+ecx+104]
	test	edx, edx
	jl	SHORT $LN26@PostMissio

; 1068 : 				{
; 1069 : 				if (!(WeaponDataTable[player_pilot->weapon_data[i].weapon_id].Flags & WEAP_ONETENTH))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 36					; 00000024H
	movsx	eax, WORD PTR [ecx+edx+104]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR ?WeaponDataTable@@3PAUWeaponClassDataType@@A ; WeaponDataTable
	movzx	edx, WORD PTR [ecx+eax+10]
	and	edx, 32768				; 00008000H
	jne	SHORT $LN28@PostMissio

; 1070 : 					logbook_data.WeaponsExpended += player_pilot->weapon_data[i].fired;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 36					; 00000024H
	movzx	eax, BYTE PTR [ecx+edx+108]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+264]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], eax
	jmp	SHORT $LN26@PostMissio
$LN28@PostMissio:

; 1071 : 				else if (player_pilot->weapon_data[i].fired)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 36					; 00000024H
	movzx	eax, BYTE PTR [ecx+edx+108]
	test	eax, eax
	je	SHORT $LN26@PostMissio

; 1072 : 					logbook_data.WeaponsExpended++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], edx
$LN26@PostMissio:

; 1073 : 				}
; 1074 : 			}

	jmp	$LN31@PostMissio
$LN30@PostMissio:

; 1075 : 		logbook_data.ShotsAtPlayer = player_pilot->shot_at;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+72]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+268], eax

; 1076 : 		logbook_data.Score = player_pilot->rating + 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+80]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], ecx

; 1077 : 		logbook_data.Kills = player_pilot->aa_kills;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, BYTE PTR [ecx+67]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], edx

; 1078 : 		logbook_data.HumanKills = player_pilot->player_kills;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+71]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], eax

; 1079 : 		// Check for player survival
; 1080 : 		if (player_pilot->pilot_status == PILOT_KIA)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+65]
	cmp	ecx, 1
	jne	SHORT $LN25@PostMissio

; 1081 : 			logbook_data.Killed = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], 1

; 1082 : 		else

	jmp	SHORT $LN24@PostMissio
$LN25@PostMissio:

; 1083 : 			logbook_data.Killed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+288], 0
$LN24@PostMissio:

; 1084 : 
; 1085 : 		// KCK QUICK HACK: Fix very large flight hours problem. The real fix should be done later.
; 1086 : 		if (player_end_time < player_start_time)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+180]
	cmp	eax, DWORD PTR [edx+176]
	jae	SHORT $LN23@PostMissio

; 1087 : 			player_end_time = player_start_time + CampaignMinutes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	add	edx, 60000				; 0000ea60H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+180], edx
$LN23@PostMissio:

; 1088 : 		logbook_data.FlightHours = (float)((float)(player_end_time - player_start_time)/CampaignHours);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+180]
	sub	eax, DWORD PTR [edx+176]
	mov	DWORD PTR tv1094[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv1094[ebp]
	mov	ecx, DWORD PTR tv1094[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv1097[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv1097[ebp]
	divss	xmm0, DWORD PTR __real@4a5bba00
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+260], xmm0

; 1089 : 		logbook_data.GroundUnitsKilled = player_pilot->ag_kills;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, BYTE PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+300], edx

; 1090 : 		logbook_data.FeaturesDestroyed = player_pilot->as_kills;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+69]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+304], eax

; 1091 : 		logbook_data.NavalUnitsKilled = player_pilot->an_kills;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+70]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+308], ecx

; 1092 : 		logbook_data.WingmenLost = friendly_losses;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+21]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+316], ecx

; 1093 : 
; 1094 : 		switch(FalconLocalGame->GetGameType())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN63@PostMissio
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv432[ebp], eax
	jmp	SHORT $LN64@PostMissio
$LN63@PostMissio:
	mov	DWORD PTR tv432[ebp], 0
$LN64@PostMissio:
	mov	ecx, DWORD PTR tv432[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	DWORD PTR tv435[ebp], eax
	mov	ecx, DWORD PTR tv435[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv435[ebp], ecx
	cmp	DWORD PTR tv435[ebp], 3
	ja	$LN1@PostMissio
	mov	edx, DWORD PTR tv435[ebp]
	jmp	DWORD PTR $LN65@PostMissio[edx*4]
$LN20@PostMissio:

; 1095 : 			{
; 1096 : 			case game_Dogfight:
; 1097 : 				{
; 1098 : 				int won = 0,vsHuman = 0;

	mov	DWORD PTR _won$9[ebp], 0
	mov	DWORD PTR _vsHuman$5[ebp], 0

; 1099 : 				if (flags & MISEVAL_GAME_COMPLETED)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+26]
	and	ecx, 4
	je	SHORT $LN17@PostMissio

; 1100 : 					{
; 1101 : 					if (player_pilot->pilot_flags & PFLAG_WON_GAME)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+64]
	and	ecx, 2
	je	SHORT $LN18@PostMissio

; 1102 : 						won = 1;

	mov	DWORD PTR _won$9[ebp], 1

; 1103 : 					else

	jmp	SHORT $LN17@PostMissio
$LN18@PostMissio:

; 1104 : 						won = -1;

	mov	DWORD PTR _won$9[ebp], -1
$LN17@PostMissio:

; 1105 : 					}
; 1106 : 				if (flags & MISEVAL_ONLINE_GAME)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+26]
	and	eax, 8
	je	SHORT $LN16@PostMissio

; 1107 : 					vsHuman = 1;

	mov	DWORD PTR _vsHuman$5[ebp], 1
$LN16@PostMissio:

; 1108 : 				LogBook.SetAceFactor(FalconLocalSession->GetAceFactor());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetAceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SetAceFactor@LogBookData@@QAEXM@Z	; LogBookData::SetAceFactor

; 1109 : 				LogBook.UpdateDogfight(won, logbook_data.FlightHours, vsHuman, player_pilot->aa_kills, player_pilot->deaths[VS_AI]+player_pilot->deaths[VS_HUMAN], player_pilot->player_kills, player_pilot->deaths[VS_HUMAN] );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, 2
	shl	eax, 0
	movzx	ecx, WORD PTR [edx+eax+74]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	cx, BYTE PTR [eax+71]
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 2
	imul	edx, 0
	movsx	eax, WORD PTR [ecx+edx+74]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, 2
	shl	ecx, 0
	movsx	edx, WORD PTR [edx+ecx+74]
	add	eax, edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	dx, BYTE PTR [ecx+67]
	movzx	eax, dx
	push	eax
	movzx	ecx, WORD PTR _vsHuman$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+260]
	movss	DWORD PTR [esp], xmm0
	movzx	eax, WORD PTR _won$9[ebp]
	push	eax
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?UpdateDogfight@LogBookData@@QAEXFMFFFFF@Z ; LogBookData::UpdateDogfight

; 1110 : 				}
; 1111 : 				break;

	jmp	$LN21@PostMissio
$LN15@PostMissio:

; 1112 : 			case game_Campaign:
; 1113 : 				LogBook.SetAceFactor(FalconLocalSession->GetAceFactor());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetAceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SetAceFactor@LogBookData@@QAEXM@Z	; LogBookData::SetAceFactor

; 1114 : // 2002-02-13 MN added AWACSAbort condition for "don't score mission"
; 1115 : 				if (!logbook_data.Killed && (player_element->mission_success == Incomplete || player_element->mission_success == AWACSAbort))

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+288], 0
	jne	SHORT $LN14@PostMissio
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	ecx, BYTE PTR [eax+95]
	cmp	ecx, 4
	je	SHORT $LN13@PostMissio
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	ecx, BYTE PTR [eax+95]
	cmp	ecx, 5
	jne	SHORT $LN14@PostMissio
$LN13@PostMissio:

; 1116 : 					{
; 1117 : 					logbook_data.Flags |= DONT_SCORE_MISSION;

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+256]
	or	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+256], ax

; 1118 : 					LogBook.UpdateCampaign(&logbook_data);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 256				; 00000100H
	push	edx
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?UpdateCampaign@LogBookData@@QAEXPAUCAMP_MISS_STRUCT@@@Z ; LogBookData::UpdateCampaign

; 1119 : 					}
; 1120 : 				else

	jmp	$LN10@PostMissio
$LN14@PostMissio:

; 1121 : 					{
; 1122 : 					LogBook.UpdateCampaign(&logbook_data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 256				; 00000100H
	push	eax
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?UpdateCampaign@LogBookData@@QAEXPAUCAMP_MISS_STRUCT@@@Z ; LogBookData::UpdateCampaign

; 1123 : 					if(FalconLocalSession->GetMissions())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN11@PostMissio

; 1124 : 					{
; 1125 : 						int missions,rating;
; 1126 : 						missions=FalconLocalSession->GetMissions();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	edx, ax
	mov	DWORD PTR _missions$8[ebp], edx

; 1127 : 						rating=(FalconLocalSession->GetRating() * missions + (player_pilot->rating*25)) / (missions+1);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetRating@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetRating
	movzx	eax, al
	imul	eax, DWORD PTR _missions$8[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	ecx, BYTE PTR [edx+80]
	imul	ecx, 25					; 00000019H
	add	eax, ecx
	mov	ecx, DWORD PTR _missions$8[ebp]
	add	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _rating$4[ebp], eax

; 1128 : 						FalconLocalSession->SetRating(rating);

	movzx	edx, BYTE PTR _rating$4[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetRating@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetRating

; 1129 : 						FalconLocalSession->SetMissions(missions+1);

	mov	eax, DWORD PTR _missions$8[ebp]
	add	eax, 1
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetMissions@FalconSessionEntity@@QAEXG@Z ; FalconSessionEntity::SetMissions

; 1130 : 					}
; 1131 : 					else

	jmp	SHORT $LN10@PostMissio
$LN11@PostMissio:

; 1132 : 					{
; 1133 : 						FalconLocalSession->SetRating((player_pilot->rating*25));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+80]
	imul	eax, 25					; 00000019H
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetRating@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetRating

; 1134 : 						FalconLocalSession->SetMissions(1);

	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetMissions@FalconSessionEntity@@QAEXG@Z ; FalconSessionEntity::SetMissions
$LN10@PostMissio:

; 1135 : 					}
; 1136 : 				}
; 1137 : 				
; 1138 : 				FalconLocalSession->SetKill(FalconSessionEntity::_AIR_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_AIR_KILLS_)+logbook_data.Kills+logbook_data.HumanKills);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+280]
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+284]
	push	ecx
	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1139 : 				FalconLocalSession->SetKill(FalconSessionEntity::_GROUND_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_GROUND_KILLS_)+logbook_data.GroundUnitsKilled);

	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+300]
	push	ecx
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1140 : 				FalconLocalSession->SetKill(FalconSessionEntity::_NAVAL_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_NAVAL_KILLS_)+logbook_data.NavalUnitsKilled);

	push	2
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+308]
	push	eax
	push	2
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1141 : 				FalconLocalSession->SetKill(FalconSessionEntity::_STATIC_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_STATIC_KILLS_)+logbook_data.FeaturesDestroyed);

	push	3
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+304]
	push	edx
	push	3
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1142 : 				break;

	jmp	$LN21@PostMissio
$LN9@PostMissio:

; 1143 : 			case game_TacticalEngagement:
; 1144 : // 2002-02-13 MN added AWACSAbort condition
; 1145 : 				if(player_element==0)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN8@PostMissio

; 1146 : 				{
; 1147 : 					int a=0;// so I can set a breakpoint

	mov	DWORD PTR _a$2[ebp], 0
$LN8@PostMissio:

; 1148 : 				}
; 1149 : 
; 1150 : 				if (player_element) // MLR 3/25/2004 - CTD fix, cause is unknown. //Cobra 10/31/04 TJL

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	$LN3@PostMissio

; 1151 : 				{
; 1152 : 					if (logbook_data.Killed || (player_element->mission_success != Incomplete) && (player_element->mission_success != AWACSAbort))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+288], 0
	jne	SHORT $LN5@PostMissio
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movzx	eax, BYTE PTR [edx+95]
	cmp	eax, 4
	je	$LN3@PostMissio
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movzx	eax, BYTE PTR [edx+95]
	cmp	eax, 5
	je	$LN3@PostMissio
$LN5@PostMissio:

; 1153 : 					{
; 1154 : 						if(FalconLocalSession->GetMissions())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN4@PostMissio

; 1155 : 						{
; 1156 : 							int missions,rating;
; 1157 : 							missions=FalconLocalSession->GetMissions();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetMissions@FalconSessionEntity@@QBEGXZ ; FalconSessionEntity::GetMissions
	movzx	edx, ax
	mov	DWORD PTR _missions$7[ebp], edx

; 1158 : 							rating=(FalconLocalSession->GetRating() * missions + (player_pilot->rating*25)) / (missions+1);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetRating@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetRating
	movzx	eax, al
	imul	eax, DWORD PTR _missions$7[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	ecx, BYTE PTR [edx+80]
	imul	ecx, 25					; 00000019H
	add	eax, ecx
	mov	ecx, DWORD PTR _missions$7[ebp]
	add	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _rating$3[ebp], eax

; 1159 : 							FalconLocalSession->SetRating(rating);

	movzx	edx, BYTE PTR _rating$3[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetRating@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetRating

; 1160 : 							FalconLocalSession->SetMissions(missions+1);

	mov	eax, DWORD PTR _missions$7[ebp]
	add	eax, 1
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetMissions@FalconSessionEntity@@QAEXG@Z ; FalconSessionEntity::SetMissions

; 1161 : 						}
; 1162 : 						else

	jmp	SHORT $LN3@PostMissio
$LN4@PostMissio:

; 1163 : 						{
; 1164 : 							FalconLocalSession->SetRating((player_pilot->rating*25));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+80]
	imul	eax, 25					; 00000019H
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetRating@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetRating

; 1165 : 							FalconLocalSession->SetMissions(1);

	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetMissions@FalconSessionEntity@@QAEXG@Z ; FalconSessionEntity::SetMissions
$LN3@PostMissio:

; 1166 : 						}
; 1167 : 					}
; 1168 : 				}
; 1169 : 				LogBook.UpdateFlightHours(logbook_data.FlightHours);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+260]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?UpdateFlightHours@LogBookData@@QAEXM@Z	; LogBookData::UpdateFlightHours

; 1170 : 				LogBook.SetAceFactor(FalconLocalSession->GetAceFactor());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetAceFactor@FalconSessionEntity@@QBEMXZ ; FalconSessionEntity::GetAceFactor
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SetAceFactor@LogBookData@@QAEXM@Z	; LogBookData::SetAceFactor

; 1171 : 				LogBook.SaveData();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData

; 1172 : 				FalconLocalSession->SetKill(FalconSessionEntity::_AIR_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_AIR_KILLS_)+logbook_data.Kills+logbook_data.HumanKills);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+280]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+284]
	push	edx
	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1173 : 				FalconLocalSession->SetKill(FalconSessionEntity::_GROUND_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_GROUND_KILLS_)+logbook_data.GroundUnitsKilled);

	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+300]
	push	edx
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1174 : 				FalconLocalSession->SetKill(FalconSessionEntity::_NAVAL_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_NAVAL_KILLS_)+logbook_data.NavalUnitsKilled);

	push	2
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	ecx, ax
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+308]
	push	ecx
	push	2
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1175 : 				FalconLocalSession->SetKill(FalconSessionEntity::_STATIC_KILLS_,FalconLocalSession->GetKill(FalconSessionEntity::_STATIC_KILLS_)+logbook_data.FeaturesDestroyed);

	push	3
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetKill@FalconSessionEntity@@QBEGG@Z	; FalconSessionEntity::GetKill
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+304]
	push	eax
	push	3
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetKill@FalconSessionEntity@@QAEXGG@Z	; FalconSessionEntity::SetKill

; 1176 : 				break;

	jmp	SHORT $LN21@PostMissio
$LN2@PostMissio:

; 1177 : 			case game_InstantAction:
; 1178 : 				LogBook.UpdateFlightHours(logbook_data.FlightHours);

	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+260]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?UpdateFlightHours@LogBookData@@QAEXM@Z	; LogBookData::UpdateFlightHours

; 1179 : 				LogBook.SaveData();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?SaveData@LogBookData@@QAEHXZ		; LogBookData::SaveData
$LN1@PostMissio:
$LN21@PostMissio:

; 1180 : 				break;
; 1181 : 			default:
; 1182 : 				break;
; 1183 : 			}
; 1184 : 	}
; 1185 : 	ClearPackageData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPackageData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPackageData

; 1186 : 	flags = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+26], ax

; 1187 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1188 : 
; 1189 : 	return 0;

	xor	eax, eax

; 1190 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN65@PostMissio:
	DD	$LN2@PostMissio
	DD	$LN20@PostMissio
	DD	$LN9@PostMissio
	DD	$LN15@PostMissio
?PostMissionEval@MissionEvaluationClass@@QAEHXZ ENDP	; MissionEvaluationClass::PostMissionEval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -160						; size = 4
_oc$1 = -156						; size = 4
_relEnt$2 = -152					; size = 4
_i$3 = -148						; size = 4
_f$4 = -144						; size = 4
_to$5 = -140						; size = 4
_tf$6 = -136						; size = 4
_targeted$7 = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
_flight_ptr$ = 8					; size = 4
_target$ = 12						; size = 4
?RecordTargetStatus@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVCampBaseClass@@@Z PROC ; MissionEvaluationClass::RecordTargetStatus
; _this$ = ecx

; 677  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 678  : 	if (!target)

	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN11@RecordTarg

; 679  : 		return;

	jmp	$LN12@RecordTarg
$LN11@RecordTarg:

; 680  : 
; 681  : 	memset(flight_ptr->target_features,255,MAX_TARGET_FEATURES*sizeof(uchar));

	push	5
	push	255					; 000000ffH
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 682  : 	if (target && target->IsObjective())

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN10@RecordTarg
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	$LN10@RecordTarg

; 683  : 		{
; 684  : 		// Find top targets
; 685  : 		Objective			to = (Objective)target;

	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _to$5[ebp], ecx

; 686  : 		ObjClassDataType*	oc = to->GetObjectiveClassData();

	mov	ecx, DWORD PTR _to$5[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _oc$1[ebp], eax

; 687  : 		uchar				targeted[128] = { 0 };

	mov	BYTE PTR _targeted$7[ebp], 0
	push	127					; 0000007fH
	push	0
	lea	edx, DWORD PTR _targeted$7[ebp+1]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 688  : 		int					i,f,tf=0;

	mov	DWORD PTR _tf$6[ebp], 0

; 689  : 
; 690  : 		for (i=0; i<20 && tf<MAX_TARGET_FEATURES; i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN9@RecordTarg
$LN8@RecordTarg:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN9@RecordTarg:
	cmp	DWORD PTR _i$3[ebp], 20			; 00000014H
	jge	SHORT $LN7@RecordTarg
	cmp	DWORD PTR _tf$6[ebp], 5
	jge	SHORT $LN7@RecordTarg

; 691  : 			{
; 692  : 			f = BestTargetFeature(to, targeted);

	lea	ecx, DWORD PTR _targeted$7[ebp]
	push	ecx
	mov	edx, DWORD PTR _to$5[ebp]
	push	edx
	call	?BestTargetFeature@@YAHPAVObjectiveClass@@QAE@Z ; BestTargetFeature
	add	esp, 8
	mov	DWORD PTR _f$4[ebp], eax

; 693  : 			if (f < 128 && to->GetFeatureValue(f))

	cmp	DWORD PTR _f$4[ebp], 128		; 00000080H
	jge	SHORT $LN6@RecordTarg
	mov	eax, DWORD PTR _f$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _to$5[ebp]
	call	?GetFeatureValue@ObjectiveClass@@QAEHH@Z ; ObjectiveClass::GetFeatureValue
	test	eax, eax
	je	SHORT $LN6@RecordTarg

; 694  : 				{
; 695  : 				targeted[f] = 1;

	mov	ecx, DWORD PTR _f$4[ebp]
	mov	BYTE PTR _targeted$7[ebp+ecx], 1

; 696  : 				flight_ptr->target_features[tf] = f;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	add	edx, DWORD PTR _tf$6[ebp]
	mov	al, BYTE PTR _f$4[ebp]
	mov	BYTE PTR [edx+88], al

; 697  : 				tf++;

	mov	ecx, DWORD PTR _tf$6[ebp]
	add	ecx, 1
	mov	DWORD PTR _tf$6[ebp], ecx
$LN6@RecordTarg:

; 698  : 				}
; 699  : 			}			

	jmp	$LN8@RecordTarg
$LN7@RecordTarg:

; 700  : 		// Record target status
; 701  : 		flight_ptr->target_status = to->GetObjectiveStatus();

	mov	ecx, DWORD PTR _to$5[ebp]
	call	?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ; ObjectiveClass::GetObjectiveStatus
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+93], al
	jmp	SHORT $LN5@RecordTarg
$LN10@RecordTarg:

; 702  : 		}
; 703  : 	else if (target && target->IsUnit())

	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN5@RecordTarg
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	SHORT $LN5@RecordTarg

; 704  : 		{
; 705  : 		target->GetName(flight_ptr->context_entity_name, 39, FALSE);

	push	0
	push	39					; 00000027H
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 109				; 0000006dH
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 706  : 		flight_ptr->target_status = ((Unit)target)->GetTotalVehicles();

	mov	ecx, DWORD PTR _target$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+93], al
$LN5@RecordTarg:

; 707  : 		}
; 708  : 	// Special case related unit data
; 709  : 	if (flight_ptr->mission_context == enemyUnitAdvanceBridge || flight_ptr->mission_context == enemyUnitMoveBridge || flight_ptr->mission_context == friendlyUnitAirborneMovement)

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+94]
	cmp	eax, 1
	je	SHORT $LN2@RecordTarg
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	movzx	edx, BYTE PTR [ecx+94]
	cmp	edx, 2
	je	SHORT $LN2@RecordTarg
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+94]
	cmp	ecx, 11					; 0000000bH
	jne	SHORT $LN12@RecordTarg
$LN2@RecordTarg:

; 710  : 		{
; 711  : 		CampEntity	relEnt = (CampEntity) vuDatabase->Find(flight_ptr->requester_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _relEnt$2[ebp], eax

; 712  : 		if (relEnt)

	cmp	DWORD PTR _relEnt$2[ebp], 0
	je	SHORT $LN12@RecordTarg

; 713  : 			relEnt->GetName(flight_ptr->context_entity_name,39,FALSE);

	push	0
	push	39					; 00000027H
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	add	edx, 109				; 0000006dH
	push	edx
	mov	eax, DWORD PTR _relEnt$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _relEnt$2[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN12@RecordTarg:

; 714  : 		}
; 715  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?RecordTargetStatus@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVCampBaseClass@@@Z ENDP ; MissionEvaluationClass::RecordTargetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
$T2 = -112						; size = 8
$T3 = -104						; size = 8
$T4 = -96						; size = 8
$T5 = -88						; size = 8
$T6 = -80						; size = 8
$T7 = -72						; size = 8
_pw$8 = -64						; size = 4
$T9 = -60						; size = 4
_vc$ = -56						; size = 4
tv72 = -52						; size = 4
$T10 = -48						; size = 4
_target_parent$11 = -44					; size = 4
_tmp_target$12 = -40					; size = 4
_tmp_ptr$ = -36						; size = 4
_w$ = -32						; size = 4
_target$ = -28						; size = 4
_this$ = -24						; size = 4
_tw$ = -20						; size = 4
_flight_ptr$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_element$ = 8						; size = 4
_flight$ = 12						; size = 4
?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z PROC ; MissionEvaluationClass::PreEvalFlight
; _this$ = ecx

; 567  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 568  : 	VehicleClassDataType	*vc;
; 569  : 	WayPoint				tw,w;
; 570  : 	FlightDataClass			*flight_ptr,*tmp_ptr;
; 571  : 	CampEntity				target = NULL;

	mov	DWORD PTR _target$[ebp], 0

; 572  : 
; 573  : //	ShiAssert (FalconLocalSession->GetFlyState() == FLYSTATE_IN_UI);	- not in dogfight at least
; 574  : 
; 575  : 	if (element)

	cmp	DWORD PTR _element$[ebp], 0
	je	$LN29@PreEvalFli

; 576  : 		{
; 577  : 		flight_ptr = new FlightDataClass();

	push	168					; 000000a8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN31@PreEvalFli
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0FlightDataClass@@QAE@XZ		; FlightDataClass::FlightDataClass
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN32@PreEvalFli
$LN31@PreEvalFli:
	mov	DWORD PTR tv72[ebp], 0
$LN32@PreEvalFli:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _flight_ptr$[ebp], ecx

; 578  : 		if (flight && element->Id() == flight->Id())

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN27@PreEvalFli
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _element$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN27@PreEvalFli

; 579  : 			player_element = flight_ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN27@PreEvalFli:

; 580  : 		vc = GetVehicleClassData(element->GetVehicleID(0));

	push	0
	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetVehicleID@UnitClass@@QAEFH@Z	; UnitClass::GetVehicleID
	movsx	ecx, ax
	push	ecx
	call	?GetVehicleClassData@@YAPAUVehicleClassDataType@@H@Z ; GetVehicleClassData
	add	esp, 4
	mov	DWORD PTR _vc$[ebp], eax

; 581  : 		if (vc) // JB 010113

	cmp	DWORD PTR _vc$[ebp], 0
	je	SHORT $LN26@PreEvalFli

; 582  : 			_stprintf(flight_ptr->aircraft_name,vc->Name);

	mov	edx, DWORD PTR _vc$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	call	_sprintf
	add	esp, 8

; 583  : 		else

	jmp	SHORT $LN25@PreEvalFli
$LN26@PreEvalFli:

; 584  : 			_stprintf(flight_ptr->aircraft_name,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	call	_sprintf
	add	esp, 8
$LN25@PreEvalFli:

; 585  : 		_stprintf(flight_ptr->name,flight_ptr->aircraft_name);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 586  : 		GetCallsign (element->callsign_id, element->callsign_num, flight_ptr->name);

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _element$[ebp]
	movzx	eax, BYTE PTR [edx+426]
	push	eax
	mov	ecx, DWORD PTR _element$[ebp]
	movzx	edx, BYTE PTR [ecx+425]
	push	edx
	call	?GetCallsign@@YAXHHPAD@Z		; GetCallsign
	add	esp, 12					; 0000000cH

; 587  : 		flight_ptr->camp_id = element->GetCampID();

	mov	eax, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _element$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	WORD PTR [ecx+36], ax

; 588  : 		flight_ptr->flight_id = element->Id();

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _element$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx

; 589  : 		flight_ptr->start_aircraft = element->GetTotalVehicles();		

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+58], al

; 590  : 		flight_ptr->finish_aircraft = flight_ptr->start_aircraft;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	cl, BYTE PTR [eax+58]
	mov	BYTE PTR [edx+59], cl

; 591  : 		if (element->GetEvalFlags() & FEVAL_MISSION_STARTED)

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetEvalFlags@FlightClass@@QAEEXZ	; FlightClass::GetEvalFlags
	movzx	edx, al
	and	edx, 1
	je	SHORT $LN24@PreEvalFli

; 592  : 			flight_ptr->status_flags = MISEVAL_FLIGHT_STARTED_LATE;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+32], 16777216		; 01000000H

; 593  : 		else

	jmp	SHORT $LN23@PreEvalFli
$LN24@PreEvalFli:

; 594  : 			flight_ptr->status_flags = 0;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+32], 0
$LN23@PreEvalFli:

; 595  : 		flight_ptr->old_mission = element->GetOriginalMission();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetOriginalMission@FlightClass@@QAEEXZ	; FlightClass::GetOriginalMission
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+62], al

; 596  : 		flight_ptr->mission = element->GetUnitMission();

	mov	eax, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _element$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+61], al

; 597  : 		flight_ptr->mission_context = element->GetMissionContext();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetMissionContext@FlightClass@@QAEEXZ	; FlightClass::GetMissionContext
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+94], al

; 598  : 		flight_ptr->requester_id = element->GetRequesterID();

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ ; FlightClass::GetRequesterID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx

; 599  : 		flight_ptr->flight_team = element->GetTeam();

	mov	ecx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _element$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+60], al

; 600  : 		flight_ptr->target_x = tx;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+184]
	mov	WORD PTR [edx+84], cx

; 601  : 		flight_ptr->target_y = ty;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+186]
	mov	WORD PTR [edx+86], cx

; 602  : 		tw = element->GetFirstUnitWP();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _tw$[ebp], eax
$LN22@PreEvalFli:

; 603  : 		while (tw && !(tw->GetWPFlags() & WPF_TARGET))

	cmp	DWORD PTR _tw$[ebp], 0
	je	SHORT $LN21@PreEvalFli
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	jne	SHORT $LN21@PreEvalFli

; 604  : 			tw = tw->GetNextWP();

	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _tw$[ebp], eax
	jmp	SHORT $LN22@PreEvalFli
$LN21@PreEvalFli:

; 605  : 		if (!tw || !tw->GetWPTarget())

	cmp	DWORD PTR _tw$[ebp], 0
	je	SHORT $LN19@PreEvalFli
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ; WayPointClass::GetWPTarget
	test	eax, eax
	jne	SHORT $LN20@PreEvalFli
$LN19@PreEvalFli:

; 606  : 			tw = element->GetOverrideWP();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetOverrideWP@FlightClass@@QAEPAVWayPointClass@@XZ ; FlightClass::GetOverrideWP
	mov	DWORD PTR _tw$[ebp], eax
$LN20@PreEvalFli:

; 607  : 		if (tw)

	cmp	DWORD PTR _tw$[ebp], 0
	je	SHORT $LN18@PreEvalFli

; 608  : 		{
; 609  : 			flight_ptr->target_id = tw->GetWPTargetID();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ ; WayPointClass::GetWPTargetID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], edx

; 610  : 			flight_ptr->target_building = tw->GetWPTargetBuilding(); 

	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPTargetBuilding@WayPointClass@@QAEEXZ ; WayPointClass::GetWPTargetBuilding
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+82], al

; 611  : 			target = (CampEntity) FindEntity(flight_ptr->target_id);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	push	ecx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _target$[ebp], eax

; 612  : 		}
; 613  : 		else

	jmp	SHORT $LN17@PreEvalFli
$LN18@PreEvalFli:

; 614  : 		{
; 615  : 			flight_ptr->target_id = FalconNullId;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+72], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+76], ecx

; 616  : 			flight_ptr->target_building = 255; 

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [edx+82], 255			; 000000ffH
$LN17@PreEvalFli:

; 617  : 		}
; 618  : 		if (flight_ptr->mission == AMIS_INTERCEPT || flight_ptr->mission == AMIS_CAS)

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	cmp	ecx, 9
	je	SHORT $LN15@PreEvalFli
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN16@PreEvalFli
$LN15@PreEvalFli:

; 619  : 		{
; 620  : 			// Assign target to immediate target if it's intercepting/cas
; 621  : 			if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN16@PreEvalFli

; 622  : 			{
; 623  : 				FalconEntity* tmp_target = flight->GetTarget();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetTarget@UnitClass@@QAEPAVFalconEntity@@XZ ; UnitClass::GetTarget
	mov	DWORD PTR _tmp_target$12[ebp], eax

; 624  : 				if (tmp_target && tmp_target->IsCampaign())

	cmp	DWORD PTR _tmp_target$12[ebp], 0
	je	SHORT $LN16@PreEvalFli
	mov	ecx, DWORD PTR _tmp_target$12[ebp]
	call	?IsCampaign@FalconEntity@@QAEHXZ	; FalconEntity::IsCampaign
	test	eax, eax
	je	SHORT $LN16@PreEvalFli

; 625  : 					target = (CampEntity) tmp_target;

	mov	ecx, DWORD PTR _tmp_target$12[ebp]
	mov	DWORD PTR _target$[ebp], ecx
$LN16@PreEvalFli:

; 626  : 			}
; 627  : 		}
; 628  : 		if (target)	{

	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN12@PreEvalFli

; 629  : 			if (target->IsUnit()){

	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
	test	eax, eax
	je	SHORT $LN11@PreEvalFli

; 630  : 				Unit	target_parent = ((Unit)target)->GetUnitParent();

	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+944]
	call	eax
	mov	DWORD PTR _target_parent$11[ebp], eax

; 631  : 				if (target_parent){

	cmp	DWORD PTR _target_parent$11[ebp], 0
	je	SHORT $LN11@PreEvalFli

; 632  : 					target = target_parent;

	mov	ecx, DWORD PTR _target_parent$11[ebp]
	mov	DWORD PTR _target$[ebp], ecx

; 633  : 					flight_ptr->target_id = target_parent->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _target_parent$11[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], edx
$LN11@PreEvalFli:

; 634  : 				}
; 635  : 			}
; 636  : 			flight_ptr->target_camp_id = target->GetCampID();

	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	WORD PTR [ecx+80], ax
$LN12@PreEvalFli:

; 637  : 		}
; 638  : 
; 639  : 		if (!package_element)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	$LN9@PreEvalFli

; 640  : 		{
; 641  : 			package_element = flight_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 642  : //			package_mission = element->GetUnitMission();
; 643  : 			package_target_id = flight_ptr->target_id;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+72]
	mov	ecx, DWORD PTR [edx+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], eax
	mov	DWORD PTR [edx+120], ecx

; 644  : 			RecordTargetStatus(flight_ptr, target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecordTargetStatus@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVCampBaseClass@@@Z ; MissionEvaluationClass::RecordTargetStatus

; 645  : 			// Traverse our waypoints and collect data
; 646  : 			tw = 0;

	mov	DWORD PTR _tw$[ebp], 0

; 647  : 			w = element->GetFirstUnitWP();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _w$[ebp], eax
$LN8@PreEvalFli:

; 648  : 			while (w){

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN7@PreEvalFli

; 649  : 				CollectThreats (element, w);

	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _element$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CollectThreats@MissionEvaluationClass@@QAEXPAVFlightClass@@PAVWayPointClass@@@Z ; MissionEvaluationClass::CollectThreats

; 650  : 				if (w->GetWPFlags() & WPF_REPEAT)

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 64					; 00000040H
	je	SHORT $LN6@PreEvalFli

; 651  : 					tw = w;

	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR _tw$[ebp], ecx
$LN6@PreEvalFli:

; 652  : 				w = w->GetNextWP();

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _w$[ebp], eax

; 653  : 			}

	jmp	SHORT $LN8@PreEvalFli
$LN7@PreEvalFli:

; 654  : 			if (tw){

	cmp	DWORD PTR _tw$[ebp], 0
	je	SHORT $LN9@PreEvalFli

; 655  : 				WayPoint	pw = tw->GetPrevWP();

	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetPrevWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetPrevWP
	mov	DWORD PTR _pw$8[ebp], eax

; 656  : 				patrol_time = tw->GetWPDepartureTime() - pw->GetWPArrivalTime();

	mov	ecx, DWORD PTR _tw$[ebp]
	call	?GetWPDepartureTime@WayPointClass@@QAEKXZ ; WayPointClass::GetWPDepartureTime
	mov	esi, eax
	mov	ecx, DWORD PTR _pw$8[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	sub	esi, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], esi
$LN9@PreEvalFli:

; 657  : 			}
; 658  : 		}
; 659  : 		flight_ptr->failure_code = 0;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+96], 0

; 660  : 		flight_ptr->failure_data = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	WORD PTR [edx+98], cx

; 661  : 		flight_ptr->failure_id = FalconNullId;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+100], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+104], edx

; 662  : 		flight_ptr->mission_success = 0;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [eax+95], 0

; 663  : 		flight_ptr->num_pilots = 0;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	BYTE PTR [ecx+108], 0

; 664  : 		// Add to end of list.
; 665  : 		tmp_ptr = flight_data;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR _tmp_ptr$[ebp], eax
$LN4@PreEvalFli:

; 666  : 		while (tmp_ptr && tmp_ptr->next_flight)

	cmp	DWORD PTR _tmp_ptr$[ebp], 0
	je	SHORT $LN3@PreEvalFli
	mov	ecx, DWORD PTR _tmp_ptr$[ebp]
	cmp	DWORD PTR [ecx+164], 0
	je	SHORT $LN3@PreEvalFli

; 667  : 			tmp_ptr = tmp_ptr->next_flight;

	mov	edx, DWORD PTR _tmp_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _tmp_ptr$[ebp], eax
	jmp	SHORT $LN4@PreEvalFli
$LN3@PreEvalFli:

; 668  : 		if (tmp_ptr)

	cmp	DWORD PTR _tmp_ptr$[ebp], 0
	je	SHORT $LN2@PreEvalFli

; 669  : 			tmp_ptr->next_flight = flight_ptr;

	mov	ecx, DWORD PTR _tmp_ptr$[ebp]
	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [ecx+164], edx

; 670  : 		else

	jmp	SHORT $LN1@PreEvalFli
$LN2@PreEvalFli:

; 671  : 			flight_data = flight_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+204], ecx
$LN1@PreEvalFli:

; 672  : 		SetupPilots(flight_ptr, element);

	mov	edx, DWORD PTR _element$[ebp]
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupPilots@MissionEvaluationClass@@QAEXPAVFlightDataClass@@PAVFlightClass@@@Z ; MissionEvaluationClass::SetupPilots
$LN29@PreEvalFli:

; 673  : 		}
; 674  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z$0:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ENDP ; MissionEvaluationClass::PreEvalFlight
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_flit$2 = -100						; size = 12
$T3 = -88						; size = 8
$T4 = -80						; size = 8
$T5 = -72						; size = 8
$T6 = -64						; size = 8
$T7 = -56						; size = 8
$T8 = -48						; size = 8
$T9 = -40						; size = 4
_element$ = -36						; size = 4
_aas$ = -32						; size = 4
_uelement$10 = -28					; size = 4
_i$11 = -24						; size = 4
_package$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_flight$ = 8						; size = 4
_aircraft_slot$ = 12					; size = 1
?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z PROC ; MissionEvaluationClass::PreMissionEval
; _this$ = ecx

; 430  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 431  : 	Package				package;
; 432  : 	Flight				element;
; 433  : 	Objective			aas;
; 434  : 
; 435  : #ifdef DEBUG
; 436  : 	if (testDebrief)
; 437  : 		return PostMissionEval();
; 438  : #endif
; 439  : 
; 440  : #ifdef FUNKY_KEVIN_DEBUG_STUFF
; 441  : 	ShiAssert(!inMission);
; 442  : #endif
; 443  : 
; 444  : #ifdef DEBUG
; 445  : 	while (inMission && (!g_bLogEvents))
; 446  : 	{
; 447  : 		Sleep (100);
; 448  : 	}
; 449  : #endif
; 450  : 
; 451  : 	ShiAssert (doUI|| (g_bLogEvents));
; 452  : 
; 453  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 454  : 
; 455  : 	ClearPackageData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPackageData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPackageData

; 456  : 	CleanupFlightData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupFlightData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupFlightData

; 457  : 
; 458  : 	for (int i=0; i<MAX_RELATED_EVENTS; i++)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN17@PreMission
$LN16@PreMission:
	mov	eax, DWORD PTR _i$11[ebp]
	add	eax, 1
	mov	DWORD PTR _i$11[ebp], eax
$LN17@PreMission:
	cmp	DWORD PTR _i$11[ebp], 5
	jge	SHORT $LN15@PreMission

; 459  : 		{
; 460  : 		if (related_events[i])

	mov	ecx, DWORD PTR _i$11[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+236], 0
	je	SHORT $LN14@PreMission

; 461  : 			delete related_events[i];

	mov	eax, DWORD PTR _i$11[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+236]
	mov	DWORD PTR $T9[ebp], edx
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@PreMission:

; 462  : 		related_events[i] = NULL;

	mov	ecx, DWORD PTR _i$11[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+236], 0

; 463  : 		}

	jmp	SHORT $LN16@PreMission
$LN15@PreMission:

; 464  : 	last_related_event = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+233], 0

; 465  : 
; 466  : 	contact_score = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0

; 467  : 	package = (Package)flight->GetUnitParent();

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+1008]
	call	edx
	mov	DWORD PTR _package$[ebp], eax

; 468  : 	pack_success = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 469  : 	package_element = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 470  : 	player_element = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 471  : 	player_aircraft_slot = 255;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 255			; 000000ffH

; 472  : 	friendly_losses = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+21], 0

; 473  : 	assigned_tot = flight->GetUnitTOT();

	mov	edx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax+692]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], eax

; 474  : 	actual_tot = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+168], 0

; 475  : 	patrol_time = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+172], 0

; 476  : 	if (package)

	cmp	DWORD PTR _package$[ebp], 0
	je	$LN13@PreMission

; 477  : 		{
; 478  : 		package->FindSupportFlights(package->GetMissionRequest(), 0);

	push	0
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	push	eax
	mov	ecx, DWORD PTR _package$[ebp]
	call	?FindSupportFlights@PackageClass@@QAEXPAVMissionRequestClass@@H@Z ; PackageClass::FindSupportFlights

; 479  : 		package_mission = package->GetMissionRequest()->mission;

	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax+60]
	mov	BYTE PTR [ecx+5], dl

; 480  : 		package_context = package->GetMissionRequest()->context;

	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax+62]
	mov	BYTE PTR [ecx+6], dl

; 481  : 		responses = package->GetResponses();

	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetResponses@PackageClass@@QAEFXZ	; PackageClass::GetResponses
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+28], ax

; 482  : 		requesting_ent = package->GetMissionRequest()->requesterID;

	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], edx
	mov	DWORD PTR [ecx+72], eax

; 483  : 		intercepting_ent = package->GetInterceptor();

	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetInterceptor@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetInterceptor
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	DWORD PTR [eax+80], edx

; 484  : 		awacs_id = package->GetAwacs();		// FindAwacs(flight, &awx, &awy);

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetAwacs@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetAwacs
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], edx
	mov	DWORD PTR [ecx+88], eax

; 485  : 		jstar_id = package->GetJStar();		// FindJStar(flight, &jsx, &jsy);

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetJStar@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetJStar
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], ecx
	mov	DWORD PTR [eax+96], edx

; 486  : 		ecm_id = package->GetECM();

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetECM@PackageClass@@QAE?AVVU_ID@@XZ	; PackageClass::GetECM
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], edx
	mov	DWORD PTR [ecx+104], eax

; 487  : 		tanker_id = package->GetTanker();	// FindTanker(flight, &tankx, &tanky);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetTanker@PackageClass@@QAE?AVVU_ID@@XZ ; PackageClass::GetTanker
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], ecx
	mov	DWORD PTR [eax+112], edx

; 488  : 		package->GetUnitDestination(&tx,&ty);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 186				; 000000baH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 184				; 000000b8H
	push	edx
	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetUnitDestination@UnitClass@@QAEXPAF0@Z ; UnitClass::GetUnitDestination

; 489  : 		action_type = package->GetMissionRequest()->action_type;

	mov	ecx, DWORD PTR _package$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax+59]
	mov	BYTE PTR [ecx+24], dl

; 490  : 		}
; 491  : 	else

	jmp	$LN12@PreMission
$LN13@PreMission:

; 492  : 		{
; 493  : 		package_mission = AMIS_SWEEP;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 7

; 494  : 		package_context = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], 0

; 495  : 		responses = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+28], dx

; 496  : 		requesting_ent = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+68], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+72], eax

; 497  : 		intercepting_ent = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+76], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+80], eax

; 498  : 		awacs_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+84], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+88], eax

; 499  : 		jstar_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+92], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+96], eax

; 500  : 		ecm_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+100], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+104], eax

; 501  : 		tanker_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+108], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+112], eax

; 502  : 		flight->GetLocation(&tx,&ty);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 186				; 000000baH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 184				; 000000b8H
	push	edx
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 503  : 		action_type = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
$LN12@PreMission:

; 504  : 		}
; 505  : 	flags = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+26], cx

; 506  : 	team = flight->GetTeam();

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+25], al

; 507  : 	aas = FindAlternateLandingStrip(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?FindAlternateLandingStrip@@YAPAVObjectiveClass@@PAVFlightClass@@@Z ; FindAlternateLandingStrip
	add	esp, 4
	mov	DWORD PTR _aas$[ebp], eax

; 508  : 	if (aas)

	cmp	DWORD PTR _aas$[ebp], 0
	je	SHORT $LN11@PreMission

; 509  : 		{
; 510  : 		alternate_strip_id = aas->Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _aas$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], edx

; 511  : 		aas->GetLocation(&abx,&aby);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 190				; 000000beH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 188				; 000000bcH
	push	edx
	mov	ecx, DWORD PTR _aas$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 512  : 		}
; 513  : 	else

	jmp	SHORT $LN10@PreMission
$LN11@PreMission:

; 514  : 		{
; 515  : 		alternate_strip_id = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+60], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+64], edx

; 516  : 		abx = aby = -1;

	or	eax, -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+190], ax
	or	edx, -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+188], dx
$LN10@PreMission:

; 517  : 		}
; 518  : 	player_start_time = vuxGameTime;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [ecx+176], edx

; 519  : 	player_pilot = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 520  : 	curr_data = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+208], cx

; 521  : 	FindPotentialTargets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPotentialTargets@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::FindPotentialTargets

; 522  : 	if (package)

	cmp	DWORD PTR _package$[ebp], 0
	je	SHORT $LN9@PreMission

; 523  : 		{
; 524  : 		// Analyse child flights
; 525  : 		element = (Flight) package->GetFirstUnitElement();

	mov	eax, DWORD PTR _package$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _package$[ebp]
	mov	eax, DWORD PTR [edx+996]
	call	eax
	mov	DWORD PTR _element$[ebp], eax
$LN8@PreMission:

; 526  : 		while (element)

	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN7@PreMission

; 527  : 			{
; 528  : 			PreEvalFlight(element, flight);

	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _element$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ; MissionEvaluationClass::PreEvalFlight

; 529  : 			element = (Flight) package->GetNextUnitElement();

	mov	eax, DWORD PTR _package$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _package$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	call	eax
	mov	DWORD PTR _element$[ebp], eax

; 530  : 			}

	jmp	SHORT $LN8@PreMission
$LN7@PreMission:

; 531  : 		}
; 532  : 	else

	jmp	SHORT $LN6@PreMission
$LN9@PreMission:

; 533  : 	{
; 534  : 		// Analyse all flights
; 535  : 		VuListIterator		flit(AllAirList);

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	ecx
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 536  : 		Unit				uelement;
; 537  : 		uelement = (Unit) flit.GetFirst();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _uelement$10[ebp], eax
$LN5@PreMission:

; 538  : 		while (uelement)

	cmp	DWORD PTR _uelement$10[ebp], 0
	je	SHORT $LN4@PreMission

; 539  : 		{
; 540  : 			if (uelement->IsFlight()){

	mov	edx, DWORD PTR _uelement$10[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uelement$10[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	SHORT $LN3@PreMission

; 541  : 				PreEvalFlight((Flight)uelement, flight);

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uelement$10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ; MissionEvaluationClass::PreEvalFlight
$LN3@PreMission:

; 542  : 			}
; 543  : 			uelement->SetInPackage(1);

	push	1
	mov	ecx, DWORD PTR _uelement$10[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage

; 544  : 			uelement = (Unit) flit.GetNext();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _uelement$10[ebp], eax

; 545  : 		}

	jmp	SHORT $LN5@PreMission
$LN4@PreMission:

; 546  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN6@PreMission:

; 547  : 
; 548  : 	friendly_losses = friendly_aa_losses = friendly_ga_losses = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+23], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+22], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+21], 0

; 549  : 	if (player_pilot)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN2@PreMission

; 550  : 		player_pilot->shot_at = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+72], 0
$LN2@PreMission:

; 551  : 	logbook_data.KilledByHuman = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+292], 0

; 552  : 	logbook_data.KilledBySelf = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+296], 0

; 553  : 	logbook_data.FriendlyFireKills = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+312], 0

; 554  : 	logbook_data.Flags = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+256], dx

; 555  : 
; 556  : 	if (aircraft_slot < 255)

	movzx	ecx, BYTE PTR _aircraft_slot$[ebp]
	cmp	ecx, 255				; 000000ffH
	jge	SHORT $LN1@PreMission

; 557  : 		SetPackageData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPackageData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::SetPackageData
$LN1@PreMission:

; 558  : 
; 559  : 	ShiAssert(package_element);
; 560  : 
; 561  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 562  : 
; 563  : 	return 0;

	xor	eax, eax

; 564  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z$0:
	lea	ecx, DWORD PTR _flit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z ENDP ; MissionEvaluationClass::PreMissionEval
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_flit$2 = -40						; size = 12
$T3 = -28						; size = 4
_uelement$4 = -24					; size = 4
_i$5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?PreDogfightEval@MissionEvaluationClass@@QAEXXZ PROC	; MissionEvaluationClass::PreDogfightEval
; _this$ = ecx

; 363  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 364  : 	// Called only upon entering/resetting a dogfight game
; 365  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 366  : 
; 367  : 	CleanupFlightData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupFlightData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupFlightData

; 368  : 	ClearPackageData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPackageData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPackageData

; 369  : 
; 370  : 	for (int i=0; i<MAX_RELATED_EVENTS; i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN7@PreDogfigh
$LN6@PreDogfigh:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN7@PreDogfigh:
	cmp	DWORD PTR _i$5[ebp], 5
	jge	SHORT $LN5@PreDogfigh

; 371  : 	{
; 372  : 		if (related_events[i])

	mov	ecx, DWORD PTR _i$5[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+236], 0
	je	SHORT $LN4@PreDogfigh

; 373  : 			delete related_events[i];

	mov	eax, DWORD PTR _i$5[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+236]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@PreDogfigh:

; 374  : 		related_events[i] = NULL;

	mov	ecx, DWORD PTR _i$5[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+236], 0

; 375  : 	}

	jmp	SHORT $LN6@PreDogfigh
$LN5@PreDogfigh:

; 376  : 	last_related_event = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+233], 0

; 377  : 
; 378  : 	contact_score = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0

; 379  : 	pack_success = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0

; 380  : 	package_element = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 381  : 	player_element = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 382  : 	player_aircraft_slot = 255;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+20], 255			; 000000ffH

; 383  : 	friendly_losses = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0

; 384  : 	actual_tot = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+168], 0

; 385  : 	patrol_time = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], 0

; 386  : 	package_mission = AMIS_SWEEP;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 7

; 387  : 	package_context = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], 0

; 388  : 	responses = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+28], dx

; 389  : 	requesting_ent = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+68], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+72], eax

; 390  : 	intercepting_ent = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+76], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+80], eax

; 391  : 	awacs_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+84], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+88], eax

; 392  : 	jstar_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+92], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+96], eax

; 393  : 	ecm_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+100], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+104], eax

; 394  : 	tanker_id = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+108], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+112], eax

; 395  : 	action_type = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+24], 0

; 396  : 	flags = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+26], dx

; 397  : 	team = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+25], 0

; 398  : 	alternate_strip_id = FalconNullId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+60], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+64], ecx

; 399  : 	abx = aby = -1;

	or	edx, -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+190], dx
	or	ecx, -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+188], cx

; 400  : 	player_start_time = vuxGameTime;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+176], ecx

; 401  : 	player_pilot = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 402  : 	curr_data = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+208], ax

; 403  : 	ClearPotentialTargets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPotentialTargets@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::ClearPotentialTargets

; 404  : 	// Analyse all flights
; 405  : 	{
; 406  : 		VuListIterator		flit(AllAirList);

	mov	edx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	edx
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 407  : 		Unit				uelement;
; 408  : 		uelement = (Unit) flit.GetFirst();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _uelement$4[ebp], eax
$LN3@PreDogfigh:

; 409  : 		while (uelement){

	cmp	DWORD PTR _uelement$4[ebp], 0
	je	SHORT $LN2@PreDogfigh

; 410  : 			if (uelement->IsFlight()){

	mov	eax, DWORD PTR _uelement$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _uelement$4[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN1@PreDogfigh

; 411  : 				PreEvalFlight((Flight)uelement, NULL);

	push	0
	mov	ecx, DWORD PTR _uelement$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreEvalFlight@MissionEvaluationClass@@QAEXPAVFlightClass@@0@Z ; MissionEvaluationClass::PreEvalFlight
$LN1@PreDogfigh:

; 412  : 			}
; 413  : 			uelement->SetInPackage(1);

	push	1
	mov	ecx, DWORD PTR _uelement$4[ebp]
	call	?SetInPackage@CampBaseClass@@QAEXH@Z	; CampBaseClass::SetInPackage

; 414  : 			uelement = (Unit) flit.GetNext();

	lea	ecx, DWORD PTR _flit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _uelement$4[ebp], eax

; 415  : 		}

	jmp	SHORT $LN3@PreDogfigh
$LN2@PreDogfigh:

; 416  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 417  : 
; 418  : 	memset(rounds_won, 0, MAX_DOGFIGHT_TEAMS*sizeof(uchar));

	push	5
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 228				; 000000e4H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 419  : 
; 420  : 	friendly_losses = friendly_aa_losses = friendly_ga_losses = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+22], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+21], 0

; 421  : 	logbook_data.KilledByHuman = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 0

; 422  : 	logbook_data.KilledBySelf = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], 0

; 423  : 	logbook_data.FriendlyFireKills = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+312], 0

; 424  : 	logbook_data.Flags = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+256], ax

; 425  : 
; 426  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 427  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ$0:
	lea	ecx, DWORD PTR _flit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PreDogfightEval@MissionEvaluationClass@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?PreDogfightEval@MissionEvaluationClass@@QAEXXZ ENDP	; MissionEvaluationClass::PreDogfightEval
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
tv88 = -32						; size = 4
$T1 = -28						; size = 4
_soon_to_die$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -16						; size = 4
_flight_ptr$ = -12					; size = 4
_k$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
?CleanupPilotData@MissionEvaluationClass@@QAEXXZ PROC	; MissionEvaluationClass::CleanupPilotData
; _this$ = ecx

; 335  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 336  : 	int				k;
; 337  : 	PilotDataClass	*pilot_data,*soon_to_die;
; 338  : 	FlightDataClass	*flight_ptr = flight_data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN7@CleanupPil:

; 339  : 
; 340  : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	$LN8@CleanupPil

; 341  : 		{
; 342  : 		pilot_data = flight_ptr->pilot_list;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR _pilot_data$[ebp], eax
$LN5@CleanupPil:

; 343  : 		while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	$LN4@CleanupPil

; 344  : 			{
; 345  : 			soon_to_die = pilot_data;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR _soon_to_die$[ebp], ecx

; 346  : 			for (k=0; k<(HARDPOINT_MAX/2)+2; k++)

	mov	DWORD PTR _k$[ebp], 0
	jmp	SHORT $LN3@CleanupPil
$LN2@CleanupPil:
	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
$LN3@CleanupPil:
	cmp	DWORD PTR _k$[ebp], 10			; 0000000aH
	jge	SHORT $LN1@CleanupPil

; 347  : 				{
; 348  : 				DisposeEventList(pilot_data->weapon_data[k].root_event);

	mov	eax, DWORD PTR _k$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	edx, DWORD PTR [ecx+eax+116]
	push	edx
	call	?DisposeEventList@@YAXPAVEventElement@@@Z ; DisposeEventList
	add	esp, 4

; 349  : 				pilot_data->weapon_data[k].root_event = NULL;

	mov	eax, DWORD PTR _k$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR [ecx+eax+116], 0

; 350  : 				pilot_data->weapon_data[k].events = 0;

	mov	edx, DWORD PTR _k$[ebp]
	imul	edx, 36					; 00000024H
	xor	eax, eax
	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	WORD PTR [ecx+edx+112], ax

; 351  : 				}

	jmp	SHORT $LN2@CleanupPil
$LN1@CleanupPil:

; 352  : 			pilot_data = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 353  : 			delete soon_to_die;

	mov	ecx, DWORD PTR _soon_to_die$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN10@CleanupPil
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GPilotDataClass@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN11@CleanupPil
$LN10@CleanupPil:
	mov	DWORD PTR tv88[ebp], 0
$LN11@CleanupPil:

; 354  : 			}

	jmp	$LN5@CleanupPil
$LN4@CleanupPil:

; 355  : 		flight_ptr->pilot_list = NULL;

	mov	eax, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR [eax+152], 0

; 356  : 		flight_ptr = flight_ptr->next_flight;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _flight_ptr$[ebp], edx

; 357  : 		}

	jmp	$LN7@CleanupPil
$LN8@CleanupPil:

; 358  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupPilotData@MissionEvaluationClass@@QAEXXZ ENDP	; MissionEvaluationClass::CleanupPilotData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_next_ptr$ = -24					; size = 4
tv71 = -20						; size = 4
$T1 = -16						; size = 4
_this$ = -12						; size = 4
$T2 = -8						; size = 4
_flight_ptr$ = -4					; size = 4
?CleanupFlightData@MissionEvaluationClass@@QAEXXZ PROC	; MissionEvaluationClass::CleanupFlightData
; _this$ = ecx

; 322  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	FlightDataClass		*flight_ptr = flight_data, *next_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR _flight_ptr$[ebp], ecx
$LN2@CleanupFli:

; 324  : 
; 325  : 	while (flight_ptr)

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	je	SHORT $LN1@CleanupFli

; 326  : 		{
; 327  : 		next_ptr = flight_ptr->next_flight;

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR _next_ptr$[ebp], eax

; 328  : 		delete flight_ptr;

	mov	ecx, DWORD PTR _flight_ptr$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN5@CleanupFli
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GFlightDataClass@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN6@CleanupFli
$LN5@CleanupFli:
	mov	DWORD PTR tv71[ebp], 0
$LN6@CleanupFli:

; 329  : 		flight_ptr = next_ptr;

	mov	eax, DWORD PTR _next_ptr$[ebp]
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 330  : 		}

	jmp	SHORT $LN2@CleanupFli
$LN1@CleanupFli:

; 331  : 	flight_data = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0

; 332  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupFlightData@MissionEvaluationClass@@QAEXXZ ENDP	; MissionEvaluationClass::CleanupFlightData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MissionEvaluationClass@@QAE@XZ PROC			; MissionEvaluationClass::~MissionEvaluationClass
; _this$ = ecx

; 317  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 318  : 	CleanupFlightData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupFlightData@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::CleanupFlightData

; 319  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1MissionEvaluationClass@@QAE@XZ ENDP			; MissionEvaluationClass::~MissionEvaluationClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
??0MissionEvaluationClass@@QAE@XZ PROC			; MissionEvaluationClass::MissionEvaluationClass
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	OFFSET ??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	5
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 302  : #ifdef FUNKY_KEVIN_DEBUG_STUFF
; 303  : 	ShiAssert(!inMission);
; 304  : #endif
; 305  : 
; 306  : 	memset (this, 0, sizeof (MissionEvaluationClass));

	push	320					; 00000140H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 307  : 	player_pilot = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 308  : 	package_element = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 309  : 	player_element = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 310  : 	flags = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+26], dx

; 311  : 	memset(rounds_won, 0, MAX_DOGFIGHT_TEAMS*sizeof(uchar));

	push	5
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 312  : 	for (int i=0; i<MAX_RELATED_EVENTS; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@MissionEva
$LN2@MissionEva:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN3@MissionEva:
	cmp	DWORD PTR _i$1[ebp], 5
	jge	SHORT $LN4@MissionEva

; 313  : 		related_events[i] = NULL;

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+236], 0
	jmp	SHORT $LN2@MissionEva
$LN4@MissionEva:

; 314  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0MissionEvaluationClass@@QAE@XZ ENDP			; MissionEvaluationClass::MissionEvaluationClass
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFlightDataClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFlightDataClass@@QAEPAXI@Z PROC			; FlightDataClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FlightDataClass@@QAE@XZ		; FlightDataClass::~FlightDataClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFlightDataClass@@QAEPAXI@Z ENDP			; FlightDataClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_next$ = -24						; size = 4
tv71 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_pilot_data$ = -4					; size = 4
??1FlightDataClass@@QAE@XZ PROC				; FlightDataClass::~FlightDataClass
; _this$ = ecx

; 278  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 280  : 
; 281  : 	PilotDataClass	*pilot_data = pilot_list;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _pilot_data$[ebp], ecx
$LN2@FlightData:

; 282  : 	PilotDataClass	*next;
; 283  : 
; 284  : 	while (pilot_data)

	cmp	DWORD PTR _pilot_data$[ebp], 0
	je	SHORT $LN1@FlightData

; 285  : 		{
; 286  : 		next = pilot_data->next_pilot;

	mov	edx, DWORD PTR _pilot_data$[ebp]
	mov	eax, DWORD PTR [edx+444]
	mov	DWORD PTR _next$[ebp], eax

; 287  : 		delete pilot_data;

	mov	ecx, DWORD PTR _pilot_data$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN5@FlightData
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GPilotDataClass@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN6@FlightData
$LN5@FlightData:
	mov	DWORD PTR tv71[ebp], 0
$LN6@FlightData:

; 288  : 		pilot_data = next;

	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR _pilot_data$[ebp], eax

; 289  : 		}

	jmp	SHORT $LN2@FlightData
$LN1@FlightData:

; 290  : 	pilot_list = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+152], 0

; 291  : 	DisposeEventList(root_event);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	call	?DisposeEventList@@YAXPAVEventElement@@@Z ; DisposeEventList
	add	esp, 4

; 292  : 
; 293  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 294  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1FlightDataClass@@QAE@XZ ENDP				; FlightDataClass::~FlightDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FlightDataClass@@QAE@XZ PROC				; FlightDataClass::FlightDataClass
; _this$ = ecx

; 252  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 253  : 	camp_id = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+36], ax

; 254  : 	flight_id = target_id = FalconNullId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+72], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+76], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	mov	ecx, DWORD PTR [edx+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	DWORD PTR [edx+44], ecx

; 255  : 	requester_id = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+64], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+68], edx

; 256  : 	start_aircraft = finish_aircraft = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+59], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+58], 0

; 257  : 	flight_team = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+60], 0

; 258  : 	mission = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0

; 259  : 	target_camp_id = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+80], cx

; 260  : 	target_building = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+82], 0

; 261  : 	target_x = target_y = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+86], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+84], ax

; 262  : 	status_flags = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0

; 263  : 	mission_success = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+95], 0

; 264  : 	mission_context = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+94], 0

; 265  : 	failure_code = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+96], 0

; 266  : 	failure_data = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+98], ax

; 267  : 	num_pilots = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+108], 0

; 268  : 	pilot_list = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0

; 269  : 	events = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+156], cx

; 270  : 	root_event = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0

; 271  : 	next_flight = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], 0

; 272  : 	memset(target_features,0,MAX_TARGET_FEATURES);

	push	5
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 273  : 	target_status = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+93], 0

; 274  : 	strcpy(context_entity_name,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 109				; 0000006dH
	push	ecx
	call	_strcpy
	add	esp, 8

; 275  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0FlightDataClass@@QAE@XZ ENDP				; FlightDataClass::FlightDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GPilotDataClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPilotDataClass@@QAEPAXI@Z PROC			; PilotDataClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PilotDataClass@@QAE@XZ		; PilotDataClass::~PilotDataClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPilotDataClass@@QAEPAXI@Z ENDP			; PilotDataClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PilotDataClass@@QAE@XZ PROC				; PilotDataClass::~PilotDataClass
; _this$ = ecx

; 247  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 248  : //	ShiAssert (FalconLocalSession->GetFlyState() == FLYSTATE_IN_UI); //NOTE Hit while discarding mission
; 249  : 	}

	push	OFFSET ??1WeaponDataClass@@QAE@XZ	; WeaponDataClass::~WeaponDataClass
	push	10					; 0000000aH
	push	36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??1PilotDataClass@@QAE@XZ ENDP				; PilotDataClass::~PilotDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PilotDataClass@@QAE@XZ PROC				; PilotDataClass::PilotDataClass
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??1WeaponDataClass@@QAE@XZ	; WeaponDataClass::~WeaponDataClass
	push	OFFSET ??0WeaponDataClass@@QAE@XZ	; WeaponDataClass::WeaponDataClass
	push	10					; 0000000aH
	push	36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z

; 226  : 	aircraft_slot = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+60], 0

; 227  : 	pilot_slot = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+61], 0

; 228  : 	pilot_id = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+62], ax

; 229  : 	pilot_flags = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+64], 0

; 230  : 	pilot_status = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+65], 0

; 231  : 	aircraft_status = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+66], 0

; 232  : 	aa_kills = ag_kills = as_kills = an_kills = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+70], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+69], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+68], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+67], 0

; 233  : 	donefiledebrief = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+82], 0

; 234  : 	player_kills = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+71], 0

; 235  : //	memset(kills,0,MAX_DOGFIGHT_TEAMS*VS_EITHER*sizeof(short));
; 236  : 	memset(deaths,0,VS_EITHER*sizeof(short));

	push	4
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 74					; 0000004aH
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 237  : 	shot_at = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+72], 0

; 238  : 	score = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+78], cx

; 239  : 	rating = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+80], 0

; 240  : 	weapon_types = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+81], 0

; 241  : 	next_pilot = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+444], 0

; 242  : 	pilot_callsign[0] = 0;

	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+30], 0

; 243  : 	pilot_name[0] = 0;

	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+edx], 0

; 244  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0PilotDataClass@@QAE@XZ ENDP				; PilotDataClass::PilotDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1WeaponDataClass@@QAE@XZ PROC				; WeaponDataClass::~WeaponDataClass
; _this$ = ecx

; 220  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 221  : 	DisposeEventList(root_event);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?DisposeEventList@@YAXPAVEventElement@@@Z ; DisposeEventList
	add	esp, 4

; 222  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1WeaponDataClass@@QAE@XZ ENDP				; WeaponDataClass::~WeaponDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campui\misseval.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0WeaponDataClass@@QAE@XZ PROC				; WeaponDataClass::WeaponDataClass
; _this$ = ecx

; 209  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 	starting_load = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+22], ax

; 211  : 	fired = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+24], 0

; 212  : 	missed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+25], 0

; 213  : 	hit = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+26], 0

; 214  : 	events = 0;	

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+28], dx

; 215  : 	root_event = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0

; 216  : 	weapon_id = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+20], dx

; 217  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0WeaponDataClass@@QAE@XZ ENDP				; WeaponDataClass::WeaponDataClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\dogfight.h
;	COMDAT ?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ PROC ; DogfightClass::GetGameType, COMDAT
; _this$ = ecx

; 90   : 		DogfightType GetGameType (void)					{ return gameType; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameType@DogfightClass@@QAE?AW4DogfightType@@XZ ENDP ; DogfightClass::GetGameType
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GEventElement@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GEventElement@@QAEPAXI@Z PROC			; EventElement::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1EventElement@@QAE@XZ			; EventElement::~EventElement
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GEventElement@@QAEPAXI@Z ENDP			; EventElement::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\evtparse.h
;	COMDAT ??1EventElement@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1EventElement@@QAE@XZ PROC				; EventElement::~EventElement, COMDAT
; _this$ = ecx

; 45   : 	~EventElement (void)		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1EventElement@@QAE@XZ ENDP				; EventElement::~EventElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\evtparse.h
;	COMDAT ??0EventElement@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0EventElement@@QAE@XZ PROC				; EventElement::EventElement, COMDAT
; _this$ = ecx

; 44   : 	EventElement (void)			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0EventElement@@QAE@XZ ENDP				; EventElement::EventElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ PROC	; FlightClass::GetRequesterID, COMDAT
; _this$ = ecx

; 106  : 		VU_ID GetRequesterID (void)					{ return requester; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+400]
	mov	edx, DWORD PTR [eax+404]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRequesterID@FlightClass@@QAE?AVVU_ID@@XZ ENDP	; FlightClass::GetRequesterID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetMissionContext@FlightClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionContext@FlightClass@@QAEEXZ PROC		; FlightClass::GetMissionContext, COMDAT
; _this$ = ecx

; 105  : 		uchar GetMissionContext (void)				{ return mission_context; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+383]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionContext@FlightClass@@QAEEXZ ENDP		; FlightClass::GetMissionContext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetEvalFlags@FlightClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEvalFlags@FlightClass@@QAEEXZ PROC			; FlightClass::GetEvalFlags, COMDAT
; _this$ = ecx

; 104  : 		uchar GetEvalFlags (void)					{ return eval_flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+382]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetEvalFlags@FlightClass@@QAEEXZ ENDP			; FlightClass::GetEvalFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetOriginalMission@FlightClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOriginalMission@FlightClass@@QAEEXZ PROC		; FlightClass::GetOriginalMission, COMDAT
; _this$ = ecx

; 102  : 		uchar GetOriginalMission (void)				{ return old_mission; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+378]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOriginalMission@FlightClass@@QAEEXZ ENDP		; FlightClass::GetOriginalMission
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ PROC ; PackageClass::GetMissionRequest, COMDAT
; _this$ = ecx

; 96   : 		MissionRequestClass *GetMissionRequest (void)	{ return &mis_request; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ENDP ; PackageClass::GetMissionRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetResponses@PackageClass@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetResponses@PackageClass@@QAEFXZ PROC			; PackageClass::GetResponses, COMDAT
; _this$ = ecx

; 92   : 		short GetResponses (void)						{ return responses; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+382]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetResponses@PackageClass@@QAEFXZ ENDP			; PackageClass::GetResponses
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetTanker@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetTanker@PackageClass@@QAE?AVVU_ID@@XZ PROC		; PackageClass::GetTanker, COMDAT
; _this$ = ecx

; 87   : 		VU_ID GetTanker (void)							{ return tanker; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [eax+340]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTanker@PackageClass@@QAE?AVVU_ID@@XZ ENDP		; PackageClass::GetTanker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetECM@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetECM@PackageClass@@QAE?AVVU_ID@@XZ PROC		; PackageClass::GetECM, COMDAT
; _this$ = ecx

; 85   : 		VU_ID GetECM (void)								{ return ecm; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR [eax+332]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetECM@PackageClass@@QAE?AVVU_ID@@XZ ENDP		; PackageClass::GetECM
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetJStar@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetJStar@PackageClass@@QAE?AVVU_ID@@XZ PROC		; PackageClass::GetJStar, COMDAT
; _this$ = ecx

; 84   : 		VU_ID GetJStar (void)							{ return jstar; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [eax+324]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetJStar@PackageClass@@QAE?AVVU_ID@@XZ ENDP		; PackageClass::GetJStar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetAwacs@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAwacs@PackageClass@@QAE?AVVU_ID@@XZ PROC		; PackageClass::GetAwacs, COMDAT
; _this$ = ecx

; 83   : 		VU_ID GetAwacs (void)							{ return awacs; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+312]
	mov	edx, DWORD PTR [eax+316]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAwacs@PackageClass@@QAE?AVVU_ID@@XZ ENDP		; PackageClass::GetAwacs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetInterceptor@PackageClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetInterceptor@PackageClass@@QAE?AVVU_ID@@XZ PROC	; PackageClass::GetInterceptor, COMDAT
; _this$ = ecx

; 82   : 		VU_ID GetInterceptor (void)						{ return interceptor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	mov	edx, DWORD PTR [eax+308]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetInterceptor@PackageClass@@QAE?AVVU_ID@@XZ ENDP	; PackageClass::GetInterceptor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\objectiv.h
;	COMDAT ?GetObjectiveStatus@ObjectiveClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ PROC		; ObjectiveClass::GetObjectiveStatus, COMDAT
; _this$ = ecx

; 270  : 	uchar GetObjectiveStatus (void)							{	return obj_data.status; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+199]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectiveStatus@ObjectiveClass@@QAEEXZ ENDP		; ObjectiveClass::GetObjectiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetTarget@UnitClass@@QAEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTarget@UnitClass@@QAEPAVFalconEntity@@XZ PROC	; UnitClass::GetTarget, COMDAT
; _this$ = ecx

; 366  : 	FalconEntity* GetTarget (void)					{ return (FalconEntity*) vuDatabase->Find(target_id); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	push	ecx
	mov	edx, DWORD PTR [eax+212]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTarget@UnitClass@@QAEPAVFalconEntity@@XZ ENDP	; UnitClass::GetTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Broken@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Broken@UnitClass@@QBEHXZ PROC				; UnitClass::Broken, COMDAT
; _this$ = ecx

; 320  : 	int Broken () const								{ return (int)unit_flags & U_BROKEN; }		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 32768				; 00008000H
	mov	esp, ebp
	pop	ebp
	ret	0
?Broken@UnitClass@@QBEHXZ ENDP				; UnitClass::Broken
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?Moving@UnitClass@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Moving@UnitClass@@QBEHXZ PROC				; UnitClass::Moving, COMDAT
; _this$ = ecx

; 316  : 	int Moving() const								{ return (int)unit_flags & U_MOVING; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	and	eax, 1024				; 00000400H
	mov	esp, ebp
	pop	ebp
	ret	0
?Moving@UnitClass@@QBEHXZ ENDP				; UnitClass::Moving
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ PROC ; VuBin<CampBaseClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ENDP ; VuBin<CampBaseClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetType, COMDAT
; _this$ = ecx

; 289  : 	uchar GetType()	const						{	return (EntityType())->classInfo_[VU_TYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetDomain@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDomain@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetDomain, COMDAT
; _this$ = ecx

; 287  : 	uchar GetDomain (void)	const						{	return (EntityType())->classInfo_[VU_DOMAIN]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 0
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDomain@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?InPackage@CampBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InPackage@CampBaseClass@@QAEHXZ PROC			; CampBaseClass::InPackage, COMDAT
; _this$ = ecx

; 274  : 	int InPackage (void)						{	return local_flags & CBC_IN_PACKAGE; }		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+156]
	and	eax, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?InPackage@CampBaseClass@@QAEHXZ ENDP			; CampBaseClass::InPackage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPLocation@WayPointClass@@QBEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetWPLocation@WayPointClass@@QBEXPAF0@Z PROC		; WayPointClass::GetWPLocation, COMDAT
; _this$ = ecx

; 205  : 	void GetWPLocation (GridIndex* x, GridIndex* y) const { *x = GridX; *y = GridY; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWPLocation@WayPointClass@@QBEXPAF0@Z ENDP		; WayPointClass::GetWPLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPDepartureTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPDepartureTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPDepartureTime, COMDAT
; _this$ = ecx

; 203  : 	CampaignTime GetWPDepartureTime()				{ return Depart; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPDepartureTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPDepartureTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAltitude@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAltitude@WayPointClass@@QAEHXZ PROC		; WayPointClass::GetWPAltitude, COMDAT
; _this$ = ecx

; 199  : 	int GetWPAltitude()								{ return (int)(GridZ*GRIDZ_SCALE_FACTOR); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	imul	eax, 10					; 0000000aH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAltitude@WayPointClass@@QAEHXZ ENDP		; WayPointClass::GetWPAltitude
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetPrevWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPrevWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetPrevWP, COMDAT
; _this$ = ecx

; 176  : 	WayPoint GetPrevWP (void)						{ return PrevWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPrevWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetPrevWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPFlags@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPFlags@WayPointClass@@QAEKXZ PROC			; WayPointClass::GetWPFlags, COMDAT
; _this$ = ecx

; 173  : 	ulong GetWPFlags (void)							{ return (ulong)Flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPFlags@WayPointClass@@QAEKXZ ENDP			; WayPointClass::GetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPTargetBuilding@WayPointClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPTargetBuilding@WayPointClass@@QAEEXZ PROC		; WayPointClass::GetWPTargetBuilding, COMDAT
; _this$ = ecx

; 169  : 	uchar GetWPTargetBuilding (void)				{ return TargetBuilding; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+27]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPTargetBuilding@WayPointClass@@QAEEXZ ENDP		; WayPointClass::GetWPTargetBuilding
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ PROC ; WayPointClass::GetWPTarget, COMDAT
; _this$ = ecx

; 168  : 	CampEntity GetWPTarget (void)					{ return (CampEntity)vuDatabase->Find(TargetID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPTarget@WayPointClass@@QAEPAVCampBaseClass@@XZ ENDP ; WayPointClass::GetWPTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ PROC	; WayPointClass::GetWPTargetID, COMDAT
; _this$ = ecx

; 167  : 	VU_ID GetWPTargetID (void)						{ return TargetID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ ENDP	; WayPointClass::GetWPTargetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSim@FalconEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsSim@FalconEntity@@QAEHXZ PROC			; FalconEntity::IsSim, COMDAT
; _this$ = ecx

; 103  : 		{return (falconType & FalconSimEntity) ? TRUE : FALSE;};

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	and	ecx, 2
	je	SHORT $LN3@IsSim
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsSim
$LN3@IsSim:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsSim:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSim@FalconEntity@@QAEHXZ ENDP			; FalconEntity::IsSim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsCampaign@FalconEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsCampaign@FalconEntity@@QAEHXZ PROC			; FalconEntity::IsCampaign, COMDAT
; _this$ = ecx

; 101  : 		{return (falconType & FalconCampaignEntity) ? TRUE : FALSE;};

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	and	ecx, 1
	je	SHORT $LN3@IsCampaign
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsCampaign
$LN3@IsCampaign:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsCampaign:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCampaign@FalconEntity@@QAEHXZ ENDP			; FalconEntity::IsCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Type@VuEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuEntity@@QBEGXZ PROC				; VuEntity::Type, COMDAT
; _this$ = ecx

; 154  : 	ushort Type() const       { return share_.entityType_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuEntity@@QBEGXZ ENDP				; VuEntity::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT ?_tcsstr@@YAPADPADPBD@Z
_TEXT	SEGMENT
__S$ = 8						; size = 4
__P$ = 12						; size = 4
?_tcsstr@@YAPADPADPBD@Z PROC				; _tcsstr, COMDAT

; 2011 :         {return ((char *)_tcsstr((const char *)_S, _P)); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __P$[ebp]
	push	eax
	mov	ecx, DWORD PTR __S$[ebp]
	push	ecx
	call	__tcsstr
	add	esp, 8
	pop	ebp
	ret	0
?_tcsstr@@YAPADPADPBD@Z ENDP				; _tcsstr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__s2$ = 12						; size = 4
__tcscmp PROC						; COMDAT

; 1651 : _Check_return_ __inline int _tcscmp(_In_ _CPC _s1,_In_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __s1$[ebp]
	push	ecx
	call	__mbscmp
	add	esp, 8
	pop	ebp
	ret	0
__tcscmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsstr
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__s2$ = 12						; size = 4
__tcsstr PROC						; COMDAT

; 1553 : _Check_return_ __inline _CRPC _tcsstr(_In_ _CPC _s1,_In_ _CPC _s2) {return (_CRPC)_mbsstr((_CPUC)_s1,(_CPUC)_s2);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __s1$[ebp]
	push	ecx
	call	__mbsstr
	add	esp, 8
	pop	ebp
	ret	0
__tcsstr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
