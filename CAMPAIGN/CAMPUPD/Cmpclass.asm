; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\CAMPAIGN\CAMPUPD\Cmpclass.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
PUBLIC	__GUID_0002e012_0000_0000_c000_000000000046
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?gCurrentDataVersion@@3HA			; gCurrentDataVersion
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?gClearPilotInfo@@3HA				; gClearPilotInfo
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?gTacticalFullEdit@@3HA				; gTacticalFullEdit
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	__GUID_00000000_0000_0000_0000_000000000000
PUBLIC	?chDirSep@ATL@@3DB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3DB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3DB				; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3DB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3DB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QBDB				; ATL::szStringVal
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	?multiszStringVal@ATL@@3QBDB			; ATL::multiszStringVal
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	?szDwordVal@ATL@@3QBDB				; ATL::szDwordVal
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	?szBinaryVal@ATL@@3QBDB				; ATL::szBinaryVal
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	?szValToken@ATL@@3QBDB				; ATL::szValToken
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	?szForceRemove@ATL@@3QBDB			; ATL::szForceRemove
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	?szNoRemove@ATL@@3QBDB				; ATL::szNoRemove
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	?szDelete@ATL@@3QBDB				; ATL::szDelete
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	__GUID_00000109_0000_0000_c000_000000000046
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	_IID_IInternalConnection
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?TimeAdjust@@3VTimeAdjustClass@@A		; TimeAdjust
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?_Min@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Min
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?_Max@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Max
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?_Min@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Min
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Max@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Max
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?_Min@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Min
PUBLIC	?_Max@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Max
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?MAX_VALUE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_VALUE
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?_Min@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Min
PUBLIC	?_Max@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Max
PUBLIC	?_Min@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Max
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	__GUID_00020400_0000_0000_c000_000000000046
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?_Min@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Min
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?_Max@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Max
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?cbNeverDelete@CRegParser@ATL@@1HB		; ATL::CRegParser::cbNeverDelete
PUBLIC	?VT@?$CVarTypeInfo@D@ATL@@2GB			; ATL::CVarTypeInfo<char>::VT
PUBLIC	?MAX_TYPE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_TYPE
PUBLIC	?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::CVarTypeInfo<char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@E@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::CVarTypeInfo<unsigned char>::pmField
PUBLIC	_CLSID_Registrar
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?VT@?$CVarTypeInfo@PAD@ATL@@2GB			; ATL::CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::CVarTypeInfo<char *>::pmField
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?VT@?$CVarTypeInfo@PAE@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	_IID_IRegistrar
PUBLIC	?VT@?$CVarTypeInfo@F@ATL@@2GB			; ATL::CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::CVarTypeInfo<short>::pmField
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?VT@?$CVarTypeInfo@PAF@ATL@@2GB			; ATL::CVarTypeInfo<short *>::VT
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::CVarTypeInfo<short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@G@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::CVarTypeInfo<unsigned short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAG@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?VT@?$CVarTypeInfo@H@ATL@@2GB			; ATL::CVarTypeInfo<int>::VT
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::CVarTypeInfo<int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAH@ATL@@2GB			; ATL::CVarTypeInfo<int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::CVarTypeInfo<int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@I@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::CVarTypeInfo<unsigned int>::pmField
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?VT@?$CVarTypeInfo@PAI@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::CVarTypeInfo<unsigned int *>::pmField
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?VT@?$CVarTypeInfo@J@ATL@@2GB			; ATL::CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::CVarTypeInfo<long>::pmField
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?VT@?$CVarTypeInfo@PAJ@ATL@@2GB			; ATL::CVarTypeInfo<long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::CVarTypeInfo<long *>::pmField
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?VT@?$CVarTypeInfo@K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::CVarTypeInfo<unsigned long>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAK@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::CVarTypeInfo<unsigned long *>::pmField
PUBLIC	__GUID_b196b284_bab4_101a_b69c_00aa00341d07
PUBLIC	?VT@?$CVarTypeInfo@_J@ATL@@2GB			; ATL::CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::CVarTypeInfo<__int64>::pmField
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?VT@?$CVarTypeInfo@PA_J@ATL@@2GB		; ATL::CVarTypeInfo<__int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::CVarTypeInfo<__int64 *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@_K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_K@ATL@@2GB		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?VT@?$CVarTypeInfo@M@ATL@@2GB			; ATL::CVarTypeInfo<float>::VT
PUBLIC	?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::CVarTypeInfo<float>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAM@ATL@@2GB			; ATL::CVarTypeInfo<float *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::CVarTypeInfo<float *>::pmField
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?VT@?$CVarTypeInfo@N@ATL@@2GB			; ATL::CVarTypeInfo<double>::VT
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::CVarTypeInfo<double>::pmField
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?VT@?$CVarTypeInfo@PAN@ATL@@2GB			; ATL::CVarTypeInfo<double *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::CVarTypeInfo<double *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB	; ATL::CVarTypeInfo<tagVARIANT *>::VT
PUBLIC	?VT@?$CVarTypeInfo@PA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ ; ATL::CVarTypeInfo<wchar_t *>::pmField
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ ; ATL::CVarTypeInfo<wchar_t * *>::pmField
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	_LIBID_ATLLib
PUBLIC	?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch *>::VT
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch *>::pmField
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY>::pmField
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY *>::pmField
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
_BSS	SEGMENT
?gClearPilotInfo@@3HA DD 01H DUP (?)			; gClearPilotInfo
?gTacticalFullEdit@@3HA DD 01H DUP (?)			; gTacticalFullEdit
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?TimeAdjust@@3VTimeAdjustClass@@A DQ 01H DUP (?)	; TimeAdjust
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB DW 04008H		; ATL::CVarTypeInfo<wchar_t * *>::VT
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_W@ATL@@2GB DW 08H			; ATL::CVarTypeInfo<wchar_t *>::VT
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB DW 0400cH	; ATL::CVarTypeInfo<tagVARIANT *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b284_bab4_101a_b69c_00aa00341d07 DD 0b196b284H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAG@ATL@@2GB DW 04012H		; ATL::CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::CVarTypeInfo<char>::pmField
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
_NEAR_CLIP DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_TYPE@CRegParser@ATL@@1HB DD 01000H			; ATL::CRegParser::MAX_TYPE
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT
?cbNeverDelete@CRegParser@ATL@@1HB DD 0cH		; ATL::CRegParser::cbNeverDelete
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Max@?$AtlLimits@_K@ATL@@2_KB DQ ffffffffffffffffH	; ATL::AtlLimits<unsigned __int64>::_Max
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Min@?$AtlLimits@_K@ATL@@2_KB DQ 0000000000000000H	; ATL::AtlLimits<unsigned __int64>::_Min
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020400_0000_0000_c000_000000000046 DD 020400H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Max@?$AtlLimits@_J@ATL@@2_JB DQ 7fffffffffffffffH	; ATL::AtlLimits<__int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Min@?$AtlLimits@_J@ATL@@2_JB DQ 8000000000000000H	; ATL::AtlLimits<__int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Max@?$AtlLimits@K@ATL@@2KB DD 0ffffffffH		; ATL::AtlLimits<unsigned long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Min@?$AtlLimits@K@ATL@@2KB DD 00H			; ATL::AtlLimits<unsigned long>::_Min
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_VALUE@CRegParser@ATL@@1HB DD 01000H		; ATL::CRegParser::MAX_VALUE
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Max@?$AtlLimits@J@ATL@@2JB DD 07fffffffH		; ATL::AtlLimits<long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Min@?$AtlLimits@J@ATL@@2JB DD 080000000H		; ATL::AtlLimits<long>::_Min
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Max@?$AtlLimits@I@ATL@@2IB DD 0ffffffffH		; ATL::AtlLimits<unsigned int>::_Max
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Min@?$AtlLimits@I@ATL@@2IB DD 00H			; ATL::AtlLimits<unsigned int>::_Min
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Max@?$AtlLimits@H@ATL@@2HB DD 07fffffffH		; ATL::AtlLimits<int>::_Max
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Min@?$AtlLimits@H@ATL@@2HB DD 080000000H		; ATL::AtlLimits<int>::_Min
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT
__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713 DD 07fd52380H
	DW	04e07H
	DW	0101bH
	DB	0aeH
	DB	02dH
	DB	08H
	DB	00H
	DB	02bH
	DB	02eH
	DB	0c7H
	DB	013H
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000109_0000_0000_c000_000000000046 DD 0109H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QBDB
CONST	SEGMENT
?szDelete@ATL@@3QBDB DD FLAT:??_C@_06JBKGCNBB@Delete?$AA@ ; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QBDB
CONST	SEGMENT
?szNoRemove@ATL@@3QBDB DD FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QBDB
CONST	SEGMENT
?szForceRemove@ATL@@3QBDB DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QBDB
CONST	SEGMENT
?szValToken@ATL@@3QBDB DD FLAT:??_C@_03LAIAPFCB@Val?$AA@ ; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QBDB
CONST	SEGMENT
?szBinaryVal@ATL@@3QBDB DD FLAT:??_C@_01HMGJMAIH@B?$AA@	; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QBDB
CONST	SEGMENT
?szDwordVal@ATL@@3QBDB DD FLAT:??_C@_01CKDDGHAB@D?$AA@	; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QBDB
CONST	SEGMENT
?multiszStringVal@ATL@@3QBDB DD FLAT:??_C@_01PLPBNMEI@M?$AA@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QBDB
CONST	SEGMENT
?szStringVal@ATL@@3QBDB DD FLAT:??_C@_01CPLAODJH@S?$AA@	; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3DB
CONST	SEGMENT
?chEquals@ATL@@3DB DB 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3DB
CONST	SEGMENT
?chQuote@ATL@@3DB DB 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3DB
CONST	SEGMENT
?chLeftBracket@ATL@@3DB DB 07bH				; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3DB
CONST	SEGMENT
?chRightBracket@ATL@@3DB DB 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3DB
CONST	SEGMENT
?chDirSep@ATL@@3DB DB 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT
__GUID_00000000_0000_0000_0000_000000000000 DD 00H
	DW	00H
	DW	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0002e012_0000_0000_c000_000000000046 DD 02e012H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT
__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352 DD 0fc4801a3H
	DW	02ba9H
	DW	011cfH
	DB	0a2H
	DB	029H
	DB	00H
	DB	0aaH
	DB	00H
	DB	03dH
	DB	073H
	DB	052H
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
?gCurrentDataVersion@@3HA DD 049H			; gCurrentDataVersion
_DATA	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?Domain@VuEntity@@QBEEXZ			; VuEntity::Domain
PUBLIC	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::OwnerId
PUBLIC	?Type@VuEntity@@QBEGXZ				; VuEntity::Type
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?SessionCount@VuGroupEntity@@QAEHXZ		; VuGroupEntity::SessionCount
PUBLIC	?SetMaxSessions@VuGameEntity@@QAEXG@Z		; VuGameEntity::SetMaxSessions
PUBLIC	?checked_atan2@@YANNN@Z				; checked_atan2
PUBLIC	?Camp_Init@@YAXH@Z				; Camp_Init
PUBLIC	?Camp_Exit@@YAXXZ				; Camp_Exit
PUBLIC	?Camp_GetCurrentTime@@YAKXZ			; Camp_GetCurrentTime
PUBLIC	?Camp_FreeMemory@@YAXXZ				; Camp_FreeMemory
PUBLIC	??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z	; F4ScopeLock::F4ScopeLock
PUBLIC	??1F4ScopeLock@@QAE@XZ				; F4ScopeLock::~F4ScopeLock
PUBLIC	??_GAS_DataClass@@QAEPAXI@Z			; AS_DataClass::`scalar deleting destructor'
PUBLIC	__tcsnccpy
PUBLIC	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ	; RulesClass::GetRules
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	??0?$VuBin@VFalconGameEntity@@@@QAE@PAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::VuBin<FalconGameEntity>
PUBLIC	??1?$VuBin@VFalconGameEntity@@@@QAE@XZ		; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>
PUBLIC	?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ ; VuBin<FalconGameEntity>::get
PUBLIC	?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::reset
PUBLIC	?LoopStarter@CampaignClass@@QAEKXZ		; CampaignClass::LoopStarter
PUBLIC	??0CampaignClass@@QAE@XZ			; CampaignClass::CampaignClass
PUBLIC	??1CampaignClass@@QAE@XZ			; CampaignClass::~CampaignClass
PUBLIC	?Reset@CampaignClass@@QAEXXZ			; CampaignClass::Reset
PUBLIC	?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::InitCampaign
PUBLIC	?GetCampaignTime@CampaignClass@@QAEKXZ		; CampaignClass::GetCampaignTime
PUBLIC	?GetCampaignDay@CampaignClass@@QAEHXZ		; CampaignClass::GetCampaignDay
PUBLIC	?GetCurrentDay@CampaignClass@@QAEHXZ		; CampaignClass::GetCurrentDay
PUBLIC	?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ	; CampaignClass::GetMinutesSinceMidnight
PUBLIC	?SetTheater@CampaignClass@@QAEHPAD@Z		; CampaignClass::SetTheater
PUBLIC	?SetScenario@CampaignClass@@QAEHPAD@Z		; CampaignClass::SetScenario
PUBLIC	?GetPlayerLocation@CampaignClass@@QAEXPAF0@Z	; CampaignClass::GetPlayerLocation
PUBLIC	?GotJoinData@CampaignClass@@QAEXXZ		; CampaignClass::GotJoinData
PUBLIC	?IsLoaded@CampaignClass@@QAEHXZ			; CampaignClass::IsLoaded
PUBLIC	?IsPreLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsPreLoaded
PUBLIC	?IsSuspended@CampaignClass@@QAEHXZ		; CampaignClass::IsSuspended
PUBLIC	?IsMaster@CampaignClass@@QAEHXZ			; CampaignClass::IsMaster
PUBLIC	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadScenarioStats
PUBLIC	?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z ; CampaignClass::RequestScenarioStats
PUBLIC	?ClearCurrentPreload@CampaignClass@@QAEXXZ	; CampaignClass::ClearCurrentPreload
PUBLIC	?NewCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::NewCampaign
PUBLIC	?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadCampaign
PUBLIC	?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::JoinCampaign
PUBLIC	?StartRemoteCampaign@CampaignClass@@QAEHPAVFalconGameEntity@@@Z ; CampaignClass::StartRemoteCampaign
PUBLIC	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign
PUBLIC	?ReallyEndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::ReallyEndCampaign
PUBLIC	?EndCampaign@CampaignClass@@QAEXXZ		; CampaignClass::EndCampaign
PUBLIC	?Suspend@CampaignClass@@QAEXXZ			; CampaignClass::Suspend
PUBLIC	?Resume@CampaignClass@@QAEXXZ			; CampaignClass::Resume
PUBLIC	?SetOnlineStatus@CampaignClass@@QAEXH@Z		; CampaignClass::SetOnlineStatus
PUBLIC	?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z	; CampaignClass::GetBullseyeLocation
PUBLIC	?GetBullseyeSimLocation@CampaignClass@@QAEXPAM0@Z ; CampaignClass::GetBullseyeSimLocation
PUBLIC	?GetBullseyeName@CampaignClass@@QAEEXZ		; CampaignClass::GetBullseyeName
PUBLIC	?SetBullseye@CampaignClass@@QAEXEFF@Z		; CampaignClass::SetBullseye
PUBLIC	?BearingToBullseyeDeg@CampaignClass@@QAEHMM@Z	; CampaignClass::BearingToBullseyeDeg
PUBLIC	?RangeToBullseyeFt@CampaignClass@@QAEHMM@Z	; CampaignClass::RangeToBullseyeFt
PUBLIC	?LoadData@CampaignClass@@QAEHPAU_iobuf@@@Z	; CampaignClass::LoadData
PUBLIC	?SaveData@CampaignClass@@QAEHPAU_iobuf@@@Z	; CampaignClass::SaveData
PUBLIC	?Decode@CampaignClass@@QAEHPAPAEPAJ@Z		; CampaignClass::Decode
PUBLIC	?Encode@CampaignClass@@QAEHPAPAE@Z		; CampaignClass::Encode
PUBLIC	?SaveSize@CampaignClass@@QAEJXZ			; CampaignClass::SaveSize
PUBLIC	?GetRecentEventlist@CampaignClass@@QAEPAUuieventnode@@XZ ; CampaignClass::GetRecentEventlist
PUBLIC	?GetRecentPriorityEventList@CampaignClass@@QAEPAUuieventnode@@XZ ; CampaignClass::GetRecentPriorityEventList
PUBLIC	?AddCampaignEvent@CampaignClass@@QAEXPAUuieventnode@@@Z ; CampaignClass::AddCampaignEvent
PUBLIC	?DisposeEventLists@CampaignClass@@QAEXXZ	; CampaignClass::DisposeEventLists
PUBLIC	?TrimCampUILists@CampaignClass@@QAEXXZ		; CampaignClass::TrimCampUILists
PUBLIC	?MakeCampMap@CampaignClass@@QAEPAEH@Z		; CampaignClass::MakeCampMap
PUBLIC	?FreeCampMaps@CampaignClass@@QAEXXZ		; CampaignClass::FreeCampMaps
PUBLIC	?VerifySquadrons@CampaignClass@@QAEXH@Z		; CampaignClass::VerifySquadrons
PUBLIC	?FreeSquadronData@CampaignClass@@QAEXXZ		; CampaignClass::FreeSquadronData
PUBLIC	?ReadValidAircraftTypes@CampaignClass@@QAEXPAD@Z ; CampaignClass::ReadValidAircraftTypes
PUBLIC	?IsValidAircraftType@CampaignClass@@QAEHPAVUnitClass@@@Z ; CampaignClass::IsValidAircraftType
PUBLIC	?IsValidSquadron@CampaignClass@@QAEHH@Z		; CampaignClass::IsValidSquadron
PUBLIC	?ChillTypes@CampaignClass@@QAEXXZ		; CampaignClass::ChillTypes
PUBLIC	?Initiative@TeamClass@@QAEHXZ			; TeamClass::Initiative
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?GetUnitNameID@UnitClass@@QAEHXZ		; UnitClass::GetUnitNameID
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
PUBLIC	?GetPatchID@SquadronClass@@QAEEXZ		; SquadronClass::GetPatchID
PUBLIC	?GetLoadout@FlightClass@@QAEPAULoadoutStruct@@XZ ; FlightClass::GetLoadout
PUBLIC	??_GMissionEvaluationClass@@QAEPAXI@Z		; MissionEvaluationClass::`scalar deleting destructor'
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
PUBLIC	?GetPlayerEntity@FalconSessionEntity@@QBEPAVFalconEntity@@XZ ; FalconSessionEntity::GetPlayerEntity
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	??_GTacanList@@QAEPAXI@Z			; TacanList::`scalar deleting destructor'
PUBLIC	??_GNavigationSystem@@QAEPAXI@Z			; NavigationSystem::`scalar deleting destructor'
PUBLIC	?Camp_MakeInstantAction@@YAXXZ			; Camp_MakeInstantAction
PUBLIC	?ReadVersionNumber@@YAHPAD@Z			; ReadVersionNumber
PUBLIC	?WriteVersionNumber@@YAXPAD@Z			; WriteVersionNumber
PUBLIC	?NukeHistoryFiles@@YAXXZ			; NukeHistoryFiles
PUBLIC	?SaveAfterRename@@YAHPADW4FalconGameType@@@Z	; SaveAfterRename
PUBLIC	??0OldSquadUIInfoClass@@QAE@XZ			; OldSquadUIInfoClass::OldSquadUIInfoClass
PUBLIC	??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z ; operator!=<FalconGameEntity>
PUBLIC	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
PUBLIC	?TrashCampaignUnits@@YAXXZ			; TrashCampaignUnits
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?TheCampaign@@3VCampaignClass@@A		; TheCampaign
PUBLIC	?gCampDataVersion@@3HA				; gCampDataVersion
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_0M@OHMBOHGM@Red?5Herring?$AA@		; `string'
PUBLIC	??_C@_09KNOCLLMD@?$CFs?2?$CFs?4his?$AA@		; `string'
PUBLIC	??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@		; `string'
PUBLIC	??_C@_09BHIMJCDA@?$CFs?2?$CFs?4frc?$AA@		; `string'
PUBLIC	??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@		; `string'
PUBLIC	??_C@_07HMOCDNDG@Instant?$AA@			; `string'
PUBLIC	??_C@_0BK@KOMKFNMG@Done?5requesting?5shit?4?4?4?5?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@FFMAJKAK@Got?5Join?5data?$CB?5Still?5needed?5?$DN?5?$CFx@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_03JIBIFJIL@cmp?$AA@			; `string'
PUBLIC	??_C@_0BI@PJPBLJIK@Calling?5EndCampaign?4?4?5?6?$AA@ ; `string'
PUBLIC	??_C@_07NBAJNMPO@ValidAC?$AA@			; `string'
PUBLIC	??_C@_03FMODHJAO@act?$AA@			; `string'
PUBLIC	??_C@_04EBEAAKOA@?$CFd?$CFn?$AA@		; `string'
PUBLIC	??_C@_0BK@NOONBFMJ@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$CFn?$AA@ ; `string'
PUBLIC	??_C@_0N@CHFHFGIO@campCritical?$AA@		; `string'
PUBLIC	??_C@_07BJOIOONN@Strings?$AA@			; `string'
PUBLIC	??_C@_03MDPKMNBM@ver?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BI@ODMBACPF@Error?5opening?5file?5?$CFs?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@NLCJOJJC@RENAMING?5OF?5?$CFs?5COMPLETED?5SUCCESS@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@42652ee1
PUBLIC	__real@8000000000000000
PUBLIC	__real@bff921fb54442d18
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_unlink:PROC
EXTRN	_fprintf:PROC
EXTRN	_fread:PROC
EXTRN	_fwrite:PROC
EXTRN	_sscanf:PROC
EXTRN	_sprintf:PROC
EXTRN	_atan:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_stricmp:PROC
EXTRN	_MonoPrint:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__CopyFileA@12:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Insert
EXTRN	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Remove
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?VuEnterCriticalSection@@YAXXZ:PROC		; VuEnterCriticalSection
EXTRN	?VuExitCriticalSection@@YAXXZ:PROC		; VuExitCriticalSection
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	?ClearCameras@VuSessionEntity@@QAEX_N@Z:PROC	; VuSessionEntity::ClearCameras
EXTRN	??0VuThread@@QAE@PAVVuMessageFilter@@H@Z:PROC	; VuThread::VuThread
EXTRN	?JoinGame@VuMainThread@@QAEHPAVVuGameEntity@@@Z:PROC ; VuMainThread::JoinGame
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	?FreeTheaterTerrain@@YAXXZ:PROC			; FreeTheaterTerrain
EXTRN	_F4CreateCriticalSection:PROC
EXTRN	_F4DestroyCriticalSection:PROC
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	??1AS_DataClass@@QAE@XZ:PROC			; AS_DataClass::~AS_DataClass
EXTRN	__mbsncpy:PROC
EXTRN	??0FalconGameEntity@@QAE@KPAD@Z:PROC		; FalconGameEntity::FalconGameEntity
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	?UpdateRules@FalconGameEntity@@QAEXPAURulesStruct@@@Z:PROC ; FalconGameEntity::UpdateRules
EXTRN	?LoadTheater@@YAHPAD@Z:PROC			; LoadTheater
EXTRN	?CloseCampFile@@YAXPAU_iobuf@@@Z:PROC		; CloseCampFile
EXTRN	?StartReadCampFile@@YAXW4FalconGameType@@PAD@Z:PROC ; StartReadCampFile
EXTRN	?ReadCampFile@@YA?AUCampaignData@@PAD0@Z:PROC	; ReadCampFile
EXTRN	?EndReadCampFile@@YAXXZ:PROC			; EndReadCampFile
EXTRN	?StartWriteCampFile@@YAXW4FalconGameType@@PAD@Z:PROC ; StartWriteCampFile
EXTRN	?EndWriteCampFile@@YAXXZ:PROC			; EndWriteCampFile
EXTRN	??0SquadUIInfoClass@@QAE@XZ:PROC		; SquadUIInfoClass::SquadUIInfoClass
EXTRN	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z:PROC ; FalconMessageFilter::FalconMessageFilter
EXTRN	??1FalconMessageFilter@@UAE@XZ:PROC		; FalconMessageFilter::~FalconMessageFilter
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	?DisposeEventList@@YAXPAUuieventnode@@@Z:PROC	; DisposeEventList
EXTRN	?TrimEventList@@YAXPAUuieventnode@@H@Z:PROC	; TrimEventList
EXTRN	?GetClassID@@YAHEEEEEEEE@Z:PROC			; GetClassID
EXTRN	?SetName@TeamClass@@QAEXPAD@Z:PROC		; TeamClass::SetName
EXTRN	?AddNewTeams@@YAXW4RelType@@@Z:PROC		; AddNewTeams
EXTRN	?RemoveTeams@@YAXXZ:PROC			; RemoveTeams
EXTRN	?LoadTeams@@YAHPAD@Z:PROC			; LoadTeams
EXTRN	?SaveTeams@@YAHPAD@Z:PROC			; SaveTeams
EXTRN	?LoadPriorityTables@@YAXXZ:PROC			; LoadPriorityTables
EXTRN	?ResetNamespaces@@YAXXZ:PROC			; ResetNamespaces
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?KillUnit@UnitClass@@QAEXXZ:PROC		; UnitClass::KillUnit
EXTRN	?SaveUnits@@YAXPAD@Z:PROC			; SaveUnits
EXTRN	?LoadUnits@@YAHPAD@Z:PROC			; LoadUnits
EXTRN	?RebuildObjectiveLists@@YAHXZ:PROC		; RebuildObjectiveLists
EXTRN	?StandardRebuild@@YAXXZ:PROC			; StandardRebuild
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?LoadBaseObjectives@@YAHPAD@Z:PROC		; LoadBaseObjectives
EXTRN	?LoadObjectiveDeltas@@YAHPAD@Z:PROC		; LoadObjectiveDeltas
EXTRN	?SaveBaseObjectives@@YAXPAD@Z:PROC		; SaveBaseObjectives
EXTRN	?SaveObjectiveDeltas@@YAXPAD@Z:PROC		; SaveObjectiveDeltas
EXTRN	?Distance@@YAMMMMM@Z:PROC			; Distance
EXTRN	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z:PROC ; GetObjectiveByXY
EXTRN	?GridToSim@@YAMF@Z:PROC				; GridToSim
EXTRN	?ConvertSimToGrid@@YAXPAUvector@@PAF1@Z:PROC	; ConvertSimToGrid
EXTRN	?NewCampaignEvents@@YAHPAD@Z:PROC		; NewCampaignEvents
EXTRN	?LoadCampaignEvents@@YAHPAD0@Z:PROC		; LoadCampaignEvents
EXTRN	?SaveCampaignEvents@@YAHPAD@Z:PROC		; SaveCampaignEvents
EXTRN	?DisposeCampaignEvents@@YAXXZ:PROC		; DisposeCampaignEvents
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?Init@WeatherClass@@QAEX_N@Z:PROC		; WeatherClass::Init
EXTRN	?CampLoad@WeatherClass@@QAEHPADH@Z:PROC		; WeatherClass::CampLoad
EXTRN	?Save@WeatherClass@@QAEHPAD@Z:PROC		; WeatherClass::Save
EXTRN	?FreeNames@@YAXXZ:PROC				; FreeNames
EXTRN	??0FalconRequestCampaignData@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconRequestCampaignData::FalconRequestCampaignData
EXTRN	?ReadIndex@@YAXPAD@Z:PROC			; ReadIndex
EXTRN	?FreeIndex@@YAXXZ:PROC				; FreeIndex
EXTRN	?NewPilotInfo@@YAXXZ:PROC			; NewPilotInfo
EXTRN	?LoadPilotInfo@@YAHPAD@Z:PROC			; LoadPilotInfo
EXTRN	?SavePilotInfo@@YAXPAD@Z:PROC			; SavePilotInfo
EXTRN	?DisposePilotInfo@@YAXXZ:PROC			; DisposePilotInfo
EXTRN	??0MissionEvaluationClass@@QAE@XZ:PROC		; MissionEvaluationClass::MissionEvaluationClass
EXTRN	??1MissionEvaluationClass@@QAE@XZ:PROC		; MissionEvaluationClass::~MissionEvaluationClass
EXTRN	?PreDogfightEval@MissionEvaluationClass@@QAEXXZ:PROC ; MissionEvaluationClass::PreDogfightEval
EXTRN	?MakeCampMap@@YAPAEHPAEH@Z:PROC			; MakeCampMap
EXTRN	?FreeCampMap@@YAXPAE@Z:PROC			; FreeCampMap
EXTRN	?DumpDivisionData@@YAXXZ:PROC			; DumpDivisionData
EXTRN	?BuildDivisionData@@YAXXZ:PROC			; BuildDivisionData
EXTRN	?start_campaign_thread@ThreadManager@@SAXP6GIXZ@Z:PROC ; ThreadManager::start_campaign_thread
EXTRN	?stop_campaign_thread@ThreadManager@@SAXXZ:PROC	; ThreadManager::stop_campaign_thread
EXTRN	?slow_campaign@ThreadManager@@SAXXZ:PROC	; ThreadManager::slow_campaign
EXTRN	?fast_campaign@ThreadManager@@SAXXZ:PROC	; ThreadManager::fast_campaign
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z:PROC ; FalconSessionEntity::SetPlayerSquadron
EXTRN	?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z:PROC ; FalconSessionEntity::SetPlayerSquadronID
EXTRN	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z:PROC ; FalconSessionEntity::SetPlayerFlight
EXTRN	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z:PROC ; FalconSessionEntity::SetPlayerEntity
EXTRN	?SetFlyState@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetFlyState
EXTRN	?InitPersistantDatabase@@YAXXZ:PROC		; InitPersistantDatabase
EXTRN	?CleanupPersistantDatabase@@YAXXZ:PROC		; CleanupPersistantDatabase
EXTRN	?SavePersistantList@@YAXPAD@Z:PROC		; SavePersistantList
EXTRN	?LoadPersistantList@@YAXPAD@Z:PROC		; LoadPersistantList
EXTRN	?CleanupPersistantList@@YAXXZ:PROC		; CleanupPersistantList
EXTRN	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z:PROC ; UIComms::LookAtGame
EXTRN	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ:PROC ; UIComms::GetTargetGame
EXTRN	_LZSS_Compress:PROC
EXTRN	_LZSS_Expand:PROC
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0TacanList@@QAE@XZ:PROC			; TacanList::TacanList
EXTRN	??1TacanList@@QAE@XZ:PROC			; TacanList::~TacanList
EXTRN	??0NavigationSystem@@QAE@XZ:PROC		; NavigationSystem::NavigationSystem
EXTRN	??1NavigationSystem@@QAE@XZ:PROC		; NavigationSystem::~NavigationSystem
EXTRN	?save_data@tactical_mission@@QAEXPAD@Z:PROC	; tactical_mission::save_data
EXTRN	?SavePrimaryObjectiveList@@YAXPAD@Z:PROC	; SavePrimaryObjectiveList
EXTRN	?LoadPrimaryObjectiveList@@YAHPAD@Z:PROC	; LoadPrimaryObjectiveList
EXTRN	?SetTimeCompression@@YAXH@Z:PROC		; SetTimeCompression
EXTRN	?SetTime@@YAXK@Z:PROC				; SetTime
EXTRN	?CampaignThread@@YGIXZ:PROC			; CampaignThread
EXTRN	?ChooseBullseye@@YAXXZ:PROC			; ChooseBullseye
EXTRN	?SetCampaignStartupMode@@YAXXZ:PROC		; SetCampaignStartupMode
EXTRN	?tactical_is_training@@YAHXZ:PROC		; tactical_is_training
EXTRN	?InitBaseLists@@YAXXZ:PROC			; InitBaseLists
EXTRN	?InitCampaignLists@@YAXXZ:PROC			; InitCampaignLists
EXTRN	?InitTheaterLists@@YAXXZ:PROC			; InitTheaterLists
EXTRN	?DisposeBaseLists@@YAXXZ:PROC			; DisposeBaseLists
EXTRN	?DisposeCampaignLists@@YAXXZ:PROC		; DisposeCampaignLists
EXTRN	?DisposeTheaterLists@@YAXXZ:PROC		; DisposeTheaterLists
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuPlayerPoolGroup@@3PAVVuGameEntity@@A:DWORD	; vuPlayerPoolGroup
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?gMainThread@@3PAVVuMainThread@@A:DWORD		; gMainThread
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?Map_Max_X@@3FA:WORD				; Map_Max_X
EXTRN	?Map_Max_Y@@3FA:WORD				; Map_Max_Y
EXTRN	?ASD@@3PAVAS_DataClass@@A:DWORD			; ASD
EXTRN	?gRules@@3PAVRulesClass@@A:BYTE			; gRules
EXTRN	?RuleMode@@3W4RulesModes@@A:DWORD		; RuleMode
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?DefaultDamageMods@@3PAEA:BYTE			; DefaultDamageMods
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?AllUnitList@@3PAVVuLinkedList@@A:DWORD		; AllUnitList
EXTRN	?AllAirList@@3PAVVuLinkedList@@A:DWORD		; AllAirList
EXTRN	?realWeather@@3PAVRealWeather@@A:DWORD		; realWeather
EXTRN	?FALCON_PLAYER_TEAM@@3FA:WORD			; FALCON_PLAYER_TEAM
EXTRN	?STANDARD_EVENT_LENGTH@@3FA:WORD		; STANDARD_EVENT_LENGTH
EXTRN	?PRIORITY_EVENT_LENGTH@@3FA:WORD		; PRIORITY_EVENT_LENGTH
EXTRN	?CountryNameStr@@3PAY0BE@DA:BYTE		; CountryNameStr
EXTRN	?MRX@@3HA:DWORD					; MRX
EXTRN	?MRY@@3HA:DWORD					; MRY
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?gTacanList@@3PAVTacanList@@A:DWORD		; gTacanList
EXTRN	?gNavigationSys@@3PAVNavigationSystem@@A:DWORD	; gNavigationSys
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?current_tactical_mission@@3PAVtactical_mission@@A:DWORD ; current_tactical_mission
EXTRN	?gLastId@@3FA:WORD				; gLastId
EXTRN	?PMRX@@3HA:DWORD				; PMRX
EXTRN	?PMRY@@3HA:DWORD				; PMRY
EXTRN	?MAXOI@@3HA:DWORD				; MAXOI
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?TheCampaign@@3VCampaignClass@@A DB 08ccH DUP (?)	; TheCampaign
?gCampDataVersion@@3HA DD 01H DUP (?)			; gCampDataVersion
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@42652ee1
CONST	SEGMENT
__real@42652ee1 DD 042652ee1r			; 57.2958
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NLCJOJJC@RENAMING?5OF?5?$CFs?5COMPLETED?5SUCCESS@
CONST	SEGMENT
??_C@_0CI@NLCJOJJC@RENAMING?5OF?5?$CFs?5COMPLETED?5SUCCESS@ DB 'RENAMING '
	DB	'OF %s COMPLETED SUCCESSFULLY!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ODMBACPF@Error?5opening?5file?5?$CFs?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BI@ODMBACPF@Error?5opening?5file?5?$CFs?$CB?6?$AA@ DB 'Error openi'
	DB	'ng file %s!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MDPKMNBM@ver?$AA@
CONST	SEGMENT
??_C@_03MDPKMNBM@ver?$AA@ DB 'ver', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07BJOIOONN@Strings?$AA@
CONST	SEGMENT
??_C@_07BJOIOONN@Strings?$AA@ DB 'Strings', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHFHFGIO@campCritical?$AA@
CONST	SEGMENT
??_C@_0N@CHFHFGIO@campCritical?$AA@ DB 'campCritical', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NOONBFMJ@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$CFn?$AA@
CONST	SEGMENT
??_C@_0BK@NOONBFMJ@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$CFn?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d %d%n', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBEAAKOA@?$CFd?$CFn?$AA@
CONST	SEGMENT
??_C@_04EBEAAKOA@?$CFd?$CFn?$AA@ DB '%d%n', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FMODHJAO@act?$AA@
CONST	SEGMENT
??_C@_03FMODHJAO@act?$AA@ DB 'act', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBAJNMPO@ValidAC?$AA@
CONST	SEGMENT
??_C@_07NBAJNMPO@ValidAC?$AA@ DB 'ValidAC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PJPBLJIK@Calling?5EndCampaign?4?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@PJPBLJIK@Calling?5EndCampaign?4?4?5?6?$AA@ DB 'Calling EndCampa'
	DB	'ign.. ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIBIFJIL@cmp?$AA@
CONST	SEGMENT
??_C@_03JIBIFJIL@cmp?$AA@ DB 'cmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FFMAJKAK@Got?5Join?5data?$CB?5Still?5needed?5?$DN?5?$CFx@
CONST	SEGMENT
??_C@_0CC@FFMAJKAK@Got?5Join?5data?$CB?5Still?5needed?5?$DN?5?$CFx@ DB 'G'
	DB	'ot Join data! Still needed = %x', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KOMKFNMG@Done?5requesting?5shit?4?4?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BK@KOMKFNMG@Done?5requesting?5shit?4?4?4?5?6?$AA@ DB 'Done request'
	DB	'ing shit... ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMOCDNDG@Instant?$AA@
CONST	SEGMENT
??_C@_07HMOCDNDG@Instant?$AA@ DB 'Instant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@
CONST	SEGMENT
??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@ DB '%s\tmp.frc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHIMJCDA@?$CFs?2?$CFs?4frc?$AA@
CONST	SEGMENT
??_C@_09BHIMJCDA@?$CFs?2?$CFs?4frc?$AA@ DB '%s\%s.frc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@
CONST	SEGMENT
??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@ DB '%s\tmp.his', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KNOCLLMD@?$CFs?2?$CFs?4his?$AA@
CONST	SEGMENT
??_C@_09KNOCLLMD@?$CFs?2?$CFs?4his?$AA@ DB '%s\%s.his', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHMBOHGM@Red?5Herring?$AA@
CONST	SEGMENT
??_C@_0M@OHMBOHGM@Red?5Herring?$AA@ DB 'Red Herring', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?TrashCampaignUnits@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TrashCampaignUnits@@YAXXZ$0
__unwindtable$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z$0
__unwindtable$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z$0
__unwindtable$??1CampaignClass@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CampaignClass@@QAE@XZ$0
__unwindtable$??0CampaignClass@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CampaignClass@@QAE@XZ$0
__unwindtable$?VerifySquadrons@CampaignClass@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VerifySquadrons@CampaignClass@@QAEXH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?VerifySquadrons@CampaignClass@@QAEXH@Z$1
__unwindtable$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$1
__unwindtable$?Camp_Exit@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Camp_Exit@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Camp_Exit@@YAXXZ$1
__unwindtable$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$2
__unwindtable$?Camp_Init@@YAXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Camp_Init@@YAXH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Camp_Init@@YAXH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Camp_Init@@YAXH@Z$2
__unwindtable$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$3
__ehfuncinfo$?TrashCampaignUnits@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TrashCampaignUnits@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?VerifySquadrons@CampaignClass@@QAEXH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?VerifySquadrons@CampaignClass@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CampaignClass@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CampaignClass@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CampaignClass@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CampaignClass@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Camp_Exit@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Camp_Exit@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Camp_Init@@YAXH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Camp_Init@@YAXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_TheCampaign$initializer$ DD FLAT:??__ETheCampaign@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gCampDataVersion$initializer$ DD FLAT:??__EgCampDataVersion@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_myit$ = -28						; size = 12
_u$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?TrashCampaignUnits@@YAXXZ PROC				; TrashCampaignUnits

; 2132 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TrashCampaignUnits@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2133 : 	Unit			u;
; 2134 : 
; 2135 : 	FalconLocalSession->SetPlayerEntity(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity

; 2136 : 	FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 2137 : 	FalconLocalSession->SetPlayerSquadron(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 2138 : 	VuListIterator	myit(AllUnitList);

	mov	eax, DWORD PTR ?AllUnitList@@3PAVVuLinkedList@@A ; AllUnitList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2139 : 	u = (Unit) myit.GetFirst();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _u$[ebp], eax
$LN2@TrashCampa:

; 2140 : 	while (u)

	cmp	DWORD PTR _u$[ebp], 0
	je	SHORT $LN1@TrashCampa

; 2141 : 	{
; 2142 : 		u->KillUnit();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?KillUnit@UnitClass@@QAEXXZ		; UnitClass::KillUnit

; 2143 : 		vuDatabase->Remove(u);

	mov	ecx, DWORD PTR _u$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 2144 : 		u = (Unit) myit.GetNext();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _u$[ebp], eax

; 2145 : 	}

	jmp	SHORT $LN2@TrashCampa
$LN1@TrashCampa:

; 2146 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?TrashCampaignUnits@@YAXXZ$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?TrashCampaignUnits@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TrashCampaignUnits@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?TrashCampaignUnits@@YAXXZ ENDP				; TrashCampaignUnits
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z PROC ; operator==<VuSessionEntity>, COMDAT

; 72   : template <class E> bool operator==(const void* le, const VuBin<E> &re){ return ((void*)re.get()) == le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ENDP ; operator==<VuSessionEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z PROC ; operator!=<FalconGameEntity>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ ; VuBin<FalconGameEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z ENDP ; operator!=<FalconGameEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0OldSquadUIInfoClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0OldSquadUIInfoClass@@QAE@XZ PROC			; OldSquadUIInfoClass::OldSquadUIInfoClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0OldSquadUIInfoClass@@QAE@XZ ENDP			; OldSquadUIInfoClass::OldSquadUIInfoClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_fp$ = -268						; size = 4
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_savefile$ = 8						; size = 4
_gametype$ = 12						; size = 4
?SaveAfterRename@@YAHPADW4FalconGameType@@@Z PROC	; SaveAfterRename

; 2204 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2205 : 	FILE*	fp;
; 2206 : 	char	filename[MAX_PATH];
; 2207 : 
; 2208 : 	strcpy(filename,savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 2209 : 
; 2210 : 	StartWriteCampFile (gametype, filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	call	?StartWriteCampFile@@YAXW4FalconGameType@@PAD@Z ; StartWriteCampFile
	add	esp, 8

; 2211 : 
; 2212 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2213 : 
; 2214 : 	if (gametype == game_TacticalEngagement)

	cmp	DWORD PTR _gametype$[ebp], 3
	jne	SHORT $LN2@SaveAfterR

; 2215 : 	{
; 2216 : 		current_tactical_mission->save_data(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?save_data@tactical_mission@@QAEXPAD@Z	; tactical_mission::save_data
$LN2@SaveAfterR:

; 2217 : 	}
; 2218 : 
; 2219 : 	//	if (!CampMapSize || !TheaterSizeX || !CampMapData || save_mode == CAMP_SAVE_FULL)
; 2220 : 	//		MakeCampMap(MAP_OWNERSHIP);
; 2221 : 	TheCampaign.VerifySquadrons(FALCON_PLAYER_TEAM);

	movsx	edx, WORD PTR ?FALCON_PLAYER_TEAM@@3FA	; FALCON_PLAYER_TEAM
	push	edx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?VerifySquadrons@CampaignClass@@QAEXH@Z	; CampaignClass::VerifySquadrons

; 2222 : 
; 2223 : 	fp = OpenCampFile (filename, "cmp", "wb");

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	OFFSET ??_C@_03JIBIFJIL@cmp?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 2224 : 	if (!fp)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN1@SaveAfterR

; 2225 : 	{
; 2226 : 		MonoPrint("Error opening file %s!\n",filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BI@ODMBACPF@Error?5opening?5file?5?$CFs?$CB?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 2227 : 		return 0;

	xor	eax, eax
	jmp	$LN3@SaveAfterR
$LN1@SaveAfterR:

; 2228 : 	}
; 2229 : 
; 2230 : 	TheCampaign.SaveData(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveData@CampaignClass@@QAEHPAU_iobuf@@@Z ; CampaignClass::SaveData

; 2231 : 	CloseCampFile(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	?CloseCampFile@@YAXPAU_iobuf@@@Z	; CloseCampFile
	add	esp, 4

; 2232 : 	SaveBaseObjectives(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?SaveBaseObjectives@@YAXPAD@Z		; SaveBaseObjectives
	add	esp, 4

; 2233 : 	SaveObjectiveDeltas(filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	?SaveObjectiveDeltas@@YAXPAD@Z		; SaveObjectiveDeltas
	add	esp, 4

; 2234 : 	SaveUnits(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?SaveUnits@@YAXPAD@Z			; SaveUnits
	add	esp, 4

; 2235 : 	SaveTeams(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?SaveTeams@@YAHPAD@Z			; SaveTeams
	add	esp, 4

; 2236 : 	SaveCampaignEvents(filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	?SaveCampaignEvents@@YAHPAD@Z		; SaveCampaignEvents
	add	esp, 4

; 2237 : 	SavePilotInfo(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?SavePilotInfo@@YAXPAD@Z		; SavePilotInfo
	add	esp, 4

; 2238 : 	SavePersistantList(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?SavePersistantList@@YAXPAD@Z		; SavePersistantList
	add	esp, 4

; 2239 : 	((WeatherClass*)realWeather)->Save(filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?Save@WeatherClass@@QAEHPAD@Z		; WeatherClass::Save

; 2240 : 
; 2241 : 	WriteVersionNumber(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?WriteVersionNumber@@YAXPAD@Z		; WriteVersionNumber
	add	esp, 4

; 2242 : 	EndWriteCampFile ();

	call	?EndWriteCampFile@@YAXXZ		; EndWriteCampFile

; 2243 : 
; 2244 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2245 : 
; 2246 : 	MonoPrint("RENAMING OF %s COMPLETED SUCCESSFULLY!\n",filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@NLCJOJJC@RENAMING?5OF?5?$CFs?5COMPLETED?5SUCCESS@
	call	_MonoPrint
	add	esp, 8

; 2247 : 	return 1;

	mov	eax, 1
$LN3@SaveAfterR:

; 2248 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveAfterRename@@YAHPADW4FalconGameType@@@Z ENDP	; SaveAfterRename
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
?NukeHistoryFiles@@YAXXZ PROC				; NukeHistoryFiles

; 2190 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2191 : 	char	filename[MAX_PATH];
; 2192 : 
; 2193 : 	sprintf(filename,"%s\\tmp.his",FalconCampUserSaveDirectory,TheCampaign.SaveFile);

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+182
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 2194 : 	unlink(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_unlink
	add	esp, 4

; 2195 : 	sprintf(filename,"%s\\tmp.frc",FalconCampUserSaveDirectory,TheCampaign.SaveFile);

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+182
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2196 : 	unlink(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_unlink
	add	esp, 4

; 2197 : #ifdef DEBUG
; 2198 : 	sprintf(filename,"campaign\\save\\dump\\errors.log");
; 2199 : 	unlink(filename);
; 2200 : #endif
; 2201 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?NukeHistoryFiles@@YAXXZ ENDP				; NukeHistoryFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_vers$ = -8						; size = 4
_fp$ = -4						; size = 4
_saveFile$ = 8						; size = 4
?WriteVersionNumber@@YAXPAD@Z PROC			; WriteVersionNumber

; 2177 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2178 : 	FILE	*fp;
; 2179 : 	int		vers = gCurrentDataVersion;

	mov	eax, DWORD PTR ?gCurrentDataVersion@@3HA ; gCurrentDataVersion
	mov	DWORD PTR _vers$[ebp], eax

; 2180 : 
; 2181 : 	fp = OpenCampFile (saveFile, "ver", "w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_03MDPKMNBM@ver?$AA@
	mov	ecx, DWORD PTR _saveFile$[ebp]
	push	ecx
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 2182 : 	if (fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN2@WriteVersi

; 2183 : 	{
; 2184 : 		fprintf(fp, "%d", vers);

	mov	edx, DWORD PTR _vers$[ebp]
	push	edx
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 2185 : 		CloseCampFile(fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	?CloseCampFile@@YAXPAU_iobuf@@@Z	; CloseCampFile
	add	esp, 4
$LN2@WriteVersi:

; 2186 : 	}
; 2187 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?WriteVersionNumber@@YAXPAD@Z ENDP			; WriteVersionNumber
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
_cd$ = -16						; size = 8
$T2 = -8						; size = 4
_vers$ = -4						; size = 4
_saveFile$ = 8						; size = 4
?ReadVersionNumber@@YAHPAD@Z PROC			; ReadVersionNumber

; 2161 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2162 : 	//char *data;
; 2163 : 
; 2164 : 	int	vers = 1;		// If we can't load a version file, assume the worst ? RH

	mov	DWORD PTR _vers$[ebp], 1

; 2165 : 
; 2166 : 	CampaignData cd = ReadCampFile (saveFile, "ver");

	push	OFFSET ??_C@_03MDPKMNBM@ver?$AA@
	mov	eax, DWORD PTR _saveFile$[ebp]
	push	eax
	call	?ReadCampFile@@YA?AUCampaignData@@PAD0@Z ; ReadCampFile
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _cd$[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR _cd$[ebp+4], edx

; 2167 : 
; 2168 : 	if (cd.dataSize != -1) {

	cmp	DWORD PTR _cd$[ebp], -1
	je	SHORT $LN1@ReadVersio

; 2169 : 		sscanf (cd.data, "%d", &vers);

	lea	eax, DWORD PTR _vers$[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	ecx, DWORD PTR _cd$[ebp+4]
	push	ecx
	call	_sscanf
	add	esp, 12					; 0000000cH

; 2170 : 		delete cd.data;

	mov	edx, DWORD PTR _cd$[ebp+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@ReadVersio:

; 2171 : 	}
; 2172 : 
; 2173 : 	return vers;

	mov	eax, DWORD PTR _vers$[ebp]

; 2174 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReadVersionNumber@@YAHPAD@Z ENDP			; ReadVersionNumber
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
?Camp_MakeInstantAction@@YAXXZ PROC			; Camp_MakeInstantAction

; 2150 : {

	push	ebp
	mov	ebp, esp

; 2151 : 	TheCampaign.Flags |= CAMP_LIGHT;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	or	eax, 128				; 00000080H
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, eax

; 2152 : 	TheCampaign.DisposeEventLists();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 2153 : 	TheCampaign.FreeCampMaps();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?FreeCampMaps@CampaignClass@@QAEXXZ	; CampaignClass::FreeCampMaps

; 2154 : 	TheCampaign.FreeSquadronData();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 2155 : 	TheCampaign.ChillTypes();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 2156 : 	TheCampaign.CurrentTime = 0;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A, 0

; 2157 : 	//TrashCampaignUnits();
; 2158 : }

	pop	ebp
	ret	0
?Camp_MakeInstantAction@@YAXXZ ENDP			; Camp_MakeInstantAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
;	COMDAT ??__EgCampDataVersion@@YAXXZ
text$yc	SEGMENT
??__EgCampDataVersion@@YAXXZ PROC			; `dynamic initializer for 'gCampDataVersion'', COMDAT

; 73   : int gCampDataVersion = gCurrentDataVersion;	

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?gCurrentDataVersion@@3HA ; gCurrentDataVersion
	mov	DWORD PTR ?gCampDataVersion@@3HA, eax	; gCampDataVersion
	pop	ebp
	ret	0
??__EgCampDataVersion@@YAXXZ ENDP			; `dynamic initializer for 'gCampDataVersion''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FTheCampaign@@YAXXZ
text$yd	SEGMENT
??__FTheCampaign@@YAXXZ PROC				; `dynamic atexit destructor for 'TheCampaign'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	??1CampaignClass@@QAE@XZ		; CampaignClass::~CampaignClass
	pop	ebp
	ret	0
??__FTheCampaign@@YAXXZ ENDP				; `dynamic atexit destructor for 'TheCampaign''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
;	COMDAT ??__ETheCampaign@@YAXXZ
text$yc	SEGMENT
??__ETheCampaign@@YAXXZ PROC				; `dynamic initializer for 'TheCampaign'', COMDAT

; 61   : CampaignClass	TheCampaign;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	??0CampaignClass@@QAE@XZ		; CampaignClass::CampaignClass
	push	OFFSET ??__FTheCampaign@@YAXXZ		; `dynamic atexit destructor for 'TheCampaign''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__ETheCampaign@@YAXXZ ENDP				; `dynamic initializer for 'TheCampaign''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GNavigationSystem@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GNavigationSystem@@QAEPAXI@Z PROC			; NavigationSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NavigationSystem@@QAE@XZ		; NavigationSystem::~NavigationSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNavigationSystem@@QAEPAXI@Z ENDP			; NavigationSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTacanList@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GTacanList@@QAEPAXI@Z PROC				; TacanList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TacanList@@QAE@XZ			; TacanList::~TacanList
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTacanList@@QAEPAXI@Z ENDP				; TacanList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerEntity@FalconSessionEntity@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerEntity@FalconSessionEntity@@QBEPAVFalconEntity@@XZ PROC ; FalconSessionEntity::GetPlayerEntity, COMDAT
; _this$ = ecx

; 138  : 	FalconEntity* GetPlayerEntity(void) const     { return playerEntityPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerEntity@FalconSessionEntity@@QBEPAVFalconEntity@@XZ ENDP ; FalconSessionEntity::GetPlayerEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerSquadronID, COMDAT
; _this$ = ecx

; 133  : 	VU_ID GetPlayerSquadronID(void) const         { return playerSquadron; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	edx, DWORD PTR [eax+456]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GMissionEvaluationClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMissionEvaluationClass@@QAEPAXI@Z PROC		; MissionEvaluationClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MissionEvaluationClass@@QAE@XZ	; MissionEvaluationClass::~MissionEvaluationClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMissionEvaluationClass@@QAEPAXI@Z ENDP		; MissionEvaluationClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\flight.h
;	COMDAT ?GetLoadout@FlightClass@@QAEPAULoadoutStruct@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLoadout@FlightClass@@QAEPAULoadoutStruct@@XZ PROC	; FlightClass::GetLoadout, COMDAT
; _this$ = ecx

; 100  : 		LoadoutStruct *GetLoadout (void)			{ return loadout; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+372]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLoadout@FlightClass@@QAEPAULoadoutStruct@@XZ ENDP	; FlightClass::GetLoadout
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\squadron.h
;	COMDAT ?GetPatchID@SquadronClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPatchID@SquadronClass@@QAEEXZ PROC			; SquadronClass::GetPatchID, COMDAT
; _this$ = ecx

; 81   : 	uchar GetPatchID (void) { return squadron_patch; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1459]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPatchID@SquadronClass@@QAEEXZ ENDP			; SquadronClass::GetPatchID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ PROC ; VuBin<FalconEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ENDP ; VuBin<FalconEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitNameID@UnitClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitNameID@UnitClass@@QAEHXZ PROC			; UnitClass::GetUnitNameID, COMDAT
; _this$ = ecx

; 381  : 	int GetUnitNameID (void)						{ return name_id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+226]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitNameID@UnitClass@@QAEHXZ ENDP			; UnitClass::GetUnitNameID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?Initiative@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Initiative@TeamClass@@QAEHXZ PROC			; TeamClass::Initiative, COMDAT
; _this$ = ecx

; 318  : 	int Initiative(void)						{ return initiative; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+144]
	mov	esp, ebp
	pop	ebp
	ret	0
?Initiative@TeamClass@@QAEHXZ ENDP			; TeamClass::Initiative
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?ChillTypes@CampaignClass@@QAEXXZ PROC			; CampaignClass::ChillTypes
; _this$ = ecx

; 2046 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2047 : 	if (NumberOfValidTypes > 0 && NumberOfValidTypes != CAMP_FLY_ANY_AIRCRAFT)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+316]
	test	ecx, ecx
	jle	SHORT $LN2@ChillTypes
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+316]
	cmp	eax, 8888				; 000022b8H
	je	SHORT $LN2@ChillTypes

; 2048 : 	{
; 2049 : 		NumberOfValidTypes = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+316], cx

; 2050 : 		delete [] ValidAircraftTypes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2051 : 		ValidAircraftTypes = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
$LN2@ChillTypes:

; 2052 : 	}
; 2053 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ChillTypes@CampaignClass@@QAEXXZ ENDP			; CampaignClass::ChillTypes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?IsValidSquadron@CampaignClass@@QAEHH@Z PROC		; CampaignClass::IsValidSquadron
; _this$ = ecx

; 2032 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2033 : 	if (id >= NumAvailSquadrons)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+310]
	cmp	DWORD PTR _id$[ebp], ecx
	jl	SHORT $LN6@IsValidSqu

; 2034 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@IsValidSqu
$LN6@IsValidSqu:

; 2035 : 	if (NumberOfValidTypes == CAMP_FLY_ANY_AIRCRAFT)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+316]
	cmp	eax, 8888				; 000022b8H
	jne	SHORT $LN5@IsValidSqu

; 2036 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN7@IsValidSqu
$LN5@IsValidSqu:

; 2037 : 	for (int i=0; i<NumberOfValidTypes; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@IsValidSqu
$LN3@IsValidSqu:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@IsValidSqu:
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+316]
	cmp	DWORD PTR _i$1[ebp], eax
	jge	SHORT $LN2@IsValidSqu

; 2038 : 	{
; 2039 : 		if (CampaignSquadronData[id].dIndex == ValidAircraftTypes[i])

	mov	ecx, DWORD PTR _id$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+312]
	movsx	ecx, WORD PTR [eax+ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _i$1[ebp]
	movsx	eax, WORD PTR [eax+edx*2]
	cmp	ecx, eax
	jne	SHORT $LN1@IsValidSqu

; 2040 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN7@IsValidSqu
$LN1@IsValidSqu:

; 2041 : 	}

	jmp	SHORT $LN3@IsValidSqu
$LN2@IsValidSqu:

; 2042 : 	return 0;

	xor	eax, eax
$LN7@IsValidSqu:

; 2043 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsValidSquadron@CampaignClass@@QAEHH@Z ENDP		; CampaignClass::IsValidSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_type$ = -12						; size = 4
_this$ = -8						; size = 4
_i$ = -4						; size = 4
_u$ = 8							; size = 4
?IsValidAircraftType@CampaignClass@@QAEHPAVUnitClass@@@Z PROC ; CampaignClass::IsValidAircraftType
; _this$ = ecx

; 2012 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2013 : 	int	type,i;
; 2014 : 	// KCK: I'm intentionally return 0 in the FLY_ANY_AIRCRAFT
; 2015 : 	// state, because we use this to determine if a mission should
; 2016 : 	// be assigned to a 'player' type squadron
; 2017 : 	if (NumberOfValidTypes < CAMP_FLY_ANY_AIRCRAFT)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+316]
	cmp	ecx, 8888				; 000022b8H
	jge	SHORT $LN6@IsValidAir

; 2018 : 	{
; 2019 : 		type = u->Type() - VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _u$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	edx, ax
	sub	edx, 100				; 00000064H
	mov	DWORD PTR _type$[ebp], edx

; 2020 : 		if (!type)

	jne	SHORT $LN5@IsValidAir

; 2021 : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN7@IsValidAir
$LN5@IsValidAir:

; 2022 : 		for (i=0; i<NumberOfValidTypes; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@IsValidAir
$LN3@IsValidAir:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@IsValidAir:
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+316]
	cmp	DWORD PTR _i$[ebp], edx
	jge	SHORT $LN6@IsValidAir

; 2023 : 		{
; 2024 : 			if (type == ValidAircraftTypes[i])

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _i$[ebp]
	movsx	eax, WORD PTR [ecx+edx*2]
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN1@IsValidAir

; 2025 : 				return 1;

	mov	eax, 1
	jmp	SHORT $LN7@IsValidAir
$LN1@IsValidAir:

; 2026 : 		}

	jmp	SHORT $LN3@IsValidAir
$LN6@IsValidAir:

; 2027 : 	}
; 2028 : 	return 0;

	xor	eax, eax
$LN7@IsValidAir:

; 2029 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsValidAircraftType@CampaignClass@@QAEHPAVUnitClass@@@Z ENDP ; CampaignClass::IsValidAircraftType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 4
$T2 = -72						; size = 8
$T3 = -64						; size = 4
_cd$ = -60						; size = 8
_size$ = -52						; size = 4
_i$ = -48						; size = 4
_data_ptr$ = -44					; size = 4
_this$ = -40						; size = 4
_eClass$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_typefile$ = 8						; size = 4
?ReadValidAircraftTypes@CampaignClass@@QAEXPAD@Z PROC	; CampaignClass::ReadValidAircraftTypes
; _this$ = ecx

; 1983 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1984 : 	char /* *data, */*data_ptr;
; 1985 : 	int			eClass[8],i,size;
; 1986 : 
; 1987 : 	CampaignData cd;
; 1988 : 	cd = ReadCampFile (typefile, "act");

	push	OFFSET ??_C@_03FMODHJAO@act?$AA@
	mov	eax, DWORD PTR _typefile$[ebp]
	push	eax
	call	?ReadCampFile@@YA?AUCampaignData@@PAD0@Z ; ReadCampFile
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _cd$[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _cd$[ebp+4], edx

; 1989 : 	if (cd.dataSize == -1){

	cmp	DWORD PTR _cd$[ebp], -1
	jne	SHORT $LN5@ReadValidA

; 1990 : 		return;

	jmp	$LN6@ReadValidA
$LN5@ReadValidA:

; 1991 : 	}
; 1992 : 
; 1993 : 	data_ptr = cd.data;

	mov	eax, DWORD PTR _cd$[ebp+4]
	mov	DWORD PTR _data_ptr$[ebp], eax

; 1994 : 
; 1995 : 	sscanf(data_ptr,"%d%n", &NumberOfValidTypes, &size);

	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 316				; 0000013cH
	push	edx
	push	OFFSET ??_C@_04EBEAAKOA@?$CFd?$CFn?$AA@
	mov	eax, DWORD PTR _data_ptr$[ebp]
	push	eax
	call	_sscanf
	add	esp, 16					; 00000010H

; 1996 : 	if (NumberOfValidTypes == CAMP_FLY_ANY_AIRCRAFT)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+316]
	cmp	edx, 8888				; 000022b8H
	jne	SHORT $LN4@ReadValidA

; 1997 : 		return;

	jmp	$LN6@ReadValidA
$LN4@ReadValidA:

; 1998 : 
; 1999 : 	data_ptr += size;

	mov	eax, DWORD PTR _data_ptr$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _data_ptr$[ebp], eax

; 2000 : 	ValidAircraftTypes = new short[NumberOfValidTypes];

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [ecx+316]
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+320], ecx

; 2001 : 	for (i=0; i<NumberOfValidTypes; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ReadValidA
$LN2@ReadValidA:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@ReadValidA:
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+316]
	cmp	DWORD PTR _i$[ebp], ecx
	jge	$LN1@ReadValidA

; 2002 : 	{
; 2003 : 		sscanf(data_ptr,"%d %d %d %d %d %d %d %d%n", &eClass[0], &eClass[1], &eClass[2], &eClass[3], &eClass[4], &eClass[5], &eClass[6], &eClass[7], &size);

	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 7
	lea	ecx, DWORD PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 6
	lea	eax, DWORD PTR _eClass$[ebp+edx]
	push	eax
	mov	ecx, 4
	imul	ecx, 5
	lea	edx, DWORD PTR _eClass$[ebp+ecx]
	push	edx
	mov	eax, 4
	shl	eax, 2
	lea	ecx, DWORD PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	lea	eax, DWORD PTR _eClass$[ebp+edx]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	lea	edx, DWORD PTR _eClass$[ebp+ecx]
	push	edx
	mov	eax, 4
	shl	eax, 0
	lea	ecx, DWORD PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	lea	eax, DWORD PTR _eClass$[ebp+edx]
	push	eax
	push	OFFSET ??_C@_0BK@NOONBFMJ@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$CFn?$AA@
	mov	ecx, DWORD PTR _data_ptr$[ebp]
	push	ecx
	call	_sscanf
	add	esp, 44					; 0000002cH

; 2004 : 		data_ptr += size;

	mov	edx, DWORD PTR _data_ptr$[ebp]
	add	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _data_ptr$[ebp], edx

; 2005 : 		ValidAircraftTypes[i] = GetClassID(eClass[0], eClass[1], eClass[2], eClass[3], eClass[4], eClass[5], eClass[6], eClass[7]);

	mov	eax, 4
	imul	eax, 7
	movzx	ecx, BYTE PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 6
	movzx	eax, BYTE PTR _eClass$[ebp+edx]
	push	eax
	mov	ecx, 4
	imul	ecx, 5
	movzx	edx, BYTE PTR _eClass$[ebp+ecx]
	push	edx
	mov	eax, 4
	shl	eax, 2
	movzx	ecx, BYTE PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	movzx	eax, BYTE PTR _eClass$[ebp+edx]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	movzx	edx, BYTE PTR _eClass$[ebp+ecx]
	push	edx
	mov	eax, 4
	shl	eax, 0
	movzx	ecx, BYTE PTR _eClass$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	movzx	eax, BYTE PTR _eClass$[ebp+edx]
	push	eax
	call	?GetClassID@@YAHEEEEEEEE@Z		; GetClassID
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	WORD PTR [edx+ecx*2], ax

; 2006 : 	}

	jmp	$LN2@ReadValidA
$LN1@ReadValidA:

; 2007 : 	//delete data;
; 2008 : 	delete cd.data;

	mov	edx, DWORD PTR _cd$[ebp+4]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@ReadValidA:

; 2009 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadValidAircraftTypes@CampaignClass@@QAEXPAD@Z ENDP	; CampaignClass::ReadValidAircraftTypes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?FreeSquadronData@CampaignClass@@QAEXXZ PROC		; CampaignClass::FreeSquadronData
; _this$ = ecx

; 1975 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1976 : 	NumAvailSquadrons = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+310], ax

; 1977 : 	LastIndexNum = -1;

	or	edx, -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+308], dx

; 1978 : 	delete CampaignSquadronData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1979 : 	CampaignSquadronData = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+312], 0

; 1980 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FreeSquadronData@CampaignClass@@QAEXXZ ENDP		; CampaignClass::FreeSquadronData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_myit$ = -84						; size = 12
$T2 = -72						; size = 8
$T3 = -64						; size = 4
$T4 = -60						; size = 4
tv140 = -56						; size = 4
$T5 = -52						; size = 4
$T6 = -48						; size = 4
_this$ = -44						; size = 4
_o$7 = -40						; size = 4
_squadrons$ = -36					; size = 4
_newData$ = -32						; size = 4
_s$ = -28						; size = 4
_u$ = -24						; size = 4
_x$8 = -20						; size = 2
_y$9 = -16						; size = 2
__$EHRec$ = -12						; size = 12
_team$ = 8						; size = 4
?VerifySquadrons@CampaignClass@@QAEXH@Z PROC		; CampaignClass::VerifySquadrons
; _this$ = ecx

; 1917 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?VerifySquadrons@CampaignClass@@QAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1918 : 	Unit				u;
; 1919 : 	int					s,squadrons=0;

	mov	DWORD PTR _squadrons$[ebp], 0

; 1920 : 	SquadUIInfoClass	*newData;
; 1921 : 
; 1922 : 	if (!AllAirList)

	cmp	DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A, 0 ; AllAirList
	jne	SHORT $LN9@VerifySqua

; 1923 : 		return;

	jmp	$LN10@VerifySqua
$LN9@VerifySqua:

; 1924 : 
; 1925 : 	FreeSquadronData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 1926 : 
; 1927 : 	// First, let's see how many squadrons we have
; 1928 : 	VuListIterator myit(AllAirList);

	mov	eax, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	eax
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1929 : 	u = (Unit) myit.GetFirst();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _u$[ebp], eax
$LN8@VerifySqua:

; 1930 : 	while (u){

	cmp	DWORD PTR _u$[ebp], 0
	je	SHORT $LN7@VerifySqua

; 1931 : 		if (u->IsSquadron()){

	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	test	eax, eax
	je	SHORT $LN6@VerifySqua

; 1932 : 			squadrons++;

	mov	ecx, DWORD PTR _squadrons$[ebp]
	add	ecx, 1
	mov	DWORD PTR _squadrons$[ebp], ecx
$LN6@VerifySqua:

; 1933 : 		}
; 1934 : 		u = (Unit) myit.GetNext();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _u$[ebp], eax

; 1935 : 	}

	jmp	SHORT $LN8@VerifySqua
$LN7@VerifySqua:

; 1936 : 
; 1937 : 	if (!squadrons)

	cmp	DWORD PTR _squadrons$[ebp], 0
	jne	SHORT $LN5@VerifySqua

; 1938 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	jmp	$LN10@VerifySqua
$LN5@VerifySqua:

; 1939 : 
; 1940 : 	// Next, allocate a new array of data and fill it
; 1941 : 	newData = new SquadUIInfoClass[squadrons];

	mov	edx, DWORD PTR _squadrons$[ebp]
	mov	DWORD PTR $T5[ebp], edx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T5[ebp]
	mov	edx, 68					; 00000044H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN12@VerifySqua
	push	OFFSET ??0SquadUIInfoClass@@QAE@XZ	; SquadUIInfoClass::SquadUIInfoClass
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	push	68					; 00000044H
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR tv140[ebp], edx
	jmp	SHORT $LN13@VerifySqua
$LN12@VerifySqua:
	mov	DWORD PTR tv140[ebp], 0
$LN13@VerifySqua:
	mov	eax, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _newData$[ebp], ecx

; 1942 : 	s = 0;

	mov	DWORD PTR _s$[ebp], 0

; 1943 : 	u = (Unit) myit.GetFirst();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _u$[ebp], eax
$LN4@VerifySqua:

; 1944 : 	while (u){

	cmp	DWORD PTR _u$[ebp], 0
	je	$LN3@VerifySqua

; 1945 : 		if (u->IsSquadron()){

	mov	edx, DWORD PTR _u$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx
	test	eax, eax
	je	$LN2@VerifySqua

; 1946 : 			GridIndex			x,y;
; 1947 : 			Objective			o;
; 1948 : 
; 1949 : 			newData[s].x = u->XPos();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _newData$[ebp]
	fstp	DWORD PTR [ecx+eax]

; 1950 : 			newData[s].y = u->YPos();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	mov	edx, DWORD PTR _s$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _newData$[ebp]
	fstp	DWORD PTR [eax+edx+4]

; 1951 : 			newData[s].id = u->Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _u$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	esi, DWORD PTR _newData$[ebp]
	mov	DWORD PTR [esi+ecx+8], edx
	mov	DWORD PTR [esi+ecx+12], eax

; 1952 : 			newData[s].dIndex = u->Type() - VU_LAST_ENTITY_TYPE;

	mov	ecx, DWORD PTR _u$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	edx, ax
	sub	edx, 100				; 00000064H
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _newData$[ebp]
	mov	WORD PTR [ecx+eax+16], dx

; 1953 : 			newData[s].specialty = (uchar) u->GetUnitSpecialty();

	mov	edx, DWORD PTR _u$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [eax+772]
	call	edx
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	BYTE PTR [edx+ecx+24], al

; 1954 : 			newData[s].nameId = u->GetUnitNameID();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetUnitNameID@UnitClass@@QAEHXZ	; UnitClass::GetUnitNameID
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	WORD PTR [edx+ecx+18], ax

; 1955 : 			newData[s].country = u->GetOwner();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	BYTE PTR [edx+ecx+26], al

; 1956 : 			newData[s].currentStrength = u->GetTotalVehicles();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	BYTE PTR [edx+ecx+25], al

; 1957 : 			newData[s].squadronPatch = ((Squadron)u)->GetPatchID();

	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetPatchID@SquadronClass@@QAEEXZ	; SquadronClass::GetPatchID
	movzx	ax, al
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	WORD PTR [edx+ecx+22], ax

; 1958 : 			u->GetLocation(&x,&y);

	lea	eax, DWORD PTR _y$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _u$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 1959 : 			o = GetObjectiveByXY(x,y);

	movzx	edx, WORD PTR _y$9[ebp]
	push	edx
	movzx	eax, WORD PTR _x$8[ebp]
	push	eax
	call	?GetObjectiveByXY@@YAPAVObjectiveClass@@FF@Z ; GetObjectiveByXY
	add	esp, 8
	mov	DWORD PTR _o$7[ebp], eax

; 1960 : 			if (o){

	cmp	DWORD PTR _o$7[ebp], 0
	je	SHORT $LN1@VerifySqua

; 1961 : 				newData[s].airbaseName[0] = 0;

	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	add	ecx, DWORD PTR _newData$[ebp]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+27], 0

; 1962 : 				o->GetName(newData[s].airbaseName,39,TRUE);

	push	1
	push	39					; 00000027H
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _newData$[ebp]
	lea	edx, DWORD PTR [ecx+eax+27]
	push	edx
	mov	eax, DWORD PTR _o$7[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _o$7[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 1963 : 				newData[s].airbaseIcon = o->GetObjectiveClassData()->IconIndex;

	mov	ecx, DWORD PTR _o$7[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	ecx, DWORD PTR _s$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _newData$[ebp]
	mov	ax, WORD PTR [eax+48]
	mov	WORD PTR [edx+ecx+20], ax
$LN1@VerifySqua:

; 1964 : 			}
; 1965 : 			s++;

	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN2@VerifySqua:

; 1966 : 		}
; 1967 : 		u = (Unit) myit.GetNext();

	lea	ecx, DWORD PTR _myit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _u$[ebp], eax

; 1968 : 	}

	jmp	$LN4@VerifySqua
$LN3@VerifySqua:

; 1969 : 	NumAvailSquadrons = squadrons;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _squadrons$[ebp]
	mov	WORD PTR [edx+310], ax

; 1970 : 	delete CampaignSquadronData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1971 : 	CampaignSquadronData = newData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _newData$[ebp]
	mov	DWORD PTR [ecx+312], edx

; 1972 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN10@VerifySqua:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?VerifySquadrons@CampaignClass@@QAEXH@Z$0:
	lea	ecx, DWORD PTR _myit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?VerifySquadrons@CampaignClass@@QAEXH@Z$1:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$?VerifySquadrons@CampaignClass@@QAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?VerifySquadrons@CampaignClass@@QAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?VerifySquadrons@CampaignClass@@QAEXH@Z ENDP		; CampaignClass::VerifySquadrons
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeCampMaps@CampaignClass@@QAEXXZ PROC		; CampaignClass::FreeCampMaps
; _this$ = ecx

; 1900 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1901 : 	FreeCampMap(CampMapData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	call	?FreeCampMap@@YAXPAE@Z			; FreeCampMap
	add	esp, 4

; 1902 : 	CampMapData = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], 0

; 1903 : 	FreeCampMap(SamMapData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	call	?FreeCampMap@@YAXPAE@Z			; FreeCampMap
	add	esp, 4

; 1904 : 	SamMapData = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+300], 0

; 1905 : 	FreeCampMap(RadarMapData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	push	ecx
	call	?FreeCampMap@@YAXPAE@Z			; FreeCampMap
	add	esp, 4

; 1906 : 	RadarMapData = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+304], 0

; 1907 : 	CampMapSize = SamMapSize = RadarMapSize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+288], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], 0

; 1908 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FreeCampMaps@CampaignClass@@QAEXXZ ENDP		; CampaignClass::FreeCampMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?MakeCampMap@CampaignClass@@QAEPAEH@Z PROC		; CampaignClass::MakeCampMap
; _this$ = ecx

; 1880 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1881 : 	switch (type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN3@MakeCampMa
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN2@MakeCampMa
	jmp	$LN1@MakeCampMa
$LN3@MakeCampMa:

; 1882 : 	{
; 1883 : 			case MAP_SAMCOVERAGE:
; 1884 : 					SamMapData = ::MakeCampMap(type,SamMapData,SamMapSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+288]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	?MakeCampMap@@YAPAEHPAEH@Z		; MakeCampMap
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+300], eax

; 1885 : 					SamMapSize = sizeof(uchar)*(Map_Max_X/MAP_RATIO)*(Map_Max_Y/MAP_RATIO);

	movsx	eax, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	ecx, eax
	movsx	eax, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cdq
	mov	esi, 6
	idiv	esi
	imul	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], ecx

; 1886 : 					return SamMapData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+300]
	jmp	$LN6@MakeCampMa
$LN2@MakeCampMa:

; 1887 : 			case MAP_RADARCOVERAGE:
; 1888 : 					RadarMapData = ::MakeCampMap(type,RadarMapData,RadarMapSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	push	ecx
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	?MakeCampMap@@YAPAEHPAEH@Z		; MakeCampMap
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+304], eax

; 1889 : 					RadarMapSize = sizeof(uchar)*(Map_Max_X/MAP_RATIO)*(Map_Max_Y/MAP_RATIO);

	movsx	eax, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	ecx, eax
	movsx	eax, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cdq
	mov	esi, 6
	idiv	esi
	imul	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+292], ecx

; 1890 : 					return RadarMapData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+304]
	jmp	SHORT $LN6@MakeCampMa
$LN1@MakeCampMa:

; 1891 : 			default:
; 1892 : 					CampMapData = ::MakeCampMap(type,CampMapData,CampMapSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	?MakeCampMap@@YAPAEHPAEH@Z		; MakeCampMap
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], eax

; 1893 : 					CampMapSize = sizeof(uchar)*(Map_Max_X/MAP_RATIO)*(Map_Max_Y/MAP_RATIO)/2;

	movsx	eax, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	ecx, eax
	movsx	eax, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	cdq
	mov	esi, 6
	idiv	esi
	imul	ecx, eax
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], ecx

; 1894 : 					return CampMapData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+296]
	jmp	SHORT $LN6@MakeCampMa

; 1895 : 	}
; 1896 : 	return NULL;

	xor	eax, eax
$LN6@MakeCampMa:

; 1897 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?MakeCampMap@CampaignClass@@QAEPAEH@Z ENDP		; CampaignClass::MakeCampMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TrimCampUILists@CampaignClass@@QAEXXZ PROC		; CampaignClass::TrimCampUILists
; _this$ = ecx

; 1847 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1848 : 	return;
; 1849 : 	/*
; 1850 : 	   CampUIEventElement	*sEvent,*pEvent;
; 1851 : 	   int		i;
; 1852 : 
; 1853 : 	   sEvent = StandardEventQueue;
; 1854 : 	   pEvent = PriorityEventQueue;
; 1855 : 	   for (i=0; i<STANDARD_EVENT_LENGTH; i++)
; 1856 : 	   {
; 1857 : 	   if (sEvent)
; 1858 : 	   sEvent = sEvent->next;
; 1859 : 	   if (pEvent)
; 1860 : 	   pEvent = pEvent->next;
; 1861 : 	   }
; 1862 : 	   if (sEvent)
; 1863 : 	   {
; 1864 : 	   DisposeEventList(sEvent->next);
; 1865 : 	   sEvent->next = NULL;
; 1866 : 	   }
; 1867 : 	   if (pEvent)
; 1868 : 	   {
; 1869 : 	   DisposeEventList(pEvent->next);
; 1870 : 	   pEvent->next = NULL;
; 1871 : 	   }
; 1872 : 	 */
; 1873 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TrimCampUILists@CampaignClass@@QAEXXZ ENDP		; CampaignClass::TrimCampUILists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DisposeEventLists@CampaignClass@@QAEXXZ PROC		; CampaignClass::DisposeEventLists
; _this$ = ecx

; 1835 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1836 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1837 : 	DisposeEventList(TheCampaign.StandardEventQueue);

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+276
	push	eax
	call	?DisposeEventList@@YAXPAUuieventnode@@@Z ; DisposeEventList
	add	esp, 4

; 1838 : 	DisposeEventList(TheCampaign.PriorityEventQueue);

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+280
	push	ecx
	call	?DisposeEventList@@YAXPAUuieventnode@@@Z ; DisposeEventList
	add	esp, 4

; 1839 : 	StandardEventQueue = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], 0

; 1840 : 	PriorityEventQueue = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], 0

; 1841 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1842 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisposeEventLists@CampaignClass@@QAEXXZ ENDP		; CampaignClass::DisposeEventLists
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
$T4 = -12						; size = 4
_added$ = -8						; size = 4
_this$ = -4						; size = 4
_newEvent$ = 8						; size = 4
?AddCampaignEvent@CampaignClass@@QAEXPAUuieventnode@@@Z PROC ; CampaignClass::AddCampaignEvent
; _this$ = ecx

; 1791 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1792 : 	int					added = 0;

	mov	DWORD PTR _added$[ebp], 0

; 1793 : 
; 1794 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1795 : 
; 1796 : 	if (newEvent->flags & 0x01)

	mov	eax, DWORD PTR _newEvent$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 1
	je	$LN8@AddCampaig

; 1797 : 	{
; 1798 : 		if (!PriorityEventQueue || strcmp(PriorityEventQueue->eventText,newEvent->eventText) != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+280], 0
	je	SHORT $LN6@AddCampaig
	mov	eax, DWORD PTR _newEvent$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@AddCampaig
$LN6@AddCampaig:

; 1799 : 		{
; 1800 : 			newEvent->next = PriorityEventQueue;

	mov	edx, DWORD PTR _newEvent$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	mov	DWORD PTR [edx+16], ecx

; 1801 : 			PriorityEventQueue = newEvent;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newEvent$[ebp]
	mov	DWORD PTR [edx+280], eax

; 1802 : 			added = 1;

	mov	DWORD PTR _added$[ebp], 1

; 1803 : 			TrimEventList(PriorityEventQueue,PRIORITY_EVENT_LENGTH);

	movsx	ecx, WORD PTR ?PRIORITY_EVENT_LENGTH@@3FA ; PRIORITY_EVENT_LENGTH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	call	?TrimEventList@@YAXPAUuieventnode@@H@Z	; TrimEventList
	add	esp, 8

; 1804 : 		}
; 1805 : 		else

	jmp	SHORT $LN5@AddCampaig
$LN7@AddCampaig:

; 1806 : 		{
; 1807 : 			delete newEvent->eventText;

	mov	ecx, DWORD PTR _newEvent$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1808 : 			delete newEvent;

	mov	ecx, DWORD PTR _newEvent$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@AddCampaig:

; 1809 : 		}
; 1810 : 	}
; 1811 : 	else

	jmp	$LN4@AddCampaig
$LN8@AddCampaig:

; 1812 : 	{
; 1813 : 		if (!StandardEventQueue || strcmp(StandardEventQueue->eventText,newEvent->eventText) != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+276], 0
	je	SHORT $LN2@AddCampaig
	mov	ecx, DWORD PTR _newEvent$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@AddCampaig
$LN2@AddCampaig:

; 1814 : 		{
; 1815 : 			newEvent->next = StandardEventQueue;

	mov	eax, DWORD PTR _newEvent$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	mov	DWORD PTR [eax+16], edx

; 1816 : 			StandardEventQueue = newEvent;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEvent$[ebp]
	mov	DWORD PTR [eax+276], ecx

; 1817 : 			added = 1;

	mov	DWORD PTR _added$[ebp], 1

; 1818 : 			TrimEventList(StandardEventQueue,STANDARD_EVENT_LENGTH);

	movsx	edx, WORD PTR ?STANDARD_EVENT_LENGTH@@3FA ; STANDARD_EVENT_LENGTH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	push	ecx
	call	?TrimEventList@@YAXPAUuieventnode@@H@Z	; TrimEventList
	add	esp, 8

; 1819 : 		}
; 1820 : 		else

	jmp	SHORT $LN4@AddCampaig
$LN3@AddCampaig:

; 1821 : 		{
; 1822 : 			delete newEvent->eventText;

	mov	edx, DWORD PTR _newEvent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1823 : 			delete newEvent;

	mov	edx, DWORD PTR _newEvent$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@AddCampaig:

; 1824 : 		}
; 1825 : 	}
; 1826 : #ifdef KEV_DEBUG
; 1827 : 	if (added)
; 1828 : 		MonoPrint("CampEvent: %s\n",newEvent->eventText);
; 1829 : #endif
; 1830 : 
; 1831 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1832 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddCampaignEvent@CampaignClass@@QAEXPAUuieventnode@@@Z ENDP ; CampaignClass::AddCampaignEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRecentPriorityEventList@CampaignClass@@QAEPAUuieventnode@@XZ PROC ; CampaignClass::GetRecentPriorityEventList
; _this$ = ecx

; 1785 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1786 : 	return PriorityEventQueue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+280]

; 1787 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetRecentPriorityEventList@CampaignClass@@QAEPAUuieventnode@@XZ ENDP ; CampaignClass::GetRecentPriorityEventList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRecentEventlist@CampaignClass@@QAEPAUuieventnode@@XZ PROC ; CampaignClass::GetRecentEventlist
; _this$ = ecx

; 1779 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1780 : 	return StandardEventQueue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]

; 1781 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetRecentEventlist@CampaignClass@@QAEPAUuieventnode@@XZ ENDP ; CampaignClass::GetRecentEventlist
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_event$ = -8						; size = 4
_size$ = -4						; size = 4
?SaveSize@CampaignClass@@QAEJXZ PROC			; CampaignClass::SaveSize
; _this$ = ecx

; 1043 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1044 : 	CampUIEventElement	*event;
; 1045 : 	ulong	size = 0;

	mov	DWORD PTR _size$[ebp], 0

; 1046 : 
; 1047 : 	size += sizeof(CampaignTime);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 4
	mov	DWORD PTR _size$[ebp], eax

; 1048 : 	size += sizeof(CampaignTime);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1049 : 	size += sizeof(CampaignTime);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 4
	mov	DWORD PTR _size$[ebp], edx

; 1050 : 	size += sizeof(long);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 4
	mov	DWORD PTR _size$[ebp], eax

; 1051 : 	size += sizeof(long);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1052 : 	size += sizeof(long);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 4
	mov	DWORD PTR _size$[ebp], edx

; 1053 : 	size += sizeof(long) * 8;

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _size$[ebp], eax

; 1054 : 	size += sizeof(long) * 8;

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _size$[ebp], ecx

; 1055 : 	size += sizeof(long);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 4
	mov	DWORD PTR _size$[ebp], edx

; 1056 : 	size += sizeof(long) * 8;

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _size$[ebp], eax

; 1057 : 	size += sizeof(long);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1058 : 
; 1059 : 	size += sizeof (uchar) * 8;

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 8
	mov	DWORD PTR _size$[ebp], edx

; 1060 : 	size += sizeof (uchar) * 8;

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 8
	mov	DWORD PTR _size$[ebp], eax

; 1061 : 	size += sizeof (uchar) * 20 * 8;

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 160				; 000000a0H
	mov	DWORD PTR _size$[ebp], ecx

; 1062 : 	size += sizeof (uchar) * 200 * 8;

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1600				; 00000640H
	mov	DWORD PTR _size$[ebp], edx

; 1063 : 
; 1064 : 	size += sizeof(CampaignTime);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 4
	mov	DWORD PTR _size$[ebp], eax

; 1065 : 	size += sizeof(CampaignTime);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1066 : 	size += sizeof(CampaignTime);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 4
	mov	DWORD PTR _size$[ebp], edx

; 1067 : 	size += sizeof(CampaignTime);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 4
	mov	DWORD PTR _size$[ebp], eax

; 1068 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1069 : 	size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1070 : 
; 1071 : 	size += sizeof(short);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 2
	mov	DWORD PTR _size$[ebp], eax

; 1072 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1073 : 	size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1074 : 	size += sizeof(short);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 2
	mov	DWORD PTR _size$[ebp], eax

; 1075 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1076 : 
; 1077 : 	size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1078 : 	size += sizeof(short);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 2
	mov	DWORD PTR _size$[ebp], eax

; 1079 : 	size += sizeof(uchar);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 1
	mov	DWORD PTR _size$[ebp], ecx

; 1080 : 	size += sizeof(uchar);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 1081 : 	size += sizeof(uchar);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 1
	mov	DWORD PTR _size$[ebp], eax

; 1082 : 	size += sizeof(uchar);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 1
	mov	DWORD PTR _size$[ebp], ecx

; 1083 : 	size += sizeof(uchar);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 1084 : 	size += sizeof(uchar);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 1
	mov	DWORD PTR _size$[ebp], eax

; 1085 : 	size += sizeof(uchar);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 1
	mov	DWORD PTR _size$[ebp], ecx

; 1086 : 	size += sizeof(uchar);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 1087 : 	size += sizeof(GridIndex);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 2
	mov	DWORD PTR _size$[ebp], eax

; 1088 : 	size += sizeof(GridIndex);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1089 : 	size += sizeof(char)*CAMP_NAME_SIZE;

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 40					; 00000028H
	mov	DWORD PTR _size$[ebp], edx

; 1090 : 	size += sizeof(char)*CAMP_NAME_SIZE;

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _size$[ebp], eax

; 1091 : 	size += sizeof(char)*CAMP_NAME_SIZE;

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 40					; 00000028H
	mov	DWORD PTR _size$[ebp], ecx

; 1092 : 	size += sizeof(char)*CAMP_NAME_SIZE;

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 40					; 00000028H
	mov	DWORD PTR _size$[ebp], edx

; 1093 : 
; 1094 : 	size += sizeof(VU_ID);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 8
	mov	DWORD PTR _size$[ebp], eax

; 1095 : 
; 1096 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1097 : 	event = StandardEventQueue;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+276]
	mov	DWORD PTR _event$[ebp], eax
$LN4@SaveSize:

; 1098 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN3@SaveSize

; 1099 : 	{
; 1100 : 		size += sizeof(uieventnode);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _size$[ebp], ecx

; 1101 : 		size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1102 : 		size += sizeof(_TCHAR)*_tcslen(event->eventText);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax

; 1103 : 		event = event->next;

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _event$[ebp], eax

; 1104 : 	}

	jmp	SHORT $LN4@SaveSize
$LN3@SaveSize:

; 1105 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1106 : 	event = PriorityEventQueue;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	DWORD PTR _event$[ebp], eax
$LN2@SaveSize:

; 1107 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN1@SaveSize

; 1108 : 	{
; 1109 : 		size += sizeof(uieventnode);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _size$[ebp], ecx

; 1110 : 		size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1111 : 		size += sizeof(_TCHAR)*_tcslen(event->eventText);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax

; 1112 : 		event = event->next;

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _event$[ebp], eax

; 1113 : 	}

	jmp	SHORT $LN2@SaveSize
$LN1@SaveSize:

; 1114 : 
; 1115 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1116 : 	size += CampMapSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	add	eax, DWORD PTR [edx+284]
	mov	DWORD PTR _size$[ebp], eax

; 1117 : 	size += sizeof(short);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx

; 1118 : 	size += sizeof(short);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 2
	mov	DWORD PTR _size$[ebp], edx

; 1119 : 	size += sizeof(SquadUIInfoClass)*NumAvailSquadrons;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+310]
	imul	ecx, 68					; 00000044H
	add	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], ecx

; 1120 : 
; 1121 : 	size += sizeof(uchar);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1
	mov	DWORD PTR _size$[ebp], edx

; 1122 : 
; 1123 : 	size += sizeof(long);

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 4
	mov	DWORD PTR _size$[ebp], eax

; 1124 : 	size += sizeof(long);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1125 : 	size += sizeof(long);

	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 4
	mov	DWORD PTR _size$[ebp], edx

; 1126 : 
; 1127 : 	return size;

	mov	eax, DWORD PTR _size$[ebp]

; 1128 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@CampaignClass@@QAEJXZ ENDP			; CampaignClass::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -60						; size = 8
_newsize$ = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
_bufhead$ = -36						; size = 4
_sptr$ = -32						; size = 4
_datasize$ = -28					; size = 4
_loop$ = -24						; size = 4
_event$ = -20						; size = 4
_this$ = -16						; size = 4
_buffer$ = -12						; size = 4
_size$ = -8						; size = 2
_entries$ = -4						; size = 2
_stream$ = 8						; size = 4
?Encode@CampaignClass@@QAEHPAPAE@Z PROC			; CampaignClass::Encode
; _this$ = ecx

; 1364 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 1365 : 	short				entries,size;
; 1366 : 	CampUIEventElement	*event;
; 1367 : 	uchar				*buffer,*bufhead,*sptr;
; 1368 : 	int					loop;
; 1369 : 	long				newsize,datasize;
; 1370 : 
; 1371 : 	if (!(Flags & CAMP_LIGHT))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN20@Encode

; 1372 : 	{
; 1373 : 		// Get up to data squadron information
; 1374 : 		VerifySquadrons(FALCON_PLAYER_TEAM);

	movsx	edx, WORD PTR ?FALCON_PLAYER_TEAM@@3FA	; FALCON_PLAYER_TEAM
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?VerifySquadrons@CampaignClass@@QAEXH@Z	; CampaignClass::VerifySquadrons
$LN20@Encode:

; 1375 : 	}
; 1376 : 	datasize = SaveSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@CampaignClass@@QAEJXZ		; CampaignClass::SaveSize
	mov	DWORD PTR _datasize$[ebp], eax

; 1377 : 
; 1378 : 	buffer = new uchar[datasize+1];

	mov	eax, DWORD PTR _datasize$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _buffer$[ebp], ecx

; 1379 : 	bufhead = buffer;

	mov	edx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _bufhead$[ebp], edx

; 1380 : 
; 1381 : 	// Encode the data
; 1382 : 	memcpy(buffer, &CurrentTime, sizeof(CampaignTime));			buffer += sizeof(CampaignTime);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1383 : 	memcpy(buffer, &TE_StartTime, sizeof(CampaignTime));		buffer += sizeof(CampaignTime);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1384 : 	memcpy(buffer, &TE_TimeLimit, sizeof(CampaignTime));		buffer += sizeof(CampaignTime);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1385 : 	memcpy(buffer, &TE_VictoryPoints, sizeof(long));			buffer += sizeof(long);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 356				; 00000164H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1386 : 
; 1387 : 	memcpy(buffer, &TE_type, sizeof(long));						buffer += sizeof(long);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1388 : 	memcpy(buffer, &TE_number_teams, sizeof(long));				buffer += sizeof(long);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 364				; 0000016cH
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1389 : 	memcpy(buffer, TE_number_aircraft, sizeof(long) * 8);		buffer += sizeof(long) * 8;

	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _buffer$[ebp], edx

; 1390 : 	memcpy(buffer, TE_number_f16s, sizeof(long) * 8);			buffer += sizeof(long) * 8;

	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 400				; 00000190H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _buffer$[ebp], edx

; 1391 : 	memcpy(buffer, &TE_team, sizeof(long));						buffer += sizeof(long);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1392 : 	memcpy(buffer, TE_team_pts, sizeof(long) * 8);				buffer += sizeof(long) * 8;

	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 436				; 000001b4H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _buffer$[ebp], edx

; 1393 : 	memcpy(buffer, &TE_flags, sizeof(long));					buffer += sizeof(long);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 468				; 000001d4H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _buffer$[ebp], edx

; 1394 : 
; 1395 : 	for (loop = 0; loop < 8; loop ++)

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN19@Encode
$LN18@Encode:
	mov	eax, DWORD PTR _loop$[ebp]
	add	eax, 1
	mov	DWORD PTR _loop$[ebp], eax
$LN19@Encode:
	cmp	DWORD PTR _loop$[ebp], 8
	jge	$LN17@Encode

; 1396 : 	{
; 1397 : 		if (TeamInfo[loop])

	mov	ecx, DWORD PTR _loop$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	$LN16@Encode

; 1398 : 		{
; 1399 : 			memcpy(buffer, &TeamInfo[loop]->teamFlag, 1);		buffer += 1;

	push	1
	mov	edx, DWORD PTR _loop$[ebp]
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	add	eax, 888				; 00000378H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 1
	mov	DWORD PTR _buffer$[ebp], edx

; 1400 : 			memcpy(buffer, &TeamInfo[loop]->teamColor, 1);		buffer += 1;

	push	1
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	add	ecx, 889				; 00000379H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer$[ebp], eax

; 1401 : 			memcpy(buffer, &TeamInfo[loop]->name, 20);			buffer += 20;

	push	20					; 00000014H
	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	add	edx, 352				; 00000160H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _buffer$[ebp], ecx

; 1402 : 			memcpy(buffer, &TeamInfo[loop]->teamMotto, 200);		buffer += 200;

	push	200					; 000000c8H
	mov	edx, DWORD PTR _loop$[ebp]
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	add	eax, 372				; 00000174H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 200				; 000000c8H
	mov	DWORD PTR _buffer$[ebp], edx

; 1403 : 		}
; 1404 : 		else

	jmp	SHORT $LN15@Encode
$LN16@Encode:

; 1405 : 		{
; 1406 : 			memset (buffer, 0, 1 + 1 + 20 + 200);				buffer += 1 + 1 + 20 + 200;

	push	222					; 000000deH
	push	0
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 222				; 000000deH
	mov	DWORD PTR _buffer$[ebp], ecx
$LN15@Encode:

; 1407 : 		}
; 1408 : 	}

	jmp	$LN18@Encode
$LN17@Encode:

; 1409 : 
; 1410 : 	// Don't bother with tasking times, they'll have to rebuild anyway...
; 1411 : 	memcpy(buffer, &lastMajorEvent, sizeof(CampaignTime));		buffer += sizeof(CampaignTime);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1412 : 	memcpy(buffer, &lastResupply, sizeof(CampaignTime));		buffer += sizeof(CampaignTime);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1413 : 	memcpy(buffer, &lastRepair, sizeof(CampaignTime));			buffer += sizeof(CampaignTime);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1414 : 	memcpy(buffer, &lastReinforcement, sizeof(CampaignTime));	buffer += sizeof(CampaignTime);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1415 : 	memcpy(buffer, &TimeStamp, sizeof(short));					buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 70					; 00000046H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1416 : 	memcpy(buffer, &Group, sizeof(short));						buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1417 : 	// Dont read flags
; 1418 : 	memcpy(buffer, &GroundRatio, sizeof(short));				buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 74					; 0000004aH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1419 : 	memcpy(buffer, &AirRatio, sizeof(short));					buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1420 : 	memcpy(buffer, &AirDefenseRatio, sizeof(short));			buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 78					; 0000004eH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1421 : 	memcpy(buffer, &NavalRatio, sizeof(short));					buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1422 : 	memcpy(buffer, &Brief, sizeof(short));						buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 82					; 00000052H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1423 : 	// Dont read Processor
; 1424 : 	memcpy(buffer, &TheaterSizeX, sizeof(short));				buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 86					; 00000056H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1425 : 	memcpy(buffer, &TheaterSizeY, sizeof(short));				buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1426 : 	memcpy(buffer, &CurrentDay, sizeof(uchar));					buffer += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 90					; 0000005aH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buffer$[ebp], ecx

; 1427 : 	memcpy(buffer, &ActiveTeams, sizeof(uchar));				buffer += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 91					; 0000005bH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buffer$[ebp], ecx

; 1428 : 	memcpy(buffer, &DayZero, sizeof(uchar));					buffer += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buffer$[ebp], ecx

; 1429 : 	memcpy(buffer, &EndgameResult, sizeof(uchar));				buffer += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 93					; 0000005dH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buffer$[ebp], ecx

; 1430 : 
; 1431 : 	if (FalconLocalSession->GetTeam() < NUM_TEAMS && TeamInfo[FalconLocalSession->GetTeam()])

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	cmp	edx, 8
	jge	SHORT $LN14@Encode
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	je	SHORT $LN14@Encode

; 1432 : 	{
; 1433 : 		Situation = TeamInfo[FalconLocalSession->GetTeam()]->Initiative()/20;

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?Initiative@TeamClass@@QAEHXZ		; TeamClass::Initiative
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+94], al
	jmp	SHORT $LN13@Encode
$LN14@Encode:

; 1434 : 	}
; 1435 : 	else if (TeamInfo[2])

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax], 0
	je	SHORT $LN12@Encode

; 1436 : 	{
; 1437 : 		Situation = TeamInfo[2]->Initiative()/20;

	mov	ecx, 4
	shl	ecx, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx]
	call	?Initiative@TeamClass@@QAEHXZ		; TeamClass::Initiative
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+94], al

; 1438 : 	}
; 1439 : 	else

	jmp	SHORT $LN13@Encode
$LN12@Encode:

; 1440 : 	{
; 1441 : 		Situation = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+94], 0
$LN13@Encode:

; 1442 : 	}
; 1443 : 
; 1444 : 	memcpy(buffer, &Situation, sizeof(uchar));					buffer += sizeof(uchar);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 94					; 0000005eH
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer$[ebp], eax

; 1445 : 	memcpy(buffer, &EnemyAirExp, sizeof(uchar));				buffer += sizeof(uchar);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 95					; 0000005fH
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer$[ebp], eax

; 1446 : 	memcpy(buffer, &EnemyADExp, sizeof(uchar));					buffer += sizeof(uchar);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer$[ebp], eax

; 1447 : 	memcpy(buffer, &BullseyeName, sizeof(uchar));				buffer += sizeof(uchar);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 97					; 00000061H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer$[ebp], eax

; 1448 : 	memcpy(buffer, &BullseyeX, sizeof(GridIndex));				buffer += sizeof(GridIndex);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 98					; 00000062H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 2
	mov	DWORD PTR _buffer$[ebp], eax

; 1449 : 	memcpy(buffer, &BullseyeY, sizeof(GridIndex));				buffer += sizeof(GridIndex);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 2
	mov	DWORD PTR _buffer$[ebp], eax

; 1450 : 	memcpy(buffer, TheaterName, sizeof(char)*CAMP_NAME_SIZE);	buffer += sizeof(char)*CAMP_NAME_SIZE;

	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 102				; 00000066H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _buffer$[ebp], eax

; 1451 : 	memcpy(buffer, Scenario, sizeof(char)*CAMP_NAME_SIZE);		buffer += sizeof(char)*CAMP_NAME_SIZE;

	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _buffer$[ebp], eax

; 1452 : 	memcpy(buffer, SaveFile, sizeof(char)*CAMP_NAME_SIZE);		buffer += sizeof(char)*CAMP_NAME_SIZE;

	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 182				; 000000b6H
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _buffer$[ebp], eax

; 1453 : 	memcpy(buffer, UIName, sizeof(char)*CAMP_NAME_SIZE);		buffer += sizeof(char)*CAMP_NAME_SIZE;

	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 222				; 000000deH
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _buffer$[ebp], eax

; 1454 : 	// Might as well send this guy's squadron
; 1455 : 	PlayerSquadronID = FalconLocalSession->GetPlayerSquadronID();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+268], edx
	mov	DWORD PTR [ecx+272], eax

; 1456 : #ifdef DEBUG
; 1457 : 	PlayerSquadronID.num_ &= 0x0000ffff;
; 1458 : #endif
; 1459 : #ifdef CAMPTOOL
; 1460 : 	if (gRenameIds)
; 1461 : 		PlayerSquadronID.num_ = RenameTable[PlayerSquadronID.num_];
; 1462 : #endif
; 1463 : 	memcpy(buffer, &PlayerSquadronID, sizeof(VU_ID));			buffer += sizeof(VU_ID);

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 268				; 0000010cH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 8
	mov	DWORD PTR _buffer$[ebp], ecx

; 1464 : 	// write the recent event queues
; 1465 : 	entries = 0;

	xor	edx, edx
	mov	WORD PTR _entries$[ebp], dx

; 1466 : 	event = StandardEventQueue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	mov	DWORD PTR _event$[ebp], ecx
$LN10@Encode:

; 1467 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN9@Encode

; 1468 : 	{
; 1469 : 		entries++;

	mov	dx, WORD PTR _entries$[ebp]
	add	dx, 1
	mov	WORD PTR _entries$[ebp], dx

; 1470 : 		event = event->next;

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _event$[ebp], ecx

; 1471 : 	}

	jmp	SHORT $LN10@Encode
$LN9@Encode:

; 1472 : 	memcpy(buffer, &entries, sizeof(short));					buffer += sizeof(short);

	push	2
	lea	edx, DWORD PTR _entries$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1473 : 	event = StandardEventQueue;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+276]
	mov	DWORD PTR _event$[ebp], eax
$LN8@Encode:

; 1474 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN7@Encode

; 1475 : 	{
; 1476 : 		memcpy(buffer, event, sizeof(uieventnode));				buffer += sizeof(uieventnode);

	push	20					; 00000014H
	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _buffer$[ebp], eax

; 1477 : 		size = _tcslen(event->eventText);

	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_strlen
	add	esp, 4
	mov	WORD PTR _size$[ebp], ax

; 1478 : 		memcpy(buffer, &size, sizeof(short));					buffer += sizeof(short);

	push	2
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 2
	mov	DWORD PTR _buffer$[ebp], edx

; 1479 : 		memcpy(buffer, event->eventText, sizeof(_TCHAR)*size);	buffer += sizeof(_TCHAR)*size;

	movsx	eax, WORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	movsx	ecx, WORD PTR _size$[ebp]
	add	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], ecx

; 1480 : 		event = event->next;

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _event$[ebp], eax

; 1481 : 	}

	jmp	SHORT $LN8@Encode
$LN7@Encode:

; 1482 : 	// Write priority list
; 1483 : 	entries = 0;

	xor	ecx, ecx
	mov	WORD PTR _entries$[ebp], cx

; 1484 : 	event = PriorityEventQueue;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	DWORD PTR _event$[ebp], eax
$LN6@Encode:

; 1485 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN5@Encode

; 1486 : 	{
; 1487 : 		entries++;

	mov	cx, WORD PTR _entries$[ebp]
	add	cx, 1
	mov	WORD PTR _entries$[ebp], cx

; 1488 : 		event = event->next;

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _event$[ebp], eax

; 1489 : 	}

	jmp	SHORT $LN6@Encode
$LN5@Encode:

; 1490 : 	memcpy(buffer, &entries, sizeof(short));					buffer += sizeof(short);

	push	2
	lea	ecx, DWORD PTR _entries$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, 2
	mov	DWORD PTR _buffer$[ebp], eax

; 1491 : 	event = PriorityEventQueue;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+280]
	mov	DWORD PTR _event$[ebp], edx
$LN4@Encode:

; 1492 : 	while (event)

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN3@Encode

; 1493 : 	{
; 1494 : 		memcpy(buffer, event, sizeof(uieventnode));				buffer += sizeof(uieventnode);

	push	20					; 00000014H
	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 20					; 00000014H
	mov	DWORD PTR _buffer$[ebp], edx

; 1495 : 		size = _tcslen(event->eventText);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	WORD PTR _size$[ebp], ax

; 1496 : 		memcpy(buffer, &size, sizeof(short));					buffer += sizeof(short);

	push	2
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1497 : 		memcpy(buffer, event->eventText, sizeof(_TCHAR)*size);	buffer += sizeof(_TCHAR)*size;

	movsx	edx, WORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movsx	eax, WORD PTR _size$[ebp]
	add	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax

; 1498 : 		event = event->next;

	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _event$[ebp], edx

; 1499 : 	}

	jmp	SHORT $LN4@Encode
$LN3@Encode:

; 1500 : 	// Write the map data
; 1501 : 	memcpy(buffer, &CampMapSize, sizeof(short));				buffer += sizeof(short);

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 284				; 0000011cH
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 2
	mov	DWORD PTR _buffer$[ebp], edx

; 1502 : 	if (CampMapSize)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+284], 0
	je	SHORT $LN2@Encode

; 1503 : 		memcpy(buffer, CampMapData, CampMapSize);				buffer += CampMapSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@Encode:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR [eax+284]
	mov	DWORD PTR _buffer$[ebp], ecx

; 1504 : 	// Write the squadron data
; 1505 : 	memcpy(buffer, &LastIndexNum, sizeof(short));				buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 308				; 00000134H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1506 : 	memcpy(buffer, &NumAvailSquadrons, sizeof(short));			buffer += sizeof(short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 310				; 00000136H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 2
	mov	DWORD PTR _buffer$[ebp], ecx

; 1507 : 	if (NumAvailSquadrons > 0)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+310]
	test	eax, eax
	jle	SHORT $LN1@Encode

; 1508 : 	{
; 1509 : 		ShiAssert(CampaignSquadronData);
; 1510 : 		memcpy(buffer, CampaignSquadronData, sizeof(SquadUIInfoClass)*NumAvailSquadrons);		buffer += sizeof(SquadUIInfoClass)*NumAvailSquadrons;

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+310]
	imul	edx, 68					; 00000044H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+312]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+310]
	imul	ecx, 68					; 00000044H
	add	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], ecx
$LN1@Encode:

; 1511 : 	}
; 1512 : 	memcpy(buffer, &Tempo, sizeof(uchar));						buffer += sizeof(uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 340				; 00000154H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buffer$[ebp], ecx

; 1513 : 	memcpy(buffer, &CreatorIP,sizeof(long));					buffer += sizeof(long);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 344				; 00000158H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1514 : 	memcpy(buffer, &CreationTime,sizeof(long));					buffer += sizeof(long);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1515 : 	memcpy(buffer, &CreationRand,sizeof(long));					buffer += sizeof(long);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _buffer$[ebp], ecx

; 1516 : 	ShiAssert ( (int)(buffer - bufhead) == datasize );
; 1517 : 
; 1518 : 	// Compress it and return
; 1519 : 	*stream = new VU_BYTE[datasize + sizeof(long) + MAX_POSSIBLE_OVERWRITE];

	mov	edx, DWORD PTR _datasize$[ebp]
	add	edx, 104				; 00000068H
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax], ecx

; 1520 : 	sptr = *stream;

	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _sptr$[ebp], eax

; 1521 : 	memcpy(sptr, &datasize, sizeof(long));						sptr += sizeof(long);

	push	4
	lea	ecx, DWORD PTR _datasize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sptr$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _sptr$[ebp]
	add	eax, 4
	mov	DWORD PTR _sptr$[ebp], eax

; 1522 : 	newsize = LZSS_Compress(bufhead, sptr, datasize);

	mov	ecx, DWORD PTR _datasize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _bufhead$[ebp]
	push	eax
	call	_LZSS_Compress
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newsize$[ebp], eax

; 1523 : 
; 1524 : 	delete bufhead;

	mov	ecx, DWORD PTR _bufhead$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1525 : 
; 1526 : 	return newsize + sizeof(long);

	mov	eax, DWORD PTR _newsize$[ebp]
	add	eax, 4

; 1527 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@CampaignClass@@QAEHPAPAE@Z ENDP			; CampaignClass::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T2 = -156						; size = 4
$T3 = -152						; size = 4
$T4 = -148						; size = 4
$T5 = -144						; size = 4
$T6 = -140						; size = 4
$T7 = -136						; size = 4
$T8 = -132						; size = 4
$T9 = -128						; size = 4
$T10 = -124						; size = 4
tv407 = -120						; size = 4
$T11 = -116						; size = 4
$T12 = -112						; size = 4
$T13 = -108						; size = 4
tv555 = -104						; size = 4
tv449 = -100						; size = 4
$T14 = -96						; size = 4
tv531 = -92						; size = 4
tv682 = -88						; size = 4
$T15 = -84						; size = 4
_bufhead$ = -80						; size = 4
$T16 = -76						; size = 4
$T17 = -72						; size = 4
_datasize$ = -68					; size = 4
$T18 = -64						; size = 4
$T19 = -60						; size = 4
$T20 = -56						; size = 4
_last$ = -52						; size = 4
_loop$ = -48						; size = 4
_entries$ = -44						; size = 2
_osic$21 = -40						; size = 4
_size$ = -36						; size = 2
_event$ = -32						; size = 4
_i$ = -28						; size = 4
_newRem$ = -24						; size = 4
_buffer$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@CampaignClass@@QAEHPAPAEPAJ@Z PROC		; CampaignClass::Decode
; _this$ = ecx

; 1131 : int CampaignClass::Decode (VU_BYTE **stream, long *rem) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1132 : 	short				entries=0,size=0;

	xor	eax, eax
	mov	WORD PTR _entries$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _size$[ebp], cx

; 1133 : 	CampUIEventElement	*event=NULL,*last=NULL;

	mov	DWORD PTR _event$[ebp], 0
	mov	DWORD PTR _last$[ebp], 0

; 1134 : 	int					i=0, loop=0;

	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _loop$[ebp], 0

; 1135 : 	long				datasize=0;

	mov	DWORD PTR _datasize$[ebp], 0

; 1136 : 	uchar				*buffer=NULL,*bufhead=NULL;

	mov	DWORD PTR _buffer$[ebp], 0
	mov	DWORD PTR _bufhead$[ebp], 0

; 1137 : 
; 1138 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1139 : 
; 1140 : 	memcpychk(&datasize, stream, sizeof(long), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _datasize$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1141 : 
; 1142 : 	long newRem = datasize + 4096;//1024;

	mov	edx, DWORD PTR _datasize$[ebp]
	add	edx, 4096				; 00001000H
	mov	DWORD PTR _newRem$[ebp], edx

; 1143 : 	buffer = new VU_BYTE[newRem];

	mov	eax, DWORD PTR _newRem$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	ecx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _buffer$[ebp], ecx

; 1144 : 	bufhead = buffer;

	mov	edx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _bufhead$[ebp], edx

; 1145 : 	//sfr: we should check the return value here...
; 1146 : 	LZSS_Expand(*stream, rem[0], buffer, datasize);

	mov	eax, DWORD PTR _datasize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax+edx]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_LZSS_Expand
	add	esp, 16					; 00000010H

; 1147 : 	
; 1148 : 	memcpychk(&CurrentTime, &buffer, sizeof(CampaignTime), &newRem);

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1149 : 	
; 1150 : 	if (CurrentTime == 0){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN32@Decode

; 1151 : 		CurrentTime = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 1
$LN32@Decode:

; 1152 : 	}
; 1153 : 	
; 1154 : 	SetTime (CurrentTime);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?SetTime@@YAXK@Z			; SetTime
	add	esp, 4

; 1155 : 	
; 1156 : 	if (gCampDataVersion >= 48)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 48	; gCampDataVersion, 00000030H
	jl	SHORT $LN31@Decode

; 1157 : 		memcpychk(&TE_StartTime, &buffer, sizeof(CampaignTime), &newRem);

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1158 : 		memcpychk(&TE_TimeLimit, &buffer, sizeof(CampaignTime), &newRem);

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1159 : 		if (gCampDataVersion > 49){

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 49	; gCampDataVersion, 00000031H
	jle	SHORT $LN30@Decode

; 1160 : 			memcpychk(&TE_VictoryPoints, &buffer, sizeof(long), &newRem);

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1161 : 		}
; 1162 : 		else{

	jmp	SHORT $LN29@Decode
$LN30@Decode:

; 1163 : 			TE_VictoryPoints=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+356], 0
$LN29@Decode:

; 1164 : 		}
; 1165 : 	}
; 1166 : 	else

	jmp	SHORT $LN28@Decode
$LN31@Decode:

; 1167 : 	{
; 1168 : 		TE_StartTime=CurrentTime;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 1169 : 		TE_TimeLimit=CurrentTime+ 60*60*5 * VU_TICS_PER_SECOND;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 18000000				; 0112a880H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1170 : 		TE_VictoryPoints=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
$LN28@Decode:

; 1171 : 	}
; 1172 : 
; 1173 : 	if (gCampDataVersion >= 52)

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 52	; gCampDataVersion, 00000034H
	jl	$LN27@Decode

; 1174 : 	{
; 1175 : 		memcpychk(&TE_type, &buffer, sizeof(long), &newRem);						

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1176 : 		memcpychk(&TE_number_teams, &buffer, sizeof(long), &newRem);				

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 364				; 0000016cH
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1177 : 		memcpychk(TE_number_aircraft, &buffer, sizeof(long) * 8, &newRem);		

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	32					; 00000020H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1178 : 		memcpychk(TE_number_f16s, &buffer, sizeof(long) * 8, &newRem);			

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	32					; 00000020H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 400				; 00000190H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1179 : 		memcpychk(&TE_team, &buffer, sizeof(long), &newRem);						

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1180 : 		memcpychk(TE_team_pts, &buffer, sizeof(long) * 8, &newRem);				

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	32					; 00000020H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 436				; 000001b4H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1181 : 		memcpychk(&TE_flags, &buffer, sizeof(long), &newRem);					

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 468				; 000001d4H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1182 : 
; 1183 : 		for (loop = 0; loop < 8; loop ++) {

	mov	DWORD PTR _loop$[ebp], 0
	jmp	SHORT $LN26@Decode
$LN25@Decode:
	mov	ecx, DWORD PTR _loop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _loop$[ebp], ecx
$LN26@Decode:
	cmp	DWORD PTR _loop$[ebp], 8
	jge	$LN24@Decode

; 1184 : 			memcpychk(&team_flags[loop], &buffer, 1, &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loop$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+472]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1185 : 			memcpychk(&team_colour[loop], &buffer, 1, &newRem);					

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _loop$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+480]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1186 : 			memcpychk(&team_name[loop], &buffer, 20, &newRem);					

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	20					; 00000014H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loop$[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+488]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1187 : 			memcpychk(&team_motto[loop], &buffer, 200, &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	200					; 000000c8H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loop$[ebp]
	imul	ecx, 200				; 000000c8H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+648]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1188 : 		}

	jmp	$LN25@Decode
$LN24@Decode:

; 1189 : 	}
; 1190 : 	else

	jmp	SHORT $LN23@Decode
$LN27@Decode:

; 1191 : 	{
; 1192 : 		TE_type = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], 0

; 1193 : 		TE_number_teams = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+364], 0

; 1194 : 		memset (TE_number_aircraft, 0, 8 * sizeof (long));

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1195 : 		memset (TE_number_f16s, 0, 8 * sizeof (long));

	push	32					; 00000020H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 1196 : 		TE_team = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+432], 0

; 1197 : 		memset (TE_team_pts, 0, 8 * sizeof (long));

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 436				; 000001b4H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1198 : 		TE_flags = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+468], 0
$LN23@Decode:

; 1199 : 	}
; 1200 : 
; 1201 : 	// Don't bother with tasking times, we'll have to rebuild anyway...
; 1202 : 	lastGroundTask = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 1203 : 	lastAirTask = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 1204 : 	lastNavalTask = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0

; 1205 : 	lastGroundPlan = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0

; 1206 : 	lastAirPlan = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 1207 : 	lastNavalPlan = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0

; 1208 : 	lastStatistic = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], 0

; 1209 : 	if (gCampDataVersion >= 19)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 19	; gCampDataVersion, 00000013H
	jl	SHORT $LN22@Decode

; 1210 : 		memcpychk(&lastMajorEvent, &buffer, sizeof(CampaignTime), &newRem);

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN22@Decode:

; 1211 : 	}
; 1212 : 	memcpychk(&lastResupply, &buffer, sizeof(CampaignTime), &newRem);		

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1213 : 	memcpychk(&lastRepair, &buffer, sizeof(CampaignTime), &newRem);			

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1214 : 	memcpychk(&lastReinforcement, &buffer, sizeof(CampaignTime), &newRem);	

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1215 : 	memcpychk(&TimeStamp, &buffer, sizeof(short), &newRem);					

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 70					; 00000046H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1216 : 	memcpychk(&Group, &buffer, sizeof(short), &newRem);						

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1217 : 	// Dont read flags
; 1218 : 	memcpychk(&GroundRatio, &buffer, sizeof(short), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 74					; 0000004aH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1219 : 	memcpychk(&AirRatio, &buffer, sizeof(short), &newRem);					

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1220 : 	memcpychk(&AirDefenseRatio, &buffer, sizeof(short), &newRem);			

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 78					; 0000004eH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1221 : 	memcpychk(&NavalRatio, &buffer, sizeof(short), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1222 : 	memcpychk(&Brief, &buffer, sizeof(short), &newRem);						

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 82					; 00000052H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1223 : 	// Dont read Processor
; 1224 : 	memcpychk(&TheaterSizeX, &buffer, sizeof(short), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 86					; 00000056H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1225 : 	memcpychk(&TheaterSizeY, &buffer, sizeof(short), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1226 : 	// Adjust some globals
; 1227 : 	MRX = TheaterSizeX/MAP_RATIO;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+86]
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	DWORD PTR ?MRX@@3HA, eax		; MRX

; 1228 : 	MRY = TheaterSizeY/MAP_RATIO;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+88]
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	DWORD PTR ?MRY@@3HA, eax		; MRY

; 1229 : 	PMRX = TheaterSizeX/PAK_MAP_RATIO;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+86]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR ?PMRX@@3HA, eax		; PMRX

; 1230 : 	PMRY = TheaterSizeY/PAK_MAP_RATIO;

	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+88]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR ?PMRY@@3HA, eax		; PMRY

; 1231 : 	MAXOI = sizeof(uchar)*MRX*MRY/2;

	mov	ecx, DWORD PTR ?MRX@@3HA		; MRX
	imul	ecx, DWORD PTR ?MRY@@3HA		; MRY
	shr	ecx, 1
	mov	DWORD PTR ?MAXOI@@3HA, ecx		; MAXOI

; 1232 : 	// Continue reading...
; 1233 : 	memcpychk(&CurrentDay, &buffer, sizeof(uchar), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 90					; 0000005aH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1234 : 	memcpychk(&ActiveTeams, &buffer, sizeof(uchar), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 91					; 0000005bH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1235 : 	memcpychk(&DayZero, &buffer, sizeof(uchar), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1236 : 	memcpychk(&EndgameResult, &buffer, sizeof(uchar), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 93					; 0000005dH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1237 : 	memcpychk(&Situation, &buffer, sizeof(uchar), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 94					; 0000005eH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1238 : 	memcpychk(&EnemyAirExp, &buffer, sizeof(uchar), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 95					; 0000005fH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1239 : 	memcpychk(&EnemyADExp, &buffer, sizeof(uchar), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1240 : 	memcpychk(&BullseyeName, &buffer, sizeof(uchar), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 97					; 00000061H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1241 : 	memcpychk(&BullseyeX, &buffer, sizeof(GridIndex), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 98					; 00000062H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1242 : 	memcpychk(&BullseyeY, &buffer, sizeof(GridIndex), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1243 : 	memcpychk(TheaterName, &buffer, sizeof(char)*CAMP_NAME_SIZE, &newRem);	

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 102				; 00000066H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1244 : 	memcpychk(Scenario, &buffer, sizeof(char)*CAMP_NAME_SIZE, &newRem);		

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1245 : 	memcpychk(SaveFile, &buffer, sizeof(char)*CAMP_NAME_SIZE, &newRem);		

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 182				; 000000b6H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1246 : 	memcpychk(UIName, &buffer, sizeof(char)*CAMP_NAME_SIZE, &newRem);		

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	40					; 00000028H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 222				; 000000deH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1247 : 	// Might as well get the other guy's squadron
; 1248 : 	memcpychk(&PlayerSquadronID, &buffer, sizeof(VU_ID), &newRem);			

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	8
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1249 : 	FalconLocalSession->SetPlayerSquadronID (PlayerSquadronID);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+272]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerSquadronID

; 1250 : 	// Load the recent event queues
; 1251 : 	DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 1252 : 	memcpychk(&entries, &buffer, sizeof(short), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _entries$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1253 : 	for (i=0; i<entries; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN21@Decode
$LN20@Decode:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN21@Decode:
	movsx	eax, WORD PTR _entries$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN19@Decode

; 1254 : 	{
; 1255 : 		event = new CampUIEventElement();

	mov	DWORD PTR $T15[ebp], 20			; 00000014H
	mov	ecx, DWORD PTR $T15[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T16[ebp], eax
	cmp	DWORD PTR $T16[ebp], 0
	je	SHORT $LN35@Decode
	mov	edx, DWORD PTR $T15[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR $T16[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T16[ebp]
	mov	DWORD PTR tv407[ebp], ecx
	jmp	SHORT $LN36@Decode
$LN35@Decode:
	mov	DWORD PTR tv407[ebp], 0
$LN36@Decode:
	mov	edx, DWORD PTR tv407[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 1256 : 		memcpychk(event, &buffer, sizeof(uieventnode), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	20					; 00000014H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _event$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1257 : 		memcpychk(&size, &buffer, sizeof(short), &newRem);					

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1258 : 		event->eventText = new _TCHAR[size+1];

	movsx	eax, WORD PTR _size$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+12], edx

; 1259 : 		memcpychk(event->eventText, &buffer, sizeof(_TCHAR)*size, &newRem);	

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	movsx	ecx, WORD PTR _size$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1260 : 		event->eventText[size] = 0;

	movsx	edx, WORD PTR _size$[ebp]
	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	BYTE PTR [ecx+edx], 0

; 1261 : 		event->next = NULL;

	mov	edx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [edx+16], 0

; 1262 : 		if (!StandardEventQueue)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+276], 0
	jne	SHORT $LN18@Decode

; 1263 : 		{
; 1264 : 			StandardEventQueue = event;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [ecx+276], edx

; 1265 : 			last = event;

	mov	eax, DWORD PTR _event$[ebp]
	mov	DWORD PTR _last$[ebp], eax

; 1266 : 		}
; 1267 : 		else

	jmp	SHORT $LN17@Decode
$LN18@Decode:

; 1268 : 		{
; 1269 : 			last->next = event;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	edx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1270 : 			last = event;

	mov	eax, DWORD PTR _event$[ebp]
	mov	DWORD PTR _last$[ebp], eax
$LN17@Decode:

; 1271 : 		}
; 1272 : 	}

	jmp	$LN20@Decode
$LN19@Decode:

; 1273 : 	memcpychk(&entries, &buffer, sizeof(short), &newRem);					

	lea	ecx, DWORD PTR _newRem$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	lea	eax, DWORD PTR _entries$[ebp]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1274 : 	for (i=0; i<entries; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@Decode
$LN15@Decode:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN16@Decode:
	movsx	edx, WORD PTR _entries$[ebp]
	cmp	DWORD PTR _i$[ebp], edx
	jge	$LN14@Decode

; 1275 : 	{
; 1276 : 		event = new CampUIEventElement();

	mov	DWORD PTR $T13[ebp], 20			; 00000014H
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN37@Decode
	mov	ecx, DWORD PTR $T13[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR $T20[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T20[ebp]
	mov	DWORD PTR tv449[ebp], eax
	jmp	SHORT $LN38@Decode
$LN37@Decode:
	mov	DWORD PTR tv449[ebp], 0
$LN38@Decode:
	mov	ecx, DWORD PTR tv449[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 1277 : 		memcpychk(event, &buffer, sizeof(uieventnode), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	20					; 00000014H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1278 : 		memcpychk(&size, &buffer, sizeof(short), &newRem);					

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1279 : 		event->eventText = new _TCHAR[size+1];

	movsx	edx, WORD PTR _size$[ebp]
	add	edx, 1
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [eax+12], ecx

; 1280 : 		memcpychk(event->eventText, &buffer, sizeof(_TCHAR)*size, &newRem);	

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	movsx	eax, WORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1281 : 		event->eventText[size] = 0;

	movsx	ecx, WORD PTR _size$[ebp]
	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	BYTE PTR [eax+ecx], 0

; 1282 : 		event->next = NULL;

	mov	ecx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 1283 : 		if (!PriorityEventQueue)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+280], 0
	jne	SHORT $LN13@Decode

; 1284 : 		{
; 1285 : 			PriorityEventQueue = event;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [eax+280], ecx

; 1286 : 			last = event;

	mov	edx, DWORD PTR _event$[ebp]
	mov	DWORD PTR _last$[ebp], edx

; 1287 : 		}
; 1288 : 		else

	jmp	SHORT $LN12@Decode
$LN13@Decode:

; 1289 : 		{
; 1290 : 			if(last)

	cmp	DWORD PTR _last$[ebp], 0
	je	SHORT $LN11@Decode

; 1291 : 				last->next = event;

	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR _event$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN11@Decode:

; 1292 : 			last = event;

	mov	edx, DWORD PTR _event$[ebp]
	mov	DWORD PTR _last$[ebp], edx
$LN12@Decode:

; 1293 : 		}
; 1294 : 	}

	jmp	$LN15@Decode
$LN14@Decode:

; 1295 : 	// Read the map data
; 1296 : 	FreeCampMaps();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeCampMaps@CampaignClass@@QAEXXZ	; CampaignClass::FreeCampMaps

; 1297 : 	memcpychk(&CampMapSize, &buffer, sizeof(short), &newRem);				

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 284				; 0000011cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1298 : 	if (CampMapSize > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+284], 0
	jle	SHORT $LN10@Decode

; 1299 : 	{
; 1300 : 		CampMapData = new uchar[CampMapSize];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+296], ecx

; 1301 : 		memcpychk(CampMapData, &buffer, CampMapSize, &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN10@Decode:

; 1302 : 	}
; 1303 : 
; 1304 : 	// Read the squadron data
; 1305 : 	FreeSquadronData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 1306 : 	memcpychk(&LastIndexNum, &buffer, sizeof(short), &newRem);				

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1307 : 	memcpychk(&NumAvailSquadrons, &buffer, sizeof(short), &newRem);			

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 310				; 00000136H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1308 : 	if (NumAvailSquadrons > 0)

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+310]
	test	eax, eax
	jle	$LN4@Decode

; 1309 : 	{
; 1310 : 		if (gCampDataVersion < 42)

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 42	; gCampDataVersion, 0000002aH
	jge	$LN8@Decode

; 1311 : 		{
; 1312 : 			OldSquadUIInfoClass		*osic = new OldSquadUIInfoClass[NumAvailSquadrons];

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+310]
	mov	DWORD PTR $T11[ebp], edx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T11[ebp]
	mov	edx, 104				; 00000068H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN39@Decode
	push	OFFSET ??0OldSquadUIInfoClass@@QAE@XZ
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	push	104					; 00000068H
	mov	ecx, DWORD PTR $T19[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T19[ebp]
	mov	DWORD PTR tv531[ebp], edx
	jmp	SHORT $LN40@Decode
$LN39@Decode:
	mov	DWORD PTR tv531[ebp], 0
$LN40@Decode:
	mov	eax, DWORD PTR tv531[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _osic$21[ebp], ecx

; 1313 : 			memcpychk(osic, &buffer, sizeof(OldSquadUIInfoClass)*NumAvailSquadrons, &newRem);

	lea	edx, DWORD PTR _newRem$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+310]
	imul	ecx, 104				; 00000068H
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _osic$21[ebp]
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1314 : 			CampaignSquadronData = new SquadUIInfoClass[NumAvailSquadrons];

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+310]
	mov	DWORD PTR $T14[ebp], edx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T14[ebp]
	mov	edx, 68					; 00000044H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T18[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN41@Decode
	push	OFFSET ??0SquadUIInfoClass@@QAE@XZ	; SquadUIInfoClass::SquadUIInfoClass
	mov	eax, DWORD PTR $T14[ebp]
	push	eax
	push	68					; 00000044H
	mov	ecx, DWORD PTR $T18[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T18[ebp]
	mov	DWORD PTR tv555[ebp], edx
	jmp	SHORT $LN42@Decode
$LN41@Decode:
	mov	DWORD PTR tv555[ebp], 0
$LN42@Decode:
	mov	eax, DWORD PTR tv555[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR [ecx+312], edx

; 1315 : 			for (i=0; i<NumAvailSquadrons; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@Decode
$LN6@Decode:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@Decode:
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+310]
	cmp	DWORD PTR _i$[ebp], edx
	jge	$LN5@Decode

; 1316 : 			{
; 1317 : 				CampaignSquadronData[i].x = osic[i].x;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 1318 : 				CampaignSquadronData[i].y = osic[i].y;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 104				; 00000068H
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	ecx, DWORD PTR [esi+ecx+4]
	mov	DWORD PTR [eax+edx+4], ecx

; 1319 : 				CampaignSquadronData[i].id = osic[i].id;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 104				; 00000068H
	mov	eax, DWORD PTR _osic$21[ebp]
	mov	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR [eax+edx+12]
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+312]
	mov	DWORD PTR [esi+eax+8], ecx
	mov	DWORD PTR [esi+eax+12], edx

; 1320 : 				CampaignSquadronData[i].dIndex = osic[i].dIndex;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 104				; 00000068H
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	cx, WORD PTR [esi+ecx+16]
	mov	WORD PTR [eax+edx+16], cx

; 1321 : 				CampaignSquadronData[i].nameId = osic[i].nameId;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 104				; 00000068H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	dx, WORD PTR [esi+edx+18]
	mov	WORD PTR [ecx+eax+18], dx

; 1322 : 				CampaignSquadronData[i].specialty = osic[i].specialty;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	al, BYTE PTR [esi+eax+20]
	mov	BYTE PTR [edx+ecx+24], al

; 1323 : 				CampaignSquadronData[i].currentStrength = osic[i].currentStrength;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 104				; 00000068H
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	cl, BYTE PTR [esi+ecx+21]
	mov	BYTE PTR [eax+edx+25], cl

; 1324 : 				CampaignSquadronData[i].country = osic[i].country;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 104				; 00000068H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+312]
	mov	esi, DWORD PTR _osic$21[ebp]
	mov	dl, BYTE PTR [esi+edx+22]
	mov	BYTE PTR [ecx+eax+26], dl

; 1325 : 				_tcsnccpy(CampaignSquadronData[i].airbaseName, osic[i].airbaseName, 39);

	push	39					; 00000027H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _osic$21[ebp]
	lea	edx, DWORD PTR [ecx+eax+23]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	lea	eax, DWORD PTR [edx+eax+27]
	push	eax
	call	__tcsnccpy
	add	esp, 12					; 0000000cH

; 1326 : 				CampaignSquadronData[i].airbaseName[39] = 0;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+312]
	mov	eax, 1
	imul	eax, 39					; 00000027H
	mov	BYTE PTR [ecx+eax+27], 0

; 1327 : 			}

	jmp	$LN6@Decode
$LN5@Decode:

; 1328 : 			delete[] osic;

	mov	ecx, DWORD PTR _osic$21[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1329 : 		}
; 1330 : 		else

	jmp	$LN4@Decode
$LN8@Decode:

; 1331 : 		{
; 1332 : 			CampaignSquadronData = new SquadUIInfoClass[NumAvailSquadrons];

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+310]
	mov	DWORD PTR $T12[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T12[ebp]
	mov	edx, 68					; 00000044H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN43@Decode
	push	OFFSET ??0SquadUIInfoClass@@QAE@XZ	; SquadUIInfoClass::SquadUIInfoClass
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	push	68					; 00000044H
	mov	ecx, DWORD PTR $T17[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T17[ebp]
	mov	DWORD PTR tv682[ebp], edx
	jmp	SHORT $LN44@Decode
$LN43@Decode:
	mov	DWORD PTR tv682[ebp], 0
$LN44@Decode:
	mov	eax, DWORD PTR tv682[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+312], edx

; 1333 : 			memcpychk(CampaignSquadronData, &buffer, sizeof(SquadUIInfoClass)*NumAvailSquadrons, &newRem);

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+310]
	imul	edx, 68					; 00000044H
	push	edx
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN4@Decode:

; 1334 : 		}
; 1335 : 	}
; 1336 : 	
; 1337 : 	if (gCampDataVersion >= 31)	{

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 31	; gCampDataVersion, 0000001fH
	jl	SHORT $LN3@Decode

; 1338 : 		memcpychk(&Tempo, &buffer, sizeof(uchar), &newRem);

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 340				; 00000154H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN3@Decode:

; 1339 : 	}
; 1340 : 
; 1341 : 	if (gCampDataVersion >= 43)

	cmp	DWORD PTR ?gCampDataVersion@@3HA, 43	; gCampDataVersion, 0000002bH
	jl	SHORT $LN2@Decode

; 1342 : 	{
; 1343 : 		memcpychk(&CreatorIP, &buffer, sizeof(long), &newRem);		

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 344				; 00000158H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1344 : 		memcpychk(&CreationTime, &buffer, sizeof(long), &newRem);	

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1345 : 		memcpychk(&CreationRand, &buffer, sizeof(long), &newRem);	

	lea	eax, DWORD PTR _newRem$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H
$LN2@Decode:

; 1346 : 	}
; 1347 : 
; 1348 : 	// Now we're preloaded
; 1349 : 	Flags |= CAMP_PRELOADED;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 1350 : 
; 1351 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1352 : 
; 1353 : 	delete bufhead;

	mov	eax, DWORD PTR _bufhead$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1354 : 
; 1355 : 	if (gCampDataVersion > 5) {
; 1356 : 		ShiAssert ( (int)(buffer - bufhead) == datasize );
; 1357 : 	}
; 1358 : 
; 1359 : 	return (int)(buffer - bufhead);

	mov	eax, DWORD PTR _buffer$[ebp]
	sub	eax, DWORD PTR _bufhead$[ebp]

; 1360 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$0:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$1:
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__unwindfunclet$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z$2:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Decode@CampaignClass@@QAEHPAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Decode@CampaignClass@@QAEHPAPAEPAJ@Z ENDP		; CampaignClass::Decode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
_this$ = -12						; size = 4
_buffer$ = -8						; size = 4
_size$ = -4						; size = 4
_fp$ = 8						; size = 4
?SaveData@CampaignClass@@QAEHPAU_iobuf@@@Z PROC		; CampaignClass::SaveData
; _this$ = ecx

; 1030 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1031 : 	long	size;
; 1032 : 	uchar	*buffer;
; 1033 : 
; 1034 : 	size = Encode(&buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@CampaignClass@@QAEHPAPAE@Z	; CampaignClass::Encode
	mov	DWORD PTR _size$[ebp], eax

; 1035 : 
; 1036 : 	fwrite (&size, sizeof(long), 1, fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	push	4
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H

; 1037 : 	fwrite (buffer, size, 1, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H

; 1038 : 	delete buffer;

	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1039 : 	return size;

	mov	eax, DWORD PTR _size$[ebp]

; 1040 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SaveData@CampaignClass@@QAEHPAU_iobuf@@@Z ENDP		; CampaignClass::SaveData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 4
_bufhead$ = -20						; size = 4
_this$ = -16						; size = 4
$T2 = -12						; size = 4
_buffer$ = -8						; size = 4
_size$ = -4						; size = 4
_fp$ = 8						; size = 4
?LoadData@CampaignClass@@QAEHPAU_iobuf@@@Z PROC		; CampaignClass::LoadData
; _this$ = ecx

; 1016 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1017 : 	uchar	*buffer,*bufhead;
; 1018 : 	long	size;
; 1019 : 
; 1020 : 	fread(&size, sizeof(long), 1, fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1021 : 	bufhead = buffer = new uchar[size];

	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _buffer$[ebp], eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _bufhead$[ebp], ecx

; 1022 : 	fread(buffer, size, 1, fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1023 : 	Decode(&buffer, &size);

	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@CampaignClass@@QAEHPAPAEPAJ@Z	; CampaignClass::Decode

; 1024 : 	delete bufhead;

	mov	ecx, DWORD PTR _bufhead$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1025 : 	return 1;

	mov	eax, 1

; 1026 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?LoadData@CampaignClass@@QAEHPAU_iobuf@@@Z ENDP		; CampaignClass::LoadData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_bx$ = -12						; size = 4
_by$ = -8						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RangeToBullseyeFt@CampaignClass@@QAEHMM@Z PROC		; CampaignClass::RangeToBullseyeFt
; _this$ = ecx

; 1743 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1744 : 	float		bx,by;
; 1745 : 
; 1746 : 	// KCK: Remember - swap axises.
; 1747 : 	by = GridToSim(BullseyeX);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+98]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _by$[ebp]

; 1748 : 	bx = GridToSim(BullseyeY);

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+100]
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _bx$[ebp]

; 1749 : 	return FloatToInt32(Distance(x,y,bx,by));

	push	ecx
	movss	xmm0, DWORD PTR _by$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _bx$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Distance@@YAMMMMM@Z			; Distance
	add	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4

; 1750 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RangeToBullseyeFt@CampaignClass@@QAEHMM@Z ENDP		; CampaignClass::RangeToBullseyeFt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_theta$ = -16						; size = 4
_by$ = -12						; size = 4
_bx$ = -8						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?BearingToBullseyeDeg@CampaignClass@@QAEHMM@Z PROC	; CampaignClass::BearingToBullseyeDeg
; _this$ = ecx

; 1731 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1732 : 	float		bx,by,theta;
; 1733 : 
; 1734 : 	// KCK: Remember - swap axises.
; 1735 : 	by = GridToSim(BullseyeX);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+98]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _by$[ebp]

; 1736 : 	bx = GridToSim(BullseyeY);

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+100]
	push	eax
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	fstp	DWORD PTR _bx$[ebp]

; 1737 : 	theta = (float)atan2 ( (bx - x) , (by - y) );

	movss	xmm0, DWORD PTR _by$[ebp]
	subss	xmm0, DWORD PTR _y$[ebp]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _bx$[ebp]
	subss	xmm0, DWORD PTR _x$[ebp]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _theta$[ebp]

; 1738 : 	theta = (float)atan2 ( (by - y) , (bx - x) );

	movss	xmm0, DWORD PTR _bx$[ebp]
	subss	xmm0, DWORD PTR _x$[ebp]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _by$[ebp]
	subss	xmm0, DWORD PTR _y$[ebp]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _theta$[ebp]

; 1739 : 	return FloatToInt32(theta * RTD);

	movss	xmm0, DWORD PTR _theta$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4

; 1740 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?BearingToBullseyeDeg@CampaignClass@@QAEHMM@Z ENDP	; CampaignClass::BearingToBullseyeDeg
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nameid$ = 8						; size = 1
_x$ = 12						; size = 2
_y$ = 16						; size = 2
?SetBullseye@CampaignClass@@QAEXEFF@Z PROC		; CampaignClass::SetBullseye
; _this$ = ecx

; 1724 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1725 : 	BullseyeName = nameid;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _nameid$[ebp]
	mov	BYTE PTR [eax+97], cl

; 1726 : 	BullseyeX = x;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR [edx+98], ax

; 1727 : 	BullseyeY = y;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _y$[ebp]
	mov	WORD PTR [ecx+100], dx

; 1728 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetBullseye@CampaignClass@@QAEXEFF@Z ENDP		; CampaignClass::SetBullseye
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBullseyeName@CampaignClass@@QAEEXZ PROC		; CampaignClass::GetBullseyeName
; _this$ = ecx

; 1719 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1720 : 	return BullseyeName;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+97]

; 1721 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBullseyeName@CampaignClass@@QAEEXZ ENDP		; CampaignClass::GetBullseyeName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetBullseyeSimLocation@CampaignClass@@QAEXPAM0@Z PROC	; CampaignClass::GetBullseyeSimLocation
; _this$ = ecx

; 1712 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1713 : 	// KCK: Remember - swap axises.
; 1714 : 	*y = GridToSim(BullseyeX);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+98]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	mov	edx, DWORD PTR _y$[ebp]
	fstp	DWORD PTR [edx]

; 1715 : 	*x = GridToSim(BullseyeY);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+100]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	add	esp, 4
	mov	edx, DWORD PTR _x$[ebp]
	fstp	DWORD PTR [edx]

; 1716 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetBullseyeSimLocation@CampaignClass@@QAEXPAM0@Z ENDP	; CampaignClass::GetBullseyeSimLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z PROC	; CampaignClass::GetBullseyeLocation
; _this$ = ecx

; 1706 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1707 : 	*x = BullseyeX;

	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+98]
	mov	WORD PTR [eax], dx

; 1708 : 	*y = BullseyeY;

	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+100]
	mov	WORD PTR [eax], dx

; 1709 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z ENDP	; CampaignClass::GetBullseyeLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_online$ = 8						; size = 4
?SetOnlineStatus@CampaignClass@@QAEXH@Z PROC		; CampaignClass::SetOnlineStatus
; _this$ = ecx

; 1696 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1697 : 	if (online){

	cmp	DWORD PTR _online$[ebp], 0
	je	SHORT $LN2@SetOnlineS

; 1698 : 		Flags |= CAMP_ONLINE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 1699 : 	}
; 1700 : 	else {

	jmp	SHORT $LN3@SetOnlineS
$LN2@SetOnlineS:

; 1701 : 		Flags &= ~CAMP_ONLINE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -513				; fffffdffH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN3@SetOnlineS:

; 1702 : 	}
; 1703 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetOnlineStatus@CampaignClass@@QAEXH@Z ENDP		; CampaignClass::SetOnlineStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Resume@CampaignClass@@QAEXXZ PROC			; CampaignClass::Resume
; _this$ = ecx

; 1687 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1688 : 	if (!IsSuspended()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSuspended@CampaignClass@@QAEHXZ	; CampaignClass::IsSuspended
	test	eax, eax
	jne	SHORT $LN1@Resume

; 1689 : 		return;

	jmp	SHORT $LN2@Resume
$LN1@Resume:

; 1690 : 	}
; 1691 : 
; 1692 : 	Flags ^= CAMP_SUSPENDED;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	xor	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN2@Resume:

; 1693 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Resume@CampaignClass@@QAEXXZ ENDP			; CampaignClass::Resume
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Suspend@CampaignClass@@QAEXXZ PROC			; CampaignClass::Suspend
; _this$ = ecx

; 1672 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1673 : 	if (IsSuspended()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSuspended@CampaignClass@@QAEHXZ	; CampaignClass::IsSuspended
	test	eax, eax
	je	SHORT $LN3@Suspend

; 1674 : 		return;

	jmp	SHORT $LN4@Suspend
$LN3@Suspend:

; 1675 : 	}
; 1676 : 
; 1677 : 	ThreadManager::fast_campaign();

	call	?fast_campaign@ThreadManager@@SAXXZ	; ThreadManager::fast_campaign

; 1678 : 	Flags |= CAMP_SUSPEND_REQUEST;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN2@Suspend:

; 1679 : 	while (!IsSuspended() && (Flags & CAMP_SUSPEND_REQUEST)){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSuspended@CampaignClass@@QAEHXZ	; CampaignClass::IsSuspended
	test	eax, eax
	jne	SHORT $LN1@Suspend
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 8
	je	SHORT $LN1@Suspend

; 1680 : 		Sleep(100);												// Wait until the campaign is actually suspended

	push	100					; 00000064H
	call	DWORD PTR __imp__Sleep@4

; 1681 : 	}

	jmp	SHORT $LN2@Suspend
$LN1@Suspend:

; 1682 : 
; 1683 : 	ThreadManager::slow_campaign ();

	call	?slow_campaign@ThreadManager@@SAXXZ	; ThreadManager::slow_campaign
$LN4@Suspend:

; 1684 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Suspend@CampaignClass@@QAEXXZ ENDP			; CampaignClass::Suspend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndCampaign@CampaignClass@@QAEXXZ PROC			; CampaignClass::EndCampaign
; _this$ = ecx

; 862  : void CampaignClass::EndCampaign (void){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 863  : 	// returns only when campaign is not loaded anymore
; 864  : 	if (!TheCampaign.IsLoaded()){

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	jne	SHORT $LN3@EndCampaig

; 865  : 		return;

	jmp	SHORT $LN4@EndCampaig
$LN3@EndCampaig:

; 866  : 	}
; 867  : 	TheCampaign.Flags |= CAMP_SHUTDOWN_REQUEST;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	or	eax, 4
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, eax
$LN2@EndCampaig:

; 868  : 	while (TheCampaign.IsLoaded()) {

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN4@EndCampaig

; 869  : 		Sleep(100);

	push	100					; 00000064H
	call	DWORD PTR __imp__Sleep@4

; 870  : 	}

	jmp	SHORT $LN2@EndCampaig
$LN4@EndCampaig:

; 871  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndCampaign@CampaignClass@@QAEXXZ ENDP			; CampaignClass::EndCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv176 = -44						; size = 4
$T1 = -40						; size = 4
tv170 = -36						; size = 4
$T2 = -32						; size = 4
tv155 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
$T5 = -16						; size = 4
$T6 = -12						; size = 4
_oldGame$ = -8						; size = 4
_this$ = -4						; size = 4
?ReallyEndCampaign@CampaignClass@@QAEXXZ PROC		; CampaignClass::ReallyEndCampaign
; _this$ = ecx

; 878  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 879  : 	MonoPrint ("Calling EndCampaign.. \n");

	push	OFFSET ??_C@_0BI@PJPBLJIK@Calling?5EndCampaign?4?4?5?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 880  : 
; 881  : #if !NEW_END_CAMPAIGN
; 882  : 	Suspend();
; 883  : #endif
; 884  : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 885  : 
; 886  : #ifdef CAMPTOOL
; 887  : 	if (hToolWnd){
; 888  : 		PostMessage (hToolWnd, WM_CLOSE, 0, 0);
; 889  : 	}
; 890  : #endif
; 891  : 
; 892  : 	// Now clean up.
; 893  : 	// KCK: I loath to do this, but VU just isn't threadsafe during shutdown
; 894  : #if !NO_LOCKS_ON_INIT_EXIT
; 895  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 896  : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 897  : #endif
; 898  : 
; 899  : 	// Clear out our pointers
; 900  : 	FalconLocalSession->ClearCameras();

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?ClearCameras@VuSessionEntity@@QAEX_N@Z	; VuSessionEntity::ClearCameras

; 901  : 	FalconLocalSession->SetPlayerEntity(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity

; 902  : 	FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 903  : 	FalconLocalSession->SetPlayerSquadron(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 904  : 	FalconLocalSession->SetFlyState(FLYSTATE_IN_UI);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetFlyState@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetFlyState

; 905  : 
; 906  : #define JOIN_AT_END 1
; 907  : #if !JOIN_AT_END
; 908  : 	// Join the player pool
; 909  : 	// sfr: get the current joining new
; 910  : 	VuGameEntity *oldGame = CurrentGame.get();
; 911  : 	if (gCommsMgr){
; 912  : 		gCommsMgr->LookAtGame(vuPlayerPoolGroup);
; 913  : 	}
; 914  : 	gMainThread->JoinGame(vuPlayerPoolGroup);
; 915  : 	if ((oldGame != NULL) && (oldGame->SessionCount() == 0)){
; 916  : 		vuDatabase->Remove(oldGame);
; 917  : 	}
; 918  : #endif
; 919  : 
; 920  : 	//if (CurrentGame){
; 921  : 	//	if (!CurrentGame->SessionCount()){
; 922  : 	//		vuDatabase->Remove(CurrentGame);
; 923  : 	//	}
; 924  : 	//	VuDeReferenceEntity(CurrentGame);
; 925  : 	//	CurrentGame = NULL;
; 926  : 	//}
; 927  : 
; 928  : 	if (Flags & CAMP_LOADED){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	je	$LN7@ReallyEndC

; 929  : 		if (!(Flags & CAMP_LIGHT)){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 128				; 00000080H
	jne	SHORT $LN6@ReallyEndC

; 930  : 			FreeTheaterTerrain();

	call	?FreeTheaterTerrain@@YAXXZ		; FreeTheaterTerrain

; 931  : 			// Only remove teams if we're playing a local game
; 932  : 			DisposeCampaignLists();

	call	?DisposeCampaignLists@@YAXXZ		; DisposeCampaignLists

; 933  : 			DisposePilotInfo();

	call	?DisposePilotInfo@@YAXXZ		; DisposePilotInfo

; 934  : 			delete MissionEvaluator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T6[ebp], eax
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN10@ReallyEndC
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GMissionEvaluationClass@@QAEPAXI@Z
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN11@ReallyEndC
$LN10@ReallyEndC:
	mov	DWORD PTR tv155[ebp], 0
$LN11@ReallyEndC:

; 935  : 			MissionEvaluator = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], 0

; 936  : 			DumpDivisionData();

	call	?DumpDivisionData@@YAXXZ		; DumpDivisionData

; 937  : 			DisposeCampaignEvents();

	call	?DisposeCampaignEvents@@YAXXZ		; DisposeCampaignEvents
$LN6@ReallyEndC:

; 938  : 		}
; 939  : 		if (!(Flags & CAMP_ONLINE)){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 512				; 00000200H
	jne	SHORT $LN5@ReallyEndC

; 940  : 			RemoveTeams();			// KCK NOTE: These could be 'silent removes' instead

	call	?RemoveTeams@@YAXXZ			; RemoveTeams
$LN5@ReallyEndC:

; 941  : 		}
; 942  : 		CleanupPersistantList();

	call	?CleanupPersistantList@@YAXXZ		; CleanupPersistantList

; 943  : 		DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 944  : 		FreeCampMaps();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeCampMaps@CampaignClass@@QAEXXZ	; CampaignClass::FreeCampMaps

; 945  : 		FreeSquadronData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 946  : 		ChillTypes();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 947  : 		FreeNames();

	call	?FreeNames@@YAXXZ			; FreeNames

; 948  : 		DisposeTheaterLists();

	call	?DisposeTheaterLists@@YAXXZ		; DisposeTheaterLists
$LN7@ReallyEndC:

; 949  : 		// DSP Remove when no longer used
; 950  : 		//DisposeRunwayList();
; 951  : 	}
; 952  : 
; 953  : 	if(gNavigationSys){

	cmp	DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A, 0 ; gNavigationSys
	je	SHORT $LN4@ReallyEndC

; 954  : 		delete gNavigationSys;

	mov	ecx, DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A ; gNavigationSys
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN12@ReallyEndC
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GNavigationSystem@@QAEPAXI@Z
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN4@ReallyEndC
$LN12@ReallyEndC:
	mov	DWORD PTR tv170[ebp], 0
$LN4@ReallyEndC:

; 955  : 	}
; 956  : 
; 957  : 	if (gTacanList){

	cmp	DWORD PTR ?gTacanList@@3PAVTacanList@@A, 0 ; gTacanList
	je	SHORT $LN3@ReallyEndC

; 958  : 		delete gTacanList;

	mov	eax, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN14@ReallyEndC
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GTacanList@@QAEPAXI@Z
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN3@ReallyEndC
$LN14@ReallyEndC:
	mov	DWORD PTR tv176[ebp], 0
$LN3@ReallyEndC:

; 959  : 	}
; 960  : 	gNavigationSys = NULL;

	mov	DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A, 0 ; gNavigationSys

; 961  : 	gTacanList = NULL;

	mov	DWORD PTR ?gTacanList@@3PAVTacanList@@A, 0 ; gTacanList

; 962  : 	Flags = CAMP_RUNNING;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 1

; 963  : 	InMainUI = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 1

; 964  : 
; 965  : #if JOIN_AT_END
; 966  : 	// Join the player pool
; 967  : 	// sfr: get the current joining new
; 968  : 	VuGameEntity *oldGame = CurrentGame.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ ; VuBin<FalconGameEntity>::get
	mov	DWORD PTR _oldGame$[ebp], eax

; 969  : 	if (gCommsMgr){

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN2@ReallyEndC

; 970  : 		gCommsMgr->LookAtGame(vuPlayerPoolGroup);

	mov	ecx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	ecx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame
$LN2@ReallyEndC:

; 971  : 	}
; 972  : 	gMainThread->JoinGame(vuPlayerPoolGroup);

	mov	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	edx
	mov	ecx, DWORD PTR ?gMainThread@@3PAVVuMainThread@@A ; gMainThread
	call	?JoinGame@VuMainThread@@QAEHPAVVuGameEntity@@@Z ; VuMainThread::JoinGame

; 973  : 	if ((oldGame != NULL) && (oldGame->SessionCount() == 0)){

	cmp	DWORD PTR _oldGame$[ebp], 0
	je	SHORT $LN1@ReallyEndC
	mov	ecx, DWORD PTR _oldGame$[ebp]
	call	?SessionCount@VuGroupEntity@@QAEHXZ	; VuGroupEntity::SessionCount
	test	eax, eax
	jne	SHORT $LN1@ReallyEndC

; 974  : 		vuDatabase->Remove(oldGame);

	mov	eax, DWORD PTR _oldGame$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove
$LN1@ReallyEndC:

; 975  : 	}
; 976  : #endif
; 977  : 
; 978  : 
; 979  : #if !NO_LOCKS_ON_INIT_EXIT
; 980  : 	VuExitCriticalSection();		// KCK: I loath to do this, but VU just isn't threadsafe during shutdown

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 981  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 982  : #endif
; 983  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReallyEndCampaign@CampaignClass@@QAEXXZ ENDP		; CampaignClass::ReallyEndCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv142 = -536						; size = 4
_fp$ = -532						; size = 4
_this$ = -528						; size = 4
_to$ = -524						; size = 260
_from$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_gametype$ = 8						; size = 4
_savefile$ = 12						; size = 4
_save_mode$ = 16					; size = 4
?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z PROC ; CampaignClass::SaveCampaign
; _this$ = ecx

; 779  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 780  : 	FILE*	fp;
; 781  : 	char	to[MAX_PATH],from[MAX_PATH];
; 782  : 
; 783  : 	if (!IsLoaded() || (Flags & CAMP_LIGHT && save_mode != CAMP_SAVE_LIGHT))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN14@SaveCampai
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 128				; 00000080H
	je	SHORT $LN15@SaveCampai
	cmp	DWORD PTR _save_mode$[ebp], 2
	je	SHORT $LN15@SaveCampai
$LN14@SaveCampai:

; 784  : 		return 0;

	xor	eax, eax
	jmp	$LN16@SaveCampai
$LN15@SaveCampai:

; 785  : 
; 786  : 	StartWriteCampFile (gametype, savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	call	?StartWriteCampFile@@YAXW4FalconGameType@@PAD@Z ; StartWriteCampFile
	add	esp, 8

; 787  : 
; 788  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 789  : 
; 790  : 	if (gTacticalFullEdit)

	cmp	DWORD PTR ?gTacticalFullEdit@@3HA, 0	; gTacticalFullEdit
	je	SHORT $LN13@SaveCampai

; 791  : 		save_mode = CAMP_SAVE_FULL;

	mov	DWORD PTR _save_mode$[ebp], 1
$LN13@SaveCampai:

; 792  : 
; 793  : 	if (gametype == game_TacticalEngagement)

	cmp	DWORD PTR _gametype$[ebp], 3
	jne	SHORT $LN12@SaveCampai

; 794  : 		current_tactical_mission->save_data (savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?current_tactical_mission@@3PAVtactical_mission@@A ; current_tactical_mission
	call	?save_data@tactical_mission@@QAEXPAD@Z	; tactical_mission::save_data
$LN12@SaveCampai:

; 795  : 
; 796  : 	sprintf(SaveFile,savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 182				; 000000b6H
	push	eax
	call	_sprintf
	add	esp, 8

; 797  : 	if (save_mode == CAMP_SAVE_LIGHT)

	cmp	DWORD PTR _save_mode$[ebp], 2
	jne	SHORT $LN11@SaveCampai

; 798  : 	{
; 799  : 		sprintf(Scenario,"Instant");

	push	OFFSET ??_C@_07HMOCDNDG@Instant?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	_sprintf
	add	esp, 8

; 800  : 		Camp_MakeInstantAction();

	call	?Camp_MakeInstantAction@@YAXXZ		; Camp_MakeInstantAction

; 801  : 	}
; 802  : 	else

	jmp	SHORT $LN10@SaveCampai
$LN11@SaveCampai:

; 803  : 	{
; 804  : 		if (!CampMapSize || !TheaterSizeX || !CampMapData || save_mode == CAMP_SAVE_FULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+284], 0
	je	SHORT $LN8@SaveCampai
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+86]
	test	ecx, ecx
	je	SHORT $LN8@SaveCampai
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+296], 0
	je	SHORT $LN8@SaveCampai
	cmp	DWORD PTR _save_mode$[ebp], 1
	jne	SHORT $LN9@SaveCampai
$LN8@SaveCampai:

; 805  : 			MakeCampMap(MAP_OWNERSHIP);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeCampMap@CampaignClass@@QAEPAEH@Z	; CampaignClass::MakeCampMap
$LN9@SaveCampai:

; 806  : 		VerifySquadrons(FALCON_PLAYER_TEAM);

	movsx	eax, WORD PTR ?FALCON_PLAYER_TEAM@@3FA	; FALCON_PLAYER_TEAM
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?VerifySquadrons@CampaignClass@@QAEXH@Z	; CampaignClass::VerifySquadrons
$LN10@SaveCampai:

; 807  : 	}
; 808  : 	if (save_mode == CAMP_SAVE_FULL)

	cmp	DWORD PTR _save_mode$[ebp], 1
	jne	SHORT $LN7@SaveCampai

; 809  : 	{
; 810  : 		// The new scenario file should be set to our current save file
; 811  : 		sprintf(Scenario,savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 142				; 0000008eH
	push	edx
	call	_sprintf
	add	esp, 8
$LN7@SaveCampai:

; 812  : 	}
; 813  : 	fp = OpenCampFile (savefile, "cmp", "wb");

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	OFFSET ??_C@_03JIBIFJIL@cmp?$AA@
	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 814  : 	if (fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN6@SaveCampai

; 815  : 	{
; 816  : 		SaveData(fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveData@CampaignClass@@QAEHPAU_iobuf@@@Z ; CampaignClass::SaveData

; 817  : 		CloseCampFile(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	?CloseCampFile@@YAXPAU_iobuf@@@Z	; CloseCampFile
	add	esp, 4

; 818  : 		switch (save_mode)

	mov	eax, DWORD PTR _save_mode$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	cmp	DWORD PTR tv142[ebp], 1
	je	SHORT $LN2@SaveCampai
	cmp	DWORD PTR tv142[ebp], 2
	je	SHORT $LN3@SaveCampai
	jmp	SHORT $LN1@SaveCampai
$LN3@SaveCampai:

; 819  : 		{
; 820  : 				case CAMP_SAVE_LIGHT:
; 821  : 						// KCK: These won't save right - no lists!
; 822  : 						//				SaveBaseObjectives(savefile);
; 823  : 						//				SaveObjectiveDeltas(savefile);
; 824  : 						break;

	jmp	SHORT $LN6@SaveCampai
$LN2@SaveCampai:

; 825  : 				case CAMP_SAVE_FULL:
; 826  : 						SaveBaseObjectives(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?SaveBaseObjectives@@YAXPAD@Z		; SaveBaseObjectives
	add	esp, 4
$LN1@SaveCampai:

; 827  : 						//				SaveObjectiveDeltas(savefile);
; 828  : 						//				SaveBaseUnits(SaveFile);
; 829  : 						// KCK: Fall through to below
; 830  : 				case CAMP_SAVE_NORMAL:
; 831  : 				default:
; 832  : 						SaveObjectiveDeltas(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?SaveObjectiveDeltas@@YAXPAD@Z		; SaveObjectiveDeltas
	add	esp, 4

; 833  : 						SaveUnits(savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?SaveUnits@@YAXPAD@Z			; SaveUnits
	add	esp, 4

; 834  : 						//				SaveUnitDeltas(savefile);
; 835  : 						SaveTeams(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?SaveTeams@@YAHPAD@Z			; SaveTeams
	add	esp, 4

; 836  : 						SaveCampaignEvents(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?SaveCampaignEvents@@YAHPAD@Z		; SaveCampaignEvents
	add	esp, 4

; 837  : 						SavePilotInfo(savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?SavePilotInfo@@YAXPAD@Z		; SavePilotInfo
	add	esp, 4

; 838  : 						SavePersistantList(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?SavePersistantList@@YAXPAD@Z		; SavePersistantList
	add	esp, 4

; 839  : 						((WeatherClass*)realWeather)->Save(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?Save@WeatherClass@@QAEHPAD@Z		; WeatherClass::Save

; 840  : 						SavePrimaryObjectiveList(savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?SavePrimaryObjectiveList@@YAXPAD@Z	; SavePrimaryObjectiveList
	add	esp, 4
$LN6@SaveCampai:

; 841  : 						break;
; 842  : 		}
; 843  : 	}
; 844  : 	WriteVersionNumber(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?WriteVersionNumber@@YAXPAD@Z		; WriteVersionNumber
	add	esp, 4

; 845  : 
; 846  : 	EndWriteCampFile ();

	call	?EndWriteCampFile@@YAXXZ		; EndWriteCampFile

; 847  : 
; 848  : 	// Copy force ratio and history files into save file
; 849  : 	sprintf(to,"%s\\%s.his",FalconCampUserSaveDirectory,savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09KNOCLLMD@?$CFs?2?$CFs?4his?$AA@
	lea	eax, DWORD PTR _to$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 850  : 	sprintf(from,"%s\\tmp.his",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@
	lea	ecx, DWORD PTR _from$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 851  : 	CopyFile(from,to,FALSE);

	push	0
	lea	edx, DWORD PTR _to$[ebp]
	push	edx
	lea	eax, DWORD PTR _from$[ebp]
	push	eax
	call	DWORD PTR __imp__CopyFileA@12

; 852  : 	sprintf(to,"%s\\%s.frc",FalconCampUserSaveDirectory,savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09BHIMJCDA@?$CFs?2?$CFs?4frc?$AA@
	lea	edx, DWORD PTR _to$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 853  : 	sprintf(from,"%s\\tmp.frc",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@
	lea	eax, DWORD PTR _from$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 854  : 	CopyFile(from,to,FALSE);

	push	0
	lea	ecx, DWORD PTR _to$[ebp]
	push	ecx
	lea	edx, DWORD PTR _from$[ebp]
	push	edx
	call	DWORD PTR __imp__CopyFileA@12

; 855  : 
; 856  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 857  : 	return 1;

	mov	eax, 1
$LN16@SaveCampai:

; 858  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ENDP ; CampaignClass::SaveCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_game$ = 8						; size = 4
?StartRemoteCampaign@CampaignClass@@QAEHPAVFalconGameEntity@@@Z PROC ; CampaignClass::StartRemoteCampaign
; _this$ = ecx

; 734  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 	if (!IsLoaded() || (Flags & CAMP_NEED_MASK))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN2@StartRemot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 535822336				; 1ff00000H
	je	SHORT $LN3@StartRemot
$LN2@StartRemot:

; 736  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@StartRemot
$LN3@StartRemot:

; 737  : 
; 738  : 	if (!(Flags & CAMP_LIGHT))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 128				; 00000080H
	jne	SHORT $LN1@StartRemot

; 739  : 	{
; 740  : 		lastAirPlan = 0;					// Force an air replan - To get squadron data into the ATM

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0

; 741  : 		RebuildObjectiveLists();

	call	?RebuildObjectiveLists@@YAHXZ		; RebuildObjectiveLists

; 742  : 		BuildDivisionData();

	call	?BuildDivisionData@@YAXXZ		; BuildDivisionData

; 743  : 		StandardRebuild();

	call	?StandardRebuild@@YAXXZ			; StandardRebuild
$LN1@StartRemot:

; 744  : 	}
; 745  : 
; 746  : 	// We're done.. Start 'er up
; 747  : 	Resume();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 748  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 749  : 
; 750  : 	return 1;

	mov	eax, 1
$LN4@StartRemot:

; 751  : }	

	mov	esp, ebp
	pop	ebp
	ret	4
?StartRemoteCampaign@CampaignClass@@QAEHPAVFalconGameEntity@@@Z ENDP ; CampaignClass::StartRemoteCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 8
$T3 = -84						; size = 8
$T4 = -76						; size = 8
$T5 = -68						; size = 4
$T6 = -64						; size = 4
$T7 = -60						; size = 4
tv317 = -56						; size = 4
$T8 = -52						; size = 4
tv177 = -48						; size = 4
$T9 = -44						; size = 4
_camprequest$10 = -40					; size = 4
_need_from_all$ = -36					; size = 4
_tmpptr$11 = -32					; size = 4
_masterSession$ = -28					; size = 4
_camprequest$12 = -24					; size = 4
_need_from_master$ = -20				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_gametype$ = 8						; size = 4
_game$ = 12						; size = 4
?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z PROC ; CampaignClass::JoinCampaign
; _this$ = ecx

; 585  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 	ulong need_from_master,need_from_all;
; 587  : 	FalconSessionEntity *masterSession;
; 588  : 
; 589  : 	if (game != CurrentGame){

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	push	ecx
	call	??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z ; operator!=<FalconGameEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@JoinCampai

; 590  : 		EndCampaign();		// Shut down previous campaign request

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign
$LN22@JoinCampai:

; 591  : 	}
; 592  : 
; 593  : 	if (IsLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN21@JoinCampai

; 594  : 		return 1;			// Already loaded, return success

	mov	eax, 1
	jmp	$LN23@JoinCampai
$LN21@JoinCampai:

; 595  : 	}
; 596  : 
; 597  : 	if (!IsPreLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPreLoaded@CampaignClass@@QAEHXZ	; CampaignClass::IsPreLoaded
	test	eax, eax
	jne	SHORT $LN20@JoinCampai

; 598  : 		EndCampaign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign

; 599  : 		return 0;

	xor	eax, eax
	jmp	$LN23@JoinCampai
$LN20@JoinCampai:

; 600  : 	}
; 601  : 
; 602  : 	F4Assert (gametype != game_InstantAction);
; 603  : 
; 604  : 	masterSession = (FalconSessionEntity*) vuDatabase->Find(game->OwnerId());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _masterSession$[ebp], eax

; 605  : 	if (!masterSession || masterSession == vuLocalSessionEntity)

	cmp	DWORD PTR _masterSession$[ebp], 0
	je	SHORT $LN18@JoinCampai
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _masterSession$[ebp]
	push	eax
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@JoinCampai
$LN18@JoinCampai:

; 606  : 		return LoadCampaign(gametype, Scenario);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 142				; 0000008eH
	push	edx
	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadCampaign
	jmp	$LN23@JoinCampai
$LN19@JoinCampai:

; 607  : 
; 608  : 	if (stricmp(Scenario,"Instant")==0)

	push	OFFSET ??_C@_07HMOCDNDG@Instant?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@JoinCampai

; 609  : 		Flags |= CAMP_LIGHT;		

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
$LN17@JoinCampai:

; 610  : 
; 611  : 	Suspend ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 612  : 
; 613  : #if !NO_LOCKS_ON_INIT_EXIT
; 614  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 615  : #endif
; 616  : 
; 617  : 	if (Flags & CAMP_NEED_MASK)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 535822336				; 1ff00000H
	je	$LN16@JoinCampai

; 618  : 	{
; 619  : 		return 0;

	xor	eax, eax
	jmp	$LN23@JoinCampai

; 620  : 		// We're resuming a previous request.
; 621  : 		ShiAssert (0);		// KCK: I don't want to do this anymore. These are sent reliably
; 622  : 		need_from_master = Flags & (CAMP_NEED_MASK & ~CAMP_NEED_ENTITIES);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 534773760				; 1fe00000H
	mov	DWORD PTR _need_from_master$[ebp], edx

; 623  : 		need_from_all = Flags & (CAMP_NEED_MASK & CAMP_NEED_ENTITIES);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 1048576				; 00100000H
	mov	DWORD PTR _need_from_all$[ebp], ecx

; 624  : 
; 625  : 		// resend our master session information requests here.
; 626  : 		if (need_from_master)

	cmp	DWORD PTR _need_from_master$[ebp], 0
	je	$LN15@JoinCampai

; 627  : 		{
; 628  : 			FalconRequestCampaignData *camprequest;
; 629  : 			camprequest = new FalconRequestCampaignData(masterSession->Id(), masterSession);

	push	69					; 00000045H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN25@JoinCampai
	push	1
	mov	edx, DWORD PTR _masterSession$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _masterSession$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0FalconRequestCampaignData@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconRequestCampaignData::FalconRequestCampaignData
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN26@JoinCampai
$LN25@JoinCampai:
	mov	DWORD PTR tv177[ebp], 0
$LN26@JoinCampai:
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _camprequest$12[ebp], ecx

; 630  : 			camprequest->dataBlock.who = FalconLocalSessionId;

	mov	edx, DWORD PTR _camprequest$12[ebp]
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [edx+48], eax
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+52], ecx

; 631  : 			camprequest->dataBlock.dataNeeded = need_from_master;

	mov	edx, DWORD PTR _camprequest$12[ebp]
	mov	eax, DWORD PTR _need_from_master$[ebp]
	mov	DWORD PTR [edx+56], eax

; 632  : 			if (need_from_master & CAMP_NEED_OBJ_DELTAS)

	mov	ecx, DWORD PTR _need_from_master$[ebp]
	and	ecx, 8388608				; 00800000H
	je	SHORT $LN14@JoinCampai

; 633  : 				camprequest->dataBlock.size += FS_MAXBLK/8;

	mov	edx, DWORD PTR _camprequest$12[ebp]
	movzx	eax, BYTE PTR [edx+60]
	add	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _camprequest$12[ebp]
	mov	BYTE PTR [ecx+60], al
$LN14@JoinCampai:

; 634  : 			if (need_from_master & CAMP_NEED_UNIT_DATA)

	mov	edx, DWORD PTR _need_from_master$[ebp]
	and	edx, 67108864				; 04000000H
	je	SHORT $LN13@JoinCampai

; 635  : 				camprequest->dataBlock.size += FS_MAXBLK/8;

	mov	eax, DWORD PTR _camprequest$12[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	add	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _camprequest$12[ebp]
	mov	BYTE PTR [edx+60], cl
$LN13@JoinCampai:

; 636  : 			if (camprequest->dataBlock.size > 0)

	mov	eax, DWORD PTR _camprequest$12[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	test	ecx, ecx
	jle	SHORT $LN12@JoinCampai

; 637  : 			{
; 638  : 				uchar	*tmpptr;
; 639  : 				camprequest->dataBlock.data = tmpptr = new uchar[camprequest->dataBlock.size];

	mov	edx, DWORD PTR _camprequest$12[ebp]
	movzx	eax, BYTE PTR [edx+60]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _tmpptr$11[ebp], ecx
	mov	edx, DWORD PTR _camprequest$12[ebp]
	mov	eax, DWORD PTR _tmpptr$11[ebp]
	mov	DWORD PTR [edx+61], eax

; 640  : 				if (need_from_master & CAMP_NEED_OBJ_DELTAS)

	mov	ecx, DWORD PTR _need_from_master$[ebp]
	and	ecx, 8388608				; 00800000H
	je	SHORT $LN11@JoinCampai

; 641  : 				{
; 642  : 					memcpy(tmpptr, masterSession->objDataReceived, FS_MAXBLK/8);

	push	40					; 00000028H
	mov	edx, DWORD PTR _masterSession$[ebp]
	add	edx, 618				; 0000026aH
	push	edx
	mov	eax, DWORD PTR _tmpptr$11[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 643  : 					tmpptr += FS_MAXBLK/8;

	mov	ecx, DWORD PTR _tmpptr$11[ebp]
	add	ecx, 40					; 00000028H
	mov	DWORD PTR _tmpptr$11[ebp], ecx
$LN11@JoinCampai:

; 644  : 				}
; 645  : 				if (need_from_master & CAMP_NEED_UNIT_DATA)

	mov	edx, DWORD PTR _need_from_master$[ebp]
	and	edx, 67108864				; 04000000H
	je	SHORT $LN12@JoinCampai

; 646  : 					memcpy(tmpptr, masterSession->unitDataReceived, FS_MAXBLK/8);

	push	40					; 00000028H
	mov	eax, DWORD PTR _masterSession$[ebp]
	add	eax, 558				; 0000022eH
	push	eax
	mov	ecx, DWORD PTR _tmpptr$11[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN12@JoinCampai:

; 647  : 			}
; 648  : 			FalconSendMessage (camprequest,TRUE);

	push	1
	mov	edx, DWORD PTR _camprequest$12[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN15@JoinCampai:

; 649  : 		}
; 650  : 	}
; 651  : 	else

	jmp	$LN9@JoinCampai
$LN16@JoinCampai:

; 652  : 	{
; 653  : 		// This is a new request
; 654  : 		// Start up the campaign loop
; 655  : 		if (!InitCampaign(gametype, game)) // JB 010731 return on fail

	mov	eax, DWORD PTR _game$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gametype$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::InitCampaign
	test	eax, eax
	jne	SHORT $LN8@JoinCampai

; 656  : 		{
; 657  : 			CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 658  : 			return 0;

	xor	eax, eax
	jmp	$LN23@JoinCampai
$LN8@JoinCampai:

; 659  : 		}
; 660  : 
; 661  : 		// Load initial objective data..
; 662  : 		StartReadCampFile (gametype, Scenario);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 142				; 0000008eH
	push	edx
	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	call	?StartReadCampFile@@YAXW4FalconGameType@@PAD@Z ; StartReadCampFile
	add	esp, 8

; 663  : 
; 664  : 		gCampDataVersion = ReadVersionNumber(Scenario);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	?ReadVersionNumber@@YAHPAD@Z		; ReadVersionNumber
	add	esp, 4
	mov	DWORD PTR ?gCampDataVersion@@3HA, eax	; gCampDataVersion

; 665  : 
; 666  : 		LoadBaseObjectives(TheCampaign.Scenario);

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+142
	call	?LoadBaseObjectives@@YAHPAD@Z		; LoadBaseObjectives
	add	esp, 4

; 667  : 		if (!LoadTeams(TheCampaign.Scenario))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+142
	call	?LoadTeams@@YAHPAD@Z			; LoadTeams
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN7@JoinCampai

; 668  : 			AddNewTeams(Neutral);

	push	3
	call	?AddNewTeams@@YAXW4RelType@@@Z		; AddNewTeams
	add	esp, 4
$LN7@JoinCampai:

; 669  : 		if (!LoadPilotInfo(TheCampaign.Scenario))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+142
	call	?LoadPilotInfo@@YAHPAD@Z		; LoadPilotInfo
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@JoinCampai

; 670  : 			NewPilotInfo();

	call	?NewPilotInfo@@YAXXZ			; NewPilotInfo
$LN6@JoinCampai:

; 671  : 		if (!LoadCampaignEvents(Scenario,Scenario))

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 142				; 0000008eH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 142				; 0000008eH
	push	eax
	call	?LoadCampaignEvents@@YAHPAD0@Z		; LoadCampaignEvents
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@JoinCampai

; 672  : 			NewCampaignEvents(Scenario);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	?NewCampaignEvents@@YAHPAD@Z		; NewCampaignEvents
	add	esp, 4
$LN5@JoinCampai:

; 673  : 		if (!(Flags & CAMP_LIGHT))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 128				; 00000080H
	jne	SHORT $LN4@JoinCampai

; 674  : 			((WeatherClass*)realWeather)->CampLoad(TheCampaign.Scenario, game_Campaign);

	push	4
	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+142
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?CampLoad@WeatherClass@@QAEHPADH@Z	; WeatherClass::CampLoad
$LN4@JoinCampai:

; 675  : 		// Rebuild objective lists once, so our received data has somewhere to go
; 676  : 		// (especially the priority data)
; 677  : 		RebuildObjectiveLists();

	call	?RebuildObjectiveLists@@YAHXZ		; RebuildObjectiveLists

; 678  : 		EndReadCampFile ();

	call	?EndReadCampFile@@YAXXZ			; EndReadCampFile

; 679  : 
; 680  : 		gCampDataVersion = gCurrentDataVersion;

	mov	ecx, DWORD PTR ?gCurrentDataVersion@@3HA ; gCurrentDataVersion
	mov	DWORD PTR ?gCampDataVersion@@3HA, ecx	; gCampDataVersion

; 681  : 
; 682  : 		// Clear previous requests
; 683  : 		Flags &= ~CAMP_NEED_MASK;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -535822337				; e00fffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 684  : 
; 685  : 		if (Flags & CAMP_LIGHT)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 128				; 00000080H
	je	SHORT $LN3@JoinCampai

; 686  : 		{
; 687  : 			need_from_master = CAMP_NEED_PERSIST | CAMP_NEED_OBJ_DELTAS | CAMP_NEED_UNIT_DATA;

	mov	DWORD PTR _need_from_master$[ebp], 79691776 ; 04c00000H

; 688  : 			need_from_all = 0;

	mov	DWORD PTR _need_from_all$[ebp], 0

; 689  : 			//			need_from_all = CAMP_NEED_ENTITIES;
; 690  : 			Flags |= need_from_master | need_from_all;

	mov	ecx, DWORD PTR _need_from_master$[ebp]
	or	ecx, DWORD PTR _need_from_all$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 691  : 		}
; 692  : 		else

	jmp	SHORT $LN2@JoinCampai
$LN3@JoinCampai:

; 693  : 		{
; 694  : 			need_from_master = CAMP_NEED_WEATHER | CAMP_NEED_PERSIST | CAMP_NEED_PRIORITIES | CAMP_NEED_OBJ_DELTAS | CAMP_NEED_TEAM_DATA | CAMP_NEED_UNIT_DATA | CAMP_NEED_VC;

	mov	DWORD PTR _need_from_master$[ebp], 517996544 ; 1ee00000H

; 695  : 			need_from_all = 0;

	mov	DWORD PTR _need_from_all$[ebp], 0

; 696  : 			//			need_from_all = CAMP_NEED_ENTITIES;
; 697  : 			Flags |= need_from_master | need_from_all;

	mov	edx, DWORD PTR _need_from_master$[ebp]
	or	edx, DWORD PTR _need_from_all$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, edx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 698  : 			if (!LoadPilotInfo(TheCampaign.Scenario))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+142
	call	?LoadPilotInfo@@YAHPAD@Z		; LoadPilotInfo
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@JoinCampai

; 699  : 				NewPilotInfo();

	call	?NewPilotInfo@@YAXXZ			; NewPilotInfo
$LN2@JoinCampai:

; 700  : 		}
; 701  : 		Flags |= CAMP_SLAVE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 702  : 		Flags |= CAMP_ONLINE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 703  : 
; 704  : 		// Send our master session information requests here.
; 705  : 		FalconRequestCampaignData *camprequest;
; 706  : 		camprequest = new FalconRequestCampaignData(masterSession->Id(), masterSession);

	push	69					; 00000045H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN27@JoinCampai
	push	1
	mov	eax, DWORD PTR _masterSession$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _masterSession$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0FalconRequestCampaignData@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconRequestCampaignData::FalconRequestCampaignData
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN28@JoinCampai
$LN27@JoinCampai:
	mov	DWORD PTR tv317[ebp], 0
$LN28@JoinCampai:
	mov	ecx, DWORD PTR tv317[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _camprequest$10[ebp], edx

; 707  : 		camprequest->dataBlock.who = FalconLocalSessionId;

	mov	eax, DWORD PTR _camprequest$10[ebp]
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+52], edx

; 708  : 		camprequest->dataBlock.dataNeeded = need_from_master;

	mov	eax, DWORD PTR _camprequest$10[ebp]
	mov	ecx, DWORD PTR _need_from_master$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 709  : 		FalconSendMessage (camprequest,TRUE);

	push	1
	mov	edx, DWORD PTR _camprequest$10[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN9@JoinCampai:

; 710  : 
; 711  : 		/*		// KCK: I don't think we need this anymore
; 712  : 		// Now send our entity request to everyone
; 713  : 		camprequest = new FalconRequestCampaignData(masterSession->Id(), FalconLocalGame);
; 714  : 		camprequest->dataBlock.who = FalconLocalSessionId;
; 715  : 		camprequest->dataBlock.dataNeeded = need_from_all;
; 716  : 		FalconSendMessage (camprequest,TRUE);
; 717  : 		 */
; 718  : 	}
; 719  : 
; 720  : 
; 721  : 	// Assume we'll get all our entities in time - ie: don't block on this request
; 722  : 	Flags &= ~CAMP_NEED_ENTITIES;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -1048577				; ffefffffH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 723  : 
; 724  : 	MonoPrint ("Done requesting shit... \n");

	push	OFFSET ??_C@_0BK@KOMKFNMG@Done?5requesting?5shit?4?4?4?5?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 725  : 
; 726  : #if !NO_LOCKS_ON_INIT_EXIT
; 727  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 728  : #endif
; 729  : 
; 730  : 	return 1;

	mov	eax, 1
$LN23@JoinCampai:

; 731  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$0:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$1:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ENDP ; CampaignClass::JoinCampaign
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_myit$2 = -572						; size = 12
_game$ = -560						; size = 4
tv83 = -556						; size = 4
_load$3 = -552						; size = 4
_t$4 = -548						; size = 4
_u$5 = -544						; size = 4
_this$ = -540						; size = 4
_from$ = -536						; size = 260
_to$ = -276						; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_gametype$ = 8						; size = 4
_savefile$ = 12						; size = 4
?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z PROC ; CampaignClass::LoadCampaign
; _this$ = ecx

; 399  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 560				; 00000230H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 400  : 	char from[MAX_PATH],to[MAX_PATH];
; 401  : 
; 402  : #ifdef CAMPTOOL
; 403  : 	if (gRenameIds)
; 404  : 		memset (RenameTable,0,sizeof(VU_ID_NUMBER) * 65536);
; 405  : 	if (CampIDRenameTable[0])
; 406  : 	{
; 407  : 		for (int i=0; i<MAX_CAMP_ENTITIES; i++)
; 408  : 			CampIDRenameTable[i] = 0;
; 409  : 	}
; 410  : #endif
; 411  : 
; 412  : 	if (IsLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN27@LoadCampai

; 413  : 		EndCampaign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign
$LN27@LoadCampai:

; 414  : 	}
; 415  : 
; 416  : 	if (!IsPreLoaded() && !LoadScenarioStats(gametype, savefile)){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPreLoaded@CampaignClass@@QAEHXZ	; CampaignClass::IsPreLoaded
	test	eax, eax
	jne	SHORT $LN26@LoadCampai
	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gametype$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadScenarioStats
	test	eax, eax
	jne	SHORT $LN26@LoadCampai

; 417  : 		EndCampaign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign

; 418  : 		return 0;

	xor	eax, eax
	jmp	$LN28@LoadCampai
$LN26@LoadCampai:

; 419  : 	}
; 420  : 
; 421  : 	InMainUI = false;	// MN for weather UI

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+68], 0

; 422  : 
; 423  : 	TheCampaign.Suspend();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 424  : 
; 425  : 	//ShiAssert (gameCompressionRatio == 0);
; 426  : 
; 427  : 	StartReadCampFile(gametype, savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gametype$[ebp]
	push	ecx
	call	?StartReadCampFile@@YAXW4FalconGameType@@PAD@Z ; StartReadCampFile
	add	esp, 8

; 428  : 
; 429  : 	gCampDataVersion = ReadVersionNumber(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?ReadVersionNumber@@YAHPAD@Z		; ReadVersionNumber
	add	esp, 4
	mov	DWORD PTR ?gCampDataVersion@@3HA, eax	; gCampDataVersion

; 430  : 
; 431  : #if !NO_LOCKS_ON_INIT_EXIT
; 432  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 433  : #endif
; 434  : 
; 435  : 	switch (gametype)

	mov	eax, DWORD PTR _gametype$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 0
	jle	SHORT $LN24@LoadCampai
	cmp	DWORD PTR tv83[ebp], 2
	jle	SHORT $LN23@LoadCampai
	cmp	DWORD PTR tv83[ebp], 3
	je	SHORT $LN22@LoadCampai
	jmp	SHORT $LN24@LoadCampai
$LN23@LoadCampai:

; 436  : 	{
; 437  : 		case game_InstantAction:
; 438  : 		case game_Dogfight:
; 439  : 		{
; 440  : 			Flags |= CAMP_LIGHT;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx

; 441  : 			DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 442  : 			break;

	jmp	SHORT $LN24@LoadCampai
$LN22@LoadCampai:

; 443  : 		}
; 444  : 		case game_TacticalEngagement:
; 445  : 		{
; 446  : 			Flags |= CAMP_TACTICAL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx

; 447  : 			DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists
$LN24@LoadCampai:

; 448  : 			break;
; 449  : 		}
; 450  : 	}
; 451  : 
; 452  : 	InitCampaign(gametype, NULL);

	push	0
	mov	ecx, DWORD PTR _gametype$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::InitCampaign

; 453  : 
; 454  : 	// Load Savefile Data
; 455  : 	if (!LoadTeams(savefile)){

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?LoadTeams@@YAHPAD@Z			; LoadTeams
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN21@LoadCampai

; 456  : 		AddNewTeams(Neutral);

	push	3
	call	?AddNewTeams@@YAXW4RelType@@@Z		; AddNewTeams
	add	esp, 4
$LN21@LoadCampai:

; 457  : 	}
; 458  : 
; 459  : 	LoadBaseObjectives(Scenario);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 142				; 0000008eH
	push	eax
	call	?LoadBaseObjectives@@YAHPAD@Z		; LoadBaseObjectives
	add	esp, 4

; 460  : 	LoadObjectiveDeltas(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?LoadObjectiveDeltas@@YAHPAD@Z		; LoadObjectiveDeltas
	add	esp, 4

; 461  : 
; 462  : 	if (gClearPilotInfo || !LoadPilotInfo(savefile)){

	cmp	DWORD PTR ?gClearPilotInfo@@3HA, 0	; gClearPilotInfo
	jne	SHORT $LN19@LoadCampai
	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?LoadPilotInfo@@YAHPAD@Z		; LoadPilotInfo
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN20@LoadCampai
$LN19@LoadCampai:

; 463  : 		NewPilotInfo();

	call	?NewPilotInfo@@YAXXZ			; NewPilotInfo
$LN20@LoadCampai:

; 464  : 	}
; 465  : 
; 466  : 	LoadUnits(savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?LoadUnits@@YAHPAD@Z			; LoadUnits
	add	esp, 4

; 467  : 
; 468  : 	if (!LoadCampaignEvents(savefile,Scenario)){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?LoadCampaignEvents@@YAHPAD0@Z		; LoadCampaignEvents
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@LoadCampai

; 469  : 		NewCampaignEvents(Scenario);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 142				; 0000008eH
	push	eax
	call	?NewCampaignEvents@@YAHPAD@Z		; NewCampaignEvents
	add	esp, 4
$LN18@LoadCampai:

; 470  : 	}
; 471  : 
; 472  : 	LoadPersistantList(savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	call	?LoadPersistantList@@YAXPAD@Z		; LoadPersistantList
	add	esp, 4

; 473  : 	ChooseBullseye();

	call	?ChooseBullseye@@YAXXZ			; ChooseBullseye

; 474  : 
; 475  : #ifdef CAMPTOOL
; 476  : 	if (gRenameIds)
; 477  : 	{
; 478  : 		EndReadCampFile ();
; 479  : 		// The new scenario file should be set to our current save file
; 480  : 		sprintf(SaveFile,savefile);
; 481  : 		sprintf(Scenario,savefile);
; 482  : 		SaveAfterRename(savefile, gametype);
; 483  : 		CampLeaveCriticalSection();
; 484  : 		EndCampaign();
; 485  : 		return 0;
; 486  : 	}
; 487  : 	if (CampIDRenameTable[0])
; 488  : 	{
; 489  : 		CampEntity  ent;
; 490  : 		int         i=0,id;
; 491  : 		while (CampIDRenameTable[i])
; 492  : 		{
; 493  : 			ent = GetEntityByCampID(CampIDRenameTable[i]);
; 494  : 			if (ent)
; 495  : 			{
; 496  : 				id = FindUniqueID();
; 497  : 				//            ent->SetCampID(id);
; 498  : 				MonoPrint("ID %d renamed to %d.\n",CampIDRenameTable[i],ent->GetCampID());
; 499  : 			}
; 500  : 			i++;
; 501  : 		}
; 502  : 	}
; 503  : #endif
; 504  : 
; 505  : 	if (gametype != game_InstantAction){

	cmp	DWORD PTR _gametype$[ebp], 1
	je	SHORT $LN17@LoadCampai

; 506  : 		RebuildObjectiveLists();

	call	?RebuildObjectiveLists@@YAHXZ		; RebuildObjectiveLists

; 507  : 		if (gCurrentDataVersion > 67){

	cmp	DWORD PTR ?gCurrentDataVersion@@3HA, 67	; gCurrentDataVersion, 00000043H
	jle	SHORT $LN17@LoadCampai

; 508  : 			LoadPrimaryObjectiveList(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?LoadPrimaryObjectiveList@@YAHPAD@Z	; LoadPrimaryObjectiveList
	add	esp, 4
$LN17@LoadCampai:

; 509  : 		}
; 510  : 	}
; 511  : 
; 512  : 	if (gametype != game_InstantAction){

	cmp	DWORD PTR _gametype$[ebp], 1
	je	SHORT $LN15@LoadCampai

; 513  : 		BuildDivisionData();

	call	?BuildDivisionData@@YAXXZ		; BuildDivisionData
$LN15@LoadCampai:

; 514  : 	}
; 515  : 
; 516  : 	if (!(Flags & CAMP_LIGHT) && !(Flags & CAMP_TACTICAL)){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN14@LoadCampai
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 1024				; 00000400H
	jne	SHORT $LN14@LoadCampai

; 517  : 		// KCK: By telling weathermap that we're instant action, it won't
; 518  : 		// cause a reloading of weather for multiple instant action runs.
; 519  : 		((WeatherClass*)realWeather)->CampLoad(savefile, 0);

	push	0
	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?CampLoad@WeatherClass@@QAEHPADH@Z	; WeatherClass::CampLoad

; 520  : 		StandardRebuild();

	call	?StandardRebuild@@YAXXZ			; StandardRebuild

; 521  : 		lastAirPlan = 0;								// Force an air replan - To get squadron data into the ATM

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0

; 522  : 		ChooseBullseye();

	call	?ChooseBullseye@@YAXXZ			; ChooseBullseye

; 523  : 	}
; 524  : 	else {

	jmp	SHORT $LN13@LoadCampai
$LN14@LoadCampai:

; 525  : 		((WeatherClass*)realWeather)->CampLoad(savefile,gametype);

	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?CampLoad@WeatherClass@@QAEHPADH@Z	; WeatherClass::CampLoad
$LN13@LoadCampai:

; 526  : 	}
; 527  : 
; 528  : 	//	ChillTypes();
; 529  : 	Flags |= CAMP_LOADED;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 530  : 
; 531  : 	// Insert our game into the database - which will broadcast it if we're online
; 532  : 	VuGameEntity *game = gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 533  : 	vuDatabase->/*Quick*/Insert(game);

	mov	edx, DWORD PTR _game$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 534  : 	EndReadCampFile();

	call	?EndReadCampFile@@YAXXZ			; EndReadCampFile

; 535  : 
; 536  : 	// Copy force ratio and history files into working file
; 537  : 	sprintf(from,"%s\\%s.his",FalconCampUserSaveDirectory,savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09KNOCLLMD@?$CFs?2?$CFs?4his?$AA@
	lea	ecx, DWORD PTR _from$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 538  : 	sprintf(to,"%s\\tmp.his",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@OAIFMKOC@?$CFs?2tmp?4his?$AA@
	lea	edx, DWORD PTR _to$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 539  : 	CopyFile(from,to,FALSE);

	push	0
	lea	eax, DWORD PTR _to$[ebp]
	push	eax
	lea	ecx, DWORD PTR _from$[ebp]
	push	ecx
	call	DWORD PTR __imp__CopyFileA@12

; 540  : 	sprintf(from,"%s\\%s.frc",FalconCampUserSaveDirectory,savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09BHIMJCDA@?$CFs?2?$CFs?4frc?$AA@
	lea	eax, DWORD PTR _from$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 541  : 	sprintf(to,"%s\\tmp.frc",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_0L@FKOLODBB@?$CFs?2tmp?4frc?$AA@
	lea	ecx, DWORD PTR _to$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 542  : 	CopyFile(from,to,FALSE);

	push	0
	lea	edx, DWORD PTR _to$[ebp]
	push	edx
	lea	eax, DWORD PTR _from$[ebp]
	push	eax
	call	DWORD PTR __imp__CopyFileA@12

; 543  : 
; 544  : 	// KCK: Added code for tactical engagement missions which were saved with no gun..
; 545  : 	// This should go away once they've been converted..
; 546  : 	if (tactical_is_training()){

	call	?tactical_is_training@@YAHXZ		; tactical_is_training
	test	eax, eax
	je	$LN12@LoadCampai

; 547  : 		VuListIterator	myit(AllAirList);

	mov	ecx, DWORD PTR ?AllAirList@@3PAVVuLinkedList@@A ; AllAirList
	push	ecx
	lea	ecx, DWORD PTR _myit$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 548  : 		Unit			u;
; 549  : 		u = (Unit) myit.GetFirst();

	lea	ecx, DWORD PTR _myit$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _u$5[ebp], eax
$LN11@LoadCampai:

; 550  : 		while (u){

	cmp	DWORD PTR _u$5[ebp], 0
	je	$LN10@LoadCampai

; 551  : 			if (u->IsFlight()){

	mov	edx, DWORD PTR _u$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _u$5[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	test	eax, eax
	je	$LN9@LoadCampai

; 552  : 				LoadoutStruct *load = ((Flight)u)->GetLoadout();

	mov	ecx, DWORD PTR _u$5[ebp]
	call	?GetLoadout@FlightClass@@QAEPAULoadoutStruct@@XZ ; FlightClass::GetLoadout
	mov	DWORD PTR _load$3[ebp], eax

; 553  : 				if (!load){

	cmp	DWORD PTR _load$3[ebp], 0
	jne	SHORT $LN8@LoadCampai

; 554  : 					((Flight)u)->LoadWeapons(NULL, DefaultDamageMods, Air, 2, WEAP_GUN, 0); 

	push	0
	push	16384					; 00004000H
	push	2
	push	5
	push	OFFSET ?DefaultDamageMods@@3PAEA	; DefaultDamageMods
	push	0
	mov	eax, DWORD PTR _u$5[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _u$5[ebp]
	mov	eax, DWORD PTR [edx+712]
	call	eax

; 555  : 				}
; 556  : 				else {

	jmp	SHORT $LN9@LoadCampai
$LN8@LoadCampai:

; 557  : 					if (load[0].WeaponID[0] && !load[0].WeaponCount[0])

	mov	ecx, 48					; 00000030H
	imul	ecx, 0
	add	ecx, DWORD PTR _load$3[ebp]
	mov	edx, 2
	imul	edx, 0
	movsx	eax, WORD PTR [ecx+edx]
	test	eax, eax
	je	SHORT $LN9@LoadCampai
	mov	ecx, 48					; 00000030H
	imul	ecx, 0
	add	ecx, DWORD PTR _load$3[ebp]
	mov	edx, 1
	imul	edx, 0
	movzx	eax, BYTE PTR [ecx+edx+32]
	test	eax, eax
	jne	SHORT $LN9@LoadCampai

; 558  : 						load[0].WeaponCount[0] = 50;

	mov	ecx, 48					; 00000030H
	imul	ecx, 0
	add	ecx, DWORD PTR _load$3[ebp]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+32], 50		; 00000032H
$LN9@LoadCampai:

; 559  : 				}
; 560  : 			}				
; 561  : 			u = (Unit) myit.GetNext();

	lea	ecx, DWORD PTR _myit$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _u$5[ebp], eax

; 562  : 		}

	jmp	$LN11@LoadCampai
$LN10@LoadCampai:

; 563  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myit$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN12@LoadCampai:

; 564  : 
; 565  : 	if (gTacticalFullEdit){

	cmp	DWORD PTR ?gTacticalFullEdit@@3HA, 0	; gTacticalFullEdit
	je	SHORT $LN5@LoadCampai

; 566  : 		// Copy in new country names
; 567  : 		for (int t=0; t<NUM_TEAMS; t++){

	mov	DWORD PTR _t$4[ebp], 0
	jmp	SHORT $LN4@LoadCampai
$LN3@LoadCampai:
	mov	eax, DWORD PTR _t$4[ebp]
	add	eax, 1
	mov	DWORD PTR _t$4[ebp], eax
$LN4@LoadCampai:
	cmp	DWORD PTR _t$4[ebp], 8
	jge	SHORT $LN5@LoadCampai

; 568  : 			if (TeamInfo[t]){

	mov	ecx, DWORD PTR _t$4[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN1@LoadCampai

; 569  : 				TeamInfo[t]->SetName(CountryNameStr[t]);

	mov	edx, DWORD PTR _t$4[ebp]
	imul	edx, 20					; 00000014H
	add	edx, OFFSET ?CountryNameStr@@3PAY0BE@DA	; CountryNameStr
	push	edx
	mov	eax, DWORD PTR _t$4[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetName@TeamClass@@QAEXPAD@Z		; TeamClass::SetName
$LN1@LoadCampai:

; 570  : 			}
; 571  : 		}

	jmp	SHORT $LN3@LoadCampai
$LN5@LoadCampai:

; 572  : 	}
; 573  : 
; 574  : 	gCampDataVersion = gCurrentDataVersion;

	mov	ecx, DWORD PTR ?gCurrentDataVersion@@3HA ; gCurrentDataVersion
	mov	DWORD PTR ?gCampDataVersion@@3HA, ecx	; gCampDataVersion

; 575  : 	TheCampaign.Resume();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 576  : #if !NO_LOCKS_ON_INIT_EXIT
; 577  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 578  : #endif
; 579  : 	return 1;

	mov	eax, 1
$LN28@LoadCampai:

; 580  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z$0:
	lea	ecx, DWORD PTR _myit$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-564]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ENDP ; CampaignClass::LoadCampaign
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_gametype$ = 8						; size = 4
_savefile$ = 12						; size = 4
?NewCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z PROC ; CampaignClass::NewCampaign
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	if (IsLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN1@NewCampaig

; 381  : 		EndCampaign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign
$LN1@NewCampaig:

; 382  : 	}
; 383  : 
; 384  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 385  : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CampaignClass@@QAEXXZ		; CampaignClass::Reset

; 386  : 	InitCampaign(gametype, NULL);

	push	0
	mov	eax, DWORD PTR _gametype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::InitCampaign

; 387  : 
; 388  : 	// Create necessary data entities
; 389  : 	AddNewTeams(Neutral);

	push	3
	call	?AddNewTeams@@YAXW4RelType@@@Z		; AddNewTeams
	add	esp, 4

; 390  : 	NewPilotInfo();

	call	?NewPilotInfo@@YAXXZ			; NewPilotInfo

; 391  : 	strcpy(SaveFile,savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 182				; 000000b6H
	push	edx
	call	_strcpy
	add	esp, 8

; 392  : 	Flags |= CAMP_LOADED;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 393  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 394  : 	TheCampaign.Resume();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 395  : 	return 1;

	mov	eax, 1

; 396  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?NewCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ENDP ; CampaignClass::NewCampaign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearCurrentPreload@CampaignClass@@QAEXXZ PROC		; CampaignClass::ClearCurrentPreload
; _this$ = ecx

; 1655 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1656 : 	if (Flags & CAMP_PRELOADED)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 256				; 00000100H
	je	SHORT $LN2@ClearCurre

; 1657 : 	{
; 1658 : 		// Cleanup from previous preload
; 1659 : 		CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1660 : 		DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 1661 : 		FreeCampMaps();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeCampMaps@CampaignClass@@QAEXXZ	; CampaignClass::FreeCampMaps

; 1662 : 		FreeSquadronData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 1663 : 		ChillTypes();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 1664 : 		CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1665 : 		Flags &= ~CAMP_PRELOADED;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -257				; fffffeffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
$LN2@ClearCurre:

; 1666 : 	}
; 1667 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearCurrentPreload@CampaignClass@@QAEXXZ ENDP		; CampaignClass::ClearCurrentPreload
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T2 = -64						; size = 8
$T3 = -56						; size = 8
$T4 = -48						; size = 8
$T5 = -40						; size = 4
tv187 = -36						; size = 4
$T6 = -32						; size = 4
_camprequest$ = -28					; size = 4
tv150 = -24						; size = 4
_masterSession$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_game$ = 8						; size = 4
?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z PROC ; CampaignClass::RequestScenarioStats
; _this$ = ecx

; 1589 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1590 : 	FalconSessionEntity*		masterSession;
; 1591 : 	FalconRequestCampaignData*	camprequest;
; 1592 : 
; 1593 : 	if (IsLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN11@RequestSce

; 1594 : 		if (game != CurrentGame){

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	push	ecx
	call	??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z ; operator!=<FalconGameEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@RequestSce

; 1595 : 			EndCampaign();						// End any current game if it's different

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign

; 1596 : 		}
; 1597 : 		else {

	jmp	SHORT $LN11@RequestSce
$LN10@RequestSce:

; 1598 : 			// Notify UI of our successfull preload
; 1599 : 			PostMessage(FalconDisplay.appWin,FM_GOT_CAMPAIGN_DATA,CAMP_NEED_PRELOAD,0);

	push	0
	push	16777216				; 01000000H
	push	1039					; 0000040fH
	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	eax
	call	DWORD PTR __imp__PostMessageA@16

; 1600 : 			return 1;							// Already preloaded, return success

	mov	eax, 1
	jmp	$LN12@RequestSce
$LN11@RequestSce:

; 1601 : 		}
; 1602 : 	}
; 1603 : 
; 1604 : 	if (!game){

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN8@RequestSce

; 1605 : 		return 0;

	xor	eax, eax
	jmp	$LN12@RequestSce
$LN8@RequestSce:

; 1606 : 	}
; 1607 : 
; 1608 : 	if (game != CurrentGame){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _game$[ebp]
	push	edx
	call	??$?9VFalconGameEntity@@@@YA_NPBXABV?$VuBin@VFalconGameEntity@@@@@Z ; operator!=<FalconGameEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@RequestSce

; 1609 : 		ClearCurrentPreload();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCurrentPreload@CampaignClass@@QAEXXZ ; CampaignClass::ClearCurrentPreload

; 1610 : 		gCommsMgr->LookAtGame(game);

	mov	ecx, DWORD PTR _game$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame

; 1611 : 		//if (CurrentGame){
; 1612 : 		//	VuDeReferenceEntity(CurrentGame);
; 1613 : 		//}
; 1614 : 		//VuReferenceEntity(game);
; 1615 : 		CurrentGame.reset(game);

	mov	edx, DWORD PTR _game$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::reset
$LN7@RequestSce:

; 1616 : 	}
; 1617 : 
; 1618 : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 1619 : 
; 1620 : 	// Figure out who to send the request to.
; 1621 : 	masterSession = (FalconSessionEntity*) vuDatabase->Find(game->OwnerId());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _masterSession$[ebp], eax

; 1622 : 	if (!masterSession || masterSession == vuLocalSessionEntity)

	cmp	DWORD PTR _masterSession$[ebp], 0
	je	SHORT $LN5@RequestSce
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _masterSession$[ebp]
	push	eax
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@RequestSce
$LN5@RequestSce:

; 1623 : 		return 0;

	xor	eax, eax
	jmp	$LN12@RequestSce
$LN6@RequestSce:

; 1624 : 
; 1625 : 	switch (game->GetGameType ())

	mov	ecx, DWORD PTR _game$[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	DWORD PTR tv150[ebp], eax
	cmp	DWORD PTR tv150[ebp], 0
	jle	SHORT $LN3@RequestSce
	cmp	DWORD PTR tv150[ebp], 2
	jle	SHORT $LN2@RequestSce
	cmp	DWORD PTR tv150[ebp], 3
	je	SHORT $LN1@RequestSce
	jmp	SHORT $LN3@RequestSce
$LN2@RequestSce:

; 1626 : 	{
; 1627 : 			case game_InstantAction:
; 1628 : 			case game_Dogfight:
; 1629 : 					{
; 1630 : 						Flags |= CAMP_LIGHT;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 1631 : 						break;

	jmp	SHORT $LN3@RequestSce
$LN1@RequestSce:

; 1632 : 					}
; 1633 : 
; 1634 : 			case game_TacticalEngagement:
; 1635 : 					{
; 1636 : 						Flags |= CAMP_TACTICAL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 1024				; 00000400H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
$LN3@RequestSce:

; 1637 : 						break;
; 1638 : 					}
; 1639 : 	}
; 1640 : 
; 1641 : 	Flags |= CAMP_NEED_PRELOAD;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 16777216				; 01000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 1642 : 	camprequest = new FalconRequestCampaignData(masterSession->Id(), masterSession);

	push	69					; 00000045H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN14@RequestSce
	push	1
	mov	edx, DWORD PTR _masterSession$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _masterSession$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0FalconRequestCampaignData@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconRequestCampaignData::FalconRequestCampaignData
	mov	DWORD PTR tv187[ebp], eax
	jmp	SHORT $LN15@RequestSce
$LN14@RequestSce:
	mov	DWORD PTR tv187[ebp], 0
$LN15@RequestSce:
	mov	eax, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _camprequest$[ebp], ecx

; 1643 : 	camprequest->dataBlock.who = vuLocalSessionEntity->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _camprequest$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 1644 : 	camprequest->dataBlock.dataNeeded = CAMP_NEED_PRELOAD;

	mov	ecx, DWORD PTR _camprequest$[ebp]
	mov	DWORD PTR [ecx+56], 16777216		; 01000000H

; 1645 : 	FalconSendMessage (camprequest,TRUE);

	push	1
	mov	edx, DWORD PTR _camprequest$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 1646 : 
; 1647 : 	// Let's set up our valid aircraft types
; 1648 : 	ChillTypes();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 1649 : 	ReadValidAircraftTypes("ValidAC");

	push	OFFSET ??_C@_07NBAJNMPO@ValidAC?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadValidAircraftTypes@CampaignClass@@QAEXPAD@Z ; CampaignClass::ReadValidAircraftTypes

; 1650 : 
; 1651 : 	return 1;

	mov	eax, 1
$LN12@RequestSce:

; 1652 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z ENDP ; CampaignClass::RequestScenarioStats
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
_cd$ = -24						; size = 8
$T2 = -16						; size = 4
_size$ = -12						; size = 4
_data_ptr$ = -8						; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_savefile$ = 12						; size = 4
?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z PROC ; CampaignClass::LoadScenarioStats
; _this$ = ecx

; 1530 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1531 : 	unsigned char /*	*data,*/ *data_ptr;
; 1532 : 
; 1533 : 	if (IsLoaded())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN3@LoadScenar

; 1534 : 		return 0;

	xor	eax, eax
	jmp	$LN4@LoadScenar
$LN3@LoadScenar:

; 1535 : 
; 1536 : 	ClearCurrentPreload();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCurrentPreload@CampaignClass@@QAEXXZ ; CampaignClass::ClearCurrentPreload

; 1537 : 
; 1538 : 	StartReadCampFile (type, savefile);

	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	?StartReadCampFile@@YAXW4FalconGameType@@PAD@Z ; StartReadCampFile
	add	esp, 8

; 1539 : 
; 1540 : 	gCampDataVersion = ReadVersionNumber(savefile);

	mov	edx, DWORD PTR _savefile$[ebp]
	push	edx
	call	?ReadVersionNumber@@YAHPAD@Z		; ReadVersionNumber
	add	esp, 4
	mov	DWORD PTR ?gCampDataVersion@@3HA, eax	; gCampDataVersion

; 1541 : 
; 1542 : 	CampaignData cd;
; 1543 : 	cd = ReadCampFile (savefile, "cmp");

	push	OFFSET ??_C@_03JIBIFJIL@cmp?$AA@
	mov	eax, DWORD PTR _savefile$[ebp]
	push	eax
	call	?ReadCampFile@@YA?AUCampaignData@@PAD0@Z ; ReadCampFile
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _cd$[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR _cd$[ebp+4], edx

; 1544 : 
; 1545 : 	if (cd.dataSize == -1)	{

	cmp	DWORD PTR _cd$[ebp], -1
	jne	SHORT $LN2@LoadScenar

; 1546 : 		EndReadCampFile ();

	call	?EndReadCampFile@@YAXXZ			; EndReadCampFile

; 1547 : 		return 0;

	xor	eax, eax
	jmp	$LN4@LoadScenar
$LN2@LoadScenar:

; 1548 : 	}
; 1549 : 
; 1550 : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 1551 : 
; 1552 : 	TheCampaign.Suspend ();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 1553 : 
; 1554 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 1555 : 
; 1556 : 	data_ptr = (unsigned char *)cd.data;

	mov	eax, DWORD PTR _cd$[ebp+4]
	mov	DWORD PTR _data_ptr$[ebp], eax

; 1557 : 	//we ignore this 4 bytes for some reason
; 1558 : 	long size = cd.dataSize - 4;

	mov	ecx, DWORD PTR _cd$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _size$[ebp], ecx

; 1559 : 	data_ptr += 4;

	mov	edx, DWORD PTR _data_ptr$[ebp]
	add	edx, 4
	mov	DWORD PTR _data_ptr$[ebp], edx

; 1560 : 	Decode (&data_ptr, &size);

	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@CampaignClass@@QAEHPAPAEPAJ@Z	; CampaignClass::Decode

; 1561 : 	delete cd.data;

	mov	edx, DWORD PTR _cd$[ebp+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1562 : 
; 1563 : 	Flags |= CAMP_PRELOADED;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 256				; 00000100H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx

; 1564 : 
; 1565 : 	if (type == game_TacticalEngagement)

	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN1@LoadScenar

; 1566 : 		Flags |= CAMP_TACTICAL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx
$LN1@LoadScenar:

; 1567 : 
; 1568 : 	// Let's set up our valid aircraft types
; 1569 : 	ChillTypes();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 1570 : 
; 1571 : 	ReadValidAircraftTypes("ValidAC");

	push	OFFSET ??_C@_07NBAJNMPO@ValidAC?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadValidAircraftTypes@CampaignClass@@QAEXPAD@Z ; CampaignClass::ReadValidAircraftTypes

; 1572 : 
; 1573 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 1574 : 	sprintf(SaveFile,savefile);

	mov	ecx, DWORD PTR _savefile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 182				; 000000b6H
	push	edx
	call	_sprintf
	add	esp, 8

; 1575 : 
; 1576 : 	TheCampaign.Resume ();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 1577 : 
; 1578 : 
; 1579 : 	EndReadCampFile ();

	call	?EndReadCampFile@@YAXXZ			; EndReadCampFile

; 1580 : 
; 1581 : 	gCampDataVersion = gCurrentDataVersion;

	mov	eax, DWORD PTR ?gCurrentDataVersion@@3HA ; gCurrentDataVersion
	mov	DWORD PTR ?gCampDataVersion@@3HA, eax	; gCampDataVersion

; 1582 : 
; 1583 : 	// Notify UI of our successfull preload
; 1584 : 	PostMessage(FalconDisplay.appWin,FM_GOT_CAMPAIGN_DATA,CAMP_NEED_PRELOAD,0);

	push	0
	push	16777216				; 01000000H
	push	1039					; 0000040fH
	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ecx
	call	DWORD PTR __imp__PostMessageA@16

; 1585 : 	return 1;

	mov	eax, 1
$LN4@LoadScenar:

; 1586 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ENDP ; CampaignClass::LoadScenarioStats
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv79 = -4						; size = 4
?IsMaster@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsMaster
; _this$ = ecx

; 1769 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1770 : 	return (FalconLocalGame->IsLocal());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsMaster
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@IsMaster
$LN3@IsMaster:
	mov	DWORD PTR tv79[ebp], 0
$LN4@IsMaster:
	mov	ecx, DWORD PTR tv79[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al

; 1771 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsMaster@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsMaster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsSuspended@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSuspended@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsSuspended, COMDAT
; _this$ = ecx

; 179  : 	int IsSuspended (void)									{ return Flags & CAMP_SUSPENDED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSuspended@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsSuspended
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsPreLoaded@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPreLoaded@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsPreLoaded, COMDAT
; _this$ = ecx

; 178  : 	int IsPreLoaded (void)									{ return Flags & CAMP_PRELOADED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 256				; 00000100H
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPreLoaded@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsPreLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsLoaded@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLoaded@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsLoaded, COMDAT
; _this$ = ecx

; 177  : 	int IsLoaded (void)										{ return Flags & CAMP_LOADED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLoaded@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv137 = -16						; size = 4
tv131 = -12						; size = 4
_still_needed$ = -8					; size = 4
_this$ = -4						; size = 4
?GotJoinData@CampaignClass@@QAEXXZ PROC			; CampaignClass::GotJoinData
; _this$ = ecx

; 756  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 757  : 	ulong still_needed = Flags & CAMP_NEED_MASK;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 535822336				; 1ff00000H
	mov	DWORD PTR _still_needed$[ebp], ecx

; 758  : 
; 759  : 	MonoPrint ("Got Join data! Still needed = %x\n",still_needed);

	mov	edx, DWORD PTR _still_needed$[ebp]
	push	edx
	push	OFFSET ??_C@_0CC@FFMAJKAK@Got?5Join?5data?$CB?5Still?5needed?5?$DN?5?$CFx@
	call	_MonoPrint
	add	esp, 8

; 760  : 
; 761  : 	if (still_needed || IsLoaded())

	cmp	DWORD PTR _still_needed$[ebp], 0
	jne	SHORT $LN2@GotJoinDat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN3@GotJoinDat
$LN2@GotJoinDat:

; 762  : 		return;

	jmp	$LN4@GotJoinDat
$LN3@GotJoinDat:

; 763  : 
; 764  : 	// We're loaded!
; 765  : 	Flags |= CAMP_LOADED;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx

; 766  : 
; 767  : 	gMainThread->JoinGame(gCommsMgr->GetTargetGame ());

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	push	eax
	mov	ecx, DWORD PTR ?gMainThread@@3PAVVuMainThread@@A ; gMainThread
	call	?JoinGame@VuMainThread@@QAEHPAVVuGameEntity@@@Z ; VuMainThread::JoinGame

; 768  : 
; 769  : 	// Notify UI of our success
; 770  : 	if(gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN4@GotJoinDat

; 771  : 		PostMessage(FalconDisplay.appWin,FM_JOIN_SUCCEEDED,!FalconLocalGame->IsLocal(),0);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@GotJoinDat
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN7@GotJoinDat
$LN6@GotJoinDat:
	mov	DWORD PTR tv131[ebp], 0
$LN7@GotJoinDat:
	mov	ecx, DWORD PTR tv131[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@GotJoinDat
	mov	DWORD PTR tv137[ebp], 1
	jmp	SHORT $LN9@GotJoinDat
$LN8@GotJoinDat:
	mov	DWORD PTR tv137[ebp], 0
$LN9@GotJoinDat:
	push	0
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	push	1040					; 00000410H
	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN4@GotJoinDat:

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GotJoinData@CampaignClass@@QAEXXZ ENDP			; CampaignClass::GotJoinData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -24						; size = 4
_player$ = -20						; size = 4
_pos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetPlayerLocation@CampaignClass@@QAEXPAF0@Z PROC	; CampaignClass::GetPlayerLocation
; _this$ = ecx

; 1753 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 	vector		pos;
; 1755 : 	VuEntity	*player;
; 1756 : 
; 1757 : 	player = FalconLocalSession->GetPlayerEntity();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerEntity@FalconSessionEntity@@QBEPAVFalconEntity@@XZ ; FalconSessionEntity::GetPlayerEntity
	mov	DWORD PTR _player$[ebp], eax

; 1758 : 	if (!player)        // not in the cockpit

	cmp	DWORD PTR _player$[ebp], 0
	jne	SHORT $LN1@GetPlayerL

; 1759 : 	{
; 1760 : 		*x = *y = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _y$[ebp]
	mov	WORD PTR [ecx], ax
	xor	edx, edx
	mov	eax, DWORD PTR _x$[ebp]
	mov	WORD PTR [eax], dx

; 1761 : 		return;

	jmp	SHORT $LN2@GetPlayerL
$LN1@GetPlayerL:

; 1762 : 	}
; 1763 : 	pos.x = player->XPos();

	mov	ecx, DWORD PTR _player$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR _pos$[ebp]

; 1764 : 	pos.y = player->YPos();

	mov	ecx, DWORD PTR _player$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR _pos$[ebp+4]

; 1765 : 	ConvertSimToGrid(&pos,x,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	call	?ConvertSimToGrid@@YAXPAUvector@@PAF1@Z	; ConvertSimToGrid
	add	esp, 12					; 0000000cH
$LN2@GetPlayerL:

; 1766 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?GetPlayerLocation@CampaignClass@@QAEXPAF0@Z ENDP	; CampaignClass::GetPlayerLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_scenario$ = 8						; size = 4
?SetScenario@CampaignClass@@QAEHPAD@Z PROC		; CampaignClass::SetScenario
; _this$ = ecx

; 993  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 994  : 	strcpy(Scenario,scenario);

	mov	eax, DWORD PTR _scenario$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 142				; 0000008eH
	push	ecx
	call	_strcpy
	add	esp, 8

; 995  : 	return 1;

	mov	eax, 1

; 996  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetScenario@CampaignClass@@QAEHPAD@Z ENDP		; CampaignClass::SetScenario
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
?SetTheater@CampaignClass@@QAEHPAD@Z PROC		; CampaignClass::SetTheater
; _this$ = ecx

; 987  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : 	strcpy(TheaterName,name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 102				; 00000066H
	push	ecx
	call	_strcpy
	add	esp, 8

; 989  : 	return 1;

	mov	eax, 1

; 990  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetTheater@CampaignClass@@QAEHPAD@Z ENDP		; CampaignClass::SetTheater
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ PROC	; CampaignClass::GetMinutesSinceMidnight
; _this$ = ecx

; 1010 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1011 : 	return TimeOfDay / CampaignMinutes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx

; 1012 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ ENDP	; CampaignClass::GetMinutesSinceMidnight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentDay@CampaignClass@@QAEHXZ PROC		; CampaignClass::GetCurrentDay
; _this$ = ecx

; 1004 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1005 : 	CurrentDay = (int) (CurrentTime / CampaignDay);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	xor	edx, edx
	mov	ecx, 86400000				; 05265c00H
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+90], al

; 1006 : 	return CurrentDay;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+90]

; 1007 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurrentDay@CampaignClass@@QAEHXZ ENDP		; CampaignClass::GetCurrentDay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignDay@CampaignClass@@QAEHXZ PROC		; CampaignClass::GetCampaignDay
; _this$ = ecx

; 999  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1000 : 	return (int)(GetCurrentDay() - DayZero); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentDay@CampaignClass@@QAEHXZ	; CampaignClass::GetCurrentDay
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+92]
	sub	eax, edx

; 1001 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignDay@CampaignClass@@QAEHXZ ENDP		; CampaignClass::GetCampaignDay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCampaignTime@CampaignClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignTime@CampaignClass@@QAEKXZ PROC		; CampaignClass::GetCampaignTime, COMDAT
; _this$ = ecx

; 160  : 	CampaignTime GetCampaignTime (void)						{ return CurrentTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignTime@CampaignClass@@QAEKXZ ENDP		; CampaignClass::GetCampaignTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
$T2 = -120						; size = 4
$T3 = -116						; size = 4
tv223 = -112						; size = 4
$T4 = -108						; size = 4
tv217 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
$T7 = -92						; size = 4
tv75 = -88						; size = 4
$T8 = -84						; size = 4
tv238 = -80						; size = 4
$T9 = -76						; size = 4
tv231 = -72						; size = 4
$T10 = -68						; size = 4
$T11 = -64						; size = 4
$T12 = -60						; size = 4
tv161 = -56						; size = 4
$T13 = -52						; size = 4
_gamename$ = -48					; size = 4
_ebox$14 = -44						; size = 4
_win$15 = -40						; size = 4
tv84 = -36						; size = 4
$T16 = -32						; size = 4
$T17 = -28						; size = 4
_newgame$ = -24						; size = 4
_this$ = -20						; size = 4
tv200 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_gametype$ = 8						; size = 4
_joingame$ = 12						; size = 4
?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z PROC ; CampaignClass::InitCampaign
; _this$ = ecx

; 271  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 272  : 	FalconGameEntity	*newgame;
; 273  : 	_TCHAR				*gamename;
; 274  : 
; 275  : 	if (IsLoaded()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN11@InitCampai

; 276  : 		EndCampaign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign
$LN11@InitCampai:

; 277  : 	}
; 278  : 
; 279  : 	ResetNamespaces();

	call	?ResetNamespaces@@YAXXZ			; ResetNamespaces

; 280  : 	NukeHistoryFiles();

	call	?NukeHistoryFiles@@YAXXZ		; NukeHistoryFiles

; 281  : 	SetCampaignStartupMode();

	call	?SetCampaignStartupMode@@YAXXZ		; SetCampaignStartupMode

; 282  : 
; 283  : 	// Init the mission evaluator
; 284  : 	if (MissionEvaluator) delete MissionEvaluator; // JPO clear out old stuff.

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN10@InitCampai
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	DWORD PTR $T8[ebp], edx
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T17[ebp], eax
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN14@InitCampai
	push	1
	mov	ecx, DWORD PTR $T17[ebp]
	call	??_GMissionEvaluationClass@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN10@InitCampai
$LN14@InitCampai:
	mov	DWORD PTR tv75[ebp], 0
$LN10@InitCampai:

; 285  : 	MissionEvaluator = new MissionEvaluationClass();

	push	320					; 00000140H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T16[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T16[ebp], 0
	je	SHORT $LN16@InitCampai
	mov	ecx, DWORD PTR $T16[ebp]
	call	??0MissionEvaluationClass@@QAE@XZ	; MissionEvaluationClass::MissionEvaluationClass
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN17@InitCampai
$LN16@InitCampai:
	mov	DWORD PTR tv84[ebp], 0
$LN17@InitCampai:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR [edx+324], eax

; 286  : 	MissionEvaluator->PreDogfightEval();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+324]
	call	?PreDogfightEval@MissionEvaluationClass@@QAEXXZ ; MissionEvaluationClass::PreDogfightEval

; 287  : 
; 288  : 	if (joingame && joingame->GetGameType() == gametype){

	cmp	DWORD PTR _joingame$[ebp], 0
	je	SHORT $LN9@InitCampai
	mov	ecx, DWORD PTR _joingame$[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, DWORD PTR _gametype$[ebp]
	jne	SHORT $LN9@InitCampai

; 289  : 		newgame = joingame;

	mov	edx, DWORD PTR _joingame$[ebp]
	mov	DWORD PTR _newgame$[ebp], edx

; 290  : 	}
; 291  : 	else {

	jmp	$LN8@InitCampai
$LN9@InitCampai:

; 292  : 		// Build the default game name
; 293  : 		gamename = LogBook.Callsign();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	mov	DWORD PTR _gamename$[ebp], eax

; 294  : 		// Setup game values
; 295  : 		if (gMainHandler){

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN7@InitCampai

; 296  : 			C_Window *win=gMainHandler->FindWindow(INFO_WIN);

	push	5004					; 0000138cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$15[ebp], eax

; 297  : 			if (win){

	cmp	DWORD PTR _win$15[ebp], 0
	je	SHORT $LN7@InitCampai

; 298  : 				C_EditBox *ebox = (C_EditBox*)win->FindControl(INFO_GAMENAME);

	push	5025					; 000013a1H
	mov	ecx, DWORD PTR _win$15[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$14[ebp], eax

; 299  : 				if (ebox){

	cmp	DWORD PTR _ebox$14[ebp], 0
	je	SHORT $LN7@InitCampai

; 300  : 					gamename = ebox->GetText();

	mov	ecx, DWORD PTR _ebox$14[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	mov	DWORD PTR _gamename$[ebp], eax
$LN7@InitCampai:

; 301  : 				}
; 302  : 			}
; 303  : 		}
; 304  : 		// Create a new FalconGameEntity
; 305  : 		newgame = new FalconGameEntity(FalconLocalSession->Domain(), gamename);

	push	432					; 000001b0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN18@InitCampai
	mov	eax, DWORD PTR _gamename$[ebp]
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0FalconGameEntity@@QAE@KPAD@Z		; FalconGameEntity::FalconGameEntity
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $LN19@InitCampai
$LN18@InitCampai:
	mov	DWORD PTR tv161[ebp], 0
$LN19@InitCampai:
	mov	edx, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR _newgame$[ebp], eax

; 306  : 		newgame->gameType = gametype;

	mov	ecx, DWORD PTR _newgame$[ebp]
	mov	edx, DWORD PTR _gametype$[ebp]
	mov	DWORD PTR [ecx+352], edx

; 307  : 		if (gCommsMgr && gCommsMgr->Online()){

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN4@InitCampai
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN4@InitCampai

; 308  : 			newgame->UpdateRules(gRules[RuleMode].GetRules());

	mov	ecx, DWORD PTR ?RuleMode@@3W4RulesModes@@A ; RuleMode
	imul	ecx, 76					; 0000004cH
	add	ecx, OFFSET ?gRules@@3PAVRulesClass@@A	; gRules
	call	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ; RulesClass::GetRules
	push	eax
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?UpdateRules@FalconGameEntity@@QAEXPAURulesStruct@@@Z ; FalconGameEntity::UpdateRules
$LN4@InitCampai:

; 309  : 		}
; 310  : 		newgame->SetMaxSessions( _MAX_IN_GROUP_ );

	push	256					; 00000100H
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?SetMaxSessions@VuGameEntity@@QAEXG@Z	; VuGameEntity::SetMaxSessions
$LN8@InitCampai:

; 311  : 	}
; 312  : 
; 313  : 	//if (CurrentGame){
; 314  : 	//	VuDeReferenceEntity(CurrentGame);
; 315  : 	//}
; 316  : 	//VuReferenceEntity(newgame);
; 317  : 	CurrentGame.reset(newgame);

	mov	eax, DWORD PTR _newgame$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::reset

; 318  : 
; 319  : 	ShiAssert ( gCommsMgr );
; 320  : 
; 321  : 	// Join the game
; 322  : 	gCommsMgr->LookAtGame(newgame);

	mov	ecx, DWORD PTR _newgame$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame

; 323  : 	gMainThread->JoinGame(newgame);

	mov	edx, DWORD PTR _newgame$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainThread@@3PAVVuMainThread@@A ; gMainThread
	call	?JoinGame@VuMainThread@@QAEHPAVVuGameEntity@@@Z ; VuMainThread::JoinGame

; 324  : 
; 325  : 	// Now init the other needed modules
; 326  : 	((WeatherClass*)realWeather)->Init((gametype == game_InstantAction || gametype == game_Dogfight));

	cmp	DWORD PTR _gametype$[ebp], 1
	je	SHORT $LN20@InitCampai
	cmp	DWORD PTR _gametype$[ebp], 2
	je	SHORT $LN20@InitCampai
	mov	BYTE PTR tv200[ebp], 0
	jmp	SHORT $LN21@InitCampai
$LN20@InitCampai:
	mov	BYTE PTR tv200[ebp], 1
$LN21@InitCampai:
	movzx	eax, BYTE PTR tv200[ebp]
	push	eax
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?Init@WeatherClass@@QAEX_N@Z		; WeatherClass::Init

; 327  : 
; 328  : 	if (!LoadTheater(TheaterName)){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 102				; 00000066H
	push	ecx
	call	?LoadTheater@@YAHPAD@Z			; LoadTheater
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@InitCampai

; 329  : 		// JB 010731 return on fail
; 330  : 		return 0;

	xor	eax, eax
	jmp	$LN12@InitCampai
$LN3@InitCampai:

; 331  : 	}
; 332  : 
; 333  : 	Flags |= CAMP_THEATER_LOADED;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 334  : 
; 335  : 
; 336  : 	InitCampaignLists();

	call	?InitCampaignLists@@YAXXZ		; InitCampaignLists

; 337  : 	TheaterSizeX = Map_Max_X;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR ?Map_Max_X@@3FA		; Map_Max_X
	mov	WORD PTR [edx+86], ax

; 338  : 	TheaterSizeY = Map_Max_Y;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR ?Map_Max_Y@@3FA		; Map_Max_Y
	mov	WORD PTR [ecx+88], dx

; 339  : 	gLastId = 32767;

	mov	eax, 32767				; 00007fffH
	mov	WORD PTR ?gLastId@@3FA, ax		; gLastId

; 340  : 	InitTheaterLists();

	call	?InitTheaterLists@@YAXXZ		; InitTheaterLists

; 341  : 
; 342  : 	if (gTacanList){

	cmp	DWORD PTR ?gTacanList@@3PAVTacanList@@A, 0 ; gTacanList
	je	SHORT $LN2@InitCampai

; 343  : 		delete gTacanList;

	mov	ecx, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T12[ebp], edx
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN22@InitCampai
	push	1
	mov	ecx, DWORD PTR $T12[ebp]
	call	??_GTacanList@@QAEPAXI@Z
	mov	DWORD PTR tv217[ebp], eax
	jmp	SHORT $LN2@InitCampai
$LN22@InitCampai:
	mov	DWORD PTR tv217[ebp], 0
$LN2@InitCampai:

; 344  : 	}
; 345  : 
; 346  : 	if (gNavigationSys){

	cmp	DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A, 0 ; gNavigationSys
	je	SHORT $LN1@InitCampai

; 347  : 		delete gNavigationSys;

	mov	eax, DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A ; gNavigationSys
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T11[ebp], ecx
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN24@InitCampai
	push	1
	mov	ecx, DWORD PTR $T11[ebp]
	call	??_GNavigationSystem@@QAEPAXI@Z
	mov	DWORD PTR tv223[ebp], eax
	jmp	SHORT $LN1@InitCampai
$LN24@InitCampai:
	mov	DWORD PTR tv223[ebp], 0
$LN1@InitCampai:

; 348  : 	}
; 349  : 
; 350  : 	gTacanList = new TacanList;	

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN26@InitCampai
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0TacanList@@QAE@XZ			; TacanList::TacanList
	mov	DWORD PTR tv231[ebp], eax
	jmp	SHORT $LN27@InitCampai
$LN26@InitCampai:
	mov	DWORD PTR tv231[ebp], 0
$LN27@InitCampai:
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?gTacanList@@3PAVTacanList@@A, eax ; gTacanList

; 351  : 	gNavigationSys = new NavigationSystem;

	push	2012					; 000007dcH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN28@InitCampai
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0NavigationSystem@@QAE@XZ		; NavigationSystem::NavigationSystem
	mov	DWORD PTR tv238[ebp], eax
	jmp	SHORT $LN29@InitCampai
$LN28@InitCampai:
	mov	DWORD PTR tv238[ebp], 0
$LN29@InitCampai:
	mov	ecx, DWORD PTR tv238[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gNavigationSys@@3PAVNavigationSystem@@A, edx ; gNavigationSys

; 352  : 
; 353  : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 354  : 
; 355  : #ifdef CAMPTOOL
; 356  : 	// KCK: Windows is so fucked up... I don't even want to start explaining
; 357  : 	// why I have to do this..  sigh.
; 358  : 	CampLeaveCriticalSection();
; 359  : 	if (!(Flags & CAMP_LIGHT)){
; 360  : 		CampaignWindow(hInst, SW_SHOW);
; 361  : 	}
; 362  : 	CampEnterCriticalSection();
; 363  : #endif
; 364  : 	return 1;

	mov	eax, 1
$LN12@InitCampai:

; 365  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$0:
	mov	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$1:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$2:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z$3:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ENDP ; CampaignClass::InitCampaign
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv150 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@CampaignClass@@QAEXXZ PROC			; CampaignClass::Reset
; _this$ = ecx

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 	CurrentTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 214  : 	lastGroundTask = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 215  : 	lastAirTask = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0

; 216  : 	lastNavalTask = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 217  : 	lastGroundPlan = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0

; 218  : 	lastAirPlan = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0

; 219  : 	lastNavalPlan = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 220  : 	lastResupply = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0

; 221  : 	lastMajorEvent = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], 0

; 222  : 	lastRepair = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 223  : 	lastReinforcement = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], 0

; 224  : 	last_victory_time = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], 0

; 225  : 	CurrentDay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+90], 0

; 226  : 	ActiveTeams = NUM_TEAMS;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+91], 8

; 227  : 	DayZero = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+92], 0

; 228  : 	EndgameResult = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+93], 0

; 229  : 	Brief = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+82], cx

; 230  : 	// KCK NOTE: This data should have been cleaned up already, but it might be a good idea to check and clean
; 231  : 	// it up if it hasn't been.
; 232  : 	StandardEventQueue = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+276], 0

; 233  : 	PriorityEventQueue = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+280], 0

; 234  : 	CampMapSize = SamMapSize = RadarMapSize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+292], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+288], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], 0

; 235  : 	TheaterSizeX = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+86], dx

; 236  : 	TheaterSizeY = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+88], cx

; 237  : 	CampMapData = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+296], 0

; 238  : 	SamMapData = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+300], 0

; 239  : 	RadarMapData = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+304], 0

; 240  : 	LastIndexNum = -1;

	or	eax, -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+308], ax

; 241  : 	NumAvailSquadrons = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+310], dx

; 242  : 	BullseyeName = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+97], 0

; 243  : 	BullseyeX = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+98], dx

; 244  : 	BullseyeY = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+100], cx

; 245  : 	CampaignSquadronData = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+312], 0

; 246  : 	NumberOfValidTypes = CAMP_FLY_ANY_AIRCRAFT;

	mov	ecx, 8888				; 000022b8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+316], cx

; 247  : 	ValidAircraftTypes = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0

; 248  : 	sprintf(TheaterName,"default");

	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 102				; 00000066H
	push	ecx
	call	_sprintf
	add	esp, 8

; 249  : 	sprintf(Scenario,"default");

	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 142				; 0000008eH
	push	edx
	call	_sprintf
	add	esp, 8

; 250  : 	sprintf(SaveFile,"default");

	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 182				; 000000b6H
	push	eax
	call	_sprintf
	add	esp, 8

; 251  : 	sprintf(UIName,"Red Herring");

	push	OFFSET ??_C@_0M@OHMBOHGM@Red?5Herring?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 222				; 000000deH
	push	ecx
	call	_sprintf
	add	esp, 8

; 252  : 	if (MissionEvaluator)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+324], 0
	je	SHORT $LN1@Reset

; 253  : 		delete MissionEvaluator;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Reset
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GMissionEvaluationClass@@QAEPAXI@Z
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN1@Reset
$LN4@Reset:
	mov	DWORD PTR tv150[ebp], 0
$LN1@Reset:

; 254  : 	MissionEvaluator = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 255  : 	HotSpot = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+332], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+336], eax

; 256  : 	Tempo = 100;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+340], 100			; 00000064H

; 257  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CampaignClass@@QAEXXZ ENDP			; CampaignClass::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CampaignClass@@QAE@XZ PROC				; CampaignClass::~CampaignClass
; _this$ = ecx

; 189  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CampaignClass@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 190  : 	DisposeEventLists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisposeEventLists@CampaignClass@@QAEXXZ ; CampaignClass::DisposeEventLists

; 191  : 	ChillTypes();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChillTypes@CampaignClass@@QAEXXZ	; CampaignClass::ChillTypes

; 192  : 	FreeSquadronData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeSquadronData@CampaignClass@@QAEXXZ	; CampaignClass::FreeSquadronData

; 193  : 	FreeCampMaps();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeCampMaps@CampaignClass@@QAEXXZ	; CampaignClass::FreeCampMaps

; 194  : 
; 195  : #ifdef USE_SH_POOLS
; 196  : 	// Initialize our Smart Heap pools
; 197  : 	ObjectiveClass::ReleaseStorage();
; 198  : 	BattalionClass::ReleaseStorage();
; 199  : 	BrigadeClass::ReleaseStorage();
; 200  : 	FlightClass::ReleaseStorage();
; 201  : 	SquadronClass::ReleaseStorage();
; 202  : 	PackageClass::ReleaseStorage();
; 203  : 	TaskForceClass::ReleaseStorage();
; 204  : 	runwayQueueStruct::ReleaseStorage();
; 205  : 	//LoadoutStruct::ReleaseStorage();
; 206  : #endif
; 207  : 	CleanupPersistantDatabase();

	call	?CleanupPersistantDatabase@@YAXXZ	; CleanupPersistantDatabase

; 208  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??1?$VuBin@VFalconGameEntity@@@@QAE@XZ	; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CampaignClass@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	jmp	??1?$VuBin@VFalconGameEntity@@@@QAE@XZ	; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>
__ehhandler$??1CampaignClass@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CampaignClass@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CampaignClass@@QAE@XZ ENDP				; CampaignClass::~CampaignClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CampaignClass@@QAE@XZ PROC				; CampaignClass::CampaignClass
; _this$ = ecx

; 144  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CampaignClass@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0?$VuBin@VFalconGameEntity@@@@QAE@PAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::VuBin<FalconGameEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 145  : 	Flags = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0

; 146  : 	Processor = 1;

	mov	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+84], cx

; 147  : 	MissionEvaluator = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 148  : 	vuThread = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+264], 0

; 149  : 	EndgameResult = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+93], 0

; 150  : 	StandardEventQueue = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+276], 0

; 151  : 	PriorityEventQueue = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+280], 0

; 152  : 	TheaterSizeX = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+86], dx

; 153  : 	TheaterSizeY = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+88], cx

; 154  : 	CampMapSize = SamMapSize = RadarMapSize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+288], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], 0

; 155  : 	CampMapData = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+296], 0

; 156  : 	SamMapData = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+300], 0

; 157  : 	RadarMapData = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+304], 0

; 158  : 	LastIndexNum = 0;		

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+308], ax

; 159  : 	NumAvailSquadrons = 0;	

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+310], dx

; 160  : 	CampaignSquadronData = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+312], 0

; 161  : 	NumberOfValidTypes = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+316], dx

; 162  : 	ValidAircraftTypes = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], 0

; 163  : 	BullseyeName = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+97], 0

; 164  : 	BullseyeX = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+98], ax

; 165  : 	BullseyeY = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+100], dx

; 166  : 	CurrentGame.reset();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z ; VuBin<FalconGameEntity>::reset

; 167  : 	last_victory_time = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0

; 168  : 
; 169  : 	CreatorIP=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+344], 0

; 170  : 	CreationTime=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0

; 171  : 	CreationRand=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+352], 0

; 172  : 
; 173  : #ifdef USE_SH_POOLS
; 174  : 	// Initialize our Smart Heap pools
; 175  : 	ObjectiveClass::InitializeStorage();
; 176  : 	BattalionClass::InitializeStorage();
; 177  : 	BrigadeClass::InitializeStorage();
; 178  : 	FlightClass::InitializeStorage();
; 179  : 	SquadronClass::InitializeStorage();
; 180  : 	PackageClass::InitializeStorage();
; 181  : 	TaskForceClass::InitializeStorage();
; 182  : 	runwayQueueStruct::InitializeStorage();
; 183  : 	//LoadoutStruct::InitializeStorage();
; 184  : #endif
; 185  : 	InitPersistantDatabase();

	call	?InitPersistantDatabase@@YAXXZ		; InitPersistantDatabase

; 186  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CampaignClass@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	jmp	??1?$VuBin@VFalconGameEntity@@@@QAE@XZ	; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>
__ehhandler$??0CampaignClass@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CampaignClass@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CampaignClass@@QAE@XZ ENDP				; CampaignClass::CampaignClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?LoopStarter@CampaignClass@@QAEKXZ PROC			; CampaignClass::LoopStarter
; _this$ = ecx

; 368  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 369  : 	DWORD retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0

; 370  : 
; 371  : 	campRunning = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2248], 1

; 372  : 
; 373  : 	ThreadManager::start_campaign_thread (CampaignThread);

	push	OFFSET ?CampaignThread@@YGIXZ		; CampaignThread
	call	?start_campaign_thread@ThreadManager@@SAXP6GIXZ@Z ; ThreadManager::start_campaign_thread
	add	esp, 4

; 374  : 
; 375  : 	return (retval);

	mov	eax, DWORD PTR _retval$[ebp]

; 376  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoopStarter@CampaignClass@@QAEKXZ ENDP			; CampaignClass::LoopStarter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z PROC ; VuBin<FalconGameEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VFalconGameEntity@@@@QAEXPAVFalconGameEntity@@@Z ENDP ; VuBin<FalconGameEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ PROC ; VuBin<FalconGameEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFalconGameEntity@@@@QBEPAVFalconGameEntity@@XZ ENDP ; VuBin<FalconGameEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VFalconGameEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VFalconGameEntity@@@@QAE@XZ PROC		; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VFalconGameEntity@@@@QAE@XZ ENDP		; VuBin<FalconGameEntity>::~VuBin<FalconGameEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VFalconGameEntity@@@@QAE@PAVFalconGameEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VFalconGameEntity@@@@QAE@PAVFalconGameEntity@@@Z PROC ; VuBin<FalconGameEntity>::VuBin<FalconGameEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VFalconGameEntity@@@@QAE@PAVFalconGameEntity@@@Z ENDP ; VuBin<FalconGameEntity>::VuBin<FalconGameEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\rules.h
;	COMDAT ?GetRules@RulesClass@@QAEPAURulesStruct@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ PROC	; RulesClass::GetRules, COMDAT
; _this$ = ecx

; 49   : 		RulesStruct* GetRules(void)								{return (this);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ENDP	; RulesClass::GetRules
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsnccpy
_TEXT	SEGMENT
__Dst$ = 8						; size = 4
__Source$ = 12						; size = 4
__Count$ = 16						; size = 4
__tcsnccpy PROC						; COMDAT

; 1809 : {

	push	ebp
	mov	ebp, esp

; 1810 : #pragma warning(push)
; 1811 : #pragma warning(disable:4996)
; 1812 :     return (char *)_mbsncpy((unsigned char *)_Dst,(const unsigned char *)_Source, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Source$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dst$[ebp]
	push	edx
	call	__mbsncpy
	add	esp, 12					; 0000000cH

; 1813 : #pragma warning(pop)
; 1814 : }

	pop	ebp
	ret	0
__tcsnccpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GAS_DataClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GAS_DataClass@@QAEPAXI@Z PROC			; AS_DataClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AS_DataClass@@QAE@XZ			; AS_DataClass::~AS_DataClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAS_DataClass@@QAEPAXI@Z ENDP			; AS_DataClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\f4thread.h
;	COMDAT ??1F4ScopeLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1F4ScopeLock@@QAE@XZ PROC				; F4ScopeLock::~F4ScopeLock, COMDAT
; _this$ = ecx

; 119  : 	~F4ScopeLock(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  : 		if (mutex != 0){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@F4ScopeLoc

; 121  : 			F4LeaveCriticalSection(mutex);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_F4LeaveCriticalSection
	add	esp, 4
$LN2@F4ScopeLoc:

; 122  : 		}	
; 123  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1F4ScopeLock@@QAE@XZ ENDP				; F4ScopeLock::~F4ScopeLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\f4thread.h
;	COMDAT ??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mutex$ = 8						; size = 4
??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z PROC	; F4ScopeLock::F4ScopeLock, COMDAT
; _this$ = ecx

; 113  : 	F4ScopeLock(F4CSECTIONHANDLE *mutex) : mutex(mutex){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax], ecx

; 114  : 		if (mutex != 0){

	cmp	DWORD PTR _mutex$[ebp], 0
	je	SHORT $LN2@F4ScopeLoc

; 115  : 			F4EnterCriticalSection(mutex);

	mov	edx, DWORD PTR _mutex$[ebp]
	push	edx
	call	_F4EnterCriticalSection
	add	esp, 4
$LN2@F4ScopeLoc:

; 116  : 		}	
; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z ENDP	; F4ScopeLock::F4ScopeLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
?Camp_FreeMemory@@YAXXZ PROC				; Camp_FreeMemory

; 2120 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2121 : 	delete ASD;

	mov	eax, DWORD PTR ?ASD@@3PAVAS_DataClass@@A ; ASD
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Camp_FreeM
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GAS_DataClass@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@Camp_FreeM
$LN3@Camp_FreeM:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Camp_FreeM:

; 2122 : 	ASD = NULL;

	mov	DWORD PTR ?ASD@@3PAVAS_DataClass@@A, 0	; ASD

; 2123 : 	//sfr: Real weather destructor shouldnt be here!!
; 2124 : /*	if (realWeather != NULL){
; 2125 : 		delete realWeather;
; 2126 : 		realWeather = NULL;
; 2127 : 	}
; 2128 : */
; 2129 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Camp_FreeMemory@@YAXXZ ENDP				; Camp_FreeMemory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
?Camp_GetCurrentTime@@YAKXZ PROC			; Camp_GetCurrentTime

; 2115 : {

	push	ebp
	mov	ebp, esp

; 2116 : 	return TheCampaign.GetCampaignTime();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCampaignTime@CampaignClass@@QAEKXZ	; CampaignClass::GetCampaignTime

; 2117 : }

	pop	ebp
	ret	0
?Camp_GetCurrentTime@@YAKXZ ENDP			; Camp_GetCurrentTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_l$2 = -32						; size = 4
tv131 = -28						; size = 4
$T3 = -24						; size = 4
_l$4 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Camp_Exit@@YAXXZ PROC					; Camp_Exit

; 2082 : void Camp_Exit(void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Camp_Exit@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2083 : 	{
; 2084 : 		F4ScopeLock l(campCritical);

	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	lea	ecx, DWORD PTR _l$4[ebp]
	call	??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z ; F4ScopeLock::F4ScopeLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2085 : 		if (TheCampaign.IsLoaded()){

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN3@Camp_Exit

; 2086 : 			TheCampaign.EndCampaign();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign
$LN3@Camp_Exit:

; 2087 : 		}
; 2088 : 		FreeIndex();

	call	?FreeIndex@@YAXXZ			; FreeIndex

; 2089 : 		if (TheCampaign.IsSuspended()){

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsSuspended@CampaignClass@@QAEHXZ	; CampaignClass::IsSuspended
	test	eax, eax
	je	SHORT $LN2@Camp_Exit

; 2090 : 			TheCampaign.Resume();			// Unpause, so we can exit

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume
$LN2@Camp_Exit:

; 2091 : 		}
; 2092 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$4[ebp]
	call	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock

; 2093 : 
; 2094 : 		// sfr: must be outside lock since campaign can be locked, causing deadlock
; 2095 : 		ThreadManager::stop_campaign_thread();

	call	?stop_campaign_thread@ThreadManager@@SAXXZ ; ThreadManager::stop_campaign_thread

; 2096 : 
; 2097 : 	{
; 2098 : 		F4ScopeLock l(campCritical);

	mov	ecx, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	ecx
	lea	ecx, DWORD PTR _l$2[ebp]
	call	??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z ; F4ScopeLock::F4ScopeLock
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2099 : 		if (TheCampaign.vuThread){

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264, 0
	je	SHORT $LN1@Camp_Exit

; 2100 : #if CAP_DISPATCH
; 2101 : 			TheCampaign.vuThread->Update(-1);

	push	-1
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264
	mov	edx, DWORD PTR [eax+4]
	call	edx

; 2102 : #else
; 2103 : 			TheCampaign.vuThread->Update();
; 2104 : #endif
; 2105 : 			delete TheCampaign.vuThread;

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN6@Camp_Exit
	push	1
	mov	edx, DWORD PTR $T5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN7@Camp_Exit
$LN6@Camp_Exit:
	mov	DWORD PTR tv131[ebp], 0
$LN7@Camp_Exit:

; 2106 : 			TheCampaign.vuThread = NULL;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264, 0
$LN1@Camp_Exit:

; 2107 : 		}
; 2108 : 		DisposeBaseLists();

	call	?DisposeBaseLists@@YAXXZ		; DisposeBaseLists

; 2109 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$2[ebp]
	call	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock

; 2110 : 	F4DestroyCriticalSection(campCritical);

	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4DestroyCriticalSection
	add	esp, 4

; 2111 : 	campCritical = NULL; // JB 010108

	mov	DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A, 0 ; campCritical

; 2112 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Camp_Exit@@YAXXZ$0:
	lea	ecx, DWORD PTR _l$4[ebp]
	jmp	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock
__unwindfunclet$?Camp_Exit@@YAXXZ$1:
	lea	ecx, DWORD PTR _l$2[ebp]
	jmp	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock
__ehhandler$?Camp_Exit@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Camp_Exit@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Camp_Exit@@YAXXZ ENDP					; Camp_Exit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\campupd\cmpclass.cpp
_TEXT	SEGMENT
_campFilter$ = -40					; size = 12
_l$2 = -28						; size = 4
$T3 = -24						; size = 4
tv85 = -20						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_processor$ = 8						; size = 4
?Camp_Init@@YAXH@Z PROC					; Camp_Init

; 2059 : void Camp_Init(int processor){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Camp_Init@@YAXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2060 : 	TheCampaign.Flags = 0;

	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64, 0

; 2061 : 	TheCampaign.InMainUI = true;	// we start in the main UI, don't we ? ;)

	mov	BYTE PTR ?TheCampaign@@3VCampaignClass@@A+68, 1

; 2062 : 	TheCampaign.Reset();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Reset@CampaignClass@@QAEXXZ		; CampaignClass::Reset

; 2063 : 	TheCampaign.Processor = processor;

	mov	ax, WORD PTR _processor$[ebp]
	mov	WORD PTR ?TheCampaign@@3VCampaignClass@@A+84, ax

; 2064 : 	campCritical = F4CreateCriticalSection("campCritical");

	push	OFFSET ??_C@_0N@CHFHFGIO@campCritical?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A, eax ; campCritical

; 2065 : #if MF_DONT_PROCESS_DELETE || VU_USE_ENUM_FOR_TYPES
; 2066 : 	FalconMessageFilter	campFilter(FalconEvent::CampaignThread, 0);

	push	0
	push	2
	lea	ecx, DWORD PTR _campFilter$[ebp]
	call	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z ; FalconMessageFilter::FalconMessageFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2067 : #else
; 2068 : 	FalconMessageFilter	campFilter(FalconEvent::CampaignThread, VU_DELETE_EVENT_BITS);
; 2069 : #endif
; 2070 : 	TheCampaign.vuThread = new VuThread(&campFilter, F4_EVENT_QUEUE_SIZE * 4);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@Camp_Init
	push	8000					; 00001f40H
	lea	ecx, DWORD PTR _campFilter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuThread@@QAE@PAVVuMessageFilter@@H@Z ; VuThread::VuThread
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@Camp_Init
$LN3@Camp_Init:
	mov	DWORD PTR tv85[ebp], 0
$LN4@Camp_Init:
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+264, eax

; 2071 : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 2072 : 	TheCampaign.LoopStarter();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?LoopStarter@CampaignClass@@QAEKXZ	; CampaignClass::LoopStarter

; 2073 : 	TheCampaign.Suspend();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 2074 : 	{
; 2075 : 		F4ScopeLock l(campCritical);

	mov	ecx, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	ecx
	lea	ecx, DWORD PTR _l$2[ebp]
	call	??0F4ScopeLock@@QAE@PAUF4CSECTIONHANDLE@@@Z ; F4ScopeLock::F4ScopeLock
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2076 : 		InitBaseLists();

	call	?InitBaseLists@@YAXXZ			; InitBaseLists

; 2077 : 		ReadIndex("Strings");

	push	OFFSET ??_C@_07BJOIOONN@Strings?$AA@
	call	?ReadIndex@@YAXPAD@Z			; ReadIndex
	add	esp, 4

; 2078 : 		LoadPriorityTables();

	call	?LoadPriorityTables@@YAXXZ		; LoadPriorityTables

; 2079 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _l$2[ebp]
	call	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock

; 2080 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _campFilter$[ebp]
	call	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Camp_Init@@YAXH@Z$0:
	lea	ecx, DWORD PTR _campFilter$[ebp]
	jmp	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
__unwindfunclet$?Camp_Init@@YAXH@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Camp_Init@@YAXH@Z$2:
	lea	ecx, DWORD PTR _l$2[ebp]
	jmp	??1F4ScopeLock@@QAE@XZ			; F4ScopeLock::~F4ScopeLock
__ehhandler$?Camp_Init@@YAXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Camp_Init@@YAXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Camp_Init@@YAXH@Z ENDP					; Camp_Init
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\mltrig.h
;	COMDAT ?checked_atan2@@YANNN@Z
_TEXT	SEGMENT
_z$ = -8						; size = 8
_y$ = 8							; size = 8
_x$ = 16						; size = 8
?checked_atan2@@YANNN@Z PROC				; checked_atan2, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 47   : 	double z;
; 48   : 	
; 49   : 	if (x == -0.0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@8000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@checked_at

; 50   : 		x = 0.0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _x$[ebp], xmm0
$LN8@checked_at:

; 51   : 	
; 52   : 	if (x != 0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@checked_at

; 53   : 		z = atan(y / x);

	movsd	xmm0, QWORD PTR _y$[ebp]
	divsd	xmm0, QWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR _z$[ebp]
	jmp	SHORT $LN4@checked_at
$LN7@checked_at:

; 54   : 	else if (y > 0)

	movsd	xmm0, QWORD PTR _y$[ebp]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN5@checked_at

; 55   : 		z = HALF_DPI;

	movsd	xmm0, QWORD PTR __real@3ff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 56   : 	else

	jmp	SHORT $LN4@checked_at
$LN5@checked_at:

; 57   : 		z = -HALF_DPI;

	movsd	xmm0, QWORD PTR __real@bff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN4@checked_at:

; 58   : 
; 59   : 	if (x < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _x$[ebp]
	jbe	SHORT $LN1@checked_at

; 60   : 	{
; 61   : 		if (y < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _y$[ebp]
	jbe	SHORT $LN2@checked_at

; 62   : 			z -= DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	subsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 63   : 		else

	jmp	SHORT $LN1@checked_at
$LN2@checked_at:

; 64   : 			z += DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	addsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN1@checked_at:

; 65   : 	}
; 66   : 
; 67   : 	return z;

	fld	QWORD PTR _z$[ebp]

; 68   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?checked_atan2@@YANNN@Z ENDP				; checked_atan2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SetMaxSessions@VuGameEntity@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_max$ = 8						; size = 2
?SetMaxSessions@VuGameEntity@@QAEXG@Z PROC		; VuGameEntity::SetMaxSessions, COMDAT
; _this$ = ecx

; 407  : 	void SetMaxSessions(ushort max) { sessionMax_ = max; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _max$[ebp]
	mov	WORD PTR [eax+332], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMaxSessions@VuGameEntity@@QAEXG@Z ENDP		; VuGameEntity::SetMaxSessions
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SessionCount@VuGroupEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SessionCount@VuGroupEntity@@QAEHXZ PROC		; VuGroupEntity::SessionCount, COMDAT
; _this$ = ecx

; 341  : 	int SessionCount()    { return sessionCollection_->Count(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+336]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	0
?SessionCount@VuGroupEntity@@QAEHXZ ENDP		; VuGroupEntity::SessionCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Type@VuEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuEntity@@QBEGXZ PROC				; VuEntity::Type, COMDAT
; _this$ = ecx

; 154  : 	ushort Type() const       { return share_.entityType_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuEntity@@QBEGXZ ENDP				; VuEntity::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::OwnerId, COMDAT
; _this$ = ecx

; 152  : 	VU_ID OwnerId() const     { return share_.ownerId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::OwnerId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Domain@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Domain@VuEntity@@QBEEXZ PROC				; VuEntity::Domain, COMDAT
; _this$ = ecx

; 132  : 	VU_BYTE Domain() const { return domain_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?Domain@VuEntity@@QBEEXZ ENDP				; VuEntity::Domain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
