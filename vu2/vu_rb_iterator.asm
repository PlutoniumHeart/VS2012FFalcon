; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\vu2\src\vu_rb_iterator.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
PUBLIC	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
PUBLIC	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::get
PUBLIC	??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z	; VuRBIterator::VuRBIterator
PUBLIC	??1VuRBIterator@@UAE@XZ				; VuRBIterator::~VuRBIterator
PUBLIC	?GetFirst@VuRBIterator@@QAEPAVVuEntity@@XZ	; VuRBIterator::GetFirst
PUBLIC	?GetFirst@VuRBIterator@@QAEPAVVuEntity@@K@Z	; VuRBIterator::GetFirst
PUBLIC	?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ	; VuRBIterator::GetNext
PUBLIC	?CurrEnt@VuRBIterator@@UAEPAVVuEntity@@XZ	; VuRBIterator::CurrEnt
PUBLIC	?Cleanup@VuRBIterator@@UAEHXZ			; VuRBIterator::Cleanup
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
PUBLIC	??_GVuRBIterator@@UAEPAXI@Z			; VuRBIterator::`scalar deleting destructor'
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
PUBLIC	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
PUBLIC	??_7VuRBIterator@@6B@				; VuRBIterator::`vftable'
PUBLIC	??_R4VuRBIterator@@6B@				; VuRBIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuRBIterator@@@8			; VuRBIterator `RTTI Type Descriptor'
PUBLIC	??_R3VuRBIterator@@8				; VuRBIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuRBIterator@@8				; VuRBIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuRBIterator@@8			; VuRBIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuIterator@@8			; VuIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuIterator@@@8				; VuIterator `RTTI Type Descriptor'
PUBLIC	??_R3VuIterator@@8				; VuIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuIterator@@8				; VuIterator::`RTTI Base Class Array'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0VuIterator@@IAE@PAVVuCollection@@@Z:PROC	; VuIterator::VuIterator
EXTRN	??1VuIterator@@MAE@XZ:PROC			; VuIterator::~VuIterator
EXTRN	??_EVuRBIterator@@UAEPAXI@Z:PROC		; VuRBIterator::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R2VuIterator@@8
rdata$r	SEGMENT
??_R2VuIterator@@8 DD FLAT:??_R1A@?0A@EA@VuIterator@@8	; VuIterator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuIterator@@8
rdata$r	SEGMENT
??_R3VuIterator@@8 DD 00H				; VuIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuIterator@@@8
_DATA	SEGMENT
??_R0?AVVuIterator@@@8 DD FLAT:??_7type_info@@6B@	; VuIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuIterator@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuIterator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuIterator@@8 DD FLAT:??_R0?AVVuIterator@@@8 ; VuIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuRBIterator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuRBIterator@@8 DD FLAT:??_R0?AVVuRBIterator@@@8 ; VuRBIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuRBIterator@@8
rdata$r	ENDS
;	COMDAT ??_R2VuRBIterator@@8
rdata$r	SEGMENT
??_R2VuRBIterator@@8 DD FLAT:??_R1A@?0A@EA@VuRBIterator@@8 ; VuRBIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R3VuRBIterator@@8
rdata$r	SEGMENT
??_R3VuRBIterator@@8 DD 00H				; VuRBIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuRBIterator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuRBIterator@@@8
_DATA	SEGMENT
??_R0?AVVuRBIterator@@@8 DD FLAT:??_7type_info@@6B@	; VuRBIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuRBIterator@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuRBIterator@@6B@
rdata$r	SEGMENT
??_R4VuRBIterator@@6B@ DD 00H				; VuRBIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuRBIterator@@@8
	DD	FLAT:??_R3VuRBIterator@@8
rdata$r	ENDS
;	COMDAT ??_7VuRBIterator@@6B@
CONST	SEGMENT
??_7VuRBIterator@@6B@ DD FLAT:??_R4VuRBIterator@@6B@	; VuRBIterator::`vftable'
	DD	FLAT:?CurrEnt@VuRBIterator@@UAEPAVVuEntity@@XZ
	DD	FLAT:?Cleanup@VuRBIterator@@UAEHXZ
	DD	FLAT:??_EVuRBIterator@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z$0
__ehfuncinfo$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >, COMDAT

; 54   : 		static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val)

	push	ebp
	mov	ebp, esp

; 55   : 		{	// extract key from element value
; 56   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 57   : 		}

	pop	ebp
	ret	0
??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuRBIterator@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuRBIterator@@UAEPAXI@Z PROC			; VuRBIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRBIterator@@UAE@XZ			; VuRBIterator::~VuRBIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuRBIterator@@UAEPAXI@Z ENDP			; VuRBIterator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 413  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 414  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
	add	esp, 4

; 408  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*

; 403  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 384  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 385  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 378  : 	_Tree_iterator()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 379  : 		{	// construct with null node
; 380  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=, COMDAT
; _this$ = ecx

; 340  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 342  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==, COMDAT
; _this$ = ecx

; 322  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 323  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 324  : 		if (this->_Getcont() == 0
; 325  : 			|| this->_Getcont() != _Right._Getcont())
; 326  : 			{	// report error
; 327  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 328  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 329  : 			}
; 330  : 
; 331  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 332  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 333  : 			&& this->_Getcont() == _Right._Getcont());
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 337  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++, COMDAT
; _this$ = ecx

; 256  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 258  : 		if (this->_Getcont() == 0
; 259  : 			|| this->_Ptr == 0
; 260  : 			|| _Mytree::_Isnil(this->_Ptr))
; 261  : 			{	// report error
; 262  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 263  : 			_SCL_SECURE_OUT_OF_RANGE;
; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++

; 272  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 273  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		if (this->_Getcont() == 0
; 234  : 			|| this->_Ptr == 0
; 235  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 236  : 			{	// report error
; 237  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 238  : 			_SCL_SECURE_OUT_OF_RANGE;
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 243  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 244  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 245  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 246  : 
; 247  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>

; 215  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 209  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>

; 210  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator
	jmp	$LN5@operator
$LN6@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(
; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 65   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx
	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN2@operator
$LN1@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [ecx], edx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 74   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
_rbt$ = -8						; size = 4
_this$ = -4						; size = 4
?Cleanup@VuRBIterator@@UAEHXZ PROC			; VuRBIterator::Cleanup
; _this$ = ecx

; 66   : VU_ERRCODE VuRBIterator::Cleanup(){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 	VuRedBlackTree *rbt = static_cast<VuRedBlackTree *>(collection_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _rbt$[ebp], ecx

; 68   : 	curr_ = rbt->map_.end();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 69   : 	return VU_SUCCESS;

	mov	eax, 1

; 70   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@VuRBIterator@@UAEHXZ ENDP			; VuRBIterator::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
_rbt$ = -8						; size = 4
_this$ = -4						; size = 4
?CurrEnt@VuRBIterator@@UAEPAVVuEntity@@XZ PROC		; VuRBIterator::CurrEnt
; _this$ = ecx

; 58   : VuEntity *VuRBIterator::CurrEnt(){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	VuRedBlackTree *rbt = static_cast<VuRedBlackTree *>(collection_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _rbt$[ebp], ecx

; 60   : 	if (curr_ == rbt->map_.end()){

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CurrEnt

; 61   : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN2@CurrEnt
$LN1@CurrEnt:

; 62   : 	}
; 63   : 	return curr_->second.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
	add	eax, 4
	mov	ecx, eax
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
$LN2@CurrEnt:

; 64   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CurrEnt@VuRBIterator@@UAEPAVVuEntity@@XZ ENDP		; VuRBIterator::CurrEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
_rbt$ = -12						; size = 4
_ret$ = -8						; size = 4
_this$ = -4						; size = 4
?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ PROC		; VuRBIterator::GetNext
; _this$ = ecx

; 32   : VuEntity *VuRBIterator::GetNext(){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 	VuEntity *ret = NULL;

	mov	DWORD PTR _ret$[ebp], 0

; 34   :     if (!collection_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@GetNext

; 35   :     {
; 36   :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN5@GetNext
$LN4@GetNext:

; 37   :     }
; 38   : 
; 39   :     VuRedBlackTree *rbt = static_cast<VuRedBlackTree *>(collection_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _rbt$[ebp], edx

; 40   :     if (curr_ != rbt->map_.end())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetNext

; 41   :     {
; 42   :         ++curr_;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 43   :     }
; 44   :     else

	jmp	SHORT $LN2@GetNext
$LN3@GetNext:

; 45   :     {
; 46   :         return CurrEnt();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	jmp	SHORT $LN5@GetNext
$LN2@GetNext:

; 47   :     }
; 48   :     ret = CurrEnt();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR _ret$[ebp], eax

; 49   : 
; 50   :     if (ret != NULL && ret->VuState() != VU_MEM_ACTIVE)

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN1@GetNext
	mov	ecx, DWORD PTR _ret$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN1@GetNext

; 51   :     {
; 52   :         return GetNext();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ ; VuRBIterator::GetNext
	jmp	SHORT $LN5@GetNext
$LN1@GetNext:

; 53   :     }
; 54   : 
; 55   :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN5@GetNext:

; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ ENDP		; VuRBIterator::GetNext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_ret$ = -12						; size = 4
_rbt$ = -8						; size = 4
_this$ = -4						; size = 4
_low$ = 8						; size = 4
?GetFirst@VuRBIterator@@QAEPAVVuEntity@@K@Z PROC	; VuRBIterator::GetFirst
; _this$ = ecx

; 21   : VuEntity *VuRBIterator::GetFirst(VU_KEY low){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 22   : 	if (!collection_){ return NULL; }

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@GetFirst
	xor	eax, eax
	jmp	SHORT $LN5@GetFirst
$LN4@GetFirst:

; 23   : 	VuRedBlackTree *rbt = static_cast<VuRedBlackTree *>(collection_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _rbt$[ebp], edx

; 24   : 	curr_ = rbt->map_.lower_bound(low);

	lea	eax, DWORD PTR _low$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 25   : 	if (curr_ == rbt->map_.end()){ return NULL; }

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetFirst
	xor	eax, eax
	jmp	SHORT $LN5@GetFirst
$LN3@GetFirst:

; 26   : 	VuEntity *ret = CurrEnt();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR _ret$[ebp], eax

; 27   : 	if (ret->VuState() != VU_MEM_ACTIVE){ return GetNext(); }

	mov	ecx, DWORD PTR _ret$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN2@GetFirst
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ ; VuRBIterator::GetNext
	jmp	SHORT $LN5@GetFirst
	jmp	SHORT $LN5@GetFirst
$LN2@GetFirst:

; 28   : 	else { return ret; }

	mov	eax, DWORD PTR _ret$[ebp]
$LN5@GetFirst:

; 29   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFirst@VuRBIterator@@QAEPAVVuEntity@@K@Z ENDP	; VuRBIterator::GetFirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
_rbt$ = -12						; size = 4
_ret$ = -8						; size = 4
_this$ = -4						; size = 4
?GetFirst@VuRBIterator@@QAEPAVVuEntity@@XZ PROC		; VuRBIterator::GetFirst
; _this$ = ecx

; 12   : VuEntity *VuRBIterator::GetFirst(){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 13   : 	if (!collection_){ return NULL; }

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@GetFirst
	xor	eax, eax
	jmp	SHORT $LN4@GetFirst
$LN3@GetFirst:

; 14   : 	VuRedBlackTree *rbt = static_cast<VuRedBlackTree *>(collection_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _rbt$[ebp], edx

; 15   : 	curr_ = rbt->map_.begin();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _rbt$[ebp]
	add	ecx, 16					; 00000010H
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 16   : 	VuEntity *ret = CurrEnt();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR _ret$[ebp], eax

; 17   : 	if (ret->VuState() != VU_MEM_ACTIVE){ return GetNext(); }

	mov	ecx, DWORD PTR _ret$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN2@GetFirst
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@VuRBIterator@@QAEPAVVuEntity@@XZ ; VuRBIterator::GetNext
	jmp	SHORT $LN4@GetFirst
	jmp	SHORT $LN4@GetFirst
$LN2@GetFirst:

; 18   : 	else { return ret; }

	mov	eax, DWORD PTR _ret$[ebp]
$LN4@GetFirst:

; 19   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirst@VuRBIterator@@QAEPAVVuEntity@@XZ ENDP		; VuRBIterator::GetFirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuRBIterator@@UAE@XZ PROC				; VuRBIterator::~VuRBIterator
; _this$ = ecx

; 9    : VuRBIterator::~VuRBIterator (){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuRBIterator@@6B@

; 10   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuIterator@@MAE@XZ			; VuIterator::~VuIterator
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuRBIterator@@UAE@XZ ENDP				; VuRBIterator::~VuRBIterator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_iterator.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_coll$ = 8						; size = 4
??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z PROC		; VuRBIterator::VuRBIterator
; _this$ = ecx

; 4    : VuRBIterator::VuRBIterator(VuRedBlackTree* coll) : VuIterator(coll){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuIterator@@IAE@PAVVuCollection@@@Z	; VuIterator::VuIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuRBIterator@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 5    : 	if (coll == NULL){ return; }

	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN1@VuRBIterat
	jmp	SHORT $LN2@VuRBIterat
$LN1@VuRBIterat:

; 6    : 	curr_ = coll->map_.end();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _coll$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN2@VuRBIterat:

; 7    : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuIterator@@MAE@XZ			; VuIterator::~VuIterator
__ehhandler$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuRBIterator@@QAE@PAVVuRedBlackTree@@@Z ENDP		; VuRBIterator::VuRBIterator
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC	; VuBin<VuEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP	; VuBin<VuEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key, COMDAT
; _this$ = ecx

; 2225 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2226 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn

; 2227 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn, COMDAT
; _this$ = ecx

; 2220 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2221 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
	add	esp, 4

; 2222 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root, COMDAT
; _this$ = ecx

; 2138 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2139 : 		return (this->_Parent(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4

; 2140 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost, COMDAT
; _this$ = ecx

; 2108 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2109 : 		return (this->_Left(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4

; 2110 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z
_TEXT	SEGMENT
__Wherenode$ = -16					; size = 4
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
$T1 = -1						; size = 1
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound, COMDAT
; _this$ = ecx

; 2091 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2092 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2093 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:

; 2094 : 
; 2095 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2096 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Lbound

; 2097 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2098 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 2099 : 				{	// _Pnode not less than _Keyval, remember it
; 2100 : 				_Wherenode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 2101 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 2102 : 				}

	jmp	SHORT $LN4@Lbound
$LN3@Lbound:

; 2103 : 
; 2104 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2105 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound, COMDAT
; _this$ = ecx

; 1571 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		return (iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1573 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end, COMDAT
; _this$ = ecx

; 1220 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1221 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1222 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin, COMDAT
; _this$ = ecx

; 1210 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1211 : 		return (iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1212 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ PROC ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp, COMDAT
; _this$ = ecx

; 1011 : 		{	// get ordering predicate

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1012 : 		return (key_compare());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1013 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ENDP ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min, COMDAT

; 619  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Min:

; 620  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min

; 621  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:

; 622  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval, COMDAT

; 607  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 608  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 609  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right, COMDAT

; 602  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp

; 603  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 604  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent, COMDAT

; 597  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp

; 598  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 599  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left, COMDAT

; 592  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp

; 593  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 594  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil, COMDAT

; 587  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp

; 588  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 589  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 179  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 50   : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
END
