; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\vu2\src\vusessn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??9VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator!=
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z		; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	??0VU_ADDRESS@@QAE@KGG@Z			; VU_ADDRESS::VU_ADDRESS
PUBLIC	?SetCollisionCheckTime@VuEntity@@QAEXK@Z	; VuEntity::SetCollisionCheckTime
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?Domain@VuEntity@@QBEEXZ			; VuEntity::Domain
PUBLIC	?IsTransferrable@VuEntity@@QBEEXZ		; VuEntity::IsTransferrable
PUBLIC	?IsGlobal@VuEntity@@QBEEXZ			; VuEntity::IsGlobal
PUBLIC	?IsPersistent@VuEntity@@QBEEXZ			; VuEntity::IsPersistent
PUBLIC	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate
PUBLIC	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::OwnerId
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	?Association@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Association
PUBLIC	?LastCollisionCheckTime@VuEntity@@QBEKXZ	; VuEntity::LastCollisionCheckTime
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ	; VuEntity::EntityDriver
PUBLIC	?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ	; VuEntity::EnqueuedForPositionUpdate
PUBLIC	?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ; VuEntity::SetEnqueuedForPositionUpdate
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z	; std::_Container_base0::_Swap_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ; std::_Iterator_base0::_Getcont
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ ; std::allocator<VuBin<VuEntity> >::allocator<VuBin<VuEntity> >
PUBLIC	?deallocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::allocator<VuBin<VuEntity> >::deallocate
PUBLIC	?allocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ; std::allocator<VuBin<VuEntity> >::allocate
PUBLIC	?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z ; std::allocator<VuBin<VuEntity> >::construct
PUBLIC	?max_size@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QBEIXZ ; std::allocator<VuBin<VuEntity> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAIABV?$allocator@V?$VuBin@VVuEntity@@@@@2@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::max_size
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@SAAAV?$VuBin@VVuEntity@@@@PAU?$_List_node@V?$VuBin@VVuEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<VuEntity> > >::_Myval
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?Type@VuMessage@@QBEEXZ				; VuMessage::Type
PUBLIC	?Sender@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::Sender
PUBLIC	?Destination@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::Destination
PUBLIC	?Flags@VuMessage@@QBEEXZ			; VuMessage::Flags
PUBLIC	?SetPostTime@VuMessage@@QAEXK@Z			; VuMessage::SetPostTime
PUBLIC	?RequestReliableTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestReliableTransmit
PUBLIC	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestOutOfBandTransmit
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z		; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??1?$VuBin@VVuEntity@@@@QAE@XZ			; VuBin<VuEntity>::~VuBin<VuEntity>
PUBLIC	??4?$VuBin@VVuEntity@@@@QAEABV0@ABV0@@Z		; VuBin<VuEntity>::operator=
PUBLIC	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::operator->
PUBLIC	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::get
PUBLIC	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z	; VuBin<VuEntity>::reset
PUBLIC	??_G?$VuBin@VVuEntity@@@@QAEPAXI@Z		; VuBin<VuEntity>::`scalar deleting destructor'
PUBLIC	?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ	; VuCreateEvent::EventData
PUBLIC	??0VuCommsContext@@QAE@XZ			; VuCommsContext::VuCommsContext
PUBLIC	??1VuTargetEntity@@UAE@XZ			; VuTargetEntity::~VuTargetEntity
PUBLIC	?SaveSize@VuTargetEntity@@UAEHXZ		; VuTargetEntity::SaveSize
PUBLIC	?Save@VuTargetEntity@@UAEHPAPAE@Z		; VuTargetEntity::Save
PUBLIC	?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z		; VuTargetEntity::Save
PUBLIC	?IsTarget@VuTargetEntity@@UAEEXZ		; VuTargetEntity::IsTarget
PUBLIC	?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z ; VuTargetEntity::ForwardingTarget
PUBLIC	?FlushOutboundMessageBuffer@VuTargetEntity@@QAEHXZ ; VuTargetEntity::FlushOutboundMessageBuffer
PUBLIC	?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z ; VuTargetEntity::SendMessageA
PUBLIC	?GetMessages@VuTargetEntity@@QAEHXZ		; VuTargetEntity::GetMessages
PUBLIC	?SendQueuedMessage@VuTargetEntity@@QAEHXZ	; VuTargetEntity::SendQueuedMessage
PUBLIC	?SetDirty@VuTargetEntity@@QAEXXZ		; VuTargetEntity::SetDirty
PUBLIC	?ClearDirty@VuTargetEntity@@QAEXXZ		; VuTargetEntity::ClearDirty
PUBLIC	?IsDirty@VuTargetEntity@@QAEHXZ			; VuTargetEntity::IsDirty
PUBLIC	?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetCommsStatus
PUBLIC	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
PUBLIC	?SetCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z ; VuTargetEntity::SetCommsHandle
PUBLIC	?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetReliableCommsStatus
PUBLIC	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
PUBLIC	?SetReliableCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z ; VuTargetEntity::SetReliableCommsHandle
PUBLIC	?BytesPending@VuTargetEntity@@QAEHXZ		; VuTargetEntity::BytesPending
PUBLIC	?MaxPacketSize@VuTargetEntity@@QAEHXZ		; VuTargetEntity::MaxPacketSize
PUBLIC	?MaxMessageSize@VuTargetEntity@@QAEHXZ		; VuTargetEntity::MaxMessageSize
PUBLIC	?MaxReliablePacketSize@VuTargetEntity@@QAEHXZ	; VuTargetEntity::MaxReliablePacketSize
PUBLIC	?MaxReliableMessageSize@VuTargetEntity@@QAEHXZ	; VuTargetEntity::MaxReliableMessageSize
PUBLIC	?CloseComms@VuTargetEntity@@IAEXXZ		; VuTargetEntity::CloseComms
PUBLIC	?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::Flush
PUBLIC	?FlushLow@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::FlushLow
PUBLIC	?SendOutOfBand@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendOutOfBand
PUBLIC	?SendNormalPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendNormalPriority
PUBLIC	?SendLowPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendLowPriority
PUBLIC	??0VuTargetEntity@@IAE@GK@Z			; VuTargetEntity::VuTargetEntity
PUBLIC	??0VuTargetEntity@@IAE@PAPAEPAJ@Z		; VuTargetEntity::VuTargetEntity
PUBLIC	??0VuTargetEntity@@IAE@PAU_iobuf@@@Z		; VuTargetEntity::VuTargetEntity
PUBLIC	?LocalSize@VuTargetEntity@@AAEHXZ		; VuTargetEntity::LocalSize
PUBLIC	??_GVuTargetEntity@@UAEPAXI@Z			; VuTargetEntity::`scalar deleting destructor'
PUBLIC	??0VuGroupNode@@QAE@XZ				; VuGroupNode::VuGroupNode
PUBLIC	??0VuSessionEntity@@QAE@KPBD@Z			; VuSessionEntity::VuSessionEntity
PUBLIC	??0VuSessionEntity@@QAE@PAPAEPAJ@Z		; VuSessionEntity::VuSessionEntity
PUBLIC	??0VuSessionEntity@@QAE@PAU_iobuf@@@Z		; VuSessionEntity::VuSessionEntity
PUBLIC	??1VuSessionEntity@@UAE@XZ			; VuSessionEntity::~VuSessionEntity
PUBLIC	?SaveSize@VuSessionEntity@@UAEHXZ		; VuSessionEntity::SaveSize
PUBLIC	?Save@VuSessionEntity@@UAEHPAPAE@Z		; VuSessionEntity::Save
PUBLIC	?Save@VuSessionEntity@@UAEHPAU_iobuf@@@Z	; VuSessionEntity::Save
PUBLIC	?DomainMask@VuSessionEntity@@QAEKXZ		; VuSessionEntity::DomainMask
PUBLIC	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
PUBLIC	?LoadMetric@VuSessionEntity@@QAEEXZ		; VuSessionEntity::LoadMetric
PUBLIC	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ	; VuSessionEntity::GameId
PUBLIC	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ	; VuSessionEntity::Game
PUBLIC	?KeepaliveTime@VuSessionEntity@@QAEKXZ		; VuSessionEntity::KeepaliveTime
PUBLIC	?SetCallsign@VuSessionEntity@@QAEXPBD@Z		; VuSessionEntity::SetCallsign
PUBLIC	?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ; VuSessionEntity::JoinGroup
PUBLIC	?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ; VuSessionEntity::LeaveGroup
PUBLIC	?LeaveAllGroups@VuSessionEntity@@QAEHXZ		; VuSessionEntity::LeaveAllGroups
PUBLIC	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
PUBLIC	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z	; VuSessionEntity::SetKeepaliveTime
PUBLIC	?IsSession@VuSessionEntity@@UAEEXZ		; VuSessionEntity::IsSession
PUBLIC	?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z	; VuSessionEntity::HasTarget
PUBLIC	?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z	; VuSessionEntity::InTarget
PUBLIC	?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z	; VuSessionEntity::AddGroup
PUBLIC	?RemoveGroup@VuSessionEntity@@QAEHVVU_ID@@@Z	; VuSessionEntity::RemoveGroup
PUBLIC	?PurgeGroups@VuSessionEntity@@QAEHXZ		; VuSessionEntity::PurgeGroups
PUBLIC	?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z ; VuSessionEntity::ForwardingTarget
PUBLIC	?CameraCount@VuSessionEntity@@QBEHXZ		; VuSessionEntity::CameraCount
PUBLIC	?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z ; VuSessionEntity::GetCameraEntity
PUBLIC	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::AttachCamera
PUBLIC	?RemoveCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::RemoveCamera
PUBLIC	?ClearCameras@VuSessionEntity@@QAEX_N@Z		; VuSessionEntity::ClearCameras
PUBLIC	?EnqueuePositionUpdate@VuSessionEntity@@QAEXMPAVVuEntity@@@Z ; VuSessionEntity::EnqueuePositionUpdate
PUBLIC	?EnqueueOobPositionUpdate@VuSessionEntity@@QAEXPAVVuEntity@@@Z ; VuSessionEntity::EnqueueOobPositionUpdate
PUBLIC	?SendBestEnqueuedPositionUpdatesAndClear@VuSessionEntity@@QAEXIK@Z ; VuSessionEntity::SendBestEnqueuedPositionUpdatesAndClear
PUBLIC	?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z	; VuSessionEntity::Handle
PUBLIC	?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuSessionEntity::Handle
PUBLIC	?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z ; VuSessionEntity::Handle
PUBLIC	??0VuSessionEntity@@IAE@GKPAD@Z			; VuSessionEntity::VuSessionEntity
PUBLIC	?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::OpenSession
PUBLIC	?CloseSession@VuSessionEntity@@IAEXXZ		; VuSessionEntity::CloseSession
PUBLIC	?InsertionCallback@VuSessionEntity@@MAEHXZ	; VuSessionEntity::InsertionCallback
PUBLIC	?RemovalCallback@VuSessionEntity@@MAEHXZ	; VuSessionEntity::RemovalCallback
PUBLIC	?LocalSize@VuSessionEntity@@AAEHXZ		; VuSessionEntity::LocalSize
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VVuEntity@@@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
PUBLIC	??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
PUBLIC	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
PUBLIC	?capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::begin
PUBLIC	?end@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::end
PUBLIC	?_Make_iter@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Make_iter
PUBLIC	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
PUBLIC	?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::max_size
PUBLIC	??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@I@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
PUBLIC	??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
PUBLIC	?push_back@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXABV?$VuBin@VVuEntity@@@@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::push_back
PUBLIC	?erase@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::erase
PUBLIC	?clear@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::clear
PUBLIC	?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEII@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBE_NPBV?$VuBin@VVuEntity@@@@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Orphan_range
PUBLIC	??RScoreEntityPairSort@VuSessionEntity@@QBE_NAAU?$pair@MPAVVuEntity@@@std@@0@Z ; VuSessionEntity::ScoreEntityPairSort::operator()
PUBLIC	??0?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> >
PUBLIC	??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
PUBLIC	??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >
PUBLIC	?_Swap_alloc@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Swap_alloc
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
PUBLIC	??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
PUBLIC	?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Freenode
PUBLIC	??1?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
PUBLIC	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
PUBLIC	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
PUBLIC	?push_back@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEX$$QAU?$pair@MPAVVuEntity@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::push_back
PUBLIC	?insert@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@$$QAU?$pair@MPAVVuEntity@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::insert
PUBLIC	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
PUBLIC	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
PUBLIC	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
PUBLIC	?_Unchecked_end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter
PUBLIC	?max_size@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::max_size
PUBLIC	?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
PUBLIC	?front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEAAU?$pair@MPAVVuEntity@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::front
PUBLIC	?pop_front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::pop_front
PUBLIC	?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
PUBLIC	?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@0@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
PUBLIC	?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::clear
PUBLIC	?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::swap
PUBLIC	?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice
PUBLIC	?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice
PUBLIC	?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice
PUBLIC	?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice_same
PUBLIC	?_Tidy@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Tidy
PUBLIC	?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Incsize
PUBLIC	??0?$allocator@PAVVuEntity@@@std@@QAE@XZ	; std::allocator<VuEntity *>::allocator<VuEntity *>
PUBLIC	??0?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<VuEntity *,void *> >::allocator<std::_List_node<VuEntity *,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<VuEntity *,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size
PUBLIC	??0?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<VuEntity *> >::_List_val<std::_List_simple_types<VuEntity *> >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::~_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
PUBLIC	??0?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_List_buy<VuEntity *,std::allocator<VuEntity *> >
PUBLIC	?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Freenode
PUBLIC	??1?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::~_List_buy<VuEntity *,std::allocator<VuEntity *> >
PUBLIC	??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
PUBLIC	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
PUBLIC	?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin
PUBLIC	?end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::end
PUBLIC	?_Unchecked_end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Make_iter
PUBLIC	?max_size@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBEIXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::max_size
PUBLIC	?empty@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE_NXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::empty
PUBLIC	?front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEAAPAVVuEntity@@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::front
PUBLIC	?pop_front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::pop_front
PUBLIC	?push_back@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXABQAVVuEntity@@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::push_back
PUBLIC	?erase@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::erase
PUBLIC	?clear@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::clear
PUBLIC	?_Tidy@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Tidy
PUBLIC	?_Incsize@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXI@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Incsize
PUBLIC	??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
PUBLIC	??1?$VuBin@VVuGameEntity@@@@QAE@XZ		; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
PUBLIC	??7?$VuBin@VVuGameEntity@@@@QBE_NXZ		; VuBin<VuGameEntity>::operator!
PUBLIC	??C?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ; VuBin<VuGameEntity>::operator->
PUBLIC	?get@?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ; VuBin<VuGameEntity>::get
PUBLIC	?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::reset
PUBLIC	??_GVuSessionEntity@@UAEPAXI@Z			; VuSessionEntity::`scalar deleting destructor'
PUBLIC	??0VuGroupEntity@@QAE@PAD@Z			; VuGroupEntity::VuGroupEntity
PUBLIC	??0VuGroupEntity@@QAE@PAPAEPAJ@Z		; VuGroupEntity::VuGroupEntity
PUBLIC	??0VuGroupEntity@@QAE@PAU_iobuf@@@Z		; VuGroupEntity::VuGroupEntity
PUBLIC	??1VuGroupEntity@@UAE@XZ			; VuGroupEntity::~VuGroupEntity
PUBLIC	?SaveSize@VuGroupEntity@@UAEHXZ			; VuGroupEntity::SaveSize
PUBLIC	?Save@VuGroupEntity@@UAEHPAPAE@Z		; VuGroupEntity::Save
PUBLIC	?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z		; VuGroupEntity::Save
PUBLIC	?SessionCount@VuGroupEntity@@QAEHXZ		; VuGroupEntity::SessionCount
PUBLIC	?SetGroupName@VuGroupEntity@@QAEXPAD@Z		; VuGroupEntity::SetGroupName
PUBLIC	?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z	; VuGroupEntity::HasTarget
PUBLIC	?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z		; VuGroupEntity::InTarget
PUBLIC	?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z ; VuGroupEntity::SessionInGroup
PUBLIC	?AddSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z ; VuGroupEntity::AddSession
PUBLIC	?AddSession@VuGroupEntity@@QAEHVVU_ID@@@Z	; VuGroupEntity::AddSession
PUBLIC	?RemoveSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z ; VuGroupEntity::RemoveSession
PUBLIC	?RemoveSession@VuGroupEntity@@QAEHVVU_ID@@@Z	; VuGroupEntity::RemoveSession
PUBLIC	?IsGroup@VuGroupEntity@@UAEEXZ			; VuGroupEntity::IsGroup
PUBLIC	?Handle@VuGroupEntity@@UAEHPAVVuSessionEvent@@@Z ; VuGroupEntity::Handle
PUBLIC	?Handle@VuGroupEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuGroupEntity::Handle
PUBLIC	??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z	; VuGroupEntity::VuGroupEntity
PUBLIC	?Distribute@VuGroupEntity@@MAEHPAVVuSessionEntity@@@Z ; VuGroupEntity::Distribute
PUBLIC	?InsertionCallback@VuGroupEntity@@MAEHXZ	; VuGroupEntity::InsertionCallback
PUBLIC	?RemovalCallback@VuGroupEntity@@MAEHXZ		; VuGroupEntity::RemovalCallback
PUBLIC	?LocalSize@VuGroupEntity@@AAEHXZ		; VuGroupEntity::LocalSize
PUBLIC	??_GVuGroupEntity@@UAEPAXI@Z			; VuGroupEntity::`scalar deleting destructor'
PUBLIC	??0VuGameEntity@@QAE@KPAD@Z			; VuGameEntity::VuGameEntity
PUBLIC	??0VuGameEntity@@QAE@PAPAEPAJ@Z			; VuGameEntity::VuGameEntity
PUBLIC	??0VuGameEntity@@QAE@PAU_iobuf@@@Z		; VuGameEntity::VuGameEntity
PUBLIC	??1VuGameEntity@@UAE@XZ				; VuGameEntity::~VuGameEntity
PUBLIC	?SaveSize@VuGameEntity@@UAEHXZ			; VuGameEntity::SaveSize
PUBLIC	?Save@VuGameEntity@@UAEHPAPAE@Z			; VuGameEntity::Save
PUBLIC	?Save@VuGameEntity@@UAEHPAU_iobuf@@@Z		; VuGameEntity::Save
PUBLIC	?SetGameName@VuGameEntity@@QAEXPAD@Z		; VuGameEntity::SetGameName
PUBLIC	?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z ; VuGameEntity::AddSession
PUBLIC	?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z ; VuGameEntity::RemoveSession
PUBLIC	?IsGame@VuGameEntity@@UAEEXZ			; VuGameEntity::IsGame
PUBLIC	?Handle@VuGameEntity@@UAEHPAVVuSessionEvent@@@Z	; VuGameEntity::Handle
PUBLIC	?Handle@VuGameEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuGameEntity::Handle
PUBLIC	??0VuGameEntity@@IAE@HKPAD0@Z			; VuGameEntity::VuGameEntity
PUBLIC	?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z ; VuGameEntity::Distribute
PUBLIC	?RemovalCallback@VuGameEntity@@MAEHXZ		; VuGameEntity::RemovalCallback
PUBLIC	?LocalSize@VuGameEntity@@AAEHXZ			; VuGameEntity::LocalSize
PUBLIC	??_GVuGameEntity@@UAEPAXI@Z			; VuGameEntity::`scalar deleting destructor'
PUBLIC	??0VuPlayerPoolGame@@QAE@K@Z			; VuPlayerPoolGame::VuPlayerPoolGame
PUBLIC	??1VuPlayerPoolGame@@UAE@XZ			; VuPlayerPoolGame::~VuPlayerPoolGame
PUBLIC	?SaveSize@VuPlayerPoolGame@@UAEHXZ		; VuPlayerPoolGame::SaveSize
PUBLIC	?Save@VuPlayerPoolGame@@UAEHPAPAE@Z		; VuPlayerPoolGame::Save
PUBLIC	?Save@VuPlayerPoolGame@@UAEHPAU_iobuf@@@Z	; VuPlayerPoolGame::Save
PUBLIC	?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z ; VuPlayerPoolGame::Distribute
PUBLIC	??_GVuPlayerPoolGame@@UAEPAXI@Z			; VuPlayerPoolGame::`scalar deleting destructor'
PUBLIC	??0VuGlobalGroup@@QAE@XZ			; VuGlobalGroup::VuGlobalGroup
PUBLIC	??1VuGlobalGroup@@UAE@XZ			; VuGlobalGroup::~VuGlobalGroup
PUBLIC	?SaveSize@VuGlobalGroup@@UAEHXZ			; VuGlobalGroup::SaveSize
PUBLIC	?Save@VuGlobalGroup@@UAEHPAPAE@Z		; VuGlobalGroup::Save
PUBLIC	?Save@VuGlobalGroup@@UAEHPAU_iobuf@@@Z		; VuGlobalGroup::Save
PUBLIC	?HasTarget@VuGlobalGroup@@UAEEVVU_ID@@@Z	; VuGlobalGroup::HasTarget
PUBLIC	?Connected@VuGlobalGroup@@QAEEXZ		; VuGlobalGroup::Connected
PUBLIC	??_GVuGlobalGroup@@UAEPAXI@Z			; VuGlobalGroup::`scalar deleting destructor'
PUBLIC	?SendQueue@VuMainThread@@QBEPAVVuPendingSendQueue@@XZ ; VuMainThread::SendQueue
PUBLIC	??0VuFilter@@IAE@XZ				; VuFilter::VuFilter
PUBLIC	??0VuFilter@@IAE@PAV0@@Z			; VuFilter::VuFilter
PUBLIC	??_GVuFilter@@UAEPAXI@Z				; VuFilter::`scalar deleting destructor'
PUBLIC	??0VuSessionFilter@@QAE@VVU_ID@@@Z		; VuSessionFilter::VuSessionFilter
PUBLIC	??1VuSessionFilter@@UAE@XZ			; VuSessionFilter::~VuSessionFilter
PUBLIC	?Test@VuSessionFilter@@UAEEPAVVuEntity@@@Z	; VuSessionFilter::Test
PUBLIC	?RemoveTest@VuSessionFilter@@UAEEPAVVuEntity@@@Z ; VuSessionFilter::RemoveTest
PUBLIC	?Compare@VuSessionFilter@@UAEHPAVVuEntity@@0@Z	; VuSessionFilter::Compare
PUBLIC	?Notice@VuSessionFilter@@UAEEPAVVuMessage@@@Z	; VuSessionFilter::Notice
PUBLIC	?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ	; VuSessionFilter::Copy
PUBLIC	??0VuSessionFilter@@IAE@PAV0@@Z			; VuSessionFilter::VuSessionFilter
PUBLIC	??_GVuSessionFilter@@UAEPAXI@Z			; VuSessionFilter::`scalar deleting destructor'
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator->
PUBLIC	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z	; VuSessionsIterator::VuSessionsIterator
PUBLIC	??1VuSessionsIterator@@UAE@XZ			; VuSessionsIterator::~VuSessionsIterator
PUBLIC	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
PUBLIC	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
PUBLIC	?CurrEnt@VuSessionsIterator@@UAEPAVVuEntity@@XZ	; VuSessionsIterator::CurrEnt
PUBLIC	?Cleanup@VuSessionsIterator@@UAEHXZ		; VuSessionsIterator::Cleanup
PUBLIC	??_GVuSessionsIterator@@UAEPAXI@Z		; VuSessionsIterator::`scalar deleting destructor'
PUBLIC	?GetFlyState@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetFlyState
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	??0VuPacketHeader@@QAE@VVU_ID@@@Z		; VuPacketHeader::VuPacketHeader
PUBLIC	??0VuPacketHeader@@QAE@XZ			; VuPacketHeader::VuPacketHeader
PUBLIC	??0VuMessageHeader@@QAE@EG@Z			; VuMessageHeader::VuMessageHeader
PUBLIC	??0VuMessageHeader@@QAE@XZ			; VuMessageHeader::VuMessageHeader
PUBLIC	?CAPIType@VuMessageHeader@@QAEHXZ		; VuMessageHeader::CAPIType
PUBLIC	??0GlobalGroupFilter@@QAE@XZ			; GlobalGroupFilter::GlobalGroupFilter
PUBLIC	??1GlobalGroupFilter@@UAE@XZ			; GlobalGroupFilter::~GlobalGroupFilter
PUBLIC	?Test@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z	; GlobalGroupFilter::Test
PUBLIC	?RemoveTest@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z ; GlobalGroupFilter::RemoveTest
PUBLIC	?Compare@GlobalGroupFilter@@UAEHPAVVuEntity@@0@Z ; GlobalGroupFilter::Compare
PUBLIC	?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ	; GlobalGroupFilter::Copy
PUBLIC	??0GlobalGroupFilter@@IAE@PAV0@@Z		; GlobalGroupFilter::GlobalGroupFilter
PUBLIC	??_GGlobalGroupFilter@@UAEPAXI@Z		; GlobalGroupFilter::`scalar deleting destructor'
PUBLIC	?Init@@YAXPAUVuCommsContext@@@Z			; Init
PUBLIC	?Cleanup@@YAXPAUVuCommsContext@@@Z		; Cleanup
PUBLIC	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Compat
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator->
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++
PUBLIC	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
PUBLIC	??$make_pair@AAMAAPAVVuEntity@@@std@@YA?AU?$pair@MPAVVuEntity@@@0@AAMAAPAVVuEntity@@@Z ; std::make_pair<float &,VuEntity * &>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEABQAVVuEntity@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator!=
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
PUBLIC	??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::sort<VuSessionEntity::ScoreEntityPairSort>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
PUBLIC	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_Unchecked
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
PUBLIC	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator--
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEPAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator->
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
PUBLIC	??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::addressof<VuBin<VuEntity> const >
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>
PUBLIC	??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00@Z ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
PUBLIC	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
PUBLIC	??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Insert<std::pair<float,VuEntity *> >
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
PUBLIC	??$_Insert@ABQAVVuEntity@@@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVVuEntity@@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Insert<VuEntity * const &>
PUBLIC	?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z ; std::pointer_traits<VuBin<VuEntity> *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@MPAVVuEntity@@@std@@@std@@SAPAU?$pair@MPAVVuEntity@@@2@AAU32@@Z ; std::pointer_traits<std::pair<float,VuEntity *> *>::pointer_to
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
PUBLIC	??$addressof@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::addressof<VuBin<VuEntity> >
PUBLIC	??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::addressof<std::pair<float,VuEntity *> >
PUBLIC	??$_Umove@PAV?$VuBin@VVuEntity@@@@@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEPAV?$VuBin@VVuEntity@@@@PAV2@00@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Umove<VuBin<VuEntity> *>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >
PUBLIC	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>
PUBLIC	??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z ; std::addressof<VuEntity *>
PUBLIC	??$destroy@PAVVuEntity@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Allocate@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@IPAV1@@Z ; std::_Allocate<VuBin<VuEntity> >
PUBLIC	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Allocate@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<float,VuEntity *>,void *> >
PUBLIC	??$_Allocate@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAU?$_List_node@PAVVuEntity@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<VuEntity *,void *> >
PUBLIC	??$forward@AAM@std@@YAAAMAAM@Z			; std::forward<float &>
PUBLIC	??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z ; std::forward<VuEntity * &>
PUBLIC	??$?0AAMAAPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@AAMAAPAVVuEntity@@PAPAX@Z ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float &,VuEntity * &>
PUBLIC	??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float,VuEntity *>
PUBLIC	??$?0U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@@Z ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> ><std::_List_node<std::pair<float,VuEntity *>,void *> >
PUBLIC	??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>
PUBLIC	??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> &>
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@AAV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
PUBLIC	??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::forward<VuBin<VuEntity> const &>
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@ABV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>
PUBLIC	??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >
PUBLIC	??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
PUBLIC	??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Buynode<std::pair<float,VuEntity *> >
PUBLIC	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
PUBLIC	??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Buynode<VuEntity * const &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
PUBLIC	??$_Uninitialized_move@PAV?$VuBin@VVuEntity@@@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ; std::_Uninitialized_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >
PUBLIC	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>
PUBLIC	??$destroy@PAVVuEntity@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
PUBLIC	??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuEntity *,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
PUBLIC	??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z ; std::operator==<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >,std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
PUBLIC	??$?8U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@U01@@std@@YA_NABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@0@0@Z ; std::operator==<std::_List_node<std::pair<float,VuEntity *>,void *>,std::_List_node<std::pair<float,VuEntity *>,void *> >
PUBLIC	??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$swap@I@std@@YAXAAI0@Z			; std::swap<unsigned int>
PUBLIC	??$emplace@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::emplace<std::pair<float,VuEntity *> >
PUBLIC	??$forward@M@std@@YA$$QAMAAM@Z			; std::forward<float>
PUBLIC	??$forward@PAVVuEntity@@@std@@YA$$QAPAVVuEntity@@AAPAV1@@Z ; std::forward<VuEntity *>
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
PUBLIC	??$move@AAV?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::move<VuBin<VuEntity> &>
PUBLIC	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
PUBLIC	??$construct@PAVVuEntity@@ABQAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
PUBLIC	??$_Val_type@PAV?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@@Z ; std::_Val_type<VuBin<VuEntity> *>
PUBLIC	??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::allocator<VuBin<VuEntity> >,VuBin<VuEntity> >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::pair<float,VuEntity *> >
PUBLIC	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<std::_List_node<VuEntity *,void *> *>
PUBLIC	??$destroy@PAVVuEntity@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<VuEntity *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
PUBLIC	??$swap@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ; std::swap<std::_List_node<std::pair<float,VuEntity *>,void *> *>
PUBLIC	??$_Move@AAI@std@@YA$$QAIAAI@Z			; std::_Move<unsigned int &>
PUBLIC	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
PUBLIC	??$construct@PAVVuEntity@@ABQAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@ABQAV3@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
PUBLIC	??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
PUBLIC	??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
PUBLIC	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
PUBLIC	??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<VuEntity *,VuEntity * const &>
PUBLIC	??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ; std::allocator<VuBin<VuEntity> >::destroy<VuBin<VuEntity> >
PUBLIC	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@$$QAV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
PUBLIC	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	?vuKnownConnectionId@@3VVU_SESSION_ID@@A	; vuKnownConnectionId
PUBLIC	?vuNullSession@@3VVU_SESSION_ID@@A		; vuNullSession
PUBLIC	??_7VuTargetEntity@@6B@				; VuTargetEntity::`vftable'
PUBLIC	??_7VuSessionEntity@@6B@			; VuSessionEntity::`vftable'
PUBLIC	??_7VuGroupEntity@@6B@				; VuGroupEntity::`vftable'
PUBLIC	??_7VuGameEntity@@6B@				; VuGameEntity::`vftable'
PUBLIC	??_7VuPlayerPoolGame@@6B@			; VuPlayerPoolGame::`vftable'
PUBLIC	??_7VuGlobalGroup@@6B@				; VuGlobalGroup::`vftable'
PUBLIC	??_7VuFilter@@6B@				; VuFilter::`vftable'
PUBLIC	??_7VuSessionFilter@@6B@			; VuSessionFilter::`vftable'
PUBLIC	??_7VuSessionsIterator@@6B@			; VuSessionsIterator::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7GlobalGroupFilter@@6B@			; GlobalGroupFilter::`vftable'
PUBLIC	??_C@_09BMFBKPHA@anonymous?$AA@			; `string'
PUBLIC	?globalGrpFilter@@3VGlobalGroupFilter@@A	; globalGrpFilter
PUBLIC	??_C@_08PFJCCOLK@Vu2?5Game?$AA@			; `string'
PUBLIC	??_C@_0M@LFHPJHGA@Player?5Pool?$AA@		; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@ ; `string'
PUBLIC	??_R4VuTargetEntity@@6B@			; VuTargetEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuTargetEntity@@@8			; VuTargetEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuTargetEntity@@8				; VuTargetEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuTargetEntity@@8				; VuTargetEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuTargetEntity@@8			; VuTargetEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuEntity@@8			; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuEntity@@@8				; VuEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuEntity@@8				; VuEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuEntity@@8				; VuEntity::`RTTI Base Class Array'
PUBLIC	??_R4VuSessionEntity@@6B@			; VuSessionEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuSessionEntity@@@8			; VuSessionEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuSessionEntity@@8				; VuSessionEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuSessionEntity@@8				; VuSessionEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuSessionEntity@@8		; VuSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuGroupEntity@@6B@				; VuGroupEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGroupEntity@@@8			; VuGroupEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuGroupEntity@@8				; VuGroupEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGroupEntity@@8				; VuGroupEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGroupEntity@@8			; VuGroupEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuGlobalGroup@@6B@				; VuGlobalGroup::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGlobalGroup@@@8			; VuGlobalGroup `RTTI Type Descriptor'
PUBLIC	??_R3VuGlobalGroup@@8				; VuGlobalGroup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGlobalGroup@@8				; VuGlobalGroup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGlobalGroup@@8			; VuGlobalGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuGameEntity@@6B@				; VuGameEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGameEntity@@@8			; VuGameEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuGameEntity@@8				; VuGameEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGameEntity@@8				; VuGameEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGameEntity@@8			; VuGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuPlayerPoolGame@@6B@			; VuPlayerPoolGame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuPlayerPoolGame@@@8			; VuPlayerPoolGame `RTTI Type Descriptor'
PUBLIC	??_R3VuPlayerPoolGame@@8			; VuPlayerPoolGame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuPlayerPoolGame@@8			; VuPlayerPoolGame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuPlayerPoolGame@@8		; VuPlayerPoolGame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuFilter@@6B@				; VuFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuFilter@@@8				; VuFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuFilter@@8				; VuFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuFilter@@8				; VuFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuFilter@@8			; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuSessionFilter@@6B@			; VuSessionFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuSessionFilter@@@8			; VuSessionFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuSessionFilter@@8				; VuSessionFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuSessionFilter@@8				; VuSessionFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuSessionFilter@@8		; VuSessionFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuSessionsIterator@@6B@			; VuSessionsIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuSessionsIterator@@@8			; VuSessionsIterator `RTTI Type Descriptor'
PUBLIC	??_R3VuSessionsIterator@@8			; VuSessionsIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuSessionsIterator@@8			; VuSessionsIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuSessionsIterator@@8		; VuSessionsIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuListIterator@@8			; VuListIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuListIterator@@@8			; VuListIterator `RTTI Type Descriptor'
PUBLIC	??_R3VuListIterator@@8				; VuListIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuListIterator@@8				; VuListIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuIterator@@8			; VuIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuIterator@@@8				; VuIterator `RTTI Type Descriptor'
PUBLIC	??_R3VuIterator@@8				; VuIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuIterator@@8				; VuIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GlobalGroupFilter@@6B@			; GlobalGroupFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGlobalGroupFilter@@@8			; GlobalGroupFilter `RTTI Type Descriptor'
PUBLIC	??_R3GlobalGroupFilter@@8			; GlobalGroupFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GlobalGroupFilter@@8			; GlobalGroupFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GlobalGroupFilter@@8		; GlobalGroupFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_fread:PROC
EXTRN	_fwrite:PROC
EXTRN	_sprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_strncpy:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_ComAPIGetMyRecvPort:PROC
EXTRN	_ComAPIGetMyReliableRecvPort:PROC
EXTRN	_ComAPIClose:PROC
EXTRN	_ComAPISendOOB:PROC
EXTRN	_ComAPISend:PROC
EXTRN	_ComAPIGet:PROC
EXTRN	_ComAPIHostIDGet:PROC
EXTRN	_ComAPISendBufferGet:PROC
EXTRN	_ComAPIRecvBufferGet:PROC
EXTRN	_ComAPIQuery:PROC
EXTRN	_ComAPIGetTimeStamp:PROC
EXTRN	?Decode@VU_ADDRESS@@QAEXPAPAEPAJ@Z:PROC		; VU_ADDRESS::Decode
EXTRN	?Encode@VU_ADDRESS@@QAEHPAPAE@Z:PROC		; VU_ADDRESS::Encode
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	??0VuEntity@@QAE@GK@Z:PROC			; VuEntity::VuEntity
EXTRN	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z:PROC	; VuEntity::SetOwnerId
EXTRN	?SetEntityType@VuEntity@@QAEXG@Z:PROC		; VuEntity::SetEntityType
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z:PROC ; VuEntity::CustomCollisionCheck
EXTRN	?TerrainCollisionCheck@VuEntity@@UAEEXZ:PROC	; VuEntity::TerrainCollisionCheck
EXTRN	?IsSession@VuEntity@@UAEEXZ:PROC		; VuEntity::IsSession
EXTRN	?IsGroup@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGroup
EXTRN	?IsGame@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGame
EXTRN	?IsCamera@VuEntity@@UBEEXZ:PROC			; VuEntity::IsCamera
EXTRN	?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuEvent@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuFullUpdateEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuSessionEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	??1VuEntity@@MAE@XZ:PROC			; VuEntity::~VuEntity
EXTRN	?InsertionCallback@VuEntity@@MAEHXZ:PROC	; VuEntity::InsertionCallback
EXTRN	?RemovalCallback@VuEntity@@MAEHXZ:PROC		; VuEntity::RemovalCallback
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Register@VuCollection@@QAEXXZ:PROC		; VuCollection::Register
EXTRN	?Unregister@VuCollection@@QAEXXZ:PROC		; VuCollection::Unregister
EXTRN	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Insert
EXTRN	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Remove
EXTRN	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z:PROC	; VuCollection::Find
EXTRN	??0VuOrderedList@@QAE@PAVVuFilter@@@Z:PROC	; VuOrderedList::VuOrderedList
EXTRN	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Insert
EXTRN	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Remove
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?VuxSessionConnect@@YAHPAVVuSessionEntity@@@Z:PROC ; VuxSessionConnect
EXTRN	?VuxSessionDisconnect@@YAXPAVVuSessionEntity@@@Z:PROC ; VuxSessionDisconnect
EXTRN	?VuxGroupConnect@@YAHPAVVuGroupEntity@@@Z:PROC	; VuxGroupConnect
EXTRN	?VuxGroupDisconnect@@YAXPAVVuGroupEntity@@@Z:PROC ; VuxGroupDisconnect
EXTRN	?VuxGroupAddSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z:PROC ; VuxGroupAddSession
EXTRN	?VuxGroupRemoveSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z:PROC ; VuxGroupRemoveSession
EXTRN	?VuxGetId@@YAKXZ:PROC				; VuxGetId
EXTRN	?VuEnterCriticalSection@@YAXXZ:PROC		; VuEnterCriticalSection
EXTRN	?VuExitCriticalSection@@YAXXZ:PROC		; VuExitCriticalSection
EXTRN	?VuxCreateMessage@@YAPAVVuMessage@@EVVU_ID@@0@Z:PROC ; VuxCreateMessage
EXTRN	?Read@VuMessage@@IAEHPAPAEPAJ@Z:PROC		; VuMessage::Read
EXTRN	?Write@VuMessage@@IAEHPAPAE@Z:PROC		; VuMessage::Write
EXTRN	??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z:PROC ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
EXTRN	??0VuErrorMessage@@QAE@VVU_ID@@0@Z:PROC		; VuErrorMessage::VuErrorMessage
EXTRN	??0VuGetRequest@@QAE@VVU_ID@@0@Z:PROC		; VuGetRequest::VuGetRequest
EXTRN	??0VuPushRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z:PROC ; VuPushRequest::VuPushRequest
EXTRN	??0VuPushRequest@@QAE@VVU_ID@@0@Z:PROC		; VuPushRequest::VuPushRequest
EXTRN	??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z:PROC ; VuPullRequest::VuPullRequest
EXTRN	??0VuPullRequest@@QAE@VVU_ID@@0@Z:PROC		; VuPullRequest::VuPullRequest
EXTRN	??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:PROC ; VuCreateEvent::VuCreateEvent
EXTRN	??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z:PROC ; VuCreateEvent::VuCreateEvent
EXTRN	??0VuManageEvent@@QAE@VVU_ID@@0@Z:PROC		; VuManageEvent::VuManageEvent
EXTRN	??0VuDeleteEvent@@QAE@VVU_ID@@0@Z:PROC		; VuDeleteEvent::VuDeleteEvent
EXTRN	??0VuTransferEvent@@QAE@VVU_ID@@0@Z:PROC	; VuTransferEvent::VuTransferEvent
EXTRN	??0VuPositionUpdateEvent@@QAE@VVU_ID@@0@Z:PROC	; VuPositionUpdateEvent::VuPositionUpdateEvent
EXTRN	??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z:PROC ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
EXTRN	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:PROC ; VuFullUpdateEvent::VuFullUpdateEvent
EXTRN	??0VuFullUpdateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z:PROC ; VuFullUpdateEvent::VuFullUpdateEvent
EXTRN	??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z:PROC	; VuEntityCollisionEvent::VuEntityCollisionEvent
EXTRN	??0VuGroundCollisionEvent@@QAE@VVU_ID@@0@Z:PROC	; VuGroundCollisionEvent::VuGroundCollisionEvent
EXTRN	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z:PROC ; VuSessionEvent::VuSessionEvent
EXTRN	??0VuSessionEvent@@QAE@VVU_ID@@0@Z:PROC		; VuSessionEvent::VuSessionEvent
EXTRN	??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z:PROC ; VuTimerEvent::VuTimerEvent
EXTRN	??0VuShutdownEvent@@QAE@E@Z:PROC		; VuShutdownEvent::VuShutdownEvent
EXTRN	??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; VuTimingMessage::VuTimingMessage
EXTRN	??0VuTimingMessage@@QAE@VVU_ID@@0@Z:PROC	; VuTimingMessage::VuTimingMessage
EXTRN	?GeneratePositionUpdate@VuMaster@@QAEH_N0KPAVVuSessionEntity@@@Z:PROC ; VuMaster::GeneratePositionUpdate
EXTRN	??_EVuTargetEntity@@UAEPAXI@Z:PROC		; VuTargetEntity::`vector deleting destructor'
EXTRN	??_EVuSessionEntity@@UAEPAXI@Z:PROC		; VuSessionEntity::`vector deleting destructor'
EXTRN	??_EVuGroupEntity@@UAEPAXI@Z:PROC		; VuGroupEntity::`vector deleting destructor'
EXTRN	??_EVuGameEntity@@UAEPAXI@Z:PROC		; VuGameEntity::`vector deleting destructor'
EXTRN	??_EVuPlayerPoolGame@@UAEPAXI@Z:PROC		; VuPlayerPoolGame::`vector deleting destructor'
EXTRN	??_EVuGlobalGroup@@UAEPAXI@Z:PROC		; VuGlobalGroup::`vector deleting destructor'
EXTRN	?FlushOutboundMessages@VuMainThread@@QAEXXZ:PROC ; VuMainThread::FlushOutboundMessages
EXTRN	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z:PROC ; VuMessageQueue::PostVuMessage
EXTRN	?FlushAllQueues@VuMessageQueue@@SAXXZ:PROC	; VuMessageQueue::FlushAllQueues
EXTRN	?RepostMessage@VuMessageQueue@@SAXPAVVuMessage@@H@Z:PROC ; VuMessageQueue::RepostMessage
EXTRN	?RemoveTarget@VuPendingSendQueue@@QAEXPAVVuTargetEntity@@@Z:PROC ; VuPendingSendQueue::RemoveTarget
EXTRN	??1VuFilter@@UAE@XZ:PROC			; VuFilter::~VuFilter
EXTRN	?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z:PROC	; VuFilter::RemoveTest
EXTRN	?Notice@VuFilter@@UAEEPAVVuMessage@@@Z:PROC	; VuFilter::Notice
EXTRN	??_EVuFilter@@UAEPAXI@Z:PROC			; VuFilter::`vector deleting destructor'
EXTRN	??_EVuSessionFilter@@UAEPAXI@Z:PROC		; VuSessionFilter::`vector deleting destructor'
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	?Cleanup@VuListIterator@@UAEHXZ:PROC		; VuListIterator::Cleanup
EXTRN	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ:PROC ; VuHashIterator::GetFirst
EXTRN	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ:PROC ; VuHashIterator::GetNext
EXTRN	??0VuDatabaseIterator@@QAE@XZ:PROC		; VuDatabaseIterator::VuDatabaseIterator
EXTRN	??1VuDatabaseIterator@@UAE@XZ:PROC		; VuDatabaseIterator::~VuDatabaseIterator
EXTRN	??_EVuSessionsIterator@@UAEPAXI@Z:PROC		; VuSessionsIterator::`vector deleting destructor'
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	??_EGlobalGroupFilter@@UAEPAXI@Z:PROC		; GlobalGroupFilter::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuGlobalGroup@@3PAVVuGlobalGroup@@A:DWORD	; vuGlobalGroup
EXTRN	?vuPlayerPoolGroup@@3PAVVuGameEntity@@A:DWORD	; vuPlayerPoolGroup
EXTRN	?vuGameList@@3PAVVuLinkedList@@A:DWORD		; vuGameList
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?vuNullId@@3VVU_ID@@A:QWORD			; vuNullId
EXTRN	?vuxWorldName@@3PADA:DWORD			; vuxWorldName
EXTRN	?vuxGameTime@@3KA:DWORD				; vuxGameTime
EXTRN	?vuxRealTime@@3KA:DWORD				; vuxRealTime
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?vuMainThread@@3PAVVuMainThread@@A:DWORD	; vuMainThread
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?vuKnownConnectionId@@3VVU_SESSION_ID@@A DD 01H DUP (?)	; vuKnownConnectionId
?vuNullSession@@3VVU_SESSION_ID@@A DD 01H DUP (?)	; vuNullSession
_BSS	ENDS
;	COMDAT ?last_full_update@?1??MessagePoll@@YAHPAUVuCommsContext@@@Z@4HA
_BSS	SEGMENT
?last_full_update@?1??MessagePoll@@YAHPAUVuCommsContext@@@Z@4HA DD 01H DUP (?) ; `MessagePoll'::`2'::last_full_update
_BSS	ENDS
_BSS	SEGMENT
?globalGrpFilter@@3VGlobalGroupFilter@@A DD 01H DUP (?)	; globalGrpFilter
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@GlobalGroupFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GlobalGroupFilter@@8 DD FLAT:??_R0?AVGlobalGroupFilter@@@8 ; GlobalGroupFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GlobalGroupFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2GlobalGroupFilter@@8
rdata$r	SEGMENT
??_R2GlobalGroupFilter@@8 DD FLAT:??_R1A@?0A@EA@GlobalGroupFilter@@8 ; GlobalGroupFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3GlobalGroupFilter@@8
rdata$r	SEGMENT
??_R3GlobalGroupFilter@@8 DD 00H			; GlobalGroupFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GlobalGroupFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGlobalGroupFilter@@@8
_DATA	SEGMENT
??_R0?AVGlobalGroupFilter@@@8 DD FLAT:??_7type_info@@6B@ ; GlobalGroupFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGlobalGroupFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GlobalGroupFilter@@6B@
rdata$r	SEGMENT
??_R4GlobalGroupFilter@@6B@ DD 00H			; GlobalGroupFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGlobalGroupFilter@@@8
	DD	FLAT:??_R3GlobalGroupFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2VuIterator@@8
rdata$r	SEGMENT
??_R2VuIterator@@8 DD FLAT:??_R1A@?0A@EA@VuIterator@@8	; VuIterator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuIterator@@8
rdata$r	SEGMENT
??_R3VuIterator@@8 DD 00H				; VuIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuIterator@@@8
_DATA	SEGMENT
??_R0?AVVuIterator@@@8 DD FLAT:??_7type_info@@6B@	; VuIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuIterator@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuIterator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuIterator@@8 DD FLAT:??_R0?AVVuIterator@@@8 ; VuIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R2VuListIterator@@8
rdata$r	SEGMENT
??_R2VuListIterator@@8 DD FLAT:??_R1A@?0A@EA@VuListIterator@@8 ; VuListIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R3VuListIterator@@8
rdata$r	SEGMENT
??_R3VuListIterator@@8 DD 00H				; VuListIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuListIterator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuListIterator@@@8
_DATA	SEGMENT
??_R0?AVVuListIterator@@@8 DD FLAT:??_7type_info@@6B@	; VuListIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuListIterator@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuListIterator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuListIterator@@8 DD FLAT:??_R0?AVVuListIterator@@@8 ; VuListIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuListIterator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuSessionsIterator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuSessionsIterator@@8 DD FLAT:??_R0?AVVuSessionsIterator@@@8 ; VuSessionsIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuSessionsIterator@@8
rdata$r	ENDS
;	COMDAT ??_R2VuSessionsIterator@@8
rdata$r	SEGMENT
??_R2VuSessionsIterator@@8 DD FLAT:??_R1A@?0A@EA@VuSessionsIterator@@8 ; VuSessionsIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuListIterator@@8
	DD	FLAT:??_R1A@?0A@EA@VuIterator@@8
rdata$r	ENDS
;	COMDAT ??_R3VuSessionsIterator@@8
rdata$r	SEGMENT
??_R3VuSessionsIterator@@8 DD 00H			; VuSessionsIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuSessionsIterator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuSessionsIterator@@@8
_DATA	SEGMENT
??_R0?AVVuSessionsIterator@@@8 DD FLAT:??_7type_info@@6B@ ; VuSessionsIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuSessionsIterator@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuSessionsIterator@@6B@
rdata$r	SEGMENT
??_R4VuSessionsIterator@@6B@ DD 00H			; VuSessionsIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuSessionsIterator@@@8
	DD	FLAT:??_R3VuSessionsIterator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuSessionFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuSessionFilter@@8 DD FLAT:??_R0?AVVuSessionFilter@@@8 ; VuSessionFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuSessionFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuSessionFilter@@8
rdata$r	SEGMENT
??_R2VuSessionFilter@@8 DD FLAT:??_R1A@?0A@EA@VuSessionFilter@@8 ; VuSessionFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3VuSessionFilter@@8
rdata$r	SEGMENT
??_R3VuSessionFilter@@8 DD 00H				; VuSessionFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuSessionFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuSessionFilter@@@8
_DATA	SEGMENT
??_R0?AVVuSessionFilter@@@8 DD FLAT:??_7type_info@@6B@	; VuSessionFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuSessionFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuSessionFilter@@6B@
rdata$r	SEGMENT
??_R4VuSessionFilter@@6B@ DD 00H			; VuSessionFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuSessionFilter@@@8
	DD	FLAT:??_R3VuSessionFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuFilter@@8 DD FLAT:??_R0?AVVuFilter@@@8	; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuFilter@@8
rdata$r	SEGMENT
??_R2VuFilter@@8 DD FLAT:??_R1A@?0A@EA@VuFilter@@8	; VuFilter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuFilter@@8
rdata$r	SEGMENT
??_R3VuFilter@@8 DD 00H					; VuFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuFilter@@@8
_DATA	SEGMENT
??_R0?AVVuFilter@@@8 DD FLAT:??_7type_info@@6B@		; VuFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuFilter@@6B@
rdata$r	SEGMENT
??_R4VuFilter@@6B@ DD 00H				; VuFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuFilter@@@8
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuPlayerPoolGame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuPlayerPoolGame@@8 DD FLAT:??_R0?AVVuPlayerPoolGame@@@8 ; VuPlayerPoolGame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuPlayerPoolGame@@8
rdata$r	ENDS
;	COMDAT ??_R2VuPlayerPoolGame@@8
rdata$r	SEGMENT
??_R2VuPlayerPoolGame@@8 DD FLAT:??_R1A@?0A@EA@VuPlayerPoolGame@@8 ; VuPlayerPoolGame::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuGroupEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuPlayerPoolGame@@8
rdata$r	SEGMENT
??_R3VuPlayerPoolGame@@8 DD 00H				; VuPlayerPoolGame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2VuPlayerPoolGame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuPlayerPoolGame@@@8
_DATA	SEGMENT
??_R0?AVVuPlayerPoolGame@@@8 DD FLAT:??_7type_info@@6B@	; VuPlayerPoolGame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuPlayerPoolGame@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuPlayerPoolGame@@6B@
rdata$r	SEGMENT
??_R4VuPlayerPoolGame@@6B@ DD 00H			; VuPlayerPoolGame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuPlayerPoolGame@@@8
	DD	FLAT:??_R3VuPlayerPoolGame@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGameEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGameEntity@@8 DD FLAT:??_R0?AVVuGameEntity@@@8 ; VuGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGameEntity@@8
rdata$r	SEGMENT
??_R2VuGameEntity@@8 DD FLAT:??_R1A@?0A@EA@VuGameEntity@@8 ; VuGameEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuGroupEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGameEntity@@8
rdata$r	SEGMENT
??_R3VuGameEntity@@8 DD 00H				; VuGameEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2VuGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGameEntity@@@8
_DATA	SEGMENT
??_R0?AVVuGameEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuGameEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGameEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGameEntity@@6B@
rdata$r	SEGMENT
??_R4VuGameEntity@@6B@ DD 00H				; VuGameEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGameEntity@@@8
	DD	FLAT:??_R3VuGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGlobalGroup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGlobalGroup@@8 DD FLAT:??_R0?AVVuGlobalGroup@@@8 ; VuGlobalGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGlobalGroup@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGlobalGroup@@8
rdata$r	SEGMENT
??_R2VuGlobalGroup@@8 DD FLAT:??_R1A@?0A@EA@VuGlobalGroup@@8 ; VuGlobalGroup::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuGroupEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGlobalGroup@@8
rdata$r	SEGMENT
??_R3VuGlobalGroup@@8 DD 00H				; VuGlobalGroup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2VuGlobalGroup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGlobalGroup@@@8
_DATA	SEGMENT
??_R0?AVVuGlobalGroup@@@8 DD FLAT:??_7type_info@@6B@	; VuGlobalGroup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGlobalGroup@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGlobalGroup@@6B@
rdata$r	SEGMENT
??_R4VuGlobalGroup@@6B@ DD 00H				; VuGlobalGroup::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGlobalGroup@@@8
	DD	FLAT:??_R3VuGlobalGroup@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGroupEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGroupEntity@@8 DD FLAT:??_R0?AVVuGroupEntity@@@8 ; VuGroupEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGroupEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGroupEntity@@8
rdata$r	SEGMENT
??_R2VuGroupEntity@@8 DD FLAT:??_R1A@?0A@EA@VuGroupEntity@@8 ; VuGroupEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGroupEntity@@8
rdata$r	SEGMENT
??_R3VuGroupEntity@@8 DD 00H				; VuGroupEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuGroupEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGroupEntity@@@8
_DATA	SEGMENT
??_R0?AVVuGroupEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuGroupEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGroupEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGroupEntity@@6B@
rdata$r	SEGMENT
??_R4VuGroupEntity@@6B@ DD 00H				; VuGroupEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGroupEntity@@@8
	DD	FLAT:??_R3VuGroupEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuSessionEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuSessionEntity@@8 DD FLAT:??_R0?AVVuSessionEntity@@@8 ; VuSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuSessionEntity@@8
rdata$r	SEGMENT
??_R2VuSessionEntity@@8 DD FLAT:??_R1A@?0A@EA@VuSessionEntity@@8 ; VuSessionEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuSessionEntity@@8
rdata$r	SEGMENT
??_R3VuSessionEntity@@8 DD 00H				; VuSessionEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuSessionEntity@@@8
_DATA	SEGMENT
??_R0?AVVuSessionEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuSessionEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuSessionEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuSessionEntity@@6B@
rdata$r	SEGMENT
??_R4VuSessionEntity@@6B@ DD 00H			; VuSessionEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuSessionEntity@@@8
	DD	FLAT:??_R3VuSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuEntity@@8
rdata$r	SEGMENT
??_R2VuEntity@@8 DD FLAT:??_R1A@?0A@EA@VuEntity@@8	; VuEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuEntity@@8
rdata$r	SEGMENT
??_R3VuEntity@@8 DD 00H					; VuEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuEntity@@@8
_DATA	SEGMENT
??_R0?AVVuEntity@@@8 DD FLAT:??_7type_info@@6B@		; VuEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuEntity@@8 DD FLAT:??_R0?AVVuEntity@@@8	; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuTargetEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuTargetEntity@@8 DD FLAT:??_R0?AVVuTargetEntity@@@8 ; VuTargetEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuTargetEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuTargetEntity@@8
rdata$r	SEGMENT
??_R2VuTargetEntity@@8 DD FLAT:??_R1A@?0A@EA@VuTargetEntity@@8 ; VuTargetEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuTargetEntity@@8
rdata$r	SEGMENT
??_R3VuTargetEntity@@8 DD 00H				; VuTargetEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuTargetEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuTargetEntity@@@8
_DATA	SEGMENT
??_R0?AVVuTargetEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuTargetEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuTargetEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuTargetEntity@@6B@
rdata$r	SEGMENT
??_R4VuTargetEntity@@6B@ DD 00H				; VuTargetEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuTargetEntity@@@8
	DD	FLAT:??_R3VuTargetEntity@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@
CONST	SEGMENT
??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@ DB 'list<T> bad splice'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LFHPJHGA@Player?5Pool?$AA@
CONST	SEGMENT
??_C@_0M@LFHPJHGA@Player?5Pool?$AA@ DB 'Player Pool', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PFJCCOLK@Vu2?5Game?$AA@
CONST	SEGMENT
??_C@_08PFJCCOLK@Vu2?5Game?$AA@ DB 'Vu2 Game', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BMFBKPHA@anonymous?$AA@
CONST	SEGMENT
??_C@_09BMFBKPHA@anonymous?$AA@ DB 'anonymous', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7GlobalGroupFilter@@6B@
CONST	SEGMENT
??_7GlobalGroupFilter@@6B@ DD FLAT:??_R4GlobalGroupFilter@@6B@ ; GlobalGroupFilter::`vftable'
	DD	FLAT:??_EGlobalGroupFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@GlobalGroupFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7VuSessionsIterator@@6B@
CONST	SEGMENT
??_7VuSessionsIterator@@6B@ DD FLAT:??_R4VuSessionsIterator@@6B@ ; VuSessionsIterator::`vftable'
	DD	FLAT:?CurrEnt@VuSessionsIterator@@UAEPAVVuEntity@@XZ
	DD	FLAT:?Cleanup@VuSessionsIterator@@UAEHXZ
	DD	FLAT:??_EVuSessionsIterator@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7VuSessionFilter@@6B@
CONST	SEGMENT
??_7VuSessionFilter@@6B@ DD FLAT:??_R4VuSessionFilter@@6B@ ; VuSessionFilter::`vftable'
	DD	FLAT:??_EVuSessionFilter@@UAEPAXI@Z
	DD	FLAT:?Compare@VuSessionFilter@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@VuSessionFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@VuSessionFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuSessionFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7VuFilter@@6B@
CONST	SEGMENT
??_7VuFilter@@6B@ DD FLAT:??_R4VuFilter@@6B@		; VuFilter::`vftable'
	DD	FLAT:??_EVuFilter@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7VuGlobalGroup@@6B@
CONST	SEGMENT
??_7VuGlobalGroup@@6B@ DD FLAT:??_R4VuGlobalGroup@@6B@	; VuGlobalGroup::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuGroupEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuGlobalGroup@@UAEHXZ
	DD	FLAT:?Save@VuGlobalGroup@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuGlobalGroup@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuGroupEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuGroupEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuGlobalGroup@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuGlobalGroup@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z
	DD	FLAT:?AddSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?RemoveSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?Distribute@VuGroupEntity@@MAEHPAVVuSessionEntity@@@Z
CONST	ENDS
;	COMDAT ??_7VuPlayerPoolGame@@6B@
CONST	SEGMENT
??_7VuPlayerPoolGame@@6B@ DD FLAT:??_R4VuPlayerPoolGame@@6B@ ; VuPlayerPoolGame::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuGroupEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuGameEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuPlayerPoolGame@@UAEHXZ
	DD	FLAT:?Save@VuPlayerPoolGame@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuPlayerPoolGame@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuGameEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuGameEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuPlayerPoolGame@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuGameEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z
	DD	FLAT:?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z
CONST	ENDS
;	COMDAT ??_7VuGameEntity@@6B@
CONST	SEGMENT
??_7VuGameEntity@@6B@ DD FLAT:??_R4VuGameEntity@@6B@	; VuGameEntity::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuGroupEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuGameEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuGameEntity@@UAEHXZ
	DD	FLAT:?Save@VuGameEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuGameEntity@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuGameEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuGameEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuGameEntity@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuGameEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z
	DD	FLAT:?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z
CONST	ENDS
;	COMDAT ??_7VuGroupEntity@@6B@
CONST	SEGMENT
??_7VuGroupEntity@@6B@ DD FLAT:??_R4VuGroupEntity@@6B@	; VuGroupEntity::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuGroupEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuGroupEntity@@UAEHXZ
	DD	FLAT:?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuGroupEntity@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuGroupEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuGroupEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuGroupEntity@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuGroupEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z
	DD	FLAT:?AddSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?RemoveSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	FLAT:?Distribute@VuGroupEntity@@MAEHPAVVuSessionEntity@@@Z
CONST	ENDS
;	COMDAT ??_7VuSessionEntity@@6B@
CONST	SEGMENT
??_7VuSessionEntity@@6B@ DD FLAT:??_R4VuSessionEntity@@6B@ ; VuSessionEntity::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuSessionEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuSessionEntity@@UAEHXZ
	DD	FLAT:?Save@VuSessionEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuSessionEntity@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuSessionEntity@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuSessionEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuSessionEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z
CONST	ENDS
;	COMDAT ??_7VuTargetEntity@@6B@
CONST	SEGMENT
??_7VuTargetEntity@@6B@ DD FLAT:??_R4VuTargetEntity@@6B@ ; VuTargetEntity::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@VuTargetEntity@@UAEHXZ
	DD	FLAT:?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@VuTargetEntity@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EVuTargetEntity@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@VuEntity@@MAEHXZ
	DD	FLAT:?RemovalCallback@VuEntity@@MAEHXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z$0
__ehfuncinfo$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z$0
__ehfuncinfo$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z$0
__ehfuncinfo$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z$0
__ehfuncinfo$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z$0
__ehfuncinfo$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$0
__unwindtable$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$2
__ehfuncinfo$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z$1
__ehfuncinfo$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$0
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$2
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$0
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$2
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ$0
__unwindtable$?MessagePoll@@YAHPAUVuCommsContext@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MessagePoll@@YAHPAUVuCommsContext@@@Z$0
__unwindtable$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ$0
__unwindtable$??0VuGlobalGroup@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGlobalGroup@@QAE@XZ$0
__unwindtable$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z$0
__unwindtable$?RemovalCallback@VuGameEntity@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemovalCallback@VuGameEntity@@MAEHXZ$0
__unwindtable$??0VuGameEntity@@IAE@HKPAD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGameEntity@@IAE@HKPAD0@Z$0
__unwindtable$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z$0
__unwindtable$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z$0
__unwindtable$?SetGameName@VuGameEntity@@QAEXPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGameName@VuGameEntity@@QAEXPAD@Z$0
__unwindtable$??0VuGameEntity@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGameEntity@@QAE@PAU_iobuf@@@Z$0
__unwindtable$??0VuGameEntity@@QAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGameEntity@@QAE@PAPAEPAJ@Z$0
__unwindtable$??0VuGameEntity@@QAE@KPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGameEntity@@QAE@KPAD@Z$0
__unwindtable$?RemovalCallback@VuGroupEntity@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemovalCallback@VuGroupEntity@@MAEHXZ$0
__unwindtable$?InsertionCallback@VuGroupEntity@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertionCallback@VuGroupEntity@@MAEHXZ$0
__unwindtable$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z$0
__unwindtable$?SetGroupName@VuGroupEntity@@QAEXPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGroupName@VuGroupEntity@@QAEXPAD@Z$0
__unwindtable$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z$0
__unwindtable$?Save@VuGroupEntity@@UAEHPAPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Save@VuGroupEntity@@UAEHPAPAE@Z$0
__unwindtable$??1VuGroupEntity@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuGroupEntity@@UAE@XZ$0
__unwindtable$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z$0
__unwindtable$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z$0
__unwindtable$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z$0
__unwindtable$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$0
__unwindtable$?SetCallsign@VuSessionEntity@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCallsign@VuSessionEntity@@QAEXPBD@Z$0
__unwindtable$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z$0
__unwindtable$??0VuTargetEntity@@IAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTargetEntity@@IAE@PAPAEPAJ@Z$0
__unwindtable$??0VuTargetEntity@@IAE@GK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTargetEntity@@IAE@GK@Z$0
__unwindtable$?SendQueuedMessage@VuTargetEntity@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendQueuedMessage@VuTargetEntity@@QAEHXZ$0
__unwindtable$??1VuTargetEntity@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuTargetEntity@@UAE@XZ$0
__unwindtable$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ$1
__unwindtable$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$1
__unwindtable$??0VuPlayerPoolGame@@QAE@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$2
__unwindtable$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$2
__unwindtable$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$2
__unwindtable$??0VuGroupEntity@@QAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$2
__unwindtable$??0VuGroupEntity@@QAE@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$2
__unwindtable$?CloseSession@VuSessionEntity@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$2
__unwindtable$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$3
__ehfuncinfo$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MessagePoll@@YAHPAUVuCommsContext@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MessagePoll@@YAHPAUVuCommsContext@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGlobalGroup@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuGlobalGroup@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuPlayerPoolGame@@QAE@K@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VuPlayerPoolGame@@QAE@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemovalCallback@VuGameEntity@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemovalCallback@VuGameEntity@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGameEntity@@IAE@HKPAD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuGameEntity@@IAE@HKPAD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetGameName@VuGameEntity@@QAEXPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetGameName@VuGameEntity@@QAEXPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGameEntity@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuGameEntity@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGameEntity@@QAE@PAPAEPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuGameEntity@@QAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGameEntity@@QAE@KPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuGameEntity@@QAE@KPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemovalCallback@VuGroupEntity@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemovalCallback@VuGroupEntity@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InsertionCallback@VuGroupEntity@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InsertionCallback@VuGroupEntity@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetGroupName@VuGroupEntity@@QAEXPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetGroupName@VuGroupEntity@@QAEXPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Save@VuGroupEntity@@UAEHPAPAE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Save@VuGroupEntity@@UAEHPAPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuGroupEntity@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VuGroupEntity@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGroupEntity@@QAE@PAPAEPAJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VuGroupEntity@@QAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGroupEntity@@QAE@PAD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VuGroupEntity@@QAE@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CloseSession@VuSessionEntity@@IAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CloseSession@VuSessionEntity@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEntity@@IAE@GKPAD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0VuSessionEntity@@IAE@GKPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetCallsign@VuSessionEntity@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCallsign@VuSessionEntity@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuSessionEntity@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1VuSessionEntity@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEntity@@QAE@PAPAEPAJ@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0VuSessionEntity@@QAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEntity@@QAE@KPBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0VuSessionEntity@@QAE@KPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTargetEntity@@IAE@PAPAEPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTargetEntity@@IAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTargetEntity@@IAE@GK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTargetEntity@@IAE@GK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SendQueuedMessage@VuTargetEntity@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendQueuedMessage@VuTargetEntity@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuTargetEntity@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VuTargetEntity@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0VuSessionEntity@@IAE@GKPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$4
__unwindtable$??1VuSessionEntity@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuSessionEntity@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1VuSessionEntity@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1VuSessionEntity@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1VuSessionEntity@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1VuSessionEntity@@UAE@XZ$4
__unwindtable$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$4
__unwindtable$??0VuSessionEntity@@QAE@KPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$4
__unwindtable$??0VuSessionEntity@@QAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$5
__unwindtable$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$6
__unwindtable$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$15
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_vuNullSession$initializer$ DD FLAT:??__EvuNullSession@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_vuKnownConnectionId$initializer$ DD FLAT:??__EvuKnownConnectionId@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_globalGrpFilter$initializer$ DD FLAT:??__EglobalGrpFilter@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z PROC ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ENDP ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
	pop	ebp
	ret	0
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z PROC ; std::forward<VuBin<VuEntity> >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ENDP ; std::forward<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z PROC ; std::allocator<VuBin<VuEntity> >::destroy<VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$VuBin@VVuEntity@@@@QAEPAXI@Z

; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ENDP ; std::allocator<VuBin<VuEntity> >::destroy<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<VuEntity *,VuEntity * const &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<VuEntity *,VuEntity * const &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv77 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	push	0
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float,VuEntity *>
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv77[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z PROC ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>, COMDAT

; 1798 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1799 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1800 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@$$QAV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$VuBin@VVuEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@@Z PROC ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ; std::allocator<VuBin<VuEntity> >::destroy<VuBin<VuEntity> >

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@@Z ENDP ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVVuEntity@@ABQAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAVVuEntity@@ABQAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAVVuEntity@@ABQAV1@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<VuEntity *,VuEntity * const &>
	pop	ebp
	ret	0
??$construct@PAVVuEntity@@ABQAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
	pop	ebp
	ret	0
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$_Move@AAI@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAI@std@@YA$$QAIAAI@Z PROC			; std::_Move<unsigned int &>, COMDAT

; 1798 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1799 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1800 : 	}

	pop	ebp
	ret	0
??$_Move@AAI@std@@YA$$QAIAAI@Z ENDP			; std::_Move<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$swap@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z PROC ; std::swap<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT

; 46   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 47   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 48   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 49   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 50   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ENDP ; std::swap<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuEntity *,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAVVuEntity@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAVVuEntity@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<VuEntity *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAVVuEntity@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<std::_List_node<VuEntity *,void *> *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<std::_List_node<VuEntity *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::allocator<VuBin<VuEntity> >,VuBin<VuEntity> >, COMDAT

; 426  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 427  : 	_DEBUG_RANGE(_First, _Last);
; 428  : 	_DEBUG_POINTER(_Dest);
; 429  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 430  : 
; 431  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 432  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov

; 433  : 		_Al.construct(_Dest, (_Valty&&)*_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$VuBin@VVuEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 434  : 	_CATCH_ALL
; 435  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov

; 436  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:

; 437  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 438  : 	_CATCH_END

	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 439  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 440  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::allocator<VuBin<VuEntity> >,VuBin<VuEntity> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@@Z PROC ; std::_Val_type<VuBin<VuEntity> *>, COMDAT

; 710  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 711  : 	return (0);

	xor	eax, eax

; 712  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAV?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@@Z ENDP ; std::_Val_type<VuBin<VuEntity> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$VuBin@VVuEntity@@@@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVVuEntity@@ABQAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAVVuEntity@@ABQAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVVuEntity@@ABQAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@ABQAV3@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVVuEntity@@ABQAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z PROC ; std::move<VuBin<VuEntity> &>, COMDAT

; 1790 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1791 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1792 : 	}

	pop	ebp
	ret	0
??$move@AAV?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ENDP ; std::move<VuBin<VuEntity> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z PROC ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ENDP ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@PAVVuEntity@@@std@@YA$$QAPAVVuEntity@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVVuEntity@@@std@@YA$$QAPAVVuEntity@@AAPAV1@@Z PROC ; std::forward<VuEntity *>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@PAVVuEntity@@@std@@YA$$QAPAVVuEntity@@AAPAV1@@Z ENDP ; std::forward<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@M@std@@YA$$QAMAAM@Z PROC			; std::forward<float>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@M@std@@YA$$QAMAAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$emplace@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__V0$ = 16						; size = 4
??$emplace@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::emplace<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 1086 : _VARIADIC_EXPAND_0X(_LIST_EMPLACE_INSERT, , , , )

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_Unchecked
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Insert<std::pair<float,VuEntity *> >
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator--
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$emplace@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::emplace<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$swap@I@std@@YAXAAI0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@I@std@@YAXAAI0@Z PROC				; std::swap<unsigned int>, COMDAT

; 46   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 47   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 48   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 49   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 50   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@I@std@@YAXAAI0@Z ENDP				; std::swap<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z PROC ; std::_Swap_adl<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT

; 55   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 56   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ; std::swap<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 8

; 57   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ENDP ; std::_Swap_adl<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$?8U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@U01@@std@@YA_NABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@U01@@std@@YA_NABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@0@0@Z PROC ; std::operator==<std::_List_node<std::pair<float,VuEntity *>,void *>,std::_List_node<std::pair<float,VuEntity *>,void *> >, COMDAT

; 676  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp

; 677  : 	return (true);

	mov	al, 1

; 678  : 	}

	pop	ebp
	ret	0
??$?8U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@U01@@std@@YA_NABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@0@0@Z ENDP ; std::operator==<std::_List_node<std::pair<float,VuEntity *>,void *>,std::_List_node<std::pair<float,VuEntity *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z PROC ; std::operator==<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >,std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >, COMDAT

; 922  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	push	ecx

; 923  : 	return (static_cast<_Ty>(_Left) == static_cast<_Other>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
	push	eax
	call	??$?8U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@U01@@std@@YA_NABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@0@0@Z ; std::operator==<std::_List_node<std::pair<float,VuEntity *>,void *>,std::_List_node<std::pair<float,VuEntity *>,void *> >
	add	esp, 8

; 924  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z ENDP ; std::operator==<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >,std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuEntity *,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
	pop	ebp
	ret	0
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<VuEntity *,void *> * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<VuEntity *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	pop	ebp
	ret	0
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAVVuEntity@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAVVuEntity@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAVVuEntity@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAVVuEntity@@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<VuEntity *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAVVuEntity@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::destroy<std::_List_node<VuEntity *,void *> *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::pair<float,VuEntity *> >

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$VuBin@VVuEntity@@@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$VuBin@VVuEntity@@@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z PROC ; std::_Uninitialized_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >, COMDAT

; 471  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 472  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 473  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@@Z ; std::_Val_type<VuBin<VuEntity> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$VuBin@VVuEntity@@@@PAV1@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@V1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::allocator<VuBin<VuEntity> >,VuBin<VuEntity> >
	add	esp, 24					; 00000018H

; 474  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$VuBin@VVuEntity@@@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >, COMDAT

; 87   : 	{	// destroy [_First, _Last), arbitrary type

	push	ebp
	mov	ebp, esp

; 88   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra

; 89   : 		_Al.destroy(_First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$VuBin@VVuEntity@@@@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::destroy<VuBin<VuEntity> >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:

; 90   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z
_TEXT	SEGMENT
tv135 = -40						; size = 4
tv134 = -36						; size = 4
tv133 = -32						; size = 4
__Pnode$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__V0$ = 16						; size = 4
??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z PROC ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Buynode<VuEntity * const &>, COMDAT
; _this$ = ecx

; 850  : _VARIADIC_EXPAND_0X(_LIST_BUYNODE, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR __V0$[ebp]
	push	edx
	call	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR tv133[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	call	??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z ; std::addressof<VuEntity *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@PAVVuEntity@@ABQAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<VuEntity *,VuEntity * const &>
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$0:
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate
	push	0
	push	0
	call	__CxxThrowException@8
	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z$1:
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z ENDP ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Buynode<VuEntity * const &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z PROC ; std::forward<VuEntity * const &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ENDP ; std::forward<VuEntity * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
tv135 = -40						; size = 4
tv134 = -36						; size = 4
tv133 = -32						; size = 4
__Pnode$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__V0$ = 16						; size = 4
??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Buynode<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 850  : _VARIADIC_EXPAND_0X(_LIST_BUYNODE, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR __V0$[ebp]
	push	edx
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR tv133[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	call	??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::addressof<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@U?$pair@MPAVVuEntity@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::pair<float,VuEntity *>,std::pair<float,VuEntity *> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$0:
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate
	push	0
	push	0
	call	__CxxThrowException@8
	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z$1:
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Buynode<std::pair<float,VuEntity *> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>, COMDAT

; 2464 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebp
	mov	ebp, esp

; 2465 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN3@Move
$LN2@Move:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 4
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 4
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Move:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move

; 2466 : 		*_Dest = _STD move(*_First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAV?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::move<VuBin<VuEntity> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$VuBin@VVuEntity@@@@QAEABV0@ABV0@@Z	; VuBin<VuEntity>::operator=
	jmp	SHORT $LN2@Move
$LN1@Move:

; 2467 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 2468 : 	}

	pop	ebp
	ret	0
??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z PROC ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >, COMDAT

; 437  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 438  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 439  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 440  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z ENDP ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@ABV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@ABV3@@Z PROC ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::forward<VuBin<VuEntity> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z ; std::allocator<VuBin<VuEntity> >::construct
	pop	ebp
	ret	0
??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@ABV3@@Z ENDP ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z PROC ; std::forward<VuBin<VuEntity> const &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z ENDP ; std::forward<VuBin<VuEntity> const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ; std::allocator<VuBin<VuEntity> >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
	pop	ebp
	ret	0
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z PROC ; std::forward<VuBin<VuEntity> &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z ENDP ; std::forward<VuBin<VuEntity> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
$T6 = -28						; size = 4
__Last1$7 = -24						; size = 4
__Mid2$8 = -20						; size = 4
__Last2$9 = -16						; size = 4
__First1$10 = -12					; size = 4
_this$ = -8						; size = 4
__First2$11 = -4					; size = 4
__Right$ = 8						; size = 4
__Pred$ = 12						; size = 1
??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>, COMDAT
; _this$ = ecx

; 1713 : 		void merge(_Myt& _Right, _Pr2 _Pred)

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 1714 : 		{	// merge in elements from _Right, both ordered by _Pred
; 1715 : 		if (&_Right != this)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	je	$LN7@merge

; 1716 : 			{	// safe to merge, do it
; 1717 : 			iterator _First1 = begin(), _Last1 = end();

	lea	ecx, DWORD PTR __First1$10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	lea	edx, DWORD PTR __Last1$7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end

; 1718 : 			iterator _First2 = _Right.begin(), _Last2 = _Right.end();

	lea	eax, DWORD PTR __First2$11[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	lea	ecx, DWORD PTR __Last2$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
$LN5@merge:

; 1719 : 			_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 1720 : 			_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 1721 : 
; 1722 : 			while (_First1 != _Last1 && _First2 != _Last2)

	lea	edx, DWORD PTR __Last1$7[ebp]
	push	edx
	lea	ecx, DWORD PTR __First1$10[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN4@merge
	lea	ecx, DWORD PTR __Last2$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First2$11[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@merge

; 1723 : 				if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	lea	ecx, DWORD PTR __First1$10[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
	push	eax
	lea	ecx, DWORD PTR __First2$11[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
	push	eax
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??RScoreEntityPairSort@VuSessionEntity@@QBE_NAAU?$pair@MPAVVuEntity@@@std@@0@Z ; VuSessionEntity::ScoreEntityPairSort::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@merge

; 1724 : 					{	// splice in an element from _Right
; 1725 : 					iterator _Mid2 = _First2;

	mov	ecx, DWORD PTR __First2$11[ebp]
	mov	DWORD PTR __Mid2$8[ebp], ecx

; 1726 : 					_Splice(_First1, _Right, _First2, ++_Mid2, 1);

	lea	ecx, DWORD PTR __Mid2$8[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], edx
	mov	eax, DWORD PTR __First2$11[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR __First1$10[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	push	1
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice

; 1727 : 					_First2 = _Mid2;

	mov	eax, DWORD PTR __Mid2$8[ebp]
	mov	DWORD PTR __First2$11[ebp], eax

; 1728 : 					}
; 1729 : 				else

	jmp	SHORT $LN2@merge
$LN3@merge:

; 1730 : 					++_First1;

	lea	ecx, DWORD PTR __First1$10[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
$LN2@merge:
	jmp	$LN5@merge
$LN4@merge:

; 1731 : 
; 1732 : 			if (_First2 != _Last2)

	lea	ecx, DWORD PTR __Last2$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First2$11[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@merge

; 1733 : 				_Splice(_Last1, _Right, _First2, _Last2,
; 1734 : 					_Right._Mysize);	// splice remainder of _Right

	mov	eax, DWORD PTR __Last2$9[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR __First2$11[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR __Last1$7[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice
$LN7@merge:

; 1735 : 			}
; 1736 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> ><std::_List_node<std::pair<float,VuEntity *>,void *> >, COMDAT
; _this$ = ecx

; 574  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 575  : 		{	// construct from a related allocator (do nothing)
; 576  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> ><std::_List_node<std::pair<float,VuEntity *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z PROC ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float,VuEntity *>, COMDAT
; _this$ = ecx

; 182  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@M@std@@YA$$QAMAAM@Z		; std::forward<float>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@PAVVuEntity@@@std@@YA$$QAPAVVuEntity@@AAPAV1@@Z ; std::forward<VuEntity *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z ENDP ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float,VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0AAMAAPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@AAMAAPAVVuEntity@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 4
??$?0AAMAAPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@AAMAAPAVVuEntity@@PAPAX@Z PROC ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float &,VuEntity * &>, COMDAT
; _this$ = ecx

; 138  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAM@std@@YAAAMAAM@Z		; std::forward<float &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z ; std::forward<VuEntity * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 139  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0AAMAAPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@AAMAAPAVVuEntity@@PAPAX@Z ENDP ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float &,VuEntity * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z PROC ; std::forward<VuEntity * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z ENDP ; std::forward<VuEntity * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAM@std@@YAAAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAM@std@@YAAAMAAM@Z PROC			; std::forward<float &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAM@std@@YAAAMAAM@Z ENDP			; std::forward<float &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAU?$_List_node@PAVVuEntity@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAU?$_List_node@PAVVuEntity@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<VuEntity *,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAU?$_List_node@PAVVuEntity@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<VuEntity *,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<std::pair<float,VuEntity *>,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<std::pair<float,VuEntity *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuEntity *,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@IPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@IPAV1@@Z PROC ; std::_Allocate<VuBin<VuEntity> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@IPAV1@@Z ENDP ; std::_Allocate<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAVVuEntity@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAVVuEntity@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAVVuEntity@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAVVuEntity@@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAVVuEntity@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z PROC ; std::addressof<VuEntity *>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z ENDP ; std::addressof<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@1@PAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<VuEntity *,void *> *>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<VuEntity *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAU?$pair@MPAVVuEntity@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$VuBin@VVuEntity@@@@@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEPAV?$VuBin@VVuEntity@@@@PAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$VuBin@VVuEntity@@@@@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEPAV?$VuBin@VVuEntity@@@@PAV2@00@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Umove<VuBin<VuEntity> *>, COMDAT
; _this$ = ecx

; 1557 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1558 : 		{	// move initializing [_First, _Last), using allocator
; 1559 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal

; 1560 : 		return (_Uninitialized_move(_First, _Last,
; 1561 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$VuBin@VVuEntity@@@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ; std::_Uninitialized_move<VuBin<VuEntity> *,VuBin<VuEntity> *,std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
	add	esp, 16					; 00000010H

; 1562 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$VuBin@VVuEntity@@@@@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEPAV?$VuBin@VVuEntity@@@@PAV2@00@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Umove<VuBin<VuEntity> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z PROC ; std::addressof<std::pair<float,VuEntity *> >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@AAV1@@Z PROC ; std::addressof<VuBin<VuEntity> >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@AAV1@@Z ENDP ; std::addressof<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >, COMDAT

; 79   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 80   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
	add	esp, 16					; 00000010H

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@MPAVVuEntity@@@std@@@std@@SAPAU?$pair@MPAVVuEntity@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@MPAVVuEntity@@@std@@@std@@SAPAU?$pair@MPAVVuEntity@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<float,VuEntity *> *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::addressof<std::pair<float,VuEntity *> >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@MPAVVuEntity@@@std@@@std@@SAPAU?$pair@MPAVVuEntity@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<float,VuEntity *> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z PROC ; std::pointer_traits<VuBin<VuEntity> *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::addressof<VuBin<VuEntity> >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z ENDP ; std::pointer_traits<VuBin<VuEntity> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Insert@ABQAVVuEntity@@@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__V0$ = 12						; size = 4
??$_Insert@ABQAVVuEntity@@@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVVuEntity@@@Z PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Insert<VuEntity * const &>, COMDAT
; _this$ = ecx

; 1086 : _VARIADIC_EXPAND_0X(_LIST_EMPLACE_INSERT, , , , )

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABQAVVuEntity@@@std@@YAABQAVVuEntity@@ABQAV1@@Z ; std::forward<VuEntity * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABQAVVuEntity@@@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@1@PAU21@0ABQAVVuEntity@@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Buynode<VuEntity * const &>
	mov	DWORD PTR __Newnode$[ebp], eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXI@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Incsize
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Insert@ABQAVVuEntity@@@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVVuEntity@@@Z ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Insert<VuEntity * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>

; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__V0$ = 12						; size = 4
??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Insert<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 1086 : _VARIADIC_EXPAND_0X(_LIST_EMPLACE_INSERT, , , , )

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@U?$pair@MPAVVuEntity@@@std@@@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PAU21@0$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Buynode<std::pair<float,VuEntity *> >
	mov	DWORD PTR __Newnode$[ebp], eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Incsize
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Insert<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z PROC ; std::forward<std::pair<float,VuEntity *> >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ENDP ; std::forward<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>

; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00@Z PROC ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>, COMDAT

; 2485 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	push	ebp
	mov	ebp, esp
	push	ecx

; 2486 : 	return (_Move(_First, _Last,
; 2487 : 		_Dest, _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$VuBin@VVuEntity@@@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$VuBin@VVuEntity@@@@0@Z ; std::_Ptr_cat<VuBin<VuEntity>,VuBin<VuEntity> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
	add	esp, 16					; 00000010H

; 2488 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00@Z ENDP ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV2@@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@ABV?$VuBin@VVuEntity@@@@@std@@YAABV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::forward<VuBin<VuEntity> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@ABV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAV?$VuBin@VVuEntity@@@@@std@@YAAAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAXAAV?$allocator@V?$VuBin@VVuEntity@@@@@1@PAV?$VuBin@VVuEntity@@@@AAV3@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z PROC ; std::addressof<VuBin<VuEntity> const >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z ENDP ; std::addressof<VuBin<VuEntity> const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FglobalGrpFilter@@YAXXZ
text$yd	SEGMENT
??__FglobalGrpFilter@@YAXXZ PROC			; `dynamic atexit destructor for 'globalGrpFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?globalGrpFilter@@3VGlobalGroupFilter@@A ; globalGrpFilter
	call	??1GlobalGroupFilter@@UAE@XZ		; GlobalGroupFilter::~GlobalGroupFilter
	pop	ebp
	ret	0
??__FglobalGrpFilter@@YAXXZ ENDP			; `dynamic atexit destructor for 'globalGrpFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??__EglobalGrpFilter@@YAXXZ
text$yc	SEGMENT
??__EglobalGrpFilter@@YAXXZ PROC			; `dynamic initializer for 'globalGrpFilter'', COMDAT

; 2744 : GlobalGroupFilter globalGrpFilter;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?globalGrpFilter@@3VGlobalGroupFilter@@A ; globalGrpFilter
	call	??0GlobalGroupFilter@@QAE@XZ		; GlobalGroupFilter::GlobalGroupFilter
	push	OFFSET ??__FglobalGrpFilter@@YAXXZ	; `dynamic atexit destructor for 'globalGrpFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EglobalGrpFilter@@YAXXZ ENDP			; `dynamic initializer for 'globalGrpFilter''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++, COMDAT
; _this$ = ecx

; 372  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 373  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++

; 374  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 375  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEPAU?$pair@MPAVVuEntity@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEPAU?$pair@MPAVVuEntity@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator->, COMDAT
; _this$ = ecx

; 367  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 368  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@MPAVVuEntity@@@std@@@std@@SAPAU?$pair@MPAVVuEntity@@@2@AAU32@@Z ; std::pointer_traits<std::pair<float,VuEntity *> *>::pointer_to
	add	esp, 4

; 369  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEPAU?$pair@MPAVVuEntity@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >, COMDAT
; _this$ = ecx

; 345  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=, COMDAT
; _this$ = ecx

; 302  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 304  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==, COMDAT
; _this$ = ecx

; 284  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 285  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 286  : 		if (this->_Getcont() == 0
; 287  : 			|| this->_Getcont() != _Right._Getcont())
; 288  : 			{	// report error
; 289  : 			_DEBUG_ERROR("list iterators incompatible");
; 290  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 295  : 			&& this->_Getcont() == _Right._Getcont());
; 296  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 297  : 
; 298  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 299  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator--, COMDAT
; _this$ = ecx

; 252  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 253  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 254  : 		if (this->_Getcont() == 0
; 255  : 			|| this->_Ptr == 0
; 256  : 			|| (this->_Ptr = _Mylist::_Prevnode(this->_Ptr))
; 257  : 				== ((_Mylist *)this->_Getcont())->_Myhead)
; 258  : 			{	// report error
; 259  : 			_DEBUG_ERROR("list iterator not decrementable");
; 260  : 			_SCL_SECURE_OUT_OF_RANGE;
; 261  : 			}
; 262  : 
; 263  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 264  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 265  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 266  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 267  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 268  : 
; 269  :  #else /* _ITERATOR_DEBUG_LEVEL */
; 270  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 271  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 272  : 
; 273  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 274  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++, COMDAT
; _this$ = ecx

; 245  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 247  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++

; 248  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 249  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++, COMDAT
; _this$ = ecx

; 224  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 226  : 		if (this->_Getcont() == 0
; 227  : 			|| this->_Ptr == 0
; 228  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 229  : 			{	// report error
; 230  : 			_DEBUG_ERROR("list iterator not incrementable");
; 231  : 			_SCL_SECURE_OUT_OF_RANGE;
; 232  : 			}
; 233  : 
; 234  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 235  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 236  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 237  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 238  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 239  : 
; 240  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 241  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 242  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_Unchecked, COMDAT
; _this$ = ecx

; 199  : 		{	// make an unchecked iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 200  : 		return (_Unchecked_type(this->_Ptr, (_Mylist *)this->_Getcont()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ; std::_Iterator_base0::_Getcont
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 201  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>

; 188  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 95   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 97   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z
_TEXT	SEGMENT
__MAXBINS$2 = -292					; size = 4
$T3 = -288						; size = 4
$T4 = -284						; size = 4
$T5 = -280						; size = 4
$T6 = -276						; size = 4
$T7 = -272						; size = 4
$T8 = -268						; size = 4
$T9 = -264						; size = 4
$T10 = -260						; size = 4
__Templist$11 = -256					; size = 8
$T12 = -245						; size = 1
__Bin$13 = -244						; size = 4
__Maxbin$14 = -240					; size = 4
$T15 = -233						; size = 1
_this$ = -232						; size = 4
__Bin$16 = -228						; size = 4
__Binlist$17 = -224					; size = 208
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Pred$ = 8						; size = 1
??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::sort<VuSessionEntity::ScoreEntityPairSort>, COMDAT
; _this$ = ecx

; 1785 : 		void sort(_Pr2 _Pred)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1786 : 		{	// order sequence, using _Pred
; 1787 : 		if (2 <= this->_Mysize)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 2
	jb	$LN13@sort

; 1788 : 			{	// worth sorting, do it
; 1789 : 			const size_t _MAXBINS = 25;

	mov	DWORD PTR __MAXBINS$2[ebp], 25		; 00000019H

; 1790 : 			_Myt _Templist(this->_Getal()), _Binlist[_MAXBINS + 1];

	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T15[ebp]
	call	??$?0U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@1@@Z ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> ><std::_List_node<std::pair<float,VuEntity *>,void *> >
	lea	edx, DWORD PTR $T15[ebp]
	push	edx
	lea	ecx, DWORD PTR __Templist$11[ebp]
	call	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	push	OFFSET ??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	push	26					; 0000001aH
	push	8
	lea	eax, DWORD PTR __Binlist$17[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1791 : 			size_t _Maxbin = 0;

	mov	DWORD PTR __Maxbin$14[ebp], 0
$LN11@sort:

; 1792 : 
; 1793 : 			while (!empty())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN10@sort

; 1794 : 				{	// sort another element, using bins
; 1795 : 				_Templist._Splice_same(_Templist.begin(), *this, begin(),
; 1796 : 					++begin(), 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	ecx, eax
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T8[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T7[ebp], edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Templist$11[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T10[ebp], ecx
	push	1
	mov	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T10[ebp]
	push	edx
	lea	ecx, DWORD PTR __Templist$11[ebp]
	call	?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice_same

; 1797 : 
; 1798 : 				size_t _Bin;
; 1799 : 				for (_Bin = 0; _Bin < _Maxbin && !_Binlist[_Bin].empty();

	mov	DWORD PTR __Bin$16[ebp], 0

; 1800 : 					++_Bin)

	jmp	SHORT $LN9@sort
$LN8@sort:
	mov	eax, DWORD PTR __Bin$16[ebp]
	add	eax, 1
	mov	DWORD PTR __Bin$16[ebp], eax
$LN9@sort:
	mov	ecx, DWORD PTR __Bin$16[ebp]
	cmp	ecx, DWORD PTR __Maxbin$14[ebp]
	jae	SHORT $LN7@sort
	mov	edx, DWORD PTR __Bin$16[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+edx*8]
	call	?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@sort

; 1801 : 					{	// merge into ever larger bins
; 1802 : 					_Binlist[_Bin].merge(_Templist, _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Templist$11[ebp]
	push	edx
	mov	eax, DWORD PTR __Bin$16[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+eax*8]
	call	??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>

; 1803 : 					_Binlist[_Bin].swap(_Templist);

	lea	ecx, DWORD PTR __Templist$11[ebp]
	push	ecx
	mov	edx, DWORD PTR __Bin$16[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+edx*8]
	call	?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::swap

; 1804 : 					}

	jmp	SHORT $LN8@sort
$LN7@sort:

; 1805 : 
; 1806 : 				if (_Bin == _MAXBINS)

	cmp	DWORD PTR __Bin$16[ebp], 25		; 00000019H
	jne	SHORT $LN6@sort

; 1807 : 					_Binlist[_Bin - 1].merge(_Templist, _Pred);

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Templist$11[ebp]
	push	ecx
	mov	edx, DWORD PTR __Bin$16[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+edx*8-8]
	call	??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>

; 1808 : 				else

	jmp	SHORT $LN5@sort
$LN6@sort:

; 1809 : 					{	// spill to new bin, while they last
; 1810 : 					_Binlist[_Bin].swap(_Templist);

	lea	eax, DWORD PTR __Templist$11[ebp]
	push	eax
	mov	ecx, DWORD PTR __Bin$16[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+ecx*8]
	call	?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::swap

; 1811 : 					if (_Bin == _Maxbin)

	mov	edx, DWORD PTR __Bin$16[ebp]
	cmp	edx, DWORD PTR __Maxbin$14[ebp]
	jne	SHORT $LN5@sort

; 1812 : 						++_Maxbin;

	mov	eax, DWORD PTR __Maxbin$14[ebp]
	add	eax, 1
	mov	DWORD PTR __Maxbin$14[ebp], eax
$LN5@sort:

; 1813 : 					}
; 1814 : 				}

	jmp	$LN11@sort
$LN10@sort:

; 1815 : 
; 1816 : 			for (size_t _Bin = 1; _Bin < _Maxbin; ++_Bin)

	mov	DWORD PTR __Bin$13[ebp], 1
	jmp	SHORT $LN3@sort
$LN2@sort:
	mov	ecx, DWORD PTR __Bin$13[ebp]
	add	ecx, 1
	mov	DWORD PTR __Bin$13[ebp], ecx
$LN3@sort:
	mov	edx, DWORD PTR __Bin$13[ebp]
	cmp	edx, DWORD PTR __Maxbin$14[ebp]
	jae	SHORT $LN1@sort

; 1817 : 				_Binlist[_Bin].merge(_Binlist[_Bin - 1],
; 1818 : 					_Pred);	// merge up

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Bin$13[ebp]
	lea	edx, DWORD PTR __Binlist$17[ebp+ecx*8-8]
	push	edx
	mov	eax, DWORD PTR __Bin$13[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+eax*8]
	call	??$merge@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV01@VScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::merge<VuSessionEntity::ScoreEntityPairSort>
	jmp	SHORT $LN2@sort
$LN1@sort:

; 1819 : 
; 1820 : 			_Analysis_assume_(0 < _Maxbin);
; 1821 : 
; 1822 : 			splice(begin(), _Binlist[_Maxbin - 1]);	// result in last bin

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T9[ebp], edx
	mov	eax, DWORD PTR __Maxbin$14[ebp]
	lea	ecx, DWORD PTR __Binlist$17[ebp+eax*8-8]
	push	ecx
	mov	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice

; 1823 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	push	26					; 0000001aH
	push	8
	lea	eax, DWORD PTR __Binlist$17[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Templist$11[ebp]
	call	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
$LN13@sort:

; 1824 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR __Templist$11[ebp]
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z$1:
	push	OFFSET ??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	push	26					; 0000001aH
	push	8
	lea	eax, DWORD PTR __Binlist$17[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::sort<VuSessionEntity::ScoreEntityPairSort>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++, COMDAT
; _this$ = ecx

; 372  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 373  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++

; 374  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 375  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEABQAVVuEntity@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >, COMDAT
; _this$ = ecx

; 345  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator!=, COMDAT
; _this$ = ecx

; 302  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 304  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator==, COMDAT
; _this$ = ecx

; 284  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 285  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 286  : 		if (this->_Getcont() == 0
; 287  : 			|| this->_Getcont() != _Right._Getcont())
; 288  : 			{	// report error
; 289  : 			_DEBUG_ERROR("list iterators incompatible");
; 290  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 295  : 			&& this->_Getcont() == _Right._Getcont());
; 296  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 297  : 
; 298  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 299  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++, COMDAT
; _this$ = ecx

; 245  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 247  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++

; 248  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 249  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++, COMDAT
; _this$ = ecx

; 224  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 226  : 		if (this->_Getcont() == 0
; 227  : 			|| this->_Ptr == 0
; 228  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 229  : 			{	// report error
; 230  : 			_DEBUG_ERROR("list iterator not incrementable");
; 231  : 			_SCL_SECURE_OUT_OF_RANGE;
; 232  : 			}
; 233  : 
; 234  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 235  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 236  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 237  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 238  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 239  : 
; 240  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 241  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 242  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEABQAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEABQAVVuEntity@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEABQAVVuEntity@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>

; 188  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 95   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 97   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$make_pair@AAMAAPAVVuEntity@@@std@@YA?AU?$pair@MPAVVuEntity@@@0@AAMAAPAVVuEntity@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@AAMAAPAVVuEntity@@@std@@YA?AU?$pair@MPAVVuEntity@@@0@AAMAAPAVVuEntity@@@Z PROC ; std::make_pair<float &,VuEntity * &>, COMDAT

; 270  : 	{	// return pair composed from arguments

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 271  : 	typedef pair<typename _Unrefwrap<_Ty1>::type,
; 272  : 		typename _Unrefwrap<_Ty2>::type> _Mypair;
; 273  : 	return (_Mypair(_STD forward<_Ty1>(_Val1),

	push	0
	push	0
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAPAVVuEntity@@@std@@YAAAPAVVuEntity@@AAPAV1@@Z ; std::forward<VuEntity * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAM@std@@YAAAMAAM@Z		; std::forward<float &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAMAAPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@AAMAAPAVVuEntity@@PAPAX@Z ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float &,VuEntity * &>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0MPAVVuEntity@@@?$pair@MPAVVuEntity@@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<float,VuEntity *>::pair<float,VuEntity *><float,VuEntity *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		_STD forward<_Ty2>(_Val2)));
; 275  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_pair@AAMAAPAVVuEntity@@@std@@YA?AU?$pair@MPAVVuEntity@@@0@AAMAAPAVVuEntity@@@Z ENDP ; std::make_pair<float &,VuEntity * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z PROC ; operator!=<VuSessionEntity>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ENDP ; operator!=<VuSessionEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++, COMDAT
; _this$ = ecx

; 333  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++

; 335  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 336  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator->, COMDAT
; _this$ = ecx

; 328  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 329  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z ; std::pointer_traits<VuBin<VuEntity> *>::pointer_to
	add	esp, 4

; 330  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator!=, COMDAT
; _this$ = ecx

; 209  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| this->_Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			this->_Ptr != _Tptr()
; 109  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 113  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 114  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z PROC ; operator==<VuSessionEntity>, COMDAT

; 72   : template <class E> bool operator==(const void* le, const VuBin<E> &re){ return ((void*)re.get()) == le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ENDP ; operator==<VuSessionEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
$T3 = -4						; size = 4
_ctxt$ = 8						; size = 4
?Cleanup@@YAXPAUVuCommsContext@@@Z PROC			; Cleanup

; 453  : void Cleanup(VuCommsContext* ctxt) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 454  : 	delete [] ctxt->normalSendPacket_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 455  : 	delete [] ctxt->lowSendPacket_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 456  : 	delete [] ctxt->recBuffer_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 457  : 	Init(ctxt);   // just to be safe

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 458  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@@YAXPAUVuCommsContext@@@Z ENDP			; Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
?Init@@YAXPAUVuCommsContext@@@Z PROC			; Init

; 448  : void Init(VuCommsContext* ctxt) {

	push	ebp
	mov	ebp, esp

; 449  : 	memset(ctxt, 0, sizeof(VuCommsContext));

	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 450  : 	ctxt->status_ = VU_CONN_INACTIVE;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 451  : }

	pop	ebp
	ret	0
?Init@@YAXPAUVuCommsContext@@@Z ENDP			; Init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGlobalGroupFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGlobalGroupFilter@@UAEPAXI@Z PROC			; GlobalGroupFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GlobalGroupFilter@@UAE@XZ		; GlobalGroupFilter::~GlobalGroupFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGlobalGroupFilter@@UAEPAXI@Z ENDP			; GlobalGroupFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0GlobalGroupFilter@@IAE@PAV0@@Z PROC			; GlobalGroupFilter::GlobalGroupFilter
; _this$ = ecx

; 419  : GlobalGroupFilter::GlobalGroupFilter(GlobalGroupFilter* other) : VuFilter(other){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@PAV0@@Z		; VuFilter::VuFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7GlobalGroupFilter@@6B@

; 420  : 	// empty
; 421  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0GlobalGroupFilter@@IAE@PAV0@@Z ENDP			; GlobalGroupFilter::GlobalGroupFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv75 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ PROC	; GlobalGroupFilter::Copy
; _this$ = ecx

; 444  : VuFilter *GlobalGroupFilter::Copy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 	return new GlobalGroupFilter(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0GlobalGroupFilter@@IAE@PAV0@@Z	; GlobalGroupFilter::GlobalGroupFilter
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv75[ebp], 0
$LN4@Copy:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]

; 446  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@GlobalGroupFilter@@UAEPAVVuFilter@@XZ ENDP	; GlobalGroupFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -36						; size = 8
$T2 = -28						; size = 8
$T3 = -20						; size = 8
$T4 = -12						; size = 8
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@GlobalGroupFilter@@UAEHPAVVuEntity@@0@Z PROC	; GlobalGroupFilter::Compare
; _this$ = ecx

; 435  : int GlobalGroupFilter::Compare(VuEntity* ent1, VuEntity* ent2) {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 436  : 	if ((VU_KEY)ent2->Id() > (VU_KEY)ent1->Id()) {

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	mov	esi, eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	cmp	esi, eax
	jbe	SHORT $LN3@Compare

; 437  : 		return -1;

	or	eax, -1
	jmp	SHORT $LN4@Compare
	jmp	SHORT $LN2@Compare
$LN3@Compare:

; 438  : 	} else if ((VU_KEY)ent2->Id() < (VU_KEY)ent1->Id()) {

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	mov	esi, eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	cmp	esi, eax
	jae	SHORT $LN2@Compare

; 439  : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN4@Compare
$LN2@Compare:

; 440  : 	}
; 441  : 	return 0;

	xor	eax, eax
$LN4@Compare:

; 442  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@GlobalGroupFilter@@UAEHPAVVuEntity@@0@Z ENDP	; GlobalGroupFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?RemoveTest@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z PROC	; GlobalGroupFilter::RemoveTest
; _this$ = ecx

; 431  : VU_BOOL GlobalGroupFilter::RemoveTest(VuEntity* ent) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 432  : 	return ent->IsSession();

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 433  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z ENDP	; GlobalGroupFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Test@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z PROC	; GlobalGroupFilter::Test
; _this$ = ecx

; 427  : VU_BOOL GlobalGroupFilter::Test(VuEntity* ent) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 428  : 	return ent->IsSession();

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 429  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@GlobalGroupFilter@@UAEEPAVVuEntity@@@Z ENDP	; GlobalGroupFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GlobalGroupFilter@@UAE@XZ PROC			; GlobalGroupFilter::~GlobalGroupFilter
; _this$ = ecx

; 423  : GlobalGroupFilter::~GlobalGroupFilter() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GlobalGroupFilter@@6B@

; 424  : 	// empty
; 425  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1GlobalGroupFilter@@UAE@XZ ENDP			; GlobalGroupFilter::~GlobalGroupFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0GlobalGroupFilter@@QAE@XZ PROC			; GlobalGroupFilter::GlobalGroupFilter
; _this$ = ecx

; 415  : GlobalGroupFilter::GlobalGroupFilter() : VuFilter() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GlobalGroupFilter@@6B@

; 416  : 	// empty
; 417  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0GlobalGroupFilter@@QAE@XZ ENDP			; GlobalGroupFilter::GlobalGroupFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_phdr$ = -92						; size = 8
_senderAddress$ = -84					; size = 8
_senderid$ = -76					; size = 8
_sender$2 = -68						; size = 4
$T3 = -64						; size = 4
_timestamp$4 = -60					; size = 4
_end$ = -56						; size = 4
_now$ = -52						; size = 4
_msg$5 = -48						; size = 4
tv169 = -44						; size = 4
$T6 = -40						; size = 4
_readBuf$ = -36						; size = 4
_mhdr$ = -32						; size = 4
_count$ = -28						; size = 4
_length$ = -24						; size = 4
_ch$ = -20						; size = 4
_data$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ctxt$ = 8						; size = 4
?MessagePoll@@YAHPAUVuCommsContext@@@Z PROC		; MessagePoll

; 243  : static int MessagePoll(VuCommsContext* ctxt){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MessagePoll@@YAHPAUVuCommsContext@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 244  : 	static int		last_full_update = 0;
; 245  : 	int				now;
; 246  : 	int             count   = 0;

	mov	DWORD PTR _count$[ebp], 0

; 247  : 	int             length  = 0;

	mov	DWORD PTR _length$[ebp], 0

; 248  : 	ComAPIHandle    ch      = ctxt->handle_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ch$[ebp], ecx

; 249  : 	char*           readBuf = ComAPIRecvBufferGet(ch);

	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	call	_ComAPIRecvBufferGet
	add	esp, 4
	mov	DWORD PTR _readBuf$[ebp], eax

; 250  : 	VU_BYTE*        data;
; 251  : 	VU_BYTE*        end;
; 252  : 	VuPacketHeader  phdr;

	lea	ecx, DWORD PTR _phdr$[ebp]
	call	??0VuPacketHeader@@QAE@XZ		; VuPacketHeader::VuPacketHeader

; 253  : 	VuMessageHeader mhdr;

	lea	ecx, DWORD PTR _mhdr$[ebp]
	call	??0VuMessageHeader@@QAE@XZ		; VuMessageHeader::VuMessageHeader

; 254  : 	VU_ID           senderid;

	lea	ecx, DWORD PTR _senderid$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 255  : 	VU_ADDRESS senderAddress;

	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _senderAddress$[ebp]
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
$LN11@MessagePol:

; 256  : 
; 257  : #pragma warning(disable : 4127)
; 258  : 
; 259  : 	while (TRUE){

	mov	eax, 1
	test	eax, eax
	je	$LN10@MessagePol

; 260  : 		if ((length = ComAPIGet (ch)) > 0){

	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	_ComAPIGet
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
	cmp	DWORD PTR _length$[ebp], 0
	jle	$LN9@MessagePol

; 261  : 			//sfr: converts /  vu change
; 262  : 			VU_TIME    timestamp = ComAPIGetTimeStamp(ch);

	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	call	_ComAPIGetTimeStamp
	add	esp, 4
	mov	DWORD PTR _timestamp$4[ebp], eax

; 263  : 			VuEntity* sender;
; 264  : 
; 265  : 			senderAddress.ip = ComAPIQuery(ch, COMAPI_SENDER);

	push	19					; 00000013H
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_ComAPIQuery
	add	esp, 8
	mov	DWORD PTR _senderAddress$[ebp+4], eax

; 266  : 			//senderAddress.sendPort = (short)ComAPIQuery(ch, COMAPI_SENDER_PORT);
; 267  : 			senderid.num_ = VU_SESSION_ENTITY_ID;

	mov	DWORD PTR _senderid$[ebp], 3

; 268  : 			senderid.creator_.value_ = ComAPIQuery(ch, COMAPI_ID);

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	_ComAPIQuery
	add	esp, 8
	mov	DWORD PTR _senderid$[ebp+4], eax

; 269  : 			// entity who sent message
; 270  : 			sender = vuDatabase->Find(senderid);

	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sender$2[ebp], eax

; 271  : 
; 272  : 			data  = (VU_BYTE*)readBuf;

	mov	ecx, DWORD PTR _readBuf$[ebp]
	mov	DWORD PTR _data$[ebp], ecx

; 273  : 			end   = data + length;

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _length$[ebp]
	mov	DWORD PTR _end$[ebp], edx

; 274  : 			data += ReadPacketHeader(data, &phdr);

	lea	eax, DWORD PTR _phdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	?ReadPacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ; ReadPacketHeader
	add	esp, 8
	add	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _data$[ebp], eax
$LN8@MessagePol:

; 275  : 
; 276  : 			while (data < end){

	mov	edx, DWORD PTR _data$[ebp]
	cmp	edx, DWORD PTR _end$[ebp]
	jae	SHORT $LN7@MessagePol

; 277  : 				data += ReadMessageHeader(data, &mhdr);

	lea	eax, DWORD PTR _mhdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	?ReadMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ; ReadMessageHeader
	add	esp, 8
	add	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _data$[ebp], eax

; 278  : 				count += MessageReceive(
; 279  : 					phdr.targetId_, senderAddress, senderid, mhdr.type_, &data, mhdr.length_, timestamp
; 280  : 				);

	mov	edx, DWORD PTR _timestamp$4[ebp]
	push	edx
	movzx	eax, WORD PTR _mhdr$[ebp+2]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _mhdr$[ebp]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderAddress$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderAddress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phdr$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _phdr$[ebp]
	push	edx
	call	?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z ; MessageReceive
	add	esp, 40					; 00000028H
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _count$[ebp], eax

; 281  : 			}

	jmp	SHORT $LN8@MessagePol
$LN7@MessagePol:

; 282  : 
; 283  : 			readBuf = ComAPIRecvBufferGet(ch);

	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_ComAPIRecvBufferGet
	add	esp, 4
	mov	DWORD PTR _readBuf$[ebp], eax
	jmp	$LN6@MessagePol
$LN9@MessagePol:

; 284  : 		}
; 285  : 		else if (length == -1){

	cmp	DWORD PTR _length$[ebp], -1
	jne	SHORT $LN5@MessagePol

; 286  : 			count ++;

	mov	ecx, DWORD PTR _count$[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx

; 287  : 			break;

	jmp	$LN10@MessagePol
	jmp	$LN6@MessagePol
$LN5@MessagePol:

; 288  : 		}
; 289  : 		else if (length == -2){

	cmp	DWORD PTR _length$[ebp], -2		; fffffffeH
	jne	$LN3@MessagePol

; 290  : 			// Still not synced up yet - send a full update
; 291  : 			//MonoPrint ("Not Connected - sending full update\n");
; 292  : 
; 293  : 			now = GetTickCount ();

	call	DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR _now$[ebp], eax

; 294  : 			if (now - last_full_update > 2000){

	mov	edx, DWORD PTR _now$[ebp]
	sub	edx, DWORD PTR ?last_full_update@?1??MessagePoll@@YAHPAUVuCommsContext@@@Z@4HA
	cmp	edx, 2000				; 000007d0H
	jle	SHORT $LN2@MessagePol

; 295  : 				VuFullUpdateEvent *msg = new VuFullUpdateEvent(vuLocalSessionEntity.get(), vuGlobalGroup);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN14@MessagePol
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN15@MessagePol
$LN14@MessagePol:
	mov	DWORD PTR tv169[ebp], 0
$LN15@MessagePol:
	mov	ecx, DWORD PTR tv169[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _msg$5[ebp], edx

; 296  : 				msg->RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _msg$5[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 297  : 				VuMessageQueue::PostVuMessage(msg);

	mov	eax, DWORD PTR _msg$5[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 298  : 				last_full_update = now;

	mov	ecx, DWORD PTR _now$[ebp]
	mov	DWORD PTR ?last_full_update@?1??MessagePoll@@YAHPAUVuCommsContext@@@Z@4HA, ecx
$LN2@MessagePol:

; 299  : 			}
; 300  : 			break;

	jmp	SHORT $LN10@MessagePol

; 301  : 		}
; 302  : 		else {

	jmp	SHORT $LN6@MessagePol
$LN3@MessagePol:

; 303  : 			break;

	jmp	SHORT $LN10@MessagePol
$LN6@MessagePol:

; 304  : 		}
; 305  : 	}

	jmp	$LN11@MessagePol
$LN10@MessagePol:

; 306  : 
; 307  : #pragma warning(default : 4127)
; 308  : 
; 309  : 	return count;

	mov	eax, DWORD PTR _count$[ebp]

; 310  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MessagePoll@@YAHPAUVuCommsContext@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?MessagePoll@@YAHPAUVuCommsContext@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MessagePoll@@YAHPAUVuCommsContext@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MessagePoll@@YAHPAUVuCommsContext@@@Z ENDP		; MessagePoll
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_retsize$ = -8						; size = 4
_huff$1 = -4						; size = 2
_data$ = 8						; size = 4
_hdr$ = 12						; size = 4
?WriteMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z PROC	; WriteMessageHeader

; 115  : static int WriteMessageHeader(VU_BYTE *data, VuMessageHeader* hdr){

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 116  : 	int retsize;
; 117  : 
; 118  : 	memcpy(data, &hdr->type_, sizeof(hdr->type_));

	push	1
	mov	eax, DWORD PTR _hdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 119  : 	data += sizeof(hdr->type_);

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 1
	mov	DWORD PTR _data$[ebp], edx

; 120  : 
; 121  : 	if (hdr->length_ > 0x7f) {

	mov	eax, DWORD PTR _hdr$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 127				; 0000007fH
	jle	SHORT $LN2@WriteMessa

; 122  : 		ushort huff = static_cast<ushort>(0x8000 | hdr->length_);

	mov	edx, DWORD PTR _hdr$[ebp]
	movzx	eax, WORD PTR [edx+2]
	or	eax, 32768				; 00008000H
	mov	WORD PTR _huff$1[ebp], ax

; 123  : 		data[0] = static_cast<VU_BYTE>((huff >> 8) & 0xff);

	movzx	ecx, WORD PTR _huff$1[ebp]
	sar	ecx, 8
	and	ecx, 255				; 000000ffH
	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _data$[ebp]
	mov	BYTE PTR [eax+edx], cl

; 124  : 		data[1] = static_cast<VU_BYTE>(huff & 0xff);

	movzx	ecx, WORD PTR _huff$1[ebp]
	and	ecx, 255				; 000000ffH
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _data$[ebp]
	mov	BYTE PTR [eax+edx], cl

; 125  : 		retsize = MAX_MSG_HDR_SIZE;

	mov	DWORD PTR _retsize$[ebp], 3

; 126  : 	}
; 127  : 	else {

	jmp	SHORT $LN1@WriteMessa
$LN2@WriteMessa:

; 128  : 		*data   = (VU_BYTE)hdr->length_;

	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR _hdr$[ebp]
	mov	al, BYTE PTR [edx+2]
	mov	BYTE PTR [ecx], al

; 129  : 		retsize = MIN_MSG_HDR_SIZE;

	mov	DWORD PTR _retsize$[ebp], 2
$LN1@WriteMessa:

; 130  : 	}
; 131  : 
; 132  : 	return retsize;

	mov	eax, DWORD PTR _retsize$[ebp]

; 133  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?WriteMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ENDP	; WriteMessageHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_retsize$ = -4						; size = 4
_data$ = 8						; size = 4
_hdr$ = 12						; size = 4
?ReadMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z PROC	; ReadMessageHeader

; 97   : static int ReadMessageHeader(VU_BYTE *data, VuMessageHeader* hdr){

	push	ebp
	mov	ebp, esp
	push	ecx

; 98   : 	int retsize;
; 99   : 	memcpy(&hdr->type_, data, sizeof(hdr->type_));

	push	1
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdr$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 100  : 	data += sizeof(hdr->type_);

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 1
	mov	DWORD PTR _data$[ebp], edx

; 101  : 
; 102  : 	if (*data & 0x80) {   // test for high bit set

	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 128				; 00000080H
	je	SHORT $LN2@ReadMessag

; 103  : 		hdr->length_  = static_cast<ushort>(((data[0] << 8) | data[1]));

	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	shl	ecx, 8
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [eax+edx]
	or	ecx, edx
	mov	eax, DWORD PTR _hdr$[ebp]
	mov	WORD PTR [eax+2], cx

; 104  : 		hdr->length_ &= 0x7fff; // mask off huffman bit

	mov	ecx, DWORD PTR _hdr$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	and	edx, 32767				; 00007fffH
	mov	eax, DWORD PTR _hdr$[ebp]
	mov	WORD PTR [eax+2], dx

; 105  : 		retsize       = MAX_MSG_HDR_SIZE;

	mov	DWORD PTR _retsize$[ebp], 3

; 106  : 	} 
; 107  : 	else {

	jmp	SHORT $LN1@ReadMessag
$LN2@ReadMessag:

; 108  : 		hdr->length_ = *data;

	mov	ecx, DWORD PTR _data$[ebp]
	movzx	dx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _hdr$[ebp]
	mov	WORD PTR [eax+2], dx

; 109  : 		retsize      = MIN_MSG_HDR_SIZE;

	mov	DWORD PTR _retsize$[ebp], 2
$LN1@ReadMessag:

; 110  : 	}
; 111  : 
; 112  : 	return retsize;

	mov	eax, DWORD PTR _retsize$[ebp]

; 113  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReadMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ENDP	; ReadMessageHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv82 = -4						; size = 4
_data$ = 8						; size = 4
_hdr$ = 12						; size = 4
?WritePacketHeader@@YAHPAEPAUVuPacketHeader@@@Z PROC	; WritePacketHeader

; 84   : static int WritePacketHeader(VU_BYTE *data, VuPacketHeader* hdr){

	push	ebp
	mov	ebp, esp
	push	ecx

; 85   : 	if (vuKnownConnectionId != vuNullSession) {

	push	OFFSET ?vuNullSession@@3VVU_SESSION_ID@@A ; vuNullSession
	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??9VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator!=
	test	eax, eax
	je	SHORT $LN1@WritePacke

; 86   : 		// write nothing -- destination will fill in from known data
; 87   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@WritePacke
$LN1@WritePacke:

; 88   : 	}
; 89   : 
; 90   : 	memcpy(data, &hdr->targetId_.creator_, sizeof(hdr->targetId_.creator_));

	push	4
	mov	eax, DWORD PTR _hdr$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 91   : 	data += sizeof(hdr->targetId_.creator_);

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 4
	mov	DWORD PTR _data$[ebp], edx

; 92   : 	memcpy(data, &hdr->targetId_.num_, sizeof(hdr->targetId_.num_));

	push	4
	mov	eax, DWORD PTR _hdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 93   : 
; 94   : 	return PACKET_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN4@WritePacke
	mov	DWORD PTR tv82[ebp], 0
	jmp	SHORT $LN5@WritePacke
$LN4@WritePacke:
	mov	DWORD PTR tv82[ebp], 8
$LN5@WritePacke:
	mov	eax, DWORD PTR tv82[ebp]
$LN2@WritePacke:

; 95   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?WritePacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ENDP	; WritePacketHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv86 = -4						; size = 4
_data$ = 8						; size = 4
_hdr$ = 12						; size = 4
?ReadPacketHeader@@YAHPAEPAUVuPacketHeader@@@Z PROC	; ReadPacketHeader

; 69   : static int ReadPacketHeader(VU_BYTE *data, VuPacketHeader* hdr){

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	if (vuKnownConnectionId != vuNullSession) {

	push	OFFSET ?vuNullSession@@3VVU_SESSION_ID@@A ; vuNullSession
	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??9VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator!=
	test	eax, eax
	je	SHORT $LN1@ReadPacket

; 71   : 		// read nothing  -- fill in from known data
; 72   : 		hdr->targetId_.creator_ = vuKnownConnectionId;

	mov	eax, DWORD PTR _hdr$[ebp]
	mov	ecx, DWORD PTR ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	mov	DWORD PTR [eax+4], ecx

; 73   : 		hdr->targetId_.num_     = VU_SESSION_ENTITY_ID;

	mov	edx, DWORD PTR _hdr$[ebp]
	mov	DWORD PTR [edx], 3

; 74   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@ReadPacket
$LN1@ReadPacket:

; 75   : 	}
; 76   : 
; 77   : 	memcpy(&hdr->targetId_.creator_, data, sizeof(hdr->targetId_.creator_));

	push	4
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdr$[ebp]
	add	ecx, 4
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 78   : 	data += sizeof(hdr->targetId_.creator_);

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 4
	mov	DWORD PTR _data$[ebp], edx

; 79   : 	memcpy(&hdr->targetId_.num_, data, sizeof(hdr->targetId_.num_));

	push	4
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdr$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 80   : 
; 81   : 	return PACKET_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN4@ReadPacket
	mov	DWORD PTR tv86[ebp], 0
	jmp	SHORT $LN5@ReadPacket
$LN4@ReadPacket:
	mov	DWORD PTR tv86[ebp], 8
$LN5@ReadPacket:
	mov	eax, DWORD PTR tv86[ebp]
$LN2@ReadPacket:

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReadPacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ENDP	; ReadPacketHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ?CAPIType@VuMessageHeader@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?CAPIType@VuMessageHeader@@QAEHXZ PROC			; VuMessageHeader::CAPIType, COMDAT
; _this$ = ecx

; 43   : 	int CAPIType(){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 44   : 		switch (type_){

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv66[ebp], cl
	cmp	BYTE PTR tv66[ebp], 14			; 0000000eH
	je	SHORT $LN3@CAPIType
	cmp	BYTE PTR tv66[ebp], 79			; 0000004fH
	jbe	SHORT $LN1@CAPIType
	cmp	BYTE PTR tv66[ebp], 81			; 00000051H
	jbe	SHORT $LN2@CAPIType
	jmp	SHORT $LN1@CAPIType
$LN3@CAPIType:

; 45   : 			case VU_POSITION_UPDATE_EVENT:
; 46   : 				return CAPI_POSUPD_BWTYPE;

	xor	eax, eax
	jmp	SHORT $LN6@CAPIType

; 47   : 			break;

	jmp	SHORT $LN6@CAPIType
$LN2@CAPIType:

; 48   : 			case CampDirtyDataMsg:
; 49   : 			case SimDirtyDataMsg:
; 50   : 				return CAPI_DIRTY_BWTYPE;

	mov	eax, 1
	jmp	SHORT $LN6@CAPIType

; 51   : 			break;

	jmp	SHORT $LN6@CAPIType
$LN1@CAPIType:

; 52   : 			case SendCampaignMsg:
; 53   : 			case SendPersistantList:
; 54   : 			case SendObjData:
; 55   : 			case SendUnitData:
; 56   : 			case SendVCMsg:
; 57   : 			case CampDataMsg:
; 58   : 				//return CAPI_JOIN_BW_TYPE;
; 59   : 			default:
; 60   : 				return CAPI_OTHER_BWTYPE;			

	mov	eax, 2
$LN6@CAPIType:

; 61   : 		}
; 62   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?CAPIType@VuMessageHeader@@QAEHXZ ENDP			; VuMessageHeader::CAPIType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??0VuMessageHeader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuMessageHeader@@QAE@XZ PROC				; VuMessageHeader::VuMessageHeader, COMDAT
; _this$ = ecx

; 41   : 	VuMessageHeader() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuMessageHeader@@QAE@XZ ENDP				; VuMessageHeader::VuMessageHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??0VuMessageHeader@@QAE@EG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 1
_length$ = 12						; size = 2
??0VuMessageHeader@@QAE@EG@Z PROC			; VuMessageHeader::VuMessageHeader, COMDAT
; _this$ = ecx

; 40   : 	VuMessageHeader(VU_MSG_TYPE type, ushort length): type_(type), length_(length) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _type$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _length$[ebp]
	mov	WORD PTR [edx+2], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VuMessageHeader@@QAE@EG@Z ENDP			; VuMessageHeader::VuMessageHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??0VuPacketHeader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuPacketHeader@@QAE@XZ PROC				; VuPacketHeader::VuPacketHeader, COMDAT
; _this$ = ecx

; 34   : 	VuPacketHeader() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuPacketHeader@@QAE@XZ ENDP				; VuPacketHeader::VuPacketHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??0VuPacketHeader@@QAE@VVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tid$ = 8						; size = 8
??0VuPacketHeader@@QAE@VVU_ID@@@Z PROC			; VuPacketHeader::VuPacketHeader, COMDAT
; _this$ = ecx

; 32   : 	VuPacketHeader(VU_ID tid)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tid$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tid$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VuPacketHeader@@QAE@VVU_ID@@@Z ENDP			; VuPacketHeader::VuPacketHeader
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??__EvuKnownConnectionId@@YAXXZ
text$yc	SEGMENT
??__EvuKnownConnectionId@@YAXXZ PROC			; `dynamic initializer for 'vuKnownConnectionId'', COMDAT

; 26   : VU_SESSION_ID vuKnownConnectionId(0);

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	pop	ebp
	ret	0
??__EvuKnownConnectionId@@YAXXZ ENDP			; `dynamic initializer for 'vuKnownConnectionId''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
;	COMDAT ??__EvuNullSession@@YAXXZ
text$yc	SEGMENT
??__EvuNullSession@@YAXXZ PROC				; `dynamic initializer for 'vuNullSession'', COMDAT

; 25   : VU_SESSION_ID vuNullSession(0);

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?vuNullSession@@3VVU_SESSION_ID@@A ; vuNullSession
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	pop	ebp
	ret	0
??__EvuNullSession@@YAXXZ ENDP				; `dynamic initializer for 'vuNullSession''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetFlyState@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlyState@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetFlyState, COMDAT
; _this$ = ecx

; 147  : 	uchar GetFlyState (void) const                { return flyState; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+513]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlyState@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetFlyState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuSessionsIterator@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuSessionsIterator@@UAEPAXI@Z PROC			; VuSessionsIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuSessionsIterator@@UAEPAXI@Z ENDP			; VuSessionsIterator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@VuSessionsIterator@@UAEHXZ PROC		; VuSessionsIterator::Cleanup
; _this$ = ecx

; 360  : VU_ERRCODE VuSessionsIterator::Cleanup(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 361  : 	return VuListIterator::Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@VuListIterator@@UAEHXZ		; VuListIterator::Cleanup

; 362  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@VuSessionsIterator@@UAEHXZ ENDP		; VuSessionsIterator::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurrEnt@VuSessionsIterator@@UAEPAVVuEntity@@XZ PROC	; VuSessionsIterator::CurrEnt
; _this$ = ecx

; 356  : VuEntity *VuSessionsIterator::CurrEnt(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 357  : 	return curr_->get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get

; 358  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CurrEnt@VuSessionsIterator@@UAEPAVVuEntity@@XZ ENDP	; VuSessionsIterator::CurrEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ PROC ; VuSessionsIterator::GetNext
; _this$ = ecx

; 352  : VuSessionEntity *VuSessionsIterator::GetNext(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 353  : 	return static_cast<VuSessionEntity*>(VuListIterator::GetNext());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext

; 354  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ENDP ; VuSessionsIterator::GetNext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ PROC ; VuSessionsIterator::GetFirst
; _this$ = ecx

; 349  : VuSessionEntity *VuSessionsIterator::GetFirst(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 	return static_cast<VuSessionEntity*>(VuListIterator::GetFirst());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst

; 351  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ENDP ; VuSessionsIterator::GetFirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuSessionsIterator@@UAE@XZ PROC			; VuSessionsIterator::~VuSessionsIterator
; _this$ = ecx

; 346  : VuSessionsIterator::~VuSessionsIterator(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionsIterator@@6B@

; 347  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuSessionsIterator@@UAE@XZ ENDP			; VuSessionsIterator::~VuSessionsIterator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv90 = -12						; size = 4
tv88 = -8						; size = 4
_this$ = -4						; size = 4
_group$ = 8						; size = 4
??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z PROC	; VuSessionsIterator::VuSessionsIterator
; _this$ = ecx

; 343  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _group$[ebp], 0
	je	SHORT $LN5@VuSessions
	mov	eax, DWORD PTR _group$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN6@VuSessions
$LN5@VuSessions:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN3@VuSessions
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	edx, DWORD PTR [eax+336]
	mov	DWORD PTR tv88[ebp], edx
	jmp	SHORT $LN4@VuSessions
$LN3@VuSessions:
	mov	DWORD PTR tv88[ebp], 0
$LN4@VuSessions:
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv90[ebp], eax
$LN6@VuSessions:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuSessionsIterator@@6B@

; 344  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ENDP	; VuSessionsIterator::VuSessionsIterator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator->, COMDAT
; _this$ = ecx

; 367  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 368  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAV?$VuBin@VVuEntity@@@@@std@@SAPAV?$VuBin@VVuEntity@@@@AAV3@@Z ; std::pointer_traits<VuBin<VuEntity> *>::pointer_to
	add	esp, 4

; 369  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@SAAAV?$VuBin@VVuEntity@@@@PAU?$_List_node@V?$VuBin@VVuEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<VuEntity> > >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<VuEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuSessionFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuSessionFilter@@UAEPAXI@Z PROC			; VuSessionFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuSessionFilter@@UAEPAXI@Z ENDP			; VuSessionFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0VuSessionFilter@@IAE@PAV0@@Z PROC			; VuSessionFilter::VuSessionFilter
; _this$ = ecx

; 374  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@PAV0@@Z		; VuFilter::VuFilter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuSessionFilter@@6B@
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR [edx+8], ecx

; 375  : 	// empty
; 376  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuSessionFilter@@IAE@PAV0@@Z ENDP			; VuSessionFilter::VuSessionFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv75 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ PROC		; VuSessionFilter::Copy
; _this$ = ecx

; 407  : VuFilter *VuSessionFilter::Copy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 408  : 	return new VuSessionFilter(this);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0VuSessionFilter@@IAE@PAV0@@Z		; VuSessionFilter::VuSessionFilter
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv75[ebp], 0
$LN4@Copy:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]

; 409  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@VuSessionFilter@@UAEPAVVuFilter@@XZ ENDP		; VuSessionFilter::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Notice@VuSessionFilter@@UAEEPAVVuMessage@@@Z PROC	; VuSessionFilter::Notice
; _this$ = ecx

; 399  : VU_BOOL VuSessionFilter::Notice(VuMessage* event) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 400  : 	// danm_TBD: do we need VU_FULL_UPDATE event as well?
; 401  : 	if ((1<<event->Type()) & VU_TRANSFER_EVENT) {

	mov	ecx, DWORD PTR _event$[ebp]
	call	?Type@VuMessage@@QBEEXZ			; VuMessage::Type
	movzx	ecx, al
	mov	eax, 1
	shl	eax, cl
	and	eax, 12					; 0000000cH
	je	SHORT $LN1@Notice

; 402  : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN2@Notice
$LN1@Notice:

; 403  : 	}
; 404  : 	return FALSE;

	xor	al, al
$LN2@Notice:

; 405  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Notice@VuSessionFilter@@UAEEPAVVuMessage@@@Z ENDP	; VuSessionFilter::Notice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -36						; size = 8
$T2 = -28						; size = 8
$T3 = -20						; size = 8
$T4 = -12						; size = 8
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@VuSessionFilter@@UAEHPAVVuEntity@@0@Z PROC	; VuSessionFilter::Compare
; _this$ = ecx

; 390  : int VuSessionFilter::Compare(VuEntity* ent1, VuEntity* ent2){

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 	if ((VU_KEY)ent2->Id() > (VU_KEY)ent1->Id()) {

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	mov	esi, eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	cmp	esi, eax
	jbe	SHORT $LN3@Compare

; 392  : 		return -1;

	or	eax, -1
	jmp	SHORT $LN4@Compare
	jmp	SHORT $LN2@Compare
$LN3@Compare:

; 393  : 	} else if ((VU_KEY)ent2->Id() < (VU_KEY)ent1->Id()) {

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	mov	esi, eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	cmp	esi, eax
	jae	SHORT $LN2@Compare

; 394  : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN4@Compare
$LN2@Compare:

; 395  : 	}
; 396  : 	return 0;

	xor	eax, eax
$LN4@Compare:

; 397  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@VuSessionFilter@@UAEHPAVVuEntity@@0@Z ENDP	; VuSessionFilter::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?RemoveTest@VuSessionFilter@@UAEEPAVVuEntity@@@Z PROC	; VuSessionFilter::RemoveTest
; _this$ = ecx

; 386  : VU_BOOL VuSessionFilter::RemoveTest(VuEntity* ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 387  : 	return ent->IsSession();

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 388  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@VuSessionFilter@@UAEEPAVVuEntity@@@Z ENDP	; VuSessionFilter::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
tv83 = -4						; size = 4
_ent$ = 8						; size = 4
?Test@VuSessionFilter@@UAEEPAVVuEntity@@@Z PROC		; VuSessionFilter::Test
; _this$ = ecx

; 382  : VU_BOOL VuSessionFilter::Test(VuEntity* ent) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 383  : 	return static_cast<VU_BOOL>((ent->IsSession() && ((VuSessionEntity*)ent)->GameId() == groupId_) ? TRUE : FALSE);

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Test
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Test
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN4@Test
$LN3@Test:
	mov	DWORD PTR tv83[ebp], 0
$LN4@Test:
	mov	al, BYTE PTR tv83[ebp]

; 384  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Test@VuSessionFilter@@UAEEPAVVuEntity@@@Z ENDP		; VuSessionFilter::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuSessionFilter@@UAE@XZ PROC				; VuSessionFilter::~VuSessionFilter
; _this$ = ecx

; 378  : VuSessionFilter::~VuSessionFilter(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionFilter@@6B@

; 379  : 	// empty
; 380  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuSessionFilter@@UAE@XZ ENDP				; VuSessionFilter::~VuSessionFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_groupId$ = 8						; size = 8
??0VuSessionFilter@@QAE@VVU_ID@@@Z PROC			; VuSessionFilter::VuSessionFilter
; _this$ = ecx

; 369  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionFilter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _groupId$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _groupId$[ebp+4]
	mov	DWORD PTR [ecx+8], eax

; 370  : 	// empty
; 371  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VuSessionFilter@@QAE@VVU_ID@@@Z ENDP			; VuSessionFilter::VuSessionFilter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuFilter@@UAEPAXI@Z PROC				; VuFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuFilter@@UAEPAXI@Z ENDP				; VuFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuFilter@@IAE@PAV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0VuFilter@@IAE@PAV0@@Z PROC				; VuFilter::VuFilter, COMDAT
; _this$ = ecx

; 42   : 	VuFilter(VuFilter *) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuFilter@@IAE@PAV0@@Z ENDP				; VuFilter::VuFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuFilter@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuFilter@@IAE@XZ PROC				; VuFilter::VuFilter, COMDAT
; _this$ = ecx

; 40   : 	VuFilter() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuFilter@@IAE@XZ ENDP				; VuFilter::VuFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_thread.h
;	COMDAT ?SendQueue@VuMainThread@@QBEPAVVuPendingSendQueue@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SendQueue@VuMainThread@@QBEPAVVuPendingSendQueue@@XZ PROC ; VuMainThread::SendQueue, COMDAT
; _this$ = ecx

; 92   : 	VuPendingSendQueue *SendQueue() const { return const_cast<VuMainThread*>(this)->sendQueue_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?SendQueue@VuMainThread@@QBEPAVVuPendingSendQueue@@XZ ENDP ; VuMainThread::SendQueue
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuGlobalGroup@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGlobalGroup@@UAEPAXI@Z PROC			; VuGlobalGroup::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGlobalGroup@@UAE@XZ		; VuGlobalGroup::~VuGlobalGroup
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGlobalGroup@@UAEPAXI@Z ENDP			; VuGlobalGroup::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?Connected@VuGlobalGroup@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Connected@VuGlobalGroup@@QAEEXZ PROC			; VuGlobalGroup::Connected, COMDAT
; _this$ = ecx

; 472  : 	VU_BOOL Connected() { return connected_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+344]
	mov	esp, ebp
	pop	ebp
	ret	0
?Connected@VuGlobalGroup@@QAEEXZ ENDP			; VuGlobalGroup::Connected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?HasTarget@VuGlobalGroup@@UAEEVVU_ID@@@Z PROC		; VuGlobalGroup::HasTarget
; _this$ = ecx

; 2764 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2765 : 	// global group includes everybody
; 2766 : 	return TRUE;

	mov	al, 1

; 2767 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?HasTarget@VuGlobalGroup@@UAEEVVU_ID@@@Z ENDP		; VuGlobalGroup::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@VuGlobalGroup@@UAEHPAU_iobuf@@@Z PROC		; VuGlobalGroup::Save
; _this$ = ecx

; 2778 : int VuGlobalGroup::Save(FILE *) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2779 : 	return 0;

	xor	eax, eax

; 2780 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuGlobalGroup@@UAEHPAU_iobuf@@@Z ENDP		; VuGlobalGroup::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@VuGlobalGroup@@UAEHPAPAE@Z PROC			; VuGlobalGroup::Save
; _this$ = ecx

; 2774 : int VuGlobalGroup::Save(VU_BYTE **) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2775 : 	return 0;

	xor	eax, eax

; 2776 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuGlobalGroup@@UAEHPAPAE@Z ENDP			; VuGlobalGroup::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuGlobalGroup@@UAEHXZ PROC			; VuGlobalGroup::SaveSize
; _this$ = ecx

; 2770 : int VuGlobalGroup::SaveSize() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2771 : 	return 0;

	xor	eax, eax

; 2772 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuGlobalGroup@@UAEHXZ ENDP			; VuGlobalGroup::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuGlobalGroup@@UAE@XZ PROC				; VuGlobalGroup::~VuGlobalGroup
; _this$ = ecx

; 2759 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGlobalGroup@@6B@

; 2760 : 	// empty
; 2761 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuGlobalGroup@@UAE@XZ ENDP				; VuGlobalGroup::~VuGlobalGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0VuGlobalGroup@@QAE@XZ PROC				; VuGlobalGroup::VuGlobalGroup
; _this$ = ecx

; 2749 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGlobalGroup@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?globalGrpFilter@@3VGlobalGroupFilter@@A ; globalGrpFilter
	mov	eax, DWORD PTR ?vuxWorldName@@3PADA	; vuxWorldName
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z ; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGlobalGroup@@6B@

; 2750 : 	// make certain owner is NULL session
; 2751 : 	share_.ownerId_     = VU_SESSION_NULL_CONNECTION;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+24], ecx

; 2752 : 	share_.id_.creator_	= (0);

	push	0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+16], eax

; 2753 : 	share_.id_.num_     = VU_GLOBAL_GROUP_ENTITY_ID;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 1

; 2754 : 	sessionMax_         = 1024;

	mov	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+332], dx

; 2755 : 	connected_          = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+344], 0

; 2756 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGlobalGroup@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
__ehhandler$??0VuGlobalGroup@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGlobalGroup@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGlobalGroup@@QAE@XZ ENDP				; VuGlobalGroup::VuGlobalGroup
; Function compile flags: /Odtp
;	COMDAT ??_GVuPlayerPoolGame@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuPlayerPoolGame@@UAEPAXI@Z PROC			; VuPlayerPoolGame::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuPlayerPoolGame@@UAE@XZ		; VuPlayerPoolGame::~VuPlayerPoolGame
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuPlayerPoolGame@@UAEPAXI@Z ENDP			; VuPlayerPoolGame::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_dbiter$2 = -76						; size = 24
$T3 = -52						; size = 8
$T4 = -44						; size = 8
$T5 = -36						; size = 8
$T6 = -28						; size = 4
_next$7 = -24						; size = 4
_this$ = -20						; size = 4
_ent$8 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_sess$ = 8						; size = 4
?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z PROC ; VuPlayerPoolGame::Distribute
; _this$ = ecx

; 3208 : VU_ERRCODE VuPlayerPoolGame::Distribute(VuSessionEntity *sess){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3209 : 	// just remove all ents managed by session
; 3210 : 	if (sess && (Id() == sess->GameId())) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	$LN6@Distribute
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN6@Distribute

; 3211 : 		VuDatabaseIterator dbiter;

	lea	ecx, DWORD PTR _dbiter$2[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3212 : 		for (

	lea	ecx, DWORD PTR _dbiter$2[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$8[ebp], eax

; 3213 : 			VuEntity *ent = dbiter.GetFirst(), *next;
; 3214 : 			ent != NULL;

	jmp	SHORT $LN5@Distribute
$LN4@Distribute:

; 3215 : 			ent = next
; 3216 : 		){

	mov	eax, DWORD PTR _next$7[ebp]
	mov	DWORD PTR _ent$8[ebp], eax
$LN5@Distribute:
	cmp	DWORD PTR _ent$8[ebp], 0
	je	$LN3@Distribute

; 3217 : 			next = dbiter.GetNext();

	lea	ecx, DWORD PTR _dbiter$2[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _next$7[ebp], eax

; 3218 : 			if (
; 3219 : 				(ent->OwnerId().creator_ == sess->SessionId()) &&
; 3220 : 				(!ent->IsPersistent()) &&
; 3221 : 				(sess->VuState() != VU_MEM_ACTIVE || (ent->IsTransferrable() && !ent->IsGlobal()))
; 3222 : 			){

	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$8[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN2@Distribute
	mov	ecx, DWORD PTR _ent$8[ebp]
	call	?IsPersistent@VuEntity@@QBEEXZ		; VuEntity::IsPersistent
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN1@Distribute
	mov	ecx, DWORD PTR _ent$8[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Distribute
	mov	ecx, DWORD PTR _ent$8[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@Distribute
$LN1@Distribute:

; 3223 : 				vuDatabase->Remove(ent);

	mov	eax, DWORD PTR _ent$8[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove
$LN2@Distribute:

; 3224 : 			}
; 3225 : 		}

	jmp	$LN4@Distribute
$LN3@Distribute:

; 3226 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dbiter$2[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
$LN6@Distribute:

; 3227 : 	return VU_SUCCESS;

	mov	eax, 1

; 3228 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR _dbiter$2[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__ehhandler$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Distribute@VuPlayerPoolGame@@UAEHPAVVuSessionEntity@@@Z ENDP ; VuPlayerPoolGame::Distribute
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@VuPlayerPoolGame@@UAEHPAU_iobuf@@@Z PROC		; VuPlayerPoolGame::Save
; _this$ = ecx

; 3204 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3205 : 	return 0;

	xor	eax, eax

; 3206 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuPlayerPoolGame@@UAEHPAU_iobuf@@@Z ENDP		; VuPlayerPoolGame::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Save@VuPlayerPoolGame@@UAEHPAPAE@Z PROC		; VuPlayerPoolGame::Save
; _this$ = ecx

; 3199 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3200 : 	return 0;

	xor	eax, eax

; 3201 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuPlayerPoolGame@@UAEHPAPAE@Z ENDP		; VuPlayerPoolGame::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuPlayerPoolGame@@UAEHXZ PROC			; VuPlayerPoolGame::SaveSize
; _this$ = ecx

; 3194 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3195 : 	return 0;

	xor	eax, eax

; 3196 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuPlayerPoolGame@@UAEHXZ ENDP			; VuPlayerPoolGame::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuPlayerPoolGame@@UAE@XZ PROC			; VuPlayerPoolGame::~VuPlayerPoolGame
; _this$ = ecx

; 3188 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPlayerPoolGame@@6B@

; 3189 : 	// empty
; 3190 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGameEntity@@UAE@XZ			; VuGameEntity::~VuGameEntity
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuPlayerPoolGame@@UAE@XZ ENDP			; VuPlayerPoolGame::~VuPlayerPoolGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_filter$ = -64						; size = 12
$T2 = -52						; size = 8
$T3 = -44						; size = 4
tv168 = -40						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
tv197 = -28						; size = 4
$T6 = -24						; size = 4
$T7 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_domainMask$ = 8					; size = 4
??0VuPlayerPoolGame@@QAE@K@Z PROC			; VuPlayerPoolGame::VuPlayerPoolGame
; _this$ = ecx

; 3172 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuPlayerPoolGame@@QAE@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?vuxWorldName@@3PADA	; vuxWorldName
	push	eax
	push	OFFSET ??_C@_0M@LFHPJHGA@Player?5Pool?$AA@
	mov	ecx, DWORD PTR _domainMask$[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGameEntity@@IAE@HKPAD0@Z		; VuGameEntity::VuGameEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuPlayerPoolGame@@6B@

; 3173 : 	// make certain owner is NULL session
; 3174 : 	share_.ownerId_     = VU_SESSION_NULL_CONNECTION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+24], edx

; 3175 : 	share_.id_.creator_	= (0);

	push	0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [eax+16], ecx

; 3176 : 	share_.id_.num_     = VU_PLAYER_POOL_ENTITY_ID;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 2

; 3177 : 	sessionMax_         = 255;

	mov	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+332], ax

; 3178 : 
; 3179 : 	// hack, hack, hack up a lung
; 3180 : 	sessionCollection_->Unregister();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 3181 : 	delete sessionCollection_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T7[ebp], edx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN3@VuPlayerPo
	push	1
	mov	eax, DWORD PTR $T7[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN4@VuPlayerPo
$LN3@VuPlayerPo:
	mov	DWORD PTR tv168[ebp], 0
$LN4@VuPlayerPo:

; 3182 : 	VuSessionFilter filter(Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??0VuSessionFilter@@QAE@VVU_ID@@@Z	; VuSessionFilter::VuSessionFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3183 : 	sessionCollection_ = new VuOrderedList(&filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN5@VuPlayerPo
	lea	ecx, DWORD PTR _filter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuOrderedList@@QAE@PAVVuFilter@@@Z	; VuOrderedList::VuOrderedList
	mov	DWORD PTR tv197[ebp], eax
	jmp	SHORT $LN6@VuPlayerPo
$LN5@VuPlayerPo:
	mov	DWORD PTR tv197[ebp], 0
$LN6@VuPlayerPo:
	mov	edx, DWORD PTR tv197[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+336], ecx

; 3184 : 	sessionCollection_->Register();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 3185 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGameEntity@@UAE@XZ			; VuGameEntity::~VuGameEntity
__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$1:
	lea	ecx, DWORD PTR _filter$[ebp]
	jmp	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
__unwindfunclet$??0VuPlayerPoolGame@@QAE@K@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuPlayerPoolGame@@QAE@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuPlayerPoolGame@@QAE@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuPlayerPoolGame@@QAE@K@Z ENDP			; VuPlayerPoolGame::VuPlayerPoolGame
; Function compile flags: /Odtp
;	COMDAT ??_GVuGameEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGameEntity@@UAEPAXI@Z PROC			; VuGameEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGameEntity@@UAE@XZ			; VuGameEntity::~VuGameEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGameEntity@@UAEPAXI@Z ENDP			; VuGameEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuGameEntity@@AAEHXZ PROC			; VuGameEntity::LocalSize
; _this$ = ecx

; 2860 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2861 : #ifdef VU_TRACK_LATENCY
; 2862 : 	short count = sessionCollection_->Count();
; 2863 : #endif
; 2864 : 
; 2865 : 	return sizeof(domainMask_)
; 2866 : 			+ strlen(gameName_) + 1
; 2867 : #ifdef VU_TRACK_LATENCY
; 2868 : 			+ sizeof(count)
; 2869 : 			+ (sizeof(VU_TIME) * count)  // session latency
; 2870 : #endif //VU_TRACK_LATENCY
; 2871 : 			;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 5

; 2872 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuGameEntity@@AAEHXZ ENDP			; VuGameEntity::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$ = -40						; size = 12
$T2 = -28						; size = 4
_nextSess$3 = -24					; size = 4
_this$ = -20						; size = 4
_sess$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemovalCallback@VuGameEntity@@MAEHXZ PROC		; VuGameEntity::RemovalCallback
; _this$ = ecx

; 3027 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemovalCallback@VuGameEntity@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3028 : 	// take care of sessions we still think are in this game...
; 3029 : 	VuSessionsIterator iter(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3030 : 	for (

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _sess$4[ebp], eax

; 3031 : 		VuSessionEntity* sess = iter.GetFirst(), *nextSess;
; 3032 : 		sess && (sess->Game() == this);

	jmp	SHORT $LN3@RemovalCal
$LN2@RemovalCal:

; 3033 : 		sess = nextSess
; 3034 : 	){

	mov	ecx, DWORD PTR _nextSess$3[ebp]
	mov	DWORD PTR _sess$4[ebp], ecx
$LN3@RemovalCal:
	cmp	DWORD PTR _sess$4[ebp], 0
	je	SHORT $LN1@RemovalCal
	mov	ecx, DWORD PTR _sess$4[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@RemovalCal

; 3035 : 		nextSess = iter.GetNext();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _nextSess$3[ebp], eax

; 3036 : 		sess->JoinGame(vuPlayerPoolGroup);

	mov	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	edx
	mov	ecx, DWORD PTR _sess$4[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame

; 3037 : 	}

	jmp	SHORT $LN2@RemovalCal
$LN1@RemovalCal:

; 3038 : 	VuxGroupDisconnect(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?VuxGroupDisconnect@@YAXPAVVuGroupEntity@@@Z ; VuxGroupDisconnect
	add	esp, 4

; 3039 : 	return VU_SUCCESS;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T2[ebp]

; 3040 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemovalCallback@VuGameEntity@@MAEHXZ$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?RemovalCallback@VuGameEntity@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemovalCallback@VuGameEntity@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemovalCallback@VuGameEntity@@MAEHXZ ENDP		; VuGameEntity::RemovalCallback
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -712						; size = 8
$T3 = -704						; size = 8
$T4 = -696						; size = 8
$T5 = -688						; size = 8
$T6 = -680						; size = 8
$T7 = -672						; size = 8
$T8 = -664						; size = 8
$T9 = -656						; size = 8
$T10 = -648						; size = 8
$T11 = -640						; size = 8
$T12 = -632						; size = 8
$T13 = -624						; size = 8
$T14 = -616						; size = 8
$T15 = -608						; size = 8
$T16 = -600						; size = 8
$T17 = -592						; size = 8
$T18 = -584						; size = 8
$T19 = -576						; size = 8
$T20 = -568						; size = 8
_dbiter$21 = -560					; size = 24
_dbiter$22 = -536					; size = 24
$T23 = -512						; size = 4
$T24 = -508						; size = 4
$T25 = -504						; size = 4
$T26 = -500						; size = 4
$T27 = -496						; size = 4
_grpiter$28 = -492					; size = 12
_next$29 = -480						; size = 4
$T30 = -476						; size = 4
_next$31 = -472						; size = 4
$T32 = -468						; size = 4
_siter$33 = -464					; size = 12
_ent2$34 = -452						; size = 4
_index$35 = -448					; size = 4
_index$36 = -444					; size = 4
_ent2$37 = -440						; size = 4
_totalcount$38 = -436					; size = 4
_this$ = -432						; size = 4
_test_ent$39 = -428					; size = 4
_test_ent$40 = -424					; size = 4
_ent$41 = -420						; size = 4
_ent$42 = -416						; size = 4
_cs$43 = -412						; size = 4
_ent$44 = -408						; size = 4
_i$45 = -404						; size = 4
_count$46 = -400					; size = 128
_myseedlower$47 = -272					; size = 128
_myseedupper$48 = -144					; size = 128
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sess$ = 8						; size = 4
?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z PROC ; VuGameEntity::Distribute
; _this$ = ecx

; 3044 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 700				; 000002bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3045 : 	if (!sess || (Id() == sess->GameId())) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN48@Distribute
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	push	eax
	lea	ecx, DWORD PTR $T20[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN49@Distribute
$LN48@Distribute:

; 3046 : 		int i;
; 3047 : 		int count[32];
; 3048 : 		int totalcount = 0;

	mov	DWORD PTR _totalcount$38[ebp], 0

; 3049 : 		int myseedlower[32];
; 3050 : 		int myseedupper[32];
; 3051 : 		for (i = 0; i < 32; i++) {

	mov	DWORD PTR _i$45[ebp], 0
	jmp	SHORT $LN47@Distribute
$LN46@Distribute:
	mov	eax, DWORD PTR _i$45[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45[ebp], eax
$LN47@Distribute:
	cmp	DWORD PTR _i$45[ebp], 32		; 00000020H
	jge	SHORT $LN45@Distribute

; 3052 : 			count[i] = 0;

	mov	ecx, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _count$46[ebp+ecx*4], 0

; 3053 : 			myseedlower[i] = 0;

	mov	edx, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _myseedlower$47[ebp+edx*4], 0

; 3054 : 			myseedupper[i] = vuLocalSessionEntity->LoadMetric() - 1;

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?LoadMetric@VuSessionEntity@@QAEEXZ	; VuSessionEntity::LoadMetric
	movzx	eax, al
	sub	eax, 1
	mov	ecx, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _myseedupper$48[ebp+ecx*4], eax

; 3055 : 		}

	jmp	SHORT $LN46@Distribute
$LN45@Distribute:

; 3056 : 
; 3057 : 		VuSessionsIterator siter(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	ecx, DWORD PTR _siter$33[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3058 : 		VuSessionEntity *cs = siter.GetFirst();

	lea	ecx, DWORD PTR _siter$33[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _cs$43[ebp], eax
$LN44@Distribute:

; 3059 : 		while (cs) {

	cmp	DWORD PTR _cs$43[ebp], 0
	je	$LN43@Distribute

; 3060 : 			if (!sess || sess->Id() != cs->Id()) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN41@Distribute
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN42@Distribute
$LN41@Distribute:

; 3061 : 				for (i = 0; i < 32; i++) {

	mov	DWORD PTR _i$45[ebp], 0
	jmp	SHORT $LN40@Distribute
$LN39@Distribute:
	mov	eax, DWORD PTR _i$45[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45[ebp], eax
$LN40@Distribute:
	cmp	DWORD PTR _i$45[ebp], 32		; 00000020H
	jge	SHORT $LN42@Distribute

; 3062 : 					if (1<<i & cs->DomainMask()) {

	mov	esi, 1
	mov	ecx, DWORD PTR _i$45[ebp]
	shl	esi, cl
	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?DomainMask@VuSessionEntity@@QAEKXZ	; VuSessionEntity::DomainMask
	and	esi, eax
	je	SHORT $LN37@Distribute

; 3063 : 						count[i] += cs->LoadMetric();

	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?LoadMetric@VuSessionEntity@@QAEEXZ	; VuSessionEntity::LoadMetric
	movzx	ecx, al
	mov	edx, DWORD PTR _i$45[ebp]
	add	ecx, DWORD PTR _count$46[ebp+edx*4]
	mov	eax, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _count$46[ebp+eax*4], ecx

; 3064 : 						totalcount++;

	mov	ecx, DWORD PTR _totalcount$38[ebp]
	add	ecx, 1
	mov	DWORD PTR _totalcount$38[ebp], ecx
$LN37@Distribute:

; 3065 : 					}
; 3066 : 				}

	jmp	SHORT $LN39@Distribute
$LN42@Distribute:

; 3067 : 			}
; 3068 : 			cs = siter.GetNext();

	lea	ecx, DWORD PTR _siter$33[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _cs$43[ebp], eax

; 3069 : 		}

	jmp	$LN44@Distribute
$LN43@Distribute:

; 3070 : 		if (totalcount == 0) {

	cmp	DWORD PTR _totalcount$38[ebp], 0
	jne	SHORT $LN36@Distribute

; 3071 : 			// nothing to do!  just return...
; 3072 : 			return VU_NO_OP;

	mov	DWORD PTR $T30[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _siter$33[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T30[ebp]
	jmp	$LN50@Distribute
$LN36@Distribute:

; 3073 : 		}
; 3074 : 		cs = siter.GetFirst();

	lea	ecx, DWORD PTR _siter$33[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _cs$43[ebp], eax
$LN35@Distribute:

; 3075 : 		while (cs && cs != vuLocalSessionEntity) {

	cmp	DWORD PTR _cs$43[ebp], 0
	je	$LN34@Distribute
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	edx, DWORD PTR _cs$43[ebp]
	push	edx
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN34@Distribute

; 3076 : 			if (!sess || sess->Id() != cs->Id()) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN32@Distribute
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN33@Distribute
$LN32@Distribute:

; 3077 : 				for (i = 0; i < 32; i++) {

	mov	DWORD PTR _i$45[ebp], 0
	jmp	SHORT $LN31@Distribute
$LN30@Distribute:
	mov	ecx, DWORD PTR _i$45[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$45[ebp], ecx
$LN31@Distribute:
	cmp	DWORD PTR _i$45[ebp], 32		; 00000020H
	jge	SHORT $LN33@Distribute

; 3078 : 					if (1<<i & cs->DomainMask()) {

	mov	esi, 1
	mov	ecx, DWORD PTR _i$45[ebp]
	shl	esi, cl
	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?DomainMask@VuSessionEntity@@QAEKXZ	; VuSessionEntity::DomainMask
	and	esi, eax
	je	SHORT $LN28@Distribute

; 3079 : 						myseedlower[i]+=cs->LoadMetric();

	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?LoadMetric@VuSessionEntity@@QAEEXZ	; VuSessionEntity::LoadMetric
	movzx	edx, al
	mov	eax, DWORD PTR _i$45[ebp]
	add	edx, DWORD PTR _myseedlower$47[ebp+eax*4]
	mov	ecx, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _myseedlower$47[ebp+ecx*4], edx

; 3080 : 						myseedupper[i]+=cs->LoadMetric();

	mov	ecx, DWORD PTR _cs$43[ebp]
	call	?LoadMetric@VuSessionEntity@@QAEEXZ	; VuSessionEntity::LoadMetric
	movzx	edx, al
	mov	eax, DWORD PTR _i$45[ebp]
	add	edx, DWORD PTR _myseedupper$48[ebp+eax*4]
	mov	ecx, DWORD PTR _i$45[ebp]
	mov	DWORD PTR _myseedupper$48[ebp+ecx*4], edx
$LN28@Distribute:

; 3081 : 					}
; 3082 : 				}

	jmp	$LN30@Distribute
$LN33@Distribute:

; 3083 : 			}
; 3084 : 			cs = siter.GetNext();

	lea	ecx, DWORD PTR _siter$33[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _cs$43[ebp], eax

; 3085 : 		}

	jmp	$LN35@Distribute
$LN34@Distribute:

; 3086 : 		if (!cs) {

	cmp	DWORD PTR _cs$43[ebp], 0
	jne	$LN27@Distribute

; 3087 : 			if (!sess) {

	cmp	DWORD PTR _sess$[ebp], 0
	jne	SHORT $LN26@Distribute

; 3088 : 				// note: something is terribly amiss... so bail...
; 3089 : 				return VU_ERROR;

	mov	DWORD PTR $T32[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _siter$33[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T32[ebp]
	jmp	$LN50@Distribute

; 3090 : 			} else {

	jmp	$LN25@Distribute
$LN26@Distribute:

; 3091 : 				// ... most likely, we did not find any viable sessions
; 3092 : 				VuDatabaseIterator dbiter;

	lea	ecx, DWORD PTR _dbiter$22[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3093 : 				VuEntity *ent = dbiter.GetFirst(), *next;

	lea	ecx, DWORD PTR _dbiter$22[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$41[ebp], eax
$LN24@Distribute:

; 3094 : 				while (ent) {

	cmp	DWORD PTR _ent$41[ebp], 0
	je	$LN23@Distribute

; 3095 : 					next = dbiter.GetNext();

	lea	ecx, DWORD PTR _dbiter$22[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _next$31[ebp], eax

; 3096 : 					if ((ent->OwnerId().creator_ == sess->SessionId()) && (sess!=ent) &&
; 3097 : 									(sess->VuState() != VU_MEM_ACTIVE ||
; 3098 : 									 (ent->IsTransferrable() && !ent->IsGlobal()))){

	lea	edx, DWORD PTR $T24[ebp]
	push	edx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$41[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN22@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	cmp	ecx, DWORD PTR _ent$41[ebp]
	je	SHORT $LN22@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN21@Distribute
	mov	ecx, DWORD PTR _ent$41[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@Distribute
	mov	ecx, DWORD PTR _ent$41[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN22@Distribute
$LN21@Distribute:

; 3099 : 						vuDatabase->Remove(ent);

	mov	ecx, DWORD PTR _ent$41[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove
$LN22@Distribute:

; 3100 : 					}
; 3101 : 					ent = next;

	mov	edx, DWORD PTR _next$31[ebp]
	mov	DWORD PTR _ent$41[ebp], edx

; 3102 : 				}

	jmp	$LN24@Distribute
$LN23@Distribute:

; 3103 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dbiter$22[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
$LN25@Distribute:
	jmp	$LN20@Distribute
$LN27@Distribute:

; 3104 : 		} else if (Id() == vuLocalSessionEntity->GameId()) {

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN19@Distribute

; 3105 : 			VuDatabaseIterator dbiter;

	lea	ecx, DWORD PTR _dbiter$21[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 3106 : 			VuEntity *ent = dbiter.GetFirst(), *next;

	lea	ecx, DWORD PTR _dbiter$21[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$42[ebp], eax

; 3107 : 			VuEntity *test_ent = ent;

	mov	eax, DWORD PTR _ent$42[ebp]
	mov	DWORD PTR _test_ent$39[ebp], eax
$LN18@Distribute:

; 3108 : 			VuEntity *ent2;
; 3109 : 			int index;
; 3110 : 			while (ent) {

	cmp	DWORD PTR _ent$42[ebp], 0
	je	$LN17@Distribute

; 3111 : 				next = dbiter.GetNext();

	lea	ecx, DWORD PTR _dbiter$21[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _next$29[ebp], eax

; 3112 : 				if (!ent->IsTransferrable() && 
; 3113 : 								sess && sess->VuState() != VU_MEM_ACTIVE  &&
; 3114 : 								ent->OwnerId().creator_ == sess->SessionId()) {

	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@Distribute
	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN16@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN16@Distribute
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN16@Distribute

; 3115 : 					vuDatabase->Remove(ent);

	mov	ecx, DWORD PTR _ent$42[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 3116 : 				} else if ((!sess || (ent->OwnerId().creator_ == sess->SessionId())) &&

	jmp	$LN15@Distribute
$LN16@Distribute:

; 3117 : 								((1<<ent->Domain()) & vuLocalSessionEntity->DomainMask())) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN13@Distribute
	lea	edx, DWORD PTR $T25[ebp]
	push	edx
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	$LN15@Distribute
$LN13@Distribute:
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	esi, 1
	shl	esi, cl
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?DomainMask@VuSessionEntity@@QAEKXZ	; VuSessionEntity::DomainMask
	and	esi, eax
	je	$LN15@Distribute

; 3118 : 					if (ent->Association() != vuNullId &&
; 3119 : 									(ent2 = vuDatabase->Find(ent->Association())) != 0) {

	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?Association@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::Association
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@Distribute
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?Association@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::Association
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent2$37[ebp], eax
	cmp	DWORD PTR _ent2$37[ebp], 0
	je	SHORT $LN12@Distribute

; 3120 : 						test_ent = ent2;

	mov	eax, DWORD PTR _ent2$37[ebp]
	mov	DWORD PTR _test_ent$39[ebp], eax
$LN12@Distribute:

; 3121 : 					}
; 3122 : 					index = test_ent->Id().num_ % count[test_ent->Domain()];

	lea	ecx, DWORD PTR $T13[ebp]
	push	ecx
	mov	ecx, DWORD PTR _test_ent$39[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	esi, eax
	mov	ecx, DWORD PTR _test_ent$39[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	eax, DWORD PTR [esi]
	xor	edx, edx
	div	DWORD PTR _count$46[ebp+ecx*4]
	mov	DWORD PTR _index$35[ebp], edx

; 3123 : 					if (index >= myseedlower[test_ent->Domain()] &&
; 3124 : 									index <= myseedupper[test_ent->Domain()] &&
; 3125 : 									ent->IsTransferrable() && !ent->IsGlobal()) {

	mov	ecx, DWORD PTR _test_ent$39[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	edx, al
	mov	eax, DWORD PTR _index$35[ebp]
	cmp	eax, DWORD PTR _myseedlower$47[ebp+edx*4]
	jl	SHORT $LN15@Distribute
	mov	ecx, DWORD PTR _test_ent$39[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	edx, DWORD PTR _index$35[ebp]
	cmp	edx, DWORD PTR _myseedupper$48[ebp+ecx*4]
	jg	SHORT $LN15@Distribute
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@Distribute
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@Distribute

; 3126 : 						ent->SetOwnerId(vuLocalSession);

	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR _ent$42[ebp]
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId
$LN15@Distribute:

; 3127 : 					}
; 3128 : 				}
; 3129 : 				ent = next;

	mov	ecx, DWORD PTR _next$29[ebp]
	mov	DWORD PTR _ent$42[ebp], ecx

; 3130 : 				test_ent = ent;

	mov	edx, DWORD PTR _ent$42[ebp]
	mov	DWORD PTR _test_ent$39[ebp], edx

; 3131 : 			}

	jmp	$LN18@Distribute
$LN17@Distribute:

; 3132 : 		} 

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dbiter$21[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator

; 3133 : 		else {

	jmp	$LN20@Distribute
$LN19@Distribute:

; 3134 : 			VuListIterator grpiter(vuGameList);

	mov	eax, DWORD PTR ?vuGameList@@3PAVVuLinkedList@@A ; vuGameList
	push	eax
	lea	ecx, DWORD PTR _grpiter$28[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 3135 : 			VuEntity* ent      = grpiter.GetFirst();

	lea	ecx, DWORD PTR _grpiter$28[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _ent$44[ebp], eax

; 3136 : 			VuEntity* test_ent = ent;

	mov	ecx, DWORD PTR _ent$44[ebp]
	mov	DWORD PTR _test_ent$40[ebp], ecx
$LN9@Distribute:

; 3137 : 			VuEntity* ent2;
; 3138 : 			int index;
; 3139 : 			while (ent) {

	cmp	DWORD PTR _ent$44[ebp], 0
	je	$LN8@Distribute

; 3140 : 				if (!ent->IsTransferrable() &&
; 3141 : 								sess && sess->VuState() != VU_MEM_ACTIVE  &&
; 3142 : 								ent->OwnerId().creator_ == sess->SessionId()) {

	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@Distribute
	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN7@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	je	SHORT $LN7@Distribute
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN7@Distribute

; 3143 : 					vuDatabase->Remove(ent);

	mov	edx, DWORD PTR _ent$44[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 3144 : 				} else if ((!sess || (ent->OwnerId().creator_ == sess->SessionId())) &&

	jmp	$LN6@Distribute
$LN7@Distribute:

; 3145 : 								((1<<ent->Domain()) & vuLocalSessionEntity->DomainMask())) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN4@Distribute
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ; VuSessionEntity::SessionId
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	$LN6@Distribute
$LN4@Distribute:
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	esi, 1
	shl	esi, cl
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?DomainMask@VuSessionEntity@@QAEKXZ	; VuSessionEntity::DomainMask
	and	esi, eax
	je	$LN6@Distribute

; 3146 : 					if (ent->Association() != vuNullId &&
; 3147 : 									(ent2 = vuDatabase->Find(ent->Association())) != 0) {

	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	lea	edx, DWORD PTR $T19[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?Association@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::Association
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Distribute
	lea	ecx, DWORD PTR $T18[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?Association@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::Association
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent2$34[ebp], eax
	cmp	DWORD PTR _ent2$34[ebp], 0
	je	SHORT $LN3@Distribute

; 3148 : 						test_ent = ent2;

	mov	ecx, DWORD PTR _ent2$34[ebp]
	mov	DWORD PTR _test_ent$40[ebp], ecx
$LN3@Distribute:

; 3149 : 					}
; 3150 : 					index = test_ent->Id().num_ % count[test_ent->Domain()];

	lea	edx, DWORD PTR $T16[ebp]
	push	edx
	mov	ecx, DWORD PTR _test_ent$40[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	esi, eax
	mov	ecx, DWORD PTR _test_ent$40[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	eax, DWORD PTR [esi]
	xor	edx, edx
	div	DWORD PTR _count$46[ebp+ecx*4]
	mov	DWORD PTR _index$36[ebp], edx

; 3151 : 					if (index >= myseedlower[test_ent->Domain()] &&
; 3152 : 									index <= myseedupper[test_ent->Domain()] &&
; 3153 : 									ent->IsTransferrable() && !ent->IsGlobal() &&
; 3154 : 									(!sess || sess->VuState() == VU_MEM_ACTIVE) ) {

	mov	ecx, DWORD PTR _test_ent$40[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	edx, al
	mov	eax, DWORD PTR _index$36[ebp]
	cmp	eax, DWORD PTR _myseedlower$47[ebp+edx*4]
	jl	SHORT $LN6@Distribute
	mov	ecx, DWORD PTR _test_ent$40[ebp]
	call	?Domain@VuEntity@@QBEEXZ		; VuEntity::Domain
	movzx	ecx, al
	mov	edx, DWORD PTR _index$36[ebp]
	cmp	edx, DWORD PTR _myseedupper$48[ebp+ecx*4]
	jg	SHORT $LN6@Distribute
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Distribute
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@Distribute
	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN1@Distribute
	mov	ecx, DWORD PTR _sess$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN6@Distribute
$LN1@Distribute:

; 3155 : 						ent->SetOwnerId(vuLocalSession);

	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId
$LN6@Distribute:

; 3156 : 					}
; 3157 : 				}
; 3158 : 				ent      = grpiter.GetNext();

	lea	ecx, DWORD PTR _grpiter$28[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _ent$44[ebp], eax

; 3159 : 				test_ent = ent;

	mov	ecx, DWORD PTR _ent$44[ebp]
	mov	DWORD PTR _test_ent$40[ebp], ecx

; 3160 : 			}

	jmp	$LN9@Distribute
$LN8@Distribute:

; 3161 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _grpiter$28[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN20@Distribute:

; 3162 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _siter$33[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN49@Distribute:

; 3163 : 	return VU_SUCCESS;

	mov	eax, 1
$LN50@Distribute:

; 3164 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR _siter$33[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$1:
	lea	ecx, DWORD PTR _dbiter$22[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$2:
	lea	ecx, DWORD PTR _dbiter$21[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z$3:
	lea	ecx, DWORD PTR _grpiter$28[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-708]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Distribute@VuGameEntity@@MAEHPAVVuSessionEntity@@@Z ENDP ; VuGameEntity::Distribute
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_domainMask$ = 12					; size = 4
_gamename$ = 16						; size = 4
_groupname$ = 20					; size = 4
??0VuGameEntity@@IAE@HKPAD0@Z PROC			; VuGameEntity::VuGameEntity
; _this$ = ecx

; 2801 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGameEntity@@IAE@HKPAD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _groupname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z ; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuGameEntity@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _domainMask$[ebp]
	mov	DWORD PTR [eax+344], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+348], 0

; 2802 : 	// every local game is sent imediately
; 2803 : 	SetSendCreate(VuEntity::VU_SC_SEND_OOB);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 2804 : 	gameName_ = new char[strlen(gamename) + 1];

	mov	eax, DWORD PTR _gamename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+348], edx

; 2805 : 	strcpy(gameName_, gamename);

	mov	eax, DWORD PTR _gamename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	push	edx
	call	_strcpy
	add	esp, 8

; 2806 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGameEntity@@IAE@HKPAD0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
__ehhandler$??0VuGameEntity@@IAE@HKPAD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGameEntity@@IAE@HKPAD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGameEntity@@IAE@HKPAD0@Z ENDP			; VuGameEntity::VuGameEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@VuGameEntity@@UAEHPAVVuFullUpdateEvent@@@Z PROC	; VuGameEntity::Handle
; _this$ = ecx

; 3022 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3023 : 	return VuEntity::Handle(event);

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Handle@VuEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuEntity::Handle

; 3024 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuGameEntity@@UAEHPAVVuFullUpdateEvent@@@Z ENDP	; VuGameEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv66 = -12						; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@VuGameEntity@@UAEHPAVVuSessionEvent@@@Z PROC	; VuGameEntity::Handle
; _this$ = ecx

; 3005 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3006 : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 3007 : 	switch(event->subtype_) {

	mov	eax, DWORD PTR _event$[ebp]
	movzx	ecx, WORD PTR [eax+48]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 6
	je	SHORT $LN3@Handle
	cmp	DWORD PTR tv66[ebp], 7
	je	SHORT $LN2@Handle
	jmp	SHORT $LN4@Handle
$LN3@Handle:

; 3008 : 			case VU_SESSION_CHANGE_CALLSIGN:
; 3009 : 					SetGameName(event->callsign_);

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetGameName@VuGameEntity@@QAEXPAD@Z	; VuGameEntity::SetGameName

; 3010 : 					retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1

; 3011 : 					break;

	jmp	SHORT $LN4@Handle
$LN2@Handle:

; 3012 : 			case VU_SESSION_DISTRIBUTE_ENTITIES:
; 3013 : 					retval = Distribute(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax
$LN4@Handle:

; 3014 : 					break;
; 3015 : 			default:
; 3016 : 					break;
; 3017 : 	}
; 3018 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 3019 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuGameEntity@@UAEHPAVVuSessionEvent@@@Z ENDP	; VuGameEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGame@VuGameEntity@@UAEEXZ PROC			; VuGameEntity::IsGame
; _this$ = ecx

; 2938 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2939 : 	return TRUE;

	mov	al, 1

; 2940 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsGame@VuGameEntity@@UAEEXZ ENDP			; VuGameEntity::IsGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_siter$2 = -32						; size = 12
_this$ = -20						; size = 4
_s$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_session$ = 8						; size = 4
?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z PROC ; VuGameEntity::RemoveSession
; _this$ = ecx

; 2987 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2988 : 	if (session->IsLocal()) {

	mov	ecx, DWORD PTR _session$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@RemoveSess

; 2989 : 		// disconnect all sessions
; 2990 : 		VuSessionsIterator siter(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2991 : 		for (VuSessionEntity *s = siter.GetFirst(); s; s = siter.GetNext()) {

	lea	ecx, DWORD PTR _siter$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _s$3[ebp], eax
	jmp	SHORT $LN4@RemoveSess
$LN3@RemoveSess:
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _s$3[ebp], eax
$LN4@RemoveSess:
	cmp	DWORD PTR _s$3[ebp], 0
	je	SHORT $LN2@RemoveSess

; 2992 : 			VuxSessionDisconnect(s);

	mov	edx, DWORD PTR _s$3[ebp]
	push	edx
	call	?VuxSessionDisconnect@@YAXPAVVuSessionEntity@@@Z ; VuxSessionDisconnect
	add	esp, 4

; 2993 : 		}

	jmp	SHORT $LN3@RemoveSess
$LN2@RemoveSess:

; 2994 : 		//    VuxGroupDisconnect(this);
; 2995 : 	} else {

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	SHORT $LN1@RemoveSess
$LN5@RemoveSess:

; 2996 : 		// just disconnect from particular session
; 2997 : 		VuxSessionDisconnect(session);

	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	call	?VuxSessionDisconnect@@YAXPAVVuSessionEntity@@@Z ; VuxSessionDisconnect
	add	esp, 4
$LN1@RemoveSess:

; 2998 : 	}
; 2999 : 	VuxGroupRemoveSession(this, session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?VuxGroupRemoveSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupRemoveSession
	add	esp, 8

; 3000 : 
; 3001 : 	return sessionCollection_->Remove(session);

	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+336]
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 3002 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR _siter$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z ENDP ; VuGameEntity::RemoveSession
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_siter$2 = -36						; size = 12
_s$3 = -24						; size = 4
_this$ = -20						; size = 4
_count$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_session$ = 8						; size = 4
?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z PROC ; VuGameEntity::AddSession
; _this$ = ecx

; 2954 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2955 : 	short count = static_cast<short>(sessionCollection_->Count());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+336]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	WORD PTR _count$[ebp], ax

; 2956 : 	if (count >= sessionMax_) {

	movsx	eax, WORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+332]
	cmp	eax, edx
	jl	SHORT $LN9@AddSession

; 2957 : 		return VU_ERROR;

	or	eax, -1
	jmp	$LN10@AddSession
$LN9@AddSession:

; 2958 : 	}
; 2959 : 	if (session->IsLocal()) {

	mov	ecx, DWORD PTR _session$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@AddSession

; 2960 : 		// connect to all sessions in the group
; 2961 : 		VuSessionsIterator siter(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2962 : 		for (VuSessionEntity *s = siter.GetFirst(); s; s = siter.GetNext()) {

	lea	ecx, DWORD PTR _siter$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _s$3[ebp], eax
	jmp	SHORT $LN7@AddSession
$LN6@AddSession:
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _s$3[ebp], eax
$LN7@AddSession:
	cmp	DWORD PTR _s$3[ebp], 0
	je	SHORT $LN5@AddSession

; 2963 : 			if (s != vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	edx, DWORD PTR _s$3[ebp]
	push	edx
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@AddSession

; 2964 : 				VuxSessionConnect(s);

	mov	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	call	?VuxSessionConnect@@YAHPAVVuSessionEntity@@@Z ; VuxSessionConnect
	add	esp, 4
$LN4@AddSession:

; 2965 : 			}
; 2966 : 		}

	jmp	SHORT $LN6@AddSession
$LN5@AddSession:

; 2967 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _siter$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	SHORT $LN3@AddSession
$LN8@AddSession:

; 2968 : 	else if (vuLocalSessionEntity->Game() == this) {

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN3@AddSession

; 2969 : 		// connect to particular session
; 2970 : 		VuxSessionConnect(session);

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	call	?VuxSessionConnect@@YAHPAVVuSessionEntity@@@Z ; VuxSessionConnect
	add	esp, 4
$LN3@AddSession:

; 2971 : 	}
; 2972 : 	VuxGroupAddSession(this, session);

	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?VuxGroupAddSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupAddSession
	add	esp, 8

; 2973 : #if VU_ALL_FILTERED
; 2974 : 	// sfr: im not sure this will work, because maybe the check wants to check multiple ids... maybe not
; 2975 : 	if (!sessionCollection_->Find(session)) {

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z ; VuCollection::Find
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddSession

; 2976 : 		return sessionCollection_->Insert(session);

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Insert
	jmp	SHORT $LN10@AddSession
$LN1@AddSession:

; 2977 : 	}
; 2978 : #else
; 2979 : 	if (!sessionCollection_->Find(session->Id())) {
; 2980 : 		return sessionCollection_->Insert(session);
; 2981 : 	}
; 2982 : #endif
; 2983 : 	return VU_NO_OP;

	xor	eax, eax
$LN10@AddSession:

; 2984 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR _siter$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddSession@VuGameEntity@@UAEHPAVVuSessionEntity@@@Z ENDP ; VuGameEntity::AddSession
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_event$2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
tv134 = -24						; size = 4
$T6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_gamename$ = 8						; size = 4
?SetGameName@VuGameEntity@@QAEXPAD@Z PROC		; VuGameEntity::SetGameName
; _this$ = ecx

; 2943 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetGameName@VuGameEntity@@QAEXPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2944 : 	delete [] gameName_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2945 : 	gameName_ = new char[strlen(gamename)+1];

	mov	eax, DWORD PTR _gamename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+348], edx

; 2946 : 	strcpy(gameName_, gamename);

	mov	eax, DWORD PTR _gamename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	push	edx
	call	_strcpy
	add	esp, 8

; 2947 : 	if (IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@SetGameNam

; 2948 : 		VuSessionEvent* event = new VuSessionEvent(this, VU_SESSION_CHANGE_CALLSIGN, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN4@SetGameNam
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN5@SetGameNam
$LN4@SetGameNam:
	mov	DWORD PTR tv134[ebp], 0
$LN5@SetGameNam:
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _event$2[ebp], ecx

; 2949 : 		VuMessageQueue::PostVuMessage(event);

	mov	edx, DWORD PTR _event$2[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN2@SetGameNam:

; 2950 : 	}
; 2951 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetGameName@VuGameEntity@@QAEXPAD@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetGameName@VuGameEntity@@QAEXPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetGameName@VuGameEntity@@QAEXPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetGameName@VuGameEntity@@QAEXPAD@Z ENDP		; VuGameEntity::SetGameName
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_retval$ = -8						; size = 4
_len$ = -1						; size = 1
_file$ = 8						; size = 4
?Save@VuGameEntity@@UAEHPAU_iobuf@@@Z PROC		; VuGameEntity::Save
; _this$ = ecx

; 2909 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2910 : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 2911 : 	VU_BYTE len;
; 2912 : 
; 2913 : 	if (file) {

	cmp	DWORD PTR _file$[ebp], 0
	je	$LN1@Save

; 2914 : 		retval  = VuGroupEntity::Save(file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z	; VuGroupEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 2915 : 		retval += fwrite(&domainMask_, sizeof(ulong), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 344				; 00000158H
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2916 : 		len = static_cast<VU_BYTE>(strlen(gameName_));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 2917 : 		retval += fwrite(&len, sizeof(VU_BYTE), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	1
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2918 : 		retval += fwrite(gameName_, len, 1, file);  

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	movzx	edx, BYTE PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
$LN1@Save:

; 2919 : 
; 2920 : #ifdef VU_TRACK_LATENCY
; 2921 : 		VuEnterCriticalSection();
; 2922 : 		short count = sessionCollection_->Count();
; 2923 : 		retval += fwrite(&count, sizeof(ushort), 1, file);
; 2924 : 		VuSessionsIterator iter(this);
; 2925 : 		VuSessionEntity *ent = iter.GetFirst();
; 2926 : 		while (ent) {
; 2927 : 			VU_TIME latency = ent->Latency();
; 2928 : 			retval += fwrite(&latency, sizeof(latency), 1, file);
; 2929 : 			ent = iter.GetNext();
; 2930 : 		}
; 2931 : 		VuExitCriticalSection();
; 2932 : #endif
; 2933 : 	}
; 2934 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2935 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuGameEntity@@UAEHPAU_iobuf@@@Z ENDP		; VuGameEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_len$ = -1						; size = 1
_stream$ = 8						; size = 4
?Save@VuGameEntity@@UAEHPAPAE@Z PROC			; VuGameEntity::Save
; _this$ = ecx

; 2882 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2883 : 	VU_BYTE len;
; 2884 : 
; 2885 : 	int retval = VuGroupEntity::Save(stream);

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuGroupEntity@@UAEHPAPAE@Z	; VuGroupEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 2886 : 	memcpy(*stream, &domainMask_, sizeof(ulong));  *stream += sizeof(ulong);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 344				; 00000158H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2887 : 	len = static_cast<VU_BYTE>(strlen(gameName_));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	push	edx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 2888 : 	**stream = len;       *stream += sizeof(VU_BYTE);

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR _len$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 2889 : 	memcpy(*stream, gameName_, len);    *stream += len;

	movzx	eax, BYTE PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _stream$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], edx

; 2890 : 
; 2891 : #ifdef VU_TRACK_LATENCY
; 2892 : 	short count = sessionCollection_->Count();
; 2893 : 	memcpy(*stream, &count, sizeof(short)); *stream += sizeof(short);
; 2894 : 	VuSessionsIterator iter(this);
; 2895 : 	VuSessionEntity *ent = iter.GetFirst();
; 2896 : 	while (ent) {
; 2897 : 		VU_TIME latency = ent->Latency();
; 2898 : 		memcpy(*stream, &latency, sizeof(latency)); *stream += sizeof(latency);
; 2899 : 		ent = iter.GetNext();
; 2900 : 	}
; 2901 : #endif
; 2902 : 
; 2903 : 	retval += LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuGameEntity@@AAEHXZ		; VuGameEntity::LocalSize
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2904 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2905 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuGameEntity@@UAEHPAPAE@Z ENDP			; VuGameEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuGameEntity@@UAEHXZ PROC			; VuGameEntity::SaveSize
; _this$ = ecx

; 2876 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2877 : 	return VuGroupEntity::SaveSize() + VuGameEntity::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@VuGroupEntity@@UAEHXZ		; VuGroupEntity::SaveSize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuGameEntity@@AAEHXZ		; VuGameEntity::LocalSize
	add	eax, esi

; 2878 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuGameEntity@@UAEHXZ ENDP			; VuGameEntity::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1VuGameEntity@@UAE@XZ PROC				; VuGameEntity::~VuGameEntity
; _this$ = ecx

; 2854 : VuGameEntity::~VuGameEntity(){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGameEntity@@6B@

; 2855 : 	delete [] gameName_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2856 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuGameEntity@@UAE@XZ ENDP				; VuGameEntity::~VuGameEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
_this$ = -20						; size = 4
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
??0VuGameEntity@@QAE@PAU_iobuf@@@Z PROC			; VuGameEntity::VuGameEntity
; _this$ = ecx

; 2833 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGameEntity@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGroupEntity@@QAE@PAU_iobuf@@@Z	; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGameEntity@@6B@

; 2834 : 	VU_BYTE len=0;

	mov	BYTE PTR _len$[ebp], 0

; 2835 : 
; 2836 : 	fread(&domainMask_, sizeof(ulong), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2837 : 	fread(&len, sizeof(VU_BYTE), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	1
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 2838 : 	gameName_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+348], edx

; 2839 : 	fread(gameName_, len, 1, file);  

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+348]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2840 : 	gameName_[len] = '\0';  // null terminate

	movzx	ecx, BYTE PTR _len$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+348]
	mov	BYTE PTR [eax+ecx], 0

; 2841 : 
; 2842 : #if defined(VU_TRACK_LATENCY)
; 2843 : 	short count = 0;
; 2844 : 	VU_TIME latency;
; 2845 : 
; 2846 : 	fread(&count, sizeof(count), 1, file);
; 2847 : 
; 2848 : 	for (int i = 0; i < count; i++)
; 2849 : 		// just need to read...
; 2850 : 		fread(&latency, sizeof(latency), 1, file);
; 2851 : #endif
; 2852 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGameEntity@@QAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
__ehhandler$??0VuGameEntity@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGameEntity@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGameEntity@@QAE@PAU_iobuf@@@Z ENDP			; VuGameEntity::VuGameEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
_this$ = -20						; size = 4
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0VuGameEntity@@QAE@PAPAEPAJ@Z PROC			; VuGameEntity::VuGameEntity
; _this$ = ecx

; 2810 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGameEntity@@QAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGroupEntity@@QAE@PAPAEPAJ@Z	; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuGameEntity@@6B@

; 2811 : 	VU_BYTE len;
; 2812 : 
; 2813 : 	memcpychk(&domainMask_, stream, sizeof(ulong), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 344				; 00000158H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2814 : 	memcpychk(&len, stream, sizeof(VU_BYTE), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2815 : 	gameName_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+348], edx

; 2816 : 	memcpychk(gameName_, stream, len, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2817 : 	gameName_[len] = '\0';  // null terminate

	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	mov	BYTE PTR [ecx+edx], 0

; 2818 : #ifdef VU_TRACK_LATENCY
; 2819 : 	short count = 0;
; 2820 : 	VU_TIME latency;
; 2821 : 	memcpychk(&count, stream, sizeof(short), rem);
; 2822 : 	for (int i = 0; i < count; i++) {
; 2823 : 		memcpychk(&latency, stream, sizeof(latency), rem);
; 2824 : 		if (selfIndex_ == i && this == vuLocalSessionEntity->Game()) {
; 2825 : 			vuLocalSessionEntity->SetLatency(latency);
; 2826 : 		}
; 2827 : 	}
; 2828 : #endif //VU_TRACK_LATENCY
; 2829 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGameEntity@@QAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
__ehhandler$??0VuGameEntity@@QAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGameEntity@@QAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGameEntity@@QAE@PAPAEPAJ@Z ENDP			; VuGameEntity::VuGameEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_domainMask$ = 8					; size = 4
_gamename$ = 12						; size = 4
??0VuGameEntity@@QAE@KPAD@Z PROC			; VuGameEntity::VuGameEntity
; _this$ = ecx

; 2790 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGameEntity@@QAE@KPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	OFFSET ??_C@_08PFJCCOLK@Vu2?5Game?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z ; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGameEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _domainMask$[ebp]
	mov	DWORD PTR [ecx+344], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0

; 2791 : 	// every local game is sent imediately
; 2792 : 	SetSendCreate(VuEntity::VU_SC_SEND_OOB);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ; VuEntity::SetSendCreate

; 2793 : 	gameName_ = new char[strlen(gamename) + 1];

	mov	ecx, DWORD PTR _gamename$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+348], eax

; 2794 : 	strcpy(gameName_, gamename);

	mov	ecx, DWORD PTR _gamename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+348]
	push	eax
	call	_strcpy
	add	esp, 8

; 2795 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGameEntity@@QAE@KPAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
__ehhandler$??0VuGameEntity@@QAE@KPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGameEntity@@QAE@KPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGameEntity@@QAE@KPAD@Z ENDP			; VuGameEntity::VuGameEntity
; Function compile flags: /Odtp
;	COMDAT ??_GVuGroupEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGroupEntity@@UAEPAXI@Z PROC			; VuGroupEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGroupEntity@@UAE@XZ		; VuGroupEntity::~VuGroupEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGroupEntity@@UAEPAXI@Z ENDP			; VuGroupEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = -4						; size = 2
?LocalSize@VuGroupEntity@@AAEHXZ PROC			; VuGroupEntity::LocalSize
; _this$ = ecx

; 2507 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2508 : 	short count = static_cast<short>(sessionCollection_->Count());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+336]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	WORD PTR _count$[ebp], ax

; 2509 : 
; 2510 : 	return 
; 2511 : 			sizeof(share_.ownerId_.creator_)
; 2512 : 			+ sizeof(share_.ownerId_.num_)
; 2513 : 			+ sizeof(share_.assoc_.creator_)
; 2514 : 			+ sizeof(share_.assoc_.num_)
; 2515 : 			+ strlen(groupName_) + 1
; 2516 : 			+ sizeof(sessionMax_)
; 2517 : 			+ sizeof(count)
; 2518 : 			+ (sizeof(VU_ID) * count)  // sessions
; 2519 : 			;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	call	_strlen
	add	esp, 4
	movsx	edx, WORD PTR _count$[ebp]
	lea	eax, DWORD PTR [eax+edx*8+21]

; 2520 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuGroupEntity@@AAEHXZ ENDP			; VuGroupEntity::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$ = -36						; size = 12
$T2 = -24						; size = 4
_sess$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemovalCallback@VuGroupEntity@@MAEHXZ PROC		; VuGroupEntity::RemovalCallback
; _this$ = ecx

; 2727 : VU_ERRCODE VuGroupEntity::RemovalCallback() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemovalCallback@VuGroupEntity@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2728 : 	VuSessionsIterator iter(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2729 : 	VuSessionEntity* sess = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _sess$[ebp], eax
$LN2@RemovalCal:

; 2730 : 
; 2731 : 	while (sess) {

	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN1@RemovalCal

; 2732 : 		RemoveSession(sess);

	mov	ecx, DWORD PTR _sess$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx

; 2733 : 		sess = iter.GetNext();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _sess$[ebp], eax

; 2734 : 	}

	jmp	SHORT $LN2@RemovalCal
$LN1@RemovalCal:

; 2735 : 
; 2736 : 	VuxGroupDisconnect(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?VuxGroupDisconnect@@YAXPAVVuGroupEntity@@@Z ; VuxGroupDisconnect
	add	esp, 4

; 2737 : 	return VU_SUCCESS;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T2[ebp]

; 2738 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemovalCallback@VuGroupEntity@@MAEHXZ$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?RemovalCallback@VuGroupEntity@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemovalCallback@VuGroupEntity@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemovalCallback@VuGroupEntity@@MAEHXZ ENDP		; VuGroupEntity::RemovalCallback
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$2 = -36						; size = 12
$T3 = -24						; size = 4
_sess$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InsertionCallback@VuGroupEntity@@MAEHXZ PROC		; VuGroupEntity::InsertionCallback
; _this$ = ecx

; 2713 : VU_ERRCODE VuGroupEntity::InsertionCallback() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InsertionCallback@VuGroupEntity@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2714 : 	if (this != vuGlobalGroup) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	je	SHORT $LN3@InsertionC

; 2715 : 		VuxGroupConnect(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?VuxGroupConnect@@YAHPAVVuGroupEntity@@@Z ; VuxGroupConnect
	add	esp, 4

; 2716 : 		VuSessionsIterator iter(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2717 : 		VuSessionEntity*   sess = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _sess$4[ebp], eax
$LN2@InsertionC:

; 2718 : 		while (sess) {

	cmp	DWORD PTR _sess$4[ebp], 0
	je	SHORT $LN1@InsertionC

; 2719 : 			AddSession(sess);

	mov	eax, DWORD PTR _sess$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 2720 : 			sess = iter.GetNext();

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _sess$4[ebp], eax

; 2721 : 		}

	jmp	SHORT $LN2@InsertionC
$LN1@InsertionC:

; 2722 : 		return VU_SUCCESS;

	mov	DWORD PTR $T3[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN4@InsertionC
$LN3@InsertionC:

; 2723 : 	}
; 2724 : 	return VU_NO_OP;

	xor	eax, eax
$LN4@InsertionC:

; 2725 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InsertionCallback@VuGroupEntity@@MAEHXZ$0:
	lea	ecx, DWORD PTR _iter$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?InsertionCallback@VuGroupEntity@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InsertionCallback@VuGroupEntity@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InsertionCallback@VuGroupEntity@@MAEHXZ ENDP		; VuGroupEntity::InsertionCallback
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Distribute@VuGroupEntity@@MAEHPAVVuSessionEntity@@@Z PROC ; VuGroupEntity::Distribute
; _this$ = ecx

; 2708 : VU_ERRCODE VuGroupEntity::Distribute(VuSessionEntity *) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2709 : 	// do nothing
; 2710 : 	return VU_NO_OP;

	xor	eax, eax

; 2711 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Distribute@VuGroupEntity@@MAEHPAVVuSessionEntity@@@Z ENDP ; VuGroupEntity::Distribute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_sfilter$ = -52						; size = 12
$T2 = -40						; size = 8
$T3 = -32						; size = 4
$T4 = -28						; size = 4
tv151 = -24						; size = 4
$T5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_gamename$ = 12						; size = 4
_filter$ = 16						; size = 4
??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z PROC		; VuGroupEntity::VuGroupEntity
; _this$ = ecx

; 2424 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	call	?VuxGetId@@YAKXZ			; VuxGetId
	push	eax
	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@GK@Z		; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGroupEntity@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+328], 0
	mov	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+332], ax

; 2425 : 	groupName_ = new char[strlen(gamename) + 1];

	mov	edx, DWORD PTR _gamename$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+328], ecx

; 2426 : 	strcpy(groupName_, gamename);

	mov	edx, DWORD PTR _gamename$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	call	_strcpy
	add	esp, 8

; 2427 : 	VuSessionFilter sfilter(Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _sfilter$[ebp]
	call	??0VuSessionFilter@@QAE@VVU_ID@@@Z	; VuSessionFilter::VuSessionFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2428 : 
; 2429 : 	if (!filter) filter = &sfilter;

	cmp	DWORD PTR _filter$[ebp], 0
	jne	SHORT $LN1@VuGroupEnt
	lea	eax, DWORD PTR _sfilter$[ebp]
	mov	DWORD PTR _filter$[ebp], eax
$LN1@VuGroupEnt:

; 2430 : 
; 2431 : 	sessionCollection_ = new VuOrderedList(filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN4@VuGroupEnt
	mov	ecx, DWORD PTR _filter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0VuOrderedList@@QAE@PAVVuFilter@@@Z	; VuOrderedList::VuOrderedList
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN5@VuGroupEnt
$LN4@VuGroupEnt:
	mov	DWORD PTR tv151[ebp], 0
$LN5@VuGroupEnt:
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+336], ecx

; 2432 : 	sessionCollection_->Register();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 2433 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sfilter$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$1:
	lea	ecx, DWORD PTR _sfilter$[ebp]
	jmp	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
__unwindfunclet$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGroupEntity@@IAE@HPADPAVVuFilter@@@Z ENDP		; VuGroupEntity::VuGroupEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@VuGroupEntity@@UAEHPAVVuFullUpdateEvent@@@Z PROC ; VuGroupEntity::Handle
; _this$ = ecx

; 2702 : VU_ERRCODE VuGroupEntity::Handle(VuFullUpdateEvent* event) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2703 : 	// update groups?
; 2704 : 	return VuEntity::Handle(event);

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Handle@VuEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuEntity::Handle

; 2705 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuGroupEntity@@UAEHPAVVuFullUpdateEvent@@@Z ENDP ; VuGroupEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv66 = -12						; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@VuGroupEntity@@UAEHPAVVuSessionEvent@@@Z PROC	; VuGroupEntity::Handle
; _this$ = ecx

; 2686 : VU_ERRCODE VuGroupEntity::Handle(VuSessionEvent* event) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2687 : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 2688 : 	switch(event->subtype_) {

	mov	eax, DWORD PTR _event$[ebp]
	movzx	ecx, WORD PTR [eax+48]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 6
	je	SHORT $LN3@Handle
	cmp	DWORD PTR tv66[ebp], 7
	je	SHORT $LN2@Handle
	jmp	SHORT $LN4@Handle
$LN3@Handle:

; 2689 : 			case VU_SESSION_CHANGE_CALLSIGN:
; 2690 : 					SetGroupName(event->callsign_);

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetGroupName@VuGroupEntity@@QAEXPAD@Z	; VuGroupEntity::SetGroupName

; 2691 : 					retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1

; 2692 : 					break;

	jmp	SHORT $LN4@Handle
$LN2@Handle:

; 2693 : 			case VU_SESSION_DISTRIBUTE_ENTITIES:
; 2694 : 					retval = Distribute(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax
$LN4@Handle:

; 2695 : 					break;
; 2696 : 			default:
; 2697 : 					break;
; 2698 : 	}
; 2699 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2700 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuGroupEntity@@UAEHPAVVuSessionEvent@@@Z ENDP	; VuGroupEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGroup@VuGroupEntity@@UAEEXZ PROC			; VuGroupEntity::IsGroup
; _this$ = ecx

; 2596 : VU_BOOL VuGroupEntity::IsGroup() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2597 : 	return TRUE;

	mov	al, 1

; 2598 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsGroup@VuGroupEntity@@UAEEXZ ENDP			; VuGroupEntity::IsGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_session$ = -4						; size = 4
_sessionId$ = 8						; size = 8
?RemoveSession@VuGroupEntity@@QAEHVVU_ID@@@Z PROC	; VuGroupEntity::RemoveSession
; _this$ = ecx

; 2678 : VU_ERRCODE VuGroupEntity::RemoveSession(VU_ID sessionId) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2679 : 	VuSessionEntity* session = (VuSessionEntity*)vuDatabase->Find(sessionId);

	mov	eax, DWORD PTR _sessionId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _sessionId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 2680 : 	if (session && session->IsSession()) {

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN1@RemoveSess
	mov	edx, DWORD PTR _session$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _session$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@RemoveSess

; 2681 : 		return RemoveSession(session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	jmp	SHORT $LN2@RemoveSess
$LN1@RemoveSess:

; 2682 : 	}
; 2683 : 	return VU_ERROR;

	or	eax, -1
$LN2@RemoveSess:

; 2684 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveSession@VuGroupEntity@@QAEHVVU_ID@@@Z ENDP	; VuGroupEntity::RemoveSession
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_session$ = 8						; size = 4
?RemoveSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z PROC ; VuGroupEntity::RemoveSession
; _this$ = ecx

; 2670 : VU_ERRCODE VuGroupEntity::RemoveSession(VuSessionEntity* session) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2671 : 	if (session != vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@RemoveSess

; 2672 : 		VuxGroupRemoveSession(this, session);

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?VuxGroupRemoveSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupRemoveSession
	add	esp, 8
$LN1@RemoveSess:

; 2673 : 	}
; 2674 : 
; 2675 : 	return sessionCollection_->Remove(session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 2676 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z ENDP ; VuGroupEntity::RemoveSession
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_session$ = -4						; size = 4
_sessionId$ = 8						; size = 8
?AddSession@VuGroupEntity@@QAEHVVU_ID@@@Z PROC		; VuGroupEntity::AddSession
; _this$ = ecx

; 2662 : VU_ERRCODE VuGroupEntity::AddSession(VU_ID sessionId) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2663 : 	VuSessionEntity* session = (VuSessionEntity*)vuDatabase->Find(sessionId);

	mov	eax, DWORD PTR _sessionId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _sessionId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 2664 : 	if (session && session->IsSession()) {

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN1@AddSession
	mov	edx, DWORD PTR _session$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _session$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@AddSession

; 2665 : 		return AddSession(session);

	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	jmp	SHORT $LN2@AddSession
$LN1@AddSession:

; 2666 : 	}
; 2667 : 	return VU_ERROR;

	or	eax, -1
$LN2@AddSession:

; 2668 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AddSession@VuGroupEntity@@QAEHVVU_ID@@@Z ENDP		; VuGroupEntity::AddSession
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = -4						; size = 2
_session$ = 8						; size = 4
?AddSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z PROC ; VuGroupEntity::AddSession
; _this$ = ecx

; 2642 : VU_ERRCODE VuGroupEntity::AddSession(VuSessionEntity *session) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2643 : 	short count = static_cast<short>(sessionCollection_->Count());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+336]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	WORD PTR _count$[ebp], ax

; 2644 : 	if (count >= sessionMax_) {

	movsx	eax, WORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+332]
	cmp	eax, edx
	jl	SHORT $LN2@AddSession

; 2645 : 		return VU_ERROR;

	or	eax, -1
	jmp	SHORT $LN3@AddSession
$LN2@AddSession:

; 2646 : 	}
; 2647 : 	VuxGroupAddSession(this, session);

	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?VuxGroupAddSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupAddSession
	add	esp, 8

; 2648 : 
; 2649 : #if VU_ALL_FILTERED
; 2650 : 	// sfr: im not sure this will work, because maybe the check wants to check multiple ids... maybe not
; 2651 : 	if (!sessionCollection_->Find(session)) {

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z ; VuCollection::Find
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddSession

; 2652 : 		return sessionCollection_->Insert(session);

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Insert
	jmp	SHORT $LN3@AddSession
$LN1@AddSession:

; 2653 : 	}
; 2654 : #else
; 2655 : 	if (!sessionCollection_->Find(session->Id())) {
; 2656 : 		return sessionCollection_->Insert(session);
; 2657 : 	}
; 2658 : #endif
; 2659 : 	return VU_NO_OP;

	xor	eax, eax
$LN3@AddSession:

; 2660 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddSession@VuGroupEntity@@UAEHPAVVuSessionEntity@@@Z ENDP ; VuGroupEntity::AddSession
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$ = -36						; size = 12
_this$ = -24						; size = 4
_ent$ = -20						; size = 4
$T2 = -14						; size = 1
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_session$ = 8						; size = 4
?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z PROC ; VuGroupEntity::SessionInGroup
; _this$ = ecx

; 2630 : VU_BOOL VuGroupEntity::SessionInGroup(VuSessionEntity* session) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2631 : 	VuSessionsIterator iter(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2632 : 	VuEntity* ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _ent$[ebp], eax
$LN3@SessionInG:

; 2633 : 	while (ent) {

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN2@SessionInG

; 2634 : 		if (ent == session) {

	mov	ecx, DWORD PTR _ent$[ebp]
	cmp	ecx, DWORD PTR _session$[ebp]
	jne	SHORT $LN1@SessionInG

; 2635 : 			return TRUE;

	mov	BYTE PTR $T3[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN4@SessionInG
$LN1@SessionInG:

; 2636 : 		}
; 2637 : 		ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _ent$[ebp], eax

; 2638 : 	}

	jmp	SHORT $LN3@SessionInG
$LN2@SessionInG:

; 2639 : 	return FALSE;

	mov	BYTE PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	al, BYTE PTR $T2[ebp]
$LN4@SessionInG:

; 2640 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z ENDP ; VuGroupEntity::SessionInGroup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
$T2 = -12						; size = 8
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z PROC		; VuGroupEntity::InTarget
; _this$ = ecx

; 2622 : VU_BOOL VuGroupEntity::InTarget(VU_ID id) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2623 : 	// supports one level of group nesting: groups are In global group
; 2624 : 	if (id == Id() || id == vuGlobalGroup->Id()) {

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@InTarget
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@InTarget
$LN1@InTarget:

; 2625 : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN3@InTarget
$LN2@InTarget:

; 2626 : 	}
; 2627 : 	return FALSE;

	xor	al, al
$LN3@InTarget:

; 2628 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?InTarget@VuGroupEntity@@UAEEVVU_ID@@@Z ENDP		; VuGroupEntity::InTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
_session$ = -4						; size = 4
_id$ = 8						; size = 8
?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z PROC		; VuGroupEntity::HasTarget
; _this$ = ecx

; 2611 : VU_BOOL VuGroupEntity::HasTarget(VU_ID id) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2612 : 	if (id == Id()) {

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HasTarget

; 2613 : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN3@HasTarget
$LN2@HasTarget:

; 2614 : 	}
; 2615 : 	VuSessionEntity* session = (VuSessionEntity*)vuDatabase->Find(id);

	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 2616 : 	if (session && session->IsSession()) {

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN1@HasTarget
	mov	ecx, DWORD PTR _session$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _session$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@HasTarget

; 2617 : 		return SessionInGroup(session);

	mov	edx, DWORD PTR _session$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SessionInGroup@VuGroupEntity@@QAEEPAVVuSessionEntity@@@Z ; VuGroupEntity::SessionInGroup
	jmp	SHORT $LN3@HasTarget
$LN1@HasTarget:

; 2618 : 	}
; 2619 : 	return FALSE;

	xor	al, al
$LN3@HasTarget:

; 2620 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?HasTarget@VuGroupEntity@@UAEEVVU_ID@@@Z ENDP		; VuGroupEntity::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_event$2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
tv134 = -24						; size = 4
$T6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_groupname$ = 8						; size = 4
?SetGroupName@VuGroupEntity@@QAEXPAD@Z PROC		; VuGroupEntity::SetGroupName
; _this$ = ecx

; 2600 : void VuGroupEntity::SetGroupName(char* groupname) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetGroupName@VuGroupEntity@@QAEXPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2601 : 	delete [] groupName_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2602 : 	groupName_ = new char[strlen(groupname)+1];

	mov	eax, DWORD PTR _groupname$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+328], edx

; 2603 : 	strcpy(groupName_, groupname);

	mov	eax, DWORD PTR _groupname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	push	edx
	call	_strcpy
	add	esp, 8

; 2604 : 	if (IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@SetGroupNa

; 2605 : 		VuSessionEvent* event =
; 2606 : 				new VuSessionEvent(this, VU_SESSION_CHANGE_CALLSIGN, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN4@SetGroupNa
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN5@SetGroupNa
$LN4@SetGroupNa:
	mov	DWORD PTR tv134[ebp], 0
$LN5@SetGroupNa:
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _event$2[ebp], ecx

; 2607 : 		VuMessageQueue::PostVuMessage(event);

	mov	edx, DWORD PTR _event$2[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN2@SetGroupNa:

; 2608 : 	}
; 2609 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetGroupName@VuGroupEntity@@QAEXPAD@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetGroupName@VuGroupEntity@@QAEXPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetGroupName@VuGroupEntity@@QAEXPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetGroupName@VuGroupEntity@@QAEXPAD@Z ENDP		; VuGroupEntity::SetGroupName
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SessionCount@VuGroupEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SessionCount@VuGroupEntity@@QAEHXZ PROC		; VuGroupEntity::SessionCount, COMDAT
; _this$ = ecx

; 341  : 	int SessionCount()    { return sessionCollection_->Count(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+336]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	0
?SessionCount@VuGroupEntity@@QAEHXZ ENDP		; VuGroupEntity::SessionCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$2 = -52						; size = 12
_id$3 = -40						; size = 8
_ent$4 = -32						; size = 4
_this$ = -28						; size = 4
_retval$ = -24						; size = 4
_count$5 = -20						; size = 2
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z PROC		; VuGroupEntity::Save
; _this$ = ecx

; 2562 : int VuGroupEntity::Save(FILE* file) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2563 : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 2564 : 	VU_BYTE len;
; 2565 : 
; 2566 : 	if (file) {

	cmp	DWORD PTR _file$[ebp], 0
	je	$LN3@Save

; 2567 : 		retval = VuTargetEntity::Save(file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z	; VuTargetEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 2568 : 
; 2569 : 		// VuEntity part
; 2570 : 		retval += fwrite(&share_.ownerId_.creator_, sizeof(share_.ownerId_.creator_), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2571 : 		retval += fwrite(&share_.ownerId_.num_,     sizeof(share_.ownerId_.num_),     1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2572 : 		retval += fwrite(&share_.assoc_.creator_,   sizeof(share_.assoc_.creator_),   1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2573 : 		retval += fwrite(&share_.assoc_.num_,       sizeof(share_.assoc_.num_),       1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2574 : 
; 2575 : 		len     = static_cast<VU_BYTE>(strlen(groupName_));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 2576 : 
; 2577 : 		retval += fwrite(&len,         sizeof(VU_BYTE), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	1
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2578 : 		retval += fwrite(groupName_,   len,             1, file);  

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	movzx	edx, BYTE PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2579 : 		retval += fwrite(&sessionMax_, sizeof(ushort),  1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 332				; 0000014cH
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2580 : 
; 2581 : 		short count = static_cast<short>(sessionCollection_->Count());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+336]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	WORD PTR _count$5[ebp], ax

; 2582 : 		retval += fwrite(&count, sizeof(ushort), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	2
	lea	edx, DWORD PTR _count$5[ebp]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2583 : 		VuSessionsIterator iter(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2584 : 		VuSessionEntity* ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _ent$4[ebp], eax
$LN2@Save:

; 2585 : 
; 2586 : 		while (ent) {

	cmp	DWORD PTR _ent$4[ebp], 0
	je	SHORT $LN1@Save

; 2587 : 			VU_ID id = ent->Id();

	lea	ecx, DWORD PTR _id$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$4[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id

; 2588 : 			retval += fwrite(&id, sizeof(VU_ID), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	8
	lea	eax, DWORD PTR _id$3[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2589 : 			ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _ent$4[ebp], eax

; 2590 : 		}

	jmp	SHORT $LN2@Save
$LN1@Save:

; 2591 : 	} 

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN3@Save:

; 2592 : 
; 2593 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2594 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z$0:
	lea	ecx, DWORD PTR _iter$2[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Save@VuGroupEntity@@UAEHPAU_iobuf@@@Z ENDP		; VuGroupEntity::Save
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$ = -56						; size = 12
_id$2 = -44						; size = 8
$T3 = -36						; size = 4
_retval$ = -32						; size = 4
_ent$ = -28						; size = 4
_this$ = -24						; size = 4
_count$ = -20						; size = 2
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
?Save@VuGroupEntity@@UAEHPAPAE@Z PROC			; VuGroupEntity::Save
; _this$ = ecx

; 2526 : int VuGroupEntity::Save(VU_BYTE** stream) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Save@VuGroupEntity@@UAEHPAPAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2527 : 	VU_BYTE len;
; 2528 : 
; 2529 : 	int retval = VuTargetEntity::Save(stream);

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuTargetEntity@@UAEHPAPAE@Z	; VuTargetEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 2530 : 
; 2531 : 	// VuEntity part
; 2532 : 	memcpy(*stream, &share_.ownerId_.creator_, sizeof(share_.ownerId_.creator_));

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2533 : 	*stream += sizeof(share_.ownerId_.creator_);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2534 : 	memcpy(*stream, &share_.ownerId_.num_, sizeof(share_.ownerId_.num_));

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2535 : 	*stream += sizeof(share_.ownerId_.num_);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2536 : 	memcpy(*stream, &share_.assoc_.creator_, sizeof(share_.assoc_.creator_));

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2537 : 	*stream += sizeof(share_.assoc_.creator_);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2538 : 	memcpy(*stream, &share_.assoc_.num_, sizeof(share_.assoc_.num_));

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2539 : 	*stream += sizeof(share_.assoc_.num_);

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2540 : 
; 2541 : 	// VuGroupEntity part
; 2542 : 	len = static_cast<VU_BYTE>(strlen(groupName_));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	push	edx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 2543 : 	**stream = len;       *stream += sizeof(VU_BYTE);

	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR _len$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 2544 : 
; 2545 : 	memcpy(*stream, groupName_, len);   *stream += len;

	movzx	eax, BYTE PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _stream$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], edx

; 2546 : 	memcpy(*stream, &sessionMax_, sizeof(ushort));  *stream += sizeof(ushort);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 332				; 0000014cH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 2547 : 	short count = static_cast<short>(sessionCollection_->Count());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	WORD PTR _count$[ebp], ax

; 2548 : 	memcpy(*stream, &count, sizeof(short)); *stream += sizeof(short);

	push	2
	lea	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 2
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 2549 : 	VuSessionsIterator iter(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2550 : 	VuSessionEntity *ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _ent$[ebp], eax
$LN2@Save:

; 2551 : 
; 2552 : 	while (ent) {

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN1@Save

; 2553 : 		VU_ID id = ent->Id();

	lea	edx, DWORD PTR _id$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id

; 2554 : 		memcpy(*stream, &id, sizeof(VU_ID)); *stream += sizeof(VU_ID);

	push	8
	lea	eax, DWORD PTR _id$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 2555 : 		ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _ent$[ebp], eax

; 2556 : 	}

	jmp	SHORT $LN2@Save
$LN1@Save:

; 2557 : 
; 2558 : 	retval += LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuGroupEntity@@AAEHXZ	; VuGroupEntity::LocalSize
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 2559 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T3[ebp]

; 2560 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Save@VuGroupEntity@@UAEHPAPAE@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?Save@VuGroupEntity@@UAEHPAPAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Save@VuGroupEntity@@UAEHPAPAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Save@VuGroupEntity@@UAEHPAPAE@Z ENDP			; VuGroupEntity::Save
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuGroupEntity@@UAEHXZ PROC			; VuGroupEntity::SaveSize
; _this$ = ecx

; 2522 : int VuGroupEntity::SaveSize() {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2523 : 	return VuTargetEntity::SaveSize() + VuGroupEntity::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@VuTargetEntity@@UAEHXZ	; VuTargetEntity::SaveSize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuGroupEntity@@AAEHXZ	; VuGroupEntity::LocalSize
	add	eax, esi

; 2524 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuGroupEntity@@UAEHXZ ENDP			; VuGroupEntity::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv137 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuGroupEntity@@UAE@XZ PROC				; VuGroupEntity::~VuGroupEntity
; _this$ = ecx

; 2498 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuGroupEntity@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGroupEntity@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2499 : 	delete [] groupName_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2500 : 	// sfr: not necessary (already done on destructor) ?
; 2501 : 	sessionCollection_->Purge();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+336]
	mov	eax, DWORD PTR [edx]
	call	eax

; 2502 : 	sessionCollection_->Unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+336]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 2503 : 	delete sessionCollection_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@VuGroupEnt
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN1@VuGroupEnt
$LN3@VuGroupEnt:
	mov	DWORD PTR tv137[ebp], 0
$LN1@VuGroupEnt:

; 2504 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuGroupEntity@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__ehhandler$??1VuGroupEntity@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuGroupEntity@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuGroupEntity@@UAE@XZ ENDP				; VuGroupEntity::~VuGroupEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_filter$ = -76						; size = 12
$T2 = -64						; size = 8
_sessionid$ = -56					; size = 8
$T3 = -48						; size = 4
$T4 = -44						; size = 4
$T5 = -40						; size = 4
tv150 = -36						; size = 4
$T6 = -32						; size = 4
_i$7 = -28						; size = 4
_this$ = -24						; size = 4
_count$ = -20						; size = 2
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
??0VuGroupEntity@@QAE@PAU_iobuf@@@Z PROC		; VuGroupEntity::VuGroupEntity
; _this$ = ecx

; 2470 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@PAU_iobuf@@@Z	; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGroupEntity@@6B@

; 2471 : 	VU_BYTE len=0;

	mov	BYTE PTR _len$[ebp], 0

; 2472 : 	VU_ID sessionid(0, 0);

	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	lea	ecx, DWORD PTR _sessionid$[ebp]
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID

; 2473 : 	VuSessionFilter filter(Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??0VuSessionFilter@@QAE@VVU_ID@@@Z	; VuSessionFilter::VuSessionFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2474 : 	sessionCollection_ = new VuOrderedList(&filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN6@VuGroupEnt
	lea	eax, DWORD PTR _filter$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuOrderedList@@QAE@PAVVuFilter@@@Z	; VuOrderedList::VuOrderedList
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN7@VuGroupEnt
$LN6@VuGroupEnt:
	mov	DWORD PTR tv150[ebp], 0
$LN7@VuGroupEnt:
	mov	ecx, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR [edx+336], eax

; 2475 : 	sessionCollection_->Register();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+336]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 2476 : 
; 2477 : 	// VuEntity part
; 2478 : 	fread(&share_.ownerId_.creator_, sizeof(share_.ownerId_.creator_), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2479 : 	fread(&share_.ownerId_.num_,     sizeof(share_.ownerId_.num_),     1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 2480 : 	fread(&share_.assoc_.creator_,   sizeof(share_.assoc_.creator_),   1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 2481 : 	fread(&share_.assoc_.num_,       sizeof(share_.assoc_.num_),       1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2482 : 
; 2483 : 	// vuGroupEntity part
; 2484 : 	fread(&len, sizeof(VU_BYTE), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	1
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 2485 : 	groupName_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+328], edx

; 2486 : 	fread(groupName_, len, 1, file);  

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2487 : 	groupName_[len] = '\0'; // null terminate

	movzx	ecx, BYTE PTR _len$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	BYTE PTR [eax+ecx], 0

; 2488 : 	fread(&sessionMax_, sizeof(ushort), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 332				; 0000014cH
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 2489 : 	short count = 0;

	xor	eax, eax
	mov	WORD PTR _count$[ebp], ax

; 2490 : 	fread(&count, sizeof(short), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	2
	lea	edx, DWORD PTR _count$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 2491 : 	for (int i = 0; i < count; i++) {

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN3@VuGroupEnt
$LN2@VuGroupEnt:
	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN3@VuGroupEnt:
	movsx	ecx, WORD PTR _count$[ebp]
	cmp	DWORD PTR _i$7[ebp], ecx
	jge	SHORT $LN1@VuGroupEnt

; 2492 : 		fread(&sessionid, sizeof(VU_ID), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	8
	lea	eax, DWORD PTR _sessionid$[ebp]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2493 : 		AddSession(sessionid);

	mov	ecx, DWORD PTR _sessionid$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _sessionid$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSession@VuGroupEntity@@QAEHVVU_ID@@@Z ; VuGroupEntity::AddSession

; 2494 : 	}

	jmp	SHORT $LN2@VuGroupEnt
$LN1@VuGroupEnt:

; 2495 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$1:
	lea	ecx, DWORD PTR _filter$[ebp]
	jmp	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
__unwindfunclet$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGroupEntity@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGroupEntity@@QAE@PAU_iobuf@@@Z ENDP		; VuGroupEntity::VuGroupEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_filter$ = -76						; size = 12
$T2 = -64						; size = 8
_sessionid$ = -56					; size = 8
$T3 = -48						; size = 4
$T4 = -44						; size = 4
$T5 = -40						; size = 4
tv152 = -36						; size = 4
$T6 = -32						; size = 4
_i$7 = -28						; size = 4
_this$ = -24						; size = 4
_count$ = -20						; size = 2
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0VuGroupEntity@@QAE@PAPAEPAJ@Z PROC			; VuGroupEntity::VuGroupEntity
; _this$ = ecx

; 2438 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGroupEntity@@QAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@PAPAEPAJ@Z	; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuGroupEntity@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], -1

; 2439 : 	VU_BYTE len;
; 2440 : 	VU_ID sessionid(0, 0);

	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	lea	ecx, DWORD PTR _sessionid$[ebp]
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID

; 2441 : 	VuSessionFilter filter(Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??0VuSessionFilter@@QAE@VVU_ID@@@Z	; VuSessionFilter::VuSessionFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2442 : 	sessionCollection_ = new VuOrderedList(&filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN7@VuGroupEnt
	lea	ecx, DWORD PTR _filter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuOrderedList@@QAE@PAVVuFilter@@@Z	; VuOrderedList::VuOrderedList
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN8@VuGroupEnt
$LN7@VuGroupEnt:
	mov	DWORD PTR tv152[ebp], 0
$LN8@VuGroupEnt:
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [eax+336], ecx

; 2443 : 	sessionCollection_->Register();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 2444 : 
; 2445 : 	// VuEntity part
; 2446 : 	memcpychk(&share_.ownerId_.creator_, stream, sizeof(share_.ownerId_.creator_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2447 : 	memcpychk(&share_.ownerId_.num_, stream, sizeof(share_.ownerId_.num_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2448 : 	memcpychk(&share_.assoc_.creator_, stream, sizeof(share_.assoc_.creator_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2449 : 	memcpychk(&share_.assoc_.num_, stream, sizeof(share_.assoc_.num_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2450 : 
; 2451 : 	// vuGroupEntity part
; 2452 : 	memcpychk(&len, stream, sizeof(VU_BYTE), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2453 : 	groupName_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+328], edx

; 2454 : 	memcpychk(groupName_, stream, len, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2455 : 	groupName_[len] = '\0'; // null terminate

	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	BYTE PTR [ecx+edx], 0

; 2456 : 	memcpychk(&sessionMax_, stream, sizeof(ushort), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2457 : 	short count = 0;

	xor	edx, edx
	mov	WORD PTR _count$[ebp], dx

; 2458 : 	memcpychk(&count, stream, sizeof(short), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _count$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2459 : 	for (int i = 0; i < count; i++) {

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN4@VuGroupEnt
$LN3@VuGroupEnt:
	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN4@VuGroupEnt:
	movsx	ecx, WORD PTR _count$[ebp]
	cmp	DWORD PTR _i$7[ebp], ecx
	jge	SHORT $LN2@VuGroupEnt

; 2460 : 		memcpychk(&sessionid, stream, sizeof(VU_ID), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sessionid$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 2461 : 		if (sessionid == vuLocalSession) {

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	ecx, DWORD PTR _sessionid$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@VuGroupEnt

; 2462 : 			selfIndex_ = i;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$7[ebp]
	mov	DWORD PTR [eax+340], ecx
$LN1@VuGroupEnt:

; 2463 : 		}
; 2464 : 		AddSession(sessionid);

	mov	edx, DWORD PTR _sessionid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sessionid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSession@VuGroupEntity@@QAEHVVU_ID@@@Z ; VuGroupEntity::AddSession

; 2465 : 	}

	jmp	SHORT $LN3@VuGroupEnt
$LN2@VuGroupEnt:

; 2466 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$1:
	lea	ecx, DWORD PTR _filter$[ebp]
	jmp	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
__unwindfunclet$??0VuGroupEntity@@QAE@PAPAEPAJ@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuGroupEntity@@QAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGroupEntity@@QAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGroupEntity@@QAE@PAPAEPAJ@Z ENDP			; VuGroupEntity::VuGroupEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_filter$ = -52						; size = 12
$T2 = -40						; size = 8
$T3 = -32						; size = 4
$T4 = -28						; size = 4
tv150 = -24						; size = 4
$T5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_groupname$ = 8						; size = 4
??0VuGroupEntity@@QAE@PAD@Z PROC			; VuGroupEntity::VuGroupEntity
; _this$ = ecx

; 2413 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGroupEntity@@QAE@PAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	call	?VuxGetId@@YAKXZ			; VuxGetId
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@GK@Z		; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGroupEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], 0
	mov	edx, 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+332], dx

; 2414 : 	groupName_ = new char[strlen(groupname) + 1];

	mov	ecx, DWORD PTR _groupname$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [edx+328], eax

; 2415 : 	strcpy(groupName_, groupname);

	mov	ecx, DWORD PTR _groupname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	push	eax
	call	_strcpy
	add	esp, 8

; 2416 : 	VuSessionFilter filter(Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??0VuSessionFilter@@QAE@VVU_ID@@@Z	; VuSessionFilter::VuSessionFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2417 : 	sessionCollection_ = new VuOrderedList(&filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN3@VuGroupEnt
	lea	ecx, DWORD PTR _filter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0VuOrderedList@@QAE@PAVVuFilter@@@Z	; VuOrderedList::VuOrderedList
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN4@VuGroupEnt
$LN3@VuGroupEnt:
	mov	DWORD PTR tv150[ebp], 0
$LN4@VuGroupEnt:
	mov	edx, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+336], ecx

; 2418 : 	sessionCollection_->Register();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 2419 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _filter$[ebp]
	call	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$1:
	lea	ecx, DWORD PTR _filter$[ebp]
	jmp	??1VuSessionFilter@@UAE@XZ		; VuSessionFilter::~VuSessionFilter
__unwindfunclet$??0VuGroupEntity@@QAE@PAD@Z$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuGroupEntity@@QAE@PAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGroupEntity@@QAE@PAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGroupEntity@@QAE@PAD@Z ENDP			; VuGroupEntity::VuGroupEntity
; Function compile flags: /Odtp
;	COMDAT ??_GVuSessionEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuSessionEntity@@UAEPAXI@Z PROC			; VuSessionEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuSessionEntity@@UAEPAXI@Z ENDP			; VuSessionEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z PROC ; VuBin<VuGameEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ENDP ; VuBin<VuGameEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ PROC ; VuBin<VuGameEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ENDP ; VuBin<VuGameEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ PROC	; VuBin<VuGameEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ENDP	; VuBin<VuGameEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??7?$VuBin@VVuGameEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??7?$VuBin@VVuGameEntity@@@@QBE_NXZ PROC		; VuBin<VuGameEntity>::operator!, COMDAT
; _this$ = ecx

; 37   : 	bool operator!() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		return e == NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 39   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??7?$VuBin@VVuGameEntity@@@@QBE_NXZ ENDP		; VuBin<VuGameEntity>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuGameEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuGameEntity@@@@QAE@XZ PROC			; VuBin<VuGameEntity>::~VuBin<VuGameEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuGameEntity@@@@QAE@XZ ENDP			; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z PROC ; VuBin<VuGameEntity>::VuBin<VuGameEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ENDP ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Incsize@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXI@Z PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1950 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBEIXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1952 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:

; 1953 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXI@Z ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Tidy@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1927 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::clear

; 1928 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?clear@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::clear, COMDAT
; _this$ = ecx

; 1470 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1471 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1472 : 		this->_Orphan_all();
; 1473 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1474 : 
; 1475 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1476 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 1477 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1478 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1479 : 
; 1480 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear

; 1481 : 			{	// delete an element
; 1482 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], edx

; 1483 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Freenode

; 1484 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1485 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?erase@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::erase, COMDAT
; _this$ = ecx

; 1416 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1417 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1418 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)
; 1419 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1420 : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 1421 : 		_Orphan_ptr(*this, _Pnode);
; 1422 : 
; 1423 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1424 : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
	mov	ecx, eax
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1425 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1426 : 
; 1427 : 		if (_Pnode != this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@erase

; 1428 : 			{	// not list head, safe to erase
; 1429 : 			this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1430 : 				this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1431 : 			this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1432 : 				this->_Prevnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1433 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Freenode

; 1434 : 			--this->_Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN1@erase:

; 1435 : 			}
; 1436 : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1437 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?push_back@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXABQAVVuEntity@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXABQAVVuEntity@@@Z PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::push_back, COMDAT
; _this$ = ecx

; 1286 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1287 : 		_Insert(_Unchecked_end(), _Val);

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Unchecked_end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@ABQAVVuEntity@@@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVVuEntity@@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Insert<VuEntity * const &>

; 1288 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXABQAVVuEntity@@@Z ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?pop_front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
?pop_front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::pop_front, COMDAT
; _this$ = ecx

; 1281 : 		{	// erase element at beginning

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1282 : 		erase(begin());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::erase

; 1283 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEAAPAVVuEntity@@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEAAPAVVuEntity@@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::front, COMDAT
; _this$ = ecx

; 1256 : 		{	// return first element of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1257 : 		return (*begin());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin
	mov	ecx, eax
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*

; 1258 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEAAPAVVuEntity@@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::front
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?empty@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?empty@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE_NXZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::empty, COMDAT
; _this$ = ecx

; 1246 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1247 : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv70[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv70[ebp]

; 1248 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE_NXZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?max_size@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBEIXZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::max_size, COMDAT
; _this$ = ecx

; 1241 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1242 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size

; 1243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBEIXZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1156 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1157 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1158 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@@Z ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Unchecked_end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1146 : 		{	// return unchecked iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1147 : 		return (_Unchecked_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1148 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::end, COMDAT
; _this$ = ecx

; 1124 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1125 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1126 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin, COMDAT
; _this$ = ecx

; 1114 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1115 : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVVuEntity@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1116 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >, COMDAT
; _this$ = ecx

; 1091 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::_Tidy

; 1093 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ PROC ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >, COMDAT
; _this$ = ecx

; 899  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@PAVVuEntity@@@std@@QAE@XZ ; std::allocator<VuEntity *>::allocator<VuEntity *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_List_buy<VuEntity *,std::allocator<VuEntity *> >

; 900  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ENDP ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ PROC ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::~_List_buy<VuEntity *,std::allocator<VuEntity *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::~_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ENDP ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::~_List_buy<VuEntity *,std::allocator<VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z PROC ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Freenode, COMDAT
; _this$ = ecx

; 854  : 		{	// give node back

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 855  : 		this->_Getal().destroy(
; 856  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>

; 857  : 		this->_Getal().destroy(
; 858  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>

; 859  : 		this->_Getal().destroy(
; 860  : 			_STD addressof(this->_Myval(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PAVVuEntity@@@std@@YAPAPAVVuEntity@@AAPAV1@@Z ; std::addressof<VuEntity *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAVVuEntity@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAVVuEntity@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<VuEntity *>

; 861  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate

; 862  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ENDP ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z PROC ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_List_buy<VuEntity *,std::allocator<VuEntity *> >, COMDAT
; _this$ = ecx

; 829  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >

; 830  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_buy@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ENDP ; std::_List_buy<VuEntity *,std::allocator<VuEntity *> >::_List_buy<VuEntity *,std::allocator<VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal, COMDAT
; _this$ = ecx

; 809  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 811  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
tv135 = -44						; size = 4
tv134 = -40						; size = 4
tv133 = -36						; size = 4
tv132 = -32						; size = 4
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buynode0, COMDAT
; _this$ = ecx

; 787  : 		{	// allocate a node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 788  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 789  : 
; 790  : 		if (_Next == _Nodeptr())

	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0

; 791  : 			{	// point at self
; 792  : 			_Next = _Pnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx

; 793  : 			_Prev = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:

; 794  : 			}
; 795  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 796  : 		this->_Getal().construct(
; 797  : 			_STD addressof(this->_Nextnode(_Pnode)), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv132[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	DWORD PTR tv133[ebp], eax
	lea	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv133[ebp]
	call	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>

; 798  : 		this->_Getal().construct(
; 799  : 			_STD addressof(this->_Prevnode(_Pnode)), _Prev);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@PAU?$_List_node@PAVVuEntity@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::construct<std::_List_node<VuEntity *,void *> *,std::_List_node<VuEntity *,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$0:

; 800  : 		_CATCH_ALL
; 801  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate

; 802  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 803  : 		_CATCH_END

	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z$1:

; 804  : 
; 805  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:

; 806  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buynode0
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 777  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 778  : 		this->_Getal().destroy(
; 779  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>

; 780  : 		this->_Getal().destroy(
; 781  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVVuEntity@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuEntity *,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PAVVuEntity@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVVuEntity@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::destroy<std::_List_node<VuEntity *,void *> *>

; 782  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate

; 783  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 772  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buynode0

; 774  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::~_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >, COMDAT
; _this$ = ecx

; 712  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 713  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Freeheadnode

; 714  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::~_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >, COMDAT
; _this$ = ecx

; 706  : 	_List_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<VuEntity *> >::_List_val<std::_List_simple_types<VuEntity *> >

; 707  : 		{	// construct head node, allocator from _Al
; 708  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 709  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_alloc@$0A@U?$_List_base_types@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVVuEntity@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >::_List_alloc<0,std::_List_base_types<VuEntity *,std::allocator<VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval, COMDAT

; 546  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 547  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 548  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAVVuEntity@@PAU?$_List_node@PAVVuEntity@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode, COMDAT

; 541  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 542  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 543  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode, COMDAT

; 536  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 537  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 538  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@SAAAPAU?$_List_node@PAVVuEntity@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<VuEntity *> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<VuEntity *> >::_List_val<std::_List_simple_types<VuEntity *> >, COMDAT
; _this$ = ecx

; 529  : 	_List_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 		{	// initialize data
; 531  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 532  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 533  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<VuEntity *> >::_List_val<std::_List_simple_types<VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ; std::allocator<std::_List_node<VuEntity *,void *> >::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<VuEntity *,void *> >::allocator<std::_List_node<VuEntity *,void *> >

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuEntity *,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<VuEntity *,void *> >::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuEntity *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 357913941				; 15555555H

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@YAPAU?$_List_node@PAVVuEntity@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<VuEntity *,void *> >
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVVuEntity@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<VuEntity *,void *> >::allocator<std::_List_node<VuEntity *,void *> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@PAVVuEntity@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<VuEntity *,void *> >::allocator<std::_List_node<VuEntity *,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAVVuEntity@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVVuEntity@@@std@@QAE@XZ PROC		; std::allocator<VuEntity *>::allocator<VuEntity *>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVVuEntity@@@std@@QAE@XZ ENDP		; std::allocator<VuEntity *>::allocator<VuEntity *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1950 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1952 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:

; 1953 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1927 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::clear

; 1928 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice_same, COMDAT
; _this$ = ecx

; 1878 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1879 : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN1@Splice_sam

; 1880 : 			{	// splicing from another list, adjust counts
; 1881 : 			_Incsize(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Incsize

; 1882 : 			_Right._Mysize -= _Count;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN1@Splice_sam:

; 1883 : 			}
; 1884 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =
; 1885 : 			_Last._Mynode();

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1886 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =
; 1887 : 			_Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1888 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =
; 1889 : 			_First._Mynode();

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1890 : 
; 1891 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1892 : 		this->_Prevnode(_Where._Mynode()) =
; 1893 : 			this->_Prevnode(_Last._Mynode());

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1894 : 		this->_Prevnode(_Last._Mynode()) =
; 1895 : 			this->_Prevnode(_First._Mynode());

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1896 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1897 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice_same
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_this$ = -12						; size = 4
__Next$3 = -8						; size = 4
$T4 = -2						; size = 1
$T5 = -1						; size = 1
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice, COMDAT
; _this$ = ecx

; 1846 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1847 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1848 : 		if (_Where._Getcont() != this)
; 1849 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1850 : 		if (this->_Getal() == _Right._Getal())
; 1851 : 			{	// same allocator, just relink
; 1852 : 			if (this != &_Right)
; 1853 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1854 : 					{	// transfer ownership
; 1855 : 					const_iterator _Iter = _Next++;
; 1856 : 					_Orphan_ptr(_Right, _Iter._Ptr);
; 1857 : 					_Iter._Adopt(this);
; 1858 : 					}
; 1859 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);
; 1860 : 			}
; 1861 : 
; 1862 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1863 : 		if (this->_Getal() == _Right._Getal())

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	push	eax
	call	??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z ; std::operator==<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >,std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@Splice

; 1864 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice_same@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice_same

; 1865 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1866 : 
; 1867 : 		else

	jmp	SHORT $LN6@Splice
$LN5@Splice:

; 1868 : 			{	// different allocator, copy nodes then erase source
; 1869 : 			for (const_iterator _Next = _First; _Next != _Last; ++_Next)

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$3[ebp], edx
	jmp	SHORT $LN3@Splice
$LN2@Splice:
	lea	ecx, DWORD PTR __Next$3[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
$LN3@Splice:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$3[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Splice

; 1870 : 				insert(_Where, (_Ty&&)*_Next);

	lea	ecx, DWORD PTR __Next$3[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEABU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*
	push	eax
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@$$QAU?$pair@MPAVVuEntity@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::insert
	jmp	SHORT $LN2@Splice
$LN1@Splice:

; 1871 : 			_Right.erase(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@0@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
$LN6@Splice:

; 1872 : 			}
; 1873 : 		}

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
_this$ = -12						; size = 4
__Next$4 = -8						; size = 4
__Count$5 = -4						; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice, COMDAT
; _this$ = ecx

; 1558 : 		{	// splice _Right [_First, _Last) at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1559 : 		if (_First != _Last && (this != &_Right || _Where != _Last))

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN12@splice
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN9@splice
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN12@splice
$LN9@splice:

; 1560 : 			{	// worth splicing, do it
; 1561 : 			size_type _Count = 0;

	mov	DWORD PTR __Count$5[ebp], 0

; 1562 : 
; 1563 : 			if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN8@splice
	jmp	$LN7@splice
$LN8@splice:

; 1564 : 				;	// just rearrange this list
; 1565 : 			else if (_First == _Right.begin() && _Last == _Right.end())

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@splice
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@splice

; 1566 : 				_Count = _Right._Mysize;	// splice in whole list

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Count$5[ebp], edx

; 1567 : 			else

	jmp	SHORT $LN7@splice
$LN6@splice:

; 1568 : 				{	// count nodes and check for knot
; 1569 : 				const_iterator _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$4[ebp], eax

; 1570 : 
; 1571 : 				for (; _Next != _Last; ++_Next, ++_Count)

	jmp	SHORT $LN4@splice
$LN3@splice:
	lea	ecx, DWORD PTR __Next$4[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
	mov	ecx, DWORD PTR __Count$5[ebp]
	add	ecx, 1
	mov	DWORD PTR __Count$5[ebp], ecx
$LN4@splice:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$4[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@splice

; 1572 : 					if (_Next == _Right.end())

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	push	eax
	lea	ecx, DWORD PTR __Next$4[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@splice

; 1573 : 						_Xlength_error("list<T> bad splice");

	push	OFFSET ??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@splice:

; 1574 : 				}

	jmp	SHORT $LN3@splice
$LN7@splice:

; 1575 : 			_Splice(_Where, _Right, _First, _Last, _Count);

	mov	eax, DWORD PTR __Count$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice
$LN12@splice:

; 1576 : 			}
; 1577 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice, COMDAT
; _this$ = ecx

; 1516 : 		{	// splice all of _Right at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1517 : 		if (this != &_Right && !_Right.empty())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@splice
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@splice

; 1518 : 			{	// worth splicing, do it
; 1519 : 			_Splice(_Where, _Right, _Right.begin(), _Right.end(),
; 1520 : 				_Right._Mysize);

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00I@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Splice
$LN2@splice:

; 1521 : 			}
; 1522 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
$T6 = -16						; size = 4
__Where$7 = -12						; size = 4
_this$ = -8						; size = 4
$T8 = -2						; size = 1
$T9 = -1						; size = 1
__Right$ = 8						; size = 4
?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::swap, COMDAT
; _this$ = ecx

; 1488 : 		{	// exchange contents with _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1489 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@swap
	jmp	$LN7@swap
$LN6@swap:

; 1490 : 			;	// same object, do nothing
; 1491 : 		else if (this->_Getal() == _Right._Getal())

	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	push	eax
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	push	eax
	call	??$?8V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@0@0@Z ; std::operator==<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >,std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@swap

; 1492 : 			{	// same allocator, swap control information
; 1493 : 			this->_Swap_all(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z ; std::_Container_base0::_Swap_all

; 1494 : 			_Swap_adl(this->_Myhead, _Right._Myhead);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 8

; 1495 : 			_STD swap(this->_Mysize, _Right._Mysize);

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8
	jmp	$LN7@swap
$LN4@swap:

; 1496 : 			}
; 1497 : 
; 1498 :  #if _HAS_CPP0X
; 1499 : 		else if (_Alty::propagate_on_container_swap::value)

	xor	eax, eax
	je	SHORT $LN2@swap

; 1500 : 			{	// swap allocators and control information
; 1501 : 			this->_Swap_alloc(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_alloc@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Swap_alloc

; 1502 : 			_Swap_adl(this->_Myhead, _Right._Myhead);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Swap_adl@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 8

; 1503 : 			_STD swap(this->_Mysize, _Right._Mysize);

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1504 : 			}
; 1505 :  #endif /* _HAS_CPP0X */
; 1506 : 
; 1507 : 		else

	jmp	SHORT $LN7@swap
$LN2@swap:

; 1508 : 			{	// different allocator, do splices
; 1509 : 			iterator _Where = begin();

	lea	eax, DWORD PTR __Where$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin

; 1510 : 			splice(_Where, _Right);

	mov	ecx, DWORD PTR __Where$7[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice

; 1511 : 			_Right.splice(_Right.begin(), *this, _Where, end());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR __Where$7[ebp]
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?splice@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@AAV12@00@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::splice
$LN7@swap:

; 1512 : 			}
; 1513 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXAAV12@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::clear, COMDAT
; _this$ = ecx

; 1470 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1471 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1472 : 		this->_Orphan_all();
; 1473 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1474 : 
; 1475 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1476 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 1477 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1478 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1479 : 
; 1480 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear

; 1481 : 			{	// delete an element
; 1482 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], edx

; 1483 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Freenode

; 1484 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1485 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@0@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase, COMDAT
; _this$ = ecx

; 1455 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1456 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase

; 1457 : 			{	// erase all and return fresh iterator
; 1458 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::clear

; 1459 : 			return (end());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase

; 1460 : 			}
; 1461 : 		else

	jmp	SHORT $LN5@erase
$LN2@erase:

; 1462 : 			{	// erase subrange
; 1463 : 			while (_First != _Last)

	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase

; 1464 : 				_First = erase(_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN2@erase
$LN1@erase:

; 1465 : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:

; 1466 : 			}
; 1467 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@0@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase, COMDAT
; _this$ = ecx

; 1416 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1417 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1418 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)
; 1419 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1420 : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 1421 : 		_Orphan_ptr(*this, _Pnode);
; 1422 : 
; 1423 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1424 : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
	mov	ecx, eax
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1425 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1426 : 
; 1427 : 		if (_Pnode != this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@erase

; 1428 : 			{	// not list head, safe to erase
; 1429 : 			this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1430 : 				this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1431 : 			this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1432 : 				this->_Prevnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1433 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Freenode

; 1434 : 			--this->_Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN1@erase:

; 1435 : 			}
; 1436 : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1437 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?pop_front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
?pop_front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::pop_front, COMDAT
; _this$ = ecx

; 1281 : 		{	// erase element at beginning

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1282 : 		erase(begin());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::erase

; 1283 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEAAU?$pair@MPAVVuEntity@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEAAU?$pair@MPAVVuEntity@@@2@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::front, COMDAT
; _this$ = ecx

; 1256 : 		{	// return first element of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1257 : 		return (*begin());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
	mov	ecx, eax
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEAAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator*

; 1258 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEAAU?$pair@MPAVVuEntity@@@2@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::front
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty, COMDAT
; _this$ = ecx

; 1246 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1247 : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv70[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv70[ebp]

; 1248 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?max_size@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::max_size, COMDAT
; _this$ = ecx

; 1241 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1242 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size

; 1243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1156 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1157 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1158 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1146 : 		{	// return unchecked iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1147 : 		return (_Unchecked_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1148 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end, COMDAT
; _this$ = ecx

; 1124 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1125 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1126 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin, COMDAT
; _this$ = ecx

; 1114 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1115 : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1116 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx

; 1091 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Tidy

; 1093 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?insert@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@$$QAU?$pair@MPAVVuEntity@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@$$QAU?$pair@MPAVVuEntity@@@2@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::insert, COMDAT
; _this$ = ecx

; 1041 : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1042 : 		return (emplace(_Where, _STD forward<_Ty>(_Val)));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::emplace<std::pair<float,VuEntity *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1043 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@$$QAU?$pair@MPAVVuEntity@@@2@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::insert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?push_back@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEX$$QAU?$pair@MPAVVuEntity@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEX$$QAU?$pair@MPAVVuEntity@@@2@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::push_back, COMDAT
; _this$ = ecx

; 1036 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1037 : 		_Insert(_Unchecked_end(), _STD forward<_Ty>(_Val));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Unchecked_end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@U?$pair@MPAVVuEntity@@@std@@@std@@YA$$QAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::forward<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@U?$pair@MPAVVuEntity@@@std@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAU?$pair@MPAVVuEntity@@@1@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Insert<std::pair<float,VuEntity *> >

; 1038 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEX$$QAU?$pair@MPAVVuEntity@@@2@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx

; 904  : 		{	// construct empty list, allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >

; 905  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx

; 899  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >

; 900  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z PROC ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Freenode, COMDAT
; _this$ = ecx

; 854  : 		{	// give node back

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 855  : 		this->_Getal().destroy(
; 856  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>

; 857  : 		this->_Getal().destroy(
; 858  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>

; 859  : 		this->_Getal().destroy(
; 860  : 			_STD addressof(this->_Myval(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@MPAVVuEntity@@@std@@@std@@YAPAU?$pair@MPAVVuEntity@@@0@AAU10@@Z ; std::addressof<std::pair<float,VuEntity *> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@MPAVVuEntity@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@MPAVVuEntity@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::pair<float,VuEntity *> >

; 861  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate

; 862  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ENDP ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z PROC ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx

; 829  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >

; 830  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_buy@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::_List_buy<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal, COMDAT
; _this$ = ecx

; 809  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 811  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
tv135 = -44						; size = 4
tv134 = -40						; size = 4
tv133 = -36						; size = 4
tv132 = -32						; size = 4
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buynode0, COMDAT
; _this$ = ecx

; 787  : 		{	// allocate a node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 788  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 789  : 
; 790  : 		if (_Next == _Nodeptr())

	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0

; 791  : 			{	// point at self
; 792  : 			_Next = _Pnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx

; 793  : 			_Prev = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:

; 794  : 			}
; 795  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 796  : 		this->_Getal().construct(
; 797  : 			_STD addressof(this->_Nextnode(_Pnode)), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv132[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	DWORD PTR tv133[ebp], eax
	lea	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv133[ebp]
	call	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>

; 798  : 		this->_Getal().construct(
; 799  : 			_STD addressof(this->_Prevnode(_Pnode)), _Prev);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::construct<std::_List_node<std::pair<float,VuEntity *>,void *> *,std::_List_node<std::pair<float,VuEntity *>,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$0:

; 800  : 		_CATCH_ALL
; 801  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate

; 802  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 803  : 		_CATCH_END

	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z$1:

; 804  : 
; 805  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:

; 806  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buynode0
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 777  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 778  : 		this->_Getal().destroy(
; 779  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>

; 780  : 		this->_Getal().destroy(
; 781  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<float,VuEntity *>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::destroy<std::_List_node<std::pair<float,VuEntity *>,void *> *>

; 782  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate

; 783  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 772  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buynode0

; 774  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Swap_alloc@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Swap_alloc@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXAAV12@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Swap_alloc, COMDAT
; _this$ = ecx

; 721  : 		{	// swap allocators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_alloc@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Swap_alloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >, COMDAT
; _this$ = ecx

; 712  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 713  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Freeheadnode

; 714  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >, COMDAT
; _this$ = ecx

; 706  : 	_List_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >

; 707  : 		{	// construct head node, allocator from _Al
; 708  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 709  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MPAVVuEntity@@@std@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >::_List_alloc<0,std::_List_base_types<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval, COMDAT

; 546  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 547  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 548  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAU?$pair@MPAVVuEntity@@@2@PAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode, COMDAT

; 541  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 542  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 543  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode, COMDAT

; 536  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 537  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 538  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >, COMDAT
; _this$ = ecx

; 529  : 	_List_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 		{	// initialize data
; 531  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 532  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 533  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 268435455				; 0fffffffH

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<float,VuEntity *>,void *> >
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >, COMDAT
; _this$ = ecx

; 569  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 570  : 		{	// construct by copying (do nothing)
; 571  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@U?$pair@MPAVVuEntity@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >::allocator<std::_List_node<std::pair<float,VuEntity *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@MPAVVuEntity@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<float,VuEntity *> >::allocator<std::pair<float,VuEntity *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ??RScoreEntityPairSort@VuSessionEntity@@QBE_NAAU?$pair@MPAVVuEntity@@@std@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??RScoreEntityPairSort@VuSessionEntity@@QBE_NAAU?$pair@MPAVVuEntity@@@std@@0@Z PROC ; VuSessionEntity::ScoreEntityPairSort::operator(), COMDAT
; _this$ = ecx

; 303  : 		bool operator ()(ScoreEntityPair &s1, ScoreEntityPair &s2) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 			return s1.first < s2.first;

	mov	eax, DWORD PTR _s2$[ebp]
	mov	ecx, DWORD PTR _s1$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx]
	jbe	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 305  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??RScoreEntityPairSort@VuSessionEntity@@QBE_NAAU?$pair@MPAVVuEntity@@@std@@0@Z ENDP ; VuSessionEntity::ScoreEntityPairSort::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1693 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1694 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Xlen, COMDAT
; _this$ = ecx

; 1666 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1667 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1668 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Tidy, COMDAT
; _this$ = ecx

; 1535 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1536 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1537 : 			{	// something to free, destroy and deallocate it
; 1538 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1539 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy

; 1540 : 			this->_Getal().deallocate(this->_Myfirst,
; 1541 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate

; 1542 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1543 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1544 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1545 : 			}
; 1546 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reserve, COMDAT
; _this$ = ecx

; 1525 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1526 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1527 : 			{	// need more room, try to get it
; 1528 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1529 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Xlen
$LN1@Reserve:

; 1530 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEII@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reallocate
$LN4@Reserve:

; 1531 : 			}
; 1532 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1500 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1501 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1502 : 
; 1503 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1504 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$VuBin@VVuEntity@@@@@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEPAV?$VuBin@VVuEntity@@@@PAV2@00@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Umove<VuBin<VuEntity> *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$0:

; 1505 : 		_CATCH_ALL
; 1506 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate

; 1507 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1508 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z$1:

; 1509 : 
; 1510 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1511 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1512 : 			{	// destroy and deallocate old array
; 1513 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy

; 1514 : 			this->_Getal().deallocate(this->_Myfirst,
; 1515 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate
$LN1@Reallocate:

; 1516 : 			}
; 1517 : 
; 1518 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1519 : 		this->_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1520 : 		this->_Mylast = _Ptr + _Size;

	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1521 : 		this->_Myfirst = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@Reallocate:

; 1522 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reallocate
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBE_NPBV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBE_NPBV?$VuBin@VVuEntity@@@@@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Inside, COMDAT
; _this$ = ecx

; 1495 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1496 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]

; 1497 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBE_NPBV?$VuBin@VVuEntity@@@@@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEII@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1484 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1485 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1486 : 
; 1487 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1488 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1489 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1490 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1491 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1492 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEII@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy, COMDAT
; _this$ = ecx

; 1478 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1479 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal

; 1480 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@YAXPAV?$VuBin@VVuEntity@@@@0AAU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > > >
	add	esp, 12					; 0000000cH

; 1481 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?clear@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::clear, COMDAT
; _this$ = ecx

; 1413 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1414 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1415 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy

; 1416 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1417 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?erase@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::erase, COMDAT
; _this$ = ecx

; 1370 : 		{	// erase element at where

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1371 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1372 : 			_VIPTR(_Where));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	add	eax, 4
	push	eax
	call	??$_Move@PAV?$VuBin@VVuEntity@@@@PAV1@@std@@YAPAV?$VuBin@VVuEntity@@@@PAV1@00@Z ; std::_Move<VuBin<VuEntity> *,VuBin<VuEntity> *>
	add	esp, 12					; 0000000cH

; 1373 : 		_Destroy(this->_Mylast - 1, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Destroy

; 1374 : 		--this->_Mylast;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1375 : 		return (_Make_iter(_Where));

	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1376 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXABV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXABV?$VuBin@VVuEntity@@@@@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::push_back, COMDAT
; _this$ = ecx

; 1184 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1185 : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::addressof<VuBin<VuEntity> const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBE_NPBV?$VuBin@VVuEntity@@@@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back

; 1186 : 			{	// push back an element
; 1187 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBV?$VuBin@VVuEntity@@@@@std@@YAPBV?$VuBin@VVuEntity@@@@ABV1@@Z ; std::addressof<VuBin<VuEntity> const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax

; 1188 : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back

; 1189 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reserve
$LN3@push_back:

; 1190 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Orphan_range

; 1191 : 			this->_Getal().construct(this->_Mylast,
; 1192 : 				this->_Myfirst[_Idx]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$VuBin@VVuEntity@@@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> &>

; 1193 : 			++this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1194 : 			}
; 1195 : 		else

	jmp	SHORT $LN5@push_back
$LN4@push_back:

; 1196 : 			{	// push back a non-element
; 1197 : 			if (this->_Mylast == this->_Myend)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN1@push_back

; 1198 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXI@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Reserve
$LN1@push_back:

; 1199 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IBEXPAV?$VuBin@VVuEntity@@@@0@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Orphan_range

; 1200 : 			this->_Getal().construct(this->_Mylast,
; 1201 : 				_Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$VuBin@VVuEntity@@@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::construct<VuBin<VuEntity>,VuBin<VuEntity> const &>

; 1202 : 			++this->_Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@push_back:

; 1203 : 			}
; 1204 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXABV?$VuBin@VVuEntity@@@@@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[], COMDAT
; _this$ = ecx

; 1136 : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1137 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1138 : 		if (size() <= _Pos)
; 1139 : 			{	// report error
; 1140 : 			_DEBUG_ERROR("vector subscript out of range");
; 1141 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1142 : 			}
; 1143 : 
; 1144 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1145 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1146 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1147 : 
; 1148 : 		return (*(this->_Myfirst + _Pos));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@I@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[], COMDAT
; _this$ = ecx

; 1120 : 		{	// subscript nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1121 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1122 : 		if (size() <= _Pos)
; 1123 : 			{	// report error
; 1124 : 			_DEBUG_ERROR("vector subscript out of range");
; 1125 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1126 : 			}
; 1127 : 
; 1128 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1129 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1130 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1131 : 
; 1132 : 		return (*(this->_Myfirst + _Pos));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 1133 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::max_size, COMDAT
; _this$ = ecx

; 1091 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::max_size

; 1093 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size, COMDAT
; _this$ = ecx

; 1086 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1087 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1088 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1001 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1002 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1003 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?end@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::end, COMDAT
; _this$ = ecx

; 991  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 992  : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 993  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::begin, COMDAT
; _this$ = ecx

; 981  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 982  : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@PAV?$VuBin@VVuEntity@@@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 983  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 971  : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 972  : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 973  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::capacity, COMDAT
; _this$ = ecx

; 966  : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 967  : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 968  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 899  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@IAEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::_Tidy

; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 685  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ ; std::allocator<VuBin<VuEntity> >::allocator<VuBin<VuEntity> >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VVuEntity@@@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >

; 686  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal, COMDAT
; _this$ = ecx

; 646  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 648  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 593  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >

; 594  : 		{	// construct allocator from _Al
; 595  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >::_Vector_alloc<0,std::_Vec_base_types<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 484  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 485  : 		{	// initialize values
; 486  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 487  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 488  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 489  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >::_Vector_val<std::_Simple_types<VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuSessionEntity@@AAEHXZ PROC			; VuSessionEntity::LocalSize
; _this$ = ecx

; 1355 : int VuSessionEntity::LocalSize(){

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1356 : 	return sizeof(lastCollisionCheckTime_)
; 1357 : 			+ sizeof(sessionId_)
; 1358 : 			+ sizeof(address_) //sfr: converts address size
; 1359 : 			+ sizeof(domainMask_)
; 1360 : 			+ sizeof(loadMetric_)
; 1361 : 			
; 1362 : 			+ sizeof(gameId_)
; 1363 : 			//+ sizeof(VU_ID)
; 1364 : 
; 1365 : 			+ sizeof(groupCount_)
; 1366 : 			+ (groupCount_ * sizeof(VU_ID))
; 1367 : #ifdef VU_SIMPLE_LATENCY
; 1368 : 			+ sizeof(VU_TIME)
; 1369 : 			+ sizeof(VU_TIME)
; 1370 : #endif
; 1371 : #ifdef VU_TRACK_LATENCY
; 1372 : 			+ sizeof(timeSyncState_)
; 1373 : 			+ sizeof(latency_)    
; 1374 : 			+ sizeof(masterTime_)
; 1375 : 			+ sizeof(masterTimePostTime_)
; 1376 : 			+ sizeof(responseTime_)
; 1377 : 			+ sizeof(masterTimeOwner_)
; 1378 : #endif
; 1379 : 			+ strlen(callsign_)+1
; 1380 : 			// camera
; 1381 : 			+ sizeof(unsigned char)
; 1382 : 			+ (cameras_.size() * sizeof(VU_ID))
; 1383 : 			;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	esi, BYTE PTR [eax+360]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_strlen
	add	esp, 4
	lea	esi, DWORD PTR [eax+esi*8+38]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	lea	eax, DWORD PTR [esi+eax*8+2]

; 1384 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuSessionEntity@@AAEHXZ ENDP			; VuSessionEntity::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_gnode$1 = -12						; size = 4
_group$2 = -8						; size = 4
_this$ = -4						; size = 4
?RemovalCallback@VuSessionEntity@@MAEHXZ PROC		; VuSessionEntity::RemovalCallback
; _this$ = ecx

; 1718 : VU_ERRCODE VuSessionEntity::RemovalCallback() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1719 : 	if (this != vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@RemovalCal

; 1720 : 		VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1721 : 		VuGroupNode* gnode = groupHead_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR _gnode$1[ebp], eax
$LN4@RemovalCal:

; 1722 : 
; 1723 : 		while (gnode) {

	cmp	DWORD PTR _gnode$1[ebp], 0
	je	SHORT $LN3@RemovalCal

; 1724 : 			VuGroupEntity* group = (VuGroupEntity*)vuDatabase->Find(gnode->gid_);

	mov	ecx, DWORD PTR _gnode$1[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _group$2[ebp], eax

; 1725 : 			if (group && group->IsGroup()) {

	cmp	DWORD PTR _group$2[ebp], 0
	je	SHORT $LN2@RemovalCal
	mov	ecx, DWORD PTR _group$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _group$2[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@RemovalCal

; 1726 : 				VuxGroupRemoveSession(group, this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _group$2[ebp]
	push	eax
	call	?VuxGroupRemoveSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupRemoveSession
	add	esp, 8
$LN2@RemovalCal:

; 1727 : 			}
; 1728 : 			gnode = gnode->next_;

	mov	ecx, DWORD PTR _gnode$1[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _gnode$1[ebp], edx

; 1729 : 		}

	jmp	SHORT $LN4@RemovalCal
$LN3@RemovalCal:

; 1730 : 		VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1731 : 
; 1732 : 		if (Game()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN1@RemovalCal

; 1733 : 			VuxGroupRemoveSession(Game(), this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	push	eax
	call	?VuxGroupRemoveSession@@YAHPAVVuGroupEntity@@PAVVuSessionEntity@@@Z ; VuxGroupRemoveSession
	add	esp, 8
$LN1@RemovalCal:

; 1734 : 		}
; 1735 : 		VuxSessionDisconnect(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?VuxSessionDisconnect@@YAXPAVVuSessionEntity@@@Z ; VuxSessionDisconnect
	add	esp, 4

; 1736 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN6@RemovalCal
$LN5@RemovalCal:

; 1737 : 	}
; 1738 : 	return VU_NO_OP;

	xor	eax, eax
$LN6@RemovalCal:

; 1739 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemovalCallback@VuSessionEntity@@MAEHXZ ENDP		; VuSessionEntity::RemovalCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv88 = -16						; size = 4
_gnode$1 = -12						; size = 4
_group$2 = -8						; size = 4
_this$ = -4						; size = 4
?InsertionCallback@VuSessionEntity@@MAEHXZ PROC		; VuSessionEntity::InsertionCallback
; _this$ = ecx

; 1691 : VU_ERRCODE VuSessionEntity::InsertionCallback() {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1692 : 	if (this != vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@InsertionC

; 1693 : 		vuLocalSessionEntity->SetDirty ();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 1694 : 		VuxSessionConnect(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?VuxSessionConnect@@YAHPAVVuSessionEntity@@@Z ; VuxSessionConnect
	add	esp, 4

; 1695 : 		if (Game()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN4@InsertionC

; 1696 : 			action_ = VU_JOIN_GAME_ACTION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+412], 1

; 1697 : 			Game()->AddSession(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN4@InsertionC:

; 1698 : 		}
; 1699 : 
; 1700 : 		VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1701 : 		VuGroupNode* gnode = groupHead_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR _gnode$1[ebp], ecx
$LN3@InsertionC:

; 1702 : 
; 1703 : 		while (gnode) {

	cmp	DWORD PTR _gnode$1[ebp], 0
	je	SHORT $LN2@InsertionC

; 1704 : 			VuGroupEntity* group = (VuGroupEntity*)vuDatabase->Find(gnode->gid_);

	mov	edx, DWORD PTR _gnode$1[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _group$2[ebp], eax

; 1705 : 			if (group && group->IsGroup()) {

	cmp	DWORD PTR _group$2[ebp], 0
	je	SHORT $LN1@InsertionC
	mov	edx, DWORD PTR _group$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _group$2[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@InsertionC

; 1706 : 				group->AddSession(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _group$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _group$2[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN1@InsertionC:

; 1707 : 			}
; 1708 : 			gnode = gnode->next_;

	mov	eax, DWORD PTR _gnode$1[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _gnode$1[ebp], ecx

; 1709 : 		}

	jmp	SHORT $LN3@InsertionC
$LN2@InsertionC:

; 1710 : 		VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1711 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN6@InsertionC
$LN5@InsertionC:

; 1712 : 	}
; 1713 : 	return VU_NO_OP;

	xor	eax, eax
$LN6@InsertionC:

; 1714 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InsertionCallback@VuSessionEntity@@MAEHXZ ENDP		; VuSessionEntity::InsertionCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$2 = -124						; size = 24
_iter$3 = -100						; size = 12
$T4 = -88						; size = 8
$T5 = -80						; size = 8
$T6 = -72						; size = 8
$T7 = -64						; size = 8
_nextEnt$8 = -56					; size = 4
_count$9 = -52						; size = 4
$T10 = -48						; size = 4
_event$11 = -44						; size = 4
$T12 = -40						; size = 4
tv144 = -36						; size = 4
$T13 = -32						; size = 4
_sess$14 = -28						; size = 4
_game$ = -24						; size = 4
_ent$15 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CloseSession@VuSessionEntity@@IAEXXZ PROC		; VuSessionEntity::CloseSession
; _this$ = ecx

; 1801 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CloseSession@VuSessionEntity@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1802 : 	VuGroupEntity* game = Game();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR _game$[ebp], eax

; 1803 : 	if (!game){

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN14@CloseSessi

; 1804 : 		// session has no game
; 1805 : 		if (!IsLocal()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@CloseSessi

; 1806 : 			vuDatabase->Remove(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove
$LN13@CloseSessi:

; 1807 : 		}
; 1808 : 		return;

	jmp	$LN15@CloseSessi
$LN14@CloseSessi:

; 1809 : 	}
; 1810 : 
; 1811 : 	if (IsLocal()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	$LN12@CloseSessi

; 1812 : #ifdef VU_TRACK_LATENCY
; 1813 : 		SetTimeSync(VU_NO_SYNC);
; 1814 : #endif
; 1815 : 		VuSessionEvent* event = new VuSessionEvent(this, VU_SESSION_CLOSE, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN17@CloseSessi
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN18@CloseSessi
$LN17@CloseSessi:
	mov	DWORD PTR tv144[ebp], 0
$LN18@CloseSessi:
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T12[ebp]
	mov	DWORD PTR _event$11[ebp], eax

; 1816 : 		VuMessageQueue::PostVuMessage(event);

	mov	ecx, DWORD PTR _event$11[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 1817 : 		VuMessageQueue::FlushAllQueues();

	call	?FlushAllQueues@VuMessageQueue@@SAXXZ	; VuMessageQueue::FlushAllQueues

; 1818 : 
; 1819 : 		//VuMainThread::FlushOutboundMessages();
; 1820 : 		vuMainThread->FlushOutboundMessages();

	mov	ecx, DWORD PTR ?vuMainThread@@3PAVVuMainThread@@A ; vuMainThread
	call	?FlushOutboundMessages@VuMainThread@@QAEXXZ ; VuMainThread::FlushOutboundMessages

; 1821 : 		gameId_ = VU_SESSION_NULL_GROUP;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+352], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+356], ecx

; 1822 : 		game_.reset();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::reset

; 1823 : 
; 1824 : 		// sfr: session id set to 0, will be reset on open
; 1825 : 		sessionId_          = 0;

	push	0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR [edx+328], eax

; 1826 : 		share_.id_.creator_ = sessionId_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1827 : 		share_.id_.num_     = VU_SESSION_ENTITY_ID;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 3

; 1828 : 		share_.ownerId_     = share_.id_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	DWORD PTR [edx+24], ecx

; 1829 : 		vuLocalSession      = OwnerId();

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?vuLocalSession@@3VVU_ID@@A, ecx
	mov	DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4, edx

; 1830 : 	} 
; 1831 : 	// session not local
; 1832 : 	else{

	jmp	$LN11@CloseSessi
$LN12@CloseSessi:

; 1833 : 		action_ = VU_LEAVE_GAME_ACTION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+412], 3

; 1834 : 		game->RemoveSession(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _game$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _game$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx

; 1835 : 		game->Distribute(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _game$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax

; 1836 : 
; 1837 : 		// game count
; 1838 : 		int count = game_->SessionCount();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??C?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ; VuBin<VuGameEntity>::operator->
	mov	ecx, eax
	call	?SessionCount@VuGroupEntity@@QAEHXZ	; VuGroupEntity::SessionCount
	mov	DWORD PTR _count$9[ebp], eax

; 1839 : 		// sess is the first session which is not the session being removed
; 1840 : 		// it will take control of units owned by session
; 1841 : 		VuSessionEntity *sess = 0;

	mov	DWORD PTR _sess$14[ebp], 0

; 1842 : 		if (count >= 1){

	cmp	DWORD PTR _count$9[ebp], 1
	jl	SHORT $LN10@CloseSessi

; 1843 : 			VuSessionsIterator iter(Game());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	push	eax
	lea	ecx, DWORD PTR _iter$3[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1844 : 			sess = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$3[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _sess$14[ebp], eax
$LN9@CloseSessi:

; 1845 : 			while (sess == this){

	mov	ecx, DWORD PTR _sess$14[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	jne	SHORT $LN8@CloseSessi

; 1846 : 				sess = iter.GetNext();

	lea	ecx, DWORD PTR _iter$3[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _sess$14[ebp], eax

; 1847 : 			}

	jmp	SHORT $LN9@CloseSessi
$LN8@CloseSessi:

; 1848 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$3[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN10@CloseSessi:

; 1849 : 
; 1850 : 		// iterate over database to remove all entities belonging to the session
; 1851 : 		// or transfer ownership to us
; 1852 : 		VuDatabaseIterator iter;

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1853 : 		for (

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$15[ebp], eax

; 1854 : 			VuEntity* ent = iter.GetFirst(), *nextEnt;
; 1855 : 			ent != NULL;

	jmp	SHORT $LN7@CloseSessi
$LN6@CloseSessi:

; 1856 : 			ent = nextEnt
; 1857 : 		){

	mov	edx, DWORD PTR _nextEnt$8[ebp]
	mov	DWORD PTR _ent$15[ebp], edx
$LN7@CloseSessi:
	cmp	DWORD PTR _ent$15[ebp], 0
	je	$LN5@CloseSessi

; 1858 : 			nextEnt = iter.GetNext();

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _nextEnt$8[ebp], eax

; 1859 : 			// checks if entity belongs to session
; 1860 : 			if ((ent != this) && (ent->OwnerId() == Id()) && (ent->IsGlobal()))	{

	mov	eax, DWORD PTR _ent$15[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	je	$LN4@CloseSessi
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$15[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@CloseSessi
	mov	ecx, DWORD PTR _ent$15[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@CloseSessi

; 1861 : 				if (
; 1862 : 					(sess == NULL) || (ent->IsTransferrable()==0) || 
; 1863 : 					((ent->IsGame() && ((VuGameEntity *)ent)->SessionCount()==0))
; 1864 : 				){

	cmp	DWORD PTR _sess$14[ebp], 0
	je	SHORT $LN2@CloseSessi
	mov	ecx, DWORD PTR _ent$15[ebp]
	call	?IsTransferrable@VuEntity@@QBEEXZ	; VuEntity::IsTransferrable
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@CloseSessi
	mov	eax, DWORD PTR _ent$15[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$15[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CloseSessi
	mov	ecx, DWORD PTR _ent$15[ebp]
	call	?SessionCount@VuGroupEntity@@QAEHXZ	; VuGroupEntity::SessionCount
	test	eax, eax
	jne	SHORT $LN3@CloseSessi
$LN2@CloseSessi:

; 1865 : 					// entity canot be transfered
; 1866 : 					vuDatabase->Remove(ent);

	mov	edx, DWORD PTR _ent$15[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 1867 : 				} 
; 1868 : 				else {

	jmp	SHORT $LN4@CloseSessi
$LN3@CloseSessi:

; 1869 : 					// give control to first session in game
; 1870 : 					ent->SetOwnerId(sess->Id());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _sess$14[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _ent$15[ebp]
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId
$LN4@CloseSessi:

; 1871 : 				}
; 1872 : 			}
; 1873 : 		}

	jmp	$LN6@CloseSessi
$LN5@CloseSessi:

; 1874 : 
; 1875 : 		// remove session from database
; 1876 : 		// but close its comms before it, to avoid getting dangling comm handlers
; 1877 : 		// in the release event
; 1878 : 		CloseComms();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseComms@VuTargetEntity@@IAEXXZ	; VuTargetEntity::CloseComms

; 1879 : 		vuDatabase->Remove(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 1880 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
$LN11@CloseSessi:

; 1881 : 
; 1882 : 	LeaveAllGroups();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeaveAllGroups@VuSessionEntity@@QAEHXZ	; VuSessionEntity::LeaveAllGroups
$LN15@CloseSessi:

; 1883 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$0:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$1:
	lea	ecx, DWORD PTR _iter$3[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?CloseSession@VuSessionEntity@@IAEXXZ$2:
	lea	ecx, DWORD PTR _iter$2[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__ehhandler$?CloseSession@VuSessionEntity@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CloseSession@VuSessionEntity@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CloseSession@VuSessionEntity@@IAEXXZ ENDP		; VuSessionEntity::CloseSession
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_iter$2 = -96						; size = 24
$T3 = -72						; size = 8
$T4 = -64						; size = 8
$T5 = -56						; size = 8
$T6 = -48						; size = 4
$T7 = -44						; size = 4
_id$ = -40						; size = 4
_dummyCreateMessage$8 = -36				; size = 4
tv276 = -32						; size = 4
$T9 = -28						; size = 4
_ch$ = -24						; size = 4
_ent$10 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ PROC ; VuSessionEntity::OpenSession
; _this$ = ecx

; 1742 : VU_SESSION_ID VuSessionEntity::OpenSession() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1743 : 	if (!IsLocal() || !vuGlobalGroup || !vuGlobalGroup->Connected()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@OpenSessio
	cmp	DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A, 0 ; vuGlobalGroup
	je	SHORT $LN9@OpenSessio
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?Connected@VuGlobalGroup@@QAEEXZ	; VuGlobalGroup::Connected
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@OpenSessio
$LN9@OpenSessio:

; 1744 : 		return 0;

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@OpenSessio
$LN10@OpenSessio:

; 1745 : 	}
; 1746 : 	ComAPIHandle ch = vuGlobalGroup->GetCommsHandle();

	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	mov	DWORD PTR _ch$[ebp], eax

; 1747 : 	if (!ch) {

	cmp	DWORD PTR _ch$[ebp], 0
	jne	SHORT $LN8@OpenSessio

; 1748 : 		ch = vuGlobalGroup->GetReliableCommsHandle();

	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	mov	DWORD PTR _ch$[ebp], eax
$LN8@OpenSessio:

; 1749 : 	}
; 1750 : 	if (!ch) {

	cmp	DWORD PTR _ch$[ebp], 0
	jne	SHORT $LN7@OpenSessio

; 1751 : 		return 0;

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@OpenSessio
$LN7@OpenSessio:

; 1752 : 	}
; 1753 : 	// get my ID
; 1754 : 	unsigned long id;
; 1755 : 	ComAPIHostIDGet(ch, (char*)&id, 1);

	push	1
	lea	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_ComAPIHostIDGet
	add	esp, 12					; 0000000cH

; 1756 : 	sessionId_ = id;

	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR [edx+328], eax

; 1757 : 
; 1758 : 	if (sessionId_ != vuLocalSession.creator_) {

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??9VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator!=
	test	eax, eax
	je	$LN6@OpenSessio

; 1759 : 		VuReferenceEntity(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 1760 : 		// temporarily make private to prevent sending of bogus delete message
; 1761 : 		share_.flags_.breakdown_.private_ = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1762 : 		vuDatabase->Remove(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 1763 : 		share_.flags_.breakdown_.private_ = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1764 : 		share_.ownerId_.creator_ = sessionId_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 1765 : 
; 1766 : 		//  - reset ownerId for all local ent's
; 1767 : 		VuDatabaseIterator iter;

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1768 : 		VuEntity *ent = 0;

	mov	DWORD PTR _ent$10[ebp], 0

; 1769 : 		for (ent = iter.GetFirst(); (ent != NULL); ent = iter.GetNext()) {

	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$10[ebp], eax
	jmp	SHORT $LN5@OpenSessio
$LN4@OpenSessio:
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _ent$10[ebp], eax
$LN5@OpenSessio:
	cmp	DWORD PTR _ent$10[ebp], 0
	je	SHORT $LN3@OpenSessio

; 1770 : 			if (
; 1771 : 				(ent->OwnerId() == vuLocalSession) && 
; 1772 : 				(ent != vuPlayerPoolGroup)&&
; 1773 : 				(ent != vuGlobalGroup)
; 1774 : 			){

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$10[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@OpenSessio
	mov	edx, DWORD PTR _ent$10[ebp]
	cmp	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	SHORT $LN2@OpenSessio
	mov	eax, DWORD PTR _ent$10[ebp]
	cmp	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	je	SHORT $LN2@OpenSessio

; 1775 : 				ent->SetOwnerId(OwnerId());

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _ent$10[ebp]
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId
$LN2@OpenSessio:

; 1776 : 			}
; 1777 : 		}

	jmp	SHORT $LN4@OpenSessio
$LN3@OpenSessio:

; 1778 : 		VuMessageQueue::FlushAllQueues();

	call	?FlushAllQueues@VuMessageQueue@@SAXXZ	; VuMessageQueue::FlushAllQueues

; 1779 : 		share_.id_.creator_ = sessionId_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1780 : 		vuLocalSession = OwnerId();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR ?vuLocalSession@@3VVU_ID@@A, edx
	mov	DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4, eax

; 1781 : 		//SetVuState(VU_MEM_ACTIVE);
; 1782 : 		vuDatabase->/*Quick*/Insert(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 1783 : 		VuDeReferenceEntity(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 1784 : 	} 

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$2[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator

; 1785 : 	else {

	jmp	SHORT $LN1@OpenSessio
$LN6@OpenSessio:

; 1786 : 		VuMessage *dummyCreateMessage = new VuCreateEvent(this, vuGlobalGroup);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN13@OpenSessio
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuCreateEvent::VuCreateEvent
	mov	DWORD PTR tv276[ebp], eax
	jmp	SHORT $LN14@OpenSessio
$LN13@OpenSessio:
	mov	DWORD PTR tv276[ebp], 0
$LN14@OpenSessio:
	mov	edx, DWORD PTR tv276[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR _dummyCreateMessage$8[ebp], eax

; 1787 : 		dummyCreateMessage->RequestReliableTransmit();

	mov	ecx, DWORD PTR _dummyCreateMessage$8[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 1788 : 		VuMessageQueue::PostVuMessage(dummyCreateMessage);

	mov	ecx, DWORD PTR _dummyCreateMessage$8[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN1@OpenSessio:

; 1789 : 	}
; 1790 : 	//  danm_note: not needed, as vuGlobalGroup membership is implicit
; 1791 : 	//  JoinGroup(vuGlobalGroup);
; 1792 : 	JoinGame(vuPlayerPoolGroup);

	mov	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame

; 1793 : 	return sessionId_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@OpenSessio:

; 1794 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ$0:
	lea	ecx, DWORD PTR _iter$2[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenSession@VuSessionEntity@@IAE?AVVU_SESSION_ID@@XZ ENDP ; VuSessionEntity::OpenSession
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_typeindex$ = 8						; size = 2
_domainMask$ = 12					; size = 4
_callsign$ = 16						; size = 4
??0VuSessionEntity@@IAE@GKPAD@Z PROC			; VuSessionEntity::VuSessionEntity
; _this$ = ecx

; 1143 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEntity@@IAE@GKPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	movzx	eax, WORD PTR _typeindex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@GK@Z		; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuSessionEntity@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	call	_ComAPIGetMyReliableRecvPort
	movzx	edx, ax
	push	edx
	call	_ComAPIGetMyRecvPort
	movzx	eax, ax
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _domainMask$[ebp]
	mov	DWORD PTR [ecx+340], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+348], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+352], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+356], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+368], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+372], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+376], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+412], 0

; 1144 : 	share_.id_.creator_ = sessionId_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 1145 : 	share_.id_.num_     = VU_SESSION_ENTITY_ID;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 3

; 1146 : 	share_.ownerId_     = share_.id_;   // need to reset this

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx

; 1147 : 	SetCallsign(callsign);

	mov	ecx, DWORD PTR _callsign$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCallsign@VuSessionEntity@@QAEXPBD@Z	; VuSessionEntity::SetCallsign

; 1148 : 	SetKeepaliveTime(vuxRealTime);

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 1149 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	jmp	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
__unwindfunclet$??0VuSessionEntity@@IAE@GKPAD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	jmp	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
__ehhandler$??0VuSessionEntity@@IAE@GKPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEntity@@IAE@GKPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEntity@@IAE@GKPAD@Z ENDP			; VuSessionEntity::VuSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_timer$2 = -64						; size = 4
$T3 = -60						; size = 4
tv190 = -56						; size = 4
$T4 = -52						; size = 4
tv141 = -48						; size = 4
_game$5 = -44						; size = 4
_group$6 = -40						; size = 4
_group$7 = -36						; size = 4
tv68 = -32						; size = 4
_game$8 = -28						; size = 4
_game$9 = -24						; size = 4
_retval$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_event$ = 8						; size = 4
?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z PROC	; VuSessionEntity::Handle
; _this$ = ecx

; 2212 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2213 : 	int retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1

; 2214 : 	SetKeepaliveTime(vuxRealTime);

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 2215 : 
; 2216 : 	switch(event->subtype_)

	mov	ecx, DWORD PTR _event$[ebp]
	movzx	edx, WORD PTR [ecx+48]
	mov	DWORD PTR tv68[ebp], edx
	mov	eax, DWORD PTR tv68[ebp]
	sub	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 6
	ja	$LN1@Handle
	mov	ecx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN28@Handle[ecx*4]
$LN19@Handle:

; 2217 : 	{
; 2218 : 		case VU_SESSION_CLOSE:
; 2219 : 		{
; 2220 : 			CloseSession();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseSession@VuSessionEntity@@IAEXXZ	; VuSessionEntity::CloseSession

; 2221 : 			break;

	jmp	$LN20@Handle
$LN18@Handle:

; 2222 : 		}
; 2223 : 		case VU_SESSION_JOIN_GAME:
; 2224 : 		{
; 2225 : 			VuGameEntity* game = (VuGameEntity*)vuDatabase->Find(event->group_);

	mov	edx, DWORD PTR _event$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _game$9[ebp], eax

; 2226 : 			if (game && game->IsGame())

	cmp	DWORD PTR _game$9[ebp], 0
	je	SHORT $LN17@Handle
	mov	edx, DWORD PTR _game$9[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _game$9[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@Handle

; 2227 : 			{
; 2228 : 				game->Distribute(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _game$9[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _game$9[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx

; 2229 : 				JoinGame(game);

	mov	eax, DWORD PTR _game$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame

; 2230 : 			} 
; 2231 : 			else

	jmp	SHORT $LN16@Handle
$LN17@Handle:

; 2232 : 			{
; 2233 : 				retval = 0;

	mov	DWORD PTR _retval$[ebp], 0
$LN16@Handle:

; 2234 : 			}
; 2235 : 
; 2236 : 			break;

	jmp	$LN20@Handle
$LN15@Handle:

; 2237 : 		}
; 2238 : 		case VU_SESSION_CHANGE_GAME:
; 2239 : 		{
; 2240 : 			retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 2241 : 
; 2242 : 			if (Game()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	$LN14@Handle

; 2243 : 				Game()->Distribute(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv141[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx

; 2244 : 				VuGameEntity* game = (VuGameEntity*)vuDatabase->Find(event->group_);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _game$8[ebp], eax

; 2245 : 				if (game)

	cmp	DWORD PTR _game$8[ebp], 0
	je	SHORT $LN13@Handle

; 2246 : 				{
; 2247 : 					if (game->IsGame())

	mov	eax, DWORD PTR _game$8[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _game$8[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Handle

; 2248 : 					{
; 2249 : 						retval = 1;

	mov	DWORD PTR _retval$[ebp], 1

; 2250 : 						game->Distribute(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _game$8[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _game$8[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax

; 2251 : 						JoinGame(game);

	mov	ecx, DWORD PTR _game$8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
$LN12@Handle:

; 2252 : 					}
; 2253 : 				}
; 2254 : 				else

	jmp	SHORT $LN14@Handle
$LN13@Handle:

; 2255 : 				{
; 2256 : 					//					MonoPrint ("Session refers to a game that does not exist\n");
; 2257 : 					VuTimerEvent *timer = new VuTimerEvent(0, vuxRealTime + 1000, VU_DELAY_TIMER, event);

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN24@Handle
	mov	edx, DWORD PTR _event$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	add	eax, 1000				; 000003e8H
	push	eax
	push	0
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z ; VuTimerEvent::VuTimerEvent
	mov	DWORD PTR tv190[ebp], eax
	jmp	SHORT $LN25@Handle
$LN24@Handle:
	mov	DWORD PTR tv190[ebp], 0
$LN25@Handle:
	mov	ecx, DWORD PTR tv190[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _timer$2[ebp], edx

; 2258 : 					VuMessageQueue::PostVuMessage(timer);

	mov	eax, DWORD PTR _timer$2[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN14@Handle:

; 2259 : 				}
; 2260 : 			}
; 2261 : 			break;

	jmp	$LN20@Handle
$LN10@Handle:

; 2262 : 		}
; 2263 : 		case VU_SESSION_JOIN_GROUP:
; 2264 : 		{
; 2265 : 			VuGroupEntity* group = (VuGroupEntity*)vuDatabase->Find(event->group_);

	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _group$7[ebp], eax

; 2266 : 			if (group && group->IsGroup())

	cmp	DWORD PTR _group$7[ebp], 0
	je	SHORT $LN9@Handle
	mov	ecx, DWORD PTR _group$7[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _group$7[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@Handle

; 2267 : 			{
; 2268 : 				JoinGroup(group);

	mov	edx, DWORD PTR _group$7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ; VuSessionEntity::JoinGroup

; 2269 : 			}
; 2270 : 			else

	jmp	SHORT $LN8@Handle
$LN9@Handle:

; 2271 : 			{
; 2272 : 				retval = 0;

	mov	DWORD PTR _retval$[ebp], 0
$LN8@Handle:

; 2273 : 			}
; 2274 : 			break;

	jmp	$LN20@Handle
$LN7@Handle:

; 2275 : 		}
; 2276 : 		case VU_SESSION_LEAVE_GROUP:
; 2277 : 		{
; 2278 : 			VuGroupEntity* group = (VuGroupEntity*)vuDatabase->Find(event->group_);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _group$6[ebp], eax

; 2279 : 			if (group && group->IsGroup())

	cmp	DWORD PTR _group$6[ebp], 0
	je	SHORT $LN6@Handle
	mov	eax, DWORD PTR _group$6[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _group$6[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@Handle

; 2280 : 			{
; 2281 : 				LeaveGroup(group);

	mov	edx, DWORD PTR _group$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ; VuSessionEntity::LeaveGroup

; 2282 : 			}
; 2283 : 			else

	jmp	SHORT $LN5@Handle
$LN6@Handle:

; 2284 : 			{
; 2285 : 				retval = 0;

	mov	DWORD PTR _retval$[ebp], 0
$LN5@Handle:

; 2286 : 			}
; 2287 : 			break;

	jmp	SHORT $LN20@Handle
$LN4@Handle:

; 2288 : 		}
; 2289 : 		case VU_SESSION_DISTRIBUTE_ENTITIES:
; 2290 : 		{
; 2291 : 			VuGameEntity* game = (VuGameEntity*)vuDatabase->Find(event->group_);

	mov	eax, DWORD PTR _event$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _game$5[ebp], eax

; 2292 : 
; 2293 : 			if (game)

	cmp	DWORD PTR _game$5[ebp], 0
	je	SHORT $LN3@Handle

; 2294 : 			{
; 2295 : 				game->Distribute(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _game$5[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
$LN3@Handle:

; 2296 : 			}
; 2297 : 			break;

	jmp	SHORT $LN20@Handle
$LN2@Handle:

; 2298 : 		}
; 2299 : 		case VU_SESSION_CHANGE_CALLSIGN:
; 2300 : 		{
; 2301 : 			SetCallsign(event->callsign_);

	mov	ecx, DWORD PTR _event$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCallsign@VuSessionEntity@@QAEXPBD@Z	; VuSessionEntity::SetCallsign

; 2302 : 			break;

	jmp	SHORT $LN20@Handle
$LN1@Handle:

; 2303 : 		}
; 2304 : 
; 2305 : #ifdef VU_TRACK_LATENCY
; 2306 : 		case VU_SESSION_TIME_SYNC:
; 2307 : 		{
; 2308 : 			SetTimeSync(event->syncState_);
; 2309 : 
; 2310 : 			if (event->syncState_ == VU_MASTER_SYNC &&
; 2311 : 							vuLocalSessionEntity->Game() == Game() &&
; 2312 : 							vuLocalSessionEntity->TimeSyncState() != VU_MASTER_SYNC)
; 2313 : 			{
; 2314 : 				vuLocalSessionEntity->masterTimeOwner_ = Id().creator_;
; 2315 : 			}
; 2316 : 			break;
; 2317 : 		}
; 2318 : 		case VU_SESSION_LATENCY_NOTICE:
; 2319 : 		{
; 2320 : 			SetLatency(event->gameTime_);
; 2321 : 			break;
; 2322 : 		}
; 2323 : #endif
; 2324 : 
; 2325 : 		default:
; 2326 : 		{
; 2327 : 			// do nothing
; 2328 : 			retval = 0;

	mov	DWORD PTR _retval$[ebp], 0
$LN20@Handle:

; 2329 : 			break;
; 2330 : 		}
; 2331 : 	}
; 2332 : 
; 2333 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2334 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN28@Handle:
	DD	$LN19@Handle
	DD	$LN18@Handle
	DD	$LN15@Handle
	DD	$LN10@Handle
	DD	$LN7@Handle
	DD	$LN2@Handle
	DD	$LN4@Handle
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z ENDP	; VuSessionEntity::Handle
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_sData$1 = -12						; size = 4
_this$ = -8						; size = 4
_cams$2 = -2						; size = 1
_i$3 = -1						; size = 1
_event$ = 8						; size = 4
?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z PROC ; VuSessionEntity::Handle
; _this$ = ecx

; 2150 : VU_ERRCODE VuSessionEntity::Handle(VuFullUpdateEvent* event) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 
; 2152 : 	if (event->EventData()) {

	mov	ecx, DWORD PTR _event$[ebp]
	call	?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ ; VuCreateEvent::EventData
	test	eax, eax
	je	$LN6@Handle

; 2153 : 		SetKeepaliveTime(vuxRealTime);

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 2154 : 		if (this != vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN6@Handle

; 2155 : 			VuSessionEntity* sData = static_cast<VuSessionEntity*>(event->EventData());

	mov	ecx, DWORD PTR _event$[ebp]
	call	?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ ; VuCreateEvent::EventData
	mov	DWORD PTR _sData$1[ebp], eax

; 2156 : 
; 2157 : #ifdef VU_TRACK_LATENCY
; 2158 : 			if (vuLocalSessionEntity->TimeSyncState() == VU_MASTER_SYNC) {
; 2159 : 				// gather statistics
; 2160 : 				if (vuLocalSessionEntity->masterTimeOwner_ ==
; 2161 : 								sData->masterTimeOwner_ &&
; 2162 : 								latency_ == sData->Latency()) {
; 2163 : 
; 2164 : 					int lag = ( (event->PostTime() - sData->masterTime_) -
; 2165 : 									(sData->responseTime_ - sData->masterTimePostTime_));
; 2166 : 					lag = lag/2;
; 2167 : 
; 2168 : 					if (lag < 0) lag = 0;
; 2169 : 
; 2170 : 					lagTotal_ += lag;
; 2171 : 
; 2172 : 					lagPackets_++;
; 2173 : 					if (lagPackets_ >= lagUpdate_) {
; 2174 : 						VU_TIME newlatency = lagTotal_ / lagPackets_;
; 2175 : 						if (newlatency != latency_) {
; 2176 : 							VuSessionEvent *event =
; 2177 : 									new VuSessionEvent(this, VU_SESSION_LATENCY_NOTICE, Game());
; 2178 : 							event->gameTime_ = newlatency;
; 2179 : 							VuMessageQueue::PostVuMessage(event);
; 2180 : 						}
; 2181 : 
; 2182 : 						latency_    = newlatency;
; 2183 : 						lagTotal_   = 0;
; 2184 : 						lagPackets_ = 0;
; 2185 : 						lagUpdate_  = lagUpdate_ * 2;
; 2186 : 					}
; 2187 : 				}
; 2188 : 			} 
; 2189 : 			else if (sData->TimeSyncState() == VU_MASTER_SYNC &&
; 2190 : 							vuLocalSessionEntity->GameId() == GameId()) {
; 2191 : 				vuLocalSessionEntity->masterTime_         = sData->masterTime_;
; 2192 : 				vuLocalSessionEntity->masterTimePostTime_ = event->PostTime();
; 2193 : 				vuLocalSessionEntity->masterTimeOwner_    = Id().creator_;
; 2194 : 			}
; 2195 : #endif //VU_TRACK_LATENCY
; 2196 : 			if (strcmp(callsign_, sData->callsign_)) {

	mov	eax, DWORD PTR _sData$1[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+344]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@Handle

; 2197 : 				SetCallsign(sData->callsign_);

	mov	ecx, DWORD PTR _sData$1[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCallsign@VuSessionEntity@@QAEXPBD@Z	; VuSessionEntity::SetCallsign
$LN4@Handle:

; 2198 : 			}
; 2199 : 
; 2200 : 			// copy cameras
; 2201 : 			ClearCameras(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCameras@VuSessionEntity@@QAEX_N@Z	; VuSessionEntity::ClearCameras

; 2202 : 			unsigned char cams = sData->CameraCount();

	mov	ecx, DWORD PTR _sData$1[ebp]
	call	?CameraCount@VuSessionEntity@@QBEHXZ	; VuSessionEntity::CameraCount
	mov	BYTE PTR _cams$2[ebp], al

; 2203 : 			for (unsigned char i=0;i<cams;++i){

	mov	BYTE PTR _i$3[ebp], 0
	jmp	SHORT $LN3@Handle
$LN2@Handle:
	mov	al, BYTE PTR _i$3[ebp]
	add	al, 1
	mov	BYTE PTR _i$3[ebp], al
$LN3@Handle:
	movzx	ecx, BYTE PTR _i$3[ebp]
	movzx	edx, BYTE PTR _cams$2[ebp]
	cmp	ecx, edx
	jge	SHORT $LN6@Handle

; 2204 : 				AttachCamera(sData->GetCameraEntity(i), true);

	push	1
	movzx	eax, BYTE PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _sData$1[ebp]
	call	?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z ; VuSessionEntity::GetCameraEntity
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::AttachCamera

; 2205 : 			}

	jmp	SHORT $LN2@Handle
$LN6@Handle:

; 2206 : 		}
; 2207 : 	}
; 2208 : 	return VuEntity::Handle(event);

	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Handle@VuEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuEntity::Handle

; 2209 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z ENDP ; VuSessionEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv71 = -12						; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
_event$ = 8						; size = 4
?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z PROC	; VuSessionEntity::Handle
; _this$ = ecx

; 2122 : VU_ERRCODE VuSessionEntity::Handle(VuEvent* event) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2123 : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 2124 : 
; 2125 : 	switch(event->Type()) {

	mov	ecx, DWORD PTR _event$[ebp]
	call	?Type@VuMessage@@QBEEXZ			; VuMessage::Type
	mov	BYTE PTR tv71[ebp], al
	cmp	BYTE PTR tv71[ebp], 7
	je	SHORT $LN3@Handle
	jmp	SHORT $LN4@Handle
$LN3@Handle:

; 2126 : 		case VU_DELETE_EVENT:
; 2127 : #if !NO_RELEASE_EVENT
; 2128 : 		case VU_RELEASE_EVENT:
; 2129 : #endif
; 2130 : 			if (Game() && this != vuLocalSessionEntity) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN2@Handle
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Handle

; 2131 : 				JoinGame(vuPlayerPoolGroup);

	mov	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
$LN2@Handle:

; 2132 : 			}
; 2133 : 			retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN4@Handle:

; 2134 : 		break;
; 2135 : 		default:
; 2136 : 			// do nothing
; 2137 : 			break;
; 2138 : 	}
; 2139 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 2140 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z ENDP	; VuSessionEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
_e$3 = -36						; size = 4
_e$4 = -32						; size = 4
tv167 = -28						; size = 4
_e$5 = -24						; size = 4
_it$6 = -20						; size = 4
_e$7 = -16						; size = 4
_it$8 = -12						; size = 4
_this$ = -8						; size = 4
$T9 = -1						; size = 1
_qty$ = 8						; size = 4
_timestamp$ = 12					; size = 4
?SendBestEnqueuedPositionUpdatesAndClear@VuSessionEntity@@QAEXIK@Z PROC ; VuSessionEntity::SendBestEnqueuedPositionUpdatesAndClear
; _this$ = ecx

; 2350 : void VuSessionEntity::SendBestEnqueuedPositionUpdatesAndClear(unsigned int qty, VU_TIME timestamp){

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 2351 : 	// send OOB
; 2352 : 	for (

	lea	eax, DWORD PTR _it$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?begin@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::begin

; 2353 : 		VuOobPositionUpdateQ::iterator it = oobPositionUpdateQ_.begin();
; 2354 : 		it != oobPositionUpdateQ_.end();

	jmp	SHORT $LN13@SendBestEn
$LN12@SendBestEn:

; 2355 : 		++it
; 2356 : 	){

	lea	ecx, DWORD PTR _it$8[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator++
$LN13@SendBestEn:
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?end@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@2@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::end
	push	eax
	lea	ecx, DWORD PTR _it$8[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@SendBestEn

; 2357 : 		VuEntity *e = *it;

	lea	ecx, DWORD PTR _it$8[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVVuEntity@@@std@@@std@@@std@@QBEAAPAVVuEntity@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuEntity *> > >::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _e$7[ebp], eax

; 2358 : 		// avoid duplicate sends
; 2359 : 		if (!e->EnqueuedForPositionUpdate()){

	mov	ecx, DWORD PTR _e$7[ebp]
	call	?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ ; VuEntity::EnqueuedForPositionUpdate
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@SendBestEn

; 2360 : 			e->SetEnqueuedForPositionUpdate(true);

	push	1
	mov	ecx, DWORD PTR _e$7[ebp]
	call	?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ; VuEntity::SetEnqueuedForPositionUpdate

; 2361 : 			static_cast<VuMaster*>(e->EntityDriver())->GeneratePositionUpdate(false, true, timestamp, this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _e$7[ebp]
	call	?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ ; VuEntity::EntityDriver
	mov	ecx, eax
	call	?GeneratePositionUpdate@VuMaster@@QAEH_N0KPAVVuSessionEntity@@@Z ; VuMaster::GeneratePositionUpdate

; 2362 : 			if (qty > 0){

	cmp	DWORD PTR _qty$[ebp], 0
	jbe	SHORT $LN10@SendBestEn

; 2363 : 				--qty;

	mov	ecx, DWORD PTR _qty$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _qty$[ebp], ecx
$LN10@SendBestEn:

; 2364 : 			}
; 2365 : 		}
; 2366 : 	}

	jmp	SHORT $LN12@SendBestEn
$LN11@SendBestEn:

; 2367 : 
; 2368 : #if SESSION_USES_LIST_FOR_PU
; 2369 : 	// sort the updates from lower to higher
; 2370 : 	positionUpdateQ_.sort(ScoreEntityPairSort());

	xor	edx, edx
	mov	BYTE PTR $T9[ebp], dl
	movzx	eax, BYTE PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??$sort@VScoreEntityPairSort@VuSessionEntity@@@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXVScoreEntityPairSort@VuSessionEntity@@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::sort<VuSessionEntity::ScoreEntityPairSort>

; 2371 : #endif
; 2372 : 
; 2373 : 	// respect BW
; 2374 : 	for (

	lea	ecx, DWORD PTR _it$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?begin@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::begin

; 2375 : 		VuPositionUpdateQ::iterator it=positionUpdateQ_.begin();
; 2376 : 		it!=positionUpdateQ_.end() && (qty-- > 0);

	jmp	SHORT $LN8@SendBestEn
$LN7@SendBestEn:

; 2377 : 		++it
; 2378 : 	){

	lea	ecx, DWORD PTR _it$6[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator++
$LN8@SendBestEn:
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?end@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$6[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@SendBestEn
	mov	ecx, DWORD PTR _qty$[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	mov	edx, DWORD PTR _qty$[ebp]
	sub	edx, 1
	mov	DWORD PTR _qty$[ebp], edx
	cmp	DWORD PTR tv167[ebp], 0
	jbe	SHORT $LN4@SendBestEn

; 2379 : 		VuEntity *e = (it->second);

	lea	ecx, DWORD PTR _it$6[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@MPAVVuEntity@@@std@@@std@@@std@@@std@@QBEPAU?$pair@MPAVVuEntity@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<float,VuEntity *> > > >::operator->
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _e$5[ebp], eax

; 2380 : 		// no duplicates
; 2381 : 		if (!e->EnqueuedForPositionUpdate()){

	mov	ecx, DWORD PTR _e$5[ebp]
	call	?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ ; VuEntity::EnqueuedForPositionUpdate
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@SendBestEn

; 2382 : 			e->SetEnqueuedForPositionUpdate(false);

	push	0
	mov	ecx, DWORD PTR _e$5[ebp]
	call	?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ; VuEntity::SetEnqueuedForPositionUpdate

; 2383 : 			static_cast<VuMaster*>(e->EntityDriver())->GeneratePositionUpdate(false, false, timestamp, this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _e$5[ebp]
	call	?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ ; VuEntity::EntityDriver
	mov	ecx, eax
	call	?GeneratePositionUpdate@VuMaster@@QAEH_N0KPAVVuSessionEntity@@@Z ; VuMaster::GeneratePositionUpdate
$LN5@SendBestEn:

; 2384 : 		}
; 2385 : 	}

	jmp	$LN7@SendBestEn
$LN4@SendBestEn:

; 2386 : 
; 2387 : 	// clear all and unset queued
; 2388 : 	while (!positionUpdateQ_.empty()){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?empty@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@SendBestEn

; 2389 : 		VuEntity *e = positionUpdateQ_.front().second;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEAAU?$pair@MPAVVuEntity@@@2@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::front
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _e$4[ebp], edx

; 2390 : 		e->SetEnqueuedForPositionUpdate(false);

	push	0
	mov	ecx, DWORD PTR _e$4[ebp]
	call	?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ; VuEntity::SetEnqueuedForPositionUpdate

; 2391 : 		positionUpdateQ_.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?pop_front@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::pop_front

; 2392 : 	}

	jmp	SHORT $LN4@SendBestEn
$LN2@SendBestEn:

; 2393 : 
; 2394 : 	while (!oobPositionUpdateQ_.empty()){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?empty@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QBE_NXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@SendBestEn

; 2395 : 		VuEntity *e = oobPositionUpdateQ_.front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEAAPAVVuEntity@@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _e$3[ebp], ecx

; 2396 : 		e->SetEnqueuedForPositionUpdate(false);

	push	0
	mov	ecx, DWORD PTR _e$3[ebp]
	call	?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ; VuEntity::SetEnqueuedForPositionUpdate

; 2397 : 		oobPositionUpdateQ_.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?pop_front@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXXZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::pop_front

; 2398 : 	}

	jmp	SHORT $LN2@SendBestEn
$LN14@SendBestEn:

; 2399 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SendBestEnqueuedPositionUpdatesAndClear@VuSessionEntity@@QAEXIK@Z ENDP ; VuSessionEntity::SendBestEnqueuedPositionUpdatesAndClear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
?EnqueueOobPositionUpdate@VuSessionEntity@@QAEXPAVVuEntity@@@Z PROC ; VuSessionEntity::EnqueueOobPositionUpdate
; _this$ = ecx

; 2337 : void VuSessionEntity::EnqueueOobPositionUpdate(VuEntity *entity){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2338 : 	oobPositionUpdateQ_.push_back(entity);

	lea	eax, DWORD PTR _entity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	?push_back@?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAEXABQAVVuEntity@@@Z ; std::list<VuEntity *,std::allocator<VuEntity *> >::push_back

; 2339 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?EnqueueOobPositionUpdate@VuSessionEntity@@QAEXPAVVuEntity@@@Z ENDP ; VuSessionEntity::EnqueueOobPositionUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
_entity$ = 12						; size = 4
?EnqueuePositionUpdate@VuSessionEntity@@QAEXMPAVVuEntity@@@Z PROC ; VuSessionEntity::EnqueuePositionUpdate
; _this$ = ecx

; 2341 : void VuSessionEntity::EnqueuePositionUpdate(SM_SCALAR distance, VuEntity *entity){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2342 : #if SESSION_USES_LIST_FOR_PU
; 2343 : 	positionUpdateQ_.push_back(make_pair(distance, entity));

	lea	eax, DWORD PTR _entity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _distance$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$make_pair@AAMAAPAVVuEntity@@@std@@YA?AU?$pair@MPAVVuEntity@@@0@AAMAAPAVVuEntity@@@Z ; std::make_pair<float &,VuEntity * &>
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?push_back@?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAEX$$QAU?$pair@MPAVVuEntity@@@2@@Z ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::push_back

; 2344 : #else
; 2345 : 	positionUpdateQ_.insert(make_pair(distance, entity));
; 2346 : #endif
; 2347 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?EnqueuePositionUpdate@VuSessionEntity@@QAEXMPAVVuEntity@@@Z ENDP ; VuSessionEntity::EnqueuePositionUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_silent$ = 8						; size = 1
?ClearCameras@VuSessionEntity@@QAEX_N@Z PROC		; VuSessionEntity::ClearCameras
; _this$ = ecx

; 1571 : void VuSessionEntity::ClearCameras(bool silent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 	cameras_.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?clear@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::clear

; 1573 : 	if (!silent){

	movzx	eax, BYTE PTR _silent$[ebp]
	test	eax, eax
	jne	SHORT $LN2@ClearCamer

; 1574 : 		SetDirty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN2@ClearCamer:

; 1575 : 	}
; 1576 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearCameras@VuSessionEntity@@QAEX_N@Z ENDP		; VuSessionEntity::ClearCameras
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -40						; size = 8
$T2 = -32						; size = 8
$T3 = -24						; size = 4
$T4 = -20						; size = 4
$T5 = -16						; size = 4
_ce$6 = -12						; size = 4
_this$ = -8						; size = 4
_it$7 = -4						; size = 4
_e$ = 8							; size = 4
_silent$ = 12						; size = 1
?RemoveCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z PROC ; VuSessionEntity::RemoveCamera
; _this$ = ecx

; 1554 : int VuSessionEntity::RemoveCamera(VuEntity *e, bool silent){

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1555 : 	if (e == NULL){

	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN6@RemoveCame

; 1556 : 		return VU_ERROR;

	or	eax, -1
	jmp	$LN7@RemoveCame
$LN6@RemoveCame:

; 1557 : 	}
; 1558 : 	for (VuEntityVectorIterator it=cameras_.begin();it!=cameras_.end();++it){

	lea	eax, DWORD PTR _it$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?begin@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::begin
	jmp	SHORT $LN5@RemoveCame
$LN4@RemoveCame:
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator++
$LN5@RemoveCame:
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?end@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@RemoveCame

; 1559 : 		VuEntity *ce = it->get();

	lea	ecx, DWORD PTR _it$7[ebp]
	call	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VVuEntity@@@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<VuBin<VuEntity> > > >::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	DWORD PTR _ce$6[ebp], eax

; 1560 : 		if (ce->Id() == e->Id()){

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ce$6[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@RemoveCame

; 1561 : 			cameras_.erase(it);

	mov	eax, DWORD PTR _it$7[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?erase@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@@2@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::erase

; 1562 : 			if (!silent){

	movzx	eax, BYTE PTR _silent$[ebp]
	test	eax, eax
	jne	SHORT $LN1@RemoveCame

; 1563 : 				SetDirty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN1@RemoveCame:

; 1564 : 			}
; 1565 : 			return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN7@RemoveCame
$LN2@RemoveCame:

; 1566 : 		}
; 1567 : 	}

	jmp	$LN4@RemoveCame
$LN3@RemoveCame:

; 1568 : 	return VU_ERROR;

	or	eax, -1
$LN7@RemoveCame:

; 1569 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ENDP ; VuSessionEntity::RemoveCamera
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
_bin$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_e$ = 8							; size = 4
_silent$ = 12						; size = 1
?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z PROC ; VuSessionEntity::AttachCamera
; _this$ = ecx

; 1541 : int VuSessionEntity::AttachCamera(VuEntity *e, bool silent){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1542 : 	if ((cameras_.size() >= VU_MAX_SESSION_CAMERAS) || (e == NULL)){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	cmp	eax, 8
	jae	SHORT $LN2@AttachCame
	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN3@AttachCame
$LN2@AttachCame:

; 1543 : 		return VU_ERROR;

	or	eax, -1
	jmp	SHORT $LN4@AttachCame
$LN3@AttachCame:

; 1544 : 	}
; 1545 : 
; 1546 : 	VuBin<VuEntity> bin(e);

	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bin$[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1547 : 	cameras_.push_back(bin);

	lea	ecx, DWORD PTR _bin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?push_back@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXABV?$VuBin@VVuEntity@@@@@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::push_back

; 1548 : 	if (!silent){

	movzx	edx, BYTE PTR _silent$[ebp]
	test	edx, edx
	jne	SHORT $LN1@AttachCame

; 1549 : 		SetDirty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN1@AttachCame:

; 1550 : 	}
; 1551 : 	return VU_SUCCESS;

	mov	DWORD PTR $T2[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bin$[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	eax, DWORD PTR $T2[ebp]
$LN4@AttachCame:

; 1552 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z$0:
	lea	ecx, DWORD PTR _bin$[ebp]
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ENDP ; VuSessionEntity::AttachCamera
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 1
?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z PROC ; VuSessionEntity::GetCameraEntity
; _this$ = ecx

; 1534 : VuEntity *VuSessionEntity::GetCameraEntity(unsigned char index) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1535 : 	if (index >= cameras_.size()) {

	movzx	esi, BYTE PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	cmp	esi, eax
	jb	SHORT $LN1@GetCameraE

; 1536 : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN2@GetCameraE
$LN1@GetCameraE:

; 1537 : 	}
; 1538 : 	return cameras_[index].get();

	movzx	eax, BYTE PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEABV?$VuBin@VVuEntity@@@@I@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
	mov	ecx, eax
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
$LN2@GetCameraE:

; 1539 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z ENDP ; VuSessionEntity::GetCameraEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?CameraCount@VuSessionEntity@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CameraCount@VuSessionEntity@@QBEHXZ PROC		; VuSessionEntity::CameraCount, COMDAT
; _this$ = ecx

; 228  : 	int CameraCount() const { return cameras_.size(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	mov	esp, ebp
	pop	ebp
	ret	0
?CameraCount@VuSessionEntity@@QBEHXZ ENDP		; VuSessionEntity::CameraCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_retval$ = -4						; size = 4
___formal$ = 8						; size = 4
?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z PROC ; VuSessionEntity::ForwardingTarget
; _this$ = ecx

; 1651 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1652 : 	VuTargetEntity* retval = Game();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR _retval$[ebp], eax

; 1653 : 	if (!retval){ 

	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN1@Forwarding

; 1654 : 		retval = vuGlobalGroup;

	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	mov	DWORD PTR _retval$[ebp], eax
$LN1@Forwarding:

; 1655 : 	}
; 1656 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1657 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z ENDP ; VuSessionEntity::ForwardingTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
_gnode$ = -12						; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?PurgeGroups@VuSessionEntity@@QAEHXZ PROC		; VuSessionEntity::PurgeGroups
; _this$ = ecx

; 1635 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1636 : 	VU_ERRCODE retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 1637 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection
$LN2@PurgeGroup:

; 1638 : 	VuGroupNode *gnode;
; 1639 : 	while (groupHead_) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN1@PurgeGroup

; 1640 : 		gnode      = groupHead_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+364]
	mov	DWORD PTR _gnode$[ebp], edx

; 1641 : 		groupHead_ = groupHead_->next_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+364], eax

; 1642 : 		delete gnode;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1643 : 		retval     = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1

; 1644 : 	}

	jmp	SHORT $LN2@PurgeGroup
$LN1@PurgeGroup:

; 1645 : 	groupCount_ = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+360], 0

; 1646 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1647 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1648 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PurgeGroups@VuSessionEntity@@QAEHXZ ENDP		; VuSessionEntity::PurgeGroups
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
_retval$ = -16						; size = 4
_lastnode$ = -12					; size = 4
_this$ = -8						; size = 4
_gnode$ = -4						; size = 4
_gid$ = 8						; size = 8
?RemoveGroup@VuSessionEntity@@QAEHVVU_ID@@@Z PROC	; VuSessionEntity::RemoveGroup
; _this$ = ecx

; 1607 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1608 : 	VU_ERRCODE retval = VU_ERROR;

	mov	DWORD PTR _retval$[ebp], -1

; 1609 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1610 : 
; 1611 : 	VuGroupNode* gnode    = groupHead_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR _gnode$[ebp], ecx

; 1612 : 	VuGroupNode* lastnode = 0;

	mov	DWORD PTR _lastnode$[ebp], 0
$LN5@RemoveGrou:

; 1613 : 
; 1614 : 	while (gnode && gnode->gid_ != gid) {

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN4@RemoveGrou
	lea	edx, DWORD PTR _gid$[ebp]
	push	edx
	mov	ecx, DWORD PTR _gnode$[ebp]
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@RemoveGrou

; 1615 : 		lastnode = gnode;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	DWORD PTR _lastnode$[ebp], ecx

; 1616 : 		gnode    = gnode->next_;

	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _gnode$[ebp], eax

; 1617 : 	}

	jmp	SHORT $LN5@RemoveGrou
$LN4@RemoveGrou:

; 1618 : 	if (gnode) { // found group

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN3@RemoveGrou

; 1619 : 		if (lastnode) {

	cmp	DWORD PTR _lastnode$[ebp], 0
	je	SHORT $LN2@RemoveGrou

; 1620 : 			lastnode->next_ = gnode->next_;

	mov	ecx, DWORD PTR _lastnode$[ebp]
	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 1621 : 		} 
; 1622 : 		else { // node was head

	jmp	SHORT $LN1@RemoveGrou
$LN2@RemoveGrou:

; 1623 : 			groupHead_ = gnode->next_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+364], eax
$LN1@RemoveGrou:

; 1624 : 		}
; 1625 : 		groupCount_--;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+360]
	sub	dl, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+360], dl

; 1626 : 		delete gnode;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1627 : 		retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN3@RemoveGrou:

; 1628 : 	}
; 1629 : 
; 1630 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1631 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1632 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ENDP	; VuSessionEntity::RemoveGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -44						; size = 8
$T3 = -36						; size = 4
_retval$ = -32						; size = 4
tv94 = -28						; size = 4
$T4 = -24						; size = 4
_this$ = -20						; size = 4
_gnode$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_gid$ = 8						; size = 8
?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z PROC		; VuSessionEntity::AddGroup
; _this$ = ecx

; 1580 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1581 : 	VU_ERRCODE retval = VU_ERROR;

	mov	DWORD PTR _retval$[ebp], -1

; 1582 : 	if (vuGlobalGroup && gid == vuGlobalGroup->Id()) {

	cmp	DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A, 0 ; vuGlobalGroup
	je	SHORT $LN4@AddGroup
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _gid$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@AddGroup

; 1583 : 		return VU_NO_OP;

	xor	eax, eax
	jmp	$LN5@AddGroup
$LN4@AddGroup:

; 1584 : 	}
; 1585 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1586 : 	VuGroupNode* gnode = groupHead_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR _gnode$[ebp], eax
$LN3@AddGroup:

; 1587 : 	// make certain group isn't already here
; 1588 : 
; 1589 : 	while (gnode && gnode->gid_ != gid) {

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN2@AddGroup
	lea	ecx, DWORD PTR _gid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _gnode$[ebp]
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@AddGroup

; 1590 : 		gnode = gnode->next_;

	mov	eax, DWORD PTR _gnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _gnode$[ebp], ecx

; 1591 : 	}

	jmp	SHORT $LN3@AddGroup
$LN2@AddGroup:

; 1592 : 
; 1593 : 	if (!gnode) {

	cmp	DWORD PTR _gnode$[ebp], 0
	jne	$LN1@AddGroup

; 1594 : 		gnode        = new VuGroupNode;

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@AddGroup
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuGroupNode@@QAE@XZ
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN8@AddGroup
$LN7@AddGroup:
	mov	DWORD PTR tv94[ebp], 0
$LN8@AddGroup:
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _gnode$[ebp], eax

; 1595 : 		gnode->gid_  = gid;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	edx, DWORD PTR _gid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _gid$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 1596 : 		gnode->next_ = groupHead_;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR [ecx+8], eax

; 1597 : 		groupHead_   = gnode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _gnode$[ebp]
	mov	DWORD PTR [ecx+364], edx

; 1598 : 		groupCount_++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+360]
	add	cl, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+360], cl

; 1599 : 
; 1600 : 		retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN1@AddGroup:

; 1601 : 	}
; 1602 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1603 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN5@AddGroup:

; 1604 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ENDP		; VuSessionEntity::AddGroup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 8
_this$ = -8						; size = 4
_gnode$ = -4						; size = 4
_id$ = 8						; size = 8
?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z PROC		; VuSessionEntity::InTarget
; _this$ = ecx

; 1515 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1516 : 	if (id == Id() || id == GameId() || id == vuGlobalGroup->Id()) {

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@InTarget
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@InTarget
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@InTarget
$LN4@InTarget:

; 1517 : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN6@InTarget
$LN5@InTarget:

; 1518 : 	}
; 1519 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1520 : 	VuGroupNode* gnode = groupHead_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR _gnode$[ebp], ecx
$LN3@InTarget:

; 1521 : 	while (gnode) {

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN2@InTarget

; 1522 : 		if (gnode->gid_ == id) {

	lea	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _gnode$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@InTarget

; 1523 : 			VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1524 : 			return TRUE;

	mov	al, 1
	jmp	SHORT $LN6@InTarget
$LN1@InTarget:

; 1525 : 		}
; 1526 : 		gnode = gnode->next_;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _gnode$[ebp], edx

; 1527 : 	}

	jmp	SHORT $LN3@InTarget
$LN2@InTarget:

; 1528 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1529 : 	return FALSE;

	xor	al, al
$LN6@InTarget:

; 1530 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z ENDP		; VuSessionEntity::InTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z PROC		; VuSessionEntity::HasTarget
; _this$ = ecx

; 1507 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1508 : 	if (id == Id()) {

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@HasTarget

; 1509 : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN2@HasTarget
$LN1@HasTarget:

; 1510 : 	}
; 1511 : 	return FALSE;

	xor	al, al
$LN2@HasTarget:

; 1512 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z ENDP		; VuSessionEntity::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSession@VuSessionEntity@@UAEEXZ PROC			; VuSessionEntity::IsSession
; _this$ = ecx

; 1502 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1503 : 	return TRUE;

	mov	al, 1

; 1504 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsSession@VuSessionEntity@@UAEEXZ ENDP			; VuSessionEntity::IsSession
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ts$ = 8						; size = 4
?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z PROC		; VuSessionEntity::SetKeepaliveTime
; _this$ = ecx

; 2142 : void VuSessionEntity::SetKeepaliveTime(VU_TIME ts) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2143 : 	SetCollisionCheckTime(ts);

	mov	eax, DWORD PTR _ts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCollisionCheckTime@VuEntity@@QAEXK@Z ; VuEntity::SetCollisionCheckTime

; 2144 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ENDP		; VuSessionEntity::SetKeepaliveTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -172						; size = 8
$T3 = -164						; size = 8
$T4 = -156						; size = 8
$T5 = -148						; size = 8
$T6 = -140						; size = 8
_iter$7 = -132						; size = 12
$T8 = -120						; size = 4
$T9 = -116						; size = 4
_se$10 = -112						; size = 4
$T11 = -108						; size = 4
$T12 = -104						; size = 4
$T13 = -100						; size = 4
$T14 = -96						; size = 4
_pull$15 = -92						; size = 4
_push$16 = -88						; size = 4
tv356 = -84						; size = 4
$T17 = -80						; size = 4
$T18 = -76						; size = 4
$T19 = -72						; size = 4
tv334 = -68						; size = 4
tv224 = -64						; size = 4
$T20 = -60						; size = 4
tv196 = -56						; size = 4
tv241 = -52						; size = 4
tv174 = -48						; size = 4
$T21 = -44						; size = 4
$T22 = -40						; size = 4
_retval$ = -36						; size = 4
_sess$23 = -32						; size = 4
_target$24 = -28					; size = 4
_event$ = -24						; size = 4
_game$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newgame$ = 8						; size = 4
?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z PROC	; VuSessionEntity::JoinGame
; _this$ = ecx

; 1957 : VU_ERRCODE VuSessionEntity::JoinGame(VuGameEntity* newgame) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1958 : 	VU_ERRCODE retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 1959 : 	VuGameEntity *game = Game();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR _game$[ebp], eax

; 1960 : 	if (newgame && game == newgame) {

	cmp	DWORD PTR _newgame$[ebp], 0
	je	SHORT $LN23@JoinGame
	mov	eax, DWORD PTR _game$[ebp]
	cmp	eax, DWORD PTR _newgame$[ebp]
	jne	SHORT $LN23@JoinGame

; 1961 : 		return VU_NO_OP;

	xor	eax, eax
	jmp	$LN24@JoinGame
$LN23@JoinGame:

; 1962 : 	}
; 1963 : 
; 1964 : 	if (newgame && !game) {

	cmp	DWORD PTR _newgame$[ebp], 0
	je	SHORT $LN22@JoinGame
	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN22@JoinGame

; 1965 : 		action_ = VU_JOIN_GAME_ACTION;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+412], 1
	jmp	SHORT $LN21@JoinGame
$LN22@JoinGame:

; 1966 : 	} 
; 1967 : 	else if (newgame && game) {

	cmp	DWORD PTR _newgame$[ebp], 0
	je	SHORT $LN20@JoinGame
	cmp	DWORD PTR _game$[ebp], 0
	je	SHORT $LN20@JoinGame

; 1968 : 		action_ = VU_CHANGE_GAME_ACTION;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+412], 2

; 1969 : 	} 
; 1970 : 	else {

	jmp	SHORT $LN21@JoinGame
$LN20@JoinGame:

; 1971 : 		action_ = VU_LEAVE_GAME_ACTION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+412], 3
$LN21@JoinGame:

; 1972 : 	}
; 1973 : 
; 1974 : #ifdef VU_TRACK_LATENCY
; 1975 : 	SetTimeSync(VU_NO_SYNC);
; 1976 : #endif
; 1977 : 	VuSessionEvent* event = 0;

	mov	DWORD PTR _event$[ebp], 0

; 1978 : 
; 1979 : 	if (game) {

	cmp	DWORD PTR _game$[ebp], 0
	je	$LN18@JoinGame

; 1980 : 		if (game->RemoveSession(this) >= 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _game$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _game$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	test	eax, eax
	jl	$LN17@JoinGame

; 1981 : 			LeaveAllGroups();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeaveAllGroups@VuSessionEntity@@QAEHXZ	; VuSessionEntity::LeaveAllGroups

; 1982 : 			if (IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	$LN16@JoinGame

; 1983 : 				VuMessageQueue::FlushAllQueues();

	call	?FlushAllQueues@VuMessageQueue@@SAXXZ	; VuMessageQueue::FlushAllQueues

; 1984 : 				if (game->IsLocal()) {

	mov	ecx, DWORD PTR _game$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	$LN15@JoinGame

; 1985 : 					// we need to transfer it away...
; 1986 : 					VuSessionsIterator iter(Game());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	push	eax
	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1987 : 					VuSessionEntity *sess = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$7[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _sess$23[ebp], eax
$LN14@JoinGame:

; 1988 : 					while (sess == this) {

	mov	edx, DWORD PTR _sess$23[ebp]
	cmp	edx, DWORD PTR _this$[ebp]
	jne	SHORT $LN13@JoinGame

; 1989 : 						sess = iter.GetNext();

	lea	ecx, DWORD PTR _iter$7[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _sess$23[ebp], eax

; 1990 : 					}

	jmp	SHORT $LN14@JoinGame
$LN13@JoinGame:

; 1991 : 					if (sess) {

	cmp	DWORD PTR _sess$23[ebp], 0
	je	SHORT $LN12@JoinGame

; 1992 : 						VuMessage *push = new VuPushRequest(game->Id(), sess);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T18[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN26@JoinGame
	mov	eax, DWORD PTR _sess$23[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _game$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T18[ebp]
	call	??0VuPushRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuPushRequest::VuPushRequest
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN27@JoinGame
$LN26@JoinGame:
	mov	DWORD PTR tv174[ebp], 0
$LN27@JoinGame:
	mov	ecx, DWORD PTR tv174[ebp]
	mov	DWORD PTR $T11[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T11[ebp]
	mov	DWORD PTR _push$16[ebp], edx

; 1993 : 						VuMessageQueue::PostVuMessage(push);

	mov	eax, DWORD PTR _push$16[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN12@JoinGame:

; 1994 : 					}
; 1995 : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
$LN15@JoinGame:

; 1996 : 				if (newgame) {

	cmp	DWORD PTR _newgame$[ebp], 0
	je	SHORT $LN11@JoinGame

; 1997 : 					event         = new VuSessionEvent(this, VU_SESSION_CHANGE_GAME, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN28@JoinGame
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	push	3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T17[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv196[ebp], eax
	jmp	SHORT $LN29@JoinGame
$LN28@JoinGame:
	mov	DWORD PTR tv196[ebp], 0
$LN29@JoinGame:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 1998 : 					event->group_ = newgame->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _event$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], edx

; 1999 : 				} 
; 2000 : 				else {

	jmp	SHORT $LN10@JoinGame
$LN11@JoinGame:

; 2001 : 					event   = new VuSessionEvent(this, VU_SESSION_CLOSE, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN30@JoinGame
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv224[ebp], eax
	jmp	SHORT $LN31@JoinGame
$LN30@JoinGame:
	mov	DWORD PTR tv224[ebp], 0
$LN31@JoinGame:
	mov	eax, DWORD PTR tv224[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 2002 : 					gameId_ = VU_SESSION_NULL_GROUP;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+352], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+356], ecx

; 2003 : 					game_.reset();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::reset
$LN10@JoinGame:

; 2004 : 				}
; 2005 : 
; 2006 : 				if (this == vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@JoinGame

; 2007 : 					VuShutdownEvent* se = new VuShutdownEvent(FALSE);

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN32@JoinGame
	push	0
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0VuShutdownEvent@@QAE@E@Z		; VuShutdownEvent::VuShutdownEvent
	mov	DWORD PTR tv241[ebp], eax
	jmp	SHORT $LN33@JoinGame
$LN32@JoinGame:
	mov	DWORD PTR tv241[ebp], 0
$LN33@JoinGame:
	mov	ecx, DWORD PTR tv241[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _se$10[ebp], edx

; 2008 : 					// sfr: calling update hre is a fucking hack
; 2009 : 					// this needs to be removed
; 2010 : #define VU_JOIN_DONT_UPDATE 0
; 2011 : #if VU_JOIN_DONT_UPDATE
; 2012 : 					se->Ref();
; 2013 : 					VuMessageQueue::PostVuMessage(se);
; 2014 : 					while (!se->done_){ ::Sleep(10); }
; 2015 : 					se->UnRef();
; 2016 : #else
; 2017 : 					VuMessageQueue::PostVuMessage(se);

	mov	eax, DWORD PTR _se$10[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 2018 : #if CAP_DISPATCH
; 2019 : 					vuMainThread->Update(-1);

	push	-1
	mov	ecx, DWORD PTR ?vuMainThread@@3PAVVuMainThread@@A ; vuMainThread
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?vuMainThread@@3PAVVuMainThread@@A ; vuMainThread
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 2020 : #else
; 2021 : 					vuMainThread->Update();
; 2022 : #endif
; 2023 : 					VuMessageQueue::FlushAllQueues();

	call	?FlushAllQueues@VuMessageQueue@@SAXXZ	; VuMessageQueue::FlushAllQueues
$LN16@JoinGame:

; 2024 : #endif
; 2025 : 				}
; 2026 : 			}
; 2027 : 		}
; 2028 : 		else {

	jmp	SHORT $LN18@JoinGame
$LN17@JoinGame:

; 2029 : 			return VU_ERROR;

	or	eax, -1
	jmp	$LN24@JoinGame
$LN18@JoinGame:

; 2030 : 		}
; 2031 : 	}
; 2032 : 
; 2033 : 	if (newgame) {

	cmp	DWORD PTR _newgame$[ebp], 0
	je	$LN7@JoinGame

; 2034 : 		game_.reset(newgame);

	mov	ecx, DWORD PTR _newgame$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::reset

; 2035 : 		gameId_ = newgame->Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], ecx
	mov	DWORD PTR [eax+356], edx

; 2036 : 
; 2037 : 		if (IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@JoinGame

; 2038 : 			if (!newgame->IsLocal() && newgame->SessionCount() == 0) {

	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	$LN5@JoinGame
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?SessionCount@VuGroupEntity@@QAEHXZ	; VuGroupEntity::SessionCount
	test	eax, eax
	jne	$LN5@JoinGame

; 2039 : 				// we need to transfer it here...
; 2040 : 				VuTargetEntity* target =
; 2041 : 						(VuTargetEntity*)vuDatabase->Find(newgame->OwnerId());

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _target$24[ebp], eax

; 2042 : 				if (target && target->IsTarget()) {

	cmp	DWORD PTR _target$24[ebp], 0
	je	SHORT $LN5@JoinGame
	mov	eax, DWORD PTR _target$24[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$24[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@JoinGame

; 2043 : 					VuMessage* pull = new VuPullRequest(newgame->Id(), target);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN34@JoinGame
	mov	edx, DWORD PTR _target$24[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _newgame$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuPullRequest::VuPullRequest
	mov	DWORD PTR tv334[ebp], eax
	jmp	SHORT $LN35@JoinGame
$LN34@JoinGame:
	mov	DWORD PTR tv334[ebp], 0
$LN35@JoinGame:
	mov	eax, DWORD PTR tv334[ebp]
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T12[ebp]
	mov	DWORD PTR _pull$15[ebp], ecx

; 2044 : 					VuMessageQueue::PostVuMessage(pull);

	mov	edx, DWORD PTR _pull$15[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN5@JoinGame:

; 2045 : 				}
; 2046 : 			}
; 2047 : 			if (!game) {

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN6@JoinGame

; 2048 : 				event = new VuSessionEvent(this, VU_SESSION_JOIN_GAME, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN36@JoinGame
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T22[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv356[ebp], eax
	jmp	SHORT $LN37@JoinGame
$LN36@JoinGame:
	mov	DWORD PTR tv356[ebp], 0
$LN37@JoinGame:
	mov	edx, DWORD PTR tv356[ebp]
	mov	DWORD PTR $T14[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T14[ebp]
	mov	DWORD PTR _event$[ebp], eax

; 2049 : 				event->RequestReliableTransmit();

	mov	ecx, DWORD PTR _event$[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit
$LN6@JoinGame:

; 2050 : 			}
; 2051 : 		}
; 2052 : 		retval = newgame->AddSession(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newgame$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newgame$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	mov	DWORD PTR _retval$[ebp], eax
$LN7@JoinGame:

; 2053 : 	}
; 2054 : 	if (event) {

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN2@JoinGame

; 2055 : 		VuMessageQueue::PostVuMessage(event);

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN2@JoinGame:

; 2056 : 	}
; 2057 : 	if (newgame == 0 && IsLocal() && vuPlayerPoolGroup) {

	cmp	DWORD PTR _newgame$[ebp], 0
	jne	SHORT $LN1@JoinGame
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@JoinGame
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, 0 ; vuPlayerPoolGroup
	je	SHORT $LN1@JoinGame

; 2058 : 		retval = JoinGame(vuPlayerPoolGroup);

	mov	edx, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
	mov	DWORD PTR _retval$[ebp], eax
$LN1@JoinGame:

; 2059 : 	}
; 2060 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN24@JoinGame:

; 2061 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$0:
	lea	ecx, DWORD PTR _iter$7[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$1:
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$2:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$3:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$4:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$5:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z$6:
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ENDP	; VuSessionEntity::JoinGame
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv67 = -20						; size = 4
_this$ = -16						; size = 4
_ngnode$ = -12						; size = 4
_gent$1 = -8						; size = 4
_gnode$ = -4						; size = 4
?LeaveAllGroups@VuSessionEntity@@QAEHXZ PROC		; VuSessionEntity::LeaveAllGroups
; _this$ = ecx

; 1934 : VU_ERRCODE VuSessionEntity::LeaveAllGroups() {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1935 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1936 : 	VuGroupNode* gnode  = groupHead_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR _gnode$[ebp], ecx

; 1937 : 	VuGroupNode* ngnode = (gnode ? gnode->next_ : 0);

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN8@LeaveAllGr
	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN9@LeaveAllGr
$LN8@LeaveAllGr:
	mov	DWORD PTR tv67[ebp], 0
$LN9@LeaveAllGr:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _ngnode$[ebp], ecx
$LN5@LeaveAllGr:

; 1938 : 
; 1939 : 	while (gnode) {

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN4@LeaveAllGr

; 1940 : 		VuGroupEntity* gent = (VuGroupEntity*)vuDatabase->Find(gnode->gid_);

	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _gent$1[ebp], eax

; 1941 : 		if (gent && gent->IsGroup()) {

	cmp	DWORD PTR _gent$1[ebp], 0
	je	SHORT $LN3@LeaveAllGr
	mov	edx, DWORD PTR _gent$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _gent$1[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@LeaveAllGr

; 1942 : 			LeaveGroup(gent);

	mov	ecx, DWORD PTR _gent$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ; VuSessionEntity::LeaveGroup

; 1943 : 		} 
; 1944 : 		else {

	jmp	SHORT $LN2@LeaveAllGr
$LN3@LeaveAllGr:

; 1945 : 			RemoveGroup(gnode->gid_);

	mov	edx, DWORD PTR _gnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ; VuSessionEntity::RemoveGroup
$LN2@LeaveAllGr:

; 1946 : 		}
; 1947 : 		gnode = ngnode;

	mov	edx, DWORD PTR _ngnode$[ebp]
	mov	DWORD PTR _gnode$[ebp], edx

; 1948 : 		if (ngnode) {

	cmp	DWORD PTR _ngnode$[ebp], 0
	je	SHORT $LN1@LeaveAllGr

; 1949 : 			ngnode = ngnode->next_;

	mov	eax, DWORD PTR _ngnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ngnode$[ebp], ecx
$LN1@LeaveAllGr:

; 1950 : 		}
; 1951 : 	}

	jmp	SHORT $LN5@LeaveAllGr
$LN4@LeaveAllGr:

; 1952 : 
; 1953 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1954 : 	return VU_SUCCESS;

	mov	eax, 1

; 1955 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LeaveAllGroups@VuSessionEntity@@QAEHXZ ENDP		; VuSessionEntity::LeaveAllGroups
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -44						; size = 8
_event$3 = -36						; size = 4
$T4 = -32						; size = 4
tv141 = -28						; size = 4
$T5 = -24						; size = 4
_retval$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_group$ = 8						; size = 4
?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z PROC ; VuSessionEntity::LeaveGroup
; _this$ = ecx

; 1920 : VU_ERRCODE VuSessionEntity::LeaveGroup(VuGroupEntity* group) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1921 : 	VU_ERRCODE retval = VU_ERROR;

	mov	DWORD PTR _retval$[ebp], -1

; 1922 : 
; 1923 : 	if (group) {

	cmp	DWORD PTR _group$[ebp], 0
	je	$LN2@LeaveGroup

; 1924 : 		retval = RemoveGroup(group->Id());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _group$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ; VuSessionEntity::RemoveGroup
	mov	DWORD PTR _retval$[ebp], eax

; 1925 : 		if (retval == VU_SUCCESS && group->RemoveSession(this) >= 0 && IsLocal()) {

	cmp	DWORD PTR _retval$[ebp], 1
	jne	$LN2@LeaveGroup
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _group$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _group$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	test	eax, eax
	jl	SHORT $LN2@LeaveGroup
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@LeaveGroup

; 1926 : 			VuSessionEvent *event = new VuSessionEvent(this, VU_SESSION_LEAVE_GROUP, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN5@LeaveGroup
	push	0
	mov	edx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	edx
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN6@LeaveGroup
$LN5@LeaveGroup:
	mov	DWORD PTR tv141[ebp], 0
$LN6@LeaveGroup:
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _event$3[ebp], edx

; 1927 : 			VuMessageQueue::PostVuMessage(event);

	mov	eax, DWORD PTR _event$3[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 1928 : 			retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN2@LeaveGroup:

; 1929 : 		}
; 1930 : 	}
; 1931 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1932 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LeaveGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ENDP ; VuSessionEntity::LeaveGroup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -80						; size = 8
$T3 = -72						; size = 8
$T4 = -64						; size = 8
$T5 = -56						; size = 4
_pull$6 = -52						; size = 4
$T7 = -48						; size = 4
_event$8 = -44						; size = 4
tv197 = -40						; size = 4
$T9 = -36						; size = 4
tv176 = -32						; size = 4
$T10 = -28						; size = 4
_retval$ = -24						; size = 4
_this$ = -20						; size = 4
_target$11 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_newgroup$ = 8						; size = 4
?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z PROC ; VuSessionEntity::JoinGroup
; _this$ = ecx

; 1889 : VU_ERRCODE VuSessionEntity::JoinGroup(VuGroupEntity* newgroup) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1890 : 	VU_ERRCODE retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 1891 : 
; 1892 : 	if (!newgroup) {

	cmp	DWORD PTR _newgroup$[ebp], 0
	jne	SHORT $LN5@JoinGroup

; 1893 : 		return VU_ERROR;

	or	eax, -1
	jmp	$LN6@JoinGroup
$LN5@JoinGroup:

; 1894 : 	}
; 1895 : 
; 1896 : 	retval = AddGroup(newgroup->Id());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _newgroup$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ; VuSessionEntity::AddGroup
	mov	DWORD PTR _retval$[ebp], eax

; 1897 : 
; 1898 : 	if (retval != VU_ERROR) {

	cmp	DWORD PTR _retval$[ebp], -1
	je	$LN4@JoinGroup

; 1899 : 		if (IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	$LN3@JoinGroup

; 1900 : 			VuSessionEvent *event = 0;

	mov	DWORD PTR _event$8[ebp], 0

; 1901 : 			if (!newgroup->IsLocal() && newgroup->SessionCount() == 0 &&
; 1902 : 							newgroup != vuGlobalGroup) {

	mov	ecx, DWORD PTR _newgroup$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN2@JoinGroup
	mov	ecx, DWORD PTR _newgroup$[ebp]
	call	?SessionCount@VuGroupEntity@@QAEHXZ	; VuGroupEntity::SessionCount
	test	eax, eax
	jne	$LN2@JoinGroup
	mov	edx, DWORD PTR _newgroup$[ebp]
	cmp	edx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	je	$LN2@JoinGroup

; 1903 : 				// we need to transfer it here...
; 1904 : 				VuTargetEntity* target = (VuTargetEntity*)vuDatabase->Find(newgroup->OwnerId());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _newgroup$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _target$11[ebp], eax

; 1905 : 				if (target && target->IsTarget()) {

	cmp	DWORD PTR _target$11[ebp], 0
	je	SHORT $LN2@JoinGroup
	mov	eax, DWORD PTR _target$11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$11[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@JoinGroup

; 1906 : 					VuMessage* pull = new VuPullRequest(newgroup->Id(), target);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN8@JoinGroup
	mov	edx, DWORD PTR _target$11[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _newgroup$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuPullRequest::VuPullRequest
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN9@JoinGroup
$LN8@JoinGroup:
	mov	DWORD PTR tv176[ebp], 0
$LN9@JoinGroup:
	mov	eax, DWORD PTR tv176[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _pull$6[ebp], ecx

; 1907 : 					// this would likely result in replicated p2p (evil!)
; 1908 : 					// pull->RequestReliableTransport();
; 1909 : 					VuMessageQueue::PostVuMessage(pull);

	mov	edx, DWORD PTR _pull$6[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN2@JoinGroup:

; 1910 : 				}
; 1911 : 			}
; 1912 : 			event = new VuSessionEvent(this, VU_SESSION_JOIN_GROUP, newgroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN10@JoinGroup
	push	0
	mov	eax, DWORD PTR _newgroup$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv197[ebp], eax
	jmp	SHORT $LN11@JoinGroup
$LN10@JoinGroup:
	mov	DWORD PTR tv197[ebp], 0
$LN11@JoinGroup:
	mov	edx, DWORD PTR tv197[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _event$8[ebp], eax

; 1913 : 			VuMessageQueue::PostVuMessage(event);

	mov	ecx, DWORD PTR _event$8[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN3@JoinGroup:

; 1914 : 		}
; 1915 : 		retval = newgroup->AddSession(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _newgroup$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _newgroup$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax
$LN4@JoinGroup:

; 1916 : 	}
; 1917 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN6@JoinGroup:

; 1918 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$0:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?JoinGroup@VuSessionEntity@@QAEHPAVVuGroupEntity@@@Z ENDP ; VuSessionEntity::JoinGroup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_event$2 = -56						; size = 4
$T3 = -52						; size = 4
$T4 = -48						; size = 4
$T5 = -44						; size = 4
$T6 = -40						; size = 4
$T7 = -36						; size = 4
tv155 = -32						; size = 4
$T8 = -28						; size = 4
_oldsign$ = -24						; size = 4
_len$9 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_callsign$ = 8						; size = 4
?SetCallsign@VuSessionEntity@@QAEXPBD@Z PROC		; VuSessionEntity::SetCallsign
; _this$ = ecx

; 1660 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetCallsign@VuSessionEntity@@QAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1661 : 	char* oldsign = callsign_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	mov	DWORD PTR _oldsign$[ebp], ecx

; 1662 : 
; 1663 : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 1664 : 
; 1665 : 	if (callsign) {

	cmp	DWORD PTR _callsign$[ebp], 0
	je	$LN6@SetCallsig

; 1666 : 		int len = strlen(callsign);

	mov	edx, DWORD PTR _callsign$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$9[ebp], eax

; 1667 : 
; 1668 : 		if (len < MAX_VU_STR_LEN) {

	cmp	DWORD PTR _len$9[ebp], 255		; 000000ffH
	jge	SHORT $LN5@SetCallsig

; 1669 : 			callsign_ = new char[len + 1];

	mov	eax, DWORD PTR _len$9[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [ecx+344], edx

; 1670 : 			strcpy(callsign_, callsign);

	mov	eax, DWORD PTR _callsign$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_strcpy
	add	esp, 8

; 1671 : 		}
; 1672 : 		else {

	jmp	SHORT $LN4@SetCallsig
$LN5@SetCallsig:

; 1673 : 			callsign_ = new char[MAX_VU_STR_LEN + 1];

	push	256					; 00000100H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax+344], ecx

; 1674 : 			strncpy(callsign_, callsign, MAX_VU_STR_LEN);

	push	255					; 000000ffH
	mov	edx, DWORD PTR _callsign$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH
$LN4@SetCallsig:

; 1675 : 		}
; 1676 : 	} 
; 1677 : 	else {

	jmp	SHORT $LN3@SetCallsig
$LN6@SetCallsig:

; 1678 : 		callsign_ = new char[strlen(VU_DEFAULT_PLAYER_NAME) + 1];

	push	OFFSET ??_C@_09BMFBKPHA@anonymous?$AA@
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR [edx+344], eax

; 1679 : 		strcpy(callsign_, VU_DEFAULT_PLAYER_NAME);

	push	OFFSET ??_C@_09BMFBKPHA@anonymous?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_strcpy
	add	esp, 8
$LN3@SetCallsig:

; 1680 : 	}
; 1681 : 	if (oldsign) {

	cmp	DWORD PTR _oldsign$[ebp], 0
	je	$LN7@SetCallsig

; 1682 : 		delete [] oldsign;

	mov	eax, DWORD PTR _oldsign$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1683 : 		if (this == vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@SetCallsig

; 1684 : 			VuSessionEvent *event =
; 1685 : 					new VuSessionEvent(this, VU_SESSION_CHANGE_CALLSIGN, vuGlobalGroup);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN9@SetCallsig
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN10@SetCallsig
$LN9@SetCallsig:
	mov	DWORD PTR tv155[ebp], 0
$LN10@SetCallsig:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _event$2[ebp], ecx

; 1686 : 			VuMessageQueue::PostVuMessage(event);

	mov	edx, DWORD PTR _event$2[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN7@SetCallsig:

; 1687 : 		}
; 1688 : 	}
; 1689 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetCallsign@VuSessionEntity@@QAEXPBD@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetCallsign@VuSessionEntity@@QAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetCallsign@VuSessionEntity@@QAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetCallsign@VuSessionEntity@@QAEXPBD@Z ENDP		; VuSessionEntity::SetCallsign
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?KeepaliveTime@VuSessionEntity@@QAEKXZ PROC		; VuSessionEntity::KeepaliveTime
; _this$ = ecx

; 2146 : VU_TIME VuSessionEntity::KeepaliveTime() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2147 : 	return LastCollisionCheckTime();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LastCollisionCheckTime@VuEntity@@QBEKXZ ; VuEntity::LastCollisionCheckTime

; 2148 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?KeepaliveTime@VuSessionEntity@@QAEKXZ ENDP		; VuSessionEntity::KeepaliveTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_g$1 = -4						; size = 4
?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ PROC	; VuSessionEntity::Game
; _this$ = ecx

; 2063 : VuGameEntity *VuSessionEntity::Game(){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2064 : 	if (!game_){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??7?$VuBin@VVuGameEntity@@@@QBE_NXZ	; VuBin<VuGameEntity>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Game

; 2065 : 		VuEntity *g = vuDatabase->Find(gameId_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+356]
	push	edx
	mov	eax, DWORD PTR [ecx+352]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _g$1[ebp], eax

; 2066 : 		if (g && g->IsGame()) {

	cmp	DWORD PTR _g$1[ebp], 0
	je	SHORT $LN2@Game
	mov	ecx, DWORD PTR _g$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _g$1[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Game

; 2067 : 			game_.reset(static_cast<VuGameEntity*>(g));

	mov	edx, DWORD PTR _g$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	?reset@?$VuBin@VVuGameEntity@@@@QAEXPAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::reset
$LN2@Game:

; 2068 : 		} 
; 2069 : 	}
; 2070 : 	return game_.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	?get@?$VuBin@VVuGameEntity@@@@QBEPAVVuGameEntity@@XZ ; VuBin<VuGameEntity>::get

; 2071 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ENDP	; VuSessionEntity::Game
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ PROC		; VuSessionEntity::GameId
; _this$ = ecx

; 2401 : VU_ID VuSessionEntity::GameId(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2402 : 	return gameId_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR [eax+356]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2403 : 	//return game_ ? game_->Id() : vuNullId;
; 2404 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ENDP		; VuSessionEntity::GameId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?LoadMetric@VuSessionEntity@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LoadMetric@VuSessionEntity@@QAEEXZ PROC		; VuSessionEntity::LoadMetric, COMDAT
; _this$ = ecx

; 181  : 	VU_BYTE LoadMetric()		{ return loadMetric_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+348]
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadMetric@VuSessionEntity@@QAEEXZ ENDP		; VuSessionEntity::LoadMetric
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ PROC ; VuSessionEntity::SessionId, COMDAT
; _this$ = ecx

; 176  : 	VU_SESSION_ID SessionId()	{ return sessionId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?SessionId@VuSessionEntity@@QAE?AVVU_SESSION_ID@@XZ ENDP ; VuSessionEntity::SessionId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?DomainMask@VuSessionEntity@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DomainMask@VuSessionEntity@@QAEKXZ PROC		; VuSessionEntity::DomainMask, COMDAT
; _this$ = ecx

; 175  : 	ulong DomainMask()		{ return domainMask_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+340]
	mov	esp, ebp
	pop	ebp
	ret	0
?DomainMask@VuSessionEntity@@QAEKXZ ENDP		; VuSessionEntity::DomainMask
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_id$1 = -24						; size = 8
_gnode$2 = -16						; size = 4
_this$ = -12						; size = 4
_retval$ = -8						; size = 4
_cameraCount$3 = -3					; size = 1
_len$ = -2						; size = 1
_i$4 = -1						; size = 1
_file$ = 8						; size = 4
?Save@VuSessionEntity@@UAEHPAU_iobuf@@@Z PROC		; VuSessionEntity::Save
; _this$ = ecx

; 1451 : int VuSessionEntity::Save(FILE* file){

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1452 : 	int     retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 1453 : 	VU_BYTE len    = 0;

	mov	BYTE PTR _len$[ebp], 0

; 1454 : 
; 1455 : 	if (file) {

	cmp	DWORD PTR _file$[ebp], 0
	je	$LN6@Save

; 1456 : 		SetKeepaliveTime(vuxRealTime);

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 1457 : 
; 1458 : 		retval  = VuTargetEntity::Save(file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z	; VuTargetEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 1459 : 		retval += fwrite(&lastCollisionCheckTime_, sizeof(VU_TIME),       1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1460 : 		retval += fwrite(&sessionId_,              sizeof(VU_SESSION_ID), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 328				; 00000148H
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1461 : 		retval += fwrite(&domainMask_,             sizeof(ulong),         1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 340				; 00000154H
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1462 : 		retval += fwrite(&loadMetric_,             sizeof(VU_BYTE),       1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 348				; 0000015cH
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1463 : 
; 1464 : 		retval += fwrite(&gameId_,                 sizeof(VU_ID),         1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1465 : 		//VU_ID gameId = game_ ? game_->Id() : vuNullId;
; 1466 : 		//retval += fwrite(&gameId,                 sizeof(VU_ID),         1, file);
; 1467 : 
; 1468 : 		retval += fwrite(&groupCount_,             sizeof(groupCount_),   1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 360				; 00000168H
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1469 : 
; 1470 : 		VuGroupNode* gnode = groupHead_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR _gnode$2[ebp], eax
$LN5@Save:

; 1471 : 
; 1472 : 		while (gnode) {

	cmp	DWORD PTR _gnode$2[ebp], 0
	je	SHORT $LN4@Save

; 1473 : 			retval += fwrite(&gnode->gid_, sizeof(gnode->gid_), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	8
	mov	edx, DWORD PTR _gnode$2[ebp]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1474 : 			gnode = gnode->next_;

	mov	eax, DWORD PTR _gnode$2[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _gnode$2[ebp], ecx

; 1475 : 		}

	jmp	SHORT $LN5@Save
$LN4@Save:

; 1476 : #ifdef VU_TRACK_LATENCY
; 1477 : 		responseTime_ = vuxRealTime;
; 1478 : 		retval += fwrite(&timeSyncState_,      sizeof(timeSyncState_),      1, file);
; 1479 : 		retval += fwrite(&latency_,            sizeof(latency_),            1, file);
; 1480 : 		retval += fwrite(&masterTime_,         sizeof(masterTime_),         1, file);
; 1481 : 		retval += fwrite(&masterTimePostTime_, sizeof(masterTimePostTime_), 1, file);
; 1482 : 		retval += fwrite(&responseTime_,       sizeof(responseTime_),       1, file);
; 1483 : 		retval += fwrite(&masterTimeOwner_,    sizeof(masterTimeOwner_),    1, file);
; 1484 : 		len     = strlen(callsign_);
; 1485 : #endif
; 1486 : 		retval += fwrite(&len,                 sizeof(VU_BYTE),             1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	1
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1487 : 		retval += fwrite(callsign_,            len,                         1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	movzx	edx, BYTE PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1488 : 
; 1489 : 		// cameras
; 1490 : 		unsigned char cameraCount = static_cast<unsigned char>(cameras_.size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	mov	BYTE PTR _cameraCount$3[ebp], al

; 1491 : 		retval += fwrite(&cameraCount, sizeof(cameraCount), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	1
	lea	eax, DWORD PTR _cameraCount$3[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1492 : 		for (unsigned char i=0;i<cameraCount;++i){

	mov	BYTE PTR _i$4[ebp], 0
	jmp	SHORT $LN3@Save
$LN2@Save:
	mov	cl, BYTE PTR _i$4[ebp]
	add	cl, 1
	mov	BYTE PTR _i$4[ebp], cl
$LN3@Save:
	movzx	edx, BYTE PTR _i$4[ebp]
	movzx	eax, BYTE PTR _cameraCount$3[ebp]
	cmp	edx, eax
	jge	SHORT $LN6@Save

; 1493 : 			VU_ID id = cameras_[i]->Id();

	lea	ecx, DWORD PTR _id$1[ebp]
	push	ecx
	movzx	edx, BYTE PTR _i$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
	mov	ecx, eax
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id

; 1494 : 			retval += fwrite(&id, sizeof(VU_ID), 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	8
	lea	ecx, DWORD PTR _id$1[ebp]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1495 : 		}

	jmp	SHORT $LN2@Save
$LN6@Save:

; 1496 : 	}
; 1497 : 
; 1498 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1499 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuSessionEntity@@UAEHPAU_iobuf@@@Z ENDP		; VuSessionEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_id$1 = -24						; size = 8
_retval$ = -16						; size = 4
_gnode$ = -12						; size = 4
_this$ = -8						; size = 4
_cameraCount$ = -3					; size = 1
_len$ = -2						; size = 1
_i$2 = -1						; size = 1
_stream$ = 8						; size = 4
?Save@VuSessionEntity@@UAEHPAPAE@Z PROC			; VuSessionEntity::Save
; _this$ = ecx

; 1391 : int VuSessionEntity::Save(VU_BYTE** stream){

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1392 : 	int     retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 1393 : 	VU_BYTE len    = static_cast<VU_BYTE>(strlen(callsign_));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 1394 : 
; 1395 : 	SetKeepaliveTime(vuxRealTime);

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 1396 : 	retval = VuTargetEntity::Save(stream);

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuTargetEntity@@UAEHPAPAE@Z	; VuTargetEntity::Save
	mov	DWORD PTR _retval$[ebp], eax

; 1397 : 
; 1398 : 	memcpy(*stream, &lastCollisionCheckTime_, sizeof(VU_TIME));       *stream += sizeof(VU_TIME);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1399 : 	memcpy(*stream, &sessionId_,              sizeof(VU_SESSION_ID)); *stream += sizeof(VU_SESSION_ID);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1400 : 	address_.Encode(stream);

	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	?Encode@VU_ADDRESS@@QAEHPAPAE@Z		; VU_ADDRESS::Encode

; 1401 : 	memcpy(*stream, &domainMask_,             sizeof(ulong));         *stream += sizeof(ulong);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 340				; 00000154H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1402 : 	memcpy(*stream, &loadMetric_,             sizeof(VU_BYTE));       *stream += sizeof(VU_BYTE);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1403 : 
; 1404 : 	memcpy(*stream, &gameId_,                 sizeof(VU_ID));         *stream += sizeof(VU_ID);

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1405 : 	//VU_ID gameId = game_ ? game_->Id() : vuNullId;
; 1406 : 	//memcpy(*stream, &gameId,                 sizeof(VU_ID));         *stream += sizeof(VU_ID);
; 1407 : 
; 1408 : 	memcpy(*stream, &groupCount_,             sizeof(groupCount_));   *stream += sizeof(groupCount_);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 360				; 00000168H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1409 : 
; 1410 : 	VuGroupNode* gnode = groupHead_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+364]
	mov	DWORD PTR _gnode$[ebp], eax
$LN5@Save:

; 1411 : 
; 1412 : 	while (gnode) {

	cmp	DWORD PTR _gnode$[ebp], 0
	je	SHORT $LN4@Save

; 1413 : 		memcpy(*stream, &gnode->gid_, sizeof(gnode->gid_));  *stream += sizeof(gnode->gid_);

	push	8
	mov	ecx, DWORD PTR _gnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1414 : 		gnode = gnode->next_;

	mov	ecx, DWORD PTR _gnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _gnode$[ebp], edx

; 1415 : 	}

	jmp	SHORT $LN5@Save
$LN4@Save:

; 1416 : 
; 1417 : #ifdef VU_SIMPLE_LATENCY
; 1418 : 	memcpy(*stream, &vuxRealTime, sizeof(VU_TIME)); *stream += sizeof(VU_TIME);

	push	4
	push	OFFSET ?vuxRealTime@@3KA		; vuxRealTime
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1419 : 	memcpy(*stream, &vuxGameTime, sizeof(VU_TIME)); *stream += sizeof(VU_TIME);

	push	4
	push	OFFSET ?vuxGameTime@@3KA		; vuxGameTime
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1420 : #endif
; 1421 : 
; 1422 : #ifdef VU_TRACK_LATENCY
; 1423 : 	if (TimeSyncState() == VU_MASTER_SYNC) {
; 1424 : 		masterTime_ = vuxRealTime;
; 1425 : 	}
; 1426 : 	responseTime_ = vuxRealTime;
; 1427 : 	memcpy(*stream, &timeSyncState_,      sizeof(timeSyncState_));      *stream += sizeof(timeSyncState_);
; 1428 : 	memcpy(*stream, &latency_,            sizeof(latency_));            *stream += sizeof(latency_);
; 1429 : 	memcpy(*stream, &masterTime_,         sizeof(masterTime_));         *stream += sizeof(masterTime_);
; 1430 : 	memcpy(*stream, &masterTimePostTime_, sizeof(masterTimePostTime_)); *stream += sizeof(masterTimePostTime_);
; 1431 : 	memcpy(*stream, &responseTime_,       sizeof(responseTime_));       *stream += sizeof(responseTime_);
; 1432 : 	memcpy(*stream, &masterTimeOwner_,    sizeof(masterTimeOwner_));    *stream += sizeof(masterTimeOwner_);
; 1433 : #endif
; 1434 : 
; 1435 : 	//**stream = len;
; 1436 : 	memcpy(*stream, &len, sizeof(VU_BYTE));             *stream += sizeof(VU_BYTE);

	push	1
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 1437 : 	memcpy(*stream, callsign_, len);      *stream += len;

	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+344]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], eax

; 1438 : 
; 1439 : 	// camera
; 1440 : 	unsigned char cameraCount = static_cast<unsigned char>(cameras_.size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	mov	BYTE PTR _cameraCount$[ebp], al

; 1441 : 	memcpy(*stream, &cameraCount, sizeof(cameraCount)); *stream += sizeof(cameraCount);

	push	1
	lea	eax, DWORD PTR _cameraCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 1442 : 	for (unsigned char i=0;i<cameraCount;++i){

	mov	BYTE PTR _i$2[ebp], 0
	jmp	SHORT $LN3@Save
$LN2@Save:
	mov	al, BYTE PTR _i$2[ebp]
	add	al, 1
	mov	BYTE PTR _i$2[ebp], al
$LN3@Save:
	movzx	ecx, BYTE PTR _i$2[ebp]
	movzx	edx, BYTE PTR _cameraCount$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN1@Save

; 1443 : 		VU_ID id = cameras_[i]->Id();

	lea	eax, DWORD PTR _id$1[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??A?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEAAV?$VuBin@VVuEntity@@@@I@Z ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::operator[]
	mov	ecx, eax
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id

; 1444 : 		memcpy(*stream, &id, sizeof(id)); *stream += sizeof(id);

	push	8
	lea	edx, DWORD PTR _id$1[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 1445 : 	}

	jmp	SHORT $LN2@Save
$LN1@Save:

; 1446 : 
; 1447 : 	retval += VuSessionEntity::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuSessionEntity@@AAEHXZ	; VuSessionEntity::LocalSize
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1448 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1449 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuSessionEntity@@UAEHPAPAE@Z ENDP			; VuSessionEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuSessionEntity@@UAEHXZ PROC			; VuSessionEntity::SaveSize
; _this$ = ecx

; 1387 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1388 : 	return VuTargetEntity::SaveSize() + VuSessionEntity::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@VuTargetEntity@@UAEHXZ	; VuTargetEntity::SaveSize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuSessionEntity@@AAEHXZ	; VuSessionEntity::LocalSize
	add	eax, esi

; 1389 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuSessionEntity@@UAEHXZ ENDP			; VuSessionEntity::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuSessionEntity@@UAE@XZ PROC				; VuSessionEntity::~VuSessionEntity
; _this$ = ecx

; 1350 : VuSessionEntity::~VuSessionEntity(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuSessionEntity@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionEntity@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 1351 : 	PurgeGroups();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?PurgeGroups@VuSessionEntity@@QAEHXZ	; VuSessionEntity::PurgeGroups

; 1352 : 	delete [] callsign_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1353 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuSessionEntity@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??1VuSessionEntity@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
__unwindfunclet$??1VuSessionEntity@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??1VuSessionEntity@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	jmp	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
__unwindfunclet$??1VuSessionEntity@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	jmp	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
__ehhandler$??1VuSessionEntity@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuSessionEntity@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuSessionEntity@@UAE@XZ ENDP				; VuSessionEntity::~VuSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_id$2 = -52						; size = 8
_id$ = -44						; size = 8
$T3 = -36						; size = 4
_e$4 = -32						; size = 4
$T5 = -28						; size = 4
_i$6 = -24						; size = 4
_this$ = -20						; size = 4
_cameraCount$ = -15					; size = 1
_i$7 = -14						; size = 1
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
??0VuSessionEntity@@QAE@PAU_iobuf@@@Z PROC		; VuSessionEntity::VuSessionEntity
; _this$ = ecx

; 1306 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@PAU_iobuf@@@Z	; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuSessionEntity@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 352				; 00000160H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+376], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+412], 0

; 1307 : 	VU_BYTE len = 0;

	mov	BYTE PTR _len$[ebp], 0

; 1308 : 	fread(&lastCollisionCheckTime_, sizeof(VU_TIME),       1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1309 : 	fread(&sessionId_,              sizeof(VU_SESSION_ID), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 1310 : 	fread(&domainMask_,             sizeof(ulong),         1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 340				; 00000154H
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 1311 : 	fread(&loadMetric_,             sizeof(VU_BYTE),       1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 348				; 0000015cH
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1312 : 
; 1313 : 	fread(&gameId_,                 sizeof(VU_ID),         1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 352				; 00000160H
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 1314 : 	//VU_ID gameId;
; 1315 : 	//fread(&gameId,                 sizeof(VU_ID),         1, file);
; 1316 : 	//game_.reset(static_cast<VuGameEntity*>(vuDatabase->Find(gameId)));
; 1317 : 	
; 1318 : 	fread(&len,                     sizeof(len),           1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	1
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 1319 : 
; 1320 : 	VU_ID id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1321 : 
; 1322 : 	for (int i = 0; i < groupCount_; i++) {

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN6@VuSessionE
$LN5@VuSessionE:
	mov	eax, DWORD PTR _i$6[ebp]
	add	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
$LN6@VuSessionE:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+360]
	cmp	DWORD PTR _i$6[ebp], edx
	jge	SHORT $LN4@VuSessionE

; 1323 : 		fread(&id, sizeof(id), 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	8
	lea	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1324 : 		AddGroup(id);

	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ; VuSessionEntity::AddGroup

; 1325 : 	}

	jmp	SHORT $LN5@VuSessionE
$LN4@VuSessionE:

; 1326 : #ifdef VU_TRACK_LATENCY
; 1327 : 	fread(&timeSyncState_,      sizeof(timeSyncState_),      1, file);
; 1328 : 	fread(&latency_,            sizeof(latency_),            1, file);
; 1329 : 	fread(&masterTime_,         sizeof(masterTime_),         1, file);
; 1330 : 	fread(&masterTimePostTime_, sizeof(masterTimePostTime_), 1, file);
; 1331 : 	fread(&responseTime_,       sizeof(responseTime_),       1, file);
; 1332 : 	fread(&masterTimeOwner_,    sizeof(masterTimeOwner_),    1, file);
; 1333 : #endif
; 1334 : 
; 1335 : 	fread(&len,     sizeof(VU_BYTE), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	1
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 1336 : 	callsign_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+344], edx

; 1337 : 	fread(callsign_,    len, 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+344]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 1338 : 	callsign_[len] = '\0';  // null terminate

	movzx	ecx, BYTE PTR _len$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+344]
	mov	BYTE PTR [eax+ecx], 0

; 1339 : 	
; 1340 : 	unsigned char cameraCount;
; 1341 : 	fread(&cameraCount, sizeof(cameraCount), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	1
	lea	edx, DWORD PTR _cameraCount$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 1342 : 	for (unsigned char i=0;i<cameraCount;++i){

	mov	BYTE PTR _i$7[ebp], 0
	jmp	SHORT $LN3@VuSessionE
$LN2@VuSessionE:
	mov	al, BYTE PTR _i$7[ebp]
	add	al, 1
	mov	BYTE PTR _i$7[ebp], al
$LN3@VuSessionE:
	movzx	ecx, BYTE PTR _i$7[ebp]
	movzx	edx, BYTE PTR _cameraCount$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN7@VuSessionE

; 1343 : 		VU_ID id;

	lea	ecx, DWORD PTR _id$2[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1344 : 		fread(&id, sizeof(id), 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	8
	lea	ecx, DWORD PTR _id$2[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 1345 : 		VuEntity *e = vuDatabase->Find(id);

	mov	edx, DWORD PTR _id$2[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _e$4[ebp], eax

; 1346 : 		AttachCamera(e, true);

	push	1
	mov	ecx, DWORD PTR _e$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::AttachCamera

; 1347 : 	}

	jmp	SHORT $LN2@VuSessionE
$LN7@VuSessionE:

; 1348 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	jmp	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
__unwindfunclet$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	jmp	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
__ehhandler$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEntity@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEntity@@QAE@PAU_iobuf@@@Z ENDP		; VuSessionEntity::VuSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -96						; size = 8
$T3 = -88						; size = 8
_id$4 = -80						; size = 8
_id$ = -72						; size = 8
$T5 = -64						; size = 4
_e$6 = -60						; size = 4
$T7 = -56						; size = 4
_gt$ = -52						; size = 4
_rt$ = -48						; size = 4
$T8 = -44						; size = 4
tv262 = -40						; size = 4
$T9 = -36						; size = 4
_session$ = -32						; size = 4
_i$10 = -28						; size = 4
_msg$11 = -24						; size = 4
_this$ = -20						; size = 4
_cameraCount$ = -15					; size = 1
_i$12 = -14						; size = 1
_len$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0VuSessionEntity@@QAE@PAPAEPAJ@Z PROC			; VuSessionEntity::VuSessionEntity
; _this$ = ecx

; 1213 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEntity@@QAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@PAPAEPAJ@Z	; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuSessionEntity@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 352				; 00000160H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+360], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+364], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+376], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+412], 0

; 1214 : 	VU_BYTE len;
; 1215 : 
; 1216 : 	share_.ownerId_ = Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx

; 1217 : 
; 1218 : 	memcpychk(&lastCollisionCheckTime_,  stream, sizeof(VU_TIME), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1219 : 	memcpychk(&sessionId_,               stream, sizeof(VU_SESSION_ID), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1220 : 	//sfr: converts 
; 1221 : 	address_.Decode(stream, rem);		

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	?Decode@VU_ADDRESS@@QAEXPAPAEPAJ@Z	; VU_ADDRESS::Decode

; 1222 : 	memcpychk(&domainMask_,              stream, sizeof(ulong), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 340				; 00000154H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1223 : 	memcpychk(&loadMetric_,              stream, sizeof(VU_BYTE), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1224 : 	
; 1225 : 
; 1226 : 	memcpychk(&gameId_,                  stream, sizeof(VU_ID), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 352				; 00000160H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1227 : 	//VU_ID gameId;
; 1228 : 	//memcpychk(&gameId,                  stream, sizeof(VU_ID), rem);
; 1229 : 	//game_.reset(static_cast<VuGameEntity*>(vuDatabase->Find(gameId)));
; 1230 : 
; 1231 : 	memcpychk(&len,                      stream, sizeof(len), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1232 : 
; 1233 : 	VU_ID id;

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1234 : 
; 1235 : 	for (int i = 0; i < groupCount_; i++) {

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN7@VuSessionE
$LN6@VuSessionE:
	mov	eax, DWORD PTR _i$10[ebp]
	add	eax, 1
	mov	DWORD PTR _i$10[ebp], eax
$LN7@VuSessionE:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+360]
	cmp	DWORD PTR _i$10[ebp], edx
	jge	SHORT $LN5@VuSessionE

; 1236 : 		memcpychk(&id, stream, sizeof(id), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1237 : 		AddGroup(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddGroup@VuSessionEntity@@QAEHVVU_ID@@@Z ; VuSessionEntity::AddGroup

; 1238 : 	}

	jmp	SHORT $LN6@VuSessionE
$LN5@VuSessionE:

; 1239 : 	//memcpychk(&bandwidth_,          stream, sizeof(bandwidth_), rem);
; 1240 : 
; 1241 : #ifdef VU_SIMPLE_LATENCY
; 1242 : 	VuSessionEntity *session = (VuSessionEntity*)vuDatabase->Find(Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 1243 : 	VU_TIME     rt,gt;
; 1244 : 	memcpychk(&rt, stream, sizeof(VU_TIME), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rt$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1245 : 	memcpychk(&gt, stream, sizeof(VU_TIME), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _gt$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1246 : 
; 1247 : 	if (session) {

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN4@VuSessionE

; 1248 : 		// Respond to this session with a timing message so it can determine latency
; 1249 : 		VuTimingMessage* msg = new VuTimingMessage(vuLocalSession,(VuTargetEntity*)session);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN10@VuSessionE
	push	0
	mov	eax, DWORD PTR _session$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; VuTimingMessage::VuTimingMessage
	mov	DWORD PTR tv262[ebp], eax
	jmp	SHORT $LN11@VuSessionE
$LN10@VuSessionE:
	mov	DWORD PTR tv262[ebp], 0
$LN11@VuSessionE:
	mov	eax, DWORD PTR tv262[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _msg$11[ebp], ecx

; 1250 : 		msg->sessionRealSendTime_ = rt;

	mov	edx, DWORD PTR _msg$11[ebp]
	mov	eax, DWORD PTR _rt$[ebp]
	mov	DWORD PTR [edx+44], eax

; 1251 : 		msg->sessionGameSendTime_ = gt;

	mov	ecx, DWORD PTR _msg$11[ebp]
	mov	edx, DWORD PTR _gt$[ebp]
	mov	DWORD PTR [ecx+48], edx

; 1252 : 		msg->remoteGameTime_      = vuxGameTime;

	mov	eax, DWORD PTR _msg$11[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+52], ecx

; 1253 : 		VuMessageQueue::PostVuMessage(msg);

	mov	edx, DWORD PTR _msg$11[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN4@VuSessionE:

; 1254 : 	}
; 1255 : 
; 1256 : 
; 1257 : #endif //VU_SIMPLE_LATENCY
; 1258 : #ifdef VU_TRACK_LATENCY
; 1259 : 	memcpychk(&timeSyncState_,      stream, sizeof(timeSyncState_), rem);      
; 1260 : 	memcpychk(&latency_,            stream, sizeof(latency_), rem);            
; 1261 : 	memcpychk(&masterTime_,         stream, sizeof(masterTime_), rem);         
; 1262 : 	memcpychk(&masterTimePostTime_, stream, sizeof(masterTimePostTime_), rem); 
; 1263 : 	memcpychk(&responseTime_,       stream, sizeof(responseTime_), rem);       
; 1264 : 	memcpychk(&masterTimeOwner_,    stream, sizeof(masterTimeOwner_), rem);    
; 1265 : #endif //VU_TRACK_LATENCY
; 1266 : 	memcpychk(&len, stream, sizeof(VU_BYTE), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1267 : 	//len = (VU_BYTE)**stream;      *stream += sizeof(VU_BYTE);
; 1268 : 
; 1269 : 	callsign_ = new char[len + 1];

	movzx	eax, BYTE PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [ecx+344], edx

; 1270 : 	memcpychk(callsign_, stream, len, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1271 : 	callsign_[len] = '\0';  // null terminate

	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	mov	BYTE PTR [ecx+edx], 0

; 1272 : 
; 1273 : 	// cameras
; 1274 : 	unsigned char cameraCount;
; 1275 : 	memcpychk(&cameraCount, stream, sizeof(cameraCount), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cameraCount$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1276 : 	for (unsigned char i=0;i<cameraCount;++i){

	mov	BYTE PTR _i$12[ebp], 0
	jmp	SHORT $LN3@VuSessionE
$LN2@VuSessionE:
	mov	dl, BYTE PTR _i$12[ebp]
	add	dl, 1
	mov	BYTE PTR _i$12[ebp], dl
$LN3@VuSessionE:
	movzx	eax, BYTE PTR _i$12[ebp]
	movzx	ecx, BYTE PTR _cameraCount$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN8@VuSessionE

; 1277 : 		VU_ID id;

	lea	ecx, DWORD PTR _id$4[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1278 : 		memcpychk(&id, stream, sizeof(VU_ID), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$4[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1279 : 		VuEntity *e = vuDatabase->Find(id);

	mov	edx, DWORD PTR _id$4[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _e$6[ebp], eax

; 1280 : 		AttachCamera(e, true);

	push	1
	mov	ecx, DWORD PTR _e$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::AttachCamera

; 1281 : 	}

	jmp	SHORT $LN2@VuSessionE
$LN8@VuSessionE:

; 1282 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	jmp	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	jmp	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
__unwindfunclet$??0VuSessionEntity@@QAE@PAPAEPAJ@Z$5:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuSessionEntity@@QAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEntity@@QAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEntity@@QAE@PAPAEPAJ@Z ENDP			; VuSessionEntity::VuSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_domainMask$ = 8					; size = 4
_callsign$ = 12						; size = 4
??0VuSessionEntity@@QAE@KPBD@Z PROC			; VuSessionEntity::VuSessionEntity
; _this$ = ecx

; 1180 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEntity@@QAE@KPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuTargetEntity@@IAE@GK@Z		; VuTargetEntity::VuTargetEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionEntity@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 332				; 0000014cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _domainMask$[ebp]
	mov	DWORD PTR [ecx+340], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+348], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+352], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+356], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+368], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+372], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+376], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??0?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	call	??0?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::list<VuEntity *,std::allocator<VuEntity *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	call	??0?$VuBin@VVuGameEntity@@@@QAE@PAVVuGameEntity@@@Z ; VuBin<VuGameEntity>::VuBin<VuGameEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+412], 0

; 1181 : 	share_.id_.creator_ = sessionId_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 1182 : 	share_.id_.num_     = VU_SESSION_ENTITY_ID;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 3

; 1183 : 	share_.ownerId_     = share_.id_;   // need to reset this

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx

; 1184 : 	SetCallsign(callsign);

	mov	ecx, DWORD PTR _callsign$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCallsign@VuSessionEntity@@QAEXPBD@Z	; VuSessionEntity::SetCallsign

; 1185 : 	SetKeepaliveTime(vuxRealTime);

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 1186 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::~vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >
__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1?$list@U?$pair@MPAVVuEntity@@@std@@V?$allocator@U?$pair@MPAVVuEntity@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >::~list<std::pair<float,VuEntity *>,std::allocator<std::pair<float,VuEntity *> > >
__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 400				; 00000190H
	jmp	??1?$list@PAVVuEntity@@V?$allocator@PAVVuEntity@@@std@@@std@@QAE@XZ ; std::list<VuEntity *,std::allocator<VuEntity *> >::~list<VuEntity *,std::allocator<VuEntity *> >
__unwindfunclet$??0VuSessionEntity@@QAE@KPBD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	jmp	??1?$VuBin@VVuGameEntity@@@@QAE@XZ	; VuBin<VuGameEntity>::~VuBin<VuGameEntity>
__ehhandler$??0VuSessionEntity@@QAE@KPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEntity@@QAE@KPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEntity@@QAE@KPBD@Z ENDP			; VuSessionEntity::VuSessionEntity
; Function compile flags: /Odtp
;	COMDAT ??0VuGroupNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuGroupNode@@QAE@XZ PROC				; VuGroupNode::VuGroupNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuGroupNode@@QAE@XZ ENDP				; VuGroupNode::VuGroupNode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuTargetEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuTargetEntity@@UAEPAXI@Z PROC			; VuTargetEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTargetEntity@@UAE@XZ		; VuTargetEntity::~VuTargetEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuTargetEntity@@UAEPAXI@Z ENDP			; VuTargetEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuTargetEntity@@AAEHXZ PROC			; VuTargetEntity::LocalSize
; _this$ = ecx

; 508  : int VuTargetEntity::LocalSize(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 509  : 	return sizeof(share_.entityType_)
; 510  : 			+ sizeof(share_.flags_)
; 511  : 			+ sizeof(share_.id_.creator_)
; 512  : 			+ sizeof(share_.id_.num_)
; 513  : 			;

	mov	eax, 14					; 0000000eH

; 514  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuTargetEntity@@AAEHXZ ENDP			; VuTargetEntity::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
??0VuTargetEntity@@IAE@PAU_iobuf@@@Z PROC		; VuTargetEntity::VuTargetEntity
; _this$ = ecx

; 483  : VuTargetEntity::VuTargetEntity(FILE* file): VuEntity((ushort)VU_UNKNOWN_ENTITY_TYPE, 0){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEntity@@QAE@GK@Z			; VuEntity::VuEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTargetEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0VuCommsContext@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??0VuCommsContext@@QAE@XZ

; 484  : 	Init(&bestEffortComms_);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 485  : 	Init(&reliableComms_);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 224				; 000000e0H
	push	edx
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 486  : 	reliableComms_.reliable_ = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+232], 1

; 487  : 	fread(&share_.entityType_,  sizeof(share_.entityType_),  1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 488  : 	fread(&share_.flags_,       sizeof(share_.flags_),       1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 489  : 	fread(&share_.id_.creator_, sizeof(share_.id_.creator_), 1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 490  : 	fread(&share_.id_.num_,     sizeof(share_.id_.num_),     1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 491  : 
; 492  : 	SetEntityType(share_.entityType_);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntityType@VuEntity@@QAEXG@Z	; VuEntity::SetEntityType

; 493  : 	dirty = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+324], 0

; 494  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEntity@@MAE@XZ			; VuEntity::~VuEntity
__ehhandler$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTargetEntity@@IAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTargetEntity@@IAE@PAU_iobuf@@@Z ENDP		; VuTargetEntity::VuTargetEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0VuTargetEntity@@IAE@PAPAEPAJ@Z PROC			; VuTargetEntity::VuTargetEntity
; _this$ = ecx

; 470  : VuTargetEntity::VuTargetEntity(VU_BYTE** stream, long *rem): VuEntity((ushort)VU_UNKNOWN_ENTITY_TYPE, 0){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTargetEntity@@IAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEntity@@QAE@GK@Z			; VuEntity::VuEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTargetEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0VuCommsContext@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??0VuCommsContext@@QAE@XZ

; 471  : 	Init(&bestEffortComms_);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 472  : 	Init(&reliableComms_);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 224				; 000000e0H
	push	edx
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 473  : 	reliableComms_.reliable_ = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+232], 1

; 474  : 	memcpychk(&share_.entityType_,  stream, sizeof(share_.entityType_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 475  : 	memcpychk(&share_.flags_,       stream, sizeof(share_.flags_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 476  : 	memcpychk(&share_.id_.creator_, stream, sizeof(share_.id_.creator_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 477  : 	memcpychk(&share_.id_.num_,     stream, sizeof(share_.id_.num_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 478  : 
; 479  : 	SetEntityType(share_.entityType_);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntityType@VuEntity@@QAEXG@Z	; VuEntity::SetEntityType

; 480  : 	dirty = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 481  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTargetEntity@@IAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEntity@@MAE@XZ			; VuEntity::~VuEntity
__ehhandler$??0VuTargetEntity@@IAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTargetEntity@@IAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTargetEntity@@IAE@PAPAEPAJ@Z ENDP			; VuTargetEntity::VuTargetEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_typeindex$ = 8						; size = 2
_eid$ = 12						; size = 4
??0VuTargetEntity@@IAE@GK@Z PROC			; VuTargetEntity::VuTargetEntity
; _this$ = ecx

; 463  : VuTargetEntity::VuTargetEntity(ushort typeindex, VU_ID_NUMBER eid): VuEntity(typeindex, eid){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTargetEntity@@IAE@GK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _eid$[ebp]
	push	eax
	movzx	ecx, WORD PTR _typeindex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEntity@@QAE@GK@Z			; VuEntity::VuEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuTargetEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0VuCommsContext@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??0VuCommsContext@@QAE@XZ

; 464  : 	Init(&bestEffortComms_);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 465  : 	Init(&reliableComms_);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	push	ecx
	call	?Init@@YAXPAUVuCommsContext@@@Z		; Init
	add	esp, 4

; 466  : 	reliableComms_.reliable_ = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+232], 1

; 467  : 	dirty = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 468  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTargetEntity@@IAE@GK@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEntity@@MAE@XZ			; VuEntity::~VuEntity
__ehhandler$??0VuTargetEntity@@IAE@GK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTargetEntity@@IAE@GK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTargetEntity@@IAE@GK@Z ENDP			; VuTargetEntity::VuTargetEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -84						; size = 8
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
$T5 = -52						; size = 8
$T6 = -44						; size = 8
_phdr$7 = -36						; size = 8
_mhdr$8 = -28						; size = 4
_ptr$9 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
_totsize$ = -12						; size = 4
tv71 = -8						; size = 4
_retval$ = -4						; size = 4
_ctxt$ = 8						; size = 4
_msg$ = 12						; size = 4
?SendLowPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z PROC ; VuTargetEntity::SendLowPriority
; _this$ = ecx

; 999  : int VuTargetEntity::SendLowPriority(VuCommsContext* ctxt, VuMessage *msg){

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 1000 : 	int retval  = -3;

	mov	DWORD PTR _retval$[ebp], -3		; fffffffdH

; 1001 : 	int totsize;
; 1002 : 	int size;
; 1003 : 
; 1004 : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 1005 : 
; 1006 : 	size    = msg->Size();         

	mov	eax, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR _size$[ebp], eax

; 1007 : 	totsize = size + PACKET_HDR_SIZE + MAX_MSG_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN12@SendLowPri
	mov	DWORD PTR tv71[ebp], 0
	jmp	SHORT $LN13@SendLowPri
$LN12@SendLowPri:
	mov	DWORD PTR tv71[ebp], 8
$LN13@SendLowPri:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	lea	eax, DWORD PTR [edx+ecx+3]
	mov	DWORD PTR _totsize$[ebp], eax

; 1008 : 
; 1009 : 	if (totsize > ctxt->maxMsgSize_) { // write would exceed buffer

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _totsize$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jle	SHORT $LN9@SendLowPri

; 1010 : 		assert(0);
; 1011 : 		retval = COMAPI_MESSAGE_TOO_BIG;

	mov	DWORD PTR _retval$[ebp], -6		; fffffffaH

; 1012 : 	}
; 1013 : 	else if (

	jmp	$LN8@SendLowPri
$LN9@SendLowPri:

; 1014 : 		ctxt->lowSendPacketPtr_ != ctxt->lowSendPacket_ && (
; 1015 : 			// data is waiting in queue
; 1016 : 			totsize + ctxt->lowSendPacketPtr_ - ctxt->lowSendPacket_ > ctxt->maxPackSize_ || (
; 1017 : 				// write would exceed packet size
; 1018 : 				ctxt->lowSendPacketPtr_ != ctxt->lowSendPacket_ && (
; 1019 : 					// different origins
; 1020 : 					msg->Sender().creator_ != ctxt->lowPendingSenderId_.creator_ ||
; 1021 : 					msg->Destination() != ctxt->lowPendingSendTargetId_
; 1022 : 				)
; 1023 : 			)
; 1024 : 		)
; 1025 : 	){

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+48]
	cmp	edx, DWORD PTR [ecx+44]
	je	$LN7@SendLowPri
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	add	ecx, DWORD PTR _totsize$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	sub	ecx, DWORD PTR [edx+44]
	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jg	SHORT $LN6@SendLowPri
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	cmp	eax, DWORD PTR [edx+44]
	je	$LN7@SendLowPri
	mov	ecx, DWORD PTR _ctxt$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	add	eax, 4
	mov	ecx, eax
	call	??9VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator!=
	test	eax, eax
	jne	SHORT $LN6@SendLowPri
	mov	eax, DWORD PTR _ctxt$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@SendLowPri
$LN6@SendLowPri:

; 1026 : 		if (FlushLow(ctxt) > 0 && ctxt->lowSendPacketPtr_ == ctxt->lowSendPacket_) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushLow@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::FlushLow
	test	eax, eax
	jle	SHORT $LN4@SendLowPri
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	cmp	eax, DWORD PTR [edx+44]
	jne	SHORT $LN4@SendLowPri

; 1027 : 			// try resending...
; 1028 : 			retval = SendLowPriority(ctxt, msg);

	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendLowPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendLowPriority
	mov	DWORD PTR _retval$[ebp], eax

; 1029 : 		}
; 1030 : 		else {

	jmp	SHORT $LN3@SendLowPri
$LN4@SendLowPri:

; 1031 : 			// cannot send, return error
; 1032 : 			retval = COMAPI_WOULDBLOCK;

	mov	DWORD PTR _retval$[ebp], -8		; fffffff8H
$LN3@SendLowPri:

; 1033 : 		}
; 1034 : 	}
; 1035 : 	else {      

	jmp	$LN8@SendLowPri
$LN7@SendLowPri:

; 1036 : 		// write fits within buffer -- add to/begin packet
; 1037 : 		if (ctxt->lowSendPacketPtr_ == ctxt->lowSendPacket_) { // begin a new packet

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+48]
	cmp	edx, DWORD PTR [ecx+44]
	jne	SHORT $LN1@SendLowPri

; 1038 : 			VuPacketHeader phdr (msg->Destination());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _phdr$7[ebp]
	call	??0VuPacketHeader@@QAE@VVU_ID@@@Z	; VuPacketHeader::VuPacketHeader

; 1039 : 			ctxt->lowSendPacketPtr_ += WritePacketHeader(ctxt->lowSendPacketPtr_, &phdr);

	lea	eax, DWORD PTR _phdr$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?WritePacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ; WritePacketHeader
	add	esp, 8
	mov	ecx, DWORD PTR _ctxt$[ebp]
	add	eax, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], eax
$LN1@SendLowPri:

; 1040 : 		}
; 1041 : 
; 1042 : 		VuMessageHeader mhdr (msg->Type(), static_cast<short>(size));

	movzx	eax, WORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Type@VuMessage@@QBEEXZ			; VuMessage::Type
	movzx	ecx, al
	push	ecx
	lea	ecx, DWORD PTR _mhdr$8[ebp]
	call	??0VuMessageHeader@@QAE@EG@Z		; VuMessageHeader::VuMessageHeader

; 1043 : 
; 1044 : 		ctxt->lowSendPacketPtr_           += WriteMessageHeader(ctxt->lowSendPacketPtr_, &mhdr);

	lea	edx, DWORD PTR _mhdr$8[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?WriteMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ; WriteMessageHeader
	add	esp, 8
	mov	edx, DWORD PTR _ctxt$[ebp]
	add	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 1045 : 		ctxt->lowPendingSenderId_.creator_ = msg->Sender().creator_;

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+56], eax

; 1046 : 		ctxt->lowPendingSenderId_.num_     = msg->Sender().num_;

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+52], edx

; 1047 : 		ctxt->lowPendingSendTargetId_      = msg->Destination();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], edx

; 1048 : 
; 1049 : 		// return number of bytes written to buffer
; 1050 : 		VU_BYTE* ptr    = ctxt->lowSendPacketPtr_;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _ptr$9[ebp], edx

; 1051 : 		retval = msg->Write(&ptr);

	lea	eax, DWORD PTR _ptr$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Write@VuMessage@@IAEHPAPAE@Z		; VuMessage::Write
	mov	DWORD PTR _retval$[ebp], eax

; 1052 : 		ctxt->lowSendPacketPtr_ = ptr;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ptr$9[ebp]
	mov	DWORD PTR [ecx+48], edx
$LN8@SendLowPri:

; 1053 : 	}
; 1054 : 
; 1055 : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 1056 : 
; 1057 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1058 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SendLowPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ENDP ; VuTargetEntity::SendLowPriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -84						; size = 8
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
$T5 = -52						; size = 8
$T6 = -44						; size = 8
_phdr$7 = -36						; size = 8
_mhdr$8 = -28						; size = 4
_ptr$9 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
_totsize$ = -12						; size = 4
tv71 = -8						; size = 4
_retval$ = -4						; size = 4
_ctxt$ = 8						; size = 4
_msg$ = 12						; size = 4
?SendNormalPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z PROC ; VuTargetEntity::SendNormalPriority
; _this$ = ecx

; 942  : int VuTargetEntity::SendNormalPriority(VuCommsContext* ctxt, VuMessage *msg){

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 943  : 	int retval = -3;

	mov	DWORD PTR _retval$[ebp], -3		; fffffffdH

; 944  : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 945  : 	int totsize,size = msg->Size();         

	mov	eax, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR _size$[ebp], eax

; 946  : 
; 947  : 	totsize = size + PACKET_HDR_SIZE + MAX_MSG_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN12@SendNormal
	mov	DWORD PTR tv71[ebp], 0
	jmp	SHORT $LN13@SendNormal
$LN12@SendNormal:
	mov	DWORD PTR tv71[ebp], 8
$LN13@SendNormal:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	lea	eax, DWORD PTR [edx+ecx+3]
	mov	DWORD PTR _totsize$[ebp], eax

; 948  : 
; 949  : 	if (totsize > ctxt->maxMsgSize_){ 

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _totsize$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jle	SHORT $LN9@SendNormal

; 950  : 		// write would exceed buffer
; 951  : 		retval = COMAPI_MESSAGE_TOO_BIG;

	mov	DWORD PTR _retval$[ebp], -6		; fffffffaH

; 952  : 	} 
; 953  : 	else if (

	jmp	$LN8@SendNormal
$LN9@SendNormal:

; 954  : 		// data is waiting in queue
; 955  : 		(ctxt->normalSendPacketPtr_ != ctxt->normalSendPacket_) && (
; 956  : 			// write would exceed packet size
; 957  : 			totsize + ctxt->normalSendPacketPtr_ - ctxt->normalSendPacket_ > ctxt->maxPackSize_ || (
; 958  : 				// different origins
; 959  : 				ctxt->normalSendPacketPtr_ != ctxt->normalSendPacket_ && (
; 960  : 					msg->Sender().creator_ != ctxt->normalPendingSenderId_.creator_ || 
; 961  : 					msg->Destination() != ctxt->normalPendingSendTargetId_
; 962  : 				)
; 963  : 			)
; 964  : 		)
; 965  : 	){

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+20]
	je	$LN7@SendNormal
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR _totsize$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	sub	ecx, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jg	SHORT $LN6@SendNormal
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN7@SendNormal
	mov	ecx, DWORD PTR _ctxt$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	add	eax, 4
	mov	ecx, eax
	call	??9VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator!=
	test	eax, eax
	jne	SHORT $LN6@SendNormal
	mov	eax, DWORD PTR _ctxt$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@SendNormal
$LN6@SendNormal:

; 966  : 		if (Flush(ctxt) > 0 && ctxt->normalSendPacketPtr_ == ctxt->normalSendPacket_){

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::Flush
	test	eax, eax
	jle	SHORT $LN3@SendNormal
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR [edx+20]
	jne	SHORT $LN3@SendNormal

; 967  : 			// try resending...
; 968  : 			retval = SendNormalPriority(ctxt, msg);

	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNormalPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendNormalPriority
	mov	DWORD PTR _retval$[ebp], eax
$LN3@SendNormal:

; 969  : 		}
; 970  : 		else {
; 971  : 			// cannot send, return error
; 972  : 			// retval = COMAPI_WOULDBLOCK;
; 973  : 		}
; 974  : 	} 
; 975  : 	else {      

	jmp	$LN8@SendNormal
$LN7@SendNormal:

; 976  : 		// write fits within buffer -- add to/begin packet
; 977  : 		if (ctxt->normalSendPacketPtr_ == ctxt->normalSendPacket_){ 

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN1@SendNormal

; 978  : 			// begin a new packet
; 979  : 			VuPacketHeader phdr(msg->Destination());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _phdr$7[ebp]
	call	??0VuPacketHeader@@QAE@VVU_ID@@@Z	; VuPacketHeader::VuPacketHeader

; 980  : 			ctxt->normalSendPacketPtr_ += WritePacketHeader(ctxt->normalSendPacketPtr_, &phdr);

	lea	eax, DWORD PTR _phdr$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	?WritePacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ; WritePacketHeader
	add	esp, 8
	mov	ecx, DWORD PTR _ctxt$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN1@SendNormal:

; 981  : 		}
; 982  : 
; 983  : 		VuMessageHeader mhdr(msg->Type(), static_cast<short>(size));

	movzx	eax, WORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Type@VuMessage@@QBEEXZ			; VuMessage::Type
	movzx	ecx, al
	push	ecx
	lea	ecx, DWORD PTR _mhdr$8[ebp]
	call	??0VuMessageHeader@@QAE@EG@Z		; VuMessageHeader::VuMessageHeader

; 984  : 		ctxt->normalSendPacketPtr_           += WriteMessageHeader(ctxt->normalSendPacketPtr_, &mhdr);

	lea	edx, DWORD PTR _mhdr$8[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?WriteMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ; WriteMessageHeader
	add	esp, 8
	mov	edx, DWORD PTR _ctxt$[ebp]
	add	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 985  : 		ctxt->normalPendingSenderId_.creator_ = msg->Sender().creator_;

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 986  : 		ctxt->normalPendingSenderId_.num_     = msg->Sender().num_;

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+28], edx

; 987  : 		ctxt->normalPendingSendTargetId_      = msg->Destination();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], edx

; 988  : 		// return number of bytes written to buffer
; 989  : 		VU_BYTE* ptr    = ctxt->normalSendPacketPtr_;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _ptr$9[ebp], edx

; 990  : 		retval = msg->Write(&ptr);

	lea	eax, DWORD PTR _ptr$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Write@VuMessage@@IAEHPAPAE@Z		; VuMessage::Write
	mov	DWORD PTR _retval$[ebp], eax

; 991  : 		ctxt->normalSendPacketPtr_ = ptr;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ptr$9[ebp]
	mov	DWORD PTR [ecx+24], edx
$LN8@SendNormal:

; 992  : 		// update msg count
; 993  : 		//*ctxt->sendPacket_ += 1;
; 994  : 	}
; 995  : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 996  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 997  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SendNormalPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ENDP ; VuTargetEntity::SendNormalPriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -40						; size = 8
_phdr$ = -32						; size = 8
_this$ = -24						; size = 4
_retval$ = -20						; size = 4
_start_buffer$ = -16					; size = 4
_mhdr$ = -12						; size = 4
_size$ = -8						; size = 4
_buffer$ = -4						; size = 4
_ctxt$ = 8						; size = 4
_msg$ = 12						; size = 4
?SendOutOfBand@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z PROC ; VuTargetEntity::SendOutOfBand
; _this$ = ecx

; 920  : int VuTargetEntity::SendOutOfBand(VuCommsContext* ctxt, VuMessage *msg){

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 921  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 922  : 
; 923  : 	// write packet header
; 924  : 	VuPacketHeader phdr(msg->Destination());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _phdr$[ebp]
	call	??0VuPacketHeader@@QAE@VVU_ID@@@Z	; VuPacketHeader::VuPacketHeader

; 925  : 	VU_BYTE* start_buffer = (VU_BYTE *)ComAPISendBufferGet(ctxt->handle_);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISendBufferGet
	add	esp, 4
	mov	DWORD PTR _start_buffer$[ebp], eax

; 926  : 	VU_BYTE* buffer       = start_buffer;

	mov	edx, DWORD PTR _start_buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], edx

; 927  : 	buffer += WritePacketHeader(buffer, &phdr);

	lea	eax, DWORD PTR _phdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?WritePacketHeader@@YAHPAEPAUVuPacketHeader@@@Z ; WritePacketHeader
	add	esp, 8
	add	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax

; 928  : 
; 929  : 	// message header
; 930  : 	int size = msg->Size();

	mov	edx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	DWORD PTR _size$[ebp], eax

; 931  : 	VuMessageHeader mhdr(msg->Type(), static_cast<short>(size));

	movzx	eax, WORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Type@VuMessage@@QBEEXZ			; VuMessage::Type
	movzx	ecx, al
	push	ecx
	lea	ecx, DWORD PTR _mhdr$[ebp]
	call	??0VuMessageHeader@@QAE@EG@Z		; VuMessageHeader::VuMessageHeader

; 932  : 	buffer += WriteMessageHeader(buffer, &mhdr);

	lea	edx, DWORD PTR _mhdr$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?WriteMessageHeader@@YAHPAEPAUVuMessageHeader@@@Z ; WriteMessageHeader
	add	esp, 8
	add	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax

; 933  : 	
; 934  : 	// message
; 935  : 	msg->Write(&buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Write@VuMessage@@IAEHPAPAE@Z		; VuMessage::Write

; 936  : 	if (size > 0){

	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN1@SendOutOfB

; 937  : 		retval = ComAPISendOOB(ctxt->handle_, buffer - start_buffer, mhdr.CAPIType());

	lea	ecx, DWORD PTR _mhdr$[ebp]
	call	?CAPIType@VuMessageHeader@@QAEHXZ	; VuMessageHeader::CAPIType
	push	eax
	mov	edx, DWORD PTR _buffer$[ebp]
	sub	edx, DWORD PTR _start_buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISendOOB
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax
$LN1@SendOutOfB:

; 938  : 	}
; 939  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 940  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SendOutOfBand@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ENDP ; VuTargetEntity::SendOutOfBand
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -28						; size = 4
_msgHdr$1 = -24						; size = 4
_msgPtr$2 = -20						; size = 4
tv81 = -16						; size = 4
_buffer$3 = -12						; size = 4
_size$4 = -8						; size = 4
_retval$ = -4						; size = 4
_ctxt$ = 8						; size = 4
?FlushLow@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z PROC ; VuTargetEntity::FlushLow
; _this$ = ecx

; 862  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 863  : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 864  : 
; 865  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 866  : 
; 867  : 	if (ctxt->lowSendPacketPtr_ != ctxt->lowSendPacket_) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+48]
	cmp	edx, DWORD PTR [ecx+44]
	je	$LN5@FlushLow

; 868  : 		int size = ctxt->lowSendPacketPtr_ - ctxt->lowSendPacket_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+48]
	sub	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _size$4[ebp], edx

; 869  : 
; 870  : 		if (size > 0) {

	cmp	DWORD PTR _size$4[ebp], 0
	jle	$LN5@FlushLow

; 871  : 			VU_BYTE*  buffer = (VU_BYTE *)ComAPISendBufferGet(ctxt->handle_);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISendBufferGet
	add	esp, 4
	mov	DWORD PTR _buffer$3[ebp], eax

; 872  : 			memcpy(buffer, ctxt->lowSendPacket_, size);

	mov	edx, DWORD PTR _size$4[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _buffer$3[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 873  : 			//sfr msg type
; 874  : 			VU_BYTE *msgPtr = buffer + PACKET_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN8@FlushLow
	mov	DWORD PTR tv81[ebp], 0
	jmp	SHORT $LN9@FlushLow
$LN8@FlushLow:
	mov	DWORD PTR tv81[ebp], 8
$LN9@FlushLow:
	mov	eax, DWORD PTR _buffer$3[ebp]
	add	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR _msgPtr$2[ebp], eax

; 875  : 			VuMessageHeader *msgHdr = (VuMessageHeader*)msgPtr;

	mov	ecx, DWORD PTR _msgPtr$2[ebp]
	mov	DWORD PTR _msgHdr$1[ebp], ecx

; 876  : 			retval = ComAPISend(ctxt->handle_, size, msgHdr->CAPIType());

	mov	ecx, DWORD PTR _msgHdr$1[ebp]
	call	?CAPIType@VuMessageHeader@@QAEHXZ	; VuMessageHeader::CAPIType
	push	eax
	mov	edx, DWORD PTR _size$4[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISend
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 877  : 			if (retval > 0) {

	cmp	DWORD PTR _retval$[ebp], 0
	jle	SHORT $LN3@FlushLow

; 878  : 				// message sent successfully
; 879  : 				ctxt->lowSendPacketPtr_ = ctxt->lowSendPacket_;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR [edx+48], ecx
	jmp	SHORT $LN5@FlushLow
$LN3@FlushLow:

; 880  : 			} 
; 881  : 			else if (retval != COMAPI_WOULDBLOCK) {

	cmp	DWORD PTR _retval$[ebp], -8		; fffffff8H
	je	SHORT $LN5@FlushLow

; 882  : 				// non-recoverable error
; 883  : 				ctxt->lowSendPacketPtr_ = ctxt->lowSendPacket_;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR [edx+48], ecx
$LN5@FlushLow:

; 884  : 			}
; 885  : 		}
; 886  : 	}
; 887  : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 888  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 889  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?FlushLow@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ENDP ; VuTargetEntity::FlushLow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -28						; size = 4
_msgHdr$1 = -24						; size = 4
_msgPtr$2 = -20						; size = 4
tv81 = -16						; size = 4
_buffer$3 = -12						; size = 4
_size$4 = -8						; size = 4
_retval$ = -4						; size = 4
_ctxt$ = 8						; size = 4
?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z PROC	; VuTargetEntity::Flush
; _this$ = ecx

; 831  : int VuTargetEntity::Flush(VuCommsContext* ctxt){

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 832  : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 833  : 
; 834  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 835  : 
; 836  : 	if (ctxt->normalSendPacketPtr_ != ctxt->normalSendPacket_) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+20]
	je	$LN5@Flush

; 837  : 		int size = ctxt->normalSendPacketPtr_ - ctxt->normalSendPacket_;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _size$4[ebp], edx

; 838  : 		if (size > 0) {

	cmp	DWORD PTR _size$4[ebp], 0
	jle	$LN5@Flush

; 839  : 			VU_BYTE * buffer = (VU_BYTE *)ComAPISendBufferGet(ctxt->handle_);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISendBufferGet
	add	esp, 4
	mov	DWORD PTR _buffer$3[ebp], eax

; 840  : 			memcpy(buffer, ctxt->normalSendPacket_, size);

	mov	edx, DWORD PTR _size$4[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _buffer$3[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 841  : 			// sfr: get message type from header
; 842  : 			VU_BYTE *msgPtr = buffer + PACKET_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN8@Flush
	mov	DWORD PTR tv81[ebp], 0
	jmp	SHORT $LN9@Flush
$LN8@Flush:
	mov	DWORD PTR tv81[ebp], 8
$LN9@Flush:
	mov	eax, DWORD PTR _buffer$3[ebp]
	add	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR _msgPtr$2[ebp], eax

; 843  : 			VuMessageHeader *msgHdr = (VuMessageHeader*)msgPtr;

	mov	ecx, DWORD PTR _msgPtr$2[ebp]
	mov	DWORD PTR _msgHdr$1[ebp], ecx

; 844  : 			
; 845  : 			// this is where send occurs
; 846  : 			retval = ComAPISend(ctxt->handle_, size, msgHdr->CAPIType());

	mov	ecx, DWORD PTR _msgHdr$1[ebp]
	call	?CAPIType@VuMessageHeader@@QAEHXZ	; VuMessageHeader::CAPIType
	push	eax
	mov	edx, DWORD PTR _size$4[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ComAPISend
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 847  : 			if (retval > 0) {

	cmp	DWORD PTR _retval$[ebp], 0
	jle	SHORT $LN3@Flush

; 848  : 				// message sent successfully
; 849  : 				ctxt->normalSendPacketPtr_ = ctxt->normalSendPacket_;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+24], ecx
	jmp	SHORT $LN5@Flush
$LN3@Flush:

; 850  : 			} else if (retval != COMAPI_WOULDBLOCK) {

	cmp	DWORD PTR _retval$[ebp], -8		; fffffff8H
	je	SHORT $LN5@Flush

; 851  : 				// non-recoverable error
; 852  : 				ctxt->normalSendPacketPtr_ = ctxt->normalSendPacket_;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+24], ecx
$LN5@Flush:

; 853  : 			}
; 854  : 		}
; 855  : 	}
; 856  : 
; 857  : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 858  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 859  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ENDP	; VuTargetEntity::Flush
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseComms@VuTargetEntity@@IAEXXZ PROC			; VuTargetEntity::CloseComms
; _this$ = ecx

; 820  : void VuTargetEntity::CloseComms(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 821  : 	if (bestEffortComms_.handle_){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@CloseComms

; 822  : 		ComAPIClose(bestEffortComms_.handle_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	_ComAPIClose
	add	esp, 4
$LN2@CloseComms:

; 823  : 	}
; 824  : 	if (reliableComms_.handle_){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+224], 0
	je	SHORT $LN1@CloseComms

; 825  : 		ComAPIClose(reliableComms_.handle_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	push	edx
	call	_ComAPIClose
	add	esp, 4
$LN1@CloseComms:

; 826  : 	}
; 827  : 	Cleanup(&bestEffortComms_);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	?Cleanup@@YAXPAUVuCommsContext@@@Z	; Cleanup
	add	esp, 4

; 828  : 	Cleanup(&reliableComms_);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	push	ecx
	call	?Cleanup@@YAXPAUVuCommsContext@@@Z	; Cleanup
	add	esp, 4

; 829  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseComms@VuTargetEntity@@IAEXXZ ENDP			; VuTargetEntity::CloseComms
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_forward$1 = -8						; size = 4
_this$ = -4						; size = 4
?MaxReliableMessageSize@VuTargetEntity@@QAEHXZ PROC	; VuTargetEntity::MaxReliableMessageSize
; _this$ = ecx

; 607  : int VuTargetEntity::MaxReliableMessageSize() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 608  : 	if (GetReliableCommsStatus() == VU_CONN_INACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetReliableCommsStatus
	test	eax, eax
	jne	SHORT $LN3@MaxReliabl

; 609  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxReliabl
$LN3@MaxReliabl:

; 610  : 	}
; 611  : 	if (!GetReliableCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	test	eax, eax
	jne	SHORT $LN2@MaxReliabl

; 612  : 		VuTargetEntity *forward = ForwardingTarget();

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	mov	DWORD PTR _forward$1[ebp], eax

; 613  : 		if (forward && forward != this) {

	cmp	DWORD PTR _forward$1[ebp], 0
	je	SHORT $LN1@MaxReliabl
	mov	ecx, DWORD PTR _forward$1[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN1@MaxReliabl

; 614  : 			return forward->MaxReliableMessageSize();

	mov	ecx, DWORD PTR _forward$1[ebp]
	call	?MaxReliableMessageSize@VuTargetEntity@@QAEHXZ ; VuTargetEntity::MaxReliableMessageSize
	jmp	SHORT $LN4@MaxReliabl
$LN1@MaxReliabl:

; 615  : 		}
; 616  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxReliabl
$LN2@MaxReliabl:

; 617  : 	}
; 618  : 	return reliableComms_.maxMsgSize_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+236]
$LN4@MaxReliabl:

; 619  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MaxReliableMessageSize@VuTargetEntity@@QAEHXZ ENDP	; VuTargetEntity::MaxReliableMessageSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv84 = -12						; size = 4
_forward$1 = -8						; size = 4
_this$ = -4						; size = 4
?MaxReliablePacketSize@VuTargetEntity@@QAEHXZ PROC	; VuTargetEntity::MaxReliablePacketSize
; _this$ = ecx

; 592  : int VuTargetEntity::MaxReliablePacketSize() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 593  : 	if (GetReliableCommsStatus() == VU_CONN_INACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetReliableCommsStatus
	test	eax, eax
	jne	SHORT $LN3@MaxReliabl

; 594  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxReliabl
$LN3@MaxReliabl:

; 595  : 	}
; 596  : 	if (!GetReliableCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	test	eax, eax
	jne	SHORT $LN2@MaxReliabl

; 597  : 		VuTargetEntity *forward = ForwardingTarget();

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	mov	DWORD PTR _forward$1[ebp], eax

; 598  : 		if (forward && forward != this) {

	cmp	DWORD PTR _forward$1[ebp], 0
	je	SHORT $LN1@MaxReliabl
	mov	ecx, DWORD PTR _forward$1[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN1@MaxReliabl

; 599  : 			return forward->MaxReliablePacketSize();

	mov	ecx, DWORD PTR _forward$1[ebp]
	call	?MaxReliablePacketSize@VuTargetEntity@@QAEHXZ ; VuTargetEntity::MaxReliablePacketSize
	jmp	SHORT $LN4@MaxReliabl
$LN1@MaxReliabl:

; 600  : 		}
; 601  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxReliabl
$LN2@MaxReliabl:

; 602  : 	}
; 603  : 	// return size of largest message to fit in one packet
; 604  : 	return reliableComms_.maxMsgSize_ + MIN_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN6@MaxReliabl
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN7@MaxReliabl
$LN6@MaxReliabl:
	mov	DWORD PTR tv84[ebp], 8
$LN7@MaxReliabl:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+236]
	mov	ecx, DWORD PTR tv84[ebp]
	lea	eax, DWORD PTR [ecx+eax+3]
$LN4@MaxReliabl:

; 605  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MaxReliablePacketSize@VuTargetEntity@@QAEHXZ ENDP	; VuTargetEntity::MaxReliablePacketSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_forward$1 = -8						; size = 4
_this$ = -4						; size = 4
?MaxMessageSize@VuTargetEntity@@QAEHXZ PROC		; VuTargetEntity::MaxMessageSize
; _this$ = ecx

; 578  : int VuTargetEntity::MaxMessageSize() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 579  : 	if (GetCommsStatus() == VU_CONN_INACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetCommsStatus
	test	eax, eax
	jne	SHORT $LN3@MaxMessage

; 580  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxMessage
$LN3@MaxMessage:

; 581  : 	}
; 582  : 	if (!GetCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	test	eax, eax
	jne	SHORT $LN2@MaxMessage

; 583  : 		VuTargetEntity *forward = ForwardingTarget();

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	mov	DWORD PTR _forward$1[ebp], eax

; 584  : 		if (forward && forward != this) {

	cmp	DWORD PTR _forward$1[ebp], 0
	je	SHORT $LN1@MaxMessage
	mov	ecx, DWORD PTR _forward$1[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN1@MaxMessage

; 585  : 			return forward->MaxMessageSize();

	mov	ecx, DWORD PTR _forward$1[ebp]
	call	?MaxMessageSize@VuTargetEntity@@QAEHXZ	; VuTargetEntity::MaxMessageSize
	jmp	SHORT $LN4@MaxMessage
$LN1@MaxMessage:

; 586  : 		}
; 587  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxMessage
$LN2@MaxMessage:

; 588  : 	}
; 589  : 	return bestEffortComms_.maxMsgSize_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
$LN4@MaxMessage:

; 590  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MaxMessageSize@VuTargetEntity@@QAEHXZ ENDP		; VuTargetEntity::MaxMessageSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
tv84 = -12						; size = 4
_forward$1 = -8						; size = 4
_this$ = -4						; size = 4
?MaxPacketSize@VuTargetEntity@@QAEHXZ PROC		; VuTargetEntity::MaxPacketSize
; _this$ = ecx

; 563  : int VuTargetEntity::MaxPacketSize() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 564  : 	if (GetCommsStatus() == VU_CONN_INACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetCommsStatus
	test	eax, eax
	jne	SHORT $LN3@MaxPacketS

; 565  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxPacketS
$LN3@MaxPacketS:

; 566  : 	}
; 567  : 	if (!GetCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	test	eax, eax
	jne	SHORT $LN2@MaxPacketS

; 568  : 		VuTargetEntity *forward = ForwardingTarget();

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	mov	DWORD PTR _forward$1[ebp], eax

; 569  : 		if (forward && forward != this) {

	cmp	DWORD PTR _forward$1[ebp], 0
	je	SHORT $LN1@MaxPacketS
	mov	ecx, DWORD PTR _forward$1[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN1@MaxPacketS

; 570  : 			return forward->MaxPacketSize();

	mov	ecx, DWORD PTR _forward$1[ebp]
	call	?MaxPacketSize@VuTargetEntity@@QAEHXZ	; VuTargetEntity::MaxPacketSize
	jmp	SHORT $LN4@MaxPacketS
$LN1@MaxPacketS:

; 571  : 		}
; 572  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@MaxPacketS
$LN2@MaxPacketS:

; 573  : 	}
; 574  : 	// return size of largest message to fit in one packet
; 575  : 	return bestEffortComms_.maxMsgSize_ + MIN_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN6@MaxPacketS
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN7@MaxPacketS
$LN6@MaxPacketS:
	mov	DWORD PTR tv84[ebp], 8
$LN7@MaxPacketS:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	ecx, DWORD PTR tv84[ebp]
	lea	eax, DWORD PTR [ecx+eax+3]
$LN4@MaxPacketS:

; 576  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MaxPacketSize@VuTargetEntity@@QAEHXZ ENDP		; VuTargetEntity::MaxPacketSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?BytesPending@VuTargetEntity@@QAEHXZ PROC		; VuTargetEntity::BytesPending
; _this$ = ecx

; 545  : int VuTargetEntity::BytesPending() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 546  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 547  : 	/*
; 548  : 	   if (GetCommsStatus() != VU_CONN_INACTIVE && GetCommsHandle())
; 549  : 	   {
; 550  : 	   retval += bestEffortComms_.normalSendPacketPtr_ - bestEffortComms_.normalSendPacket_;
; 551  : 	   retval += bestEffortComms_.lowSendPacketPtr_    - bestEffortComms_.lowSendPacket_;
; 552  : 	   }
; 553  : 	 */
; 554  : 	if (GetReliableCommsStatus() != VU_CONN_INACTIVE && GetReliableCommsHandle())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetReliableCommsStatus
	test	eax, eax
	je	SHORT $LN1@BytesPendi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	test	eax, eax
	je	SHORT $LN1@BytesPendi

; 555  : 	{
; 556  : 		// retval += reliableComms_.normalSendPacketPtr_ - reliableComms_.normalSendPacket_;
; 557  : 		// retval += reliableComms_.lowSendPacketPtr_    - reliableComms_.lowSendPacket_;
; 558  : 		retval += ComAPIQuery (reliableComms_.handle_, COMAPI_BYTES_PENDING);

	push	24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	call	_ComAPIQuery
	add	esp, 8
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
$LN1@BytesPendi:

; 559  : 	}
; 560  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 561  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BytesPending@VuTargetEntity@@QAEHXZ ENDP		; VuTargetEntity::BytesPending
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
$T6 = -24						; size = 4
tv141 = -20						; size = 4
tv131 = -16						; size = 4
_chbufsize$ = -12					; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_ch$ = 8						; size = 4
_bufSize$ = 12						; size = 4
_packSize$ = 16						; size = 4
?SetReliableCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z PROC ; VuTargetEntity::SetReliableCommsHandle
; _this$ = ecx

; 662  : void VuTargetEntity::SetReliableCommsHandle(ComAPIHandle ch, int bufSize, int packSize) {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 663  : 	unsigned long chbufsize = 0; 

	mov	DWORD PTR _chbufsize$[ebp], 0

; 664  : 
; 665  : 	if (ch){

	cmp	DWORD PTR _ch$[ebp], 0
	je	SHORT $LN5@SetReliabl

; 666  : 		chbufsize = ComAPIQuery(ch, COMAPI_ACTUAL_BUFFER_SIZE);

	push	14					; 0000000eH
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_ComAPIQuery
	add	esp, 8
	mov	DWORD PTR _chbufsize$[ebp], eax
$LN5@SetReliabl:

; 667  : 	}
; 668  : 
; 669  : 	if (bufSize <= 0){

	cmp	DWORD PTR _bufSize$[ebp], 0
	jg	SHORT $LN4@SetReliabl

; 670  : 		bufSize = chbufsize - MIN_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN8@SetReliabl
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN9@SetReliabl
$LN8@SetReliabl:
	mov	DWORD PTR tv72[ebp], 8
$LN9@SetReliabl:
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, 3
	mov	edx, DWORD PTR _chbufsize$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _bufSize$[ebp], edx
$LN4@SetReliabl:

; 671  : 	}
; 672  : 
; 673  : 	if (bufSize > 0x7fff){

	cmp	DWORD PTR _bufSize$[ebp], 32767		; 00007fffH
	jle	SHORT $LN3@SetReliabl

; 674  : 		bufSize = 0x7fff;   // max size w/ huffman encoding

	mov	DWORD PTR _bufSize$[ebp], 32767		; 00007fffH
$LN3@SetReliabl:

; 675  : 	}
; 676  : 
; 677  : 	delete [] reliableComms_.normalSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+244]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 678  : 	delete [] reliableComms_.lowSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 679  : 	delete [] reliableComms_.recBuffer_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+292]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 680  : 
; 681  : 	if (ch && (bufSize > 0)) {

	cmp	DWORD PTR _ch$[ebp], 0
	je	$LN2@SetReliabl
	cmp	DWORD PTR _bufSize$[ebp], 0
	jle	$LN2@SetReliabl

; 682  : 		reliableComms_.handle_           = ch;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	DWORD PTR [eax+224], ecx

; 683  : 		reliableComms_.maxMsgSize_       = bufSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [edx+236], eax

; 684  : 		reliableComms_.maxPackSize_      = packSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _packSize$[ebp]
	mov	DWORD PTR [ecx+240], edx

; 685  : 		reliableComms_.normalSendPacket_ = new VU_BYTE[bufSize+MIN_HDR_SIZE];

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN10@SetReliabl
	mov	DWORD PTR tv131[ebp], 0
	jmp	SHORT $LN11@SetReliabl
$LN10@SetReliabl:
	mov	DWORD PTR tv131[ebp], 8
$LN11@SetReliabl:
	mov	eax, DWORD PTR tv131[ebp]
	mov	ecx, DWORD PTR _bufSize$[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+244], ecx

; 686  : 		reliableComms_.lowSendPacket_    = new VU_BYTE[bufSize+MIN_HDR_SIZE];

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN12@SetReliabl
	mov	DWORD PTR tv141[ebp], 0
	jmp	SHORT $LN13@SetReliabl
$LN12@SetReliabl:
	mov	DWORD PTR tv141[ebp], 8
$LN13@SetReliabl:
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR _bufSize$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+268], eax

; 687  : 		reliableComms_.recBuffer_        = new VU_BYTE[bufSize];

	mov	ecx, DWORD PTR _bufSize$[ebp]
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx+292], eax

; 688  : 	} 
; 689  : 	else {

	jmp	SHORT $LN1@SetReliabl
$LN2@SetReliabl:

; 690  : 		reliableComms_.handle_           = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+224], 0

; 691  : 		reliableComms_.maxMsgSize_       = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+236], 0

; 692  : 		reliableComms_.normalSendPacket_ = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+244], 0

; 693  : 		reliableComms_.lowSendPacket_    = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+268], 0

; 694  : 		reliableComms_.recBuffer_        = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+292], 0
$LN1@SetReliabl:

; 695  : 	}
; 696  : 	reliableComms_.normalSendPacketPtr_ = reliableComms_.normalSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+244]
	mov	DWORD PTR [eax+248], edx

; 697  : 	reliableComms_.lowSendPacketPtr_    = reliableComms_.lowSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	mov	DWORD PTR [eax+272], edx

; 698  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetReliableCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z ENDP ; VuTargetEntity::SetReliableCommsHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ PROC ; VuTargetEntity::GetReliableCommsHandle, COMDAT
; _this$ = ecx

; 115  : 	ComAPIHandle GetReliableCommsHandle() { return reliableComms_.handle_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+224]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ENDP ; VuTargetEntity::GetReliableCommsHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ PROC ; VuTargetEntity::GetReliableCommsStatus, COMDAT
; _this$ = ecx

; 114  : 	VuCommsConnectStatus GetReliableCommsStatus() {return reliableComms_.status_;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+228]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ENDP ; VuTargetEntity::GetReliableCommsStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
$T6 = -24						; size = 4
tv144 = -20						; size = 4
tv134 = -16						; size = 4
_chbufsize$ = -12					; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_ch$ = 8						; size = 4
_bufSize$ = 12						; size = 4
_packSize$ = 16						; size = 4
?SetCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z PROC ; VuTargetEntity::SetCommsHandle
; _this$ = ecx

; 621  : void VuTargetEntity::SetCommsHandle(ComAPIHandle ch, int bufSize, int packSize) {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 	unsigned long chbufsize = 0; 

	mov	DWORD PTR _chbufsize$[ebp], 0

; 623  : 
; 624  : 	if (ch){

	cmp	DWORD PTR _ch$[ebp], 0
	je	SHORT $LN7@SetCommsHa

; 625  : 		chbufsize = ComAPIQuery(ch, COMAPI_ACTUAL_BUFFER_SIZE);

	push	14					; 0000000eH
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_ComAPIQuery
	add	esp, 8
	mov	DWORD PTR _chbufsize$[ebp], eax
$LN7@SetCommsHa:

; 626  : 	}
; 627  : 
; 628  : 	if (bufSize <= 0){

	cmp	DWORD PTR _bufSize$[ebp], 0
	jg	SHORT $LN6@SetCommsHa

; 629  : 		bufSize = chbufsize - MIN_HDR_SIZE;

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN10@SetCommsHa
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN11@SetCommsHa
$LN10@SetCommsHa:
	mov	DWORD PTR tv72[ebp], 8
$LN11@SetCommsHa:
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, 3
	mov	edx, DWORD PTR _chbufsize$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _bufSize$[ebp], edx
$LN6@SetCommsHa:

; 630  : 	}
; 631  : 
; 632  : 	if (bufSize > 0x7fff){

	cmp	DWORD PTR _bufSize$[ebp], 32767		; 00007fffH
	jle	SHORT $LN5@SetCommsHa

; 633  : 		bufSize = 0x7fff;   // max size w/ huffman encoding

	mov	DWORD PTR _bufSize$[ebp], 32767		; 00007fffH
$LN5@SetCommsHa:

; 634  : 	}
; 635  : 
; 636  : 	delete [] bestEffortComms_.normalSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 637  : 	delete [] bestEffortComms_.lowSendPacket_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 638  : 	delete [] bestEffortComms_.recBuffer_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 639  : 
; 640  : 	if (ch && bufSize > 0) {

	cmp	DWORD PTR _ch$[ebp], 0
	je	$LN4@SetCommsHa
	cmp	DWORD PTR _bufSize$[ebp], 0
	jle	$LN4@SetCommsHa

; 641  : 		bestEffortComms_.handle_     = ch;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	DWORD PTR [eax+124], ecx

; 642  : 		bestEffortComms_.maxMsgSize_ = bufSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [edx+136], eax

; 643  : 		if (packSize)

	cmp	DWORD PTR _packSize$[ebp], 0
	je	SHORT $LN3@SetCommsHa

; 644  : 			bestEffortComms_.maxPackSize_ = packSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _packSize$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 645  : 		else

	jmp	SHORT $LN2@SetCommsHa
$LN3@SetCommsHa:

; 646  : 			bestEffortComms_.maxPackSize_ = bufSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [eax+140], ecx
$LN2@SetCommsHa:

; 647  : 		bestEffortComms_.normalSendPacket_ = new VU_BYTE[bufSize+MIN_HDR_SIZE];

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN12@SetCommsHa
	mov	DWORD PTR tv134[ebp], 0
	jmp	SHORT $LN13@SetCommsHa
$LN12@SetCommsHa:
	mov	DWORD PTR tv134[ebp], 8
$LN13@SetCommsHa:
	mov	edx, DWORD PTR tv134[ebp]
	mov	eax, DWORD PTR _bufSize$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+144], eax

; 648  : 		bestEffortComms_.lowSendPacket_    = new VU_BYTE[bufSize+MIN_HDR_SIZE];

	mov	ecx, OFFSET ?vuKnownConnectionId@@3VVU_SESSION_ID@@A ; vuKnownConnectionId
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN14@SetCommsHa
	mov	DWORD PTR tv144[ebp], 0
	jmp	SHORT $LN15@SetCommsHa
$LN14@SetCommsHa:
	mov	DWORD PTR tv144[ebp], 8
$LN15@SetCommsHa:
	mov	ecx, DWORD PTR tv144[ebp]
	mov	edx, DWORD PTR _bufSize$[ebp]
	lea	eax, DWORD PTR [edx+ecx+3]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+168], edx

; 649  : 		bestEffortComms_.recBuffer_        = new VU_BYTE[bufSize];

	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+192], edx

; 650  : 	} 
; 651  : 	else {

	jmp	SHORT $LN1@SetCommsHa
$LN4@SetCommsHa:

; 652  : 		bestEffortComms_.handle_           = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0

; 653  : 		bestEffortComms_.maxMsgSize_       = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0

; 654  : 		bestEffortComms_.normalSendPacket_ = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], 0

; 655  : 		bestEffortComms_.lowSendPacket_    = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+168], 0

; 656  : 		bestEffortComms_.recBuffer_        = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+192], 0
$LN1@SetCommsHa:

; 657  : 	}
; 658  : 	bestEffortComms_.normalSendPacketPtr_ = bestEffortComms_.normalSendPacket_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR [edx+148], ecx

; 659  : 	bestEffortComms_.lowSendPacketPtr_    = bestEffortComms_.lowSendPacket_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR [edx+172], ecx

; 660  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetCommsHandle@VuTargetEntity@@QAEXPAUcomapihandle@@HH@Z ENDP ; VuTargetEntity::SetCommsHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ PROC ; VuTargetEntity::GetCommsHandle, COMDAT
; _this$ = ecx

; 109  : 	ComAPIHandle GetCommsHandle() { return bestEffortComms_.handle_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ENDP ; VuTargetEntity::GetCommsHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ PROC ; VuTargetEntity::GetCommsStatus, COMDAT
; _this$ = ecx

; 108  : 	VuCommsConnectStatus GetCommsStatus() { return bestEffortComms_.status_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ENDP ; VuTargetEntity::GetCommsStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDirty@VuTargetEntity@@QAEHXZ PROC			; VuTargetEntity::IsDirty
; _this$ = ecx

; 811  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 812  : 	return dirty;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+324]

; 813  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsDirty@VuTargetEntity@@QAEHXZ ENDP			; VuTargetEntity::IsDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearDirty@VuTargetEntity@@QAEXXZ PROC			; VuTargetEntity::ClearDirty
; _this$ = ecx

; 802  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 803  : 	dirty = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 804  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDirty@VuTargetEntity@@QAEXXZ ENDP			; VuTargetEntity::ClearDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetDirty@VuTargetEntity@@QAEXXZ PROC			; VuTargetEntity::SetDirty
; _this$ = ecx

; 792  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 793  : 	//	MonoPrint ("Set Dirty\n");
; 794  : 	dirty = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 1

; 795  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetDirty@VuTargetEntity@@QAEXXZ ENDP			; VuTargetEntity::SetDirty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
_msg$3 = -32						; size = 4
tv129 = -28						; size = 4
$T4 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SendQueuedMessage@VuTargetEntity@@QAEHXZ PROC		; VuTargetEntity::SendQueuedMessage
; _this$ = ecx

; 704  : int VuTargetEntity::SendQueuedMessage (void){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendQueuedMessage@VuTargetEntity@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 705  : 	int	size;
; 706  : 
; 707  : 	if ((reliableComms_.handle_) && (reliableComms_.status_ == VU_CONN_ACTIVE)){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+224], 0
	je	$LN4@SendQueued
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+228], 2
	jne	$LN4@SendQueued

; 708  : 		size = ComAPISend(reliableComms_.handle_, 0, CAPI_COMMON_BWTYPE);

	push	3
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	push	eax
	call	_ComAPISend
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _size$[ebp], eax

; 709  : 		if (size == -2) {

	cmp	DWORD PTR _size$[ebp], -2		; fffffffeH
	jne	SHORT $LN3@SendQueued

; 710  : 			// Still not synced up yet - send a full update
; 711  : 			VuFullUpdateEvent *msg = new VuFullUpdateEvent(vuLocalSessionEntity.get(), vuGlobalGroup);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@SendQueued
	push	0
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN8@SendQueued
$LN7@SendQueued:
	mov	DWORD PTR tv129[ebp], 0
$LN8@SendQueued:
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _msg$3[ebp], eax

; 712  : 			msg->RequestOutOfBandTransmit();

	mov	ecx, DWORD PTR _msg$3[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 713  : 			VuMessageQueue::PostVuMessage(msg);

	mov	ecx, DWORD PTR _msg$3[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
	jmp	SHORT $LN4@SendQueued
$LN3@SendQueued:

; 714  : 		}
; 715  : 		else if (size > 0){

	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN4@SendQueued

; 716  : 			return size;

	mov	eax, DWORD PTR _size$[ebp]
	jmp	SHORT $LN5@SendQueued
$LN4@SendQueued:

; 717  : 		}
; 718  : 	}
; 719  : 
; 720  : 	return 0;

	xor	eax, eax
$LN5@SendQueued:

; 721  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendQueuedMessage@VuTargetEntity@@QAEHXZ$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SendQueuedMessage@VuTargetEntity@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendQueuedMessage@VuTargetEntity@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendQueuedMessage@VuTargetEntity@@QAEHXZ ENDP		; VuTargetEntity::SendQueuedMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
$T1 = -60						; size = 8
$T2 = -52						; size = 8
$T3 = -44						; size = 8
$T4 = -36						; size = 8
$T5 = -28						; size = 8
tv149 = -20						; size = 4
_count$ = -16						; size = 4
_ping$ = -12						; size = 4
_session$6 = -8						; size = 4
_this$ = -4						; size = 4
?GetMessages@VuTargetEntity@@QAEHXZ PROC		; VuTargetEntity::GetMessages
; _this$ = ecx

; 727  : int VuTargetEntity::GetMessages() {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 728  : 	int count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 729  : 	int ping = 0;

	mov	DWORD PTR _ping$[ebp], 0

; 730  : 
; 731  : 	// get reliable messages
; 732  : 	if (reliableComms_.handle_ && reliableComms_.status_ == VU_CONN_ACTIVE){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+224], 0
	je	$LN13@GetMessage
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+228], 2
	jne	$LN13@GetMessage

; 733  : 		count += MessagePoll(&reliableComms_);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 224				; 000000e0H
	push	edx
	call	?MessagePoll@@YAHPAUVuCommsContext@@@Z	; MessagePoll
	add	esp, 4
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _count$[ebp], eax

; 734  : 		ping = ComAPIQuery (reliableComms_.handle_, COMAPI_PING_TIME);

	push	23					; 00000017H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	call	_ComAPIQuery
	add	esp, 8
	mov	DWORD PTR _ping$[ebp], eax

; 735  : 
; 736  : 		if (ping == -1) {

	cmp	DWORD PTR _ping$[ebp], -1
	jne	SHORT $LN12@GetMessage

; 737  : 			reliableComms_.status_ = VU_CONN_ERROR;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+228], 3

; 738  : 			bestEffortComms_.status_ = VU_CONN_ERROR;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 3

; 739  : 			return -1;

	or	eax, -1
	jmp	$LN14@GetMessage
	jmp	$LN13@GetMessage
$LN12@GetMessage:

; 740  : 		}
; 741  : 		else if (ping == -2) {

	cmp	DWORD PTR _ping$[ebp], -2		; fffffffeH
	jne	SHORT $LN10@GetMessage

; 742  : 			reliableComms_.status_ = VU_CONN_ERROR;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+228], 3

; 743  : 			bestEffortComms_.status_ = VU_CONN_ERROR;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 3

; 744  : 			return -2;

	mov	eax, -2					; fffffffeH
	jmp	$LN14@GetMessage
	jmp	$LN13@GetMessage
$LN10@GetMessage:

; 745  : 		}
; 746  : 		else if (ping > reliableComms_.ping){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ping$[ebp]
	cmp	ecx, DWORD PTR [eax+320]
	jle	$LN8@GetMessage

; 747  : 			//if we are a host checking a client set that clients bw
; 748  : 			VuSessionEntity* session = (VuSessionEntity*)vuDatabase->Find(this->OwnerId());

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$6[ebp], eax

; 749  : 			if (vuLocalGame->OwnerId() != vuLocalSessionEntity->Id() || session == vuLocalSessionEntity){

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@GetMessage
	mov	DWORD PTR tv149[ebp], 0
	jmp	SHORT $LN17@GetMessage
$LN16@GetMessage:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv149[ebp], eax
$LN17@GetMessage:
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR tv149[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@GetMessage
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	ecx, DWORD PTR _session$6[ebp]
	push	ecx
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@GetMessage
$LN6@GetMessage:

; 750  : 				session = NULL;//we are not host or its us self

	mov	DWORD PTR _session$6[ebp], 0
$LN7@GetMessage:

; 751  : 			}
; 752  : 
; 753  : 			if (
; 754  : 				session && 
; 755  : 				((FalconSessionEntity*)vuDatabase->Find(this->Id()))->GetFlyState () !=  FLYSTATE_FLYING
; 756  : 			){

	cmp	DWORD PTR _session$6[ebp], 0
	je	SHORT $LN5@GetMessage
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	ecx, eax
	call	?GetFlyState@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetFlyState
	movzx	eax, al
	cmp	eax, 3
	je	SHORT $LN5@GetMessage

; 757  : 				session = NULL;//session is not in cockpit

	mov	DWORD PTR _session$6[ebp], 0
$LN5@GetMessage:

; 758  : 			}
; 759  : 
; 760  : 			if (session && 
; 761  : 				((FalconSessionEntity*)vuDatabase->Find(vuLocalSessionEntity->Game()->OwnerId()))->GetFlyState() !=  FLYSTATE_FLYING
; 762  : 			){

	cmp	DWORD PTR _session$6[ebp], 0
	je	SHORT $LN4@GetMessage
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	ecx, eax
	call	?GetFlyState@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetFlyState
	movzx	ecx, al
	cmp	ecx, 3
	je	SHORT $LN4@GetMessage

; 763  : 				session = NULL;//host is not in cockpit

	mov	DWORD PTR _session$6[ebp], 0
$LN4@GetMessage:

; 764  : 			}
; 765  : 
; 766  : 			if (
; 767  : 				(static_cast<VU_TIME>(ping) > EntityType()->updateTolerance_)				
; 768  : 			){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, DWORD PTR _ping$[ebp]
	cmp	edx, DWORD PTR [eax+20]
	jbe	SHORT $LN3@GetMessage

; 769  : 				reliableComms_.status_ = VU_CONN_ERROR;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+228], 3

; 770  : 				bestEffortComms_.status_ = VU_CONN_ERROR;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], 3

; 771  : 				return -1;

	or	eax, -1
	jmp	SHORT $LN14@GetMessage
$LN3@GetMessage:

; 772  : 			}
; 773  : 		}
; 774  : 		else {

	jmp	SHORT $LN13@GetMessage
$LN8@GetMessage:

; 775  : 			reliableComms_.ping = ping;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _ping$[ebp]
	mov	DWORD PTR [edx+320], eax
$LN13@GetMessage:

; 776  : 		}
; 777  : 	}
; 778  : 
; 779  : 	// get unreliable ones
; 780  : 	if (bestEffortComms_.handle_ && bestEffortComms_.status_ == VU_CONN_ACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	je	SHORT $LN1@GetMessage
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+128], 2
	jne	SHORT $LN1@GetMessage

; 781  : 		count += MessagePoll(&bestEffortComms_);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	?MessagePoll@@YAHPAUVuCommsContext@@@Z	; MessagePoll
	add	esp, 4
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _count$[ebp], eax
$LN1@GetMessage:

; 782  : 	}
; 783  : 
; 784  : 	return count;

	mov	eax, DWORD PTR _count$[ebp]
$LN14@GetMessage:

; 785  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessages@VuTargetEntity@@QAEHXZ ENDP		; VuTargetEntity::GetMessages
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_forward$1 = -16					; size = 4
_retval$ = -12						; size = 4
_ctxt$ = -8						; size = 4
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z PROC	; VuTargetEntity::SendMessageA
; _this$ = ecx

; 1060 : int VuTargetEntity::SendMessage(VuMessage* msg){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1061 : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 1062 : 
; 1063 : 	// find the comms handle to send message
; 1064 : 	VuCommsContext* ctxt = 0;

	mov	DWORD PTR _ctxt$[ebp], 0

; 1065 : 	if (msg->Flags() & VU_RELIABLE_MSG_FLAG) {

	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Flags@VuMessage@@QBEEXZ		; VuMessage::Flags
	movzx	eax, al
	and	eax, 8
	je	SHORT $LN12@SendMessag

; 1066 : 		if (GetReliableCommsHandle()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	test	eax, eax
	je	SHORT $LN11@SendMessag

; 1067 : 			ctxt = &reliableComms_;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	mov	DWORD PTR _ctxt$[ebp], ecx
$LN11@SendMessag:

; 1068 : 		}
; 1069 : 	} 
; 1070 : 	else {

	jmp	SHORT $LN10@SendMessag
$LN12@SendMessag:

; 1071 : 		if (GetCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	test	eax, eax
	je	SHORT $LN10@SendMessag

; 1072 : 			ctxt = &bestEffortComms_;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 124				; 0000007cH
	mov	DWORD PTR _ctxt$[ebp], edx
$LN10@SendMessag:

; 1073 : 		}
; 1074 : 	}
; 1075 : 	// target has no handle, try to find a forwaring 
; 1076 : 	if (!ctxt) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN8@SendMessag

; 1077 : 		VuTargetEntity *forward = ForwardingTarget(msg);

	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	mov	DWORD PTR _forward$1[ebp], eax

; 1078 : 		if (forward && forward != this) {

	cmp	DWORD PTR _forward$1[ebp], 0
	je	SHORT $LN7@SendMessag
	mov	ecx, DWORD PTR _forward$1[ebp]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN7@SendMessag

; 1079 : 			return forward->SendMessage(msg);

	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _forward$1[ebp]
	call	?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z ; VuTargetEntity::SendMessageA
	jmp	$LN13@SendMessag
$LN7@SendMessag:

; 1080 : 		}
; 1081 : 		// cannot send 
; 1082 : 		return 0;

	xor	eax, eax
	jmp	$LN13@SendMessag
$LN8@SendMessag:

; 1083 : 	}
; 1084 : 
; 1085 : 	// set the message id...
; 1086 : 	// note: this counts events which are overwritten by Read()
; 1087 : 	// note2: don't reassign id's for resubmitted messages (delay)
; 1088 : 	// note3: 5/27/98 -- probably not needed anymore
; 1089 : 	if (msg->Flags() & VU_OUT_OF_BAND_MSG_FLAG) {

	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Flags@VuMessage@@QBEEXZ		; VuMessage::Flags
	movzx	eax, al
	and	eax, 2
	je	SHORT $LN6@SendMessag

; 1090 : 		retval = SendOutOfBand(ctxt, msg);

	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendOutOfBand@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendOutOfBand
	mov	DWORD PTR _retval$[ebp], eax
	jmp	SHORT $LN5@SendMessag
$LN6@SendMessag:

; 1091 : 	} 
; 1092 : 	else if (msg->Flags() & VU_NORMAL_PRIORITY_MSG_FLAG) {

	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Flags@VuMessage@@QBEEXZ		; VuMessage::Flags
	movzx	eax, al
	and	eax, 1
	je	SHORT $LN4@SendMessag

; 1093 : 		retval = SendNormalPriority(ctxt, msg);

	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNormalPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendNormalPriority
	mov	DWORD PTR _retval$[ebp], eax

; 1094 : 	} 
; 1095 : 	else {

	jmp	SHORT $LN5@SendMessag
$LN4@SendMessag:

; 1096 : 		retval = SendLowPriority(ctxt, msg);

	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendLowPriority@VuTargetEntity@@IAEHPAUVuCommsContext@@PAVVuMessage@@@Z ; VuTargetEntity::SendLowPriority
	mov	DWORD PTR _retval$[ebp], eax
$LN5@SendMessag:

; 1097 : 	}
; 1098 : 
; 1099 : 	if (
; 1100 : 		(msg->Flags() & VU_RELIABLE_MSG_FLAG) && 
; 1101 : 		(retval == COMAPI_WOULDBLOCK || retval == COMAPI_CONNECTION_PENDING)
; 1102 : 	){

	mov	ecx, DWORD PTR _msg$[ebp]
	call	?Flags@VuMessage@@QBEEXZ		; VuMessage::Flags
	movzx	edx, al
	and	edx, 8
	je	SHORT $LN2@SendMessag
	cmp	DWORD PTR _retval$[ebp], -8		; fffffff8H
	je	SHORT $LN1@SendMessag
	cmp	DWORD PTR _retval$[ebp], -7		; fffffff9H
	jne	SHORT $LN2@SendMessag
$LN1@SendMessag:

; 1103 : 		// recoverable error
; 1104 : 		VuMessageQueue::RepostMessage(msg, 500);	// 500 ms delay

	push	500					; 000001f4H
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	?RepostMessage@VuMessageQueue@@SAXPAVVuMessage@@H@Z ; VuMessageQueue::RepostMessage
	add	esp, 8

; 1105 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN13@SendMessag
$LN2@SendMessag:

; 1106 : 	}
; 1107 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN13@SendMessag:

; 1108 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z ENDP	; VuTargetEntity::SendMessageA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_retval2$1 = -12					; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?FlushOutboundMessageBuffer@VuTargetEntity@@QAEHXZ PROC	; VuTargetEntity::FlushOutboundMessageBuffer
; _this$ = ecx

; 896  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 897  : 	VuEnterCriticalSection();

	call	?VuEnterCriticalSection@@YAXXZ		; VuEnterCriticalSection

; 898  : 
; 899  : 	int retval = -1;

	mov	DWORD PTR _retval$[ebp], -1

; 900  : 
; 901  : 	if (GetReliableCommsStatus() == VU_CONN_ACTIVE && GetReliableCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetReliableCommsStatus
	cmp	eax, 2
	jne	SHORT $LN3@FlushOutbo
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReliableCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetReliableCommsHandle
	test	eax, eax
	je	SHORT $LN3@FlushOutbo

; 902  : 		retval = Flush(&reliableComms_);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 224				; 000000e0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::Flush
	mov	DWORD PTR _retval$[ebp], eax
$LN3@FlushOutbo:

; 903  : 	}
; 904  : 
; 905  : 	if (GetCommsStatus() == VU_CONN_ACTIVE && GetCommsHandle()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsStatus@VuTargetEntity@@QAE?AW4VuCommsConnectStatus@@XZ ; VuTargetEntity::GetCommsStatus
	cmp	eax, 2
	jne	SHORT $LN2@FlushOutbo
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	test	eax, eax
	je	SHORT $LN2@FlushOutbo

; 906  : 		int retval2 = Flush(&bestEffortComms_);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@VuTargetEntity@@IAEHPAUVuCommsContext@@@Z ; VuTargetEntity::Flush
	mov	DWORD PTR _retval2$1[ebp], eax

; 907  : 		if (retval2 > 0) {

	cmp	DWORD PTR _retval2$1[ebp], 0
	jle	SHORT $LN2@FlushOutbo

; 908  : 			retval += retval2;

	mov	edx, DWORD PTR _retval$[ebp]
	add	edx, DWORD PTR _retval2$1[ebp]
	mov	DWORD PTR _retval$[ebp], edx
$LN2@FlushOutbo:

; 909  : 		}
; 910  : 	}
; 911  : 
; 912  : 	//if (retval > 0) {
; 913  : 	//	VuMainThread::ReportXmit(retval);
; 914  : 	//}
; 915  : 
; 916  : 	VuExitCriticalSection();

	call	?VuExitCriticalSection@@YAXXZ		; VuExitCriticalSection

; 917  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 918  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FlushOutboundMessageBuffer@VuTargetEntity@@QAEHXZ ENDP	; VuTargetEntity::FlushOutboundMessageBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z PROC ; VuTargetEntity::ForwardingTarget
; _this$ = ecx

; 816  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 817  : 	return vuGlobalGroup;

	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup

; 818  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ForwardingTarget@VuTargetEntity@@UAEPAV1@PAVVuMessage@@@Z ENDP ; VuTargetEntity::ForwardingTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTarget@VuTargetEntity@@UAEEXZ PROC			; VuTargetEntity::IsTarget
; _this$ = ecx

; 541  : VU_BOOL VuTargetEntity::IsTarget() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 542  : 	return TRUE;

	mov	al, 1

; 543  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsTarget@VuTargetEntity@@UAEEXZ ENDP			; VuTargetEntity::IsTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_retval$ = -4						; size = 4
_file$ = 8						; size = 4
?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z PROC		; VuTargetEntity::Save
; _this$ = ecx

; 529  : int VuTargetEntity::Save(FILE* file) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 531  : 
; 532  : 	if (file) {

	cmp	DWORD PTR _file$[ebp], 0
	je	SHORT $LN1@Save

; 533  : 		retval += fwrite(&share_.entityType_,  sizeof(share_.entityType_),  1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 534  : 		retval += fwrite(&share_.flags_,       sizeof(share_.flags_),       1, file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 535  : 		retval += fwrite(&share_.id_.creator_, sizeof(share_.id_.creator_), 1, file);

	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	1
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 536  : 		retval += fwrite(&share_.id_.num_,     sizeof(share_.id_.num_),     1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
$LN1@Save:

; 537  : 	}
; 538  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 539  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuTargetEntity@@UAEHPAU_iobuf@@@Z ENDP		; VuTargetEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?Save@VuTargetEntity@@UAEHPAPAE@Z PROC			; VuTargetEntity::Save
; _this$ = ecx

; 520  : int VuTargetEntity::Save(VU_BYTE** stream) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 	memcpy(*stream, &share_.entityType_,  sizeof(share_.entityType_));  *stream += sizeof(share_.entityType_);

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 522  : 	memcpy(*stream, &share_.flags_,       sizeof(share_.flags_));       *stream += sizeof(share_.flags_);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 523  : 	memcpy(*stream, &share_.id_.creator_, sizeof(share_.id_.creator_)); *stream += sizeof(share_.id_.creator_);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 524  : 	memcpy(*stream, &share_.id_.num_,     sizeof(share_.id_.num_));     *stream += sizeof(share_.id_.num_);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], ecx

; 525  : 
; 526  : 	return VuTargetEntity::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuTargetEntity@@AAEHXZ	; VuTargetEntity::LocalSize

; 527  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@VuTargetEntity@@UAEHPAPAE@Z ENDP			; VuTargetEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveSize@VuTargetEntity@@UAEHXZ PROC			; VuTargetEntity::SaveSize
; _this$ = ecx

; 516  : int VuTargetEntity::SaveSize(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 517  : 	return LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuTargetEntity@@AAEHXZ	; VuTargetEntity::LocalSize

; 518  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@VuTargetEntity@@UAEHXZ ENDP			; VuTargetEntity::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_sq$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuTargetEntity@@UAE@XZ PROC				; VuTargetEntity::~VuTargetEntity
; _this$ = ecx

; 496  : VuTargetEntity::~VuTargetEntity(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuTargetEntity@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTargetEntity@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 497  : 	VuPendingSendQueue *sq = vuMainThread->SendQueue();

	mov	ecx, DWORD PTR ?vuMainThread@@3PAVVuMainThread@@A ; vuMainThread
	call	?SendQueue@VuMainThread@@QBEPAVVuPendingSendQueue@@XZ ; VuMainThread::SendQueue
	mov	DWORD PTR _sq$[ebp], eax

; 498  : 	if (sq){

	cmp	DWORD PTR _sq$[ebp], 0
	je	SHORT $LN1@VuTargetEn

; 499  : 		sq->RemoveTarget(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sq$[ebp]
	call	?RemoveTarget@VuPendingSendQueue@@QAEXPAVVuTargetEntity@@@Z ; VuPendingSendQueue::RemoveTarget
$LN1@VuTargetEn:

; 500  : 	}
; 501  : 
; 502  : 	//if (vuLowSendQueue){
; 503  : 	//	vuLowSendQueue->RemoveTarget(this);
; 504  : 	//}
; 505  : 	CloseComms();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseComms@VuTargetEntity@@IAEXXZ	; VuTargetEntity::CloseComms

; 506  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEntity@@MAE@XZ			; VuEntity::~VuEntity
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuTargetEntity@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEntity@@MAE@XZ			; VuEntity::~VuEntity
__ehhandler$??1VuTargetEntity@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuTargetEntity@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuTargetEntity@@UAE@XZ ENDP				; VuTargetEntity::~VuTargetEntity
; Function compile flags: /Odtp
;	COMDAT ??0VuCommsContext@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuCommsContext@@QAE@XZ PROC				; VuCommsContext::VuCommsContext, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuCommsContext@@QAE@XZ ENDP				; VuCommsContext::VuCommsContext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ PROC	; VuCreateEvent::EventData, COMDAT
; _this$ = ecx

; 371  : 	VuEntity *EventData() { return expandedData_.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?EventData@VuCreateEvent@@QAEPAVVuEntity@@XZ ENDP	; VuCreateEvent::EventData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$VuBin@VVuEntity@@@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$VuBin@VVuEntity@@@@QAEPAXI@Z PROC			; VuBin<VuEntity>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$VuBin@VVuEntity@@@@QAEPAXI@Z ENDP			; VuBin<VuEntity>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z PROC	; VuBin<VuEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC	; VuBin<VuEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP	; VuBin<VuEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC		; VuBin<VuEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP		; VuBin<VuEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??4?$VuBin@VVuEntity@@@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??4?$VuBin@VVuEntity@@@@QAEABV0@ABV0@@Z PROC		; VuBin<VuEntity>::operator=, COMDAT
; _this$ = ecx

; 24   : 	const VuBin &operator=(const VuBin &rhs){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 25   : 		reset(rhs.e);

	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ; VuBin<VuEntity>::reset

; 26   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 27   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$VuBin@VVuEntity@@@@QAEABV0@ABV0@@Z ENDP		; VuBin<VuEntity>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuEntity@@@@QAE@XZ PROC			; VuBin<VuEntity>::~VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuEntity@@@@QAE@XZ ENDP			; VuBin<VuEntity>::~VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z PROC		; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 15   : 	VuBin(const VuBin &rhs) : e(rhs.e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 16   : 		VuReferenceEntity(e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 17   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z ENDP		; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z PROC	; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestOutOfBandTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestOutOfBandTransmit@VuMessage@@QAEXXZ PROC	; VuMessage::RequestOutOfBandTransmit, COMDAT
; _this$ = ecx

; 181  : 	void RequestOutOfBandTransmit() { flags_ |= VU_OUT_OF_BAND_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ENDP	; VuMessage::RequestOutOfBandTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestReliableTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestReliableTransmit@VuMessage@@QAEXXZ PROC		; VuMessage::RequestReliableTransmit, COMDAT
; _this$ = ecx

; 180  : 	void RequestReliableTransmit() { flags_ |= VU_RELIABLE_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestReliableTransmit@VuMessage@@QAEXXZ ENDP		; VuMessage::RequestReliableTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?SetPostTime@VuMessage@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_posttime$ = 8						; size = 4
?SetPostTime@VuMessage@@QAEXK@Z PROC			; VuMessage::SetPostTime, COMDAT
; _this$ = ecx

; 163  : 	void SetPostTime(VU_TIME posttime) { postTime_ = posttime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _posttime$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPostTime@VuMessage@@QAEXK@Z ENDP			; VuMessage::SetPostTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Flags@VuMessage@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flags@VuMessage@@QBEEXZ PROC				; VuMessage::Flags, COMDAT
; _this$ = ecx

; 158  : 	VU_BYTE Flags() const { return flags_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+6]
	mov	esp, ebp
	pop	ebp
	ret	0
?Flags@VuMessage@@QBEEXZ ENDP				; VuMessage::Flags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Destination@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Destination@VuMessage@@QBE?AVVU_ID@@XZ PROC		; VuMessage::Destination, COMDAT
; _this$ = ecx

; 155  : 	VU_ID Destination() const { return tgtid_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Destination@VuMessage@@QBE?AVVU_ID@@XZ ENDP		; VuMessage::Destination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Sender@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Sender@VuMessage@@QBE?AVVU_ID@@XZ PROC			; VuMessage::Sender, COMDAT
; _this$ = ecx

; 154  : 	VU_ID Sender() const { return sender_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Sender@VuMessage@@QBE?AVVU_ID@@XZ ENDP			; VuMessage::Sender
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Type@VuMessage@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuMessage@@QBEEXZ PROC				; VuMessage::Type, COMDAT
; _this$ = ecx

; 153  : 	VU_MSG_TYPE Type() const { return type_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+5]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuMessage@@QBEEXZ ENDP				; VuMessage::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vusessn.cpp
_TEXT	SEGMENT
_rem$2 = -224						; size = 4
$T3 = -220						; size = 4
$T4 = -216						; size = 4
$T5 = -212						; size = 4
$T6 = -208						; size = 4
$T7 = -204						; size = 4
$T8 = -200						; size = 4
$T9 = -196						; size = 4
$T10 = -192						; size = 4
$T11 = -188						; size = 4
$T12 = -184						; size = 4
$T13 = -180						; size = 4
$T14 = -176						; size = 4
$T15 = -172						; size = 4
$T16 = -168						; size = 4
$T17 = -164						; size = 4
$T18 = -160						; size = 4
$T19 = -156						; size = 4
tv71 = -152						; size = 4
$T20 = -148						; size = 4
tv243 = -144						; size = 4
$T21 = -140						; size = 4
tv257 = -136						; size = 4
$T22 = -132						; size = 4
tv229 = -128						; size = 4
$T23 = -124						; size = 4
$T24 = -120						; size = 4
$T25 = -116						; size = 4
$T26 = -112						; size = 4
$T27 = -108						; size = 4
$T28 = -104						; size = 4
$T29 = -100						; size = 4
$T30 = -96						; size = 4
tv216 = -92						; size = 4
tv373 = -88						; size = 4
tv203 = -84						; size = 4
tv354 = -80						; size = 4
tv190 = -76						; size = 4
$T31 = -72						; size = 4
tv176 = -68						; size = 4
tv341 = -64						; size = 4
tv163 = -60						; size = 4
$T32 = -56						; size = 4
tv150 = -52						; size = 4
tv328 = -48						; size = 4
tv137 = -44						; size = 4
$T33 = -40						; size = 4
tv92 = -36						; size = 4
tv283 = -32						; size = 4
tv79 = -28						; size = 4
$T34 = -24						; size = 4
tv270 = -20						; size = 4
_event$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_targetId$ = 8						; size = 8
_senderAddress$ = 16					; size = 8
_senderid$ = 24						; size = 8
_type$ = 32						; size = 1
_data$ = 36						; size = 4
_size$ = 40						; size = 4
_timestamp$ = 44					; size = 4
?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z PROC ; MessageReceive

; 144  : ){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 145  : 	VuMessage* event = 0;

	mov	DWORD PTR _event$[ebp], 0

; 146  : 
; 147  : #ifdef DEBUG_COMMS
; 148  : 	VU_PRINT("VU: Receive [%d]", type);
; 149  : #endif
; 150  : 
; 151  : 	if (vuLocalSessionEntity->InTarget(targetId)) {

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	DWORD PTR tv71[ebp], eax
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	$LN23@MessageRec

; 152  : 		switch (type) {

	movzx	ecx, BYTE PTR _type$[ebp]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 21			; 00000015H
	ja	$LN21@MessageRec
	mov	edx, DWORD PTR tv79[ebp]
	jmp	DWORD PTR $LN77@MessageRec[edx*4]
$LN20@MessageRec:

; 153  : 			case VU_GET_REQUEST_MESSAGE:
; 154  : 				event = new VuGetRequest(senderid, targetId);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN26@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T30[ebp]
	call	??0VuGetRequest@@QAE@VVU_ID@@0@Z	; VuGetRequest::VuGetRequest
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN27@MessageRec
$LN26@MessageRec:
	mov	DWORD PTR tv92[ebp], 0
$LN27@MessageRec:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T18[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T18[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 155  : 			break;

	jmp	$LN21@MessageRec
$LN19@MessageRec:

; 156  : 			case VU_PUSH_REQUEST_MESSAGE:
; 157  : 				event = new VuPushRequest(senderid, targetId);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T29[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN28@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T29[ebp]
	call	??0VuPushRequest@@QAE@VVU_ID@@0@Z	; VuPushRequest::VuPushRequest
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN29@MessageRec
$LN28@MessageRec:
	mov	DWORD PTR tv137[ebp], 0
$LN29@MessageRec:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 158  : 			break;

	jmp	$LN21@MessageRec
$LN18@MessageRec:

; 159  : 			case VU_PULL_REQUEST_MESSAGE:
; 160  : 				event = new VuPullRequest(senderid, targetId);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T27[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T27[ebp], 0
	je	SHORT $LN30@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T27[ebp]
	call	??0VuPullRequest@@QAE@VVU_ID@@0@Z	; VuPullRequest::VuPullRequest
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN31@MessageRec
$LN30@MessageRec:
	mov	DWORD PTR tv150[ebp], 0
$LN31@MessageRec:
	mov	ecx, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T15[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T15[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 161  : 			break;

	jmp	$LN21@MessageRec
$LN17@MessageRec:

; 162  : 			case VU_DELETE_EVENT:
; 163  : 				event = new VuDeleteEvent(senderid, targetId);

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN32@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T25[ebp]
	call	??0VuDeleteEvent@@QAE@VVU_ID@@0@Z	; VuDeleteEvent::VuDeleteEvent
	mov	DWORD PTR tv163[ebp], eax
	jmp	SHORT $LN33@MessageRec
$LN32@MessageRec:
	mov	DWORD PTR tv163[ebp], 0
$LN33@MessageRec:
	mov	ecx, DWORD PTR tv163[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 164  : 			break;

	jmp	$LN21@MessageRec
$LN16@MessageRec:

; 165  : #if 0
; 166  : 			case VU_UNMANAGE_EVENT:
; 167  : 				event = new VuUnmanageEvent(senderid, targetId);
; 168  : 			break;
; 169  : #endif
; 170  : 			case VU_MANAGE_EVENT:
; 171  : 				event = new VuManageEvent(senderid, targetId);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T23[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN34@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T23[ebp]
	call	??0VuManageEvent@@QAE@VVU_ID@@0@Z	; VuManageEvent::VuManageEvent
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN35@MessageRec
$LN34@MessageRec:
	mov	DWORD PTR tv176[ebp], 0
$LN35@MessageRec:
	mov	ecx, DWORD PTR tv176[ebp]
	mov	DWORD PTR $T13[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T13[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 172  : 			break;

	jmp	$LN21@MessageRec
$LN15@MessageRec:

; 173  : 			case VU_CREATE_EVENT:
; 174  : 				event = new VuCreateEvent(senderAddress, senderid, targetId);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN36@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderAddress$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderAddress$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T22[ebp]
	call	??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuCreateEvent::VuCreateEvent
	mov	DWORD PTR tv190[ebp], eax
	jmp	SHORT $LN37@MessageRec
$LN36@MessageRec:
	mov	DWORD PTR tv190[ebp], 0
$LN37@MessageRec:
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 175  : 			break;

	jmp	$LN21@MessageRec
$LN14@MessageRec:

; 176  : 			case VU_SESSION_EVENT:
; 177  : 				event = new VuSessionEvent(senderid, targetId);

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN38@MessageRec
	mov	edx, DWORD PTR _targetId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _targetId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0VuSessionEvent@@QAE@VVU_ID@@0@Z	; VuSessionEvent::VuSessionEvent
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN39@MessageRec
$LN38@MessageRec:
	mov	DWORD PTR tv203[ebp], 0
$LN39@MessageRec:
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T11[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 178  : 			break;

	jmp	$LN21@MessageRec
$LN13@MessageRec:

; 179  : 			case VU_TRANSFER_EVENT:
; 180  : 				event = new VuTransferEvent(senderid, targetId);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN40@MessageRec
	mov	edx, DWORD PTR _targetId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _targetId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0VuTransferEvent@@QAE@VVU_ID@@0@Z	; VuTransferEvent::VuTransferEvent
	mov	DWORD PTR tv216[ebp], eax
	jmp	SHORT $LN41@MessageRec
$LN40@MessageRec:
	mov	DWORD PTR tv216[ebp], 0
$LN41@MessageRec:
	mov	eax, DWORD PTR tv216[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 181  : 			break;

	jmp	$LN21@MessageRec
$LN12@MessageRec:

; 182  : 			case VU_POSITION_UPDATE_EVENT:
; 183  : 				event = new VuPositionUpdateEvent(senderid, targetId);

	push	93					; 0000005dH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN42@MessageRec
	mov	edx, DWORD PTR _targetId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _targetId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0VuPositionUpdateEvent@@QAE@VVU_ID@@0@Z ; VuPositionUpdateEvent::VuPositionUpdateEvent
	mov	DWORD PTR tv229[ebp], eax
	jmp	SHORT $LN43@MessageRec
$LN42@MessageRec:
	mov	DWORD PTR tv229[ebp], 0
$LN43@MessageRec:
	mov	eax, DWORD PTR tv229[ebp]
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T17[ebp]
	mov	DWORD PTR _event$[ebp], ecx

; 184  : 			break;

	jmp	$LN21@MessageRec
$LN11@MessageRec:

; 185  : 			case VU_BROADCAST_GLOBAL_EVENT:
; 186  : 				event = new VuBroadcastGlobalEvent(senderAddress, senderid, targetId);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T28[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN44@MessageRec
	mov	edx, DWORD PTR _targetId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _targetId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp]
	push	edx
	mov	eax, DWORD PTR _senderAddress$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _senderAddress$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T28[ebp]
	call	??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
	mov	DWORD PTR tv243[ebp], eax
	jmp	SHORT $LN45@MessageRec
$LN44@MessageRec:
	mov	DWORD PTR tv243[ebp], 0
$LN45@MessageRec:
	mov	edx, DWORD PTR tv243[ebp]
	mov	DWORD PTR $T16[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T16[ebp]
	mov	DWORD PTR _event$[ebp], eax

; 187  : 			break;

	jmp	$LN21@MessageRec
$LN10@MessageRec:

; 188  : 			case VU_FULL_UPDATE_EVENT:
; 189  : 				event = new VuFullUpdateEvent(senderAddress, senderid, targetId);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T26[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN46@MessageRec
	mov	ecx, DWORD PTR _targetId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _targetId$[ebp]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _senderid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderAddress$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderAddress$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T26[ebp]
	call	??0VuFullUpdateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv257[ebp], eax
	jmp	SHORT $LN47@MessageRec
$LN46@MessageRec:
	mov	DWORD PTR tv257[ebp], 0
$LN47@MessageRec:
	mov	ecx, DWORD PTR tv257[ebp]
	mov	DWORD PTR $T14[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T14[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 190  : 			break;

	jmp	$LN21@MessageRec
$LN9@MessageRec:

; 191  : 			case VU_ENTITY_COLLISION_EVENT:
; 192  : 				event = new VuEntityCollisionEvent(senderid, targetId);

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN48@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T24[ebp]
	call	??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z ; VuEntityCollisionEvent::VuEntityCollisionEvent
	mov	DWORD PTR tv270[ebp], eax
	jmp	SHORT $LN49@MessageRec
$LN48@MessageRec:
	mov	DWORD PTR tv270[ebp], 0
$LN49@MessageRec:
	mov	ecx, DWORD PTR tv270[ebp]
	mov	DWORD PTR $T12[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T12[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 193  : 			break;

	jmp	$LN21@MessageRec
$LN8@MessageRec:

; 194  : 			case VU_GROUND_COLLISION_EVENT:
; 195  : 				event = new VuGroundCollisionEvent(senderid, targetId);

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T34[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN50@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T34[ebp]
	call	??0VuGroundCollisionEvent@@QAE@VVU_ID@@0@Z ; VuGroundCollisionEvent::VuGroundCollisionEvent
	mov	DWORD PTR tv283[ebp], eax
	jmp	SHORT $LN51@MessageRec
$LN50@MessageRec:
	mov	DWORD PTR tv283[ebp], 0
$LN51@MessageRec:
	mov	ecx, DWORD PTR tv283[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 196  : 			break;

	jmp	$LN21@MessageRec
$LN7@MessageRec:

; 197  : 			case VU_RESERVED_UPDATE_EVENT:
; 198  : 			case VU_UNKNOWN_MESSAGE:
; 199  : 			case VU_TIMER_EVENT:
; 200  : #if !NO_RELEASE_EVENT
; 201  : 			case VU_RELEASE_EVENT:
; 202  : 				// these are not net events... ignore
; 203  : 			break;
; 204  : #endif
; 205  : 			case VU_ERROR_MESSAGE:
; 206  : 				event = new VuErrorMessage(senderid, targetId);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T33[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T33[ebp], 0
	je	SHORT $LN52@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T33[ebp]
	call	??0VuErrorMessage@@QAE@VVU_ID@@0@Z	; VuErrorMessage::VuErrorMessage
	mov	DWORD PTR tv328[ebp], eax
	jmp	SHORT $LN53@MessageRec
$LN52@MessageRec:
	mov	DWORD PTR tv328[ebp], 0
$LN53@MessageRec:
	mov	ecx, DWORD PTR tv328[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 207  : 			break;

	jmp	$LN21@MessageRec
$LN6@MessageRec:

; 208  : 			case VU_REQUEST_DUMMY_BLOCK_MESSAGE:
; 209  : 				event = new VuRequestDummyBlockMessage(senderid, targetId);

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T32[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	cmp	DWORD PTR $T32[ebp], 0
	je	SHORT $LN54@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T32[ebp]
	call	??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
	mov	DWORD PTR tv341[ebp], eax
	jmp	SHORT $LN55@MessageRec
$LN54@MessageRec:
	mov	DWORD PTR tv341[ebp], 0
$LN55@MessageRec:
	mov	ecx, DWORD PTR tv341[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _event$[ebp], edx

; 210  : 			break;

	jmp	SHORT $LN21@MessageRec
$LN5@MessageRec:

; 211  : #if defined(VU_SIMPLE_LATENCY)
; 212  : 			case VU_TIMING_MESSAGE:
; 213  : 				event = new VuTimingMessage(senderid, targetId);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T31[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T31[ebp], 0
	je	SHORT $LN56@MessageRec
	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T31[ebp]
	call	??0VuTimingMessage@@QAE@VVU_ID@@0@Z	; VuTimingMessage::VuTimingMessage
	mov	DWORD PTR tv354[ebp], eax
	jmp	SHORT $LN57@MessageRec
$LN56@MessageRec:
	mov	DWORD PTR tv354[ebp], 0
$LN57@MessageRec:
	mov	ecx, DWORD PTR tv354[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _event$[ebp], edx
$LN21@MessageRec:

; 214  : 			break;
; 215  : #endif
; 216  : 		}
; 217  : 
; 218  : 		if (!event) {

	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN4@MessageRec

; 219  : 			event = VuxCreateMessage(type, senderid, targetId);

	mov	eax, DWORD PTR _targetId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _targetId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	call	?VuxCreateMessage@@YAPAVVuMessage@@EVVU_ID@@0@Z ; VuxCreateMessage
	add	esp, 20					; 00000014H
	mov	DWORD PTR _event$[ebp], eax
$LN4@MessageRec:

; 220  : 		}
; 221  : 		//sfr: we only read events when they have a size!
; 222  : 		//but it would be good to know why message size is 0
; 223  : 		//have to compute message size here
; 224  : 		//for now, comment to force crash and see why we are getting 0 size
; 225  : 		if ((size > 0) && (event != NULL)){

	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN3@MessageRec
	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN3@MessageRec

; 226  : 			long rem = size;

	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _rem$2[ebp], edx

; 227  : 			if (event->Read(data, &rem)) {

	lea	eax, DWORD PTR _rem$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _event$[ebp]
	call	?Read@VuMessage@@IAEHPAPAEPAJ@Z		; VuMessage::Read
	test	eax, eax
	je	SHORT $LN3@MessageRec

; 228  : 				event->SetPostTime(timestamp);

	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _event$[ebp]
	call	?SetPostTime@VuMessage@@QAEXK@Z		; VuMessage::SetPostTime

; 229  : 				VuMessageQueue::PostVuMessage(event);

	mov	eax, DWORD PTR _event$[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN3@MessageRec:

; 230  : 			}
; 231  : 		}
; 232  : 	} 
; 233  : 	else {

	jmp	SHORT $LN1@MessageRec
$LN23@MessageRec:

; 234  : 		*data += size;

	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], edx
$LN1@MessageRec:

; 235  : #ifdef DEBUG_COMMS
; 236  : 		VU_PRINT(": dest = 0x%x -- not posted\n", (short)targetId.creator_);
; 237  : #endif
; 238  : 	}
; 239  : 
; 240  : 	return (event ? 1 : 0);

	cmp	DWORD PTR _event$[ebp], 0
	je	SHORT $LN58@MessageRec
	mov	DWORD PTR tv373[ebp], 1
	jmp	SHORT $LN59@MessageRec
$LN58@MessageRec:
	mov	DWORD PTR tv373[ebp], 0
$LN59@MessageRec:
	mov	eax, DWORD PTR tv373[ebp]

; 241  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN77@MessageRec:
	DD	$LN7@MessageRec
	DD	$LN7@MessageRec
	DD	$LN20@MessageRec
	DD	$LN19@MessageRec
	DD	$LN18@MessageRec
	DD	$LN7@MessageRec
	DD	$LN21@MessageRec
	DD	$LN17@MessageRec
	DD	$LN21@MessageRec
	DD	$LN16@MessageRec
	DD	$LN15@MessageRec
	DD	$LN14@MessageRec
	DD	$LN13@MessageRec
	DD	$LN11@MessageRec
	DD	$LN12@MessageRec
	DD	$LN10@MessageRec
	DD	$LN7@MessageRec
	DD	$LN9@MessageRec
	DD	$LN8@MessageRec
	DD	$LN21@MessageRec
	DD	$LN5@MessageRec
	DD	$LN6@MessageRec
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$0:
	mov	eax, DWORD PTR $T30[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$1:
	mov	eax, DWORD PTR $T29[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$2:
	mov	eax, DWORD PTR $T27[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$3:
	mov	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$4:
	mov	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$5:
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$6:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$7:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$8:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$9:
	mov	eax, DWORD PTR $T28[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$10:
	mov	eax, DWORD PTR $T26[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$11:
	mov	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$12:
	mov	eax, DWORD PTR $T34[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$13:
	mov	eax, DWORD PTR $T33[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$14:
	mov	eax, DWORD PTR $T32[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z$15:
	mov	eax, DWORD PTR $T31[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MessageReceive@@YAHVVU_ID@@VVU_ADDRESS@@0EPAPAEHK@Z ENDP ; MessageReceive
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@SAAAV?$VuBin@VVuEntity@@@@PAU?$_List_node@V?$VuBin@VVuEntity@@@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@SAAAV?$VuBin@VVuEntity@@@@PAU?$_List_node@V?$VuBin@VVuEntity@@@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<VuBin<VuEntity> > >::_Myval, COMDAT

; 546  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 547  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 548  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VVuEntity@@@@@std@@@std@@SAAAV?$VuBin@VVuEntity@@@@PAU?$_List_node@V?$VuBin@VVuEntity@@@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<VuBin<VuEntity> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAIABV?$allocator@V?$VuBin@VVuEntity@@@@@2@@Z ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ; std::allocator<VuBin<VuEntity> >::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ; std::allocator<VuBin<VuEntity> >::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ ; std::allocator<VuBin<VuEntity> >::allocator<VuBin<VuEntity> >

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >::_Wrap_alloc<std::allocator<VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAIABV?$allocator@V?$VuBin@VVuEntity@@@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAIABV?$allocator@V?$VuBin@VVuEntity@@@@@2@@Z PROC ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QBEIXZ ; std::allocator<VuBin<VuEntity> >::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@SAIABV?$allocator@V?$VuBin@VVuEntity@@@@@2@@Z ENDP ; std::allocator_traits<std::allocator<VuBin<VuEntity> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QBEIXZ PROC ; std::allocator<VuBin<VuEntity> >::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QBEIXZ ENDP ; std::allocator<VuBin<VuEntity> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z PROC ; std::allocator<VuBin<VuEntity> >::construct, COMDAT
; _this$ = ecx

; 605  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		::new ((void *)_Ptr) _Ty(_Val);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 607  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@ABV3@@Z ENDP ; std::allocator<VuBin<VuEntity> >::construct
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z PROC ; std::allocator<VuBin<VuEntity> >::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$VuBin@VVuEntity@@@@@std@@YAPAV?$VuBin@VVuEntity@@@@IPAV1@@Z ; std::_Allocate<VuBin<VuEntity> >
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEPAV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::allocator<VuBin<VuEntity> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z PROC ; std::allocator<VuBin<VuEntity> >::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAEXPAV?$VuBin@VVuEntity@@@@I@Z ENDP ; std::allocator<VuBin<VuEntity> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ PROC	; std::allocator<VuBin<VuEntity> >::allocator<VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$VuBin@VVuEntity@@@@@std@@QAE@XZ ENDP	; std::allocator<VuBin<VuEntity> >::allocator<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ PROC ; std::_Iterator_base0::_Getcont, COMDAT
; _this$ = ecx

; 54   : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return (0);

	xor	eax, eax

; 56   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ENDP ; std::_Iterator_base0::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 50   : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z PROC	; std::_Container_base0::_Swap_all, COMDAT
; _this$ = ecx

; 43   : 		{	// swap all iterators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 44   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z ENDP	; std::_Container_base0::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 39   : 		{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 1
?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z PROC	; VuEntity::SetEnqueuedForPositionUpdate, COMDAT
; _this$ = ecx

; 186  : 	void SetEnqueuedForPositionUpdate(bool val){ enqueuedForPositionUpdate = val; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _val$[ebp]
	mov	BYTE PTR [eax+120], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEnqueuedForPositionUpdate@VuEntity@@QAEX_N@Z ENDP	; VuEntity::SetEnqueuedForPositionUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ PROC	; VuEntity::EnqueuedForPositionUpdate, COMDAT
; _this$ = ecx

; 184  : 	bool EnqueuedForPositionUpdate() const { return enqueuedForPositionUpdate; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?EnqueuedForPositionUpdate@VuEntity@@QBE_NXZ ENDP	; VuEntity::EnqueuedForPositionUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ PROC		; VuEntity::EntityDriver, COMDAT
; _this$ = ecx

; 180  : 	VuDriver *EntityDriver()	{ return driver_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityDriver@VuEntity@@QAEPAVVuDriver@@XZ ENDP		; VuEntity::EntityDriver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?LastCollisionCheckTime@VuEntity@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LastCollisionCheckTime@VuEntity@@QBEKXZ PROC		; VuEntity::LastCollisionCheckTime, COMDAT
; _this$ = ecx

; 174  : 	VU_TIME LastCollisionCheckTime() const { return lastCollisionCheckTime_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?LastCollisionCheckTime@VuEntity@@QBEKXZ ENDP		; VuEntity::LastCollisionCheckTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Association@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Association@VuEntity@@QBE?AVVU_ID@@XZ PROC		; VuEntity::Association, COMDAT
; _this$ = ecx

; 156  : 	VU_ID Association()	const { return share_.assoc_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Association@VuEntity@@QBE?AVVU_ID@@XZ ENDP		; VuEntity::Association
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::OwnerId, COMDAT
; _this$ = ecx

; 152  : 	VU_ID OwnerId() const     { return share_.ownerId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::OwnerId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sc$ = 8						; size = 4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z PROC	; VuEntity::SetSendCreate, COMDAT
; _this$ = ecx

; 148  : 	void SetSendCreate(VU_SEND_TYPE sc) { share_.flags_.breakdown_.sendCreate_ = sc; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sc$[ebp]
	and	eax, 3
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, -193				; ffffff3fH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSendCreate@VuEntity@@QAEXW4VU_SEND_TYPE@1@@Z ENDP	; VuEntity::SetSendCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsPersistent@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPersistent@VuEntity@@QBEEXZ PROC			; VuEntity::IsPersistent, COMDAT
; _this$ = ecx

; 139  : 	VU_BOOL IsPersistent() const    { return (VU_BOOL)share_.flags_.breakdown_.persistent_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 5
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPersistent@VuEntity@@QBEEXZ ENDP			; VuEntity::IsPersistent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsGlobal@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGlobal@VuEntity@@QBEEXZ PROC				; VuEntity::IsGlobal, COMDAT
; _this$ = ecx

; 138  : 	VU_BOOL IsGlobal() const        { return (VU_BOOL)share_.flags_.breakdown_.global_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 4
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGlobal@VuEntity@@QBEEXZ ENDP				; VuEntity::IsGlobal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsTransferrable@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTransferrable@VuEntity@@QBEEXZ PROC			; VuEntity::IsTransferrable, COMDAT
; _this$ = ecx

; 135  : 	VU_BOOL IsTransferrable() const {return (VU_BOOL)share_.flags_.breakdown_.transfer_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 1
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTransferrable@VuEntity@@QBEEXZ ENDP			; VuEntity::IsTransferrable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Domain@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Domain@VuEntity@@QBEEXZ PROC				; VuEntity::Domain, COMDAT
; _this$ = ecx

; 132  : 	VU_BYTE Domain() const { return domain_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?Domain@VuEntity@@QBEEXZ ENDP				; VuEntity::Domain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetCollisionCheckTime@VuEntity@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_currentTime$ = 8					; size = 4
?SetCollisionCheckTime@VuEntity@@QAEXK@Z PROC		; VuEntity::SetCollisionCheckTime, COMDAT
; _this$ = ecx

; 121  : 	void SetCollisionCheckTime(VU_TIME currentTime){ lastCollisionCheckTime_ = currentTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _currentTime$[ebp]
	mov	DWORD PTR [eax+104], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCollisionCheckTime@VuEntity@@QAEXK@Z ENDP		; VuEntity::SetCollisionCheckTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ADDRESS@@QAE@KGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ip$ = 8						; size = 4
_recvPort$ = 12						; size = 2
_reliableRecvPort$ = 16					; size = 2
??0VU_ADDRESS@@QAE@KGG@Z PROC				; VU_ADDRESS::VU_ADDRESS, COMDAT
; _this$ = ecx

; 189  : 	VU_ADDRESS(

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 		unsigned long ip = 0,                                //< entity IP
; 191  : 		unsigned short recvPort = 0,//CAPI_UDP_PORT,         //< port where he receives
; 192  : 		unsigned short reliableRecvPort = 0 //CAPI_TCP_PORT  //< port where he receives reliable data
; 193  : 	){
; 194  : 		this->ip = ip;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ip$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 195  : 		this->recvPort = recvPort;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _recvPort$[ebp]
	mov	WORD PTR [edx], ax

; 196  : 		this->reliableRecvPort = reliableRecvPort;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _reliableRecvPort$[ebp]
	mov	WORD PTR [ecx+2], dx

; 197  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VU_ADDRESS@@QAE@KGG@Z ENDP				; VU_ADDRESS::VU_ADDRESS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sessionpart$ = 8					; size = 4
_idpart$ = 12						; size = 4
??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z PROC			; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 101  : 	VU_ID(VU_SESSION_ID sessionpart, VU_ID_NUMBER idpart) : num_(idpart), creator_(sessionpart){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idpart$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _sessionpart$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z ENDP			; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??9VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator!=, COMDAT
; _this$ = ecx

; 59   : 	int operator != (const VU_SESSION_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		return (value_ != rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 61   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
END
